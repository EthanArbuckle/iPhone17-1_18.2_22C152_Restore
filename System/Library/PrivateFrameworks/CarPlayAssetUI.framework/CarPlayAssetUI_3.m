uint64_t sub_249A109A8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return MeasurementLabelConfiguration.init(from:)(a1, a2);
}

uint64_t sub_249A109C0(void *a1)
{
  return MeasurementLabelConfiguration.encode(to:)(a1);
}

uint64_t sub_249A109D8()
{
  sub_249AEE338();
  MeasurementLabelConfiguration.hash(into:)((uint64_t)v1);
  return sub_249AEE388();
}

uint64_t sub_249A10A1C()
{
  sub_249AEE338();
  MeasurementLabelConfiguration.hash(into:)((uint64_t)v1);
  return sub_249AEE388();
}

uint64_t static MeasurementLabelConfiguration.ColorIDs.single(_:redacted:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  char v8 = *(unsigned char *)(a2 + 16);
  v20[0] = *(void *)a1;
  v20[1] = v4;
  char v21 = v7;
  v18[0] = v20[0];
  v18[1] = v4;
  char v19 = v7;
  v16[0] = v20[0];
  v16[1] = v4;
  char v17 = v7;
  v14[0] = v5;
  v14[1] = v6;
  char v15 = v8;
  v12[0] = v5;
  v12[1] = v6;
  char v13 = v8;
  v10[0] = v5;
  v10[1] = v6;
  char v11 = v8;
  sub_24988D770(v20[0], v4, v7);
  sub_24988D770(v5, v6, v8);
  sub_24988D770(v20[0], v4, v7);
  sub_24988D770(v5, v6, v8);
  sub_24988D770(v20[0], v4, v7);
  sub_24988D770(v5, v6, v8);
  return MeasurementLabelConfiguration.ColorIDs.init(iconColorID:valueColorID:unitColorID:iconRedactedColorID:valueRedactedColorID:unitRedactedColorID:)(v20, v18, v16, v14, v12, v10, a3);
}

uint64_t sub_249A10B5C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t _s14CarPlayAssetUI29MeasurementLabelConfigurationV8ColorIDsV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v46 = *(void *)(a1 + 8);
  uint64_t v35 = *(void *)(a1 + 24);
  uint64_t v36 = *(void *)(a1 + 32);
  uint64_t v42 = *(void *)(a1 + 48);
  uint64_t v43 = *(void *)(a1 + 56);
  uint64_t v44 = *(void *)(a1 + 16);
  char v37 = *(unsigned char *)(a1 + 40);
  char v38 = *(unsigned char *)(a1 + 64);
  uint64_t v40 = *(void *)(a1 + 80);
  uint64_t v41 = *(void *)(a1 + 72);
  char v39 = *(unsigned char *)(a1 + 88);
  uint64_t v45 = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v2 = *(void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 32);
  char v5 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 56);
  char v8 = *(unsigned char *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 72);
  uint64_t v10 = *(void *)(a2 + 80);
  char v11 = *(unsigned char *)(a2 + 88);
  if ((sub_2499FEF30(*(void *)a1, *(void *)a2) & 1) != 0
    && (uint64_t v32 = v6, v33 = v7, v34 = v8, (sub_2499FEF30(v46, v45) & 1) != 0)
    && (sub_2499FEF30(v44, v3) & 1) != 0)
  {
    sub_24988D770(v35, v36, v37);
    sub_24988D770(v2, v4, v5);
    uint64_t v12 = Theme.ColorID.rawValue.getter();
    uint64_t v14 = v13;
    if (v12 == Theme.ColorID.rawValue.getter() && v14 == v15)
    {
      swift_bridgeObjectRelease_n();
      sub_24988D788(v2, v4, v5);
      sub_24988D788(v35, v36, v37);
      uint64_t v17 = v40;
      uint64_t v16 = v41;
      char v18 = v38;
      char v19 = v39;
    }
    else
    {
      char v22 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24988D788(v2, v4, v5);
      sub_24988D788(v35, v36, v37);
      char v20 = 0;
      uint64_t v17 = v40;
      uint64_t v16 = v41;
      char v18 = v38;
      char v19 = v39;
      if ((v22 & 1) == 0) {
        return v20 & 1;
      }
    }
    sub_24988D770(v42, v43, v18);
    sub_24988D770(v32, v33, v34);
    uint64_t v23 = Theme.ColorID.rawValue.getter();
    uint64_t v25 = v24;
    if (v23 == Theme.ColorID.rawValue.getter() && v25 == v26)
    {
      swift_bridgeObjectRelease_n();
      sub_24988D788(v32, v33, v34);
      sub_24988D788(v42, v43, v18);
    }
    else
    {
      char v27 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24988D788(v32, v33, v34);
      sub_24988D788(v42, v43, v18);
      char v20 = 0;
      if ((v27 & 1) == 0) {
        return v20 & 1;
      }
    }
    sub_24988D770(v16, v17, v19);
    sub_24988D770(v9, v10, v11);
    uint64_t v28 = Theme.ColorID.rawValue.getter();
    uint64_t v30 = v29;
    if (v28 == Theme.ColorID.rawValue.getter() && v30 == v31) {
      char v20 = 1;
    }
    else {
      char v20 = sub_249AEE0D8();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24988D788(v9, v10, v11);
    sub_24988D788(v16, v17, v19);
  }
  else
  {
    char v20 = 0;
  }
  return v20 & 1;
}

BOOL _s14CarPlayAssetUI29MeasurementLabelConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void **)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 33);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  long long v99 = *(_OWORD *)(a1 + 56);
  v98 = *(void **)(a1 + 72);
  uint64_t v97 = *(void *)(a1 + 80);
  uint64_t v96 = *(void *)(a1 + 88);
  char v95 = *(unsigned char *)(a1 + 96);
  uint64_t v94 = *(void *)(a1 + 104);
  uint64_t v93 = *(void *)(a1 + 112);
  char v92 = *(unsigned char *)(a1 + 120);
  uint64_t v91 = *(void *)(a1 + 128);
  uint64_t v90 = *(void *)(a1 + 136);
  char v89 = *(unsigned char *)(a1 + 144);
  uint64_t v77 = *(void *)(a1 + 152);
  uint64_t v70 = *(void *)(a1 + 160);
  uint64_t v72 = *(void *)(a1 + 168);
  uint64_t v71 = *(void *)(a1 + 176);
  uint64_t v66 = *(void *)(a1 + 184);
  long long v61 = *(_OWORD *)(a1 + 192);
  v65 = *(void **)(a1 + 208);
  uint64_t v62 = *(void *)(a1 + 216);
  uint64_t v63 = *(void *)(a1 + 224);
  uint64_t v64 = *(void *)(a1 + 232);
  uint64_t v60 = *(void *)(a1 + 240);
  LOBYTE(v111) = *(unsigned char *)a1;
  uint64_t v74 = *(void *)(a1 + 248);
  float v9 = *(float *)(a1 + 256);
  float v10 = *(float *)(a1 + 260);
  float v11 = *(float *)(a1 + 264);
  *((void *)&v111 + 1) = v3;
  v112 = v2;
  float v12 = *(float *)(a1 + 268);
  char v75 = *(unsigned char *)(a1 + 272);
  int v73 = *(unsigned __int8 *)(a1 + 273);
  LOBYTE(v2) = *(unsigned char *)a2;
  LOBYTE(v114) = v5;
  BYTE1(v114) = v6;
  uint64_t v13 = *(void *)(a2 + 8);
  uint64_t v14 = *(void **)(a2 + 16);
  uint64_t v15 = *(void *)(a2 + 24);
  uint64_t v115 = v7;
  uint64_t v116 = v8;
  LOBYTE(v7) = *(unsigned char *)(a2 + 32);
  LOBYTE(v8) = *(unsigned char *)(a2 + 33);
  LOBYTE(v100) = (_BYTE)v2;
  *((void *)&v100 + 1) = v13;
  v101 = v14;
  uint64_t v16 = *(void *)(a2 + 40);
  uint64_t v17 = *(void *)(a2 + 48);
  long long v78 = *(_OWORD *)(a2 + 56);
  LOBYTE(v103) = v7;
  v88 = *(void **)(a2 + 72);
  uint64_t v83 = *(void *)(a2 + 80);
  BYTE1(v103) = v8;
  uint64_t v18 = *(void *)(a2 + 88);
  uint64_t v104 = v16;
  uint64_t v105 = v17;
  char v87 = *(unsigned char *)(a2 + 96);
  float v19 = *(float *)(a2 + 256);
  float v20 = *(float *)(a2 + 260);
  float v21 = *(float *)(a2 + 264);
  float v22 = *(float *)(a2 + 268);
  int v59 = *(unsigned __int8 *)(a2 + 272);
  uint64_t v85 = *(void *)(a2 + 104);
  uint64_t v86 = v18;
  uint64_t v84 = *(void *)(a2 + 112);
  char v82 = *(unsigned char *)(a2 + 120);
  uint64_t v80 = *(void *)(a2 + 136);
  uint64_t v81 = *(void *)(a2 + 128);
  char v79 = *(unsigned char *)(a2 + 144);
  uint64_t v76 = *(void *)(a2 + 152);
  uint64_t v67 = *(void *)(a2 + 160);
  uint64_t v68 = *(void *)(a2 + 168);
  uint64_t v23 = *(void *)(a2 + 184);
  uint64_t v69 = *(void *)(a2 + 176);
  uint64_t v25 = *(void *)(a2 + 192);
  uint64_t v24 = *(void *)(a2 + 200);
  uint64_t v26 = *(void **)(a2 + 208);
  uint64_t v27 = *(void *)(a2 + 216);
  uint64_t v29 = *(void *)(a2 + 224);
  uint64_t v28 = *(void *)(a2 + 232);
  uint64_t v30 = *(void *)(a2 + 240);
  uint64_t v31 = *(void *)(a2 + 248);
  int v32 = *(unsigned __int8 *)(a2 + 273);
  uint64_t v113 = v4;
  uint64_t v102 = v15;
  if ((_s14CarPlayAssetUI14InstrumentFontV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v111, (uint64_t)&v100) & 1) == 0) {
    return 0;
  }
  v54 = v26;
  uint64_t v58 = v27;
  uint64_t v56 = v28;
  uint64_t v57 = v30;
  uint64_t v55 = v31;
  long long v111 = v99;
  v112 = v98;
  uint64_t v113 = v97;
  uint64_t v114 = v96;
  LOBYTE(v115) = v95;
  uint64_t v116 = v94;
  uint64_t v117 = v93;
  char v118 = v92;
  uint64_t v119 = v91;
  uint64_t v120 = v90;
  char v121 = v89;
  long long v100 = v78;
  v101 = v88;
  uint64_t v102 = v83;
  uint64_t v103 = v86;
  LOBYTE(v104) = v87;
  uint64_t v105 = v85;
  uint64_t v106 = v84;
  char v107 = v82;
  uint64_t v108 = v81;
  uint64_t v109 = v80;
  char v110 = v79;
  char v33 = _s14CarPlayAssetUI29MeasurementLabelConfigurationV8ColorIDsV2eeoiySbAE_AEtFZ_0((uint64_t)&v111, (uint64_t)&v100);
  BOOL result = 0;
  if ((v33 & 1) == 0) {
    return result;
  }
  if (v77 != v76) {
    return result;
  }
  char v35 = v75;
  uint64_t v36 = v74;
  uint64_t v37 = v55;
  uint64_t v39 = v24;
  uint64_t v38 = v58;
  uint64_t v40 = v25;
  if (v70 != v67) {
    return result;
  }
  if (v71)
  {
    if (!v69) {
      return 0;
    }
    if (v72 != v68 || v71 != v69)
    {
      char v41 = sub_249AEE0D8();
      uint64_t v40 = v25;
      uint64_t v39 = v24;
      uint64_t v38 = v58;
      char v42 = v41;
      BOOL result = 0;
      if ((v42 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v69)
  {
    return 0;
  }
  if (v66)
  {
    if (!v23) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v43 = swift_bridgeObjectRetain();
    char v44 = sub_2499FF734(v43, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v40 = v25;
    uint64_t v39 = v24;
    uint64_t v38 = v58;
    if ((v44 & 1) == 0) {
      return 0;
    }
  }
  else if (v23)
  {
    return 0;
  }
  if (v65)
  {
    long long v111 = v61;
    v112 = v65;
    uint64_t v113 = v62;
    uint64_t v114 = v63;
    uint64_t v115 = v64;
    uint64_t v116 = v60;
    uint64_t v45 = v54;
    if (v54)
    {
      LOBYTE(v100) = v40;
      *((void *)&v100 + 1) = v39;
      v101 = v54;
      uint64_t v102 = v38;
      LOWORD(v103) = v29 & 0x101;
      uint64_t v104 = v56;
      uint64_t v105 = v57;
      id v46 = v65;
      swift_bridgeObjectRetain_n();
      id v47 = v46;
      LOBYTE(v46) = _s14CarPlayAssetUI14InstrumentFontV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v111, (uint64_t)&v100);
      v48 = v112;
      swift_bridgeObjectRelease();

      char v35 = v75;
      sub_24989CF3C(v61, *((uint64_t *)&v61 + 1), v65);
      uint64_t v36 = v74;
      uint64_t v37 = v55;
      if (v46) {
        goto LABEL_22;
      }
      return 0;
    }
    id v51 = v65;
    swift_bridgeObjectRetain();
    uint64_t v40 = v25;
    uint64_t v39 = v24;
LABEL_30:
    uint64_t v52 = v39;
    uint64_t v53 = v40;
    sub_24989CD14(v40, v39, v45);
    sub_24989CF3C(v61, *((uint64_t *)&v61 + 1), v65);
    sub_24989CF3C(v53, v52, v45);
    return 0;
  }
  uint64_t v45 = v54;
  if (v54) {
    goto LABEL_30;
  }
LABEL_22:
  char v49 = sub_249A00DE0(v36, v37);
  BOOL result = 0;
  if ((v49 & 1) != 0 && v9 == v19 && v10 == v20)
  {
    char v50 = v59;
    if (v11 == v21)
    {
      if (v35)
      {
        if (v59) {
          return v73 == v32;
        }
      }
      else
      {
        if (v12 != v22) {
          char v50 = 1;
        }
        if ((v50 & 1) == 0) {
          return v73 == v32;
        }
      }
      return 0;
    }
  }
  return result;
}

unint64_t sub_249A114E4()
{
  unint64_t result = qword_2696E3810;
  if (!qword_2696E3810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3810);
  }
  return result;
}

unint64_t sub_249A11538()
{
  unint64_t result = qword_2696E3838;
  if (!qword_2696E3838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3838);
  }
  return result;
}

unint64_t sub_249A1158C()
{
  unint64_t result = qword_2696E3840;
  if (!qword_2696E3840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3840);
  }
  return result;
}

uint64_t sub_249A115E0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DDF30);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249A1165C()
{
  unint64_t result = qword_2696E3848;
  if (!qword_2696E3848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3848);
  }
  return result;
}

unint64_t sub_249A116B0()
{
  unint64_t result = qword_2696E3858;
  if (!qword_2696E3858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3858);
  }
  return result;
}

unint64_t sub_249A11704()
{
  unint64_t result = qword_2696E3868;
  if (!qword_2696E3868)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E3860);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3868);
  }
  return result;
}

unint64_t sub_249A11760()
{
  unint64_t result = qword_2696E3870;
  if (!qword_2696E3870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3870);
  }
  return result;
}

unint64_t sub_249A117B8()
{
  unint64_t result = qword_2696E3878;
  if (!qword_2696E3878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3878);
  }
  return result;
}

unint64_t sub_249A11810()
{
  unint64_t result = qword_2696E3880;
  if (!qword_2696E3880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3880);
  }
  return result;
}

unint64_t sub_249A11870()
{
  unint64_t result = qword_2696E3888;
  if (!qword_2696E3888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3888);
  }
  return result;
}

float sub_249A118CC@<S0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  float result = *(float *)(a1 + 264);
  *a2 = result;
  return result;
}

float sub_249A118D8(float *a1, uint64_t a2)
{
  float result = *a1;
  *(float *)(a2 + 264) = *a1;
  return result;
}

uint64_t destroy for MeasurementLabelConfiguration(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24988D788(*(void *)(a1 + 80), *(void *)(a1 + 88), *(unsigned char *)(a1 + 96));
  sub_24988D788(*(void *)(a1 + 104), *(void *)(a1 + 112), *(unsigned char *)(a1 + 120));
  sub_24988D788(*(void *)(a1 + 128), *(void *)(a1 + 136), *(unsigned char *)(a1 + 144));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 208);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MeasurementLabelConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 88);
  char v9 = *(unsigned char *)(a2 + 96);
  id v10 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988D770(v7, v8, v9);
  *(void *)(a1 + 80) = v7;
  *(void *)(a1 + 88) = v8;
  *(unsigned char *)(a1 + 96) = v9;
  uint64_t v11 = *(void *)(a2 + 104);
  uint64_t v12 = *(void *)(a2 + 112);
  LOBYTE(v6) = *(unsigned char *)(a2 + 120);
  sub_24988D770(v11, v12, v6);
  *(void *)(a1 + 104) = v11;
  *(void *)(a1 + 112) = v12;
  *(unsigned char *)(a1 + 120) = v6;
  uint64_t v13 = *(void *)(a2 + 128);
  uint64_t v14 = *(void *)(a2 + 136);
  LOBYTE(v6) = *(unsigned char *)(a2 + 144);
  sub_24988D770(v13, v14, v6);
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 136) = v14;
  *(unsigned char *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  uint64_t v15 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v15;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  uint64_t v16 = *(void **)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16)
  {
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = v16;
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(_WORD *)(a1 + 224) = *(_WORD *)(a2 + 224);
    uint64_t v17 = *(void *)(a2 + 240);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = v17;
    id v18 = v16;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v19;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
  }
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
  *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
  *(_WORD *)(a1 + 272) = *(_WORD *)(a2 + 272);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MeasurementLabelConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 88);
  char v9 = *(unsigned char *)(a2 + 96);
  sub_24988D770(v7, v8, v9);
  uint64_t v10 = *(void *)(a1 + 80);
  uint64_t v11 = *(void *)(a1 + 88);
  *(void *)(a1 + 80) = v7;
  *(void *)(a1 + 88) = v8;
  char v12 = *(unsigned char *)(a1 + 96);
  *(unsigned char *)(a1 + 96) = v9;
  sub_24988D788(v10, v11, v12);
  uint64_t v13 = *(void *)(a2 + 104);
  uint64_t v14 = *(void *)(a2 + 112);
  char v15 = *(unsigned char *)(a2 + 120);
  sub_24988D770(v13, v14, v15);
  uint64_t v16 = *(void *)(a1 + 104);
  uint64_t v17 = *(void *)(a1 + 112);
  *(void *)(a1 + 104) = v13;
  *(void *)(a1 + 112) = v14;
  char v18 = *(unsigned char *)(a1 + 120);
  *(unsigned char *)(a1 + 120) = v15;
  sub_24988D788(v16, v17, v18);
  uint64_t v19 = *(void *)(a2 + 128);
  uint64_t v20 = *(void *)(a2 + 136);
  char v21 = *(unsigned char *)(a2 + 144);
  sub_24988D770(v19, v20, v21);
  uint64_t v22 = *(void *)(a1 + 128);
  uint64_t v23 = *(void *)(a1 + 136);
  *(void *)(a1 + 128) = v19;
  *(void *)(a1 + 136) = v20;
  char v24 = *(unsigned char *)(a1 + 144);
  *(unsigned char *)(a1 + 144) = v21;
  sub_24988D788(v22, v23, v24);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = (_OWORD *)(a1 + 192);
  uint64_t v26 = (long long *)(a2 + 192);
  uint64_t v27 = *(void **)(a1 + 208);
  uint64_t v28 = *(void *)(a2 + 208);
  if (v27)
  {
    if (v28)
    {
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      uint64_t v29 = *(void **)(a2 + 208);
      *(void *)(a1 + 208) = v29;
      id v30 = v29;

      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
      *(unsigned char *)(a1 + 225) = *(unsigned char *)(a2 + 225);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24989E520(a1 + 192);
      long long v34 = *(_OWORD *)(a2 + 208);
      long long v33 = *(_OWORD *)(a2 + 224);
      long long v35 = *v26;
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(_OWORD *)(a1 + 208) = v34;
      *(_OWORD *)(a1 + 224) = v33;
      *uint64_t v25 = v35;
    }
  }
  else if (v28)
  {
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    uint64_t v31 = *(void **)(a2 + 208);
    *(void *)(a1 + 208) = v31;
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
    *(unsigned char *)(a1 + 225) = *(unsigned char *)(a2 + 225);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    id v32 = v31;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v36 = *v26;
    long long v37 = *(_OWORD *)(a2 + 208);
    long long v38 = *(_OWORD *)(a2 + 224);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(_OWORD *)(a1 + 208) = v37;
    *(_OWORD *)(a1 + 224) = v38;
    *uint64_t v25 = v36;
  }
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  *(_DWORD *)(a1 + 260) = *(_DWORD *)(a2 + 260);
  *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
  int v39 = *(_DWORD *)(a2 + 268);
  *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
  *(_DWORD *)(a1 + 268) = v39;
  *(unsigned char *)(a1 + 273) = *(unsigned char *)(a2 + 273);
  return a1;
}

void *__swift_memcpy274_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x112uLL);
}

uint64_t assignWithTake for MeasurementLabelConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  char v7 = *(unsigned char *)(a2 + 96);
  uint64_t v8 = *(void *)(a1 + 80);
  uint64_t v9 = *(void *)(a1 + 88);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  char v10 = *(unsigned char *)(a1 + 96);
  *(unsigned char *)(a1 + 96) = v7;
  sub_24988D788(v8, v9, v10);
  char v11 = *(unsigned char *)(a2 + 120);
  uint64_t v12 = *(void *)(a1 + 104);
  uint64_t v13 = *(void *)(a1 + 112);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  char v14 = *(unsigned char *)(a1 + 120);
  *(unsigned char *)(a1 + 120) = v11;
  sub_24988D788(v12, v13, v14);
  char v15 = *(unsigned char *)(a2 + 144);
  uint64_t v16 = *(void *)(a1 + 128);
  uint64_t v17 = *(void *)(a1 + 136);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  char v18 = *(unsigned char *)(a1 + 144);
  *(unsigned char *)(a1 + 144) = v15;
  sub_24988D788(v16, v17, v18);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  uint64_t v19 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v19;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void **)(a1 + 208);
  if (!v20) {
    goto LABEL_5;
  }
  uint64_t v21 = *(void *)(a2 + 208);
  if (!v21)
  {
    sub_24989E520(a1 + 192);
LABEL_5:
    long long v23 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v23;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    goto LABEL_6;
  }
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v21;

  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  *(unsigned char *)(a1 + 225) = *(unsigned char *)(a2 + 225);
  uint64_t v22 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v22;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
  *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
  *(_WORD *)(a1 + 272) = *(_WORD *)(a2 + 272);
  return a1;
}

uint64_t getEnumTagSinglePayload for MeasurementLabelConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 274)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MeasurementLabelConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 272) = 0;
    *(void *)float result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 274) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 274) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MeasurementLabelConfiguration()
{
  return &type metadata for MeasurementLabelConfiguration;
}

uint64_t destroy for MeasurementLabelConfiguration.ColorIDs(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24988D788(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  sub_24988D788(*(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  char v4 = *(unsigned char *)(a1 + 88);

  return sub_24988D788(v2, v3, v4);
}

uint64_t initializeWithCopy for MeasurementLabelConfiguration.ColorIDs(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988D770(v5, v6, v7);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(v2 + 48);
  uint64_t v9 = *(void *)(v2 + 56);
  LOBYTE(v5) = *(unsigned char *)(v2 + 64);
  sub_24988D770(v8, v9, v5);
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v5;
  uint64_t v10 = *(void *)(v2 + 72);
  uint64_t v11 = *(void *)(v2 + 80);
  LOBYTE(v2) = *(unsigned char *)(v2 + 88);
  sub_24988D770(v10, v11, v2);
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = v11;
  *(unsigned char *)(a1 + 88) = v2;
  return a1;
}

uint64_t assignWithCopy for MeasurementLabelConfiguration.ColorIDs(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = v2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  char v6 = *((unsigned char *)v2 + 40);
  sub_24988D770(v4, v5, v6);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  char v9 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v6;
  sub_24988D788(v7, v8, v9);
  uint64_t v10 = v2[6];
  uint64_t v11 = v2[7];
  char v12 = *((unsigned char *)v2 + 64);
  sub_24988D770(v10, v11, v12);
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  char v15 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = v12;
  sub_24988D788(v13, v14, v15);
  uint64_t v16 = v2[9];
  uint64_t v17 = v2[10];
  LOBYTE(v2) = *((unsigned char *)v2 + 88);
  sub_24988D770(v16, v17, (char)v2);
  uint64_t v18 = *(void *)(a1 + 72);
  uint64_t v19 = *(void *)(a1 + 80);
  *(void *)(a1 + 72) = v16;
  *(void *)(a1 + 80) = v17;
  char v20 = *(unsigned char *)(a1 + 88);
  *(unsigned char *)(a1 + 88) = (_BYTE)v2;
  sub_24988D788(v18, v19, v20);
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for MeasurementLabelConfiguration.ColorIDs(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  char v7 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_24988D788(v5, v6, v7);
  char v8 = *(unsigned char *)(a2 + 64);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  char v11 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = v8;
  sub_24988D788(v9, v10, v11);
  char v12 = *(unsigned char *)(a2 + 88);
  uint64_t v13 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  char v15 = *(unsigned char *)(a1 + 88);
  *(unsigned char *)(a1 + 88) = v12;
  sub_24988D788(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for MeasurementLabelConfiguration.ColorIDs(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 89)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MeasurementLabelConfiguration.ColorIDs(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 89) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MeasurementLabelConfiguration.ColorIDs()
{
  return &type metadata for MeasurementLabelConfiguration.ColorIDs;
}

unsigned char *storeEnumTagSinglePayload for MeasurementLabelConfiguration.Alignment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A12550);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MeasurementLabelConfiguration.Alignment()
{
  return &type metadata for MeasurementLabelConfiguration.Alignment;
}

uint64_t getEnumTagSinglePayload for MeasurementLabelConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MeasurementLabelConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *__n128 result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A126E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MeasurementLabelConfiguration.CodingKeys()
{
  return &type metadata for MeasurementLabelConfiguration.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for MeasurementLabelConfiguration.ColorIDs.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A127E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MeasurementLabelConfiguration.ColorIDs.CodingKeys()
{
  return &type metadata for MeasurementLabelConfiguration.ColorIDs.CodingKeys;
}

unint64_t sub_249A12824()
{
  unint64_t result = qword_2696E3890;
  if (!qword_2696E3890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3890);
  }
  return result;
}

unint64_t sub_249A1287C()
{
  unint64_t result = qword_2696E3898;
  if (!qword_2696E3898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3898);
  }
  return result;
}

unint64_t sub_249A128D4()
{
  unint64_t result = qword_2696E38A0;
  if (!qword_2696E38A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E38A0);
  }
  return result;
}

unint64_t sub_249A1292C()
{
  unint64_t result = qword_2696E38A8;
  if (!qword_2696E38A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E38A8);
  }
  return result;
}

unint64_t sub_249A12984()
{
  unint64_t result = qword_2696E38B0;
  if (!qword_2696E38B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E38B0);
  }
  return result;
}

unint64_t sub_249A129DC()
{
  unint64_t result = qword_2696E38B8;
  if (!qword_2696E38B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E38B8);
  }
  return result;
}

uint64_t sub_249A12A30(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F6C6F436E6F6369 && a2 == 0xEC00000073444972;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F4365756C6176 && a2 == 0xED0000734449726FLL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6C6F4374696E75 && a2 == 0xEC00000073444972 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000249B16E50 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000249B16E70 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000249B16E90)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_249A12CE4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1953394534 && a2 == 0xE400000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x734449726F6C6F63 && a2 == 0xE800000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F69736963657270 && a2 == 0xE90000000000006ELL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x72656469766964 && a2 == 0xE700000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000249B16EB0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6562614C74696E75 && a2 == 0xEA0000000000736CLL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746E6F4674696E75 && a2 == 0xE800000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6C75666574617473 && a2 == 0xEE00736567616D49 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6461506567616D69 && a2 == 0xEC000000676E6964 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6170536C6562616CLL && a2 == 0xEC000000676E6963 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x664F5965756C6176 && a2 == 0xEC00000074657366 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x61725465756C6176 && a2 == 0xED0000676E696B63 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6E656D6E67696C61 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

unint64_t sub_249A1329C()
{
  unint64_t result = qword_2696E38C0;
  if (!qword_2696E38C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E38C0);
  }
  return result;
}

uint64_t sub_249A132F0()
{
  sub_2498826E4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_249A13330(uint64_t a1)
{
  return a1;
}

uint64_t destroy for InputAnimationEffect(uint64_t a1)
{
  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(a1 + 24);
  char v3 = *(unsigned char *)(a1 + 33);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 32);

  return sub_2499A8720(v2, v4, v3);
}

uint64_t initializeWithCopy for InputAnimationEffect(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 33);
  uint64_t v5 = *(unsigned __int8 *)(a2 + 32);
  swift_retain();
  swift_retain();
  sub_2499A84FC(v3, v5, v4);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 33) = v4;
  return a1;
}

uint64_t assignWithCopy for InputAnimationEffect(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  char v5 = *(unsigned char *)(a2 + 33);
  uint64_t v6 = *(unsigned __int8 *)(a2 + 32);
  sub_2499A84FC(v4, v6, v5);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 33);
  *(void *)(a1 + 24) = v4;
  uint64_t v9 = *(unsigned __int8 *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 33) = v5;
  sub_2499A8720(v7, v9, v8);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for InputAnimationEffect(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  char v4 = *(unsigned char *)(a2 + 32);
  char v5 = *(unsigned char *)(a2 + 33);
  uint64_t v6 = *(void *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 33);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v8 = *(unsigned __int8 *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 33) = v5;
  sub_2499A8720(v6, v8, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for InputAnimationEffect(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 34)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InputAnimationEffect(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 34) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InputAnimationEffect()
{
  return &type metadata for InputAnimationEffect;
}

uint64_t sub_249A135F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249A13614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E38C8);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E38D0);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_249AECC58();
  long long v28 = *(_OWORD *)(v2 + 1);
  long long v26 = *(_OWORD *)(v2 + 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E38D8);
  sub_249AECA58();
  int v15 = v27;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E38E0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v9, a1, v16);
  uint64_t v17 = &v9[*(int *)(v7 + 44)];
  *(void *)uint64_t v17 = v14;
  *((_DWORD *)v17 + 2) = v15;
  uint64_t v27 = *v3;
  uint64_t v18 = v27;
  *(void *)&long long v26 = v3[3];
  WORD4(v26) = *((_WORD *)v3 + 16);
  uint64_t v19 = swift_allocObject();
  long long v20 = *((_OWORD *)v3 + 1);
  *(_OWORD *)(v19 + 16) = *(_OWORD *)v3;
  *(_OWORD *)(v19 + 32) = v20;
  *(_WORD *)(v19 + 48) = *((_WORD *)v3 + 16);
  sub_2498D6084((uint64_t)v9, (uint64_t)v13, &qword_2696E38C8);
  *(void *)&v13[*(int *)(v11 + 60)] = v18;
  uint64_t v21 = (uint64_t (**)(uint64_t))&v13[*(int *)(v11 + 64)];
  *uint64_t v21 = sub_249A13A3C;
  v21[1] = (uint64_t (*)(uint64_t))v19;
  swift_retain();
  sub_24994FD6C((uint64_t)&v27);
  sub_249A13A44((uint64_t)&v28);
  sub_249A13A70((uint64_t)&v26);
  sub_2498D60E8((uint64_t)v9, &qword_2696E38C8);
  uint64_t v22 = swift_allocObject();
  long long v23 = *((_OWORD *)v3 + 1);
  *(_OWORD *)(v22 + 16) = *(_OWORD *)v3;
  *(_OWORD *)(v22 + 32) = v23;
  *(_WORD *)(v22 + 48) = *((_WORD *)v3 + 16);
  sub_2498D6084((uint64_t)v13, a2, &qword_2696E38D0);
  char v24 = (uint64_t (**)(uint64_t))(a2
                                         + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E38E8) + 36));
  *char v24 = sub_249A13AF8;
  v24[1] = (uint64_t (*)(uint64_t))v22;
  sub_24994FD6C((uint64_t)&v27);
  sub_249A13A44((uint64_t)&v28);
  sub_249A13A70((uint64_t)&v26);
  return sub_2498D60E8((uint64_t)v13, &qword_2696E38D0);
}

uint64_t sub_249A138BC(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 8);
  sub_249A13B00((uint64_t)&v3 + 8, (uint64_t)v4);
  sub_24994FD6C((uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E38D8);
  sub_249AECA58();
  sub_249AECA68();
  return sub_2498D5C64((uint64_t)&v3);
}

uint64_t sub_249A13950(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 24);
  uint64_t v3 = *(unsigned __int8 *)(a2 + 32);
  int v4 = *(unsigned __int8 *)(a2 + 33);
  sub_2499A84FC(v2, v3, v4);
  sub_2499A6B1C(v2, v3 | (v4 << 8));
  char v6 = v5;
  uint64_t result = sub_2499A8720(v2, v3, v4);
  if ((v6 & 1) == 0)
  {
    sub_249AEBB58();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E38D8);
    sub_249AECA58();
    return sub_249AEBB48();
  }
  return result;
}

uint64_t sub_249A13A3C(uint64_t a1)
{
  return sub_249A138BC(a1, v1 + 16);
}

uint64_t sub_249A13A44(uint64_t a1)
{
  return a1;
}

uint64_t sub_249A13A70(uint64_t a1)
{
  return a1;
}

uint64_t objectdestroyTm_1()
{
  swift_release();
  swift_release();
  sub_2499A8720(*(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(unsigned char *)(v0 + 49));

  return MEMORY[0x270FA0238](v0, 50, 7);
}

uint64_t sub_249A13AF8(uint64_t a1)
{
  return sub_249A13950(a1, v1 + 16);
}

uint64_t sub_249A13B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E38F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_249A13B6C()
{
  unint64_t result = qword_2696E38F8;
  if (!qword_2696E38F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E38E8);
    sub_249A13BE8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E38F8);
  }
  return result;
}

unint64_t sub_249A13BE8()
{
  unint64_t result = qword_2696E3900;
  if (!qword_2696E3900)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E38D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3900);
  }
  return result;
}

uint64_t PopoverModel.isFocusable.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PopoverModel(0) + 20));
}

uint64_t type metadata accessor for PopoverModel(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696E3918);
}

uint64_t sub_249A13C90(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_249A13C9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  MEMORY[0x270FA5388](v3 - 8);
  char v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3928);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for PopoverModel(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PopoverView(0);
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  int v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249A1576C(v1, (uint64_t)v11, type metadata accessor for PopoverModel);
  *uint64_t v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA78);
  swift_storeEnumTagMultiPayload();
  *(void *)int v15 = swift_getKeyPath();
  *((void *)v15 + 1) = 0;
  v15[16] = 0;
  sub_249882788((uint64_t)v8, (uint64_t)&v15[*(int *)(v13 + 28)], &qword_2696E3928);
  sub_249A198A8((uint64_t)v11, (uint64_t)&v15[*(int *)(v13 + 32)], type metadata accessor for PopoverModel);
  sub_2498D6084(v1, (uint64_t)v5, &qword_2696DF440);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E39B0);
  sub_249882788((uint64_t)v5, a1 + *(int *)(v16 + 52), &qword_2696DF438);
  return sub_249A198A8((uint64_t)v15, a1, type metadata accessor for PopoverView);
}

uint64_t PopoverView.body.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PopoverView(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  sub_249A1576C(v1, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PopoverView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_249A198A8((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for PopoverView);
  *a1 = sub_249A15430;
  a1[1] = v7;
  return result;
}

uint64_t sub_249A14010@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v74 = a1;
  uint64_t v75 = a2;
  uint64_t v64 = type metadata accessor for PopoverView(0);
  uint64_t v71 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v72 = v2;
  uint64_t v73 = (uint64_t)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_249AECBE8();
  uint64_t v66 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v63 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for PlatterView();
  MEMORY[0x270FA5388](v62);
  uint64_t v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v69 = (uint64_t)&v60 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3968);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v65 = (uint64_t)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3970);
  MEMORY[0x270FA5388](v60);
  uint64_t v67 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3978);
  MEMORY[0x270FA5388](v61);
  uint64_t v70 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v60 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v18 - 8);
  long long v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Slot();
  uint64_t v22 = (int *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  char v24 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249AEBC48();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v29 = type metadata accessor for Instrument();
  id v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
  v30(v20, 1, 1, v29);
  uint64_t v31 = (uint64_t)&v24[v22[11]];
  v30((char *)v31, 1, 1, v29);
  id v32 = &v24[v22[12]];
  *(void *)id v32 = 0;
  *((void *)v32 + 1) = 0;
  uint64_t v33 = v22[13];
  sub_249AEB7F8();
  sub_2498D6084((uint64_t)v17, (uint64_t)v14, &qword_2696DF408);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v34 = (uint64_t)&v24[v33];
  uint64_t v35 = qword_2696E2ED8;
  sub_2498D60E8((uint64_t)v17, &qword_2696DF408);
  sub_249882788((uint64_t)v14, v34, &qword_2696DF408);
  *(void *)(v34 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410) + 52)) = v35;
  *((void *)v24 + 15) = 12624;
  *((void *)v24 + 16) = 0xE200000000000000;
  *(_OWORD *)char v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  *((void *)v24 + 4) = 0;
  *((void *)v24 + 5) = 1;
  *((void *)v24 + 6) = 0;
  *((void *)v24 + 7) = 0;
  *((void *)v24 + 8) = v26;
  *((void *)v24 + 9) = v28;
  *((_OWORD *)v24 + 5) = 0u;
  *((_OWORD *)v24 + 6) = 0u;
  *((void *)v24 + 14) = 0;
  sub_24992ED50((uint64_t)v20, v31);
  swift_bridgeObjectRelease();
  *(void *)id v32 = 0;
  *((void *)v32 + 1) = 0;
  uint64_t v36 = v65;
  uint64_t v37 = v74;
  sub_249A14788((uint64_t)v24, v74 + *(int *)(v64 + 24), v65);
  long long v38 = v63;
  sub_249AECBD8();
  *(void *)uint64_t v5 = swift_getKeyPath();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  *((void *)v5 + 3) = swift_getKeyPath();
  v5[32] = 0;
  *((void *)v5 + 5) = 0x4044000000000000;
  uint64_t v39 = v62;
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(&v5[*(int *)(v62 + 28)], v38, v68);
  uint64_t v40 = &v5[*(int *)(v39 + 32)];
  *(void *)uint64_t v40 = 0;
  *((void *)v40 + 1) = 0;
  *((void *)v40 + 2) = 0;
  uint64_t v41 = v69;
  sub_249A198A8((uint64_t)v5, v69, (uint64_t (*)(void))type metadata accessor for PlatterView);
  uint64_t v42 = sub_249AECC28();
  uint64_t v44 = v43;
  uint64_t v45 = (uint64_t)v67;
  uint64_t v46 = (uint64_t)&v67[*(int *)(v60 + 36)];
  sub_249A1576C(v41, v46, (uint64_t (*)(void))type metadata accessor for PlatterView);
  id v47 = (uint64_t *)(v46 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E3980) + 36));
  *id v47 = v42;
  v47[1] = v44;
  sub_2498D6084(v36, v45, &qword_2696E3968);
  sub_249A19910(v41, (uint64_t (*)(void))type metadata accessor for PlatterView);
  sub_2498D60E8(v36, &qword_2696E3968);
  uint64_t v48 = sub_249AECBF8();
  uint64_t v50 = v49;
  uint64_t v51 = (uint64_t)v70;
  uint64_t v52 = (uint64_t)&v70[*(int *)(v61 + 36)];
  PopoverView.overlayButton()(v52);
  uint64_t v53 = (uint64_t *)(v52 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E3988) + 36));
  *uint64_t v53 = v48;
  v53[1] = v50;
  sub_249882788(v45, v51, &qword_2696E3970);
  uint64_t v54 = v73;
  sub_249A1576C(v37, v73, type metadata accessor for PopoverView);
  unint64_t v55 = (*(unsigned __int8 *)(v71 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
  uint64_t v56 = swift_allocObject();
  sub_249A198A8(v54, v56 + v55, type metadata accessor for PopoverView);
  uint64_t v57 = v75;
  sub_2498D6084(v51, v75, &qword_2696E3978);
  uint64_t v58 = (uint64_t (**)())(v57 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E3990) + 36));
  *uint64_t v58 = sub_249A19974;
  v58[1] = (uint64_t (*)())v56;
  v58[2] = 0;
  v58[3] = 0;
  sub_2498D60E8(v51, &qword_2696E3978);
  return sub_249A19910((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for Slot);
}

uint64_t sub_249A14788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v34 = a1;
  uint64_t v36 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v33 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v32 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3998);
  uint64_t v8 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v10 = (uint64_t *)((char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)v3;
  uint64_t v19 = *(void *)(v3 + 8);
  char v20 = *(unsigned char *)(v3 + 16);
  sub_249A17A28(*(void *)v3, v19, v20);
  sub_2499A6D3C(v18, v19, v20, (uint64_t *)&v37);
  sub_249A15424(v18, v19, v20);
  uint64_t v21 = v37;
  if (v37)
  {
    type metadata accessor for PopoverView(0);
    sub_2499A6FD0((uint64_t)v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      sub_249882788((uint64_t)v13, (uint64_t)v17, &qword_2696DFCB0);
      swift_retain();
      uint64_t v25 = v34;
      uint64_t v26 = v21(v34, v31, v17);
      sub_2498B9AB8((uint64_t)v21);
      sub_2498B9AB8((uint64_t)v21);
      uint64_t v27 = type metadata accessor for Slot();
      uint64_t v28 = v33;
      sub_2498D6084(v25 + *(int *)(v27 + 44), v33, &qword_2696DF410);
      uint64_t v29 = v32;
      sub_249882788(v28, v32, &qword_2696DF408);
      uint64_t v24 = v35;
      sub_2498D6084(v29, (uint64_t)v10 + *(int *)(v35 + 52), &qword_2696DF408);
      *uint64_t v10 = v26;
      sub_2498D60E8(v29, &qword_2696DF408);
      sub_2498D60E8((uint64_t)v17, &qword_2696DFCB0);
      uint64_t v23 = v36;
      sub_249882788((uint64_t)v10, v36, &qword_2696E3998);
      uint64_t v22 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v23, v22, 1, v24);
    }
    sub_2498B9AB8((uint64_t)v21);
    sub_2498D60E8((uint64_t)v13, &qword_2696DFCA8);
  }
  uint64_t v22 = 1;
  uint64_t v24 = v35;
  uint64_t v23 = v36;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v23, v22, 1, v24);
}

uint64_t PopoverView.overlayButton()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2C08);
  uint64_t v24 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3908);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PopoverView(0);
  uint64_t v9 = v8 - 8;
  uint64_t v23 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v23 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = type metadata accessor for IconNotificationButton(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (uint64_t (**)())((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = v1 + *(int *)(v9 + 32);
  if (*(unsigned char *)(v14 + *(int *)(type metadata accessor for PopoverModel(0) + 20)) == 1)
  {
    sub_249A1576C(v1, (uint64_t)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PopoverView);
    unint64_t v15 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v16 = swift_allocObject();
    sub_249A198A8((uint64_t)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for PopoverView);
    uint64_t v17 = (uint64_t)v13 + *(int *)(v11 + 20);
    if (qword_2696DD738 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for IconNotificationButtonConfiguration(0);
    uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_2696E2BD0);
    sub_249A1576C(v19, v17, type metadata accessor for IconNotificationButtonConfiguration);
    *uint64_t v13 = sub_249A156F0;
    v13[1] = (uint64_t (*)())v16;
    sub_249A1576C((uint64_t)v13, (uint64_t)v7, type metadata accessor for IconNotificationButton);
    swift_storeEnumTagMultiPayload();
    sub_249A199F4(&qword_2696E3910, (void (*)(uint64_t))type metadata accessor for IconNotificationButton);
    sub_2498D0A3C(&qword_2696E2C18, &qword_2696E2C08);
    sub_249AEC248();
    return sub_249A19910((uint64_t)v13, type metadata accessor for IconNotificationButton);
  }
  else
  {
    sub_249AECA88();
    uint64_t v21 = v24;
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v7, v4, v2);
    swift_storeEnumTagMultiPayload();
    sub_249A199F4(&qword_2696E3910, (void (*)(uint64_t))type metadata accessor for IconNotificationButton);
    sub_2498D0A3C(&qword_2696E2C18, &qword_2696E2C08);
    sub_249AEC248();
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v4, v2);
  }
}

uint64_t sub_249A15014@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](a1 - 8);
  sub_249A1576C(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PopoverView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_249A198A8((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for PopoverView);
  *a2 = sub_249A15430;
  a2[1] = v7;
  return result;
}

uint64_t _s14CarPlayAssetUI12PopoverModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PopoverModel(0);
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF438);
  MEMORY[0x270FA5388](v13 - 8);
  unint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v24 - v17;
  sub_2498D6084(a1, (uint64_t)v12, &qword_2696DF440);
  sub_249882788((uint64_t)v12, (uint64_t)v18, &qword_2696DF438);
  sub_2498D6084(a2, (uint64_t)v12, &qword_2696DF440);
  sub_249882788((uint64_t)v12, (uint64_t)v15, &qword_2696DF438);
  sub_249AEB808();
  sub_249A199F4((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
  char v19 = sub_249AED088();
  sub_2498D60E8((uint64_t)v15, &qword_2696DF438);
  sub_2498D60E8((uint64_t)v18, &qword_2696DF438);
  sub_249A1576C(a1, (uint64_t)v9, type metadata accessor for PopoverModel);
  sub_249A1576C(a2, (uint64_t)v6, type metadata accessor for PopoverModel);
  if (v19)
  {
    char v20 = v9[*(int *)(v4 + 20)];
    sub_249A19910((uint64_t)v9, type metadata accessor for PopoverModel);
    char v21 = v6[*(int *)(v4 + 20)];
    sub_249A19910((uint64_t)v6, type metadata accessor for PopoverModel);
    char v22 = v20 ^ v21 ^ 1;
  }
  else
  {
    sub_249A19910((uint64_t)v6, type metadata accessor for PopoverModel);
    sub_249A19910((uint64_t)v9, type metadata accessor for PopoverModel);
    char v22 = 0;
  }
  return v22 & 1;
}

uint64_t type metadata accessor for PopoverView(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696E3930);
}

uint64_t sub_249A15424(uint64_t result, uint64_t a2, char a3)
{
  if (a3) {
    return sub_2498B9AB8(result);
  }
  else {
    return swift_release();
  }
}

uint64_t objectdestroyTm_2()
{
  uint64_t v1 = type metadata accessor for PopoverView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_249A15424(*(void *)(v0 + v3), *(void *)(v0 + v3 + 8), *(unsigned char *)(v0 + v3 + 16));
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA78);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
    {
      uint64_t v7 = sub_249AEB808();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v0 + v3 + *(int *)(v1 + 24);
  uint64_t v9 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v8 + *(int *)(type metadata accessor for Instrument() + 20);
  long long v26 = *(_OWORD *)(v10 + 464);
  long long v27 = *(_OWORD *)(v10 + 480);
  long long v24 = *(_OWORD *)(v10 + 432);
  long long v25 = *(_OWORD *)(v10 + 448);
  long long v22 = *(_OWORD *)(v10 + 400);
  long long v23 = *(_OWORD *)(v10 + 416);
  long long v20 = *(_OWORD *)(v10 + 368);
  long long v21 = *(_OWORD *)(v10 + 384);
  long long v18 = *(_OWORD *)(v10 + 336);
  long long v19 = *(_OWORD *)(v10 + 352);
  long long v16 = *(_OWORD *)(v10 + 304);
  long long v17 = *(_OWORD *)(v10 + 320);
  long long v14 = *(_OWORD *)(v10 + 272);
  long long v15 = *(_OWORD *)(v10 + 288);
  long long v12 = *(_OWORD *)(v10 + 240);
  long long v13 = *(_OWORD *)(v10 + 256);
  sub_2498FCAAC(*(void *)v10, *(void *)(v10 + 8), *(void **)(v10 + 16), *(void **)(v10 + 24), *(void **)(v10 + 32), *(void **)(v10 + 40), *(void *)(v10 + 48), *(void *)(v10 + 56), *(void **)(v10 + 64), *(void **)(v10 + 72), *(void **)(v10 + 80), *(void *)(v10 + 88), *(void *)(v10 + 96), *(void *)(v10 + 104), *(void *)(v10 + 112), *(void *)(v10 + 120), *(void *)(v10 + 128), *(void *)(v10 + 136), *(void *)(v10 + 144),
    *(void *)(v10 + 152),
    *(void **)(v10 + 160),
    *(void *)(v10 + 168),
    *(void *)(v10 + 176),
    *(void *)(v10 + 184),
    *(void *)(v10 + 192),
    *(void *)(v10 + 200),
    *(void *)(v10 + 208),
    *(void **)(v10 + 216),
    *(void **)(v10 + 224),
    *(void *)(v10 + 232),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((unint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    SBYTE8(v19),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    SBYTE8(v22),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    SBYTE8(v25),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    *(void *)(v10 + 496));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for PopoverModel(0);
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_249A156F0()
{
  uint64_t v1 = type metadata accessor for PopoverView(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = v0 + *(int *)(v1 + 24);
  uint64_t v4 = type metadata accessor for PopoverModel(0);
  return (*(uint64_t (**)(void))(v3 + *(int *)(v4 + 28) + v2))();
}

uint64_t sub_249A1576C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_249A157D4()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for PopoverModel(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v34 = *a2;
    *a1 = *a2;
    long long v20 = (void *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = sub_249AEB808();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
    *(void *)((char *)a1 + *(int *)(v7 + 52)) = *(void *)((char *)a2 + *(int *)(v7 + 52));
    uint64_t v67 = type metadata accessor for Instrument();
    uint64_t v8 = *(int *)(v67 + 20);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v65 = a2;
    uint64_t v93 = (void *)v10[10];
    uint64_t v94 = (void *)v10[9];
    uint64_t v91 = v10[12];
    unint64_t v92 = v10[11];
    uint64_t v89 = v10[14];
    uint64_t v90 = v10[13];
    uint64_t v87 = v10[16];
    uint64_t v88 = v10[15];
    uint64_t v85 = v10[18];
    uint64_t v86 = v10[17];
    uint64_t v83 = (void *)v10[20];
    uint64_t v84 = v10[19];
    uint64_t v81 = v10[22];
    uint64_t v82 = v10[21];
    uint64_t v79 = v10[24];
    uint64_t v80 = v10[23];
    uint64_t v77 = v10[26];
    uint64_t v78 = v10[25];
    uint64_t v75 = (void *)v10[28];
    uint64_t v76 = (void *)v10[27];
    uint64_t v74 = v10[29];
    uint64_t v73 = v10[30];
    uint64_t v72 = v10[31];
    uint64_t v71 = v10[32];
    uint64_t v70 = v10[33];
    uint64_t v69 = v10[34];
    uint64_t v68 = v10[35];
    uint64_t v64 = a1;
    uint64_t v36 = v10[36];
    uint64_t v37 = v10[37];
    uint64_t v38 = v10[38];
    uint64_t v39 = v10[39];
    uint64_t v40 = v10[40];
    unint64_t v41 = v10[41];
    uint64_t v42 = v10[42];
    uint64_t v43 = v10[43];
    uint64_t v44 = v10[44];
    uint64_t v45 = v10[45];
    uint64_t v46 = v10[46];
    uint64_t v47 = v10[47];
    uint64_t v48 = v10[48];
    uint64_t v49 = v10[49];
    uint64_t v50 = v10[50];
    uint64_t v51 = v10[51];
    uint64_t v52 = v10[52];
    uint64_t v53 = v10[53];
    uint64_t v54 = v10[54];
    uint64_t v55 = v10[55];
    uint64_t v56 = v10[56];
    uint64_t v57 = v10[57];
    uint64_t v58 = v10[58];
    uint64_t v59 = v10[59];
    unint64_t v60 = v10[60];
    uint64_t v61 = v10[61];
    unint64_t v62 = v10[62];
    uint64_t v63 = v10[63];
    uint64_t v11 = (void *)v10[8];
    uint64_t v12 = *v10;
    uint64_t v13 = v10[1];
    long long v14 = (void *)v10[2];
    long long v15 = (void *)v10[3];
    long long v16 = (void *)v10[4];
    long long v17 = (void *)v10[5];
    uint64_t v18 = v10[6];
    uint64_t v19 = v10[7];
    sub_2498FB4B4(*v10, v13, v14, v15, v16, v17, v18, v19, v11, v94, v93, v92, v91, v90, v89, v88, v87, v86, v85,
      v84,
      v83,
      v82,
      v81,
      v80,
      v79,
      v78,
      v77,
      v76,
      v75,
      v74,
      v73,
      v72,
      v71,
      v70,
      v69,
      v68,
      v36,
      v37,
      v38,
      v39,
      v40,
      v41,
      v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62);
    *uint64_t v9 = v12;
    v9[1] = v13;
    v9[2] = (uint64_t)v14;
    v9[3] = (uint64_t)v15;
    v9[4] = (uint64_t)v16;
    v9[5] = (uint64_t)v17;
    v9[6] = v18;
    v9[7] = v19;
    v9[8] = (uint64_t)v11;
    long long v20 = v64;
    v9[9] = (uint64_t)v94;
    v9[10] = (uint64_t)v93;
    v9[11] = v92;
    v9[12] = v91;
    v9[13] = v90;
    v9[14] = v89;
    v9[15] = v88;
    v9[16] = v87;
    v9[17] = v86;
    v9[18] = v85;
    v9[19] = v84;
    v9[20] = (uint64_t)v83;
    v9[21] = v82;
    v9[22] = v81;
    v9[23] = v80;
    v9[24] = v79;
    v9[25] = v78;
    v9[26] = v77;
    v9[27] = (uint64_t)v76;
    v9[28] = (uint64_t)v75;
    v9[29] = v74;
    v9[30] = v73;
    v9[31] = v72;
    v9[32] = v71;
    v9[33] = v70;
    v9[34] = v69;
    v9[35] = v68;
    v9[36] = v36;
    v9[37] = v37;
    v9[38] = v38;
    v9[39] = v39;
    v9[40] = v40;
    v9[41] = v41;
    v9[42] = v42;
    v9[43] = v43;
    v9[44] = v44;
    v9[45] = v45;
    v9[46] = v46;
    v9[47] = v47;
    v9[48] = v48;
    v9[49] = v49;
    v9[50] = v50;
    v9[51] = v51;
    v9[52] = v52;
    v9[53] = v53;
    v9[54] = v54;
    v9[55] = v55;
    v9[56] = v56;
    v9[57] = v57;
    v9[58] = v58;
    v9[59] = v59;
    v9[60] = v60;
    v9[61] = v61;
    v9[62] = v62;
    v9[63] = v63;
    uint64_t v21 = *(int *)(v67 + 24);
    long long v22 = (char *)v64 + v21;
    long long v23 = (char *)v65 + v21;
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)long long v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    *((void *)v22 + 2) = *((void *)v23 + 2);
    *((_WORD *)v22 + 12) = *((_WORD *)v23 + 12);
    uint64_t v25 = *((void *)v23 + 5);
    *((void *)v22 + 4) = *((void *)v23 + 4);
    *((void *)v22 + 5) = v25;
    uint64_t v26 = a3[6];
    *((unsigned char *)v64 + a3[5]) = *((unsigned char *)v65 + a3[5]);
    long long v27 = (void *)((char *)v64 + v26);
    uint64_t v28 = (void *)((char *)v65 + v26);
    uint64_t v29 = v28[1];
    *long long v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = a3[7];
    uint64_t v31 = (void *)((char *)v64 + v30);
    uint64_t v32 = (void *)((char *)v65 + v30);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v20;
}

uint64_t destroy for PopoverModel(uint64_t a1)
{
  uint64_t v2 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = a1 + *(int *)(type metadata accessor for Instrument() + 20);
  long long v19 = *(_OWORD *)(v3 + 464);
  long long v20 = *(_OWORD *)(v3 + 480);
  long long v17 = *(_OWORD *)(v3 + 432);
  long long v18 = *(_OWORD *)(v3 + 448);
  long long v15 = *(_OWORD *)(v3 + 400);
  long long v16 = *(_OWORD *)(v3 + 416);
  long long v13 = *(_OWORD *)(v3 + 368);
  long long v14 = *(_OWORD *)(v3 + 384);
  long long v11 = *(_OWORD *)(v3 + 336);
  long long v12 = *(_OWORD *)(v3 + 352);
  long long v9 = *(_OWORD *)(v3 + 304);
  long long v10 = *(_OWORD *)(v3 + 320);
  long long v7 = *(_OWORD *)(v3 + 272);
  long long v8 = *(_OWORD *)(v3 + 288);
  long long v5 = *(_OWORD *)(v3 + 240);
  long long v6 = *(_OWORD *)(v3 + 256);
  sub_2498FCAAC(*(void *)v3, *(void *)(v3 + 8), *(void **)(v3 + 16), *(void **)(v3 + 24), *(void **)(v3 + 32), *(void **)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void **)(v3 + 64), *(void **)(v3 + 72), *(void **)(v3 + 80), *(void *)(v3 + 88), *(void *)(v3 + 96), *(void *)(v3 + 104), *(void *)(v3 + 112), *(void *)(v3 + 120), *(void *)(v3 + 128), *(void *)(v3 + 136), *(void *)(v3 + 144),
    *(void *)(v3 + 152),
    *(void **)(v3 + 160),
    *(void *)(v3 + 168),
    *(void *)(v3 + 176),
    *(void *)(v3 + 184),
    *(void *)(v3 + 192),
    *(void *)(v3 + 200),
    *(void *)(v3 + 208),
    *(void **)(v3 + 216),
    *(void **)(v3 + 224),
    *(void *)(v3 + 232),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((unint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    SBYTE8(v12),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    SBYTE8(v15),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    SBYTE8(v18),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    *(void *)(v3 + 496));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for PopoverModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  *(void *)(a1 + *(int *)(v6 + 52)) = *(void *)(a2 + *(int *)(v6 + 52));
  uint64_t v63 = type metadata accessor for Instrument();
  uint64_t v7 = *(int *)(v63 + 20);
  long long v8 = (uint64_t *)(a1 + v7);
  long long v9 = (uint64_t *)(a2 + v7);
  uint64_t v90 = (void *)v9[10];
  uint64_t v91 = (void *)v9[9];
  uint64_t v88 = v9[12];
  unint64_t v89 = v9[11];
  uint64_t v86 = v9[14];
  uint64_t v87 = v9[13];
  uint64_t v84 = v9[16];
  uint64_t v85 = v9[15];
  uint64_t v82 = v9[18];
  uint64_t v83 = v9[17];
  uint64_t v80 = (void *)v9[20];
  uint64_t v81 = v9[19];
  uint64_t v78 = v9[22];
  uint64_t v79 = v9[21];
  uint64_t v76 = v9[24];
  uint64_t v77 = v9[23];
  uint64_t v74 = v9[26];
  uint64_t v75 = v9[25];
  uint64_t v72 = (void *)v9[28];
  uint64_t v73 = (void *)v9[27];
  uint64_t v71 = v9[29];
  uint64_t v70 = v9[30];
  uint64_t v69 = v9[31];
  uint64_t v68 = v9[32];
  uint64_t v67 = v9[33];
  uint64_t v66 = v9[34];
  uint64_t v65 = v9[35];
  uint64_t v33 = v9[36];
  uint64_t v34 = v9[37];
  uint64_t v35 = v9[38];
  uint64_t v36 = v9[39];
  uint64_t v37 = v9[40];
  unint64_t v38 = v9[41];
  uint64_t v39 = v9[42];
  uint64_t v40 = v9[43];
  uint64_t v41 = v9[44];
  uint64_t v42 = v9[45];
  uint64_t v43 = v9[46];
  uint64_t v44 = v9[47];
  uint64_t v45 = v9[48];
  uint64_t v46 = v9[49];
  uint64_t v47 = v9[50];
  uint64_t v48 = v9[51];
  uint64_t v49 = v9[52];
  uint64_t v50 = v9[53];
  uint64_t v51 = v9[54];
  uint64_t v52 = v9[55];
  uint64_t v53 = v9[56];
  uint64_t v54 = v9[57];
  uint64_t v55 = v9[58];
  uint64_t v56 = v9[59];
  unint64_t v57 = v9[60];
  uint64_t v58 = v9[61];
  unint64_t v59 = v9[62];
  uint64_t v60 = v9[63];
  long long v10 = (void *)v9[8];
  uint64_t v11 = *v9;
  uint64_t v12 = v9[1];
  long long v13 = (void *)v9[2];
  long long v14 = (void *)v9[3];
  long long v15 = (void *)v9[4];
  long long v16 = (void *)v9[5];
  uint64_t v17 = v9[6];
  uint64_t v18 = v9[7];
  sub_2498FB4B4(*v9, v12, v13, v14, v15, v16, v17, v18, v10, v91, v90, v89, v88, v87, v86, v85, v84, v83, v82,
    v81,
    v80,
    v79,
    v78,
    v77,
    v76,
    v75,
    v74,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v67,
    v66,
    v65,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59);
  *long long v8 = v11;
  v8[1] = v12;
  v8[2] = (uint64_t)v13;
  v8[3] = (uint64_t)v14;
  v8[4] = (uint64_t)v15;
  v8[5] = (uint64_t)v16;
  v8[6] = v17;
  v8[7] = v18;
  v8[8] = (uint64_t)v10;
  v8[9] = (uint64_t)v91;
  v8[10] = (uint64_t)v90;
  v8[11] = v89;
  v8[12] = v88;
  v8[13] = v87;
  v8[14] = v86;
  v8[15] = v85;
  v8[16] = v84;
  v8[17] = v83;
  v8[18] = v82;
  v8[19] = v81;
  v8[20] = (uint64_t)v80;
  v8[21] = v79;
  v8[22] = v78;
  v8[23] = v77;
  v8[24] = v76;
  v8[25] = v75;
  v8[26] = v74;
  v8[27] = (uint64_t)v73;
  v8[28] = (uint64_t)v72;
  v8[29] = v71;
  v8[30] = v70;
  v8[31] = v69;
  v8[32] = v68;
  v8[33] = v67;
  v8[34] = v66;
  v8[35] = v65;
  v8[36] = v33;
  v8[37] = v34;
  v8[38] = v35;
  v8[39] = v36;
  v8[40] = v37;
  v8[41] = v38;
  v8[42] = v39;
  v8[43] = v40;
  v8[44] = v41;
  v8[45] = v42;
  v8[46] = v43;
  v8[47] = v44;
  v8[48] = v45;
  v8[49] = v46;
  v8[50] = v47;
  v8[51] = v48;
  v8[52] = v49;
  v8[53] = v50;
  v8[54] = v51;
  v8[55] = v52;
  v8[56] = v53;
  v8[57] = v54;
  v8[58] = v55;
  v8[59] = v56;
  v8[60] = v57;
  v8[61] = v58;
  v8[62] = v59;
  v8[63] = v60;
  uint64_t v19 = *(int *)(v63 + 24);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)(v21 + 8);
  *(void *)uint64_t v20 = *(void *)v21;
  *(void *)(v20 + 8) = v22;
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  *(_WORD *)(v20 + 24) = *(_WORD *)(v21 + 24);
  uint64_t v23 = *(void *)(v21 + 40);
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  *(void *)(v20 + 40) = v23;
  uint64_t v24 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = a3[7];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PopoverModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a1, a2, v5);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  *(void *)(a1 + *(int *)(v6 + 52)) = *(void *)(a2 + *(int *)(v6 + 52));
  uint64_t v95 = type metadata accessor for Instrument();
  uint64_t v7 = *(int *)(v95 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  v123 = *(void **)(v9 + 72);
  v124 = *(void **)(v9 + 64);
  unint64_t v121 = *(void *)(v9 + 88);
  v122 = *(void **)(v9 + 80);
  uint64_t v119 = *(void *)(v9 + 104);
  uint64_t v120 = *(void *)(v9 + 96);
  uint64_t v117 = *(void *)(v9 + 120);
  uint64_t v118 = *(void *)(v9 + 112);
  uint64_t v115 = *(void *)(v9 + 136);
  uint64_t v116 = *(void *)(v9 + 128);
  uint64_t v113 = *(void *)(v9 + 152);
  uint64_t v114 = *(void *)(v9 + 144);
  uint64_t v111 = *(void *)(v9 + 168);
  v112 = *(void **)(v9 + 160);
  uint64_t v109 = *(void *)(v9 + 184);
  uint64_t v110 = *(void *)(v9 + 176);
  uint64_t v108 = *(void *)(v9 + 192);
  uint64_t v107 = *(void *)(v9 + 200);
  uint64_t v106 = *(void *)(v9 + 208);
  uint64_t v105 = *(void **)(v9 + 216);
  uint64_t v104 = *(void **)(v9 + 224);
  uint64_t v103 = *(void *)(v9 + 232);
  uint64_t v102 = *(void *)(v9 + 240);
  uint64_t v101 = *(void *)(v9 + 248);
  uint64_t v100 = *(void *)(v9 + 256);
  uint64_t v99 = *(void *)(v9 + 264);
  uint64_t v98 = *(void *)(v9 + 272);
  uint64_t v97 = *(void *)(v9 + 280);
  uint64_t v67 = *(void *)(v9 + 288);
  uint64_t v68 = *(void *)(v9 + 296);
  uint64_t v69 = *(void *)(v9 + 304);
  uint64_t v70 = *(void *)(v9 + 312);
  uint64_t v71 = *(void *)(v9 + 320);
  unint64_t v72 = *(void *)(v9 + 328);
  uint64_t v73 = *(void *)(v9 + 336);
  uint64_t v74 = *(void *)(v9 + 344);
  uint64_t v75 = *(void *)(v9 + 352);
  uint64_t v10 = *(void *)(v9 + 360);
  long long v76 = *(_OWORD *)(v9 + 368);
  uint64_t v77 = *(void *)(v9 + 384);
  uint64_t v78 = *(void *)(v9 + 392);
  uint64_t v79 = *(void *)(v9 + 400);
  uint64_t v80 = *(void *)(v9 + 408);
  uint64_t v81 = *(void *)(v9 + 416);
  uint64_t v82 = *(void *)(v9 + 424);
  uint64_t v83 = *(void *)(v9 + 432);
  uint64_t v84 = *(void *)(v9 + 440);
  uint64_t v85 = *(void *)(v9 + 448);
  uint64_t v86 = *(void *)(v9 + 456);
  uint64_t v87 = *(void *)(v9 + 464);
  uint64_t v88 = *(void *)(v9 + 472);
  unint64_t v89 = *(void *)(v9 + 480);
  uint64_t v90 = *(void *)(v9 + 488);
  unint64_t v91 = *(void *)(v9 + 496);
  uint64_t v92 = *(void *)(v9 + 504);
  uint64_t v11 = *(void *)v9;
  uint64_t v12 = *(void *)(v9 + 8);
  long long v13 = *(void **)(v9 + 16);
  long long v15 = *(void **)(v9 + 32);
  long long v14 = *(void **)(v9 + 24);
  long long v16 = *(void **)(v9 + 40);
  uint64_t v17 = *(void *)(v9 + 48);
  uint64_t v18 = *(void *)(v9 + 56);
  sub_2498FB4B4(*(void *)v9, v12, v13, v14, v15, v16, v17, v18, v124, v123, v122, v121, v120, v119, v118, v117, v116, v115, v114,
    v113,
    v112,
    v111,
    v110,
    v109,
    v108,
    v107,
    v106,
    v105,
    v104,
    v103,
    v102,
    v101,
    v100,
    v99,
    v98,
    v97,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    *(_OWORD *)(v9 + 336),
    v74,
    v75,
    v10,
    v76,
    *((uint64_t *)&v76 + 1),
    *(_OWORD *)(v9 + 384),
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v91);
  uint64_t v19 = *(void *)v8;
  uint64_t v20 = *(void *)(v8 + 8);
  *(void *)uint64_t v8 = v11;
  *(void *)(v8 + 8) = v12;
  uint64_t v21 = *(void **)(v8 + 16);
  uint64_t v22 = *(void **)(v8 + 24);
  *(void *)(v8 + 16) = v13;
  *(void *)(v8 + 24) = v14;
  uint64_t v23 = *(void **)(v8 + 32);
  uint64_t v24 = *(void **)(v8 + 40);
  *(void *)(v8 + 32) = v15;
  *(void *)(v8 + 40) = v16;
  uint64_t v25 = *(void *)(v8 + 48);
  uint64_t v26 = *(void *)(v8 + 56);
  *(void *)(v8 + 48) = v17;
  *(void *)(v8 + 56) = v18;
  long long v27 = *(_OWORD *)(v8 + 64);
  long long v28 = *(_OWORD *)(v8 + 80);
  *(void *)(v8 + 64) = v124;
  *(void *)(v8 + 72) = v123;
  *(void *)(v8 + 80) = v122;
  *(void *)(v8 + 88) = v121;
  long long v29 = *(_OWORD *)(v8 + 96);
  long long v30 = *(_OWORD *)(v8 + 112);
  *(void *)(v8 + 96) = v120;
  *(void *)(v8 + 104) = v119;
  *(void *)(v8 + 112) = v118;
  *(void *)(v8 + 120) = v117;
  long long v31 = *(_OWORD *)(v8 + 128);
  long long v32 = *(_OWORD *)(v8 + 144);
  *(void *)(v8 + 128) = v116;
  *(void *)(v8 + 136) = v115;
  *(void *)(v8 + 144) = v114;
  *(void *)(v8 + 152) = v113;
  long long v33 = *(_OWORD *)(v8 + 160);
  long long v34 = *(_OWORD *)(v8 + 176);
  *(void *)(v8 + 160) = v112;
  *(void *)(v8 + 168) = v111;
  *(void *)(v8 + 176) = v110;
  *(void *)(v8 + 184) = v109;
  long long v35 = *(_OWORD *)(v8 + 192);
  long long v36 = *(_OWORD *)(v8 + 208);
  *(void *)(v8 + 192) = v108;
  *(void *)(v8 + 200) = v107;
  *(void *)(v8 + 208) = v106;
  *(void *)(v8 + 216) = v105;
  long long v37 = *(_OWORD *)(v8 + 224);
  long long v38 = *(_OWORD *)(v8 + 240);
  *(void *)(v8 + 224) = v104;
  *(void *)(v8 + 232) = v103;
  *(void *)(v8 + 240) = v102;
  *(void *)(v8 + 248) = v101;
  long long v39 = *(_OWORD *)(v8 + 256);
  long long v40 = *(_OWORD *)(v8 + 272);
  *(void *)(v8 + 256) = v100;
  *(void *)(v8 + 264) = v99;
  *(void *)(v8 + 272) = v98;
  *(void *)(v8 + 280) = v97;
  long long v41 = *(_OWORD *)(v8 + 288);
  long long v42 = *(_OWORD *)(v8 + 304);
  *(void *)(v8 + 288) = v67;
  *(void *)(v8 + 296) = v68;
  *(void *)(v8 + 304) = v69;
  *(void *)(v8 + 312) = v70;
  long long v43 = *(_OWORD *)(v8 + 320);
  long long v44 = *(_OWORD *)(v8 + 336);
  *(void *)(v8 + 320) = v71;
  *(void *)(v8 + 328) = v72;
  *(void *)(v8 + 336) = v73;
  *(void *)(v8 + 344) = v74;
  long long v45 = *(_OWORD *)(v8 + 352);
  long long v46 = *(_OWORD *)(v8 + 368);
  *(void *)(v8 + 352) = v75;
  *(void *)(v8 + 360) = v10;
  *(_OWORD *)(v8 + 368) = v76;
  long long v47 = *(_OWORD *)(v8 + 384);
  long long v48 = *(_OWORD *)(v8 + 400);
  *(void *)(v8 + 384) = v77;
  *(void *)(v8 + 392) = v78;
  *(void *)(v8 + 400) = v79;
  *(void *)(v8 + 408) = v80;
  long long v49 = *(_OWORD *)(v8 + 416);
  long long v50 = *(_OWORD *)(v8 + 432);
  *(void *)(v8 + 416) = v81;
  *(void *)(v8 + 424) = v82;
  *(void *)(v8 + 432) = v83;
  *(void *)(v8 + 440) = v84;
  long long v51 = *(_OWORD *)(v8 + 448);
  long long v52 = *(_OWORD *)(v8 + 464);
  *(void *)(v8 + 448) = v85;
  *(void *)(v8 + 456) = v86;
  *(void *)(v8 + 464) = v87;
  *(void *)(v8 + 472) = v88;
  long long v53 = *(_OWORD *)(v8 + 480);
  *(void *)(v8 + 480) = v89;
  *(void *)(v8 + 488) = v90;
  unint64_t v54 = *(void *)(v8 + 496);
  *(void *)(v8 + 496) = v91;
  *(void *)(v8 + 504) = v92;
  sub_2498FCAAC(v19, v20, v21, v22, v23, v24, v25, v26, (void *)v27, *((void **)&v27 + 1), (void *)v28, *((unint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1), v30, *((uint64_t *)&v30 + 1), v31, *((uint64_t *)&v31 + 1), v32,
    *((uint64_t *)&v32 + 1),
    (void *)v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    *((void **)&v36 + 1),
    (void *)v37,
    *((uint64_t *)&v37 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v39,
    *((uint64_t *)&v39 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v41,
    *((uint64_t *)&v41 + 1),
    v42,
    *((uint64_t *)&v42 + 1),
    v43,
    *((unint64_t *)&v43 + 1),
    v44,
    *((uint64_t *)&v44 + 1),
    v45,
    SBYTE8(v45),
    v46,
    *((uint64_t *)&v46 + 1),
    v47,
    *((uint64_t *)&v47 + 1),
    v48,
    SBYTE8(v48),
    v49,
    *((uint64_t *)&v49 + 1),
    v50,
    *((uint64_t *)&v50 + 1),
    v51,
    SBYTE8(v51),
    v52,
    *((uint64_t *)&v52 + 1),
    v53,
    *((uint64_t *)&v53 + 1),
    v54);
  uint64_t v55 = *(int *)(v95 + 24);
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  *(void *)(a1 + v55) = *(void *)(a2 + v55);
  swift_retain();
  swift_release();
  *(void *)(v56 + 8) = *(void *)(v57 + 8);
  *(void *)(v56 + 16) = *(void *)(v57 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v56 + 24) = *(unsigned char *)(v57 + 24);
  *(unsigned char *)(v56 + 25) = *(unsigned char *)(v57 + 25);
  *(void *)(v56 + 32) = *(void *)(v57 + 32);
  *(void *)(v56 + 40) = *(void *)(v57 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v58 = a3[6];
  unint64_t v59 = (void *)(a1 + v58);
  uint64_t v60 = (void *)(a2 + v58);
  uint64_t v61 = v60[1];
  *unint64_t v59 = *v60;
  v59[1] = v61;
  swift_retain();
  swift_release();
  uint64_t v62 = a3[7];
  uint64_t v63 = (void *)(a1 + v62);
  uint64_t v64 = (void *)(a2 + v62);
  uint64_t v65 = v64[1];
  *uint64_t v63 = *v64;
  v63[1] = v65;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for PopoverModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  *(void *)(a1 + *(int *)(v7 + 52)) = *(void *)(a2 + *(int *)(v7 + 52));
  uint64_t v8 = type metadata accessor for Instrument();
  memcpy((void *)(a1 + *(int *)(v8 + 20)), (const void *)(a2 + *(int *)(v8 + 20)), 0x200uLL);
  uint64_t v9 = *(int *)(v8 + 24);
  uint64_t v10 = (_OWORD *)(a1 + v9);
  uint64_t v11 = (_OWORD *)(a2 + v9);
  long long v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v10[2] = v11[2];
  uint64_t v13 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for PopoverModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  *(void *)(a1 + *(int *)(v7 + 52)) = *(void *)(a2 + *(int *)(v7 + 52));
  uint64_t v8 = type metadata accessor for Instrument();
  uint64_t v9 = *(int *)(v8 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (_OWORD *)(a2 + v9);
  uint64_t v12 = *(void *)v10;
  uint64_t v13 = *(void *)(v10 + 8);
  long long v14 = *(void **)(v10 + 16);
  long long v15 = *(void **)(v10 + 24);
  long long v16 = *(void **)(v10 + 32);
  uint64_t v17 = *(void **)(v10 + 40);
  uint64_t v18 = *(void *)(v10 + 48);
  uint64_t v19 = *(void *)(v10 + 56);
  long long v20 = *(_OWORD *)(v10 + 64);
  long long v21 = *(_OWORD *)(v10 + 80);
  long long v22 = *(_OWORD *)(v10 + 96);
  long long v23 = *(_OWORD *)(v10 + 112);
  long long v24 = *(_OWORD *)(v10 + 128);
  long long v25 = *(_OWORD *)(v10 + 144);
  long long v26 = *(_OWORD *)(v10 + 160);
  long long v27 = *(_OWORD *)(v10 + 176);
  long long v28 = *(_OWORD *)(v10 + 192);
  long long v29 = *(_OWORD *)(v10 + 208);
  long long v30 = *(_OWORD *)(v10 + 224);
  long long v31 = *(_OWORD *)(v10 + 240);
  long long v32 = *(_OWORD *)(v10 + 256);
  long long v33 = *(_OWORD *)(v10 + 272);
  long long v34 = *(_OWORD *)(v10 + 288);
  long long v35 = *(_OWORD *)(v10 + 304);
  long long v36 = *(_OWORD *)(v10 + 320);
  long long v37 = *(_OWORD *)(v10 + 336);
  long long v38 = *(_OWORD *)(v10 + 352);
  long long v39 = *(_OWORD *)(v10 + 368);
  long long v40 = *(_OWORD *)(v10 + 384);
  long long v41 = *(_OWORD *)(v10 + 400);
  long long v42 = *(_OWORD *)(v10 + 416);
  long long v43 = *(_OWORD *)(v10 + 432);
  long long v44 = *(_OWORD *)(v10 + 448);
  long long v45 = *(_OWORD *)(v10 + 464);
  long long v46 = *(_OWORD *)(v10 + 480);
  unint64_t v47 = *(void *)(v10 + 496);
  long long v48 = v11[1];
  *(_OWORD *)uint64_t v10 = *v11;
  *(_OWORD *)(v10 + 16) = v48;
  long long v49 = v11[3];
  *(_OWORD *)(v10 + 32) = v11[2];
  *(_OWORD *)(v10 + 48) = v49;
  long long v50 = v11[5];
  *(_OWORD *)(v10 + 64) = v11[4];
  *(_OWORD *)(v10 + 80) = v50;
  long long v51 = v11[7];
  *(_OWORD *)(v10 + 96) = v11[6];
  *(_OWORD *)(v10 + 112) = v51;
  long long v52 = v11[9];
  *(_OWORD *)(v10 + 128) = v11[8];
  *(_OWORD *)(v10 + 144) = v52;
  long long v53 = v11[11];
  *(_OWORD *)(v10 + 160) = v11[10];
  *(_OWORD *)(v10 + 176) = v53;
  long long v54 = v11[13];
  *(_OWORD *)(v10 + 192) = v11[12];
  *(_OWORD *)(v10 + 208) = v54;
  long long v55 = v11[15];
  *(_OWORD *)(v10 + 224) = v11[14];
  *(_OWORD *)(v10 + 240) = v55;
  long long v56 = v11[17];
  *(_OWORD *)(v10 + 256) = v11[16];
  *(_OWORD *)(v10 + 272) = v56;
  long long v57 = v11[19];
  *(_OWORD *)(v10 + 288) = v11[18];
  *(_OWORD *)(v10 + 304) = v57;
  long long v58 = v11[21];
  *(_OWORD *)(v10 + 320) = v11[20];
  *(_OWORD *)(v10 + 336) = v58;
  long long v59 = v11[23];
  *(_OWORD *)(v10 + 352) = v11[22];
  *(_OWORD *)(v10 + 368) = v59;
  long long v60 = v11[25];
  *(_OWORD *)(v10 + 384) = v11[24];
  *(_OWORD *)(v10 + 400) = v60;
  long long v61 = v11[27];
  *(_OWORD *)(v10 + 416) = v11[26];
  *(_OWORD *)(v10 + 432) = v61;
  long long v62 = v11[29];
  *(_OWORD *)(v10 + 448) = v11[28];
  *(_OWORD *)(v10 + 464) = v62;
  long long v63 = v11[31];
  *(_OWORD *)(v10 + 480) = v11[30];
  *(_OWORD *)(v10 + 496) = v63;
  sub_2498FCAAC(v12, v13, v14, v15, v16, v17, v18, v19, (void *)v20, *((void **)&v20 + 1), (void *)v21, *((unint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    (void *)v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((void **)&v29 + 1),
    (void *)v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    *((unint64_t *)&v36 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    SBYTE8(v38),
    v39,
    *((uint64_t *)&v39 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v41,
    SBYTE8(v41),
    v42,
    *((uint64_t *)&v42 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    SBYTE8(v44),
    v45,
    *((uint64_t *)&v45 + 1),
    v46,
    *((uint64_t *)&v46 + 1),
    v47);
  uint64_t v64 = *(int *)(v8 + 24);
  uint64_t v65 = a1 + v64;
  uint64_t v66 = a2 + v64;
  *(void *)(a1 + v64) = *(void *)(a2 + v64);
  swift_release();
  uint64_t v67 = *(void *)(v66 + 16);
  *(void *)(v65 + 8) = *(void *)(v66 + 8);
  *(void *)(v65 + 16) = v67;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v65 + 24) = *(unsigned char *)(v66 + 24);
  *(unsigned char *)(v65 + 25) = *(unsigned char *)(v66 + 25);
  uint64_t v68 = *(void *)(v66 + 40);
  *(void *)(v65 + 32) = *(void *)(v66 + 32);
  *(void *)(v65 + 40) = v68;
  swift_bridgeObjectRelease();
  uint64_t v69 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v69) = *(_OWORD *)(a2 + v69);
  swift_release();
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PopoverModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249A17004);
}

uint64_t sub_249A17004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Instrument();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PopoverModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249A170D8);
}

uint64_t sub_249A170D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Instrument();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_249A17194()
{
  uint64_t result = type metadata accessor for Instrument();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for PopoverView(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    unint64_t v17 = v16 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    char v9 = *(unsigned char *)(a2 + 16);
    sub_249A17A28(*(void *)a2, v8, v9);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA78);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA8);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        uint64_t v18 = sub_249AEB808();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v11, v12, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = *(int *)(a3 + 24);
    uint64_t v20 = a1 + v19;
    uint64_t v79 = a1 + v19;
    uint64_t v78 = a2 + v19;
    uint64_t v21 = sub_249AEB808();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v20, v78, v21);
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
    *(void *)(v20 + *(int *)(v22 + 52)) = *(void *)(v78 + *(int *)(v22 + 52));
    uint64_t v81 = type metadata accessor for Instrument();
    uint64_t v23 = *(int *)(v81 + 20);
    long long v24 = (uint64_t *)(v20 + v23);
    long long v25 = (uint64_t *)(v78 + v23);
    unint64_t v80 = a1;
    uint64_t v107 = (void *)v25[10];
    uint64_t v108 = (void *)v25[9];
    uint64_t v105 = v25[12];
    unint64_t v106 = v25[11];
    uint64_t v103 = v25[14];
    uint64_t v104 = v25[13];
    uint64_t v101 = v25[16];
    uint64_t v102 = v25[15];
    uint64_t v99 = v25[18];
    uint64_t v100 = v25[17];
    uint64_t v97 = (void *)v25[20];
    uint64_t v98 = v25[19];
    uint64_t v95 = v25[22];
    uint64_t v96 = v25[21];
    uint64_t v93 = v25[24];
    uint64_t v94 = v25[23];
    uint64_t v91 = v25[26];
    uint64_t v92 = v25[25];
    unint64_t v89 = (void *)v25[28];
    uint64_t v90 = (void *)v25[27];
    uint64_t v88 = v25[29];
    uint64_t v87 = v25[30];
    uint64_t v86 = v25[31];
    uint64_t v85 = v25[32];
    uint64_t v84 = v25[33];
    uint64_t v83 = v25[34];
    uint64_t v82 = v25[35];
    uint64_t v50 = v25[36];
    uint64_t v51 = v25[37];
    uint64_t v52 = v25[38];
    uint64_t v53 = v25[39];
    uint64_t v54 = v25[40];
    unint64_t v55 = v25[41];
    uint64_t v56 = v25[42];
    uint64_t v57 = v25[43];
    uint64_t v58 = v25[44];
    uint64_t v59 = v25[45];
    uint64_t v60 = v25[46];
    uint64_t v61 = v25[47];
    uint64_t v62 = v25[48];
    uint64_t v63 = v25[49];
    uint64_t v64 = v25[50];
    uint64_t v65 = v25[51];
    uint64_t v66 = v25[52];
    uint64_t v67 = v25[53];
    uint64_t v68 = v25[54];
    uint64_t v69 = v25[55];
    uint64_t v70 = v25[56];
    uint64_t v71 = v25[57];
    uint64_t v72 = v25[58];
    uint64_t v73 = v25[59];
    unint64_t v74 = v25[60];
    uint64_t v75 = v25[61];
    unint64_t v76 = v25[62];
    uint64_t v77 = v25[63];
    long long v26 = (void *)v25[8];
    uint64_t v27 = *v25;
    uint64_t v28 = v25[1];
    long long v29 = (void *)v25[2];
    long long v30 = (void *)v25[3];
    long long v31 = (void *)v25[4];
    long long v32 = (void *)v25[5];
    uint64_t v33 = v25[6];
    uint64_t v34 = v25[7];
    sub_2498FB4B4(*v25, v28, v29, v30, v31, v32, v33, v34, v26, v108, v107, v106, v105, v104, v103, v102, v101, v100, v99,
      v98,
      v97,
      v96,
      v95,
      v94,
      v93,
      v92,
      v91,
      v90,
      v89,
      v88,
      v87,
      v86,
      v85,
      v84,
      v83,
      v82,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63,
      v64,
      v65,
      v66,
      v67,
      v68,
      v69,
      v70,
      v71,
      v72,
      v73,
      v74,
      v75,
      v76);
    *long long v24 = v27;
    v24[1] = v28;
    v24[2] = (uint64_t)v29;
    v24[3] = (uint64_t)v30;
    v24[4] = (uint64_t)v31;
    v24[5] = (uint64_t)v32;
    unint64_t v17 = v80;
    v24[6] = v33;
    v24[7] = v34;
    v24[8] = (uint64_t)v26;
    v24[9] = (uint64_t)v108;
    v24[10] = (uint64_t)v107;
    v24[11] = v106;
    v24[12] = v105;
    v24[13] = v104;
    v24[14] = v103;
    v24[15] = v102;
    v24[16] = v101;
    v24[17] = v100;
    v24[18] = v99;
    v24[19] = v98;
    v24[20] = (uint64_t)v97;
    v24[21] = v96;
    v24[22] = v95;
    v24[23] = v94;
    v24[24] = v93;
    v24[25] = v92;
    v24[26] = v91;
    v24[27] = (uint64_t)v90;
    v24[28] = (uint64_t)v89;
    v24[29] = v88;
    v24[30] = v87;
    v24[31] = v86;
    v24[32] = v85;
    v24[33] = v84;
    v24[34] = v83;
    v24[35] = v82;
    v24[36] = v50;
    v24[37] = v51;
    v24[38] = v52;
    v24[39] = v53;
    v24[40] = v54;
    v24[41] = v55;
    v24[42] = v56;
    v24[43] = v57;
    v24[44] = v58;
    v24[45] = v59;
    v24[46] = v60;
    v24[47] = v61;
    v24[48] = v62;
    v24[49] = v63;
    v24[50] = v64;
    v24[51] = v65;
    v24[52] = v66;
    v24[53] = v67;
    v24[54] = v68;
    v24[55] = v69;
    v24[56] = v70;
    v24[57] = v71;
    v24[58] = v72;
    v24[59] = v73;
    v24[60] = v74;
    v24[61] = v75;
    v24[62] = v76;
    v24[63] = v77;
    uint64_t v35 = *(int *)(v81 + 24);
    uint64_t v36 = v79 + v35;
    uint64_t v37 = v78 + v35;
    uint64_t v38 = *(void *)(v37 + 8);
    *(void *)uint64_t v36 = *(void *)v37;
    *(void *)(v36 + 8) = v38;
    *(void *)(v36 + 16) = *(void *)(v37 + 16);
    *(_WORD *)(v36 + 24) = *(_WORD *)(v37 + 24);
    uint64_t v39 = *(void *)(v37 + 40);
    *(void *)(v36 + 32) = *(void *)(v37 + 32);
    *(void *)(v36 + 40) = v39;
    long long v40 = (int *)type metadata accessor for PopoverModel(0);
    *(unsigned char *)(v79 + v40[5]) = *(unsigned char *)(v78 + v40[5]);
    uint64_t v41 = v40[6];
    long long v42 = (void *)(v79 + v41);
    long long v43 = (void *)(v78 + v41);
    uint64_t v44 = v43[1];
    *long long v42 = *v43;
    v42[1] = v44;
    uint64_t v45 = v40[7];
    long long v46 = (void *)(v79 + v45);
    unint64_t v47 = (void *)(v78 + v45);
    uint64_t v48 = v47[1];
    *long long v46 = *v47;
    v46[1] = v48;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v17;
}

uint64_t sub_249A17A28(uint64_t result, uint64_t a2, char a3)
{
  if (a3) {
    return sub_2498B9AA8(result);
  }
  else {
    return swift_retain();
  }
}

uint64_t destroy for PopoverView(uint64_t a1, uint64_t a2)
{
  sub_249A15424(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA78);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
    {
      uint64_t v6 = sub_249AEB808();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v7 + *(int *)(type metadata accessor for Instrument() + 20);
  long long v25 = *(_OWORD *)(v9 + 464);
  long long v26 = *(_OWORD *)(v9 + 480);
  long long v23 = *(_OWORD *)(v9 + 432);
  long long v24 = *(_OWORD *)(v9 + 448);
  long long v21 = *(_OWORD *)(v9 + 400);
  long long v22 = *(_OWORD *)(v9 + 416);
  long long v19 = *(_OWORD *)(v9 + 368);
  long long v20 = *(_OWORD *)(v9 + 384);
  long long v17 = *(_OWORD *)(v9 + 336);
  long long v18 = *(_OWORD *)(v9 + 352);
  long long v15 = *(_OWORD *)(v9 + 304);
  long long v16 = *(_OWORD *)(v9 + 320);
  long long v13 = *(_OWORD *)(v9 + 272);
  long long v14 = *(_OWORD *)(v9 + 288);
  long long v11 = *(_OWORD *)(v9 + 240);
  long long v12 = *(_OWORD *)(v9 + 256);
  sub_2498FCAAC(*(void *)v9, *(void *)(v9 + 8), *(void **)(v9 + 16), *(void **)(v9 + 24), *(void **)(v9 + 32), *(void **)(v9 + 40), *(void *)(v9 + 48), *(void *)(v9 + 56), *(void **)(v9 + 64), *(void **)(v9 + 72), *(void **)(v9 + 80), *(void *)(v9 + 88), *(void *)(v9 + 96), *(void *)(v9 + 104), *(void *)(v9 + 112), *(void *)(v9 + 120), *(void *)(v9 + 128), *(void *)(v9 + 136), *(void *)(v9 + 144),
    *(void *)(v9 + 152),
    *(void **)(v9 + 160),
    *(void *)(v9 + 168),
    *(void *)(v9 + 176),
    *(void *)(v9 + 184),
    *(void *)(v9 + 192),
    *(void *)(v9 + 200),
    *(void *)(v9 + 208),
    *(void **)(v9 + 216),
    *(void **)(v9 + 224),
    *(void *)(v9 + 232),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((unint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    SBYTE8(v18),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    SBYTE8(v21),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    SBYTE8(v24),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    *(void *)(v9 + 496));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for PopoverModel(0);
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for PopoverView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_249A17A28(*(void *)a2, v7, v8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (void *)(a1 + v9);
  long long v11 = (void *)(a2 + v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA78);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA8);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v15 = sub_249AEB808();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v10, v11, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  else
  {
    *uint64_t v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = a1 + v16;
  uint64_t v77 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v76 = a2 + v16;
  uint64_t v19 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  *(void *)(v17 + *(int *)(v20 + 52)) = *(void *)(v18 + *(int *)(v20 + 52));
  uint64_t v78 = type metadata accessor for Instrument();
  uint64_t v21 = *(int *)(v78 + 20);
  long long v22 = (uint64_t *)(v17 + v21);
  long long v23 = (uint64_t *)(v18 + v21);
  uint64_t v79 = a1;
  uint64_t v105 = (void *)v23[10];
  unint64_t v106 = (void *)v23[9];
  uint64_t v103 = v23[12];
  unint64_t v104 = v23[11];
  uint64_t v101 = v23[14];
  uint64_t v102 = v23[13];
  uint64_t v99 = v23[16];
  uint64_t v100 = v23[15];
  uint64_t v97 = v23[18];
  uint64_t v98 = v23[17];
  uint64_t v95 = (void *)v23[20];
  uint64_t v96 = v23[19];
  uint64_t v93 = v23[22];
  uint64_t v94 = v23[21];
  uint64_t v91 = v23[24];
  uint64_t v92 = v23[23];
  uint64_t v89 = v23[26];
  uint64_t v90 = v23[25];
  uint64_t v87 = (void *)v23[28];
  uint64_t v88 = (void *)v23[27];
  uint64_t v86 = v23[29];
  uint64_t v85 = v23[30];
  uint64_t v84 = v23[31];
  uint64_t v83 = v23[32];
  uint64_t v82 = v23[33];
  uint64_t v81 = v23[34];
  uint64_t v80 = v23[35];
  uint64_t v48 = v23[36];
  uint64_t v49 = v23[37];
  uint64_t v50 = v23[38];
  uint64_t v51 = v23[39];
  uint64_t v52 = v23[40];
  unint64_t v53 = v23[41];
  uint64_t v54 = v23[42];
  uint64_t v55 = v23[43];
  uint64_t v56 = v23[44];
  uint64_t v57 = v23[45];
  uint64_t v58 = v23[46];
  uint64_t v59 = v23[47];
  uint64_t v60 = v23[48];
  uint64_t v61 = v23[49];
  uint64_t v62 = v23[50];
  uint64_t v63 = v23[51];
  uint64_t v64 = v23[52];
  uint64_t v65 = v23[53];
  uint64_t v66 = v23[54];
  uint64_t v67 = v23[55];
  uint64_t v68 = v23[56];
  uint64_t v69 = v23[57];
  uint64_t v70 = v23[58];
  uint64_t v71 = v23[59];
  unint64_t v72 = v23[60];
  uint64_t v73 = v23[61];
  unint64_t v74 = v23[62];
  uint64_t v75 = v23[63];
  long long v24 = (void *)v23[8];
  uint64_t v25 = *v23;
  uint64_t v26 = v23[1];
  uint64_t v27 = (void *)v23[2];
  uint64_t v28 = (void *)v23[3];
  long long v29 = (void *)v23[4];
  long long v30 = (void *)v23[5];
  uint64_t v31 = v23[6];
  uint64_t v32 = v23[7];
  sub_2498FB4B4(*v23, v26, v27, v28, v29, v30, v31, v32, v24, v106, v105, v104, v103, v102, v101, v100, v99, v98, v97,
    v96,
    v95,
    v94,
    v93,
    v92,
    v91,
    v90,
    v89,
    v88,
    v87,
    v86,
    v85,
    v84,
    v83,
    v82,
    v81,
    v80,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    v73,
    v74);
  *long long v22 = v25;
  v22[1] = v26;
  v22[2] = (uint64_t)v27;
  v22[3] = (uint64_t)v28;
  v22[4] = (uint64_t)v29;
  v22[5] = (uint64_t)v30;
  v22[6] = v31;
  v22[7] = v32;
  v22[8] = (uint64_t)v24;
  v22[9] = (uint64_t)v106;
  v22[10] = (uint64_t)v105;
  v22[11] = v104;
  v22[12] = v103;
  v22[13] = v102;
  v22[14] = v101;
  v22[15] = v100;
  v22[16] = v99;
  v22[17] = v98;
  v22[18] = v97;
  v22[19] = v96;
  v22[20] = (uint64_t)v95;
  v22[21] = v94;
  v22[22] = v93;
  v22[23] = v92;
  v22[24] = v91;
  v22[25] = v90;
  v22[26] = v89;
  v22[27] = (uint64_t)v88;
  v22[28] = (uint64_t)v87;
  v22[29] = v86;
  v22[30] = v85;
  v22[31] = v84;
  v22[32] = v83;
  v22[33] = v82;
  v22[34] = v81;
  v22[35] = v80;
  v22[36] = v48;
  v22[37] = v49;
  v22[38] = v50;
  v22[39] = v51;
  v22[40] = v52;
  v22[41] = v53;
  v22[42] = v54;
  v22[43] = v55;
  v22[44] = v56;
  v22[45] = v57;
  v22[46] = v58;
  v22[47] = v59;
  v22[48] = v60;
  v22[49] = v61;
  v22[50] = v62;
  v22[51] = v63;
  v22[52] = v64;
  v22[53] = v65;
  v22[54] = v66;
  v22[55] = v67;
  v22[56] = v68;
  v22[57] = v69;
  v22[58] = v70;
  v22[59] = v71;
  v22[60] = v72;
  v22[61] = v73;
  v22[62] = v74;
  v22[63] = v75;
  uint64_t v33 = *(int *)(v78 + 24);
  uint64_t v34 = v77 + v33;
  uint64_t v35 = v76 + v33;
  uint64_t v36 = *(void *)(v35 + 8);
  *(void *)uint64_t v34 = *(void *)v35;
  *(void *)(v34 + 8) = v36;
  *(void *)(v34 + 16) = *(void *)(v35 + 16);
  *(_WORD *)(v34 + 24) = *(_WORD *)(v35 + 24);
  uint64_t v37 = *(void *)(v35 + 40);
  *(void *)(v34 + 32) = *(void *)(v35 + 32);
  *(void *)(v34 + 40) = v37;
  uint64_t v38 = (int *)type metadata accessor for PopoverModel(0);
  *(unsigned char *)(v77 + v38[5]) = *(unsigned char *)(v76 + v38[5]);
  uint64_t v39 = v38[6];
  long long v40 = (void *)(v77 + v39);
  uint64_t v41 = (void *)(v76 + v39);
  uint64_t v42 = v41[1];
  *long long v40 = *v41;
  v40[1] = v42;
  uint64_t v43 = v38[7];
  uint64_t v44 = (void *)(v77 + v43);
  uint64_t v45 = (void *)(v76 + v43);
  uint64_t v46 = v45[1];
  *uint64_t v44 = *v45;
  v44[1] = v46;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return v79;
}

uint64_t assignWithCopy for PopoverView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_249A17A28(*(void *)a2, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  char v11 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  sub_249A15424(v9, v10, v11);
  if (a1 != a2)
  {
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    sub_2498D60E8(a1 + v12, &qword_2696DFA78);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA78);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA8);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        uint64_t v18 = sub_249AEB808();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v13, v14, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = a1 + v19;
  uint64_t v111 = a1 + v19;
  uint64_t v110 = a2 + v19;
  uint64_t v21 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v20, v110, v21);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  *(void *)(v20 + *(int *)(v22 + 52)) = *(void *)(v110 + *(int *)(v22 + 52));
  uint64_t v113 = type metadata accessor for Instrument();
  uint64_t v23 = *(int *)(v113 + 20);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = v110 + v23;
  uint64_t v112 = a1;
  v140 = *(void **)(v25 + 72);
  v141 = *(void **)(v25 + 64);
  unint64_t v138 = *(void *)(v25 + 88);
  v139 = *(void **)(v25 + 80);
  uint64_t v136 = *(void *)(v25 + 104);
  uint64_t v137 = *(void *)(v25 + 96);
  uint64_t v134 = *(void *)(v25 + 120);
  uint64_t v135 = *(void *)(v25 + 112);
  uint64_t v132 = *(void *)(v25 + 136);
  uint64_t v133 = *(void *)(v25 + 128);
  uint64_t v130 = *(void *)(v25 + 152);
  uint64_t v131 = *(void *)(v25 + 144);
  uint64_t v128 = *(void *)(v25 + 168);
  v129 = *(void **)(v25 + 160);
  uint64_t v126 = *(void *)(v25 + 184);
  uint64_t v127 = *(void *)(v25 + 176);
  uint64_t v125 = *(void *)(v25 + 192);
  uint64_t v124 = *(void *)(v25 + 200);
  uint64_t v123 = *(void *)(v25 + 208);
  v122 = *(void **)(v25 + 216);
  unint64_t v121 = *(void **)(v25 + 224);
  uint64_t v120 = *(void *)(v25 + 232);
  uint64_t v119 = *(void *)(v25 + 240);
  uint64_t v118 = *(void *)(v25 + 248);
  uint64_t v117 = *(void *)(v25 + 256);
  uint64_t v116 = *(void *)(v25 + 264);
  uint64_t v115 = *(void *)(v25 + 272);
  uint64_t v114 = *(void *)(v25 + 280);
  uint64_t v84 = *(void *)(v25 + 288);
  uint64_t v85 = *(void *)(v25 + 296);
  uint64_t v86 = *(void *)(v25 + 304);
  uint64_t v87 = *(void *)(v25 + 312);
  uint64_t v88 = *(void *)(v25 + 320);
  unint64_t v89 = *(void *)(v25 + 328);
  uint64_t v90 = *(void *)(v25 + 336);
  uint64_t v26 = *(void *)(v25 + 344);
  long long v91 = *(_OWORD *)(v25 + 352);
  uint64_t v92 = *(void *)(v25 + 368);
  uint64_t v93 = *(void *)(v25 + 376);
  uint64_t v94 = *(void *)(v25 + 384);
  uint64_t v95 = *(void *)(v25 + 392);
  uint64_t v96 = *(void *)(v25 + 400);
  uint64_t v97 = *(void *)(v25 + 408);
  uint64_t v98 = *(void *)(v25 + 416);
  uint64_t v99 = *(void *)(v25 + 424);
  uint64_t v100 = *(void *)(v25 + 432);
  uint64_t v101 = *(void *)(v25 + 440);
  uint64_t v102 = *(void *)(v25 + 448);
  uint64_t v103 = *(void *)(v25 + 456);
  uint64_t v104 = *(void *)(v25 + 464);
  uint64_t v105 = *(void *)(v25 + 472);
  unint64_t v106 = *(void *)(v25 + 480);
  uint64_t v107 = *(void *)(v25 + 488);
  unint64_t v108 = *(void *)(v25 + 496);
  uint64_t v109 = *(void *)(v25 + 504);
  uint64_t v27 = *(void *)v25;
  uint64_t v28 = *(void *)(v25 + 8);
  long long v29 = *(void **)(v25 + 16);
  long long v30 = *(void **)(v25 + 24);
  uint64_t v31 = *(void **)(v25 + 40);
  uint64_t v32 = *(void **)(v25 + 32);
  uint64_t v33 = *(void *)(v25 + 48);
  uint64_t v34 = *(void *)(v25 + 56);
  sub_2498FB4B4(*(void *)v25, v28, v29, v30, v32, v31, v33, v34, v141, v140, v139, v138, v137, v136, v135, v134, v133, v132, v131,
    v130,
    v129,
    v128,
    v127,
    v126,
    v125,
    v124,
    v123,
    v122,
    v121,
    v120,
    v119,
    v118,
    v117,
    v116,
    v115,
    v114,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v26,
    v91,
    SBYTE8(v91),
    v92,
    v93,
    *(_OWORD *)(v25 + 384),
    v95,
    v96,
    v97,
    v98,
    v99,
    v100,
    v101,
    v102,
    v103,
    v104,
    v105,
    v106,
    v107,
    v108);
  uint64_t v35 = *(void *)v24;
  uint64_t v36 = *(void *)(v24 + 8);
  *(void *)uint64_t v24 = v27;
  *(void *)(v24 + 8) = v28;
  uint64_t v37 = *(void **)(v24 + 16);
  uint64_t v38 = *(void **)(v24 + 24);
  *(void *)(v24 + 16) = v29;
  *(void *)(v24 + 24) = v30;
  uint64_t v39 = *(void **)(v24 + 32);
  long long v40 = *(void **)(v24 + 40);
  *(void *)(v24 + 32) = v32;
  *(void *)(v24 + 40) = v31;
  uint64_t v41 = *(void *)(v24 + 48);
  uint64_t v42 = *(void *)(v24 + 56);
  *(void *)(v24 + 48) = v33;
  *(void *)(v24 + 56) = v34;
  long long v43 = *(_OWORD *)(v24 + 64);
  long long v44 = *(_OWORD *)(v24 + 80);
  *(void *)(v24 + 64) = v141;
  *(void *)(v24 + 72) = v140;
  *(void *)(v24 + 80) = v139;
  *(void *)(v24 + 88) = v138;
  long long v45 = *(_OWORD *)(v24 + 96);
  long long v46 = *(_OWORD *)(v24 + 112);
  *(void *)(v24 + 96) = v137;
  *(void *)(v24 + 104) = v136;
  *(void *)(v24 + 112) = v135;
  *(void *)(v24 + 120) = v134;
  long long v47 = *(_OWORD *)(v24 + 128);
  long long v48 = *(_OWORD *)(v24 + 144);
  *(void *)(v24 + 128) = v133;
  *(void *)(v24 + 136) = v132;
  *(void *)(v24 + 144) = v131;
  *(void *)(v24 + 152) = v130;
  long long v49 = *(_OWORD *)(v24 + 160);
  long long v50 = *(_OWORD *)(v24 + 176);
  *(void *)(v24 + 160) = v129;
  *(void *)(v24 + 168) = v128;
  *(void *)(v24 + 176) = v127;
  *(void *)(v24 + 184) = v126;
  long long v51 = *(_OWORD *)(v24 + 192);
  long long v52 = *(_OWORD *)(v24 + 208);
  *(void *)(v24 + 192) = v125;
  *(void *)(v24 + 200) = v124;
  *(void *)(v24 + 208) = v123;
  *(void *)(v24 + 216) = v122;
  long long v53 = *(_OWORD *)(v24 + 224);
  long long v54 = *(_OWORD *)(v24 + 240);
  *(void *)(v24 + 224) = v121;
  *(void *)(v24 + 232) = v120;
  *(void *)(v24 + 240) = v119;
  *(void *)(v24 + 248) = v118;
  long long v55 = *(_OWORD *)(v24 + 256);
  long long v56 = *(_OWORD *)(v24 + 272);
  *(void *)(v24 + 256) = v117;
  *(void *)(v24 + 264) = v116;
  *(void *)(v24 + 272) = v115;
  *(void *)(v24 + 280) = v114;
  long long v57 = *(_OWORD *)(v24 + 288);
  long long v58 = *(_OWORD *)(v24 + 304);
  *(void *)(v24 + 288) = v84;
  *(void *)(v24 + 296) = v85;
  *(void *)(v24 + 304) = v86;
  *(void *)(v24 + 312) = v87;
  long long v59 = *(_OWORD *)(v24 + 320);
  long long v60 = *(_OWORD *)(v24 + 336);
  *(void *)(v24 + 320) = v88;
  *(void *)(v24 + 328) = v89;
  *(void *)(v24 + 336) = v90;
  *(void *)(v24 + 344) = v26;
  long long v61 = *(_OWORD *)(v24 + 352);
  long long v62 = *(_OWORD *)(v24 + 368);
  *(_OWORD *)(v24 + 352) = v91;
  *(void *)(v24 + 368) = v92;
  *(void *)(v24 + 376) = v93;
  long long v63 = *(_OWORD *)(v24 + 384);
  long long v64 = *(_OWORD *)(v24 + 400);
  *(void *)(v24 + 384) = v94;
  *(void *)(v24 + 392) = v95;
  *(void *)(v24 + 400) = v96;
  *(void *)(v24 + 408) = v97;
  long long v65 = *(_OWORD *)(v24 + 416);
  long long v66 = *(_OWORD *)(v24 + 432);
  *(void *)(v24 + 416) = v98;
  *(void *)(v24 + 424) = v99;
  *(void *)(v24 + 432) = v100;
  *(void *)(v24 + 440) = v101;
  long long v67 = *(_OWORD *)(v24 + 448);
  long long v68 = *(_OWORD *)(v24 + 464);
  *(void *)(v24 + 448) = v102;
  *(void *)(v24 + 456) = v103;
  *(void *)(v24 + 464) = v104;
  *(void *)(v24 + 472) = v105;
  long long v69 = *(_OWORD *)(v24 + 480);
  *(void *)(v24 + 480) = v106;
  *(void *)(v24 + 488) = v107;
  unint64_t v70 = *(void *)(v24 + 496);
  *(void *)(v24 + 496) = v108;
  *(void *)(v24 + 504) = v109;
  sub_2498FCAAC(v35, v36, v37, v38, v39, v40, v41, v42, (void *)v43, *((void **)&v43 + 1), (void *)v44, *((unint64_t *)&v44 + 1), v45, *((uint64_t *)&v45 + 1), v46, *((uint64_t *)&v46 + 1), v47, *((uint64_t *)&v47 + 1), v48,
    *((uint64_t *)&v48 + 1),
    (void *)v49,
    *((uint64_t *)&v49 + 1),
    v50,
    *((uint64_t *)&v50 + 1),
    v51,
    *((uint64_t *)&v51 + 1),
    v52,
    *((void **)&v52 + 1),
    (void *)v53,
    *((uint64_t *)&v53 + 1),
    v54,
    *((uint64_t *)&v54 + 1),
    v55,
    *((uint64_t *)&v55 + 1),
    v56,
    *((uint64_t *)&v56 + 1),
    v57,
    *((uint64_t *)&v57 + 1),
    v58,
    *((uint64_t *)&v58 + 1),
    v59,
    *((unint64_t *)&v59 + 1),
    v60,
    *((uint64_t *)&v60 + 1),
    v61,
    SBYTE8(v61),
    v62,
    *((uint64_t *)&v62 + 1),
    v63,
    *((uint64_t *)&v63 + 1),
    v64,
    SBYTE8(v64),
    v65,
    *((uint64_t *)&v65 + 1),
    v66,
    *((uint64_t *)&v66 + 1),
    v67,
    SBYTE8(v67),
    v68,
    *((uint64_t *)&v68 + 1),
    v69,
    *((uint64_t *)&v69 + 1),
    v70);
  uint64_t v71 = *(int *)(v113 + 24);
  uint64_t v72 = v111 + v71;
  uint64_t v73 = v110 + v71;
  *(void *)(v111 + v71) = *(void *)(v110 + v71);
  swift_retain();
  swift_release();
  *(void *)(v72 + 8) = *(void *)(v73 + 8);
  *(void *)(v72 + 16) = *(void *)(v73 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v72 + 24) = *(unsigned char *)(v73 + 24);
  *(unsigned char *)(v72 + 25) = *(unsigned char *)(v73 + 25);
  *(void *)(v72 + 32) = *(void *)(v73 + 32);
  *(void *)(v72 + 40) = *(void *)(v73 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v74 = (int *)type metadata accessor for PopoverModel(0);
  *(unsigned char *)(v111 + v74[5]) = *(unsigned char *)(v110 + v74[5]);
  uint64_t v75 = v74[6];
  uint64_t v76 = (void *)(v111 + v75);
  uint64_t v77 = (void *)(v110 + v75);
  uint64_t v78 = v77[1];
  *uint64_t v76 = *v77;
  v76[1] = v78;
  swift_retain();
  swift_release();
  uint64_t v79 = v74[7];
  uint64_t v80 = (void *)(v111 + v79);
  uint64_t v81 = (void *)(v110 + v79);
  uint64_t v82 = v81[1];
  *uint64_t v80 = *v81;
  v80[1] = v82;
  swift_retain();
  swift_release();
  return v112;
}

uint64_t initializeWithTake for PopoverView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  char v8 = (const void *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA78);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA8);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v13 = sub_249AEB808();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  *(void *)(v15 + *(int *)(v18 + 52)) = *(void *)(v16 + *(int *)(v18 + 52));
  uint64_t v19 = type metadata accessor for Instrument();
  memcpy((void *)(v15 + *(int *)(v19 + 20)), (const void *)(v16 + *(int *)(v19 + 20)), 0x200uLL);
  uint64_t v20 = *(int *)(v19 + 24);
  uint64_t v21 = (_OWORD *)(v15 + v20);
  uint64_t v22 = (_OWORD *)(v16 + v20);
  long long v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  v21[2] = v22[2];
  uint64_t v24 = (int *)type metadata accessor for PopoverModel(0);
  *(unsigned char *)(v15 + v24[5]) = *(unsigned char *)(v16 + v24[5]);
  *(_OWORD *)(v15 + v24[6]) = *(_OWORD *)(v16 + v24[6]);
  *(_OWORD *)(v15 + v24[7]) = *(_OWORD *)(v16 + v24[7]);
  return a1;
}

uint64_t assignWithTake for PopoverView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v6;
  sub_249A15424(v7, v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (const void *)(a2 + v10);
    sub_2498D60E8(a1 + v10, &qword_2696DFA78);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA78);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA8);
        memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        uint64_t v17 = sub_249AEB808();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v11, v12, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  *(void *)(v19 + *(int *)(v22 + 52)) = *(void *)(v20 + *(int *)(v22 + 52));
  uint64_t v23 = type metadata accessor for Instrument();
  uint64_t v24 = *(int *)(v23 + 20);
  uint64_t v25 = v19 + v24;
  uint64_t v26 = (_OWORD *)(v20 + v24);
  uint64_t v27 = *(void *)v25;
  uint64_t v28 = *(void *)(v25 + 8);
  long long v29 = *(void **)(v25 + 16);
  long long v30 = *(void **)(v25 + 24);
  uint64_t v31 = *(void **)(v25 + 32);
  uint64_t v32 = *(void **)(v25 + 40);
  uint64_t v33 = *(void *)(v25 + 48);
  uint64_t v34 = *(void *)(v25 + 56);
  long long v35 = *(_OWORD *)(v25 + 64);
  long long v36 = *(_OWORD *)(v25 + 80);
  long long v37 = *(_OWORD *)(v25 + 96);
  long long v38 = *(_OWORD *)(v25 + 112);
  long long v39 = *(_OWORD *)(v25 + 128);
  long long v40 = *(_OWORD *)(v25 + 144);
  long long v41 = *(_OWORD *)(v25 + 160);
  long long v42 = *(_OWORD *)(v25 + 176);
  long long v43 = *(_OWORD *)(v25 + 192);
  long long v44 = *(_OWORD *)(v25 + 208);
  long long v45 = *(_OWORD *)(v25 + 224);
  long long v46 = *(_OWORD *)(v25 + 240);
  long long v47 = *(_OWORD *)(v25 + 256);
  long long v48 = *(_OWORD *)(v25 + 272);
  long long v49 = *(_OWORD *)(v25 + 288);
  long long v50 = *(_OWORD *)(v25 + 304);
  long long v51 = *(_OWORD *)(v25 + 320);
  long long v52 = *(_OWORD *)(v25 + 336);
  long long v53 = *(_OWORD *)(v25 + 352);
  long long v54 = *(_OWORD *)(v25 + 368);
  long long v55 = *(_OWORD *)(v25 + 384);
  long long v56 = *(_OWORD *)(v25 + 400);
  long long v57 = *(_OWORD *)(v25 + 416);
  long long v58 = *(_OWORD *)(v25 + 432);
  long long v59 = *(_OWORD *)(v25 + 448);
  long long v60 = *(_OWORD *)(v25 + 464);
  long long v61 = *(_OWORD *)(v25 + 480);
  unint64_t v62 = *(void *)(v25 + 496);
  long long v63 = v26[1];
  *(_OWORD *)uint64_t v25 = *v26;
  *(_OWORD *)(v25 + 16) = v63;
  long long v64 = v26[3];
  *(_OWORD *)(v25 + 32) = v26[2];
  *(_OWORD *)(v25 + 48) = v64;
  long long v65 = v26[5];
  *(_OWORD *)(v25 + 64) = v26[4];
  *(_OWORD *)(v25 + 80) = v65;
  long long v66 = v26[7];
  *(_OWORD *)(v25 + 96) = v26[6];
  *(_OWORD *)(v25 + 112) = v66;
  long long v67 = v26[9];
  *(_OWORD *)(v25 + 128) = v26[8];
  *(_OWORD *)(v25 + 144) = v67;
  long long v68 = v26[11];
  *(_OWORD *)(v25 + 160) = v26[10];
  *(_OWORD *)(v25 + 176) = v68;
  long long v69 = v26[13];
  *(_OWORD *)(v25 + 192) = v26[12];
  *(_OWORD *)(v25 + 208) = v69;
  long long v70 = v26[15];
  *(_OWORD *)(v25 + 224) = v26[14];
  *(_OWORD *)(v25 + 240) = v70;
  long long v71 = v26[17];
  *(_OWORD *)(v25 + 256) = v26[16];
  *(_OWORD *)(v25 + 272) = v71;
  long long v72 = v26[19];
  *(_OWORD *)(v25 + 288) = v26[18];
  *(_OWORD *)(v25 + 304) = v72;
  long long v73 = v26[21];
  *(_OWORD *)(v25 + 320) = v26[20];
  *(_OWORD *)(v25 + 336) = v73;
  long long v74 = v26[23];
  *(_OWORD *)(v25 + 352) = v26[22];
  *(_OWORD *)(v25 + 368) = v74;
  long long v75 = v26[25];
  *(_OWORD *)(v25 + 384) = v26[24];
  *(_OWORD *)(v25 + 400) = v75;
  long long v76 = v26[27];
  *(_OWORD *)(v25 + 416) = v26[26];
  *(_OWORD *)(v25 + 432) = v76;
  long long v77 = v26[29];
  *(_OWORD *)(v25 + 448) = v26[28];
  *(_OWORD *)(v25 + 464) = v77;
  long long v78 = v26[31];
  *(_OWORD *)(v25 + 480) = v26[30];
  *(_OWORD *)(v25 + 496) = v78;
  sub_2498FCAAC(v27, v28, v29, v30, v31, v32, v33, v34, (void *)v35, *((void **)&v35 + 1), (void *)v36, *((unint64_t *)&v36 + 1), v37, *((uint64_t *)&v37 + 1), v38, *((uint64_t *)&v38 + 1), v39, *((uint64_t *)&v39 + 1), v40,
    *((uint64_t *)&v40 + 1),
    (void *)v41,
    *((uint64_t *)&v41 + 1),
    v42,
    *((uint64_t *)&v42 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    *((void **)&v44 + 1),
    (void *)v45,
    *((uint64_t *)&v45 + 1),
    v46,
    *((uint64_t *)&v46 + 1),
    v47,
    *((uint64_t *)&v47 + 1),
    v48,
    *((uint64_t *)&v48 + 1),
    v49,
    *((uint64_t *)&v49 + 1),
    v50,
    *((uint64_t *)&v50 + 1),
    v51,
    *((unint64_t *)&v51 + 1),
    v52,
    *((uint64_t *)&v52 + 1),
    v53,
    SBYTE8(v53),
    v54,
    *((uint64_t *)&v54 + 1),
    v55,
    *((uint64_t *)&v55 + 1),
    v56,
    SBYTE8(v56),
    v57,
    *((uint64_t *)&v57 + 1),
    v58,
    *((uint64_t *)&v58 + 1),
    v59,
    SBYTE8(v59),
    v60,
    *((uint64_t *)&v60 + 1),
    v61,
    *((uint64_t *)&v61 + 1),
    v62);
  uint64_t v79 = *(int *)(v23 + 24);
  uint64_t v80 = v19 + v79;
  uint64_t v81 = v20 + v79;
  *(void *)(v19 + v79) = *(void *)(v20 + v79);
  swift_release();
  uint64_t v82 = *(void *)(v81 + 16);
  *(void *)(v80 + 8) = *(void *)(v81 + 8);
  *(void *)(v80 + 16) = v82;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v80 + 24) = *(unsigned char *)(v81 + 24);
  *(unsigned char *)(v80 + 25) = *(unsigned char *)(v81 + 25);
  uint64_t v83 = *(void *)(v81 + 40);
  *(void *)(v80 + 32) = *(void *)(v81 + 32);
  *(void *)(v80 + 40) = v83;
  swift_bridgeObjectRelease();
  uint64_t v84 = (int *)type metadata accessor for PopoverModel(0);
  *(unsigned char *)(v19 + v84[5]) = *(unsigned char *)(v20 + v84[5]);
  *(_OWORD *)(v19 + v84[6]) = *(_OWORD *)(v20 + v84[6]);
  swift_release();
  *(_OWORD *)(v19 + v84[7]) = *(_OWORD *)(v20 + v84[7]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PopoverView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249A1936C);
}

uint64_t sub_249A1936C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3928);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for PopoverModel(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for PopoverView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249A194A8);
}

uint64_t sub_249A194A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 16) = -(char)a2;
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3928);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for PopoverModel(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_249A195D4()
{
  sub_249A196A8();
  if (v0 <= 0x3F)
  {
    type metadata accessor for PopoverModel(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_249A196A8()
{
  if (!qword_2696E3940)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DFCA8);
    unint64_t v0 = sub_249AEBB18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2696E3940);
    }
  }
}

uint64_t sub_249A19704()
{
  return sub_2498D0A3C(&qword_2696E3948, &qword_2696E3950);
}

unint64_t sub_249A19744()
{
  unint64_t result = qword_2696E3958;
  if (!qword_2696E3958)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E3960);
    sub_249A199F4(&qword_2696E3910, (void (*)(uint64_t))type metadata accessor for IconNotificationButton);
    sub_2498D0A3C(&qword_2696E2C18, &qword_2696E2C08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3958);
  }
  return result;
}

uint64_t sub_249A19818@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for PopoverView(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_249A14010(v4, a1);
}

uint64_t sub_249A198A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_249A19910(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_249A19974()
{
  uint64_t v1 = type metadata accessor for PopoverView(0);
  unint64_t v2 = v0
     + *(int *)(v1 + 24)
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  uint64_t v3 = type metadata accessor for PopoverModel(0);
  return (*(uint64_t (**)(unint64_t))(v2 + *(int *)(v3 + 24)))(v2);
}

uint64_t sub_249A199F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_249A19A3C(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for PopoverModel(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v34 = *a2;
    *a1 = v34;
    uint64_t v20 = (void *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    long long v66 = (int *)v4;
    uint64_t v6 = sub_249AEB808();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
    *(void *)((char *)a1 + *(int *)(v7 + 52)) = *(void *)((char *)a2 + *(int *)(v7 + 52));
    uint64_t v67 = type metadata accessor for Instrument();
    uint64_t v8 = *(int *)(v67 + 20);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    long long v65 = a2;
    uint64_t v93 = (void *)v10[10];
    uint64_t v94 = (void *)v10[9];
    uint64_t v91 = v10[12];
    unint64_t v92 = v10[11];
    uint64_t v89 = v10[14];
    uint64_t v90 = v10[13];
    uint64_t v87 = v10[16];
    uint64_t v88 = v10[15];
    uint64_t v85 = v10[18];
    uint64_t v86 = v10[17];
    uint64_t v83 = (void *)v10[20];
    uint64_t v84 = v10[19];
    uint64_t v81 = v10[22];
    uint64_t v82 = v10[21];
    uint64_t v79 = v10[24];
    uint64_t v80 = v10[23];
    uint64_t v77 = v10[26];
    uint64_t v78 = v10[25];
    long long v75 = (void *)v10[28];
    long long v76 = (void *)v10[27];
    uint64_t v74 = v10[29];
    uint64_t v73 = v10[30];
    uint64_t v72 = v10[31];
    uint64_t v71 = v10[32];
    uint64_t v70 = v10[33];
    uint64_t v69 = v10[34];
    uint64_t v68 = v10[35];
    long long v64 = a1;
    uint64_t v36 = v10[36];
    uint64_t v37 = v10[37];
    uint64_t v38 = v10[38];
    uint64_t v39 = v10[39];
    uint64_t v40 = v10[40];
    unint64_t v41 = v10[41];
    uint64_t v42 = v10[42];
    uint64_t v43 = v10[43];
    uint64_t v44 = v10[44];
    uint64_t v45 = v10[45];
    uint64_t v46 = v10[46];
    uint64_t v47 = v10[47];
    uint64_t v48 = v10[48];
    uint64_t v49 = v10[49];
    uint64_t v50 = v10[50];
    uint64_t v51 = v10[51];
    uint64_t v52 = v10[52];
    uint64_t v53 = v10[53];
    uint64_t v54 = v10[54];
    uint64_t v55 = v10[55];
    uint64_t v56 = v10[56];
    uint64_t v57 = v10[57];
    uint64_t v58 = v10[58];
    uint64_t v59 = v10[59];
    unint64_t v60 = v10[60];
    uint64_t v61 = v10[61];
    unint64_t v62 = v10[62];
    uint64_t v63 = v10[63];
    uint64_t v11 = (void *)v10[8];
    uint64_t v12 = *v10;
    uint64_t v13 = v10[1];
    uint64_t v14 = (void *)v10[2];
    uint64_t v15 = (void *)v10[3];
    uint64_t v16 = (void *)v10[4];
    uint64_t v17 = (void *)v10[5];
    uint64_t v18 = v10[6];
    uint64_t v19 = v10[7];
    sub_2498FB4B4(*v10, v13, v14, v15, v16, v17, v18, v19, v11, v94, v93, v92, v91, v90, v89, v88, v87, v86, v85,
      v84,
      v83,
      v82,
      v81,
      v80,
      v79,
      v78,
      v77,
      v76,
      v75,
      v74,
      v73,
      v72,
      v71,
      v70,
      v69,
      v68,
      v36,
      v37,
      v38,
      v39,
      v40,
      v41,
      v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62);
    *uint64_t v9 = v12;
    v9[1] = v13;
    v9[2] = (uint64_t)v14;
    v9[3] = (uint64_t)v15;
    v9[4] = (uint64_t)v16;
    v9[5] = (uint64_t)v17;
    v9[6] = v18;
    v9[7] = v19;
    v9[8] = (uint64_t)v11;
    uint64_t v20 = v64;
    v9[9] = (uint64_t)v94;
    v9[10] = (uint64_t)v93;
    v9[11] = v92;
    v9[12] = v91;
    v9[13] = v90;
    v9[14] = v89;
    v9[15] = v88;
    v9[16] = v87;
    v9[17] = v86;
    v9[18] = v85;
    v9[19] = v84;
    v9[20] = (uint64_t)v83;
    v9[21] = v82;
    v9[22] = v81;
    v9[23] = v80;
    v9[24] = v79;
    v9[25] = v78;
    v9[26] = v77;
    v9[27] = (uint64_t)v76;
    v9[28] = (uint64_t)v75;
    v9[29] = v74;
    v9[30] = v73;
    v9[31] = v72;
    v9[32] = v71;
    v9[33] = v70;
    v9[34] = v69;
    v9[35] = v68;
    v9[36] = v36;
    v9[37] = v37;
    v9[38] = v38;
    v9[39] = v39;
    v9[40] = v40;
    v9[41] = v41;
    v9[42] = v42;
    v9[43] = v43;
    v9[44] = v44;
    v9[45] = v45;
    v9[46] = v46;
    v9[47] = v47;
    v9[48] = v48;
    v9[49] = v49;
    v9[50] = v50;
    v9[51] = v51;
    v9[52] = v52;
    v9[53] = v53;
    v9[54] = v54;
    v9[55] = v55;
    v9[56] = v56;
    v9[57] = v57;
    v9[58] = v58;
    v9[59] = v59;
    v9[60] = v60;
    v9[61] = v61;
    v9[62] = v62;
    v9[63] = v63;
    uint64_t v21 = *(int *)(v67 + 24);
    uint64_t v22 = (char *)v64 + v21;
    uint64_t v23 = (char *)v65 + v21;
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)uint64_t v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    *((void *)v22 + 2) = *((void *)v23 + 2);
    *((_WORD *)v22 + 12) = *((_WORD *)v23 + 12);
    uint64_t v25 = *((void *)v23 + 5);
    *((void *)v22 + 4) = *((void *)v23 + 4);
    *((void *)v22 + 5) = v25;
    *((unsigned char *)v64 + v66[5]) = *((unsigned char *)v65 + v66[5]);
    uint64_t v26 = v66[6];
    uint64_t v27 = (void *)((char *)v64 + v26);
    uint64_t v28 = (void *)((char *)v65 + v26);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = v66[7];
    uint64_t v31 = (void *)((char *)v64 + v30);
    uint64_t v32 = (void *)((char *)v65 + v30);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v20;
}

uint64_t sub_249A1A0A4(uint64_t a1)
{
  uint64_t v2 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = a1 + *(int *)(type metadata accessor for Instrument() + 20);
  long long v19 = *(_OWORD *)(v3 + 464);
  long long v20 = *(_OWORD *)(v3 + 480);
  long long v17 = *(_OWORD *)(v3 + 432);
  long long v18 = *(_OWORD *)(v3 + 448);
  long long v15 = *(_OWORD *)(v3 + 400);
  long long v16 = *(_OWORD *)(v3 + 416);
  long long v13 = *(_OWORD *)(v3 + 368);
  long long v14 = *(_OWORD *)(v3 + 384);
  long long v11 = *(_OWORD *)(v3 + 336);
  long long v12 = *(_OWORD *)(v3 + 352);
  long long v9 = *(_OWORD *)(v3 + 304);
  long long v10 = *(_OWORD *)(v3 + 320);
  long long v7 = *(_OWORD *)(v3 + 272);
  long long v8 = *(_OWORD *)(v3 + 288);
  long long v5 = *(_OWORD *)(v3 + 240);
  long long v6 = *(_OWORD *)(v3 + 256);
  sub_2498FCAAC(*(void *)v3, *(void *)(v3 + 8), *(void **)(v3 + 16), *(void **)(v3 + 24), *(void **)(v3 + 32), *(void **)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void **)(v3 + 64), *(void **)(v3 + 72), *(void **)(v3 + 80), *(void *)(v3 + 88), *(void *)(v3 + 96), *(void *)(v3 + 104), *(void *)(v3 + 112), *(void *)(v3 + 120), *(void *)(v3 + 128), *(void *)(v3 + 136), *(void *)(v3 + 144),
    *(void *)(v3 + 152),
    *(void **)(v3 + 160),
    *(void *)(v3 + 168),
    *(void *)(v3 + 176),
    *(void *)(v3 + 184),
    *(void *)(v3 + 192),
    *(void *)(v3 + 200),
    *(void *)(v3 + 208),
    *(void **)(v3 + 216),
    *(void **)(v3 + 224),
    *(void *)(v3 + 232),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((unint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    SBYTE8(v12),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    SBYTE8(v15),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    SBYTE8(v18),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    *(void *)(v3 + 496));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for PopoverModel(0);
  swift_release();

  return swift_release();
}

uint64_t sub_249A1A214(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  *(void *)(a1 + *(int *)(v5 + 52)) = *(void *)(a2 + *(int *)(v5 + 52));
  uint64_t v63 = type metadata accessor for Instrument();
  uint64_t v6 = *(int *)(v63 + 20);
  long long v7 = (uint64_t *)(a1 + v6);
  long long v8 = (uint64_t *)(a2 + v6);
  uint64_t v89 = (void *)v8[10];
  uint64_t v90 = (void *)v8[9];
  uint64_t v87 = v8[12];
  unint64_t v88 = v8[11];
  uint64_t v85 = v8[14];
  uint64_t v86 = v8[13];
  uint64_t v83 = v8[16];
  uint64_t v84 = v8[15];
  uint64_t v81 = v8[18];
  uint64_t v82 = v8[17];
  uint64_t v79 = (void *)v8[20];
  uint64_t v80 = v8[19];
  uint64_t v77 = v8[22];
  uint64_t v78 = v8[21];
  uint64_t v75 = v8[24];
  uint64_t v76 = v8[23];
  uint64_t v73 = v8[26];
  uint64_t v74 = v8[25];
  uint64_t v71 = (void *)v8[28];
  uint64_t v72 = (void *)v8[27];
  uint64_t v70 = v8[29];
  uint64_t v69 = v8[30];
  uint64_t v68 = v8[31];
  uint64_t v67 = v8[32];
  uint64_t v66 = v8[33];
  uint64_t v65 = v8[34];
  uint64_t v64 = v8[35];
  uint64_t v33 = v8[36];
  uint64_t v34 = v8[37];
  uint64_t v35 = v8[38];
  uint64_t v36 = v8[39];
  uint64_t v37 = v8[40];
  unint64_t v38 = v8[41];
  uint64_t v39 = v8[42];
  uint64_t v40 = v8[43];
  uint64_t v41 = v8[44];
  uint64_t v42 = v8[45];
  uint64_t v43 = v8[46];
  uint64_t v44 = v8[47];
  uint64_t v45 = v8[48];
  uint64_t v46 = v8[49];
  uint64_t v47 = v8[50];
  uint64_t v48 = v8[51];
  uint64_t v49 = v8[52];
  uint64_t v50 = v8[53];
  uint64_t v51 = v8[54];
  uint64_t v52 = v8[55];
  uint64_t v53 = v8[56];
  uint64_t v54 = v8[57];
  uint64_t v55 = v8[58];
  uint64_t v56 = v8[59];
  unint64_t v57 = v8[60];
  uint64_t v58 = v8[61];
  unint64_t v59 = v8[62];
  uint64_t v60 = v8[63];
  long long v9 = (void *)v8[8];
  uint64_t v10 = *v8;
  uint64_t v11 = v8[1];
  long long v12 = (void *)v8[2];
  long long v13 = (void *)v8[3];
  long long v14 = (void *)v8[4];
  long long v15 = (void *)v8[5];
  uint64_t v16 = v8[6];
  uint64_t v17 = v8[7];
  sub_2498FB4B4(*v8, v11, v12, v13, v14, v15, v16, v17, v9, v90, v89, v88, v87, v86, v85, v84, v83, v82, v81,
    v80,
    v79,
    v78,
    v77,
    v76,
    v75,
    v74,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v67,
    v66,
    v65,
    v64,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59);
  *long long v7 = v10;
  v7[1] = v11;
  v7[2] = (uint64_t)v12;
  v7[3] = (uint64_t)v13;
  v7[4] = (uint64_t)v14;
  v7[5] = (uint64_t)v15;
  v7[6] = v16;
  v7[7] = v17;
  v7[8] = (uint64_t)v9;
  v7[9] = (uint64_t)v90;
  v7[10] = (uint64_t)v89;
  v7[11] = v88;
  v7[12] = v87;
  v7[13] = v86;
  v7[14] = v85;
  v7[15] = v84;
  v7[16] = v83;
  v7[17] = v82;
  v7[18] = v81;
  v7[19] = v80;
  v7[20] = (uint64_t)v79;
  v7[21] = v78;
  v7[22] = v77;
  v7[23] = v76;
  v7[24] = v75;
  v7[25] = v74;
  v7[26] = v73;
  v7[27] = (uint64_t)v72;
  v7[28] = (uint64_t)v71;
  v7[29] = v70;
  v7[30] = v69;
  v7[31] = v68;
  v7[32] = v67;
  v7[33] = v66;
  v7[34] = v65;
  v7[35] = v64;
  v7[36] = v33;
  v7[37] = v34;
  v7[38] = v35;
  v7[39] = v36;
  v7[40] = v37;
  v7[41] = v38;
  v7[42] = v39;
  v7[43] = v40;
  v7[44] = v41;
  v7[45] = v42;
  v7[46] = v43;
  v7[47] = v44;
  v7[48] = v45;
  v7[49] = v46;
  v7[50] = v47;
  v7[51] = v48;
  v7[52] = v49;
  v7[53] = v50;
  v7[54] = v51;
  v7[55] = v52;
  v7[56] = v53;
  v7[57] = v54;
  v7[58] = v55;
  v7[59] = v56;
  v7[60] = v57;
  v7[61] = v58;
  v7[62] = v59;
  v7[63] = v60;
  uint64_t v18 = *(int *)(v63 + 24);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)(v20 + 8);
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = v21;
  *(void *)(v19 + 16) = *(void *)(v20 + 16);
  *(_WORD *)(v19 + 24) = *(_WORD *)(v20 + 24);
  uint64_t v22 = *(void *)(v20 + 40);
  *(void *)(v19 + 32) = *(void *)(v20 + 32);
  *(void *)(v19 + 40) = v22;
  uint64_t v23 = (int *)type metadata accessor for PopoverModel(0);
  *(unsigned char *)(a1 + v23[5]) = *(unsigned char *)(a2 + v23[5]);
  uint64_t v24 = v23[6];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = v23[7];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_249A1A824(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  *(void *)(a1 + *(int *)(v5 + 52)) = *(void *)(a2 + *(int *)(v5 + 52));
  uint64_t v95 = type metadata accessor for Instrument();
  uint64_t v6 = *(int *)(v95 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  v122 = *(void **)(v8 + 72);
  uint64_t v123 = *(void **)(v8 + 64);
  unint64_t v120 = *(void *)(v8 + 88);
  unint64_t v121 = *(void **)(v8 + 80);
  uint64_t v118 = *(void *)(v8 + 104);
  uint64_t v119 = *(void *)(v8 + 96);
  uint64_t v116 = *(void *)(v8 + 120);
  uint64_t v117 = *(void *)(v8 + 112);
  uint64_t v114 = *(void *)(v8 + 136);
  uint64_t v115 = *(void *)(v8 + 128);
  uint64_t v112 = *(void *)(v8 + 152);
  uint64_t v113 = *(void *)(v8 + 144);
  uint64_t v110 = *(void *)(v8 + 168);
  uint64_t v111 = *(void **)(v8 + 160);
  uint64_t v108 = *(void *)(v8 + 184);
  uint64_t v109 = *(void *)(v8 + 176);
  uint64_t v107 = *(void *)(v8 + 192);
  uint64_t v106 = *(void *)(v8 + 200);
  uint64_t v105 = *(void *)(v8 + 208);
  uint64_t v104 = *(void **)(v8 + 216);
  uint64_t v103 = *(void **)(v8 + 224);
  uint64_t v102 = *(void *)(v8 + 232);
  uint64_t v101 = *(void *)(v8 + 240);
  uint64_t v100 = *(void *)(v8 + 248);
  uint64_t v99 = *(void *)(v8 + 256);
  uint64_t v98 = *(void *)(v8 + 264);
  uint64_t v97 = *(void *)(v8 + 272);
  uint64_t v96 = *(void *)(v8 + 280);
  uint64_t v67 = *(void *)(v8 + 288);
  uint64_t v68 = *(void *)(v8 + 296);
  uint64_t v69 = *(void *)(v8 + 304);
  uint64_t v70 = *(void *)(v8 + 312);
  uint64_t v71 = *(void *)(v8 + 320);
  unint64_t v72 = *(void *)(v8 + 328);
  uint64_t v73 = *(void *)(v8 + 336);
  uint64_t v74 = *(void *)(v8 + 344);
  uint64_t v75 = *(void *)(v8 + 352);
  uint64_t v9 = *(void *)(v8 + 360);
  long long v76 = *(_OWORD *)(v8 + 368);
  uint64_t v77 = *(void *)(v8 + 384);
  uint64_t v78 = *(void *)(v8 + 392);
  uint64_t v79 = *(void *)(v8 + 400);
  uint64_t v80 = *(void *)(v8 + 408);
  uint64_t v81 = *(void *)(v8 + 416);
  uint64_t v82 = *(void *)(v8 + 424);
  uint64_t v83 = *(void *)(v8 + 432);
  uint64_t v84 = *(void *)(v8 + 440);
  uint64_t v85 = *(void *)(v8 + 448);
  uint64_t v86 = *(void *)(v8 + 456);
  uint64_t v87 = *(void *)(v8 + 464);
  uint64_t v88 = *(void *)(v8 + 472);
  unint64_t v89 = *(void *)(v8 + 480);
  uint64_t v90 = *(void *)(v8 + 488);
  unint64_t v91 = *(void *)(v8 + 496);
  uint64_t v92 = *(void *)(v8 + 504);
  uint64_t v10 = *(void *)v8;
  uint64_t v11 = *(void *)(v8 + 8);
  long long v12 = *(void **)(v8 + 16);
  long long v13 = *(void **)(v8 + 24);
  long long v14 = *(void **)(v8 + 32);
  uint64_t v15 = *(void *)(v8 + 48);
  uint64_t v16 = *(void **)(v8 + 40);
  uint64_t v17 = *(void *)(v8 + 56);
  sub_2498FB4B4(*(void *)v8, v11, v12, v13, v14, v16, v15, v17, v123, v122, v121, v120, v119, v118, v117, v116, v115, v114, v113,
    v112,
    v111,
    v110,
    v109,
    v108,
    v107,
    v106,
    v105,
    v104,
    v103,
    v102,
    v101,
    v100,
    v99,
    v98,
    v97,
    v96,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    *(_OWORD *)(v8 + 336),
    v74,
    v75,
    v9,
    v76,
    *((uint64_t *)&v76 + 1),
    *(_OWORD *)(v8 + 384),
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v91);
  uint64_t v18 = *(void *)v7;
  uint64_t v19 = *(void *)(v7 + 8);
  *(void *)uint64_t v7 = v10;
  *(void *)(v7 + 8) = v11;
  uint64_t v20 = *(void **)(v7 + 16);
  uint64_t v21 = *(void **)(v7 + 24);
  *(void *)(v7 + 16) = v12;
  *(void *)(v7 + 24) = v13;
  uint64_t v22 = *(void **)(v7 + 32);
  uint64_t v23 = *(void **)(v7 + 40);
  *(void *)(v7 + 32) = v14;
  *(void *)(v7 + 40) = v16;
  uint64_t v24 = *(void *)(v7 + 48);
  uint64_t v25 = *(void *)(v7 + 56);
  *(void *)(v7 + 48) = v15;
  *(void *)(v7 + 56) = v17;
  long long v26 = *(_OWORD *)(v7 + 64);
  long long v27 = *(_OWORD *)(v7 + 80);
  *(void *)(v7 + 64) = v123;
  *(void *)(v7 + 72) = v122;
  *(void *)(v7 + 80) = v121;
  *(void *)(v7 + 88) = v120;
  long long v28 = *(_OWORD *)(v7 + 96);
  long long v29 = *(_OWORD *)(v7 + 112);
  *(void *)(v7 + 96) = v119;
  *(void *)(v7 + 104) = v118;
  *(void *)(v7 + 112) = v117;
  *(void *)(v7 + 120) = v116;
  long long v30 = *(_OWORD *)(v7 + 128);
  long long v31 = *(_OWORD *)(v7 + 144);
  *(void *)(v7 + 128) = v115;
  *(void *)(v7 + 136) = v114;
  *(void *)(v7 + 144) = v113;
  *(void *)(v7 + 152) = v112;
  long long v32 = *(_OWORD *)(v7 + 160);
  long long v33 = *(_OWORD *)(v7 + 176);
  *(void *)(v7 + 160) = v111;
  *(void *)(v7 + 168) = v110;
  *(void *)(v7 + 176) = v109;
  *(void *)(v7 + 184) = v108;
  long long v34 = *(_OWORD *)(v7 + 192);
  long long v35 = *(_OWORD *)(v7 + 208);
  *(void *)(v7 + 192) = v107;
  *(void *)(v7 + 200) = v106;
  *(void *)(v7 + 208) = v105;
  *(void *)(v7 + 216) = v104;
  long long v36 = *(_OWORD *)(v7 + 224);
  long long v37 = *(_OWORD *)(v7 + 240);
  *(void *)(v7 + 224) = v103;
  *(void *)(v7 + 232) = v102;
  *(void *)(v7 + 240) = v101;
  *(void *)(v7 + 248) = v100;
  long long v38 = *(_OWORD *)(v7 + 256);
  long long v39 = *(_OWORD *)(v7 + 272);
  *(void *)(v7 + 256) = v99;
  *(void *)(v7 + 264) = v98;
  *(void *)(v7 + 272) = v97;
  *(void *)(v7 + 280) = v96;
  long long v40 = *(_OWORD *)(v7 + 288);
  long long v41 = *(_OWORD *)(v7 + 304);
  *(void *)(v7 + 288) = v67;
  *(void *)(v7 + 296) = v68;
  *(void *)(v7 + 304) = v69;
  *(void *)(v7 + 312) = v70;
  long long v42 = *(_OWORD *)(v7 + 320);
  long long v43 = *(_OWORD *)(v7 + 336);
  *(void *)(v7 + 320) = v71;
  *(void *)(v7 + 328) = v72;
  *(void *)(v7 + 336) = v73;
  *(void *)(v7 + 344) = v74;
  long long v44 = *(_OWORD *)(v7 + 352);
  long long v45 = *(_OWORD *)(v7 + 368);
  *(void *)(v7 + 352) = v75;
  *(void *)(v7 + 360) = v9;
  *(_OWORD *)(v7 + 368) = v76;
  long long v46 = *(_OWORD *)(v7 + 384);
  long long v47 = *(_OWORD *)(v7 + 400);
  *(void *)(v7 + 384) = v77;
  *(void *)(v7 + 392) = v78;
  *(void *)(v7 + 400) = v79;
  *(void *)(v7 + 408) = v80;
  long long v48 = *(_OWORD *)(v7 + 416);
  long long v49 = *(_OWORD *)(v7 + 432);
  *(void *)(v7 + 416) = v81;
  *(void *)(v7 + 424) = v82;
  *(void *)(v7 + 432) = v83;
  *(void *)(v7 + 440) = v84;
  long long v50 = *(_OWORD *)(v7 + 448);
  long long v51 = *(_OWORD *)(v7 + 464);
  *(void *)(v7 + 448) = v85;
  *(void *)(v7 + 456) = v86;
  *(void *)(v7 + 464) = v87;
  *(void *)(v7 + 472) = v88;
  long long v52 = *(_OWORD *)(v7 + 480);
  *(void *)(v7 + 480) = v89;
  *(void *)(v7 + 488) = v90;
  unint64_t v53 = *(void *)(v7 + 496);
  *(void *)(v7 + 496) = v91;
  *(void *)(v7 + 504) = v92;
  sub_2498FCAAC(v18, v19, v20, v21, v22, v23, v24, v25, (void *)v26, *((void **)&v26 + 1), (void *)v27, *((unint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1), v30, *((uint64_t *)&v30 + 1), v31,
    *((uint64_t *)&v31 + 1),
    (void *)v32,
    *((uint64_t *)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((void **)&v35 + 1),
    (void *)v36,
    *((uint64_t *)&v36 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v39,
    *((uint64_t *)&v39 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v41,
    *((uint64_t *)&v41 + 1),
    v42,
    *((unint64_t *)&v42 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    SBYTE8(v44),
    v45,
    *((uint64_t *)&v45 + 1),
    v46,
    *((uint64_t *)&v46 + 1),
    v47,
    SBYTE8(v47),
    v48,
    *((uint64_t *)&v48 + 1),
    v49,
    *((uint64_t *)&v49 + 1),
    v50,
    SBYTE8(v50),
    v51,
    *((uint64_t *)&v51 + 1),
    v52,
    *((uint64_t *)&v52 + 1),
    v53);
  uint64_t v54 = *(int *)(v95 + 24);
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  *(void *)(a1 + v54) = *(void *)(a2 + v54);
  swift_retain();
  swift_release();
  *(void *)(v55 + 8) = *(void *)(v56 + 8);
  *(void *)(v55 + 16) = *(void *)(v56 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v55 + 24) = *(unsigned char *)(v56 + 24);
  *(unsigned char *)(v55 + 25) = *(unsigned char *)(v56 + 25);
  *(void *)(v55 + 32) = *(void *)(v56 + 32);
  *(void *)(v55 + 40) = *(void *)(v56 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v57 = (int *)type metadata accessor for PopoverModel(0);
  *(unsigned char *)(a1 + v57[5]) = *(unsigned char *)(a2 + v57[5]);
  uint64_t v58 = v57[6];
  unint64_t v59 = (void *)(a1 + v58);
  uint64_t v60 = (void *)(a2 + v58);
  uint64_t v61 = v60[1];
  *unint64_t v59 = *v60;
  v59[1] = v61;
  swift_retain();
  swift_release();
  uint64_t v62 = v57[7];
  uint64_t v63 = (void *)(a1 + v62);
  uint64_t v64 = (void *)(a2 + v62);
  uint64_t v65 = v64[1];
  *uint64_t v63 = *v64;
  v63[1] = v65;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_249A1AF18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  *(void *)(a1 + *(int *)(v5 + 52)) = *(void *)(a2 + *(int *)(v5 + 52));
  uint64_t v6 = type metadata accessor for Instrument();
  memcpy((void *)(a1 + *(int *)(v6 + 20)), (const void *)(a2 + *(int *)(v6 + 20)), 0x200uLL);
  uint64_t v7 = *(int *)(v6 + 24);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  uint64_t v11 = (int *)type metadata accessor for PopoverModel(0);
  *(unsigned char *)(a1 + v11[5]) = *(unsigned char *)(a2 + v11[5]);
  *(_OWORD *)(a1 + v11[6]) = *(_OWORD *)(a2 + v11[6]);
  *(_OWORD *)(a1 + v11[7]) = *(_OWORD *)(a2 + v11[7]);
  return a1;
}

uint64_t sub_249A1B004(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  *(void *)(a1 + *(int *)(v5 + 52)) = *(void *)(a2 + *(int *)(v5 + 52));
  uint64_t v6 = type metadata accessor for Instrument();
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (_OWORD *)(a2 + v7);
  uint64_t v10 = *(void *)v8;
  uint64_t v11 = *(void *)(v8 + 8);
  long long v12 = *(void **)(v8 + 16);
  long long v13 = *(void **)(v8 + 24);
  long long v14 = *(void **)(v8 + 32);
  uint64_t v15 = *(void **)(v8 + 40);
  uint64_t v16 = *(void *)(v8 + 48);
  uint64_t v17 = *(void *)(v8 + 56);
  long long v18 = *(_OWORD *)(v8 + 64);
  long long v19 = *(_OWORD *)(v8 + 80);
  long long v20 = *(_OWORD *)(v8 + 96);
  long long v21 = *(_OWORD *)(v8 + 112);
  long long v22 = *(_OWORD *)(v8 + 128);
  long long v23 = *(_OWORD *)(v8 + 144);
  long long v24 = *(_OWORD *)(v8 + 160);
  long long v25 = *(_OWORD *)(v8 + 176);
  long long v26 = *(_OWORD *)(v8 + 192);
  long long v27 = *(_OWORD *)(v8 + 208);
  long long v28 = *(_OWORD *)(v8 + 224);
  long long v29 = *(_OWORD *)(v8 + 240);
  long long v30 = *(_OWORD *)(v8 + 256);
  long long v31 = *(_OWORD *)(v8 + 272);
  long long v32 = *(_OWORD *)(v8 + 288);
  long long v33 = *(_OWORD *)(v8 + 304);
  long long v34 = *(_OWORD *)(v8 + 320);
  long long v35 = *(_OWORD *)(v8 + 336);
  long long v36 = *(_OWORD *)(v8 + 352);
  long long v37 = *(_OWORD *)(v8 + 368);
  long long v38 = *(_OWORD *)(v8 + 384);
  long long v39 = *(_OWORD *)(v8 + 400);
  long long v40 = *(_OWORD *)(v8 + 416);
  long long v41 = *(_OWORD *)(v8 + 432);
  long long v42 = *(_OWORD *)(v8 + 448);
  long long v43 = *(_OWORD *)(v8 + 464);
  long long v44 = *(_OWORD *)(v8 + 480);
  unint64_t v45 = *(void *)(v8 + 496);
  long long v46 = v9[1];
  *(_OWORD *)uint64_t v8 = *v9;
  *(_OWORD *)(v8 + 16) = v46;
  long long v47 = v9[3];
  *(_OWORD *)(v8 + 32) = v9[2];
  *(_OWORD *)(v8 + 48) = v47;
  long long v48 = v9[5];
  *(_OWORD *)(v8 + 64) = v9[4];
  *(_OWORD *)(v8 + 80) = v48;
  long long v49 = v9[7];
  *(_OWORD *)(v8 + 96) = v9[6];
  *(_OWORD *)(v8 + 112) = v49;
  long long v50 = v9[9];
  *(_OWORD *)(v8 + 128) = v9[8];
  *(_OWORD *)(v8 + 144) = v50;
  long long v51 = v9[11];
  *(_OWORD *)(v8 + 160) = v9[10];
  *(_OWORD *)(v8 + 176) = v51;
  long long v52 = v9[13];
  *(_OWORD *)(v8 + 192) = v9[12];
  *(_OWORD *)(v8 + 208) = v52;
  long long v53 = v9[15];
  *(_OWORD *)(v8 + 224) = v9[14];
  *(_OWORD *)(v8 + 240) = v53;
  long long v54 = v9[17];
  *(_OWORD *)(v8 + 256) = v9[16];
  *(_OWORD *)(v8 + 272) = v54;
  long long v55 = v9[19];
  *(_OWORD *)(v8 + 288) = v9[18];
  *(_OWORD *)(v8 + 304) = v55;
  long long v56 = v9[21];
  *(_OWORD *)(v8 + 320) = v9[20];
  *(_OWORD *)(v8 + 336) = v56;
  long long v57 = v9[23];
  *(_OWORD *)(v8 + 352) = v9[22];
  *(_OWORD *)(v8 + 368) = v57;
  long long v58 = v9[25];
  *(_OWORD *)(v8 + 384) = v9[24];
  *(_OWORD *)(v8 + 400) = v58;
  long long v59 = v9[27];
  *(_OWORD *)(v8 + 416) = v9[26];
  *(_OWORD *)(v8 + 432) = v59;
  long long v60 = v9[29];
  *(_OWORD *)(v8 + 448) = v9[28];
  *(_OWORD *)(v8 + 464) = v60;
  long long v61 = v9[31];
  *(_OWORD *)(v8 + 480) = v9[30];
  *(_OWORD *)(v8 + 496) = v61;
  sub_2498FCAAC(v10, v11, v12, v13, v14, v15, v16, v17, (void *)v18, *((void **)&v18 + 1), (void *)v19, *((unint64_t *)&v19 + 1), v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23,
    *((uint64_t *)&v23 + 1),
    (void *)v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((void **)&v27 + 1),
    (void *)v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((unint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    SBYTE8(v36),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v39,
    SBYTE8(v39),
    v40,
    *((uint64_t *)&v40 + 1),
    v41,
    *((uint64_t *)&v41 + 1),
    v42,
    SBYTE8(v42),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    *((uint64_t *)&v44 + 1),
    v45);
  uint64_t v62 = *(int *)(v6 + 24);
  uint64_t v63 = a1 + v62;
  uint64_t v64 = a2 + v62;
  *(void *)(a1 + v62) = *(void *)(a2 + v62);
  swift_release();
  uint64_t v65 = *(void *)(v64 + 16);
  *(void *)(v63 + 8) = *(void *)(v64 + 8);
  *(void *)(v63 + 16) = v65;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v63 + 24) = *(unsigned char *)(v64 + 24);
  *(unsigned char *)(v63 + 25) = *(unsigned char *)(v64 + 25);
  uint64_t v66 = *(void *)(v64 + 40);
  *(void *)(v63 + 32) = *(void *)(v64 + 32);
  *(void *)(v63 + 40) = v66;
  swift_bridgeObjectRelease();
  uint64_t v67 = (int *)type metadata accessor for PopoverModel(0);
  *(unsigned char *)(a1 + v67[5]) = *(unsigned char *)(a2 + v67[5]);
  *(_OWORD *)(a1 + v67[6]) = *(_OWORD *)(a2 + v67[6]);
  swift_release();
  *(_OWORD *)(a1 + v67[7]) = *(_OWORD *)(a2 + v67[7]);
  swift_release();
  return a1;
}

uint64_t sub_249A1B268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249A1B27C);
}

uint64_t sub_249A1B27C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PopoverModel(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_249A1B2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249A1B2FC);
}

uint64_t sub_249A1B2FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PopoverModel(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PopoverContainer(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696E39A0);
}

uint64_t sub_249A1B38C()
{
  uint64_t result = type metadata accessor for PopoverModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_249A1B418()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249A1B444()
{
  return sub_2498D0A3C(&qword_2696E39B8, &qword_2696E39B0);
}

uint64_t Color.init(r:g:b:a:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8 = sub_249AEC838();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void))(v11 + 104))(v10, *MEMORY[0x263F1B388]);
  return MEMORY[0x24C5ADA90](v10, (double)a1 / 255.0, (double)a2 / 255.0, (double)a3 / 255.0, a4);
}

uint64_t Color.init(hex:alpha:)(int a1, double a2)
{
  uint64_t v4 = sub_249AEC838();
  __n128 v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, __n128))(v8 + 104))(v7, *MEMORY[0x263F1B388], v5);
  return MEMORY[0x24C5ADA90](v7, (double)BYTE2(a1) / 255.0, (double)BYTE1(a1) / 255.0, (double)a1 / 255.0, a2);
}

uint64_t NinePartImage.assets.getter()
{
  uint64_t v2 = *(void **)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v127 = *(void **)(v0 + 16);
  uint64_t v128 = v3;
  int v4 = *(unsigned __int8 *)(v0 + 32);
  uint64_t v93 = *(void *)(v0 + 40);
  __n128 v5 = *(void **)(v0 + 48);
  uint64_t v123 = v1;
  uint64_t v124 = v5;
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v7 = *(void **)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 72);
  int v121 = *(unsigned __int8 *)(v0 + 80);
  uint64_t v91 = *(void *)(v0 + 88);
  uint64_t v9 = *(void **)(v0 + 96);
  uint64_t v125 = v6;
  uint64_t v126 = v9;
  uint64_t v10 = *(void **)(v0 + 112);
  uint64_t v117 = *(void *)(v0 + 104);
  uint64_t v118 = v10;
  uint64_t v122 = *(void *)(v0 + 120);
  int v11 = *(unsigned __int8 *)(v0 + 128);
  uint64_t v12 = *(void *)(v0 + 136);
  uint64_t v13 = *(void **)(v0 + 144);
  uint64_t v115 = *(void *)(v0 + 152);
  uint64_t v116 = v13;
  uint64_t v114 = *(void **)(v0 + 160);
  uint64_t v120 = *(void *)(v0 + 168);
  int v119 = *(unsigned __int8 *)(v0 + 176);
  uint64_t v14 = *(void *)(v0 + 184);
  uint64_t v76 = v12;
  uint64_t v77 = v14;
  uint64_t v15 = *(void **)(v0 + 192);
  uint64_t v101 = *(void *)(v0 + 200);
  uint64_t v102 = v15;
  uint64_t v16 = *(void **)(v0 + 208);
  uint64_t v99 = *(void *)(v0 + 216);
  uint64_t v100 = v16;
  uint64_t v17 = *(void *)(v0 + 224);
  uint64_t v98 = *(void *)(v0 + 232);
  uint64_t v18 = *(void *)(v0 + 248);
  uint64_t v103 = *(void **)(v0 + 240);
  uint64_t v104 = v18;
  uint64_t v19 = *(void *)(v0 + 264);
  uint64_t v105 = *(void **)(v0 + 256);
  uint64_t v106 = v19;
  int v107 = *(unsigned __int8 *)(v0 + 272);
  uint64_t v20 = *(void *)(v0 + 280);
  uint64_t v21 = *(void *)(v0 + 296);
  uint64_t v108 = *(void **)(v0 + 288);
  uint64_t v109 = v21;
  uint64_t v22 = *(void *)(v0 + 312);
  uint64_t v110 = *(void **)(v0 + 304);
  uint64_t v111 = v22;
  int v112 = *(unsigned __int8 *)(v0 + 320);
  uint64_t v23 = *(void *)(v0 + 328);
  uint64_t v78 = v20;
  uint64_t v79 = v23;
  uint64_t v113 = *(void **)(v0 + 336);
  long long v24 = *(void **)(v0 + 352);
  uint64_t v82 = *(void *)(v0 + 344);
  uint64_t v83 = v24;
  uint64_t v84 = *(void *)(v0 + 360);
  int v85 = *(unsigned __int8 *)(v0 + 368);
  uint64_t v25 = *(void *)(v0 + 376);
  uint64_t v26 = *(void *)(v0 + 392);
  uint64_t v86 = *(void **)(v0 + 384);
  uint64_t v87 = v26;
  uint64_t v27 = *(void *)(v0 + 408);
  uint64_t v88 = *(void **)(v0 + 400);
  uint64_t v89 = v27;
  int v90 = *(unsigned __int8 *)(v0 + 416);
  uint64_t v28 = *(void *)(v0 + 424);
  uint64_t v80 = v25;
  uint64_t v81 = v28;
  long long v135 = xmmword_249B06030;
  uint64_t v96 = v136;
  v136[3] = &type metadata for ImageAsset;
  v136[4] = &protocol witness table for ImageAsset;
  uint64_t v97 = v17;
  char v29 = ~(_BYTE)v17;
  uint64_t v30 = swift_allocObject();
  uint64_t v95 = v2;
  uint64_t v31 = v123;
  *(void *)(v30 + 16) = v2;
  *(void *)(v30 + 24) = v31;
  uint64_t v32 = v128;
  *(void *)(v30 + 32) = v127;
  *(void *)(v30 + 40) = v32;
  int v94 = v4;
  *(unsigned char *)(v30 + 48) = v4;
  *(void *)(v30 + 56) = v93;
  v136[0] = v30;
  v136[8] = &type metadata for ImageAsset;
  v136[9] = &protocol witness table for ImageAsset;
  uint64_t v33 = swift_allocObject();
  uint64_t v34 = v125;
  *(void *)(v33 + 16) = v124;
  *(void *)(v33 + 24) = v34;
  uint64_t v92 = v7;
  uint64_t v93 = v8;
  *(void *)(v33 + 32) = v7;
  *(void *)(v33 + 40) = v8;
  *(unsigned char *)(v33 + 48) = v121;
  *(void *)(v33 + 56) = v91;
  v136[5] = v33;
  v136[13] = &type metadata for ImageAsset;
  v136[14] = &protocol witness table for ImageAsset;
  uint64_t v35 = swift_allocObject();
  uint64_t v36 = v117;
  *(void *)(v35 + 16) = v126;
  *(void *)(v35 + 24) = v36;
  uint64_t v37 = v122;
  *(void *)(v35 + 32) = v118;
  *(void *)(v35 + 40) = v37;
  LODWORD(v91) = v11;
  *(unsigned char *)(v35 + 48) = v11;
  *(void *)(v35 + 56) = v76;
  v136[10] = v35;
  v136[18] = &type metadata for ImageAsset;
  v136[19] = &protocol witness table for ImageAsset;
  uint64_t v38 = swift_allocObject();
  v136[15] = v38;
  uint64_t v39 = v115;
  *(void *)(v38 + 16) = v116;
  *(void *)(v38 + 24) = v39;
  uint64_t v40 = v120;
  *(void *)(v38 + 32) = v114;
  *(void *)(v38 + 40) = v40;
  *(unsigned char *)(v38 + 48) = v119;
  *(void *)(v38 + 56) = v77;
  if ((v29 & 0xFE) != 0)
  {
    uint64_t v41 = swift_allocObject();
    uint64_t v44 = v101;
    *(void *)(v41 + 16) = v102;
    *(void *)(v41 + 24) = v44;
    uint64_t v45 = v99;
    *(void *)(v41 + 32) = v100;
    *(void *)(v41 + 40) = v45;
    *(unsigned char *)(v41 + 48) = v97;
    *(void *)(v41 + 56) = v98;
    long long v43 = &protocol witness table for ImageAsset;
    long long v42 = &type metadata for ImageAsset;
  }
  else
  {
    uint64_t v41 = 0;
    long long v42 = 0;
    long long v43 = 0;
    v136[22] = 0;
    v136[21] = 0;
  }
  v136[20] = v41;
  v136[23] = v42;
  v136[24] = v43;
  v136[28] = &type metadata for ImageAsset;
  v136[29] = &protocol witness table for ImageAsset;
  uint64_t v46 = swift_allocObject();
  uint64_t v47 = v104;
  *(void *)(v46 + 16) = v103;
  *(void *)(v46 + 24) = v47;
  uint64_t v48 = v106;
  *(void *)(v46 + 32) = v105;
  *(void *)(v46 + 40) = v48;
  *(unsigned char *)(v46 + 48) = v107;
  *(void *)(v46 + 56) = v78;
  v136[25] = v46;
  v136[33] = &type metadata for ImageAsset;
  v136[34] = &protocol witness table for ImageAsset;
  uint64_t v49 = swift_allocObject();
  uint64_t v50 = v109;
  *(void *)(v49 + 16) = v108;
  *(void *)(v49 + 24) = v50;
  uint64_t v51 = v111;
  *(void *)(v49 + 32) = v110;
  *(void *)(v49 + 40) = v51;
  *(unsigned char *)(v49 + 48) = v112;
  *(void *)(v49 + 56) = v79;
  v136[30] = v49;
  v136[38] = &type metadata for ImageAsset;
  v136[39] = &protocol witness table for ImageAsset;
  uint64_t v52 = swift_allocObject();
  uint64_t v54 = v82;
  long long v53 = v83;
  *(void *)(v52 + 16) = v113;
  *(void *)(v52 + 24) = v54;
  uint64_t v55 = v84;
  *(void *)(v52 + 32) = v53;
  *(void *)(v52 + 40) = v55;
  char v56 = v85;
  *(unsigned char *)(v52 + 48) = v85;
  *(void *)(v52 + 56) = v80;
  v136[35] = v52;
  v136[43] = &type metadata for ImageAsset;
  v136[44] = &protocol witness table for ImageAsset;
  uint64_t v57 = swift_allocObject();
  v136[40] = v57;
  long long v59 = v86;
  uint64_t v58 = v87;
  *(void *)(v57 + 16) = v86;
  *(void *)(v57 + 24) = v58;
  long long v61 = v88;
  uint64_t v60 = v89;
  *(void *)(v57 + 32) = v88;
  *(void *)(v57 + 40) = v60;
  char v62 = v90;
  *(unsigned char *)(v57 + 48) = v90;
  *(void *)(v57 + 56) = v81;
  v134[0] = MEMORY[0x263F8EE78];
  sub_24988247C(v95, v123, v127, v128, v94);
  sub_24988247C(v124, v125, v92, v93, v121);
  sub_24988247C(v126, v117, v118, v122, v91);
  sub_24988247C(v116, v115, v114, v120, v119);
  sub_249882468(v102, v101, v100, v99, v97);
  sub_24988247C(v103, v104, v105, v106, v107);
  sub_24988247C(v108, v109, v110, v111, v112);
  sub_24988247C(v113, v54, v53, v55, v56);
  sub_24988247C(v59, v58, v61, v60, v62);
  for (uint64_t i = 4; i != 49; i += 5)
  {
    sub_249A1BD84((uint64_t)&v134[i + 1], (uint64_t)v133);
    sub_249A1BDEC((uint64_t)v133, (uint64_t)&v129);
    if (v130)
    {
      sub_249882BCC(&v129, (uint64_t)v132);
      sub_249882BCC(v132, (uint64_t)&v129);
      uint64_t v64 = (void *)v134[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v64 = sub_2498AB278(0, v64[2] + 1, 1, v64);
        v134[0] = (uint64_t)v64;
      }
      unint64_t v66 = v64[2];
      unint64_t v65 = v64[3];
      if (v66 >= v65 >> 1) {
        v134[0] = (uint64_t)sub_2498AB278((void *)(v65 > 1), v66 + 1, 1, v64);
      }
      uint64_t v67 = v130;
      uint64_t v68 = v131;
      uint64_t v69 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v129, v130);
      __n128 v70 = MEMORY[0x270FA5388](v69);
      unint64_t v72 = (char *)&v75 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v73 + 16))(v72, v70);
      sub_249A1DA78(v66, (uint64_t)v72, v134, v67, v68);
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v129);
    }
    else
    {
      sub_249882B6C((uint64_t)&v129);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDA48);
  swift_arrayDestroy();
  return v134[0];
}

uint64_t sub_249A1BD44()
{
  sub_2498826E4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_249A1BD84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDA48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249A1BDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDA48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void NinePartImage.restoreAssets(from:)(void *a1)
{
  ImageAsset.restore(from:)(a1);
  if (!v2)
  {
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    if ((~*(_DWORD *)(v1 + 224) & 0xFELL) != 0) {
      ImageAsset.restore(from:)(a1);
    }
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
  }
}

__n128 NinePartImage.init(topLeftCorner:topEdge:topRightCorner:leftEdge:middle:rightEdge:bottomLeftCorner:bottomEdge:bottomRightCorner:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X4>, long long *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  char v10 = *(unsigned char *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  char v12 = *(unsigned char *)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 40);
  char v14 = *(unsigned char *)(a3 + 32);
  uint64_t v15 = *(void *)(a3 + 40);
  char v16 = *(unsigned char *)(a4 + 32);
  uint64_t v17 = *(void *)(a4 + 40);
  char v18 = *((unsigned char *)a6 + 32);
  uint64_t v19 = *((void *)a6 + 5);
  char v20 = *(unsigned char *)(a7 + 32);
  uint64_t v21 = *(void *)(a7 + 40);
  char v22 = *(unsigned char *)(a8 + 32);
  uint64_t v23 = *(void *)(a8 + 40);
  char v24 = *(unsigned char *)(a10 + 32);
  uint64_t v25 = *(void *)(a10 + 40);
  long long v26 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a9 = *(_OWORD *)a1;
  *(_OWORD *)(a9 + 16) = v26;
  *(unsigned char *)(a9 + 32) = v10;
  *(void *)(a9 + 40) = v11;
  long long v27 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a9 + 48) = *(_OWORD *)a2;
  *(_OWORD *)(a9 + 64) = v27;
  *(unsigned char *)(a9 + 80) = v12;
  *(void *)(a9 + 88) = v13;
  long long v28 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a9 + 96) = *(_OWORD *)a3;
  *(_OWORD *)(a9 + 112) = v28;
  *(unsigned char *)(a9 + 128) = v14;
  *(void *)(a9 + 136) = v15;
  long long v29 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a9 + 144) = *(_OWORD *)a4;
  *(_OWORD *)(a9 + 160) = v29;
  *(unsigned char *)(a9 + 176) = v16;
  *(void *)(a9 + 184) = v17;
  long long v30 = a5[1];
  *(_OWORD *)(a9 + 192) = *a5;
  *(_OWORD *)(a9 + 208) = v30;
  long long v31 = *a6;
  long long v32 = a6[1];
  *(_OWORD *)(a9 + 224) = a5[2];
  *(_OWORD *)(a9 + 240) = v31;
  *(_OWORD *)(a9 + 256) = v32;
  *(unsigned char *)(a9 + 272) = v18;
  *(void *)(a9 + 280) = v19;
  long long v33 = *(_OWORD *)(a7 + 16);
  *(_OWORD *)(a9 + 288) = *(_OWORD *)a7;
  *(_OWORD *)(a9 + 304) = v33;
  *(unsigned char *)(a9 + 320) = v20;
  *(void *)(a9 + 328) = v21;
  long long v34 = *(_OWORD *)(a8 + 16);
  *(_OWORD *)(a9 + 336) = *(_OWORD *)a8;
  *(_OWORD *)(a9 + 352) = v34;
  *(unsigned char *)(a9 + 368) = v22;
  *(void *)(a9 + 376) = v23;
  __n128 result = *(__n128 *)a10;
  long long v36 = *(_OWORD *)(a10 + 16);
  *(_OWORD *)(a9 + 384) = *(_OWORD *)a10;
  *(_OWORD *)(a9 + 400) = v36;
  *(unsigned char *)(a9 + 416) = v24;
  *(void *)(a9 + 424) = v25;
  return result;
}

unint64_t sub_249A1C00C(char a1)
{
  unint64_t result = 0x437466654C706F74;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x65676445706F74;
      break;
    case 2:
      unint64_t result = 0x7468676952706F74;
      break;
    case 3:
      unint64_t result = 0x656764457466656CLL;
      break;
    case 4:
      unint64_t result = 0x656C6464696DLL;
      break;
    case 5:
      unint64_t result = 0x6764457468676972;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0x64456D6F74746F62;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_249A1C154()
{
  return sub_249A1C00C(*v0);
}

uint64_t sub_249A1C15C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A1E720(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A1C184(uint64_t a1)
{
  unint64_t v2 = sub_249A1DB10();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A1C1C0(uint64_t a1)
{
  unint64_t v2 = sub_249A1DB10();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NinePartImage.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E39C0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v63 = *v1;
  uint64_t v7 = *((void *)v1 + 2);
  uint64_t v8 = *((void *)v1 + 3);
  int v70 = *((unsigned __int8 *)v1 + 32);
  uint64_t v9 = *((void *)v1 + 5);
  uint64_t v61 = *((void *)v1 + 6);
  uint64_t v62 = v9;
  uint64_t v10 = *((void *)v1 + 7);
  uint64_t v59 = *((void *)v1 + 8);
  uint64_t v60 = v10;
  uint64_t v58 = *((void *)v1 + 9);
  int v57 = *((unsigned __int8 *)v1 + 80);
  uint64_t v11 = *((void *)v1 + 11);
  uint64_t v55 = *((void *)v1 + 12);
  uint64_t v56 = v11;
  uint64_t v12 = *((void *)v1 + 13);
  uint64_t v53 = *((void *)v1 + 14);
  uint64_t v54 = v12;
  uint64_t v52 = *((void *)v1 + 15);
  int v51 = *((unsigned __int8 *)v1 + 128);
  uint64_t v50 = *((void *)v1 + 17);
  long long v45 = v1[9];
  uint64_t v46 = *((void *)v1 + 20);
  uint64_t v49 = *((void *)v1 + 21);
  int v48 = *((unsigned __int8 *)v1 + 176);
  uint64_t v47 = *((void *)v1 + 23);
  long long v40 = v1[12];
  uint64_t v41 = *((void *)v1 + 26);
  uint64_t v44 = *((void *)v1 + 27);
  uint64_t v43 = *((void *)v1 + 28);
  uint64_t v42 = *((void *)v1 + 29);
  long long v35 = v1[15];
  uint64_t v36 = *((void *)v1 + 32);
  uint64_t v39 = *((void *)v1 + 33);
  int v38 = *((unsigned __int8 *)v1 + 272);
  uint64_t v37 = *((void *)v1 + 35);
  long long v30 = v1[18];
  uint64_t v34 = *((void *)v1 + 38);
  uint64_t v33 = *((void *)v1 + 39);
  int v32 = *((unsigned __int8 *)v1 + 320);
  uint64_t v31 = *((void *)v1 + 41);
  long long v25 = v1[21];
  uint64_t v29 = *((void *)v1 + 44);
  uint64_t v28 = *((void *)v1 + 45);
  int v27 = *((unsigned __int8 *)v1 + 368);
  uint64_t v26 = *((void *)v1 + 47);
  long long v20 = v1[24];
  uint64_t v24 = *((void *)v1 + 50);
  uint64_t v23 = *((void *)v1 + 51);
  int v22 = *((unsigned __int8 *)v1 + 416);
  uint64_t v21 = *((void *)v1 + 53);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A1DB10();
  uint64_t v13 = v3;
  sub_249AEE468();
  long long v65 = v63;
  uint64_t v66 = v7;
  uint64_t v67 = v8;
  LOBYTE(v68) = v70;
  uint64_t v69 = v62;
  char v71 = 0;
  sub_24989D190();
  uint64_t v14 = v64;
  sub_249AEDF08();
  if (!v14)
  {
    uint64_t v16 = v53;
    uint64_t v15 = v54;
    *(void *)&long long v65 = v61;
    *((void *)&v65 + 1) = v60;
    uint64_t v66 = v59;
    uint64_t v67 = v58;
    LOBYTE(v68) = v57;
    uint64_t v17 = v55;
    uint64_t v69 = v56;
    char v71 = 1;
    sub_249AEDF08();
    *(void *)&long long v65 = v17;
    *((void *)&v65 + 1) = v15;
    uint64_t v66 = v16;
    uint64_t v67 = v52;
    LOBYTE(v68) = v51;
    uint64_t v69 = v50;
    char v71 = 2;
    sub_249AEDF08();
    long long v65 = v45;
    uint64_t v66 = v46;
    uint64_t v67 = v49;
    LOBYTE(v68) = v48;
    uint64_t v69 = v47;
    char v71 = 3;
    sub_249AEDF08();
    long long v65 = v40;
    uint64_t v66 = v41;
    uint64_t v67 = v44;
    uint64_t v68 = v43;
    uint64_t v69 = v42;
    char v71 = 4;
    sub_249AEDEA8();
    long long v65 = v35;
    uint64_t v66 = v36;
    uint64_t v67 = v39;
    LOBYTE(v68) = v38;
    uint64_t v69 = v37;
    char v71 = 5;
    sub_249AEDF08();
    long long v65 = v30;
    uint64_t v66 = v34;
    uint64_t v67 = v33;
    LOBYTE(v68) = v32;
    uint64_t v69 = v31;
    char v71 = 6;
    sub_249AEDF08();
    long long v65 = v25;
    uint64_t v66 = v29;
    uint64_t v67 = v28;
    LOBYTE(v68) = v27;
    uint64_t v69 = v26;
    char v71 = 7;
    sub_249AEDF08();
    long long v65 = v20;
    uint64_t v66 = v24;
    uint64_t v67 = v23;
    LOBYTE(v68) = v22;
    uint64_t v69 = v21;
    char v71 = 8;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v13);
}

void NinePartImage.init(from:)(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v108 = a2;
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E39D0);
  uint64_t v4 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A1DB10();
  uint64_t v7 = v6;
  sub_249AEE428();
  v188 = a1;
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v188);
    sub_2498826D0(0, 0, 0, 0, 254);
  }
  else
  {
    uint64_t v104 = v4;
    LOBYTE(v111[0]) = 0;
    unint64_t v8 = sub_24989D2E8();
    uint64_t v9 = v7;
    sub_249AEDE08();
    uint64_t v10 = v112;
    uint64_t v11 = v113;
    uint64_t v12 = v114;
    unint64_t v13 = v8;
    LODWORD(v8) = v116;
    uint64_t v75 = v117;
    LOBYTE(v111[0]) = 1;
    uint64_t v86 = v115;
    sub_24988247C(v112, v113, v114, v115, v116);
    unint64_t v76 = v13;
    sub_249AEDE08();
    uint64_t v101 = v11;
    uint64_t v102 = v12;
    uint64_t v103 = v10;
    int v74 = v8;
    uint64_t v14 = v113;
    uint64_t v15 = v114;
    uint64_t v16 = v115;
    LODWORD(v10) = v116;
    uint64_t v17 = v117;
    LOBYTE(v111[0]) = 2;
    char v18 = v112;
    sub_24988247C(v112, v113, v114, v115, v116);
    sub_249AEDE08();
    int v97 = (int)v10;
    uint64_t v96 = v16;
    uint64_t v99 = v14;
    uint64_t v100 = v15;
    uint64_t v98 = v18;
    uint64_t v73 = v17;
    uint64_t v19 = v112;
    uint64_t v20 = v113;
    uint64_t v21 = v114;
    uint64_t v22 = v115;
    LODWORD(v16) = v116;
    uint64_t v23 = v117;
    LOBYTE(v111[0]) = 3;
    sub_24988247C(v112, v113, v114, v115, v116);
    sub_249AEDE08();
    uint64_t v109 = v22;
    uint64_t v94 = v20;
    uint64_t v95 = v21;
    uint64_t v93 = v19;
    uint64_t v68 = v23;
    int v72 = v16;
    uint64_t v24 = v112;
    uint64_t v25 = v113;
    uint64_t v26 = v114;
    uint64_t v27 = v117;
    LOBYTE(v111[0]) = 4;
    uint64_t v106 = v115;
    int v107 = v116;
    sub_24988247C(v112, v113, v114, v115, v116);
    uint64_t v28 = v110;
    sub_249AEDDA8();
    uint64_t v105 = v26;
    uint64_t v61 = v27;
    int v70 = v24;
    uint64_t v71 = v25;
    uint64_t v29 = v113;
    long long v30 = v114;
    uint64_t v31 = v115;
    uint64_t v32 = v116;
    uint64_t v33 = v117;
    LOBYTE(v111[0]) = 5;
    uint64_t v69 = v112;
    sub_249882468(v112, v113, v114, v115, v116);
    sub_249AEDE08();
    LODWORD(v62) = 1;
    long long v65 = v30;
    uint64_t v66 = v29;
    uint64_t v63 = v33;
    uint64_t v64 = v31;
    uint64_t v67 = v32;
    uint64_t v34 = v113;
    long long v35 = v114;
    uint64_t v36 = v115;
    LODWORD(v32) = v116;
    uint64_t v60 = v117;
    LOBYTE(v111[0]) = 6;
    int v85 = v112;
    sub_24988247C(v112, v113, v114, v115, v116);
    sub_249AEDE08();
    uint64_t v83 = v35;
    uint64_t v84 = v34;
    uint64_t v82 = v36;
    int v81 = v32;
    uint64_t v37 = v112;
    uint64_t v38 = v113;
    uint64_t v39 = v114;
    uint64_t v40 = v115;
    LODWORD(v36) = v116;
    uint64_t v59 = v117;
    LOBYTE(v111[0]) = 7;
    sub_24988247C(v112, v113, v114, v115, v116);
    sub_249AEDE08();
    int v80 = v36;
    uint64_t v79 = v40;
    int v90 = v39;
    uint64_t v91 = v37;
    uint64_t v92 = v38;
    uint64_t v41 = v115;
    LODWORD(v38) = v116;
    uint64_t v58 = v117;
    char v173 = 8;
    uint64_t v87 = v112;
    uint64_t v88 = v113;
    uint64_t v89 = v114;
    sub_24988247C(v112, v113, v114, v115, v116);
    sub_249AEDE08();
    int v78 = v38;
    uint64_t v77 = v41;
    (*(void (**)(char *, uint64_t))(v104 + 8))(v9, v28);
    uint64_t v104 = v174;
    unint64_t v76 = v175;
    uint64_t v62 = v176;
    uint64_t v57 = v177;
    int v56 = v178;
    uint64_t v110 = v179;
    v111[0] = v103;
    v111[1] = v101;
    v111[2] = v102;
    v111[3] = v86;
    LOBYTE(v111[4]) = v74;
    v111[5] = v75;
    v111[6] = v98;
    v111[7] = v99;
    v111[8] = v100;
    v111[9] = v96;
    LOBYTE(v111[10]) = v97;
    v111[11] = v73;
    v111[12] = v93;
    v111[13] = v94;
    v111[14] = v95;
    v111[15] = v109;
    LOBYTE(v111[16]) = v72;
    v111[17] = v68;
    uint64_t v42 = v39;
    v111[18] = v70;
    v111[19] = v71;
    v111[20] = v105;
    LOBYTE(v39) = v80;
    uint64_t v43 = v40;
    LOBYTE(v40) = v38;
    uint64_t v44 = v41;
    v111[21] = v106;
    LOBYTE(v111[22]) = v107;
    v111[23] = v61;
    v111[24] = v69;
    v111[25] = v66;
    v111[26] = v65;
    v111[27] = v64;
    v111[28] = v67;
    v111[29] = v63;
    v111[30] = v85;
    v111[31] = v84;
    v111[32] = v83;
    v111[33] = v82;
    LOBYTE(v111[34]) = v81;
    v111[35] = v60;
    v111[36] = v91;
    v111[37] = v92;
    v111[38] = v42;
    v111[39] = v43;
    uint64_t v45 = v43;
    LOBYTE(v111[40]) = v80;
    v111[41] = v59;
    uint64_t v47 = v87;
    uint64_t v46 = v88;
    v111[42] = v87;
    v111[43] = v88;
    int v48 = v89;
    v111[44] = v89;
    v111[45] = v44;
    uint64_t v49 = v44;
    LOBYTE(v111[46]) = v40;
    v111[47] = v58;
    v111[48] = v174;
    v111[49] = v175;
    v111[50] = v176;
    v111[51] = v177;
    LOBYTE(v111[52]) = v178;
    v111[53] = v179;
    sub_2499FB75C((uint64_t)v111, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24988247C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_249882468);
    sub_2498826E4(v47, v46, v48, v49, v40);
    sub_2498826E4(v91, v92, v90, v45, (char)v39);
    sub_2498826E4(v85, v84, v83, v82, v81);
    sub_2498826D0(v69, v66, v65, v64, v67);
    sub_2498826E4(v70, v71, v105, v106, v107);
    sub_2498826E4(v93, v94, v95, v109, v72);
    uint64_t v50 = v96;
    LOBYTE(v48) = v97;
    sub_2498826E4(v98, v99, v100, v96, v97);
    uint64_t v52 = v102;
    int v51 = v103;
    uint64_t v53 = v101;
    uint64_t v54 = v86;
    LOBYTE(v45) = v74;
    sub_2498826E4(v103, v101, v102, v86, v74);
    memcpy(v108, v111, 0x1B0uLL);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v188);
    int v112 = v51;
    uint64_t v113 = v53;
    uint64_t v114 = v52;
    uint64_t v115 = v54;
    LOBYTE(v116) = v45;
    uint64_t v117 = v75;
    uint64_t v118 = v98;
    uint64_t v119 = v99;
    uint64_t v120 = v100;
    uint64_t v121 = v50;
    char v122 = (char)v48;
    uint64_t v124 = v73;
    uint64_t v125 = v93;
    uint64_t v126 = v94;
    uint64_t v127 = v95;
    uint64_t v128 = v109;
    char v129 = v72;
    uint64_t v131 = v68;
    uint64_t v132 = v70;
    uint64_t v133 = v71;
    uint64_t v134 = v105;
    uint64_t v135 = v106;
    char v136 = v107;
    uint64_t v138 = v61;
    v139 = v69;
    *(_DWORD *)((char *)&v116 + 1) = v187[0];
    *(_DWORD *)uint64_t v123 = *(_DWORD *)v186;
    *(_DWORD *)uint64_t v130 = *(_DWORD *)v185;
    *(_DWORD *)&v137[3] = *(_DWORD *)&v184[3];
    *(_DWORD *)uint64_t v137 = *(_DWORD *)v184;
    HIDWORD(v116) = *(_DWORD *)((char *)v187 + 3);
    *(_DWORD *)&v123[3] = *(_DWORD *)&v186[3];
    *(_DWORD *)&v130[3] = *(_DWORD *)&v185[3];
    uint64_t v140 = v66;
    v141 = v65;
    uint64_t v142 = v64;
    uint64_t v143 = v67;
    uint64_t v144 = v63;
    v145 = v85;
    uint64_t v146 = v84;
    v147 = v83;
    uint64_t v148 = v82;
    char v149 = v81;
    *(_DWORD *)v150 = *(_DWORD *)v183;
    *(_DWORD *)&v150[3] = *(_DWORD *)&v183[3];
    uint64_t v151 = v60;
    v152 = v91;
    uint64_t v153 = v92;
    v154 = v90;
    uint64_t v155 = v79;
    char v156 = v80;
    *(_DWORD *)v157 = *(_DWORD *)v182;
    *(_DWORD *)&v157[3] = *(_DWORD *)&v182[3];
    uint64_t v158 = v59;
    v159 = v87;
    uint64_t v160 = v88;
    v161 = v89;
    uint64_t v162 = v77;
    char v163 = v78;
    *(_DWORD *)v164 = *(_DWORD *)v181;
    *(_DWORD *)&v164[3] = *(_DWORD *)&v181[3];
    uint64_t v165 = v58;
    uint64_t v166 = v104;
    unint64_t v167 = v76;
    uint64_t v168 = v62;
    uint64_t v169 = v57;
    char v170 = v56;
    *(_DWORD *)v171 = *(_DWORD *)v180;
    *(_DWORD *)&v171[3] = *(_DWORD *)&v180[3];
    uint64_t v172 = v110;
    sub_2499FB75C((uint64_t)&v112, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2498826E4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2498826D0);
  }
}

void sub_249A1DA44(void *a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_249A1DA5C(void *a1)
{
  return NinePartImage.encode(to:)(a1);
}

uint64_t sub_249A1DA78(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_249882BCC(&v12, v10 + 40 * a1 + 32);
}

unint64_t sub_249A1DB10()
{
  unint64_t result = qword_2696E39C8;
  if (!qword_2696E39C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E39C8);
  }
  return result;
}

void destroy for NinePartImage(uint64_t a1)
{
  sub_2498826E4(*(void **)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  sub_2498826E4(*(void **)(a1 + 48), *(void *)(a1 + 56), *(void **)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
  sub_2498826E4(*(void **)(a1 + 96), *(void *)(a1 + 104), *(void **)(a1 + 112), *(void *)(a1 + 120), *(unsigned char *)(a1 + 128));
  sub_2498826E4(*(void **)(a1 + 144), *(void *)(a1 + 152), *(void **)(a1 + 160), *(void *)(a1 + 168), *(unsigned char *)(a1 + 176));
  if ((~*(_DWORD *)(a1 + 224) & 0xFELL) != 0) {
    sub_2498826E4(*(void **)(a1 + 192), *(void *)(a1 + 200), *(void **)(a1 + 208), *(void *)(a1 + 216), *(void *)(a1 + 224));
  }
  sub_2498826E4(*(void **)(a1 + 240), *(void *)(a1 + 248), *(void **)(a1 + 256), *(void *)(a1 + 264), *(unsigned char *)(a1 + 272));
  sub_2498826E4(*(void **)(a1 + 288), *(void *)(a1 + 296), *(void **)(a1 + 304), *(void *)(a1 + 312), *(unsigned char *)(a1 + 320));
  sub_2498826E4(*(void **)(a1 + 336), *(void *)(a1 + 344), *(void **)(a1 + 352), *(void *)(a1 + 360), *(unsigned char *)(a1 + 368));
  uint64_t v2 = *(void **)(a1 + 384);
  uint64_t v3 = *(void *)(a1 + 392);
  uint64_t v4 = *(void **)(a1 + 400);
  uint64_t v5 = *(void *)(a1 + 408);
  char v6 = *(unsigned char *)(a1 + 416);

  sub_2498826E4(v2, v3, v4, v5, v6);
}

uint64_t initializeWithCopy for NinePartImage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_24988247C(*(void **)a2, v5, v6, v7, v8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  uint64_t v9 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void **)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 72);
  char v13 = *(unsigned char *)(a2 + 80);
  sub_24988247C(v9, v10, v11, v12, v13);
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v12;
  *(unsigned char *)(a1 + 80) = v13;
  uint64_t v14 = *(void **)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v15 = *(void *)(a2 + 104);
  uint64_t v16 = *(void **)(a2 + 112);
  uint64_t v17 = *(void *)(a2 + 120);
  char v18 = *(unsigned char *)(a2 + 128);
  sub_24988247C(v14, v15, v16, v17, v18);
  *(void *)(a1 + 96) = v14;
  *(void *)(a1 + 104) = v15;
  *(void *)(a1 + 112) = v16;
  *(void *)(a1 + 120) = v17;
  *(unsigned char *)(a1 + 128) = v18;
  uint64_t v19 = *(void **)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v20 = *(void *)(a2 + 152);
  uint64_t v21 = *(void **)(a2 + 160);
  uint64_t v22 = *(void *)(a2 + 168);
  char v23 = *(unsigned char *)(a2 + 176);
  sub_24988247C(v19, v20, v21, v22, v23);
  *(void *)(a1 + 144) = v19;
  *(void *)(a1 + 152) = v20;
  *(void *)(a1 + 160) = v21;
  *(void *)(a1 + 168) = v22;
  *(unsigned char *)(a1 + 176) = v23;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  uint64_t v24 = *(void *)(a2 + 224);
  if ((~*(_DWORD *)(a2 + 224) & 0xFELL) != 0)
  {
    uint64_t v26 = *(void **)(a2 + 192);
    uint64_t v27 = *(void *)(a2 + 200);
    uint64_t v28 = *(void **)(a2 + 208);
    uint64_t v29 = *(void *)(a2 + 216);
    sub_24988247C(v26, v27, v28, v29, *(void *)(a2 + 224));
    *(void *)(a1 + 192) = v26;
    *(void *)(a1 + 200) = v27;
    *(void *)(a1 + 208) = v28;
    *(void *)(a1 + 216) = v29;
    *(unsigned char *)(a1 + 224) = v24;
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
  }
  else
  {
    long long v25 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v25;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  }
  long long v30 = *(void **)(a2 + 240);
  uint64_t v31 = *(void *)(a2 + 248);
  uint64_t v32 = *(void **)(a2 + 256);
  uint64_t v33 = *(void *)(a2 + 264);
  char v34 = *(unsigned char *)(a2 + 272);
  sub_24988247C(v30, v31, v32, v33, v34);
  *(void *)(a1 + 240) = v30;
  *(void *)(a1 + 248) = v31;
  *(void *)(a1 + 256) = v32;
  *(void *)(a1 + 264) = v33;
  *(unsigned char *)(a1 + 272) = v34;
  long long v35 = *(void **)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  uint64_t v36 = *(void *)(a2 + 296);
  uint64_t v37 = *(void **)(a2 + 304);
  uint64_t v38 = *(void *)(a2 + 312);
  char v39 = *(unsigned char *)(a2 + 320);
  sub_24988247C(v35, v36, v37, v38, v39);
  *(void *)(a1 + 288) = v35;
  *(void *)(a1 + 296) = v36;
  *(void *)(a1 + 304) = v37;
  *(void *)(a1 + 312) = v38;
  *(unsigned char *)(a1 + 320) = v39;
  uint64_t v40 = *(void **)(a2 + 336);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  uint64_t v41 = *(void *)(a2 + 344);
  uint64_t v42 = *(void **)(a2 + 352);
  uint64_t v43 = *(void *)(a2 + 360);
  char v44 = *(unsigned char *)(a2 + 368);
  sub_24988247C(v40, v41, v42, v43, v44);
  *(void *)(a1 + 336) = v40;
  *(void *)(a1 + 344) = v41;
  *(void *)(a1 + 352) = v42;
  *(void *)(a1 + 360) = v43;
  *(unsigned char *)(a1 + 368) = v44;
  uint64_t v45 = *(void **)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  uint64_t v46 = *(void *)(a2 + 392);
  uint64_t v47 = *(void **)(a2 + 400);
  uint64_t v48 = *(void *)(a2 + 408);
  char v49 = *(unsigned char *)(a2 + 416);
  sub_24988247C(v45, v46, v47, v48, v49);
  *(void *)(a1 + 384) = v45;
  *(void *)(a1 + 392) = v46;
  *(void *)(a1 + 400) = v47;
  *(void *)(a1 + 408) = v48;
  *(unsigned char *)(a1 + 416) = v49;
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  return a1;
}

uint64_t assignWithCopy for NinePartImage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_24988247C(*(void **)a2, v5, v6, v7, v8);
  uint64_t v9 = *(void **)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void **)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  char v13 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  sub_2498826E4(v9, v10, v11, v12, v13);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v14 = *(void **)(a2 + 48);
  uint64_t v15 = *(void *)(a2 + 56);
  uint64_t v16 = *(void **)(a2 + 64);
  uint64_t v17 = *(void *)(a2 + 72);
  char v18 = *(unsigned char *)(a2 + 80);
  sub_24988247C(v14, v15, v16, v17, v18);
  uint64_t v19 = *(void **)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 56);
  uint64_t v21 = *(void **)(a1 + 64);
  uint64_t v22 = *(void *)(a1 + 72);
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 56) = v15;
  *(void *)(a1 + 64) = v16;
  *(void *)(a1 + 72) = v17;
  char v23 = *(unsigned char *)(a1 + 80);
  *(unsigned char *)(a1 + 80) = v18;
  sub_2498826E4(v19, v20, v21, v22, v23);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v24 = *(void **)(a2 + 96);
  uint64_t v25 = *(void *)(a2 + 104);
  uint64_t v26 = *(void **)(a2 + 112);
  uint64_t v27 = *(void *)(a2 + 120);
  char v28 = *(unsigned char *)(a2 + 128);
  sub_24988247C(v24, v25, v26, v27, v28);
  uint64_t v29 = *(void **)(a1 + 96);
  uint64_t v30 = *(void *)(a1 + 104);
  uint64_t v31 = *(void **)(a1 + 112);
  uint64_t v32 = *(void *)(a1 + 120);
  *(void *)(a1 + 96) = v24;
  *(void *)(a1 + 104) = v25;
  *(void *)(a1 + 112) = v26;
  *(void *)(a1 + 120) = v27;
  char v33 = *(unsigned char *)(a1 + 128);
  *(unsigned char *)(a1 + 128) = v28;
  sub_2498826E4(v29, v30, v31, v32, v33);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  char v34 = *(void **)(a2 + 144);
  uint64_t v35 = *(void *)(a2 + 152);
  uint64_t v36 = *(void **)(a2 + 160);
  uint64_t v37 = *(void *)(a2 + 168);
  char v38 = *(unsigned char *)(a2 + 176);
  sub_24988247C(v34, v35, v36, v37, v38);
  char v39 = *(void **)(a1 + 144);
  uint64_t v40 = *(void *)(a1 + 152);
  uint64_t v41 = *(void **)(a1 + 160);
  uint64_t v42 = *(void *)(a1 + 168);
  *(void *)(a1 + 144) = v34;
  *(void *)(a1 + 152) = v35;
  *(void *)(a1 + 160) = v36;
  *(void *)(a1 + 168) = v37;
  char v43 = *(unsigned char *)(a1 + 176);
  *(unsigned char *)(a1 + 176) = v38;
  sub_2498826E4(v39, v40, v41, v42, v43);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  char v44 = (_OWORD *)(a1 + 192);
  uint64_t v45 = (_OWORD *)(a2 + 192);
  uint64_t v46 = *(void *)(a2 + 224);
  uint64_t v47 = v46 & 0xFE;
  if ((~*(_DWORD *)(a1 + 224) & 0xFELL) != 0)
  {
    if (v47 == 254)
    {
      sub_2499C5438(a1 + 192);
      long long v51 = *(_OWORD *)(a2 + 208);
      long long v50 = *(_OWORD *)(a2 + 224);
      *char v44 = *v45;
      *(_OWORD *)(a1 + 208) = v51;
      *(_OWORD *)(a1 + 224) = v50;
      goto LABEL_9;
    }
    int v56 = *(void **)(a2 + 192);
    uint64_t v57 = *(void *)(a2 + 200);
    uint64_t v58 = *(void **)(a2 + 208);
    uint64_t v59 = *(void *)(a2 + 216);
    sub_24988247C(v56, v57, v58, v59, *(void *)(a2 + 224));
    uint64_t v60 = *(void **)(a1 + 192);
    uint64_t v61 = *(void *)(a1 + 200);
    uint64_t v62 = *(void **)(a1 + 208);
    uint64_t v63 = *(void *)(a1 + 216);
    *(void *)(a1 + 192) = v56;
    *(void *)(a1 + 200) = v57;
    *(void *)(a1 + 208) = v58;
    *(void *)(a1 + 216) = v59;
    char v64 = *(unsigned char *)(a1 + 224);
    *(unsigned char *)(a1 + 224) = v46;
    sub_2498826E4(v60, v61, v62, v63, v64);
LABEL_8:
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    goto LABEL_9;
  }
  if (v47 != 254)
  {
    uint64_t v52 = *(void **)(a2 + 192);
    uint64_t v53 = *(void *)(a2 + 200);
    uint64_t v54 = *(void **)(a2 + 208);
    uint64_t v55 = *(void *)(a2 + 216);
    sub_24988247C(v52, v53, v54, v55, *(void *)(a2 + 224));
    *(void *)(a1 + 192) = v52;
    *(void *)(a1 + 200) = v53;
    *(void *)(a1 + 208) = v54;
    *(void *)(a1 + 216) = v55;
    *(unsigned char *)(a1 + 224) = v46;
    goto LABEL_8;
  }
  long long v48 = *v45;
  long long v49 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v49;
  *char v44 = v48;
LABEL_9:
  long long v65 = *(void **)(a2 + 240);
  uint64_t v66 = *(void *)(a2 + 248);
  uint64_t v67 = *(void **)(a2 + 256);
  uint64_t v68 = *(void *)(a2 + 264);
  char v69 = *(unsigned char *)(a2 + 272);
  sub_24988247C(v65, v66, v67, v68, v69);
  int v70 = *(void **)(a1 + 240);
  uint64_t v71 = *(void *)(a1 + 248);
  int v72 = *(void **)(a1 + 256);
  uint64_t v73 = *(void *)(a1 + 264);
  *(void *)(a1 + 240) = v65;
  *(void *)(a1 + 248) = v66;
  *(void *)(a1 + 256) = v67;
  *(void *)(a1 + 264) = v68;
  char v74 = *(unsigned char *)(a1 + 272);
  *(unsigned char *)(a1 + 272) = v69;
  sub_2498826E4(v70, v71, v72, v73, v74);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  uint64_t v75 = *(void **)(a2 + 288);
  uint64_t v76 = *(void *)(a2 + 296);
  uint64_t v77 = *(void **)(a2 + 304);
  uint64_t v78 = *(void *)(a2 + 312);
  char v79 = *(unsigned char *)(a2 + 320);
  sub_24988247C(v75, v76, v77, v78, v79);
  int v80 = *(void **)(a1 + 288);
  uint64_t v81 = *(void *)(a1 + 296);
  uint64_t v82 = *(void **)(a1 + 304);
  uint64_t v83 = *(void *)(a1 + 312);
  *(void *)(a1 + 288) = v75;
  *(void *)(a1 + 296) = v76;
  *(void *)(a1 + 304) = v77;
  *(void *)(a1 + 312) = v78;
  char v84 = *(unsigned char *)(a1 + 320);
  *(unsigned char *)(a1 + 320) = v79;
  sub_2498826E4(v80, v81, v82, v83, v84);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  int v85 = *(void **)(a2 + 336);
  uint64_t v86 = *(void *)(a2 + 344);
  uint64_t v87 = *(void **)(a2 + 352);
  uint64_t v88 = *(void *)(a2 + 360);
  char v89 = *(unsigned char *)(a2 + 368);
  sub_24988247C(v85, v86, v87, v88, v89);
  int v90 = *(void **)(a1 + 336);
  uint64_t v91 = *(void *)(a1 + 344);
  uint64_t v92 = *(void **)(a1 + 352);
  uint64_t v93 = *(void *)(a1 + 360);
  *(void *)(a1 + 336) = v85;
  *(void *)(a1 + 344) = v86;
  *(void *)(a1 + 352) = v87;
  *(void *)(a1 + 360) = v88;
  char v94 = *(unsigned char *)(a1 + 368);
  *(unsigned char *)(a1 + 368) = v89;
  sub_2498826E4(v90, v91, v92, v93, v94);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  uint64_t v95 = *(void **)(a2 + 384);
  uint64_t v96 = *(void *)(a2 + 392);
  int v97 = *(void **)(a2 + 400);
  uint64_t v98 = *(void *)(a2 + 408);
  char v99 = *(unsigned char *)(a2 + 416);
  sub_24988247C(v95, v96, v97, v98, v99);
  uint64_t v100 = *(void **)(a1 + 384);
  uint64_t v101 = *(void *)(a1 + 392);
  uint64_t v102 = *(void **)(a1 + 400);
  uint64_t v103 = *(void *)(a1 + 408);
  *(void *)(a1 + 384) = v95;
  *(void *)(a1 + 392) = v96;
  *(void *)(a1 + 400) = v97;
  *(void *)(a1 + 408) = v98;
  char v104 = *(unsigned char *)(a1 + 416);
  *(unsigned char *)(a1 + 416) = v99;
  sub_2498826E4(v100, v101, v102, v103, v104);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  return a1;
}

void *__swift_memcpy432_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1B0uLL);
}

uint64_t assignWithTake for NinePartImage(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = (_OWORD *)(a1 + 280);
  char v6 = (_OWORD *)(a2 + 280);
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void **)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v4;
  sub_2498826E4(v7, v8, v9, v10, v12);
  uint64_t v13 = *(void *)(a2 + 72);
  char v14 = *(unsigned char *)(a2 + 80);
  uint64_t v15 = *(void **)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v17 = *(void **)(a1 + 64);
  uint64_t v18 = *(void *)(a1 + 72);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v13;
  char v19 = *(unsigned char *)(a1 + 80);
  *(unsigned char *)(a1 + 80) = v14;
  sub_2498826E4(v15, v16, v17, v18, v19);
  uint64_t v20 = *(void *)(a2 + 120);
  char v21 = *(unsigned char *)(a2 + 128);
  uint64_t v22 = *(void **)(a1 + 96);
  uint64_t v23 = *(void *)(a1 + 104);
  uint64_t v24 = *(void **)(a1 + 112);
  uint64_t v25 = *(void *)(a1 + 120);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = v20;
  char v26 = *(unsigned char *)(a1 + 128);
  *(unsigned char *)(a1 + 128) = v21;
  sub_2498826E4(v22, v23, v24, v25, v26);
  uint64_t v27 = *(void *)(a2 + 168);
  char v28 = *(unsigned char *)(a2 + 176);
  uint64_t v29 = *(void **)(a1 + 144);
  uint64_t v30 = *(void *)(a1 + 152);
  uint64_t v31 = *(void **)(a1 + 160);
  uint64_t v32 = *(void *)(a1 + 168);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = v27;
  char v33 = *(unsigned char *)(a1 + 176);
  *(unsigned char *)(a1 + 176) = v28;
  sub_2498826E4(v29, v30, v31, v32, v33);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  int v34 = *(_DWORD *)(a1 + 224);
  if ((~(_BYTE)v34 & 0xFE) != 0)
  {
    uint64_t v35 = *(void *)(a2 + 224);
    if ((~*(_DWORD *)(a2 + 224) & 0xFELL) != 0)
    {
      uint64_t v37 = *(void **)(a1 + 192);
      uint64_t v38 = *(void *)(a1 + 200);
      char v39 = *(void **)(a1 + 208);
      uint64_t v40 = *(void *)(a1 + 216);
      long long v41 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v41;
      *(unsigned char *)(a1 + 224) = v35;
      sub_2498826E4(v37, v38, v39, v40, v34);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      goto LABEL_6;
    }
    sub_2499C5438(a1 + 192);
  }
  long long v36 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v36;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
LABEL_6:
  char v42 = *(unsigned char *)(a2 + 272);
  char v43 = *(void **)(a1 + 240);
  uint64_t v44 = *(void *)(a1 + 248);
  uint64_t v45 = *(void **)(a1 + 256);
  uint64_t v46 = *(void *)(a1 + 264);
  long long v47 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v47;
  char v48 = *(unsigned char *)(a1 + 272);
  *(unsigned char *)(a1 + 272) = v42;
  sub_2498826E4(v43, v44, v45, v46, v48);
  uint64_t v49 = *(void *)(a2 + 312);
  char v50 = *(unsigned char *)(a2 + 320);
  long long v51 = *(void **)(a1 + 288);
  uint64_t v52 = *(void *)(a1 + 296);
  uint64_t v53 = *(void **)(a1 + 304);
  uint64_t v54 = *(void *)(a1 + 312);
  long long v55 = v6[1];
  *uint64_t v5 = *v6;
  v5[1] = v55;
  *(void *)(a1 + 312) = v49;
  char v56 = *(unsigned char *)(a1 + 320);
  *(unsigned char *)(a1 + 320) = v50;
  sub_2498826E4(v51, v52, v53, v54, v56);
  uint64_t v57 = *(void *)(a2 + 360);
  char v58 = *(unsigned char *)(a2 + 368);
  uint64_t v59 = *(void **)(a1 + 336);
  uint64_t v60 = *(void *)(a1 + 344);
  uint64_t v61 = *(void **)(a1 + 352);
  uint64_t v62 = *(void *)(a1 + 360);
  long long v63 = v6[4];
  v5[3] = v6[3];
  v5[4] = v63;
  *(void *)(a1 + 360) = v57;
  char v64 = *(unsigned char *)(a1 + 368);
  *(unsigned char *)(a1 + 368) = v58;
  sub_2498826E4(v59, v60, v61, v62, v64);
  uint64_t v65 = *(void *)(a2 + 408);
  char v66 = *(unsigned char *)(a2 + 416);
  uint64_t v67 = *(void **)(a1 + 384);
  uint64_t v68 = *(void *)(a1 + 392);
  char v69 = *(void **)(a1 + 400);
  uint64_t v70 = *(void *)(a1 + 408);
  long long v71 = v6[7];
  v5[6] = v6[6];
  v5[7] = v71;
  *(void *)(a1 + 408) = v65;
  char v72 = *(unsigned char *)(a1 + 416);
  *(unsigned char *)(a1 + 416) = v66;
  sub_2498826E4(v67, v68, v69, v70, v72);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  return a1;
}

uint64_t getEnumTagSinglePayload for NinePartImage(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 432)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for NinePartImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 424) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 432) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 432) = 0;
    }
    if (a2)
    {
      *(_OWORD *)unint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NinePartImage()
{
  return &type metadata for NinePartImage;
}

unsigned char *storeEnumTagSinglePayload for NinePartImage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A1E5E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NinePartImage.CodingKeys()
{
  return &type metadata for NinePartImage.CodingKeys;
}

unint64_t sub_249A1E61C()
{
  unint64_t result = qword_2696E39D8;
  if (!qword_2696E39D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E39D8);
  }
  return result;
}

unint64_t sub_249A1E674()
{
  unint64_t result = qword_2696E39E0;
  if (!qword_2696E39E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E39E0);
  }
  return result;
}

unint64_t sub_249A1E6CC()
{
  unint64_t result = qword_2696E39E8;
  if (!qword_2696E39E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E39E8);
  }
  return result;
}

uint64_t sub_249A1E720(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x437466654C706F74 && a2 == 0xED000072656E726FLL;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676445706F74 && a2 == 0xE700000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7468676952706F74 && a2 == 0xEE0072656E726F43 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656764457466656CLL && a2 == 0xE800000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C6464696DLL && a2 == 0xE600000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6764457468676972 && a2 == 0xE900000000000065 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000249B16ED0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x64456D6F74746F62 && a2 == 0xEA00000000006567 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249B16EF0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

Swift::Void __swiftcall ArcPackage.removeLocalNotifications()()
{
  uint64_t v1 = *(void *)(v0 + 112);
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v58 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_249A21E88(0, v2, 0);
    uint64_t v3 = v58;
    int64_t v4 = v2 - 1;
    for (uint64_t i = 32; ; i += 480)
    {
      memcpy(__dst, (const void *)(v1 + i), sizeof(__dst));
      sub_249882274((uint64_t)__dst);
      swift_bridgeObjectRelease();
      uint64_t v58 = v3;
      unint64_t v7 = *(void *)(v3 + 16);
      unint64_t v6 = *(void *)(v3 + 24);
      if (v7 >= v6 >> 1)
      {
        sub_249A21E88(v6 > 1, v7 + 1, 1);
        uint64_t v3 = v58;
      }
      uint64_t v8 = *((void *)&__dst[28] + 1);
      char v9 = BYTE9(__dst[27]);
      char v10 = BYTE8(__dst[27]);
      uint64_t v11 = *(void *)&__dst[26];
      char v12 = BYTE8(__dst[26]);
      uint64_t v13 = *(void *)&__dst[27];
      char v14 = BYTE8(__dst[23]);
      char v15 = __dst[20];
      uint64_t v16 = *(void *)&__dst[23];
      uint64_t v17 = *((void *)&__dst[20] + 1);
      char v18 = BYTE8(__dst[15]);
      char v19 = __dst[11];
      char v20 = BYTE8(__dst[6]);
      uint64_t v21 = *(void *)&__dst[3];
      char v22 = __dst[1];
      uint64_t v23 = *((void *)&__dst[0] + 1);
      uint64_t v24 = *((void *)&__dst[1] + 1);
      uint64_t v25 = v3 + 480 * v7;
      long long v26 = __dst[2];
      long long v27 = *(_OWORD *)((char *)&__dst[3] + 8);
      long long v28 = *(_OWORD *)((char *)&__dst[4] + 8);
      long long v29 = *(_OWORD *)((char *)&__dst[5] + 8);
      long long v30 = __dst[7];
      long long v31 = __dst[8];
      long long v32 = __dst[9];
      long long v33 = __dst[10];
      long long v34 = *(_OWORD *)((char *)&__dst[11] + 8);
      long long v35 = *(_OWORD *)((char *)&__dst[12] + 8);
      long long v36 = *(_OWORD *)((char *)&__dst[13] + 8);
      long long v37 = *(_OWORD *)((char *)&__dst[14] + 8);
      long long v38 = __dst[16];
      long long v39 = __dst[17];
      long long v40 = __dst[18];
      long long v41 = __dst[19];
      long long v42 = __dst[21];
      long long v43 = __dst[22];
      long long v44 = __dst[24];
      long long v45 = __dst[25];
      long long v46 = __dst[29];
      *(void *)(v25 + 32) = *(void *)&__dst[0];
      v25 += 32;
      *(void *)(v3 + 16) = v7 + 1;
      *(void *)(v25 + 8) = v23;
      *(unsigned char *)(v25 + 16) = v22;
      *(_DWORD *)(v25 + 17) = *(_DWORD *)v56;
      *(_DWORD *)(v25 + 20) = *(_DWORD *)&v56[3];
      *(void *)(v25 + 24) = v24;
      *(_OWORD *)(v25 + 32) = v26;
      *(void *)(v25 + 48) = v21;
      *(_OWORD *)(v25 + 56) = v27;
      *(_OWORD *)(v25 + 72) = v28;
      *(_OWORD *)(v25 + 88) = v29;
      *(unsigned char *)(v25 + 104) = v20;
      *(_DWORD *)(v25 + 108) = *(_DWORD *)&v55[3];
      *(_DWORD *)(v25 + 105) = *(_DWORD *)v55;
      *(_OWORD *)(v25 + 112) = v30;
      *(_OWORD *)(v25 + 128) = v31;
      *(_OWORD *)(v25 + 144) = v32;
      *(_OWORD *)(v25 + 160) = v33;
      *(unsigned char *)(v25 + 176) = v19;
      *(_DWORD *)(v25 + 180) = *(_DWORD *)&v54[3];
      *(_DWORD *)(v25 + 177) = *(_DWORD *)v54;
      *(_OWORD *)(v25 + 184) = v34;
      *(_OWORD *)(v25 + 200) = v35;
      *(_OWORD *)(v25 + 216) = v36;
      *(_OWORD *)(v25 + 232) = v37;
      *(unsigned char *)(v25 + 248) = v18;
      *(_DWORD *)(v25 + 252) = *(_DWORD *)&v53[3];
      *(_DWORD *)(v25 + 249) = *(_DWORD *)v53;
      *(_OWORD *)(v25 + 256) = v38;
      *(_OWORD *)(v25 + 272) = v39;
      *(_OWORD *)(v25 + 288) = v40;
      *(_OWORD *)(v25 + 304) = v41;
      *(unsigned char *)(v25 + 320) = v15;
      *(_DWORD *)(v25 + 324) = *(_DWORD *)&v52[3];
      *(_DWORD *)(v25 + 321) = *(_DWORD *)v52;
      *(void *)(v25 + 328) = v17;
      *(_OWORD *)(v25 + 336) = v42;
      *(_OWORD *)(v25 + 352) = v43;
      *(void *)(v25 + 368) = v16;
      *(unsigned char *)(v25 + 376) = v14;
      *(_DWORD *)(v25 + 380) = *(_DWORD *)&v51[3];
      *(_DWORD *)(v25 + 377) = *(_DWORD *)v51;
      *(_OWORD *)(v25 + 384) = v44;
      *(_OWORD *)(v25 + 400) = v45;
      *(void *)(v25 + 416) = v11;
      *(unsigned char *)(v25 + 424) = v12;
      *(_DWORD *)(v25 + 428) = *(_DWORD *)&v50[3];
      *(_DWORD *)(v25 + 425) = *(_DWORD *)v50;
      *(void *)(v25 + 432) = v13;
      *(unsigned char *)(v25 + 440) = v10;
      *(unsigned char *)(v25 + 441) = v9;
      *(_DWORD *)(v25 + 442) = v48;
      *(_WORD *)(v25 + 446) = v49;
      *(void *)(v25 + 448) = 0;
      *(void *)(v25 + 456) = v8;
      *(_OWORD *)(v25 + 464) = v46;
      if (!v4) {
        break;
      }
      --v4;
    }
    swift_bridgeObjectRelease_n();
    uint64_t v0 = v47;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = MEMORY[0x263F8EE78];
  }
  *(void *)(v0 + 112) = v3;
}

uint64_t ArcPackage.infoPlistContent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v13 = *(void *)(v1 + 72);
  uint64_t v9 = *(void *)(v1 + 88);
  uint64_t v8 = *(void *)(v1 + 96);
  char v14 = *(unsigned char *)(v1 + 104);
  char v10 = sub_249A1F3C0(*(void *)v1, v3, qword_26FDA0800);
  uint64_t result = swift_arrayDestroy();
  if (v10) {
    char v12 = 1;
  }
  else {
    char v12 = 2;
  }
  if (!byte_2696E03A8) {
    goto LABEL_8;
  }
  if (byte_2696E03A8 != 1)
  {
    if ((v7 & 0x8000000000000000) == 0)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = v7;
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = v3;
      *(void *)(a1 + 40) = v9;
      *(void *)(a1 + 48) = v8;
      *(unsigned char *)(a1 + 56) = v14;
      *(unsigned char *)(a1 + 57) = 2;
      *(_OWORD *)(a1 + 64) = xmmword_249B061D0;
      *(void *)(a1 + 80) = 0;
      *(unsigned char *)(a1 + 88) = 1;
      goto LABEL_12;
    }
    goto LABEL_16;
  }
  if (v7 < 0)
  {
    __break(1u);
LABEL_8:
    if ((v7 & 0x8000000000000000) == 0) {
      goto LABEL_9;
    }
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
LABEL_9:
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = v14;
  *(unsigned char *)(a1 + 57) = v12;
  *(_OWORD *)(a1 + 64) = xmmword_249B061D0;
  *(void *)(a1 + 80) = v13;
  *(unsigned char *)(a1 + 88) = 0;
  swift_bridgeObjectRetain();
LABEL_12:
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t InfoPlist.asBinary()()
{
  sub_249AEB6F8();
  swift_allocObject();
  sub_249AEB6E8();
  sub_249AEB6C8();
  sub_249882E5C();
  uint64_t v0 = sub_249AEB6D8();
  swift_release();
  return v0;
}

uint64_t ArcPackage.subscript.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 112);
  unint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    unint64_t v6 = 0;
    uint64_t v7 = *a1;
    uint64_t v8 = a1[1];
    uint64_t v9 = (uint64_t *)(v4 + 32);
    while (1)
    {
      uint64_t result = *v9;
      if (*v9 == v7 && v9[1] == v8) {
        break;
      }
      uint64_t result = sub_249AEE0D8();
      if (result) {
        break;
      }
      ++v6;
      v9 += 60;
      if (v5 == v6) {
        goto LABEL_9;
      }
    }
    if (v6 >= v5)
    {
      __break(1u);
    }
    else
    {
      memcpy(v12, v9, sizeof(v12));
      memmove(__dst, v9, 0x1E0uLL);
      nullsub_1(__dst);
      sub_249A21EA8((uint64_t)__dst, a2);
      return sub_249882274((uint64_t)v12);
    }
  }
  else
  {
LABEL_9:
    sub_249882744(__dst);
    return sub_249A21EA8((uint64_t)__dst, a2);
  }
  return result;
}

uint64_t sub_249A1F12C()
{
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249A1F26C()
{
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249A1F3C0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_249AEE0D8();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_249AEE0D8() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_249A1F488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return 0;
  }
  for (uint64_t i = (void *)(a3 + 40); ; i += 2)
  {
    BOOL v7 = *(i - 1) == a1 && *i == a2;
    if (v7 || (sub_249AEE0D8() & 1) != 0) {
      break;
    }
    if (!--v3) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_249A1F4FC@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_249970070(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    memcpy(a2, &v5[60 * a1 + 4], 0x1E0uLL);
    if ((uint64_t)(v7 - a1) >= 0)
    {
      uint64_t result = (uint64_t)memmove(&v5[60 * a1 + 4], &v5[60 * a1 + 64], 480 * (v7 - a1));
      v5[2] = v7;
      *uint64_t v2 = v5;
      return result;
    }
  }
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t static ArcPackage.from(json:)()
{
  return swift_release();
}

uint64_t ArcPackage.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArcPackage.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ArcPackage.identifier.modify())()
{
  return nullsub_1;
}

uint64_t ArcPackage.iOSContentVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArcPackage.iOSContentVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ArcPackage.iOSContentVersion.modify())()
{
  return nullsub_1;
}

uint64_t ArcPackage.version.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t ArcPackage.version.setter(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

uint64_t (*ArcPackage.version.modify())()
{
  return nullsub_1;
}

void ArcPackage.vehicleType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

unsigned char *ArcPackage.vehicleType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 48) = *result;
  return result;
}

uint64_t (*ArcPackage.vehicleType.modify())()
{
  return nullsub_1;
}

uint64_t ArcPackage.partnerID.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArcPackage.partnerID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*ArcPackage.partnerID.modify())()
{
  return nullsub_1;
}

uint64_t ArcPackage.minimumCompatibilityVersion.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t ArcPackage.minimumCompatibilityVersion.setter(uint64_t result)
{
  *(void *)(v1 + 72) = result;
  return result;
}

uint64_t (*ArcPackage.minimumCompatibilityVersion.modify())()
{
  return nullsub_1;
}

uint64_t ArcPackage.minimumSDKVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArcPackage.minimumSDKVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return result;
}

uint64_t (*ArcPackage.minimumSDKVersion.modify())()
{
  return nullsub_1;
}

void ArcPackage.buildType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 104);
}

unsigned char *ArcPackage.buildType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 104) = *result;
  return result;
}

uint64_t (*ArcPackage.buildType.modify())()
{
  return nullsub_1;
}

CarPlayAssetUI::ArcPackage::BuildType_optional __swiftcall ArcPackage.BuildType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_249AEDCF8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t ArcPackage.BuildType.rawValue.getter()
{
  if (*v0) {
    return 0x657361656C6572;
  }
  else {
    return 0x6775626564;
  }
}

uint64_t sub_249A1FA14(char *a1, char *a2)
{
  return sub_2498F127C(*a1, *a2);
}

uint64_t sub_249A1FA20()
{
  return sub_249AEE388();
}

uint64_t sub_249A1FAA0()
{
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249A1FB0C()
{
  return sub_249AEE388();
}

CarPlayAssetUI::ArcPackage::BuildType_optional sub_249A1FB88(Swift::String *a1)
{
  return ArcPackage.BuildType.init(rawValue:)(*a1);
}

void sub_249A1FB94(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6775626564;
  if (*v1) {
    uint64_t v2 = 0x657361656C6572;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_249A1FBD0()
{
  return sub_249AED3A8();
}

uint64_t sub_249A1FC30()
{
  return sub_249AED348();
}

uint64_t ArcPackage.displays.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArcPackage.displays.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 112) = a1;
  return result;
}

uint64_t (*ArcPackage.displays.modify())()
{
  return nullsub_1;
}

uint64_t ArcPackage.init(identifier:iOSContentVersion:version:minimumCompatibilityVersion:minimumSDKVersion:buildType:vehicleType:partnerID:displays:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, char *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  char v14 = *a10;
  char v15 = *a11;
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 88) = a7;
  *(void *)(a9 + 96) = a8;
  *(unsigned char *)(a9 + 104) = v14;
  *(void *)(a9 + 112) = a14;
  *(unsigned char *)(a9 + 48) = v15;
  *(void *)(a9 + 56) = a12;
  *(void *)(a9 + 64) = a13;
  *(void *)(a9 + 32) = 2;
  *(void *)(a9 + 40) = a5;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 72) = a6;
  *(void *)(a9 + 80) = 2;
  return result;
}

uint64_t ArcPackage.addDisplay(type:manufacturerLogo:appleLogo:size:)(unsigned char *a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  int v6 = *a1;
  unint64_t v7 = *(void **)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v9 = *(void **)(a2 + 16);
  uint64_t v52 = *(void *)(a2 + 24);
  char v51 = *(unsigned char *)(a2 + 32);
  uint64_t v49 = *(void *)(a3 + 8);
  char v50 = *(void **)a3;
  uint64_t v47 = *(void *)(a3 + 24);
  int v48 = *(void **)(a3 + 16);
  char v46 = *(unsigned char *)(a3 + 32);
  uint64_t v10 = 0x5F72657473756C43;
  unint64_t v11 = 0xEE0079616C707369;
  uint64_t v44 = *(void *)(a3 + 40);
  unint64_t v12 = 0x445F7265746E6543;
  if (v6 != 1)
  {
    unint64_t v12 = 0xD000000000000011;
    unint64_t v11 = 0x8000000249B16F10;
  }
  if (*a1)
  {
    uint64_t v10 = v12;
    unint64_t v13 = v11;
  }
  else
  {
    unint64_t v13 = 0xEF79616C70736944;
  }
  uint64_t v43 = v10;
  uint64_t v16 = *(void **)(v5 + 112);
  uint64_t v17 = v16[2];
  uint64_t v45 = *(void *)(a2 + 40);
  if (v17)
  {
    uint64_t v40 = *(void *)(a2 + 8);
    long long v41 = *(void **)a2;
    unint64_t v42 = v13;
    swift_bridgeObjectRetain();
    uint64_t v18 = v17 - 1;
    uint64_t v19 = MEMORY[0x263F8EE78];
    for (uint64_t i = 4; ; i += 60)
    {
      memcpy(__dst, &v16[i], sizeof(__dst));
      if (LOBYTE(__dst[1]))
      {
        if (LOBYTE(__dst[1]) == 1) {
          uint64_t v21 = 0x6F437265746E6563;
        }
        else {
          uint64_t v21 = 0x65676E6573736170;
        }
        if (LOBYTE(__dst[1]) == 1) {
          unint64_t v22 = 0xED0000656C6F736ELL;
        }
        else {
          unint64_t v22 = 0xE900000000000072;
        }
        uint64_t v23 = v16;
        if (v6)
        {
LABEL_16:
          if (v6 == 1) {
            uint64_t v24 = 0x6F437265746E6563;
          }
          else {
            uint64_t v24 = 0x65676E6573736170;
          }
          if (v6 == 1) {
            unint64_t v25 = 0xED0000656C6F736ELL;
          }
          else {
            unint64_t v25 = 0xE900000000000072;
          }
          if (v21 != v24) {
            goto LABEL_28;
          }
          goto LABEL_26;
        }
      }
      else
      {
        unint64_t v22 = 0xE700000000000000;
        uint64_t v21 = 0x72657473756C63;
        uint64_t v23 = v16;
        if (v6) {
          goto LABEL_16;
        }
      }
      unint64_t v25 = 0xE700000000000000;
      if (v21 != 0x72657473756C63) {
        goto LABEL_28;
      }
LABEL_26:
      if (v22 == v25)
      {
        sub_249882274((uint64_t)__dst);
        swift_bridgeObjectRelease_n();
        uint64_t v16 = v23;
        goto LABEL_29;
      }
LABEL_28:
      char v26 = sub_249AEE0D8();
      sub_249882274((uint64_t)__dst);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v23;
      if ((v26 & 1) == 0)
      {
        sub_2498824DC((uint64_t)__dst);
        if (!v18) {
          goto LABEL_37;
        }
        goto LABEL_36;
      }
LABEL_29:
      v61[0] = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249A21E88(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v61[0];
      }
      unint64_t v28 = *(void *)(v19 + 16);
      unint64_t v27 = *(void *)(v19 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_249A21E88(v27 > 1, v28 + 1, 1);
        uint64_t v19 = v61[0];
      }
      *(void *)(v19 + 16) = v28 + 1;
      memcpy((void *)(v19 + 480 * v28 + 32), __dst, 0x1E0uLL);
      if (!v18)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        unint64_t v7 = v41;
        unint64_t v13 = v42;
        uint64_t v8 = v40;
        goto LABEL_39;
      }
LABEL_36:
      --v18;
    }
  }
  uint64_t v19 = MEMORY[0x263F8EE78];
LABEL_39:
  uint64_t v29 = *(void *)(v19 + 16);
  swift_release();
  if (v29)
  {
    *(void *)&__dst[0] = v43;
    *((void *)&__dst[0] + 1) = v13;
    swift_bridgeObjectRetain();
    sub_249AED1E8();
    v61[0] = v29;
    sub_249AEDF48();
    sub_249AED1E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v13 = *((void *)&__dst[0] + 1);
    uint64_t v30 = *(void *)&__dst[0];
    uint64_t v31 = v16[2];
    if (!v31) {
      goto LABEL_52;
    }
  }
  else
  {
    uint64_t v30 = v43;
    uint64_t v31 = v16[2];
    if (!v31) {
      goto LABEL_52;
    }
  }
  long long v32 = v16 + 5;
  while (*(v32 - 1) != v30 || *v32 != v13)
  {
    uint64_t v34 = v30;
    char v35 = sub_249AEE0D8();
    uint64_t v30 = v34;
    if (v35) {
      break;
    }
    v32 += 60;
    if (!--v31) {
      goto LABEL_52;
    }
  }
  *(void *)&__dst[0] = v30;
  *((void *)&__dst[0] + 1) = v13;
  swift_bridgeObjectRetain();
  sub_249AED1E8();
  LODWORD(v61[0]) = sub_249A2227C(1001);
  sub_249AEDF48();
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v13 = *((void *)&__dst[0] + 1);
  uint64_t v30 = *(void *)&__dst[0];
LABEL_52:
  unsigned __int8 v64 = v6;
  v61[0] = v7;
  v61[1] = v8;
  v61[2] = v9;
  v61[3] = v52;
  char v62 = v51;
  uint64_t v63 = v45;
  *(void *)&long long v56 = v50;
  *((void *)&v56 + 1) = v49;
  uint64_t v57 = v48;
  uint64_t v58 = v47;
  char v59 = v46;
  uint64_t v60 = v44;
  *(void *)&long long v55 = v30;
  *((void *)&v55 + 1) = v13;
  sub_24988247C(v7, v8, v9, v52, v51);
  sub_24988247C(v50, v49, v48, v47, v46);
  swift_bridgeObjectRetain();
  Display.init(type:manufacturerLogo:appleLogo:id:size:density:requiresDarkAppearance:reversesDynamicContentDPadScrolling:)(&v64, (uint64_t)v61, &v56, &v55, 0, 2, __dst, a4, a5, 157.0);
  sub_249882274((uint64_t)__dst);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v16 = sub_2498AC3FC(0, v16[2] + 1, 1, v16);
  }
  unint64_t v37 = v16[2];
  unint64_t v36 = v16[3];
  if (v37 >= v36 >> 1) {
    uint64_t v16 = sub_2498AC3FC((void *)(v36 > 1), v37 + 1, 1, v16);
  }
  uint64_t v16[2] = v37 + 1;
  memcpy(&v16[60 * v37 + 4], __dst, 0x1E0uLL);
  *(void *)(v53 + 112) = v16;
  long long v38 = __dst[0];
  swift_bridgeObjectRetain();
  sub_2498824DC((uint64_t)__dst);
  uint64_t result = swift_bridgeObjectRelease();
  _OWORD *v54 = v38;
  return result;
}

unint64_t sub_249A202A8(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x6E6F6973726576;
      break;
    case 3:
      unint64_t result = 0x54656C6369686576;
      break;
    case 4:
      unint64_t result = 0x4972656E74726170;
      break;
    case 5:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 7:
      unint64_t result = 0x707954646C697562;
      break;
    case 8:
      unint64_t result = 0x7379616C70736964;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_249A203E8()
{
  return sub_249A202A8(*v0);
}

uint64_t sub_249A203F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A23704(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A20418(uint64_t a1)
{
  unint64_t v2 = sub_249A22A10();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A20454(uint64_t a1)
{
  unint64_t v2 = sub_249A22A10();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ArcPackage.displayIndex(by:)(uint64_t *a1)
{
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = 0;
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  for (uint64_t i = (void *)(v2 + 40); ; i += 60)
  {
    BOOL v8 = *(i - 1) == v5 && *i == v6;
    if (v8 || (sub_249AEE0D8() & 1) != 0) {
      break;
    }
    if (v3 == ++v4) {
      return 0;
    }
  }
  return v4;
}

uint64_t sub_249A2051C@<X0>(long long *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v5 = *((void *)a1 + 3);
  char v6 = *((unsigned char *)a1 + 48);
  uint64_t v7 = *((void *)a1 + 7);
  uint64_t v8 = *((void *)a1 + 8);
  uint64_t v9 = *((void *)a1 + 11);
  uint64_t v10 = *((void *)a1 + 12);
  char v11 = *((unsigned char *)a1 + 104);
  uint64_t v12 = *((void *)a1 + 14);
  uint64_t v14 = *a2;
  uint64_t v13 = a2[1];
  long long v18 = *a1;
  uint64_t v19 = v4;
  uint64_t v20 = v5;
  long long v21 = a1[2];
  char v22 = v6;
  uint64_t v23 = v7;
  uint64_t v24 = v8;
  long long v25 = *(long long *)((char *)a1 + 72);
  uint64_t v26 = v9;
  uint64_t v27 = v10;
  char v28 = v11;
  uint64_t v29 = v12;
  v16[0] = v14;
  v16[1] = v13;
  ArcPackage.subscript.getter(v16, (uint64_t)v17);
  sub_249A21EA8((uint64_t)v17, (uint64_t)&v18);
  return sub_249A21EA8((uint64_t)&v18, a3);
}

uint64_t sub_249A205D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  uint64_t v3 = a3[1];
  sub_249A21EA8(a1, (uint64_t)v8);
  sub_249A21EA8((uint64_t)v8, (uint64_t)v7);
  v6[0] = v4;
  v6[1] = v3;
  swift_bridgeObjectRetain();
  sub_249A22688((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_249A2274C);
  return ArcPackage.subscript.setter((uint64_t)v7, v6);
}

uint64_t ArcPackage.subscript.setter(uint64_t a1, uint64_t *a2)
{
  sub_249A21EA8(a1, (uint64_t)v17);
  uint64_t v4 = a2[1];
  uint64_t v7 = *(void **)(v2 + 112);
  char v6 = (void *)(v2 + 112);
  uint64_t v5 = v7;
  uint64_t v8 = v7[2];
  if (v8)
  {
    uint64_t v9 = 0;
    unint64_t v10 = 0;
    uint64_t v11 = *a2;
    while (1)
    {
      BOOL v12 = v5[v9 + 4] == v11 && v5[v9 + 5] == v4;
      if (v12 || (sub_249AEE0D8() & 1) != 0) {
        break;
      }
      ++v10;
      v9 += 60;
      if (v8 == v10) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    sub_249A21EA8((uint64_t)v17, (uint64_t)__src);
    if (sub_24987BDBC((uint64_t)__src) == 1)
    {
      sub_249A1F4FC(v10, v15);
      return sub_2498824DC((uint64_t)v15);
    }
    else
    {
      sub_249A21EA8((uint64_t)v17, (uint64_t)v15);
      sub_249882274((uint64_t)v15);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_249970070(v5);
        uint64_t v5 = (void *)result;
      }
      if (v10 >= v5[2])
      {
        __break(1u);
      }
      else
      {
        memcpy(v14, &v5[v9 + 4], sizeof(v14));
        memcpy(&v5[v9 + 4], __src, 0x1E0uLL);
        sub_2498824DC((uint64_t)v14);
        uint64_t result = sub_249A22688((uint64_t)v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498828A8);
        *char v6 = v5;
      }
    }
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return sub_249A22688((uint64_t)v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498828A8);
  }
  return result;
}

unint64_t ArcPackage.subscript.modify(void *a1, uint64_t *a2)
{
  uint64_t v5 = malloc(0x798uLL);
  *a1 = v5;
  char v6 = v5 + 60;
  v5[240] = v2;
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  v5[241] = *a2;
  v5[242] = v8;
  uint64_t v9 = *(void *)(v2 + 112);
  unint64_t result = sub_249A225F4(v9, v7, v8);
  if (v11)
  {
    sub_249882744(v6);
    sub_249A21EA8((uint64_t)v6, (uint64_t)v5);
    goto LABEL_6;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v9 + 16))
  {
    BOOL v12 = (const void *)(v9 + 480 * result + 32);
    memcpy(v5 + 120, v12, 0x1E0uLL);
    memmove(v6, v12, 0x1E0uLL);
    nullsub_1(v6);
    sub_249A21EA8((uint64_t)v6, (uint64_t)v5);
    sub_249882274((uint64_t)(v5 + 120));
LABEL_6:
    swift_bridgeObjectRetain();
    return (unint64_t)sub_249A20904;
  }
  __break(1u);
  return result;
}

void sub_249A20904(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  uint64_t v3 = *a1 + 480;
  uint64_t v4 = *a1 + 960;
  if (a2)
  {
    uint64_t v5 = v2[242];
    uint64_t v6 = v2[241];
    sub_249A21EA8(*a1, v4);
    sub_249A21EA8(v4, (uint64_t)(v2 + 180));
    uint64_t v9 = v6;
    uint64_t v10 = v5;
    sub_249A22688(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_249A2274C);
    ArcPackage.subscript.setter((uint64_t)(v2 + 180), &v9);
    sub_249A21EA8((uint64_t)v2, v3);
    sub_249A22688(v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498828A8);
  }
  else
  {
    uint64_t v7 = v2[242];
    uint64_t v8 = v2[241];
    sub_249A21EA8(*a1, v3);
    sub_249A21EA8(v3, v4);
    uint64_t v9 = v8;
    uint64_t v10 = v7;
    ArcPackage.subscript.setter(v4, &v9);
  }

  free(v2);
}

uint64_t InfoPlist.iOSContentVersion.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InfoPlist.iOSContentVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*InfoPlist.iOSContentVersion.modify())()
{
  return nullsub_1;
}

uint64_t InfoPlist.accessoryContentVersion.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t InfoPlist.accessoryContentVersion.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*InfoPlist.accessoryContentVersion.modify())()
{
  return nullsub_1;
}

uint64_t InfoPlist.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InfoPlist.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*InfoPlist.identifier.modify())()
{
  return nullsub_1;
}

uint64_t InfoPlist.minimumSDKVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InfoPlist.minimumSDKVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*InfoPlist.minimumSDKVersion.modify())()
{
  return nullsub_1;
}

void InfoPlist.buildType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 56);
}

unsigned char *InfoPlist.buildType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 56) = *result;
  return result;
}

uint64_t (*InfoPlist.buildType.modify())()
{
  return nullsub_1;
}

uint64_t InfoPlist.removeDisclaimerLabelOverride.getter()
{
  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t InfoPlist.removeDisclaimerLabelOverride.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 57) = result;
  return result;
}

uint64_t (*InfoPlist.removeDisclaimerLabelOverride.modify())()
{
  return nullsub_1;
}

uint64_t InfoPlist.disclaimer.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InfoPlist.disclaimer.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*InfoPlist.disclaimer.modify())()
{
  return nullsub_1;
}

uint64_t InfoPlist.minimumCompatibilityVersion.getter()
{
  return *(void *)(v0 + 80);
}

uint64_t InfoPlist.minimumCompatibilityVersion.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 80) = result;
  *(unsigned char *)(v2 + 88) = a2 & 1;
  return result;
}

uint64_t (*InfoPlist.minimumCompatibilityVersion.modify())()
{
  return nullsub_1;
}

void __swiftcall InfoPlist.init(iOSContentVersion:accessoryContentVersion:identifier:minimumSDKVersion:buildType:removeDisclaimerLabelOverride:disclaimer:minimumCompatibilityVersion:)(CarPlayAssetUI::InfoPlist *__return_ptr retstr, Swift::String_optional iOSContentVersion, Swift::Int accessoryContentVersion, Swift::String identifier, Swift::String_optional minimumSDKVersion, CarPlayAssetUI::ArcPackage::BuildType buildType, Swift::Bool_optional removeDisclaimerLabelOverride, Swift::String_optional disclaimer, Swift::Int_optional minimumCompatibilityVersion)
{
  object = disclaimer.value._object;
  uint64_t countAndFlagsBits = disclaimer.value._countAndFlagsBits;
  CarPlayAssetUI::ArcPackage::BuildType v11 = *(unsigned char *)buildType;
  if (!disclaimer.value._object)
  {
    uint64_t countAndFlagsBits = 0;
    object = (void *)0xE000000000000000;
  }
  retstr->iOSContentVersion = iOSContentVersion;
  retstr->accessoryContentVersion = accessoryContentVersion;
  retstr->identifier = identifier;
  retstr->minimumSDKVersion = minimumSDKVersion;
  retstr->buildType = v11;
  retstr->removeDisclaimerLabelOverride = removeDisclaimerLabelOverride;
  retstr->disclaimer.value._uint64_t countAndFlagsBits = countAndFlagsBits;
  retstr->disclaimer.value._object = object;
  retstr->minimumCompatibilityVersion.value = minimumCompatibilityVersion.value;
  retstr->minimumCompatibilityVersion.is_nil = minimumCompatibilityVersion.is_nil;
}

uint64_t sub_249A20D64(char a1)
{
  uint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD000000000000017;
      break;
    case 2:
      uint64_t result = *MEMORY[0x263EFFB70];
      if (*MEMORY[0x263EFFB70]) {
        goto LABEL_7;
      }
      __break(1u);
      goto LABEL_5;
    case 3:
      if (!*MEMORY[0x263EFFB58])
      {
        __break(1u);
        JUMPOUT(0x249A20E6CLL);
      }
LABEL_7:
      uint64_t result = sub_249AED0D8();
      break;
    case 4:
LABEL_5:
      result += 10;
      break;
    case 6:
      uint64_t result = 0x707954646C697542;
      break;
    case 7:
      uint64_t result = 0xD00000000000001DLL;
      break;
    case 8:
      uint64_t result = 0x6D69616C63736944;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_249A20E90(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0x6E6F6973726576;
      break;
    case 3:
      unint64_t result = 0x696669746E656469;
      break;
    case 4:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 6:
      unint64_t result = 0x707954646C697562;
      break;
    case 7:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 8:
      unint64_t result = 0x6D69616C63736964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_249A20F9C(unsigned __int8 *a1, char *a2)
{
  return sub_2498F1320(*a1, *a2);
}

uint64_t sub_249A20FA8()
{
  return sub_249AEE388();
}

uint64_t sub_249A20FF0()
{
  return sub_249A1F12C();
}

uint64_t sub_249A20FF8()
{
  return sub_249AEE388();
}

uint64_t sub_249A2103C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_249A23AC4();
  *a1 = result;
  return result;
}

unint64_t sub_249A2106C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_249A20E90(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_249A21098()
{
  return sub_249A20D64(*v0);
}

uint64_t sub_249A210A0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_249A23AC4();
  *a1 = result;
  return result;
}

uint64_t sub_249A210C8(uint64_t a1)
{
  unint64_t v2 = sub_249A22968();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A21104(uint64_t a1)
{
  unint64_t v2 = sub_249A22968();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InfoPlist.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E39F0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v27 = *(void *)(v1 + 24);
  uint64_t v28 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v9 = *(void *)(v1 + 40);
  uint64_t v23 = *(void *)(v1 + 48);
  uint64_t v24 = v9;
  LODWORD(v9) = *(unsigned __int8 *)(v1 + 56);
  int v21 = *(unsigned __int8 *)(v1 + 57);
  int v22 = v9;
  uint64_t v10 = *(void *)(v1 + 64);
  v20[1] = *(void *)(v1 + 72);
  uint64_t v20[2] = v10;
  uint64_t v25 = *(void *)(v1 + 80);
  uint64_t v26 = v8;
  int v11 = *(unsigned __int8 *)(v1 + 88);
  uint64_t v12 = a1[3];
  uint64_t v13 = a1;
  uint64_t v15 = v14;
  __swift_project_boxed_opaque_existential_2Tm(v13, v12);
  sub_249A22968();
  sub_249AEE468();
  LOBYTE(v31) = 0;
  uint64_t v16 = v29;
  sub_249AEDE58();
  if (v16) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v15);
  }
  LODWORD(v29) = v11;
  uint64_t v18 = v4;
  LOBYTE(v31) = 1;
  uint64_t v19 = v28;
  sub_249AEDEE8();
  uint64_t v31 = v19;
  sub_249AEDF48();
  LOBYTE(v31) = 2;
  sub_249AEDEB8();
  swift_bridgeObjectRelease();
  LOBYTE(v31) = 3;
  sub_249AEDEB8();
  LOBYTE(v31) = 5;
  sub_249AEDE58();
  LOBYTE(v31) = v22;
  char v30 = 6;
  sub_249A229BC();
  sub_249AEDF08();
  LOBYTE(v31) = 7;
  sub_249AEDE68();
  LOBYTE(v31) = 8;
  sub_249AEDE58();
  LOBYTE(v31) = 4;
  sub_249AEDE98();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v6, v15);
}

uint64_t sub_249A214A4(void *a1)
{
  return InfoPlist.encode(to:)(a1);
}

uint64_t ArcPackage.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3E0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v28 = *(void *)(v1 + 16);
  uint64_t v29 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v26 = *(void *)(v1 + 40);
  uint64_t v27 = v8;
  int v32 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v24 = *(void *)(v1 + 64);
  uint64_t v25 = v9;
  uint64_t v10 = *(void *)(v1 + 80);
  uint64_t v22 = *(void *)(v1 + 72);
  uint64_t v23 = v10;
  uint64_t v11 = *(void *)(v1 + 96);
  uint64_t v20 = *(void *)(v1 + 88);
  uint64_t v21 = v11;
  int v19 = *(unsigned __int8 *)(v1 + 104);
  uint64_t v18 = *(void *)(v1 + 112);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A22A10();
  uint64_t v12 = v6;
  sub_249AEE468();
  LOBYTE(v31) = 0;
  uint64_t v13 = v30;
  sub_249AEDEB8();
  if (v13) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  char v15 = v32;
  uint64_t v16 = v4;
  uint64_t v17 = v29;
  swift_bridgeObjectRetain();
  sub_2498DDFA0(v28, v17, v27, 1);
  swift_bridgeObjectRelease();
  LOBYTE(v31) = 2;
  sub_249AEDEF8();
  LOBYTE(v31) = v15;
  char v33 = 3;
  sub_2498B1334();
  sub_249AEDF08();
  LOBYTE(v31) = 4;
  sub_249AEDEB8();
  sub_2498DE0D4(v22, v23, 5);
  LOBYTE(v31) = 6;
  sub_249AEDEB8();
  LOBYTE(v31) = v19;
  char v33 = 7;
  sub_249A229BC();
  sub_249AEDF08();
  uint64_t v31 = v18;
  char v33 = 8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3A10);
  sub_249A22B0C(&qword_2696E3A18, (void (*)(void))sub_249A22A64);
  sub_249AEDF08();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v12, v3);
}

uint64_t ArcPackage.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3A28);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A22A10();
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    LOBYTE(v35) = 0;
    uint64_t v10 = sub_249AEDDB8();
    uint64_t v34 = v11;
    char v38 = 1;
    sub_249AEDDA8();
    unint64_t v12 = v36;
    if (v36)
    {
      uint64_t v30 = v35;
      uint64_t v13 = qword_2696DD758;
      swift_bridgeObjectRetain();
      if (v13 != -1) {
        swift_once();
      }
      uint64_t v29 = qword_2696E2ED8;
      unint64_t v33 = v12;
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_2696DD758 != -1) {
        swift_once();
      }
      uint64_t v29 = qword_2696E2ED8;
      uint64_t v30 = 0;
      unint64_t v33 = 0xE000000000000000;
    }
    LOBYTE(v35) = 2;
    uint64_t v28 = sub_249AEDDF8();
    char v38 = 3;
    sub_2498B12DC();
    sub_249AEDE08();
    int v37 = v35;
    LOBYTE(v35) = 4;
    uint64_t v27 = sub_249AEDDB8();
    uint64_t v32 = v14;
    char v38 = 5;
    sub_249AEDDA8();
    uint64_t v15 = v35;
    if ((_BYTE)v36) {
      uint64_t v15 = 0;
    }
    uint64_t v26 = v15;
    if (qword_2696DD758 != -1) {
      swift_once();
    }
    uint64_t v16 = qword_2696E2ED8;
    LOBYTE(v35) = 6;
    uint64_t v25 = sub_249AEDDB8();
    uint64_t v31 = v17;
    char v38 = 7;
    sub_249A22AB8();
    sub_249AEDE08();
    int v24 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3A10);
    char v38 = 8;
    sub_249A22B0C(&qword_2696E3A38, (void (*)(void))sub_249A22B7C);
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a2 = v10;
    uint64_t v18 = v35;
    uint64_t v19 = v30;
    *(void *)(a2 + 8) = v34;
    *(void *)(a2 + 16) = v19;
    uint64_t v20 = v32;
    uint64_t v21 = v29;
    *(void *)(a2 + 24) = v33;
    *(void *)(a2 + 32) = v21;
    *(void *)(a2 + 40) = v28;
    *(unsigned char *)(a2 + 48) = v37;
    *(void *)(a2 + 56) = v27;
    *(void *)(a2 + 64) = v20;
    *(void *)(a2 + 72) = v26;
    *(void *)(a2 + 80) = v16;
    uint64_t v22 = v31;
    *(void *)(a2 + 88) = v25;
    *(void *)(a2 + 96) = v22;
    *(unsigned char *)(a2 + 104) = v24;
    *(void *)(a2 + 112) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_249A21E58@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ArcPackage.init(from:)(a1, a2);
}

uint64_t sub_249A21E70(void *a1)
{
  return ArcPackage.encode(to:)(a1);
}

uint64_t sub_249A21E88(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998BBB8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_249A21EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDA40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_249A21F10(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998C074(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_249A21F30(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998C348(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_249A21F50(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998C4EC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_249A21F70(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998C668(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_249A21F90(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998C810(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_249A21FB0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998C998(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_249A21FD0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998CAF8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_249A21FF0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998CCA0(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_249A22010(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998CE40(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_249A22030(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998CE54(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_249A22050(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998CFF8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_249A22070(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998D184(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_249A22090(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998D32C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_249A220B0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998D4B8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_249A220D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998D620(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_249A220F0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998D7AC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_249A22110(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998D7CC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_249A22130(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998D7EC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_249A22150(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998D80C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_249A22170(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998DA74(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_249A22190(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998DC00(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_249A221B0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998DD6C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_249A221D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24998DECC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

unint64_t sub_249A221F0(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x24C5B0130](&v3, 8);
    uint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x24C5B0130](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_249A2227C(uint64_t result)
{
  if (result)
  {
    unsigned int v1 = result;
    unsigned int v2 = result;
    uint64_t v6 = 0;
    MEMORY[0x24C5B0130](&v6, 8);
    unint64_t v3 = v6 * (unint64_t)v2;
    uint64_t result = HIDWORD(v3);
    if (v3 < v1)
    {
      unsigned int v4 = -v1 % v1;
      if (v4 > v3)
      {
        do
        {
          uint64_t v6 = 0;
          MEMORY[0x24C5B0130](&v6, 8);
          int64_t v5 = v6 * (unint64_t)v2;
        }
        while (v4 > v5);
        return v5 >> 32;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t _s14CarPlayAssetUI9InfoPlistV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  int v9 = *(unsigned __int8 *)(a1 + 56);
  int v10 = *(unsigned __int8 *)(a1 + 57);
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v12 = *(void *)(a1 + 72);
  uint64_t v13 = *(void *)(a1 + 80);
  char v14 = *(unsigned char *)(a1 + 88);
  uint64_t v15 = *(void *)(a2 + 8);
  uint64_t v16 = *(void *)(a2 + 16);
  uint64_t v17 = *(void *)(a2 + 24);
  uint64_t v18 = *(void *)(a2 + 32);
  uint64_t v20 = *(void *)(a2 + 40);
  uint64_t v19 = *(void *)(a2 + 48);
  int v21 = *(unsigned __int8 *)(a2 + 56);
  if (v3)
  {
    if (!v15) {
      return 0;
    }
    int v49 = *(unsigned __int8 *)(a2 + 57);
    int v50 = *(unsigned __int8 *)(a1 + 57);
    uint64_t v45 = *(void *)(a2 + 64);
    uint64_t v46 = *(void *)(a1 + 64);
    uint64_t v47 = *(void *)(a2 + 72);
    uint64_t v48 = *(void *)(a1 + 72);
    uint64_t v41 = *(void *)(a2 + 80);
    uint64_t v42 = *(void *)(a1 + 80);
    char v43 = *(unsigned char *)(a2 + 88);
    char v44 = *(unsigned char *)(a1 + 88);
    if (*(void *)a1 == *(void *)a2 && v3 == v15)
    {
      if (v4 != v16) {
        return 0;
      }
    }
    else
    {
      int v39 = *(unsigned __int8 *)(a2 + 56);
      int v40 = *(unsigned __int8 *)(a1 + 56);
      char v23 = sub_249AEE0D8();
      uint64_t result = 0;
      if ((v23 & 1) == 0) {
        return result;
      }
      int v21 = v39;
      int v9 = v40;
      if (v4 != v16) {
        return result;
      }
    }
  }
  else
  {
    uint64_t result = 0;
    if (v15) {
      return result;
    }
    int v49 = *(unsigned __int8 *)(a2 + 57);
    int v50 = v10;
    uint64_t v45 = *(void *)(a2 + 64);
    uint64_t v46 = v11;
    uint64_t v47 = *(void *)(a2 + 72);
    uint64_t v48 = v12;
    uint64_t v41 = *(void *)(a2 + 80);
    uint64_t v42 = v13;
    char v43 = *(unsigned char *)(a2 + 88);
    char v44 = v14;
    if (v4 != v16) {
      return result;
    }
  }
  if (v5 == v17 && v6 == v18
    || (v24 = v9, v25 = v21, v26 = sub_249AEE0D8(), int v21 = v25, v9 = v24, v27 = v26, result = 0, (v27 & 1) != 0))
  {
    if (v8)
    {
      if (!v19) {
        return 0;
      }
      if (v7 != v20 || v8 != v19)
      {
        int v28 = v9;
        int v29 = v21;
        char v30 = sub_249AEE0D8();
        int v21 = v29;
        int v9 = v28;
        char v31 = v30;
        uint64_t result = 0;
        if ((v31 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v19)
    {
      return 0;
    }
    if (v9) {
      uint64_t v32 = 0x657361656C6572;
    }
    else {
      uint64_t v32 = 0x6775626564;
    }
    if (v9) {
      unint64_t v33 = 0xE700000000000000;
    }
    else {
      unint64_t v33 = 0xE500000000000000;
    }
    if (v21) {
      uint64_t v34 = 0x657361656C6572;
    }
    else {
      uint64_t v34 = 0x6775626564;
    }
    if (v21) {
      unint64_t v35 = 0xE700000000000000;
    }
    else {
      unint64_t v35 = 0xE500000000000000;
    }
    if (v32 == v34 && v33 == v35)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v36 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      if ((v36 & 1) == 0) {
        return result;
      }
    }
    if (v50 == 2)
    {
      if (v49 != 2) {
        return 0;
      }
    }
    else
    {
      uint64_t result = 0;
      if (v49 == 2 || ((((v50 & 1) == 0) ^ v49) & 1) == 0) {
        return result;
      }
    }
    if (v48)
    {
      if (v47)
      {
        if (v46 != v45 || v48 != v47)
        {
          char v37 = sub_249AEE0D8();
          uint64_t result = 0;
          if ((v37 & 1) == 0) {
            return result;
          }
        }
LABEL_50:
        if (v44)
        {
          if ((v43 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          char v38 = v43;
          if (v42 != v41) {
            char v38 = 1;
          }
          if (v38) {
            return 0;
          }
        }
        return 1;
      }
    }
    else if (!v47)
    {
      goto LABEL_50;
    }
    return 0;
  }
  return result;
}

uint64_t sub_249A225F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v6 = 0;
  for (uint64_t i = (void *)(a1 + 40); ; i += 60)
  {
    BOOL v8 = *(i - 1) == a2 && *i == a3;
    if (v8 || (sub_249AEE0D8() & 1) != 0) {
      break;
    }
    if (v3 == ++v6) {
      return 0;
    }
  }
  return v6;
}

uint64_t sub_249A22688(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  long long v17 = *(_OWORD *)(a1 + 432);
  long long v18 = *(_OWORD *)(a1 + 448);
  long long v15 = *(_OWORD *)(a1 + 400);
  long long v16 = *(_OWORD *)(a1 + 416);
  long long v13 = *(_OWORD *)(a1 + 368);
  long long v14 = *(_OWORD *)(a1 + 384);
  long long v11 = *(_OWORD *)(a1 + 336);
  long long v12 = *(_OWORD *)(a1 + 352);
  long long v9 = *(_OWORD *)(a1 + 304);
  long long v10 = *(_OWORD *)(a1 + 320);
  long long v7 = *(_OWORD *)(a1 + 272);
  long long v8 = *(_OWORD *)(a1 + 288);
  long long v5 = *(_OWORD *)(a1 + 240);
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v4 = *(_OWORD *)(a1 + 208);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v4,
    *((void *)&v4 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    v7,
    *((void *)&v7 + 1),
    v8,
    *((void *)&v8 + 1),
    v9,
    *((void *)&v9 + 1),
    v10,
    *((void *)&v10 + 1),
    v11,
    *((void *)&v11 + 1),
    v12,
    *((void *)&v12 + 1),
    v13,
    *((void *)&v13 + 1),
    v14,
    *((void *)&v14 + 1),
    v15,
    *((void *)&v15 + 1),
    v16,
    *((void *)&v16 + 1),
    v17,
    *((void *)&v17 + 1),
    v18,
    *((void *)&v18 + 1),
    *(void *)(a1 + 464),
    *(void *)(a1 + 472));
  return a1;
}

uint64_t sub_249A2274C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, void *a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, void *a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,void *a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,void *a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,uint64_t a45,void *a46,uint64_t a47,char a48,uint64_t a49,void *a50,uint64_t a51,void *a52,uint64_t a53,char a54)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_249882468(a8, a9, a10, a11, a12);
    swift_bridgeObjectRetain();
    sub_249882468(a17, a18, a19, a20, a21);
    swift_bridgeObjectRetain();
    sub_249882468(a26, a27, a28, a29, a30);
    swift_bridgeObjectRetain();
    sub_249882468(a35, a36, a37, a38, a39);
    swift_bridgeObjectRetain();
    sub_24988247C(a44, a45, a46, a47, a48);
    sub_24988247C(a50, a51, a52, a53, a54);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_249A22968()
{
  unint64_t result = qword_2696E39F8;
  if (!qword_2696E39F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E39F8);
  }
  return result;
}

unint64_t sub_249A229BC()
{
  unint64_t result = qword_2696E3A00;
  if (!qword_2696E3A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3A00);
  }
  return result;
}

unint64_t sub_249A22A10()
{
  unint64_t result = qword_2696E3A08;
  if (!qword_2696E3A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3A08);
  }
  return result;
}

unint64_t sub_249A22A64()
{
  unint64_t result = qword_2696E3A20;
  if (!qword_2696E3A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3A20);
  }
  return result;
}

unint64_t sub_249A22AB8()
{
  unint64_t result = qword_2696E3A30;
  if (!qword_2696E3A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3A30);
  }
  return result;
}

uint64_t sub_249A22B0C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E3A10);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249A22B7C()
{
  unint64_t result = qword_2696E3A40;
  if (!qword_2696E3A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3A40);
  }
  return result;
}

unint64_t sub_249A22BD4()
{
  unint64_t result = qword_2696E3A48;
  if (!qword_2696E3A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3A48);
  }
  return result;
}

uint64_t sub_249A22C28@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_249A22C34(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_249A22C78@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 72);
  return result;
}

void *sub_249A22C84(void *result, uint64_t a2)
{
  *(void *)(a2 + 72) = *result;
  return result;
}

uint64_t sub_249A22C98()
{
  return 0;
}

uint64_t destroy for ArcPackage()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArcPackage(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArcPackage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ArcPackage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArcPackage()
{
  return &type metadata for ArcPackage;
}

unsigned char *storeEnumTagSinglePayload for ArcPackage.BuildType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A230ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArcPackage.BuildType()
{
  return &type metadata for ArcPackage.BuildType;
}

uint64_t destroy for InfoPlist()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InfoPlist(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InfoPlist(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v4;
  return a1;
}

uint64_t assignWithTake for InfoPlist(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for InfoPlist(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 89)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InfoPlist(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 89) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InfoPlist()
{
  return &type metadata for InfoPlist;
}

ValueMetadata *type metadata accessor for ArcPackage.CodingKeys()
{
  return &type metadata for ArcPackage.CodingKeys;
}

unsigned char *_s14CarPlayAssetUI10ArcPackageV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A234BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InfoPlist.CodingKeys()
{
  return &type metadata for InfoPlist.CodingKeys;
}

unint64_t sub_249A234F8()
{
  unint64_t result = qword_2696E3A50;
  if (!qword_2696E3A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3A50);
  }
  return result;
}

unint64_t sub_249A23550()
{
  unint64_t result = qword_2696E3A58;
  if (!qword_2696E3A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3A58);
  }
  return result;
}

unint64_t sub_249A235A8()
{
  unint64_t result = qword_2696E3A60;
  if (!qword_2696E3A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3A60);
  }
  return result;
}

unint64_t sub_249A23600()
{
  unint64_t result = qword_2696E3A68;
  if (!qword_2696E3A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3A68);
  }
  return result;
}

unint64_t sub_249A23658()
{
  unint64_t result = qword_2696E3A70;
  if (!qword_2696E3A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3A70);
  }
  return result;
}

unint64_t sub_249A236B0()
{
  unint64_t result = qword_2696E3A78;
  if (!qword_2696E3A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3A78);
  }
  return result;
}

uint64_t sub_249A23704(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249B13BF0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x54656C6369686576 && a2 == 0xEB00000000657079 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4972656E74726170 && a2 == 0xE900000000000044 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000249B13C30 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249B13C50 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x707954646C697562 && a2 == 0xE900000000000065 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7379616C70736964 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_249A23AC4()
{
  unint64_t v0 = sub_249AEDCF8();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

unint64_t sub_249A23B10()
{
  unint64_t result = qword_2696E3A80[0];
  if (!qword_2696E3A80[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2696E3A80);
  }
  return result;
}

uint64_t static DynamicAppearanceValue<A>.== infix(_:_:)()
{
  if ((sub_249AED088() & 1) == 0) {
    return 0;
  }
  type metadata accessor for DynamicAppearanceValue();
  return sub_249AED088() & 1;
}

uint64_t type metadata accessor for DynamicAppearanceValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t DynamicAppearanceValue.lightMode.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t DynamicAppearanceValue.lightMode.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*DynamicAppearanceValue.lightMode.modify())()
{
  return nullsub_1;
}

uint64_t DynamicAppearanceValue.darkMode.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 28));
}

uint64_t DynamicAppearanceValue.darkMode.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 28), a1);
}

uint64_t (*DynamicAppearanceValue.darkMode.modify())()
{
  return nullsub_1;
}

uint64_t DynamicAppearanceValue.init(lightMode:darkMode:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  v9(a3 - 8, a4, a1);
  uint64_t v7 = a4 + *(int *)(type metadata accessor for DynamicAppearanceValue() + 28);

  return v9(v7, a2, a3);
}

uint64_t DynamicAppearanceValue.resolve(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_249AEBAF8();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = MEMORY[0x270FA5388](v7);
  long long v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, v7, v9);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
  if (v12 == *MEMORY[0x263F18508]) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 16))(a3, v3);
  }
  if (v12 == *MEMORY[0x263F184F8]) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 16))(a3, v3 + *(int *)(a2 + 28));
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 16))(a3, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t DynamicAppearanceValue.resolve(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a1 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 16))(a3, v3 + *(int *)(a2 + 28));
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 16))(a3, v3);
  }
}

BOOL sub_249A24010(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_249A24020()
{
  return sub_249AEE348();
}

uint64_t sub_249A24048(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x646F4D746867696CLL && a2 == 0xE900000000000065;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65646F4D6B726164 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_249A24148()
{
  return sub_249AEE388();
}

uint64_t sub_249A24190(char a1)
{
  if (a1) {
    return 0x65646F4D6B726164;
  }
  else {
    return 0x646F4D746867696CLL;
  }
}

BOOL sub_249A241CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_249A24010(*a1, *a2);
}

uint64_t sub_249A241DC()
{
  return sub_249A24148();
}

uint64_t sub_249A241EC()
{
  return sub_249A24020();
}

uint64_t sub_249A241FC()
{
  return sub_249AEE388();
}

uint64_t sub_249A24244()
{
  return sub_249A24190(*v0);
}

uint64_t sub_249A24254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A24048(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A24280@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_249A2543C();
  *a1 = result;
  return result;
}

uint64_t sub_249A242AC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_249A24300(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t DynamicAppearanceValue<A>.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[0] = a2;
  v11[1] = a4;
  type metadata accessor for DynamicAppearanceValue.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_249AEDF18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v11 - v7;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249AEE468();
  char v13 = 0;
  uint64_t v9 = v11[3];
  sub_249AEDF08();
  if (!v9)
  {
    char v12 = 1;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t type metadata accessor for DynamicAppearanceValue.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t DynamicAppearanceValue<A>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v34 = a3;
  uint64_t v28 = a4;
  uint64_t v30 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  int v29 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v33 = (char *)&v26 - v8;
  type metadata accessor for DynamicAppearanceValue.CodingKeys();
  swift_getWitnessTable();
  uint64_t v9 = sub_249AEDE28();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v31 = v9;
  uint64_t v32 = v10;
  MEMORY[0x270FA5388](v9);
  char v12 = (char *)&v26 - v11;
  uint64_t v13 = type metadata accessor for DynamicAppearanceValue();
  uint64_t v27 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  long long v15 = (char *)&v26 - v14;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  uint64_t v16 = v35;
  sub_249AEE428();
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  uint64_t v35 = v13;
  uint64_t v17 = v30;
  uint64_t v18 = v31;
  char v37 = 0;
  sub_249AEDE08();
  uint64_t v19 = *(char **)(v17 + 32);
  char v26 = v15;
  uint64_t v20 = v33;
  unint64_t v33 = v19;
  ((void (*)(char *, char *, uint64_t))v19)(v15, v20, a2);
  char v36 = 1;
  int v21 = v29;
  sub_249AEDE08();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v18);
  uint64_t v22 = v35;
  char v23 = v26;
  ((void (*)(char *, char *, uint64_t))v33)(&v26[*(int *)(v35 + 28)], v21, a2);
  uint64_t v24 = v27;
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v28, v23, v22);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v23, v22);
}

uint64_t sub_249A248E4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return DynamicAppearanceValue<A>.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a3 - 8), a4);
}

uint64_t sub_249A24904(void *a1, uint64_t a2, uint64_t a3)
{
  return DynamicAppearanceValue<A>.encode(to:)(a1, a2, a3, *(void *)(a3 - 16));
}

uint64_t sub_249A24920()
{
  return static DynamicAppearanceValue<A>.== infix(_:_:)();
}

uint64_t DynamicAppearanceValue<A>.hash(into:)()
{
  return sub_249AECF28();
}

uint64_t DynamicAppearanceValue<A>.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t sub_249A249FC()
{
  return DynamicAppearanceValue<A>.hashValue.getter();
}

uint64_t sub_249A24A04()
{
  return DynamicAppearanceValue<A>.hash(into:)();
}

uint64_t sub_249A24A0C()
{
  return sub_249AEE388();
}

uint64_t sub_249A24A60()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A24AA8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_249A24B38(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = ~v8;
  uint64_t v10 = v7 + v8;
  unint64_t v11 = ((v7 + v8) & ~v8) + v7;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v14 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v14 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    long long v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v15(a1, a2, v5);
    v15((uint64_t *)(((unint64_t)v4 + v10) & v9), (uint64_t *)(((unint64_t)a2 + v10) & v9), v5);
  }
  return v4;
}

uint64_t sub_249A24C44(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8) + 8;
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))v6;
  (*(void (**)(uint64_t, uint64_t))v6)(a1, v3);
  unint64_t v4 = (*(void *)(v6 + 56) + a1 + *(unsigned __int8 *)(v6 + 72)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 72);

  return v7(v4, v3);
}

unint64_t sub_249A24CE0(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = v6 + 16;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 48) + *(unsigned __int8 *)(v8 + 64) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64), (*(void *)(v8 + 48) + *(unsigned __int8 *)(v8 + 64) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64), v5);
  return a1;
}

unint64_t sub_249A24D74(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  uint64_t v8 = v6 + 24;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 40) + *(unsigned __int8 *)(v8 + 56) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 56), (*(void *)(v8 + 40) + *(unsigned __int8 *)(v8 + 56) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 56), v5);
  return a1;
}

unint64_t sub_249A24E08(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  uint64_t v8 = v6 + 32;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 32) + *(unsigned __int8 *)(v8 + 48) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 48), (*(void *)(v8 + 32) + *(unsigned __int8 *)(v8 + 48) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 48), v5);
  return a1;
}

unint64_t sub_249A24E9C(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  uint64_t v8 = v6 + 40;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 24) + *(unsigned __int8 *)(v8 + 40) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 40), (*(void *)(v8 + 24) + *(unsigned __int8 *)(v8 + 40) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 40), v5);
  return a1;
}

uint64_t sub_249A24F30(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v8 = ((v6 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v6;
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_249A2509C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x249A252C4);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t sub_249A252EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 8);
}

unsigned char *sub_249A252F4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A253C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_249A253E8()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A25404()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A25420()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A2543C()
{
  return 2;
}

uint64_t NotificationModel.init(id:text:buttonType:symbol:style:dismissalHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v12 = *(unsigned char *)(a3 + 32);
  char v13 = *(unsigned char *)(a4 + 16);
  uint64_t v14 = *(void *)(a5 + 16);
  char v15 = *a6;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  long long v16 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a9 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(a9 + 32) = v16;
  *(unsigned char *)(a9 + 48) = v12;
  *(_OWORD *)(a9 + 56) = *(_OWORD *)a4;
  *(unsigned char *)(a9 + 72) = v13;
  *(_OWORD *)(a9 + 80) = *(_OWORD *)a5;
  *(void *)(a9 + 96) = v14;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a7;
  *(void *)(result + 24) = a8;
  *(void *)(a9 + 104) = sub_2499E0194;
  *(void *)(a9 + 112) = result;
  *(unsigned char *)(a9 + 73) = v15;
  return result;
}

uint64_t NotificationModel.Symbol.init(name:color:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_249A254E8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_249A25510()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_249A25548(uint64_t (*a1)(void))
{
  return a1();
}

BOOL NotificationModel.isFocusable.getter()
{
  return *(unsigned __int8 *)(v0 + 72) != 255;
}

uint64_t NotificationModel.Text.title.getter()
{
  if (*((unsigned __int8 *)v0 + 32) > 1u) {
    return 0;
  }
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NotificationModel.Text.body.getter()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  if (*(unsigned char *)(v0 + 32))
  {
    BOOL v2 = (uint64_t *)(v0 + 16);
    if (v1 != 1) {
      BOOL v2 = (uint64_t *)v0;
    }
    uint64_t v1 = *v2;
    swift_bridgeObjectRetain();
  }
  return v1;
}

double NotificationModel.Text.init(title:body:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if (a2)
  {
    *(void *)a5 = a1;
    *(void *)(a5 + 8) = a2;
    if (a4)
    {
      *(void *)(a5 + 16) = a3;
      *(void *)(a5 + 24) = a4;
      *(unsigned char *)(a5 + 32) = 1;
    }
    else
    {
      *(void *)(a5 + 16) = 0;
      *(void *)(a5 + 24) = 0;
      *(unsigned char *)(a5 + 32) = 0;
    }
  }
  else if (a4)
  {
    *(void *)a5 = a3;
    *(void *)(a5 + 8) = a4;
    *(void *)(a5 + 16) = 0;
    *(void *)(a5 + 24) = 0;
    *(unsigned char *)(a5 + 32) = 2;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    *(unsigned char *)(a5 + 32) = -1;
  }
  return result;
}

uint64_t NotificationModel.Text.description.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  sub_249AEDA78();
  swift_bridgeObjectRelease();
  strcpy((char *)v3, "Text(title: ");
  BYTE5(v3[1]) = 0;
  HIWORD(v3[1]) = -5120;
  if (v1)
  {
    if (v1 == 1) {
      swift_bridgeObjectRetain();
    }
    sub_249AED1E8();
    swift_bridgeObjectRelease();
    sub_249AED1E8();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_249AED1E8();
    swift_bridgeObjectRelease();
    sub_249AED1E8();
  }
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  sub_249AED1E8();
  return v3[0];
}

uint64_t NotificationModel.ButtonType.description.getter()
{
  uint64_t v1 = 0x736E6F69746361;
  if (*(unsigned char *)(v0 + 16) != 1) {
    uint64_t v1 = 0x6E6F7276656863;
  }
  if (*(unsigned char *)(v0 + 16)) {
    return v1;
  }
  else {
    return 0x74754265736F6C63;
  }
}

uint64_t static NotificationModel.ButtonType.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1) {
        char v8 = sub_249888F7C(*(void *)a1, *(void *)a2);
      }
      else {
        char v8 = 0;
      }
    }
    else
    {
      char v8 = v7 == 2;
    }
  }
  else
  {
    char v8 = v7 == 0;
  }
  sub_2499AD02C(v5, v6, v7);
  sub_2499AD02C(v2, v3, v4);
  sub_249934DE4(v2, v3, v4);
  sub_249934DE4(v5, v6, v7);
  return v8 & 1;
}

uint64_t sub_249A25948()
{
  uint64_t v1 = 0x736E6F69746361;
  if (*(unsigned char *)(v0 + 16) != 1) {
    uint64_t v1 = 0x6E6F7276656863;
  }
  if (*(unsigned char *)(v0 + 16)) {
    return v1;
  }
  else {
    return 0x74754265736F6C63;
  }
}

uint64_t sub_249A259AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1) {
        char v8 = sub_249888F7C(*(void *)a1, *(void *)a2);
      }
      else {
        char v8 = 0;
      }
    }
    else
    {
      char v8 = v7 == 2;
    }
  }
  else
  {
    char v8 = v7 == 0;
  }
  sub_2499AD02C(v5, v6, v7);
  sub_2499AD02C(v2, v3, v4);
  sub_249934DE4(v2, v3, v4);
  sub_249934DE4(v5, v6, v7);
  return v8 & 1;
}

CarPlayAssetUI::NotificationModel::Style_optional __swiftcall NotificationModel.Style.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_249AEDCF8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t NotificationModel.Style.rawValue.getter()
{
  if (*v0) {
    return 0x676E696B636F6C62;
  }
  else {
    return 0x746C7561666564;
  }
}

uint64_t sub_249A25B18()
{
  return sub_249AEE388();
}

uint64_t sub_249A25B9C()
{
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249A25C0C()
{
  return sub_249AEE388();
}

CarPlayAssetUI::NotificationModel::Style_optional sub_249A25C8C(Swift::String *a1)
{
  return NotificationModel.Style.init(rawValue:)(*a1);
}

void sub_249A25C98(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x746C7561666564;
  if (*v1) {
    uint64_t v2 = 0x676E696B636F6C62;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_249A25CD8(char *a1, char *a2)
{
  return sub_2498F1AD8(*a1, *a2);
}

uint64_t NotificationModel.Symbol.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NotificationModel.Symbol.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*NotificationModel.Symbol.name.modify())()
{
  return nullsub_1;
}

uint64_t NotificationModel.Symbol.color.getter()
{
  return swift_retain();
}

uint64_t NotificationModel.Symbol.color.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*NotificationModel.Symbol.color.modify())()
{
  return nullsub_1;
}

uint64_t NotificationModel.Symbol.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_249AEDA78();
  swift_bridgeObjectRelease();
  strcpy((char *)v3, "Symbol(name: ");
  HIWORD(v3[1]) = -4864;
  swift_bridgeObjectRetain();
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  sub_249AED1E8();
  if (v1) {
    sub_249AEC828();
  }
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  sub_249AED1E8();
  return v3[0];
}

uint64_t NotificationModel.Action.id.getter()
{
  return *v0;
}

uint64_t NotificationModel.Action.id.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*NotificationModel.Action.id.modify())()
{
  return nullsub_1;
}

uint64_t NotificationModel.Action.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NotificationModel.Action.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*NotificationModel.Action.title.modify())()
{
  return nullsub_1;
}

uint64_t (*NotificationModel.Action.handler.getter())(char a1)
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  if (v1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    int v4 = sub_249A2821C;
  }
  else
  {
    int v4 = 0;
  }
  sub_2498B9AA8(v1);
  return v4;
}

uint64_t sub_249A25FFC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  if (!v3) {
    sub_2498B9AA8(0);
  }
  *a2 = v3;
  a2[1] = v4;

  return sub_2498B9AA8(v3);
}

uint64_t NotificationModel.Action.handler.setter(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = a2;
    uint64_t v6 = sub_249A28254;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t result = sub_2498B9AB8(*(void *)(v2 + 24));
  *(void *)(v2 + 24) = v6;
  *(void *)(v2 + 32) = v5;
  return result;
}

uint64_t (*NotificationModel.Action.handler.modify(uint64_t (**a1)(char)))(uint64_t a1, char a2)
{
  a1[2] = (uint64_t (*)(char))v1;
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  if (v4)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v4;
    *(void *)(v5 + 24) = v3;
    uint64_t v6 = sub_249A29810;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a1 = v6;
  a1[1] = (uint64_t (*)(char))v5;
  sub_2498B9AA8(v4);
  return sub_249A26160;
}

uint64_t sub_249A26160(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(unsigned __int8 *))a1;
  if (a2)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (v3)
    {
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = v3;
      *(void *)(v5 + 24) = v4;
      uint64_t v6 = sub_249A297E0;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v5 = 0;
    }
    uint64_t v9 = *(void *)(a1 + 16);
    uint64_t v10 = *(void *)(v9 + 24);
    sub_2498B9AA8((uint64_t)v3);
    sub_2498B9AB8(v10);
    *(void *)(v9 + 24) = v6;
    *(void *)(v9 + 32) = v5;
    return sub_2498B9AB8((uint64_t)v3);
  }
  else
  {
    if (v3)
    {
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v3;
      *(void *)(v8 + 24) = v7;
      uint64_t v3 = sub_249A297E0;
    }
    else
    {
      uint64_t v8 = 0;
    }
    uint64_t v12 = *(void *)(a1 + 16);
    uint64_t result = sub_2498B9AB8(*(void *)(v12 + 24));
    *(void *)(v12 + 24) = v3;
    *(void *)(v12 + 32) = v8;
  }
  return result;
}

uint64_t NotificationModel.Action.init(id:title:handler:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(unsigned char *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  if (a4)
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a4;
    *(void *)(v9 + 24) = a5;
    uint64_t v10 = sub_249A297E0;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v9 = 0;
  }
  uint64_t result = sub_2498B9AB8(0);
  *(void *)(a6 + 24) = v10;
  *(void *)(a6 + 32) = v9;
  return result;
}

uint64_t static NotificationModel.Action.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  if (*((void *)a1 + 1) == *((void *)a2 + 1) && *((void *)a1 + 2) == *((void *)a2 + 2)) {
    return 1;
  }
  else {
    return sub_249AEE0D8();
  }
}

uint64_t static EquatableNoop.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_249A26360(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  if (*((void *)a1 + 1) == *((void *)a2 + 1) && *((void *)a1 + 2) == *((void *)a2 + 2)) {
    return 1;
  }
  else {
    return sub_249AEE0D8();
  }
}

void sub_249A263A8(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t NotificationModel.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NotificationModel.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*NotificationModel.id.modify())()
{
  return nullsub_1;
}

uint64_t NotificationModel.text.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v6 = *(unsigned char *)(v1 + 48);
  *(unsigned char *)(a1 + 32) = v6;
  return sub_2499ACFC4(v2, v3, v4, v5, v6);
}

__n128 NotificationModel.text.setter(__n128 *a1)
{
  __n128 v6 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  unsigned __int8 v4 = a1[2].n128_u8[0];
  sub_249934D7C(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48));
  __n128 result = v6;
  *(__n128 *)(v1 + 16) = v6;
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v3;
  *(unsigned char *)(v1 + 48) = v4;
  return result;
}

uint64_t (*NotificationModel.text.modify())()
{
  return nullsub_1;
}

uint64_t NotificationModel.buttonType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 64);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 72);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_249A28280(v2, v3, v4);
}

uint64_t NotificationModel.buttonType.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_2499AB618(*(void *)(v1 + 56), *(void *)(v1 + 64), *(unsigned char *)(v1 + 72));
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = v3;
  *(unsigned char *)(v1 + 72) = v4;
  return result;
}

uint64_t (*NotificationModel.buttonType.modify())()
{
  return nullsub_1;
}

void NotificationModel.style.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 73);
}

unsigned char *NotificationModel.style.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 73) = *result;
  return result;
}

uint64_t (*NotificationModel.style.modify())()
{
  return nullsub_1;
}

uint64_t NotificationModel.symbol.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[10];
  uint64_t v3 = v1[11];
  uint64_t v4 = v1[12];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return sub_249A28294(v2, v3);
}

__n128 NotificationModel.symbol.setter(__n128 *a1)
{
  __n128 v4 = *a1;
  uint64_t v2 = a1[1].n128_i64[0];
  sub_2499AB62C(v1[10], v1[11]);
  __n128 result = v4;
  *((__n128 *)v1 + 5) = v4;
  v1[12] = v2;
  return result;
}

uint64_t (*NotificationModel.symbol.modify())()
{
  return nullsub_1;
}

uint64_t (*NotificationModel.dismissalHandler.getter())()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_retain();
  return sub_249A282D8;
}

uint64_t NotificationModel.dismissalHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t result = swift_release();
  *(void *)(v2 + 104) = sub_2499E0F0C;
  *(void *)(v2 + 112) = v5;
  return result;
}

uint64_t (*NotificationModel.dismissalHandler.modify(uint64_t (**a1)()))(uint64_t *a1, char a2)
{
  a1[2] = (uint64_t (*)())v1;
  uint64_t v4 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a1 = sub_249A297DC;
  a1[1] = (uint64_t (*)())v5;
  swift_retain();
  return sub_249A2674C;
}

uint64_t sub_249A2674C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  if (a2)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v2;
    swift_retain();
    swift_release();
    *(void *)(v4 + 104) = sub_2499E0F0C;
    *(void *)(v4 + 112) = v5;
    return swift_release();
  }
  else
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v3;
    *(void *)(v7 + 24) = v2;
    uint64_t result = swift_release();
    *(void *)(v4 + 104) = sub_2499E0F0C;
    *(void *)(v4 + 112) = v7;
  }
  return result;
}

BOOL sub_249A26820()
{
  return *(unsigned __int8 *)(v0 + 72) != 255;
}

double NotificationModel.ValidationError.correct(on:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  if (!*(unsigned char *)(v2 + 16)) {
    goto LABEL_8;
  }
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v7 = *((unsigned __int8 *)a1 + 48);
  uint64_t v8 = a1[7];
  uint64_t v9 = a1[8];
  int v10 = *((unsigned __int8 *)a1 + 72);
  uint64_t v12 = a1[10];
  uint64_t v11 = a1[11];
  uint64_t v51 = a1[1];
  if (*(unsigned char *)(v2 + 16) == 1)
  {
    char v44 = (void *)a2;
    int v45 = *((unsigned __int8 *)a1 + 73);
    uint64_t v46 = a1[13];
    uint64_t v47 = *a1;
    uint64_t v50 = a1[14];
    uint64_t v52 = a1[10];
    uint64_t v13 = *((unsigned __int8 *)a1 + 48);
    uint64_t v14 = a1[11];
    uint64_t v15 = a1[7];
    unsigned int v16 = *((unsigned __int8 *)a1 + 72);
    swift_bridgeObjectRetain();
    sub_2499ACFC4(v3, v4, v5, v6, v13);
    uint64_t v54 = v9;
    uint64_t v55 = v15;
    unsigned int v49 = v16;
    sub_249A28280(v15, v9, v16);
    sub_249A28294(v52, v14);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2499ACFC4(v3, v4, v5, v6, v13);
    swift_retain();
    uint64_t v17 = v6;
    uint64_t v18 = v5;
    uint64_t v19 = v4;
    uint64_t v20 = v3;
    sub_2499AB62C(v52, v14);
    uint64_t v53 = 0;
    uint64_t v48 = 0;
    uint64_t v57 = 0;
    goto LABEL_4;
  }
  if (*(_OWORD *)v2 < 3uLL)
  {
LABEL_8:
    *(void *)(a2 + 112) = 0;
    double result = 0.0;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    return result;
  }
  uint64_t v46 = a1[13];
  uint64_t v47 = *a1;
  int v45 = *((unsigned __int8 *)a1 + 73);
  uint64_t v53 = a1[10];
  uint64_t v48 = a1[11];
  uint64_t v57 = a1[12];
  uint64_t v50 = a1[14];
  char v44 = (void *)a2;
  if (*(void *)v2 ^ 3 | *(void *)(v2 + 8))
  {
    uint64_t v42 = a1[5];
    uint64_t v43 = a1[4];
    if (v10 == 255)
    {
      uint64_t v30 = a1[8];
      uint64_t v31 = a1[3];
      uint64_t v32 = a1[11];
      uint64_t v33 = a1[7];
      swift_bridgeObjectRetain();
      sub_2499ACFC4(v3, v4, v5, v6, v7);
      unsigned int v49 = 255;
      uint64_t v54 = v30;
      uint64_t v55 = v33;
      sub_249A28280(v33, v30, 255);
      sub_249A28294(v12, v32);
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v20 = v3;
      uint64_t v34 = v3;
      uint64_t v19 = v31;
      uint64_t v35 = v31;
      uint64_t v37 = v6;
      uint64_t v36 = v43;
      uint64_t v18 = v43;
      uint64_t v17 = v42;
    }
    else
    {
      uint64_t v40 = *((unsigned __int8 *)a1 + 48);
      uint64_t v41 = a1[3];
      if (v10 == 1)
      {
        if (*(void *)(v8 + 16) >= 2uLL) {
          uint64_t v25 = 2;
        }
        else {
          uint64_t v25 = *(void *)(v8 + 16);
        }
        uint64_t v26 = a1[7];
        sub_249A28280(v8, v9, 1);
        swift_bridgeObjectRetain();
        sub_2499ACFC4(v3, v4, v5, v6, v40);
        sub_249A28280(v26, v9, 1);
        sub_249A28294(v12, v11);
        swift_retain();
        swift_bridgeObjectRetain();
        sub_2499ACFC4(v3, v4, v5, v6, v40);
        swift_retain();
        sub_249A28280(v26, v9, 1);
        sub_249AEE1B8();
        uint64_t v27 = swift_dynamicCastClass();
        if (!v27)
        {
          sub_2499AB618(v26, v9, 1);
          uint64_t v27 = MEMORY[0x263F8EE78];
        }
        uint64_t v28 = *(void *)(v27 + 16);
        swift_release();
        if (v28 == v25)
        {
          uint64_t v29 = swift_dynamicCastClass();
          if (!v29)
          {
            sub_2499AB618(v26, v9, 1);
            uint64_t v29 = MEMORY[0x263F8EE78];
          }
        }
        else
        {
          sub_2499AB618(v26, v9, 1);
          uint64_t v29 = sub_2498E938C(v26, v26 + 32, 0, (2 * v25) | 1);
        }
        unsigned int v49 = 1;
        sub_2499AB618(v26, v9, 1);
        uint64_t v54 = 0;
        uint64_t v55 = v29;
        uint64_t v19 = v4;
        uint64_t v20 = v3;
        uint64_t v17 = v6;
        uint64_t v18 = v43;
        uint64_t v13 = v40;
        goto LABEL_4;
      }
      uint64_t v38 = a1[7];
      unsigned int v39 = *((unsigned __int8 *)a1 + 72);
      swift_bridgeObjectRetain();
      uint64_t v19 = v4;
      uint64_t v20 = v3;
      uint64_t v17 = v6;
      uint64_t v18 = v43;
      sub_2499ACFC4(v3, v41, v43, v42, v7);
      uint64_t v54 = v9;
      uint64_t v55 = v38;
      unsigned int v49 = v39;
      sub_249A28280(v38, v9, v39);
      sub_249A28294(v53, v48);
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v34 = v3;
      uint64_t v35 = v41;
      uint64_t v36 = v43;
      uint64_t v37 = v42;
    }
    uint64_t v13 = v7;
    sub_2499ACFC4(v34, v35, v36, v37, v7);
    swift_retain();
  }
  else
  {
    uint64_t v13 = *((unsigned __int8 *)a1 + 48);
    uint64_t v23 = a1[7];
    uint64_t v56 = v23;
    char v24 = *((unsigned char *)a1 + 72);
    swift_bridgeObjectRetain();
    sub_2499ACFC4(v3, v4, v5, v6, v13);
    sub_249A28280(v23, v9, v24);
    sub_249A28294(v53, v11);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2499ACFC4(v3, v4, v5, v6, v13);
    swift_retain();
    uint64_t v17 = v6;
    uint64_t v18 = v5;
    uint64_t v19 = v4;
    uint64_t v20 = v3;
    sub_2499AB618(v56, v9, v24);
    uint64_t v54 = 0;
    uint64_t v55 = 0;
    unsigned int v49 = 255;
  }
LABEL_4:
  swift_bridgeObjectRetain();
  sub_2499ACFC4(v20, v19, v18, v17, v13);
  sub_249A28280(v55, v54, v49);
  sub_249A28294(v53, v48);
  sub_249934D7C(v20, v19, v18, v17, v13);
  swift_bridgeObjectRelease_n();
  sub_249934D7C(v20, v19, v18, v17, v13);
  sub_2499AB618(v55, v54, v49);
  sub_2499AB62C(v53, v48);
  swift_release();
  *char v44 = v47;
  v44[1] = v51;
  uint64_t v22 = 256;
  if (!v45) {
    uint64_t v22 = 0;
  }
  v44[2] = v20;
  v44[3] = v19;
  v44[4] = v18;
  v44[5] = v17;
  v44[6] = v13;
  v44[7] = v55;
  v44[8] = v54;
  v44[9] = v22 | v49;
  v44[10] = v53;
  v44[11] = v48;
  v44[12] = v57;
  v44[13] = v46;
  v44[14] = v50;
  return result;
}

unint64_t NotificationModel.ValidationError.description.getter()
{
  if (!*(unsigned char *)(v0 + 16))
  {
    sub_249AEDA78();
    swift_bridgeObjectRelease();
    unint64_t v2 = 0x206E6F69746341;
    sub_249AEDF48();
    sub_249AED1E8();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    sub_249AEDA78();
    swift_bridgeObjectRelease();
    unint64_t v2 = 0xD000000000000020;
LABEL_5:
    sub_249AED1E8();
    return v2;
  }
  unint64_t result = 0x6920646920656854;
  switch(*(void *)v0)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

void *NotificationModel.validate(automakerSymbolValidator:)(uint64_t (*a1)(unint64_t, uint64_t))
{
  unint64_t v2 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  unint64_t v5 = *(void *)(v1 + 32);
  unint64_t v6 = *(void *)(v1 + 40);
  unsigned int v7 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v53 = *(void *)(v1 + 64);
  int v8 = *(unsigned __int8 *)(v1 + 72);
  unint64_t v10 = *(void *)(v1 + 80);
  uint64_t v9 = *(void *)(v1 + 88);
  uint64_t v54 = *(void *)(v1 + 96);
  uint64_t v55 = *(void *)(v1 + 56);
  uint64_t v11 = *(void *)v1 & 0xFFFFFFFFFFFFLL;
  if ((v2 & 0x2000000000000000) != 0) {
    uint64_t v11 = HIBYTE(v2) & 0xF;
  }
  if (!v11)
  {
    int v51 = *(unsigned __int8 *)(v1 + 72);
    unint64_t v13 = *(void *)(v1 + 40);
    unint64_t v14 = *(void *)(v1 + 32);
    unint64_t v5 = *(void *)(v1 + 88);
    uint64_t v9 = *(void *)(v1 + 80);
    uint64_t v12 = sub_2498AC524(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v10 = v12[2];
    unint64_t v15 = v12[3];
    int64_t v1 = v10 + 1;
    if (v10 >= v15 >> 1) {
      goto LABEL_78;
    }
    goto LABEL_7;
  }
  uint64_t v12 = (void *)MEMORY[0x263F8EE78];
  if (v7 <= 1) {
    goto LABEL_8;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v18 = v4 & 0xFFFFFFFFFFFFLL;
  }
  unsigned int v7 = v54;
  if (!v18)
  {
    uint64_t v4 = v55;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_2498AC524(0, v12[2] + 1, 1, v12);
    }
    unint64_t v5 = v12[2];
    unint64_t v19 = v12[3];
    int64_t v1 = v5 + 1;
    if (v5 >= v19 >> 1) {
      uint64_t v12 = sub_2498AC524((void *)(v19 > 1), v5 + 1, 1, v12);
    }
    uint64_t v12[2] = v1;
    uint64_t v20 = &v12[3 * v5];
    *((_OWORD *)v20 + 2) = xmmword_249B068A0;
    *((unsigned char *)v20 + 48) = 2;
    if (v8 != 1) {
      goto LABEL_66;
    }
    while (1)
    {
LABEL_30:
      unint64_t v13 = *(void *)(v4 + 16);
      if (v13)
      {
        sub_2499AD02C(v4, v53, 1);
        if (v13 < 3) {
          goto LABEL_43;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v12 = sub_2498AC524(0, v12[2] + 1, 1, v12);
        }
        unint64_t v5 = v12[2];
        unint64_t v24 = v12[3];
        int64_t v1 = v5 + 1;
        if (v5 >= v24 >> 1) {
          uint64_t v12 = sub_2498AC524((void *)(v24 > 1), v5 + 1, 1, v12);
        }
        uint64_t v12[2] = v1;
        uint64_t v25 = &v12[3 * v5];
        uint64_t v26 = 4;
      }
      else
      {
        sub_2499AD02C(v4, v53, 1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v12 = sub_2498AC524(0, v12[2] + 1, 1, v12);
        }
        unint64_t v5 = v12[2];
        unint64_t v27 = v12[3];
        int64_t v1 = v5 + 1;
        if (v5 >= v27 >> 1) {
          uint64_t v12 = sub_2498AC524((void *)(v27 > 1), v5 + 1, 1, v12);
        }
        uint64_t v12[2] = v1;
        uint64_t v25 = &v12[3 * v5];
        uint64_t v26 = 3;
      }
      v25[4] = v26;
      v25[5] = 0;
      *((unsigned char *)v25 + 48) = 2;
LABEL_43:
      if (v13 >= 2) {
        unint64_t v14 = 2;
      }
      else {
        unint64_t v14 = v13;
      }
      unint64_t v15 = *(void *)(v4 + 16);
      if (v15 >= v14)
      {
        if (v14)
        {
          unint64_t v28 = *(void *)(v4 + 48);
          uint64_t v29 = *(void *)(v4 + 40) & 0xFFFFFFFFFFFFLL;
          if ((v28 & 0x2000000000000000) != 0) {
            uint64_t v29 = HIBYTE(v28) & 0xF;
          }
          if (!v29)
          {
            uint64_t v30 = *(unsigned __int8 *)(v4 + 32);
            uint64_t v31 = *(void *)(v4 + 56);
            swift_bridgeObjectRetain();
            sub_2498B9AA8(v31);
            unint64_t v32 = v10;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v12 = sub_2498AC524(0, v12[2] + 1, 1, v12);
            }
            unint64_t v34 = v12[2];
            unint64_t v33 = v12[3];
            if (v34 >= v33 >> 1) {
              uint64_t v12 = sub_2498AC524((void *)(v33 > 1), v34 + 1, 1, v12);
            }
            uint64_t v12[2] = v34 + 1;
            uint64_t v35 = &v12[3 * v34];
            v35[4] = v30;
            v35[5] = 0;
            *((unsigned char *)v35 + 48) = 0;
            swift_bridgeObjectRelease();
            sub_2498B9AB8(v31);
            unint64_t v10 = v32;
            uint64_t v4 = v55;
          }
          if (v14 != 1)
          {
            unint64_t v36 = *(void *)(v4 + 88);
            uint64_t v37 = *(void *)(v4 + 80) & 0xFFFFFFFFFFFFLL;
            if ((v36 & 0x2000000000000000) != 0) {
              uint64_t v37 = HIBYTE(v36) & 0xF;
            }
            if (!v37)
            {
              uint64_t v38 = *(unsigned __int8 *)(v4 + 72);
              uint64_t v39 = *(void *)(v4 + 96);
              swift_bridgeObjectRetain();
              sub_2498B9AA8(v39);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v12 = sub_2498AC524(0, v12[2] + 1, 1, v12);
              }
              unint64_t v41 = v12[2];
              unint64_t v40 = v12[3];
              if (v41 >= v40 >> 1) {
                uint64_t v12 = sub_2498AC524((void *)(v40 > 1), v41 + 1, 1, v12);
              }
              uint64_t v12[2] = v41 + 1;
              uint64_t v42 = &v12[3 * v41];
              v42[4] = v38;
              v42[5] = 0;
              *((unsigned char *)v42 + 48) = 0;
              swift_bridgeObjectRelease();
              sub_2498B9AB8(v39);
              uint64_t v4 = v55;
            }
          }
        }
        sub_2499AB618(v4, v53, 1);
        goto LABEL_66;
      }
      __break(1u);
LABEL_78:
      uint64_t v12 = sub_2498AC524((void *)(v15 > 1), v1, 1, v12);
LABEL_7:
      uint64_t v12[2] = v1;
      unsigned int v16 = &v12[3 * v10];
      v16[4] = 0;
      v16[5] = 0;
      *((unsigned char *)v16 + 48) = 2;
      unint64_t v10 = v9;
      uint64_t v9 = v5;
      unint64_t v5 = v14;
      unint64_t v6 = v13;
      int v8 = v51;
      if (v7 > 1) {
        goto LABEL_13;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v17 = HIBYTE(v3) & 0xF;
      if ((v3 & 0x2000000000000000) == 0) {
        uint64_t v17 = v4 & 0xFFFFFFFFFFFFLL;
      }
      if (v17)
      {
        if (v7) {
          goto LABEL_12;
        }
      }
      else
      {
        unint64_t v3 = v10;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v12 = sub_2498AC524(0, v12[2] + 1, 1, v12);
        }
        unint64_t v22 = v12[2];
        unint64_t v21 = v12[3];
        int64_t v1 = v22 + 1;
        if (v22 >= v21 >> 1) {
          uint64_t v12 = sub_2498AC524((void *)(v21 > 1), v22 + 1, 1, v12);
        }
        uint64_t v12[2] = v1;
        uint64_t v23 = &v12[3 * v22];
        *((_OWORD *)v23 + 2) = xmmword_249B000C0;
        *((unsigned char *)v23 + 48) = 2;
        unint64_t v10 = v3;
        if (v7)
        {
LABEL_12:
          unint64_t v3 = v6;
          uint64_t v4 = v5;
          goto LABEL_13;
        }
      }
      unsigned int v7 = v54;
      uint64_t v4 = v55;
      if (v8 != 1) {
        goto LABEL_66;
      }
    }
  }
  uint64_t v4 = v55;
  if (v8 == 1) {
    goto LABEL_30;
  }
LABEL_66:
  if (v9)
  {
    uint64_t v43 = self;
    swift_bridgeObjectRetain();
    sub_249A28294(v10, v9);
    char v44 = (void *)sub_249AED0A8();
    swift_bridgeObjectRelease();
    id v45 = objc_msgSend(v43, sel__systemImageNamed_, v44);

    if (!v45)
    {
      if (!a1 || (swift_retain(), char v46 = a1(v10, v9), sub_2498B9AB8((uint64_t)a1), (v46 & 1) == 0))
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v12 = sub_2498AC524(0, v12[2] + 1, 1, v12);
        }
        unint64_t v48 = v12[2];
        unint64_t v47 = v12[3];
        if (v48 >= v47 >> 1) {
          uint64_t v12 = sub_2498AC524((void *)(v47 > 1), v48 + 1, 1, v12);
        }
        uint64_t v12[2] = v48 + 1;
        unsigned int v49 = &v12[3 * v48];
        v49[4] = v10;
        v49[5] = v9;
        *((unsigned char *)v49 + 48) = 1;
      }
    }
    sub_2499AB62C(v10, v9);
  }
  return v12;
}

Swift::Double_optional __swiftcall NotificationModel.doubleValue()()
{
  Swift::Bool v0 = 0;
  result.is_nil = v0;
  return result;
}

uint64_t NotificationModel.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  sub_249AEDA78();
  sub_249AED1E8();
  swift_bridgeObjectRetain();
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  sub_249AED1E8();
  NotificationModel.Text.description.getter();
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  sub_249AED1E8();
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  sub_249AED1E8();
  if (v1) {
    NotificationModel.Symbol.description.getter();
  }
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  sub_249AED1E8();
  return 0;
}

uint64_t EquatableNoop.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t EquatableNoop.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*EquatableNoop.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t EquatableNoop.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t _s14CarPlayAssetUI17NotificationModelV4TextO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  int v6 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v7 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  int v11 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned char *)(a1 + 32))
  {
    if (v6 == 1)
    {
      if (v11 == 1)
      {
        BOOL v12 = v2 == v7 && v3 == v8;
        if (v12
          || (uint64_t v13 = *(void *)a2,
              uint64_t v14 = *(void *)a1,
              uint64_t v15 = *(void *)(a1 + 8),
              char v16 = sub_249AEE0D8(),
              uint64_t v7 = v13,
              uint64_t v3 = v15,
              uint64_t v2 = v14,
              (v16 & 1) != 0))
        {
          if (v4 == v9 && v5 == v10)
          {
            uint64_t v15 = v3;
            uint64_t v14 = v2;
            uint64_t v17 = v4;
            uint64_t v18 = v5;
            LOBYTE(v11) = 1;
            LOBYTE(v6) = 1;
LABEL_29:
            char v32 = 1;
            goto LABEL_32;
          }
          uint64_t v15 = v3;
          uint64_t v14 = v2;
          uint64_t v17 = v4;
          uint64_t v18 = v5;
          uint64_t v25 = v9;
          uint64_t v26 = v7;
          char v27 = sub_249AEE0D8();
          uint64_t v7 = v26;
          uint64_t v9 = v25;
          char v32 = v27;
        }
        else
        {
          uint64_t v17 = v4;
          uint64_t v18 = v5;
          char v32 = 0;
        }
        LOBYTE(v11) = 1;
        LOBYTE(v6) = 1;
        goto LABEL_32;
      }
      goto LABEL_24;
    }
    if (v11 == 2)
    {
      if (v2 == v7 && v3 == v8)
      {
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v14 = *(void *)a1;
        uint64_t v17 = *(void *)(a1 + 16);
        uint64_t v18 = *(void *)(a1 + 24);
        char v32 = 1;
      }
      else
      {
        uint64_t v17 = *(void *)(a1 + 16);
        uint64_t v18 = *(void *)(a1 + 24);
        uint64_t v14 = *(void *)a1;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v23 = *(void *)a2;
        char v24 = sub_249AEE0D8();
        uint64_t v7 = v23;
        char v32 = v24;
      }
      LOBYTE(v11) = 2;
      LOBYTE(v6) = 2;
      goto LABEL_32;
    }
LABEL_24:
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v14 = *(void *)a1;
    uint64_t v17 = *(void *)(a1 + 16);
    uint64_t v18 = *(void *)(a1 + 24);
    char v32 = 0;
    goto LABEL_32;
  }
  if (*(unsigned char *)(a2 + 32)) {
    goto LABEL_24;
  }
  if (v2 == v7 && v3 == v8)
  {
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v14 = *(void *)a1;
    uint64_t v17 = *(void *)(a1 + 16);
    uint64_t v18 = *(void *)(a1 + 24);
    LOBYTE(v11) = 0;
    LOBYTE(v6) = 0;
    goto LABEL_29;
  }
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v18 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)a1;
  uint64_t v15 = *(void *)(a1 + 8);
  uint64_t v20 = *(void *)a2;
  char v21 = sub_249AEE0D8();
  uint64_t v7 = v20;
  char v32 = v21;
  LOBYTE(v11) = 0;
  LOBYTE(v6) = 0;
LABEL_32:
  uint64_t v28 = v8;
  uint64_t v29 = v8;
  uint64_t v30 = v7;
  sub_2499ACFC4(v7, v28, v9, v10, v11);
  sub_2499ACFC4(v14, v15, v17, v18, v6);
  sub_249934D7C(v14, v15, v17, v18, v6);
  sub_249934D7C(v30, v29, v9, v10, v11);
  return v32 & 1;
}

uint64_t _s14CarPlayAssetUI17NotificationModelV6SymbolV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_249AEE0D8(), result = 0, (v5 & 1) != 0))
  {
    if (v2)
    {
      if (v3)
      {
        swift_retain();
        swift_retain();
        char v7 = sub_249AEC848();
        swift_release();
        swift_release();
        if (v7) {
          return 1;
        }
      }
    }
    else if (!v3)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t _s14CarPlayAssetUI17NotificationModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  long long v3 = *(_OWORD *)(a1 + 32);
  char v4 = *(unsigned char *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  int v7 = *(unsigned __int8 *)(a1 + 72);
  int v8 = *(unsigned __int8 *)(a1 + 73);
  uint64_t v38 = *(void *)(a1 + 80);
  uint64_t v39 = *(void *)(a1 + 88);
  uint64_t v40 = *(void *)(a1 + 96);
  long long v9 = *(_OWORD *)(a2 + 16);
  long long v10 = *(_OWORD *)(a2 + 32);
  char v11 = *(unsigned char *)(a2 + 48);
  uint64_t v13 = *(void *)(a2 + 56);
  uint64_t v12 = *(void *)(a2 + 64);
  int v14 = *(unsigned __int8 *)(a2 + 72);
  int v15 = *(unsigned __int8 *)(a2 + 73);
  uint64_t v36 = *(void *)(a2 + 80);
  uint64_t v37 = *(void *)(a2 + 88);
  uint64_t v35 = *(void *)(a2 + 96);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    goto LABEL_4;
  }
  long long v33 = *(_OWORD *)(a1 + 32);
  long long v34 = *(_OWORD *)(a1 + 16);
  long long v31 = *(_OWORD *)(a2 + 32);
  long long v32 = *(_OWORD *)(a2 + 16);
  char v16 = sub_249AEE0D8();
  long long v10 = v31;
  long long v9 = v32;
  long long v3 = v33;
  long long v2 = v34;
  char v17 = v16;
  uint64_t result = 0;
  if (v17)
  {
LABEL_4:
    v43[0] = v2;
    v43[1] = v3;
    char v44 = v4;
    v41[0] = v9;
    v41[1] = v10;
    char v42 = v11;
    if (_s14CarPlayAssetUI17NotificationModelV4TextO2eeoiySbAE_AEtFZ_0((uint64_t)v43, (uint64_t)v41))
    {
      if (v7 == 255)
      {
        if (v14 == 255) {
          goto LABEL_18;
        }
      }
      else if (v14 != 255)
      {
        if (v7)
        {
          if (v7 == 1)
          {
            if (v14 == 1)
            {
              char v19 = sub_249888F7C(v6, v13);
              sub_249A28280(v6, v5, 1);
              sub_249A28280(v13, v12, 1);
              sub_249934DE4(v6, v5, 1);
              sub_249934DE4(v13, v12, 1);
              if ((v19 & 1) == 0) {
                return 0;
              }
LABEL_18:
              if (v8) {
                uint64_t v20 = 0x676E696B636F6C62;
              }
              else {
                uint64_t v20 = 0x746C7561666564;
              }
              if (v8) {
                unint64_t v21 = 0xE800000000000000;
              }
              else {
                unint64_t v21 = 0xE700000000000000;
              }
              if (v15) {
                uint64_t v22 = 0x676E696B636F6C62;
              }
              else {
                uint64_t v22 = 0x746C7561666564;
              }
              if (v15) {
                unint64_t v23 = 0xE800000000000000;
              }
              else {
                unint64_t v23 = 0xE700000000000000;
              }
              if (v20 == v22 && v21 == v23)
              {
                swift_bridgeObjectRelease_n();
              }
              else
              {
                char v24 = sub_249AEE0D8();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t result = 0;
                if ((v24 & 1) == 0) {
                  return result;
                }
              }
              if (v39)
              {
                uint64_t v26 = v37;
                uint64_t v25 = v38;
                uint64_t v27 = v36;
                if (v37)
                {
                  if ((v38 != v36 || v39 != v37) && (sub_249AEE0D8() & 1) == 0) {
                    goto LABEL_47;
                  }
                  if (!v40)
                  {
                    swift_bridgeObjectRetain_n();
                    if (!v35)
                    {
LABEL_53:
                      swift_release();
                      swift_bridgeObjectRelease();
                      sub_2499AB62C(v38, v39);
                      return 1;
                    }
                    goto LABEL_49;
                  }
                  if (v35)
                  {
                    sub_249A28294(v38, v39);
                    sub_249A28294(v38, v39);
                    sub_249A28294(v36, v37);
                    swift_retain();
                    swift_retain();
                    char v28 = sub_249AEC848();
                    swift_release();
                    swift_release();
                    sub_2499AB62C(v36, v37);
                    if (v28) {
                      goto LABEL_53;
                    }
                  }
                  else
                  {
LABEL_47:
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
LABEL_49:
                  swift_release();
                  swift_bridgeObjectRelease();
                  uint64_t v29 = v38;
                  uint64_t v30 = v39;
                  goto LABEL_50;
                }
                swift_bridgeObjectRetain();
                swift_retain();
              }
              else
              {
                uint64_t v26 = v37;
                uint64_t v25 = v38;
                uint64_t v27 = v36;
                if (!v37) {
                  return 1;
                }
              }
              sub_249A28294(v27, v26);
              sub_2499AB62C(v25, v39);
              uint64_t v29 = v27;
              uint64_t v30 = v26;
LABEL_50:
              sub_2499AB62C(v29, v30);
              return 0;
            }
            goto LABEL_15;
          }
          if (v14 == 2)
          {
LABEL_17:
            sub_249A28280(v6, v5, v7);
            sub_249A28280(v13, v12, v7);
            sub_249934DE4(v6, v5, v7);
            sub_249934DE4(v13, v12, v7);
            goto LABEL_18;
          }
        }
        else if (!v14)
        {
          goto LABEL_17;
        }
LABEL_15:
        sub_249A28280(v6, v5, v7);
        sub_249A28280(v13, v12, v14);
        sub_249934DE4(v6, v5, v7);
        sub_249934DE4(v13, v12, v14);
        return 0;
      }
      sub_249A28280(v6, v5, v7);
      sub_249A28280(v13, v12, v14);
      sub_2499AB618(v6, v5, v7);
      sub_2499AB618(v13, v12, v14);
    }
    return 0;
  }
  return result;
}

uint64_t sub_249A2821C(char a1)
{
  long long v2 = *(uint64_t (**)(char *))(v1 + 16);
  char v4 = a1;
  return v2(&v4);
}

uint64_t sub_249A28254(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_249A28280(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_2499AD02C(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_249A28294(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_249A282D8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_249A28304()
{
  unint64_t result = qword_2696E3B88[0];
  if (!qword_2696E3B88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2696E3B88);
  }
  return result;
}

uint64_t sub_249A28358()
{
  return MEMORY[0x263F8E788];
}

uint64_t sub_249A28368(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = *(void *)(a2 + 24);
  sub_2498B9AA8(*a1);
  uint64_t result = sub_2498B9AB8(v5);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  return result;
}

uint64_t sub_249A283BC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v3 = *(void *)(a1 + 112);
  *a2 = v2;
  a2[1] = v3;
  return swift_retain();
}

uint64_t sub_249A283C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 104) = v4;
  *(void *)(a2 + 112) = v3;
  return result;
}

uint64_t destroy for NotificationModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_249934D7C(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
  int v2 = *(unsigned __int8 *)(a1 + 72);
  if (v2 != 255) {
    sub_249934DE4(*(void *)(a1 + 56), *(void *)(a1 + 64), v2);
  }
  if (*(void *)(a1 + 88))
  {
    swift_bridgeObjectRelease();
    swift_release();
  }

  return swift_release();
}

uint64_t initializeWithCopy for NotificationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  sub_2499ACFC4(v5, v6, v7, v8, v9);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  int v10 = *(unsigned __int8 *)(a2 + 72);
  if (v10 == 255)
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  }
  else
  {
    uint64_t v11 = *(void *)(a2 + 56);
    uint64_t v12 = *(void *)(a2 + 64);
    sub_2499AD02C(v11, v12, *(unsigned char *)(a2 + 72));
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v12;
    *(unsigned char *)(a1 + 72) = v10;
  }
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  uint64_t v13 = *(void *)(a2 + 88);
  if (v13)
  {
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v13;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
  }
  uint64_t v14 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v14;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for NotificationModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  char v8 = *(unsigned char *)(a2 + 48);
  sub_2499ACFC4(v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  char v13 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v8;
  sub_249934D7C(v9, v10, v11, v12, v13);
  uint64_t v14 = (long long *)(a1 + 56);
  int v15 = (long long *)(a2 + 56);
  int v16 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 72) == 255)
  {
    if (v16 == 255)
    {
      long long v25 = *v15;
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *uint64_t v14 = v25;
    }
    else
    {
      uint64_t v22 = *(void *)(a2 + 56);
      uint64_t v23 = *(void *)(a2 + 64);
      sub_2499AD02C(v22, v23, *(unsigned char *)(a2 + 72));
      *(void *)(a1 + 56) = v22;
      *(void *)(a1 + 64) = v23;
      *(unsigned char *)(a1 + 72) = v16;
    }
  }
  else if (v16 == 255)
  {
    sub_249A2879C(a1 + 56);
    char v24 = *(unsigned char *)(a2 + 72);
    *uint64_t v14 = *v15;
    *(unsigned char *)(a1 + 72) = v24;
  }
  else
  {
    uint64_t v17 = *(void *)(a2 + 56);
    uint64_t v18 = *(void *)(a2 + 64);
    sub_2499AD02C(v17, v18, *(unsigned char *)(a2 + 72));
    uint64_t v19 = *(void *)(a1 + 56);
    uint64_t v20 = *(void *)(a1 + 64);
    *(void *)(a1 + 56) = v17;
    *(void *)(a1 + 64) = v18;
    char v21 = *(unsigned char *)(a1 + 72);
    *(unsigned char *)(a1 + 72) = v16;
    sub_249934DE4(v19, v20, v21);
  }
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  uint64_t v26 = (_OWORD *)(a1 + 80);
  uint64_t v27 = (_OWORD *)(a2 + 80);
  uint64_t v28 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88))
  {
    if (v28)
    {
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249A287D0(a1 + 80);
      uint64_t v29 = *(void *)(a2 + 96);
      *uint64_t v26 = *v27;
      *(void *)(a1 + 96) = v29;
    }
  }
  else if (v28)
  {
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    long long v30 = *v27;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *uint64_t v26 = v30;
  }
  uint64_t v31 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v31;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_249A2879C(uint64_t a1)
{
  return a1;
}

uint64_t sub_249A287D0(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for NotificationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v10;
  char v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v5;
  sub_249934D7C(v6, v7, v8, v9, v11);
  uint64_t v12 = (_OWORD *)(a2 + 56);
  int v13 = *(unsigned __int8 *)(a1 + 72);
  if (v13 != 255)
  {
    int v14 = *(unsigned __int8 *)(a2 + 72);
    if (v14 != 255)
    {
      uint64_t v15 = *(void *)(a1 + 56);
      uint64_t v16 = *(void *)(a1 + 64);
      *(_OWORD *)(a1 + 56) = *v12;
      *(unsigned char *)(a1 + 72) = v14;
      sub_249934DE4(v15, v16, v13);
      goto LABEL_6;
    }
    sub_249A2879C(a1 + 56);
  }
  *(_OWORD *)(a1 + 56) = *v12;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
LABEL_6:
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  if (!*(void *)(a1 + 88))
  {
LABEL_10:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    goto LABEL_11;
  }
  uint64_t v17 = *(void *)(a2 + 88);
  if (!v17)
  {
    sub_249A287D0(a1 + 80);
    goto LABEL_10;
  }
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v17;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
LABEL_11:
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for NotificationModel()
{
  return &type metadata for NotificationModel;
}

uint64_t destroy for NotificationModel.Text(uint64_t a1)
{
  return sub_249934D7C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for NotificationModel.Text(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_2499ACFC4(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for NotificationModel.Text(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_2499ACFC4(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_249934D7C(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for NotificationModel.Text(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_249934D7C(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationModel.Text(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationModel.Text(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_249A28AF4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_249A28AFC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for NotificationModel.Text()
{
  return &type metadata for NotificationModel.Text;
}

uint64_t initializeBufferWithCopyOfBuffer for NotificationModel.ButtonType(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_249A29044(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_2499AD02C);
}

uint64_t destroy for NotificationModel.ButtonType(uint64_t a1)
{
  return sub_249934DE4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t *assignWithCopy for NotificationModel.ButtonType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_249A290C0(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_2499AD02C, (void (*)(uint64_t, uint64_t, uint64_t))sub_249934DE4);
}

uint64_t *assignWithTake for NotificationModel.ButtonType(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_249A29144(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_249934DE4);
}

ValueMetadata *type metadata accessor for NotificationModel.ButtonType()
{
  return &type metadata for NotificationModel.ButtonType;
}

unsigned char *storeEnumTagSinglePayload for NotificationModel.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A28C64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationModel.Style()
{
  return &type metadata for NotificationModel.Style;
}

uint64_t destroy for NotificationModel.Symbol()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

void *_s14CarPlayAssetUI17NotificationModelV6SymbolVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for NotificationModel.Symbol(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for NotificationModel.Symbol(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for NotificationModel.Symbol()
{
  return &type metadata for NotificationModel.Symbol;
}

uint64_t destroy for NotificationModel.Action(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for NotificationModel.Action(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  unsigned int v6 = (_OWORD *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v6;
  }
  return a1;
}

uint64_t assignWithCopy for NotificationModel.Action(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for NotificationModel.Action(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  if (!*(void *)(a1 + 24))
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for NotificationModel.Action()
{
  return &type metadata for NotificationModel.Action;
}

uint64_t initializeBufferWithCopyOfBuffer for NotificationModel.ValidationError(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_249A29044(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_249A29004);
}

uint64_t sub_249A29004(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for NotificationModel.ValidationError(uint64_t a1)
{
  return sub_249A2902C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_249A2902C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249A29044(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for NotificationModel.ValidationError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_249A290C0(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_249A29004, (void (*)(uint64_t, uint64_t, uint64_t))sub_249A2902C);
}

uint64_t *sub_249A290C0(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  uint64_t v12 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for NotificationModel.ValidationError(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_249A29144(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_249A2902C);
}

uint64_t *sub_249A29144(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v8 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

ValueMetadata *type metadata accessor for NotificationModel.ValidationError()
{
  return &type metadata for NotificationModel.ValidationError;
}

uint64_t sub_249A291A0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_249A29230(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_249A292E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_249A29338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_249A29388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_249A293D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_249A29428(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_249A29584(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x249A2979CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for EquatableNoop()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t EnvironmentValues.dataSourceManager.getter()
{
  sub_2499AAFA0();
  sub_249AEBFF8();
  if (v3[8])
  {
    uint64_t Strong = 0;
    unint64_t v1 = &qword_2696E1D18;
  }
  else
  {
    uint64_t Strong = swift_weakLoadStrong();
    unint64_t v1 = &qword_2696E1D10;
  }
  sub_2498D60E8((uint64_t)v3, v1);
  return Strong;
}

uint64_t EnvironmentValues.dataSourceManager.setter(uint64_t a1)
{
  if (a1)
  {
    swift_weakInit();
    swift_weakAssign();
    sub_249A29914((uint64_t)v3, (uint64_t)&v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
  BOOL v5 = a1 == 0;
  sub_2499AAFA0();
  sub_249AEC008();
  return swift_release();
}

uint64_t sub_249A29914(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1D10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t DataSourceManager.__allocating_init(_:preLoadAll:)(uint64_t (*a1)(char *, void, void), uint64_t a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  DataSourceManager.init(_:preLoadAll:)(a1, a2, a3);
  return v6;
}

uint64_t sub_249A299D4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  char v7 = *a1;
  unint64_t v24 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v25 = v8;
  swift_bridgeObjectRetain();
  sub_249AED1E8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v9 = *(void *)(v3 + 16);
  if (*(void *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2498EF01C(v24, v25);
    if (v11)
    {
      uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  int v13 = *(uint64_t (**)(unint64_t *, uint64_t, uint64_t))(v4 + 32);
  LOBYTE(v22) = v7;
  uint64_t v12 = v13(&v22, a2, a3);
  LOBYTE(v22) = v7;
  unint64_t v22 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v23 = v14;
  swift_bridgeObjectRetain();
  sub_249AED1E8();
  uint64_t v15 = v22;
  uint64_t v16 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *(void *)(v4 + 16);
  *(void *)(v4 + 16) = 0x8000000000000000;
  sub_249884544(v12, v15, v16, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + 16) = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (*(unsigned char *)(v4 + 24) == 1
    && (*(unsigned char *)(v12 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) & 1) == 0)
  {
    *(unsigned char *)(v12 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 1;
    uint64_t v18 = *(void (**)(uint64_t))(v12 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
    uint64_t v19 = swift_retain();
    v18(v19);
    swift_release();
  }
  return v12;
}

uint64_t DataSourceManager.init(_:preLoadAll:)(uint64_t (*a1)(char *, void, void), uint64_t a2, char a3)
{
  *(void *)(v3 + 16) = MEMORY[0x263F8EE80];
  uint64_t v4 = (void *)(v3 + 16);
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)(v3 + 32) = a1;
  *(void *)(v3 + 40) = a2;
  if ((a3 & 1) == 0) {
    return v3;
  }
  uint64_t v5 = qword_26FDA14B0;
  if (!qword_26FDA14B0) {
    return v3;
  }
  swift_retain();
  uint64_t v6 = &byte_26FDA14C0;
  while (1)
  {
    char v8 = *v6++;
    v32[0] = v8;
    unint64_t v9 = InstrumentDataIdentifier.rawValue.getter();
    uint64_t v11 = v10;
    v32[0] = v8;
    uint64_t v12 = a1(v32, 0, 0);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = (void *)*v4;
    uint64_t v31 = (void *)*v4;
    *uint64_t v4 = 0x8000000000000000;
    unint64_t v16 = sub_2498EF01C(v9, v11);
    uint64_t v17 = v14[2];
    BOOL v18 = (v15 & 1) == 0;
    uint64_t v19 = v17 + v18;
    if (__OFADD__(v17, v18)) {
      break;
    }
    char v20 = v15;
    if (v14[3] >= v19)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v23 = v31;
        if (v15) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_2498E1E14();
        uint64_t v23 = v31;
        if (v20) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_2498E74F4(v19, isUniquelyReferenced_nonNull_native);
      uint64_t v21 = sub_2498EF01C(v9, v11);
      if ((v20 & 1) != (v22 & 1)) {
        goto LABEL_21;
      }
      unint64_t v16 = v21;
      uint64_t v23 = v31;
      if (v20)
      {
LABEL_4:
        uint64_t v7 = v23[7];
        swift_release();
        *(void *)(v7 + 8 * v16) = v12;
        goto LABEL_5;
      }
    }
    v23[(v16 >> 6) + 8] |= 1 << v16;
    unint64_t v24 = (unint64_t *)(v23[6] + 16 * v16);
    *unint64_t v24 = v9;
    v24[1] = v11;
    *(void *)(v23[7] + 8 * v16) = v12;
    uint64_t v25 = v23[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_20;
    }
    v23[2] = v27;
    swift_bridgeObjectRetain();
LABEL_5:
    *uint64_t v4 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    if (!--v5)
    {
      swift_release();
      return v29;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_249AEE2D8();
  __break(1u);
  return result;
}

uint64_t sub_249A29E50()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (v5)
  {
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_22:
    uint64_t v14 = *(void *)(*(void *)(v1 + 56) + 8 * v10);
    if ((*(unsigned char *)(v14 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) & 1) == 0)
    {
      *(unsigned char *)(v14 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 1;
      char v15 = *(void (**)(uint64_t))(v14
                                           + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
      swift_retain();
      uint64_t v16 = swift_retain();
      v15(v16);
      swift_release();
      uint64_t result = swift_release();
    }
  }
  int64_t v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v11 >= v6) {
    goto LABEL_24;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v11);
  ++v8;
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 1;
  if (v11 + 1 >= v6) {
    goto LABEL_24;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 2;
  if (v11 + 2 >= v6) {
    goto LABEL_24;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 3;
  if (v11 + 3 >= v6) {
    goto LABEL_24;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12)
  {
LABEL_21:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_22;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_24:
    uint64_t result = swift_release();
    *(unsigned char *)(v0 + 24) = 1;
    return result;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_249A2A024()
{
  swift_beginAccess();
  uint64_t v16 = v0;
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v6) {
      goto LABEL_25;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v6) {
        goto LABEL_25;
      }
      unint64_t v12 = *(void *)(v2 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v6) {
          goto LABEL_25;
        }
        unint64_t v12 = *(void *)(v2 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v6) {
            goto LABEL_25;
          }
          unint64_t v12 = *(void *)(v2 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_23:
    uint64_t v14 = *(void *)(*(void *)(v1 + 56) + 8 * v10);
    char v15 = (void *)(v14 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables);
    swift_beginAccess();
    *char v15 = MEMORY[0x263F8EE88];
    swift_retain();
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v14 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) == 1)
    {
      sub_2498D6084(v14 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, (uint64_t)v18, &qword_2696DF130);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2498D6084((uint64_t)v18, (uint64_t)v17, &qword_2696DF130);
      swift_retain();
      sub_249AEB9F8();
      sub_2498D60E8((uint64_t)v18, &qword_2696DF130);
    }
    *(unsigned char *)(v14 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
    uint64_t result = swift_release();
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_25:
    uint64_t result = swift_release();
    *(unsigned char *)(v16 + 24) = 0;
    return result;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_25;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t DataSourceManager.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t DataSourceManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

void sub_249A2A2F0()
{
  qword_2696E3C10 = 0;
  byte_2696E3C18 = 1;
}

uint64_t sub_249A2A308@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD780 != -1) {
    swift_once();
  }
  return sub_2498D6084((uint64_t)&qword_2696E3C10, a1, &qword_2696E1D18);
}

void (*EnvironmentValues.dataSourceManager.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_2499AAFA0();
  sub_249AEBFF8();
  if (v3[1])
  {
    uint64_t Strong = 0;
    unint64_t v5 = &qword_2696E1D18;
  }
  else
  {
    uint64_t Strong = swift_weakLoadStrong();
    unint64_t v5 = &qword_2696E1D10;
  }
  sub_2498D60E8((uint64_t)v3, v5);
  void v3[2] = Strong;
  return sub_249A2A424;
}

void sub_249A2A424(uint64_t a1, char a2)
{
  uint64_t v2 = *(unsigned char **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 16);
  if (a2)
  {
    if (v3) {
      goto LABEL_5;
    }
    *(void *)uint64_t v2 = 0;
  }
  else
  {
    if (v3)
    {
LABEL_5:
      swift_weakInit();
      uint64_t v4 = swift_weakAssign();
      sub_249A29914(v4, (uint64_t)v2);
      goto LABEL_8;
    }
    *(void *)uint64_t v2 = 0;
  }
LABEL_8:
  v2[8] = v3 == 0;
  sub_249AEC008();
  swift_release();

  free(v2);
}

uint64_t type metadata accessor for DataSourceManager()
{
  return self;
}

uint64_t method lookup function for DataSourceManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DataSourceManager);
}

uint64_t dispatch thunk of DataSourceManager.dataSource(dataIdentifier:zoneRegion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DataSourceManager.__allocating_init(_:preLoadAll:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of DataSourceManager.startListening()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DataSourceManager.stopListening()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

ValueMetadata *type metadata accessor for DataSourceManagerKey()
{
  return &type metadata for DataSourceManagerKey;
}

uint64_t SlotView.init(slot:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = swift_getKeyPath();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = swift_getKeyPath();
  *(unsigned char *)(a2 + 32) = 0;
  uint64_t v4 = type metadata accessor for SlotView();
  unint64_t v5 = (uint64_t *)(a2 + *(int *)(v4 + 24));
  *unint64_t v5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA78);
  swift_storeEnumTagMultiPayload();
  return sub_249A2F3A0(a1, a2 + *(int *)(v4 + 28), (uint64_t (*)(void))type metadata accessor for Slot);
}

uint64_t sub_249A2A6AC()
{
  return sub_249AEBFF8();
}

uint64_t sub_249A2A6EC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_2498D6084(a1, (uint64_t)&v9 - v6, &qword_2696DFCA8);
  sub_2498D6084((uint64_t)v7, (uint64_t)v4, &qword_2696DFCA8);
  sub_249988448();
  sub_249AEC008();
  return sub_2498D60E8((uint64_t)v7, &qword_2696DFCA8);
}

double sub_249A2A7D8@<D0>(_OWORD *a1@<X8>)
{
  sub_249988788();
  sub_249AEBFF8();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

double sub_249A2A828@<D0>(_OWORD *a1@<X8>)
{
  sub_249988788();
  sub_249AEBFF8();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_249A2A878(uint64_t *a1)
{
  return sub_249AEC008();
}

uint64_t type metadata accessor for SlotView()
{
  uint64_t result = qword_2696E3C20;
  if (!qword_2696E3C20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_249A2A924()
{
  return sub_249AEBFF8();
}

uint64_t SlotView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SlotView() + 28);
  uint64_t v4 = v3 + *(int *)(type metadata accessor for Slot() + 36);

  return sub_249A2A9C4(v4, a1);
}

uint64_t sub_249A2A9C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3C80);
  MEMORY[0x270FA5388](v36);
  uint64_t v39 = (uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3C58);
  MEMORY[0x270FA5388](v38);
  uint64_t v33 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v34 = (uint64_t)&v32 - v7;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3C48);
  uint64_t v8 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v37 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3C68);
  MEMORY[0x270FA5388](v35);
  int64_t v11 = (uint64_t *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Instrument();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  BOOL v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498D6084(a1, (uint64_t)v14, &qword_2696DE540);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_2498D60E8((uint64_t)v14, &qword_2696DE540);
    uint64_t v19 = 1;
    uint64_t v20 = v41;
  }
  else
  {
    sub_249A2F3A0((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for Instrument);
    *int64_t v11 = sub_249AECC28();
    v11[1] = v21;
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3C88);
    sub_249A2AFBC(v2, (uint64_t)v18, (uint64_t)v11 + *(int *)(v22 + 44));
    if (v18[*(int *)(v15 + 24) + 25] == 1)
    {
      uint64_t v23 = (uint64_t *)(v2 + *(int *)(type metadata accessor for SlotView() + 28));
      uint64_t v24 = v23[5];
      uint64_t v25 = (uint64_t)v37;
      if (v24)
      {
        if (v24 == 1)
        {
          sub_249902AD8();
        }
        else
        {
          sub_249991F04(*v23, (uint64_t)v50);
          long long v42 = v50[0];
          long long v43 = v50[1];
          char v44 = v51;
          long long v45 = v52;
          long long v46 = v53;
          long long v47 = v54;
          long long v48 = v55;
          long long v49 = v56;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1868);
          sub_2498D0A3C((unint64_t *)&qword_2696E1870, &qword_2696E1868);
        }
      }
      else
      {
        sub_249902B2C();
      }
      uint64_t v26 = sub_249AECB78();
      uint64_t v27 = v33;
      sub_2498D6084((uint64_t)v11, v33, &qword_2696E3C68);
      uint64_t v28 = v27 + *(int *)(v38 + 36);
      *(void *)uint64_t v28 = v26;
      *(_WORD *)(v28 + 8) = 256;
      uint64_t v29 = v27;
      uint64_t v30 = v34;
      sub_249882788(v29, v34, &qword_2696E3C58);
      sub_2498D6084(v30, v39, &qword_2696E3C58);
      swift_storeEnumTagMultiPayload();
      sub_249A2F0A4();
      sub_2498D0A3C(&qword_2696E3C60, &qword_2696E3C68);
      sub_249AEC248();
      sub_2498D60E8(v30, &qword_2696E3C58);
    }
    else
    {
      sub_2498D6084((uint64_t)v11, v39, &qword_2696E3C68);
      swift_storeEnumTagMultiPayload();
      sub_249A2F0A4();
      sub_2498D0A3C(&qword_2696E3C60, &qword_2696E3C68);
      uint64_t v25 = (uint64_t)v37;
      sub_249AEC248();
    }
    sub_2498D60E8((uint64_t)v11, &qword_2696E3C68);
    sub_249A2F470((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for Instrument);
    uint64_t v20 = v41;
    sub_249882788(v25, v41, &qword_2696E3C48);
    uint64_t v19 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v20, v19, 1, v40);
}

uint64_t sub_249A2AFA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249A2AFBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v45 = a3;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3C90);
  MEMORY[0x270FA5388](v44);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Instrument();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v35 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for InstrumentView();
  MEMORY[0x270FA5388](v42);
  uint64_t v34 = (uint64_t *)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  uint64_t v36 = (uint64_t)&v33 - v11;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3C98);
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = (uint64_t)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3CA0);
  MEMORY[0x270FA5388](v39);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3CA8);
  MEMORY[0x270FA5388](v15);
  uint64_t v41 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(a1 + 24);
  uint64_t v37 = a1;
  LOBYTE(a1) = *(unsigned char *)(a1 + 32);
  sub_2499AAF0C(v20, a1);
  sub_2499A6688(v20, a1, v46);
  char v21 = a1;
  uint64_t v22 = v43;
  sub_2499AAF18(v20, v21);
  sub_249A2F408(v22, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for Instrument);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  LOBYTE(v20) = LayoutOutput.isVisible(_:)((uint64_t)v19);
  sub_2498D60E8((uint64_t)v19, &qword_2696DE540);
  if (v20)
  {
    uint64_t v33 = v15;
    sub_2498A4990(v22 + *(int *)(v6 + 20), (uint64_t)v46);
    int v23 = sub_2498B8790((uint64_t)v46);
    if (v23 != 6 && v23)
    {
      uint64_t v26 = v35;
      sub_249A2F408(v22, v35, (uint64_t (*)(void))type metadata accessor for Instrument);
      type metadata accessor for LayoutTreatment(0);
      sub_249A2F348(&qword_2696E1A90, (void (*)(uint64_t))type metadata accessor for LayoutTreatment);
      uint64_t v27 = sub_249AEBE18();
      uint64_t v28 = (uint64_t)v34;
      *uint64_t v34 = v27;
      *(void *)(v28 + 8) = v29;
      *(void *)(v28 + 16) = swift_getKeyPath();
      *(unsigned char *)(v28 + 24) = 0;
      uint64_t v30 = v42;
      uint64_t v31 = (uint64_t *)(v28 + *(int *)(v42 + 24));
      *uint64_t v31 = swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A98);
      swift_storeEnumTagMultiPayload();
      sub_249A2F3A0(v26, v28 + *(int *)(v30 + 28), (uint64_t (*)(void))type metadata accessor for Instrument);
      uint64_t v32 = v36;
      sub_249A2F3A0(v28, v36, (uint64_t (*)(void))type metadata accessor for InstrumentView);
      sub_249A2F408(v32, v40, (uint64_t (*)(void))type metadata accessor for InstrumentView);
      swift_storeEnumTagMultiPayload();
      sub_249A2F238(&qword_2696E3CB8, &qword_2696E3CA0, (void (*)(void))sub_249A2F2B0);
      sub_249A2F348(&qword_2696E3CD0, (void (*)(uint64_t))type metadata accessor for InstrumentView);
      uint64_t v24 = (uint64_t)v41;
      sub_249AEC248();
      sub_249A2F470(v32, (uint64_t (*)(void))type metadata accessor for InstrumentView);
    }
    else
    {
      sub_249A2B690(v22, (uint64_t)v14);
      sub_2498D6084((uint64_t)v14, v40, &qword_2696E3CA0);
      swift_storeEnumTagMultiPayload();
      sub_249A2F238(&qword_2696E3CB8, &qword_2696E3CA0, (void (*)(void))sub_249A2F2B0);
      sub_249A2F348(&qword_2696E3CD0, (void (*)(uint64_t))type metadata accessor for InstrumentView);
      uint64_t v24 = (uint64_t)v41;
      sub_249AEC248();
      sub_2498D60E8((uint64_t)v14, &qword_2696E3CA0);
    }
    sub_2498D6084(v24, (uint64_t)v5, &qword_2696E3CA8);
    swift_storeEnumTagMultiPayload();
    sub_249A2F168();
    sub_249AEC248();
    return sub_2498D60E8(v24, &qword_2696E3CA8);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_249A2F168();
    return sub_249AEC248();
  }
}

uint64_t sub_249A2B690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v41 = a1;
  uint64_t v48 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v44 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v43 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3998);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v45 = v8;
  uint64_t v46 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v42 = (uint64_t *)((char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3968);
  uint64_t v47 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *v2;
  uint64_t v22 = v3[1];
  char v23 = *((unsigned char *)v3 + 16);
  sub_249A17A28(v21, v22, v23);
  sub_2499A6D3C(v21, v22, v23, (uint64_t *)&v49);
  sub_249A15424(v21, v22, v23);
  uint64_t v24 = v49;
  if (v49)
  {
    uint64_t v40 = v18;
    uint64_t v25 = type metadata accessor for SlotView();
    sub_2499A6FD0((uint64_t)v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {
      sub_2498B9AB8((uint64_t)v24);
      sub_2498D60E8((uint64_t)v13, &qword_2696DFCA8);
      uint64_t v26 = 1;
      uint64_t v27 = v45;
    }
    else
    {
      sub_249882788((uint64_t)v13, (uint64_t)v17, &qword_2696DFCB0);
      uint64_t v31 = (char *)v3 + *(int *)(v25 + 28);
      swift_retain();
      uint64_t v32 = v24(v31, v41, v17);
      sub_2498B9AB8((uint64_t)v24);
      sub_2498B9AB8((uint64_t)v24);
      uint64_t v33 = type metadata accessor for Slot();
      uint64_t v34 = v44;
      sub_2498D6084((uint64_t)&v31[*(int *)(v33 + 44)], v44, &qword_2696DF410);
      uint64_t v35 = v43;
      sub_249882788(v34, v43, &qword_2696DF408);
      uint64_t v27 = v45;
      uint64_t v36 = v42;
      sub_2498D6084(v35, (uint64_t)v42 + *(int *)(v45 + 52), &qword_2696DF408);
      *uint64_t v36 = v32;
      sub_2498D60E8(v35, &qword_2696DF408);
      sub_2498D60E8((uint64_t)v17, &qword_2696DFCB0);
      sub_249882788((uint64_t)v36, (uint64_t)v20, &qword_2696E3998);
      uint64_t v26 = 0;
    }
    uint64_t v37 = v40;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v20, v26, 1, v27);
    uint64_t v38 = v48;
    sub_249882788((uint64_t)v20, v48, &qword_2696E3968);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v38, 0, 1, v37);
  }
  else
  {
    uint64_t v28 = v48;
    uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
    return v29(v28, 1, 1, v18);
  }
}

uint64_t sub_249A2BB84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for Slot() + 36);

  return sub_249A2A9C4(v5, a2);
}

unint64_t initializeBufferWithCopyOfBuffer for SlotView(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    char v9 = *(unsigned char *)(a2 + 16);
    sub_249A17A28(*(void *)a2, v8, v9);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    uint64_t v10 = *(void *)(a2 + 24);
    LOBYTE(v8) = *(unsigned char *)(a2 + 32);
    sub_2499AAF0C(v10, v8);
    *(void *)(a1 + 24) = v10;
    *(unsigned char *)(a1 + 32) = v8;
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (void *)(a2 + v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA78);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA8);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        uint64_t v18 = sub_249AEB808();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v12, v13, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = *(int *)(a3 + 28);
    uint64_t v20 = a1 + v19;
    uint64_t v21 = a2 + v19;
    unint64_t v22 = *(void *)(a2 + v19 + 40);
    long long v23 = *(_OWORD *)(a2 + v19 + 16);
    *(_OWORD *)uint64_t v20 = *(_OWORD *)(a2 + v19);
    *(_OWORD *)(v20 + 16) = v23;
    if (v22 >= 2)
    {
      *(void *)(v20 + 32) = *(void *)(v21 + 32);
      *(void *)(v20 + 40) = v22;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v20 + 32) = *(_OWORD *)(v21 + 32);
    }
    long long v24 = *(_OWORD *)(v21 + 64);
    *(_OWORD *)(v20 + 48) = *(_OWORD *)(v21 + 48);
    *(_OWORD *)(v20 + 64) = v24;
    long long v25 = *(_OWORD *)(v21 + 96);
    *(_OWORD *)(v20 + 80) = *(_OWORD *)(v21 + 80);
    *(_OWORD *)(v20 + 96) = v25;
    *(_OWORD *)(v20 + 112) = *(_OWORD *)(v21 + 112);
    *(void *)(v20 + 128) = *(void *)(v21 + 128);
    uint64_t v26 = (int *)type metadata accessor for Slot();
    uint64_t v27 = v26[9];
    uint64_t v28 = (char *)(v20 + v27);
    uint64_t v29 = (char *)(v21 + v27);
    uint64_t v30 = type metadata accessor for Instrument();
    uint64_t v124 = *(void *)(v30 - 8);
    uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48);
    swift_bridgeObjectRetain();
    if (v31(v29, 1, v30))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
      memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      uint64_t v33 = sub_249AEB808();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v28, v29, v33);
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
      *(void *)&v28[*(int *)(v34 + 52)] = *(void *)&v29[*(int *)(v34 + 52)];
      uint64_t v35 = *(int *)(v30 + 20);
      uint64_t v36 = (uint64_t *)&v28[v35];
      uint64_t v37 = (uint64_t *)&v29[v35];
      uint64_t v92 = v28;
      uint64_t v91 = v26;
      uint64_t v90 = v30;
      char v89 = v29;
      unint64_t v88 = a1;
      char v122 = (void *)v37[8];
      uint64_t v123 = v37[7];
      uint64_t v120 = (void *)v37[10];
      uint64_t v121 = (void *)v37[9];
      uint64_t v118 = v37[12];
      unint64_t v119 = v37[11];
      uint64_t v116 = v37[14];
      uint64_t v117 = v37[13];
      uint64_t v114 = v37[16];
      uint64_t v115 = v37[15];
      uint64_t v112 = v37[18];
      uint64_t v113 = v37[17];
      uint64_t v110 = (void *)v37[20];
      uint64_t v111 = v37[19];
      uint64_t v108 = v37[22];
      uint64_t v109 = v37[21];
      uint64_t v106 = v37[24];
      uint64_t v107 = v37[23];
      uint64_t v104 = v37[26];
      uint64_t v105 = v37[25];
      uint64_t v103 = (void *)v37[27];
      uint64_t v102 = (void *)v37[28];
      uint64_t v101 = v37[29];
      uint64_t v100 = v37[30];
      uint64_t v99 = v37[31];
      uint64_t v98 = v37[32];
      uint64_t v97 = v37[33];
      uint64_t v96 = v37[34];
      uint64_t v95 = v37[35];
      uint64_t v94 = v37[36];
      uint64_t v93 = v37[37];
      uint64_t v62 = v37[38];
      uint64_t v63 = v37[39];
      uint64_t v64 = v37[40];
      unint64_t v65 = v37[41];
      uint64_t v66 = v37[42];
      uint64_t v67 = v37[43];
      uint64_t v68 = v37[44];
      uint64_t v69 = v37[45];
      uint64_t v70 = v37[46];
      uint64_t v71 = v37[47];
      uint64_t v72 = v37[48];
      uint64_t v73 = v37[49];
      uint64_t v74 = v37[50];
      uint64_t v75 = v37[51];
      uint64_t v76 = v37[52];
      uint64_t v77 = v37[53];
      uint64_t v78 = v37[54];
      uint64_t v79 = v37[55];
      uint64_t v80 = v37[56];
      uint64_t v81 = v37[57];
      uint64_t v82 = v37[58];
      uint64_t v83 = v37[59];
      unint64_t v84 = v37[60];
      uint64_t v85 = v37[61];
      unint64_t v86 = v37[62];
      uint64_t v87 = v37[63];
      uint64_t v38 = *v37;
      uint64_t v39 = v37[1];
      uint64_t v40 = (void *)v37[2];
      uint64_t v41 = (void *)v37[3];
      uint64_t v42 = (void *)v37[4];
      uint64_t v43 = (void *)v37[5];
      uint64_t v44 = v37[6];
      sub_2498FB4B4(*v37, v39, v40, v41, v42, v43, v44, v123, v122, v121, v120, v119, v118, v117, v116, v115, v114, v113, v112,
        v111,
        v110,
        v109,
        v108,
        v107,
        v106,
        v105,
        v104,
        v103,
        v102,
        v101,
        v100,
        v99,
        v98,
        v97,
        v96,
        v95,
        v94,
        v93,
        v62,
        v63,
        v64,
        v65,
        v66,
        v67,
        v68,
        v69,
        v70,
        v71,
        v72,
        v73,
        v74,
        v75,
        v76,
        v77,
        v78,
        v79,
        v80,
        v81,
        v82,
        v83,
        v84,
        v85,
        v86);
      *uint64_t v36 = v38;
      v36[1] = v39;
      v36[2] = (uint64_t)v40;
      v36[3] = (uint64_t)v41;
      uint64_t v26 = v91;
      v36[4] = (uint64_t)v42;
      v36[5] = (uint64_t)v43;
      v36[6] = v44;
      a1 = v88;
      v36[7] = v123;
      v36[8] = (uint64_t)v122;
      v36[9] = (uint64_t)v121;
      v36[10] = (uint64_t)v120;
      v36[11] = v119;
      v36[12] = v118;
      v36[13] = v117;
      v36[14] = v116;
      v36[15] = v115;
      v36[16] = v114;
      v36[17] = v113;
      v36[18] = v112;
      v36[19] = v111;
      v36[20] = (uint64_t)v110;
      v36[21] = v109;
      v36[22] = v108;
      v36[23] = v107;
      v36[24] = v106;
      v36[25] = v105;
      v36[26] = v104;
      v36[27] = (uint64_t)v103;
      v36[28] = (uint64_t)v102;
      v36[29] = v101;
      v36[30] = v100;
      v36[31] = v99;
      v36[32] = v98;
      v36[33] = v97;
      v36[34] = v96;
      v36[35] = v95;
      v36[36] = v94;
      v36[37] = v93;
      v36[38] = v62;
      v36[39] = v63;
      v36[40] = v64;
      v36[41] = v65;
      v36[42] = v66;
      v36[43] = v67;
      v36[44] = v68;
      v36[45] = v69;
      v36[46] = v70;
      v36[47] = v71;
      v36[48] = v72;
      v36[49] = v73;
      v36[50] = v74;
      v36[51] = v75;
      v36[52] = v76;
      v36[53] = v77;
      v36[54] = v78;
      v36[55] = v79;
      v36[56] = v80;
      v36[57] = v81;
      v36[58] = v82;
      v36[59] = v83;
      v36[60] = v84;
      v36[61] = v85;
      v36[62] = v86;
      v36[63] = v87;
      uint64_t v45 = *(int *)(v90 + 24);
      uint64_t v46 = &v92[v45];
      uint64_t v47 = &v89[v45];
      uint64_t v48 = *((void *)v47 + 1);
      *(void *)uint64_t v46 = *(void *)v47;
      *((void *)v46 + 1) = v48;
      *((void *)v46 + 2) = *((void *)v47 + 2);
      *((_WORD *)v46 + 12) = *((_WORD *)v47 + 12);
      uint64_t v49 = *((void *)v47 + 5);
      *((void *)v46 + 4) = *((void *)v47 + 4);
      *((void *)v46 + 5) = v49;
      uint64_t v50 = *(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v50(v92, 0, 1, v90);
    }
    uint64_t v51 = v26[10];
    long long v52 = (void *)(v20 + v51);
    long long v53 = (void *)(v21 + v51);
    uint64_t v54 = v53[1];
    *long long v52 = *v53;
    v52[1] = v54;
    uint64_t v55 = v26[11];
    uint64_t v56 = v20 + v55;
    uint64_t v57 = v21 + v55;
    uint64_t v58 = sub_249AEB808();
    char v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16);
    swift_bridgeObjectRetain();
    v59(v56, v57, v58);
    uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
    *(void *)(v56 + *(int *)(v60 + 52)) = *(void *)(v57 + *(int *)(v60 + 52));
  }
  return a1;
}

uint64_t destroy for SlotView(uint64_t a1, uint64_t a2)
{
  sub_249A15424(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  sub_2499AAF18(*(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA78);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
    {
      uint64_t v6 = sub_249AEB808();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  if (*(void *)(v7 + 40) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for Slot();
  uint64_t v9 = v7 + *(int *)(v8 + 36);
  uint64_t v10 = type metadata accessor for Instrument();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    uint64_t v11 = sub_249AEB808();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v9, v11);
    uint64_t v12 = v9 + *(int *)(v10 + 20);
    long long v31 = *(_OWORD *)(v12 + 464);
    long long v32 = *(_OWORD *)(v12 + 480);
    long long v29 = *(_OWORD *)(v12 + 432);
    long long v30 = *(_OWORD *)(v12 + 448);
    long long v27 = *(_OWORD *)(v12 + 400);
    long long v28 = *(_OWORD *)(v12 + 416);
    long long v25 = *(_OWORD *)(v12 + 368);
    long long v26 = *(_OWORD *)(v12 + 384);
    long long v23 = *(_OWORD *)(v12 + 336);
    long long v24 = *(_OWORD *)(v12 + 352);
    long long v21 = *(_OWORD *)(v12 + 304);
    long long v22 = *(_OWORD *)(v12 + 320);
    long long v19 = *(_OWORD *)(v12 + 272);
    long long v20 = *(_OWORD *)(v12 + 288);
    long long v17 = *(_OWORD *)(v12 + 240);
    long long v18 = *(_OWORD *)(v12 + 256);
    sub_2498FCAAC(*(void *)v12, *(void *)(v12 + 8), *(void **)(v12 + 16), *(void **)(v12 + 24), *(void **)(v12 + 32), *(void **)(v12 + 40), *(void *)(v12 + 48), *(void *)(v12 + 56), *(void **)(v12 + 64), *(void **)(v12 + 72), *(void **)(v12 + 80), *(void *)(v12 + 88), *(void *)(v12 + 96), *(void *)(v12 + 104), *(void *)(v12 + 112), *(void *)(v12 + 120), *(void *)(v12 + 128), *(void *)(v12 + 136), *(void *)(v12 + 144),
      *(void *)(v12 + 152),
      *(void **)(v12 + 160),
      *(void *)(v12 + 168),
      *(void *)(v12 + 176),
      *(void *)(v12 + 184),
      *(void *)(v12 + 192),
      *(void *)(v12 + 200),
      *(void *)(v12 + 208),
      *(void **)(v12 + 216),
      *(void **)(v12 + 224),
      *(void *)(v12 + 232),
      v17,
      *((uint64_t *)&v17 + 1),
      v18,
      *((uint64_t *)&v18 + 1),
      v19,
      *((uint64_t *)&v19 + 1),
      v20,
      *((uint64_t *)&v20 + 1),
      v21,
      *((uint64_t *)&v21 + 1),
      v22,
      *((unint64_t *)&v22 + 1),
      v23,
      *((uint64_t *)&v23 + 1),
      v24,
      SBYTE8(v24),
      v25,
      *((uint64_t *)&v25 + 1),
      v26,
      *((uint64_t *)&v26 + 1),
      v27,
      SBYTE8(v27),
      v28,
      *((uint64_t *)&v28 + 1),
      v29,
      *((uint64_t *)&v29 + 1),
      v30,
      SBYTE8(v30),
      v31,
      *((uint64_t *)&v31 + 1),
      v32,
      *((uint64_t *)&v32 + 1),
      *(void *)(v12 + 496));
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = v7 + *(int *)(v8 + 44);
  uint64_t v14 = sub_249AEB808();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

uint64_t initializeWithCopy for SlotView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_249A17A28(*(void *)a2, v7, v8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  uint64_t v9 = *(void *)(a2 + 24);
  LOBYTE(v7) = *(unsigned char *)(a2 + 32);
  sub_2499AAF0C(v9, v7);
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v7;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA78);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA8);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v16 = sub_249AEB808();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v11, v12, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  else
  {
    *uint64_t v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  unint64_t v20 = *(void *)(a2 + v17 + 40);
  long long v21 = *(_OWORD *)(a2 + v17 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)(a2 + v17);
  *(_OWORD *)(v18 + 16) = v21;
  if (v20 >= 2)
  {
    *(void *)(v18 + 32) = *(void *)(v19 + 32);
    *(void *)(v18 + 40) = v20;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  }
  long long v22 = *(_OWORD *)(v19 + 64);
  *(_OWORD *)(v18 + 48) = *(_OWORD *)(v19 + 48);
  *(_OWORD *)(v18 + 64) = v22;
  long long v23 = *(_OWORD *)(v19 + 96);
  *(_OWORD *)(v18 + 80) = *(_OWORD *)(v19 + 80);
  *(_OWORD *)(v18 + 96) = v23;
  *(_OWORD *)(v18 + 112) = *(_OWORD *)(v19 + 112);
  *(void *)(v18 + 128) = *(void *)(v19 + 128);
  long long v24 = (int *)type metadata accessor for Slot();
  uint64_t v25 = v24[9];
  long long v26 = (char *)(v18 + v25);
  long long v27 = (char *)(v19 + v25);
  uint64_t v28 = type metadata accessor for Instrument();
  uint64_t v122 = *(void *)(v28 - 8);
  long long v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48);
  swift_bridgeObjectRetain();
  if (v29(v27, 1, v28))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    uint64_t v31 = sub_249AEB808();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v26, v27, v31);
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
    *(void *)&v26[*(int *)(v32 + 52)] = *(void *)&v27[*(int *)(v32 + 52)];
    uint64_t v33 = *(int *)(v28 + 20);
    uint64_t v34 = (uint64_t *)&v26[v33];
    uint64_t v35 = (uint64_t *)&v27[v33];
    uint64_t v90 = v26;
    char v89 = v24;
    uint64_t v88 = v28;
    uint64_t v87 = v27;
    uint64_t v86 = a1;
    uint64_t v120 = (void *)v35[8];
    uint64_t v121 = v35[7];
    uint64_t v118 = (void *)v35[10];
    unint64_t v119 = (void *)v35[9];
    uint64_t v116 = v35[12];
    unint64_t v117 = v35[11];
    uint64_t v114 = v35[14];
    uint64_t v115 = v35[13];
    uint64_t v112 = v35[16];
    uint64_t v113 = v35[15];
    uint64_t v110 = v35[18];
    uint64_t v111 = v35[17];
    uint64_t v108 = (void *)v35[20];
    uint64_t v109 = v35[19];
    uint64_t v106 = v35[22];
    uint64_t v107 = v35[21];
    uint64_t v104 = v35[24];
    uint64_t v105 = v35[23];
    uint64_t v102 = v35[26];
    uint64_t v103 = v35[25];
    uint64_t v101 = (void *)v35[27];
    uint64_t v100 = (void *)v35[28];
    uint64_t v99 = v35[29];
    uint64_t v98 = v35[30];
    uint64_t v97 = v35[31];
    uint64_t v96 = v35[32];
    uint64_t v95 = v35[33];
    uint64_t v94 = v35[34];
    uint64_t v93 = v35[35];
    uint64_t v92 = v35[36];
    uint64_t v91 = v35[37];
    uint64_t v60 = v35[38];
    uint64_t v61 = v35[39];
    uint64_t v62 = v35[40];
    unint64_t v63 = v35[41];
    uint64_t v64 = v35[42];
    uint64_t v65 = v35[43];
    uint64_t v66 = v35[44];
    uint64_t v67 = v35[45];
    uint64_t v68 = v35[46];
    uint64_t v69 = v35[47];
    uint64_t v70 = v35[48];
    uint64_t v71 = v35[49];
    uint64_t v72 = v35[50];
    uint64_t v73 = v35[51];
    uint64_t v74 = v35[52];
    uint64_t v75 = v35[53];
    uint64_t v76 = v35[54];
    uint64_t v77 = v35[55];
    uint64_t v78 = v35[56];
    uint64_t v79 = v35[57];
    uint64_t v80 = v35[58];
    uint64_t v81 = v35[59];
    unint64_t v82 = v35[60];
    uint64_t v83 = v35[61];
    unint64_t v84 = v35[62];
    uint64_t v85 = v35[63];
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    uint64_t v38 = (void *)v35[2];
    uint64_t v39 = (void *)v35[3];
    uint64_t v40 = (void *)v35[4];
    uint64_t v41 = (void *)v35[5];
    uint64_t v42 = v35[6];
    sub_2498FB4B4(*v35, v37, v38, v39, v40, v41, v42, v121, v120, v119, v118, v117, v116, v115, v114, v113, v112, v111, v110,
      v109,
      v108,
      v107,
      v106,
      v105,
      v104,
      v103,
      v102,
      v101,
      v100,
      v99,
      v98,
      v97,
      v96,
      v95,
      v94,
      v93,
      v92,
      v91,
      v60,
      v61,
      v62,
      v63,
      v64,
      v65,
      v66,
      v67,
      v68,
      v69,
      v70,
      v71,
      v72,
      v73,
      v74,
      v75,
      v76,
      v77,
      v78,
      v79,
      v80,
      v81,
      v82,
      v83,
      v84);
    *uint64_t v34 = v36;
    v34[1] = v37;
    v34[2] = (uint64_t)v38;
    v34[3] = (uint64_t)v39;
    long long v24 = v89;
    v34[4] = (uint64_t)v40;
    v34[5] = (uint64_t)v41;
    v34[6] = v42;
    a1 = v86;
    v34[7] = v121;
    v34[8] = (uint64_t)v120;
    v34[9] = (uint64_t)v119;
    v34[10] = (uint64_t)v118;
    v34[11] = v117;
    v34[12] = v116;
    v34[13] = v115;
    v34[14] = v114;
    v34[15] = v113;
    v34[16] = v112;
    v34[17] = v111;
    v34[18] = v110;
    v34[19] = v109;
    v34[20] = (uint64_t)v108;
    v34[21] = v107;
    v34[22] = v106;
    v34[23] = v105;
    v34[24] = v104;
    v34[25] = v103;
    v34[26] = v102;
    v34[27] = (uint64_t)v101;
    v34[28] = (uint64_t)v100;
    v34[29] = v99;
    v34[30] = v98;
    v34[31] = v97;
    v34[32] = v96;
    v34[33] = v95;
    v34[34] = v94;
    v34[35] = v93;
    v34[36] = v92;
    v34[37] = v91;
    v34[38] = v60;
    v34[39] = v61;
    v34[40] = v62;
    v34[41] = v63;
    v34[42] = v64;
    v34[43] = v65;
    v34[44] = v66;
    v34[45] = v67;
    v34[46] = v68;
    v34[47] = v69;
    v34[48] = v70;
    v34[49] = v71;
    v34[50] = v72;
    v34[51] = v73;
    v34[52] = v74;
    v34[53] = v75;
    v34[54] = v76;
    v34[55] = v77;
    v34[56] = v78;
    v34[57] = v79;
    v34[58] = v80;
    v34[59] = v81;
    v34[60] = v82;
    v34[61] = v83;
    v34[62] = v84;
    v34[63] = v85;
    uint64_t v43 = *(int *)(v88 + 24);
    uint64_t v44 = &v90[v43];
    uint64_t v45 = &v87[v43];
    uint64_t v46 = *((void *)v45 + 1);
    *(void *)uint64_t v44 = *(void *)v45;
    *((void *)v44 + 1) = v46;
    *((void *)v44 + 2) = *((void *)v45 + 2);
    *((_WORD *)v44 + 12) = *((_WORD *)v45 + 12);
    uint64_t v47 = *((void *)v45 + 5);
    *((void *)v44 + 4) = *((void *)v45 + 4);
    *((void *)v44 + 5) = v47;
    uint64_t v48 = *(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v48(v90, 0, 1, v88);
  }
  uint64_t v49 = v24[10];
  uint64_t v50 = (void *)(v18 + v49);
  uint64_t v51 = (void *)(v19 + v49);
  uint64_t v52 = v51[1];
  *uint64_t v50 = *v51;
  v50[1] = v52;
  uint64_t v53 = v24[11];
  uint64_t v54 = v18 + v53;
  uint64_t v55 = v19 + v53;
  uint64_t v56 = sub_249AEB808();
  uint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16);
  swift_bridgeObjectRetain();
  v57(v54, v55, v56);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  *(void *)(v54 + *(int *)(v58 + 52)) = *(void *)(v55 + *(int *)(v58 + 52));
  return a1;
}

uint64_t assignWithCopy for SlotView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_249A17A28(*(void *)a2, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  char v11 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  sub_249A15424(v9, v10, v11);
  uint64_t v12 = *(void *)(a2 + 24);
  LOBYTE(v7) = *(unsigned char *)(a2 + 32);
  sub_2499AAF0C(v12, v7);
  uint64_t v13 = *(void *)(a1 + 24);
  char v14 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = v12;
  *(unsigned char *)(a1 + 32) = v7;
  sub_2499AAF18(v13, v14);
  if (a1 != a2)
  {
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = (void *)(a2 + v15);
    sub_2498D60E8(a1 + v15, &qword_2696DFA78);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA78);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA8);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        uint64_t v21 = sub_249AEB808();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v16, v17, v21);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v22 = *(int *)(a3 + 28);
  long long v23 = (void *)(a1 + v22);
  long long v24 = (void *)(a2 + v22);
  unint64_t v25 = *(void *)(a1 + v22 + 40);
  unint64_t v26 = v24[5];
  uint64_t v240 = a1;
  if (v25 >= 2)
  {
    if (v26 >= 2)
    {
      *long long v23 = *v24;
      v23[1] = v24[1];
      v23[2] = v24[2];
      v23[3] = v24[3];
      v23[4] = v24[4];
      v23[5] = v24[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2498D60E8((uint64_t)v23, &qword_2696E1880);
      long long v30 = *((_OWORD *)v24 + 1);
      long long v29 = *((_OWORD *)v24 + 2);
      *(_OWORD *)long long v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v30;
      *((_OWORD *)v23 + 2) = v29;
    }
  }
  else if (v26 >= 2)
  {
    *long long v23 = *v24;
    v23[1] = v24[1];
    *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
    v23[4] = v24[4];
    v23[5] = v24[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v27 = *(_OWORD *)v24;
    long long v28 = *((_OWORD *)v24 + 2);
    *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
    *((_OWORD *)v23 + 2) = v28;
    *(_OWORD *)long long v23 = v27;
  }
  v23[6] = v24[6];
  v23[7] = v24[7];
  v23[8] = v24[8];
  v23[9] = v24[9];
  v23[10] = v24[10];
  v23[11] = v24[11];
  v23[12] = v24[12];
  v23[13] = v24[13];
  v23[14] = v24[14];
  v23[15] = v24[15];
  v23[16] = v24[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v241 = (int *)type metadata accessor for Slot();
  uint64_t v31 = v241[9];
  uint64_t v32 = (char *)v23 + v31;
  uint64_t v33 = (char *)v24 + v31;
  uint64_t v34 = type metadata accessor for Instrument();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  uint64_t v37 = v32;
  int v38 = v36(v32, 1, v34);
  uint64_t v39 = v33;
  int v40 = v36(v33, 1, v34);
  if (!v38)
  {
    if (!v40)
    {
      uint64_t v67 = sub_249AEB808();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 24))(v37, v33, v67);
      uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
      *(void *)&v37[*(int *)(v68 + 52)] = *(void *)&v33[*(int *)(v68 + 52)];
      uint64_t v69 = v34;
      uint64_t v70 = *(int *)(v34 + 20);
      uint64_t v71 = &v37[v70];
      uint64_t v72 = (uint64_t *)&v33[v70];
      uint64_t v231 = v72[1];
      uint64_t v233 = *v72;
      v227 = (void *)v72[3];
      v229 = (void *)v72[2];
      v223 = (void *)v72[5];
      v225 = (void *)v72[4];
      uint64_t v219 = v72[7];
      uint64_t v221 = v72[6];
      v215 = (void *)v72[9];
      v217 = (void *)v72[8];
      unint64_t v211 = v72[11];
      v213 = (void *)v72[10];
      uint64_t v209 = v72[12];
      uint64_t v207 = v72[13];
      uint64_t v205 = v72[14];
      uint64_t v203 = v72[15];
      uint64_t v201 = v72[16];
      uint64_t v199 = v72[17];
      uint64_t v197 = v72[18];
      uint64_t v195 = v72[19];
      v193 = (void *)v72[20];
      uint64_t v191 = v72[21];
      uint64_t v189 = v72[22];
      uint64_t v187 = v72[23];
      uint64_t v185 = v72[24];
      uint64_t v183 = v72[25];
      uint64_t v181 = v72[26];
      uint64_t v179 = (void *)v72[27];
      uint64_t v177 = (void *)v72[28];
      uint64_t v175 = v72[29];
      uint64_t v173 = v72[30];
      uint64_t v171 = v72[31];
      uint64_t v169 = v72[32];
      uint64_t v167 = v72[33];
      uint64_t v165 = v72[34];
      uint64_t v163 = v72[35];
      uint64_t v161 = v72[36];
      uint64_t v160 = v72[37];
      uint64_t v159 = v72[38];
      uint64_t v128 = v72[39];
      uint64_t v74 = v72[40];
      unint64_t v73 = v72[41];
      uint64_t v75 = v72[42];
      uint64_t v130 = v72[43];
      uint64_t v132 = v72[44];
      uint64_t v134 = v72[45];
      uint64_t v76 = v72[47];
      v239 = v39;
      uint64_t v77 = v72[49];
      uint64_t v136 = v72[48];
      v237 = v37;
      uint64_t v138 = v72[50];
      uint64_t v140 = v72[51];
      uint64_t v142 = v72[52];
      uint64_t v144 = v72[53];
      uint64_t v235 = v69;
      uint64_t v78 = v72[54];
      uint64_t v146 = v72[55];
      uint64_t v148 = v72[56];
      uint64_t v150 = v72[57];
      uint64_t v152 = v72[58];
      uint64_t v154 = v72[59];
      unint64_t v155 = v72[60];
      uint64_t v156 = v72[61];
      unint64_t v157 = v72[62];
      uint64_t v158 = v72[63];
      uint64_t v79 = v72[46];
      sub_2498FB4B4(*v72, v231, v229, v227, v225, v223, v221, v219, v217, v215, v213, v211, v209, v207, v205, v203, v201, v199, v197,
        v195,
        v193,
        v191,
        v189,
        v187,
        v185,
        v183,
        v181,
        v179,
        v177,
        v175,
        v173,
        v171,
        v169,
        v167,
        v165,
        v163,
        v161,
        v160,
        v159,
        v128,
        v74,
        v73,
        v75,
        v130,
        v132,
        v134,
        v79,
        v76,
        v136,
        v77,
        v138,
        v140,
        v142,
        v144,
        v78,
        v146,
        v148,
        v150,
        v152,
        v154,
        v155,
        v156,
        v157);
      uint64_t v80 = *(void *)v71;
      uint64_t v81 = *((void *)v71 + 1);
      *(void *)uint64_t v71 = v233;
      *((void *)v71 + 1) = v231;
      unint64_t v82 = (void *)*((void *)v71 + 2);
      uint64_t v83 = (void *)*((void *)v71 + 3);
      *((void *)v71 + 2) = v229;
      *((void *)v71 + 3) = v227;
      unint64_t v84 = (void *)*((void *)v71 + 4);
      uint64_t v85 = (void *)*((void *)v71 + 5);
      *((void *)v71 + 4) = v225;
      *((void *)v71 + 5) = v223;
      uint64_t v86 = *((void *)v71 + 6);
      uint64_t v87 = *((void *)v71 + 7);
      *((void *)v71 + 6) = v221;
      *((void *)v71 + 7) = v219;
      long long v88 = *((_OWORD *)v71 + 4);
      long long v89 = *((_OWORD *)v71 + 5);
      *((void *)v71 + 8) = v217;
      *((void *)v71 + 9) = v215;
      *((void *)v71 + 10) = v213;
      *((void *)v71 + 11) = v211;
      long long v90 = *((_OWORD *)v71 + 6);
      long long v91 = *((_OWORD *)v71 + 7);
      *((void *)v71 + 12) = v209;
      *((void *)v71 + 13) = v207;
      *((void *)v71 + 14) = v205;
      *((void *)v71 + 15) = v203;
      long long v92 = *((_OWORD *)v71 + 8);
      long long v93 = *((_OWORD *)v71 + 9);
      *((void *)v71 + 16) = v201;
      *((void *)v71 + 17) = v199;
      *((void *)v71 + 18) = v197;
      *((void *)v71 + 19) = v195;
      long long v94 = *((_OWORD *)v71 + 10);
      long long v95 = *((_OWORD *)v71 + 11);
      *((void *)v71 + 20) = v193;
      *((void *)v71 + 21) = v191;
      *((void *)v71 + 22) = v189;
      *((void *)v71 + 23) = v187;
      long long v96 = *((_OWORD *)v71 + 12);
      long long v97 = *((_OWORD *)v71 + 13);
      *((void *)v71 + 24) = v185;
      *((void *)v71 + 25) = v183;
      *((void *)v71 + 26) = v181;
      *((void *)v71 + 27) = v179;
      long long v98 = *((_OWORD *)v71 + 14);
      long long v99 = *((_OWORD *)v71 + 15);
      *((void *)v71 + 28) = v177;
      *((void *)v71 + 29) = v175;
      *((void *)v71 + 30) = v173;
      *((void *)v71 + 31) = v171;
      long long v100 = *((_OWORD *)v71 + 16);
      long long v101 = *((_OWORD *)v71 + 17);
      *((void *)v71 + 32) = v169;
      *((void *)v71 + 33) = v167;
      *((void *)v71 + 34) = v165;
      *((void *)v71 + 35) = v163;
      long long v102 = *((_OWORD *)v71 + 18);
      long long v103 = *((_OWORD *)v71 + 19);
      *((void *)v71 + 36) = v161;
      *((void *)v71 + 37) = v160;
      *((void *)v71 + 38) = v159;
      long long v104 = *((_OWORD *)v71 + 20);
      long long v105 = *((_OWORD *)v71 + 21);
      *((void *)v71 + 39) = v128;
      *((void *)v71 + 40) = v74;
      *((void *)v71 + 41) = v73;
      *((void *)v71 + 42) = v75;
      *((void *)v71 + 43) = v130;
      long long v106 = *((_OWORD *)v71 + 22);
      long long v107 = *((_OWORD *)v71 + 23);
      *((void *)v71 + 44) = v132;
      *((void *)v71 + 45) = v134;
      *((void *)v71 + 46) = v79;
      long long v108 = *((_OWORD *)v71 + 24);
      long long v109 = *((_OWORD *)v71 + 25);
      *((void *)v71 + 47) = v76;
      *((void *)v71 + 48) = v136;
      *((void *)v71 + 49) = v77;
      *((void *)v71 + 50) = v138;
      *((void *)v71 + 51) = v140;
      long long v110 = *((_OWORD *)v71 + 26);
      long long v111 = *((_OWORD *)v71 + 27);
      *((void *)v71 + 52) = v142;
      *((void *)v71 + 53) = v144;
      *((void *)v71 + 54) = v78;
      *((void *)v71 + 55) = v146;
      long long v112 = *((_OWORD *)v71 + 28);
      long long v113 = *((_OWORD *)v71 + 29);
      *((void *)v71 + 56) = v148;
      *((void *)v71 + 57) = v150;
      *((void *)v71 + 58) = v152;
      *((void *)v71 + 59) = v154;
      long long v114 = *((_OWORD *)v71 + 30);
      *((void *)v71 + 60) = v155;
      *((void *)v71 + 61) = v156;
      unint64_t v115 = *((void *)v71 + 62);
      *((void *)v71 + 62) = v157;
      *((void *)v71 + 63) = v158;
      sub_2498FCAAC(v80, v81, v82, v83, v84, v85, v86, v87, (void *)v88, *((void **)&v88 + 1), (void *)v89, *((unint64_t *)&v89 + 1), v90, *((uint64_t *)&v90 + 1), v91, *((uint64_t *)&v91 + 1), v92, *((uint64_t *)&v92 + 1), v93,
        *((uint64_t *)&v93 + 1),
        (void *)v94,
        *((uint64_t *)&v94 + 1),
        v95,
        *((uint64_t *)&v95 + 1),
        v96,
        *((uint64_t *)&v96 + 1),
        v97,
        *((void **)&v97 + 1),
        (void *)v98,
        *((uint64_t *)&v98 + 1),
        v99,
        *((uint64_t *)&v99 + 1),
        v100,
        *((uint64_t *)&v100 + 1),
        v101,
        *((uint64_t *)&v101 + 1),
        v102,
        *((uint64_t *)&v102 + 1),
        v103,
        *((uint64_t *)&v103 + 1),
        v104,
        *((unint64_t *)&v104 + 1),
        v105,
        *((uint64_t *)&v105 + 1),
        v106,
        SBYTE8(v106),
        v107,
        *((uint64_t *)&v107 + 1),
        v108,
        *((uint64_t *)&v108 + 1),
        v109,
        SBYTE8(v109),
        v110,
        *((uint64_t *)&v110 + 1),
        v111,
        *((uint64_t *)&v111 + 1),
        v112,
        SBYTE8(v112),
        v113,
        *((uint64_t *)&v113 + 1),
        v114,
        *((uint64_t *)&v114 + 1),
        v115);
      uint64_t v116 = *(int *)(v235 + 24);
      unint64_t v117 = &v237[v116];
      uint64_t v118 = &v239[v116];
      *(void *)&v237[v116] = *(void *)&v239[v116];
      swift_retain();
      swift_release();
      *((void *)v117 + 1) = *((void *)v118 + 1);
      *((void *)v117 + 2) = *((void *)v118 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v117[24] = v118[24];
      v117[25] = v118[25];
      *((void *)v117 + 4) = *((void *)v118 + 4);
      *((void *)v117 + 5) = *((void *)v118 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_249A2F470((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for Instrument);
    goto LABEL_20;
  }
  if (v40)
  {
LABEL_20:
    uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
    memcpy(v37, v33, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_21;
  }
  uint64_t v41 = sub_249AEB808();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v37, v33, v41);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  v236 = v37;
  v238 = v33;
  *(void *)&v37[*(int *)(v42 + 52)] = *(void *)&v33[*(int *)(v42 + 52)];
  uint64_t v234 = v34;
  uint64_t v43 = *(int *)(v34 + 20);
  uint64_t v44 = (uint64_t *)&v37[v43];
  uint64_t v45 = (uint64_t *)&v33[v43];
  uint64_t v170 = v35;
  v230 = (void *)v45[8];
  uint64_t v232 = v45[7];
  v226 = (void *)v45[10];
  v228 = (void *)v45[9];
  uint64_t v222 = v45[12];
  unint64_t v224 = v45[11];
  uint64_t v218 = v45[14];
  uint64_t v220 = v45[13];
  uint64_t v214 = v45[16];
  uint64_t v216 = v45[15];
  uint64_t v210 = v45[18];
  uint64_t v212 = v45[17];
  uint64_t v208 = v45[19];
  v206 = (void *)v45[20];
  uint64_t v204 = v45[21];
  uint64_t v202 = v45[22];
  uint64_t v200 = v45[23];
  uint64_t v198 = v45[24];
  uint64_t v196 = v45[25];
  uint64_t v194 = v45[26];
  v192 = (void *)v45[27];
  v190 = (void *)v45[28];
  uint64_t v188 = v45[29];
  uint64_t v186 = v45[30];
  uint64_t v184 = v45[31];
  uint64_t v182 = v45[32];
  uint64_t v180 = v45[33];
  uint64_t v178 = v45[34];
  uint64_t v176 = v45[35];
  uint64_t v174 = v45[36];
  uint64_t v172 = v45[37];
  uint64_t v119 = v45[38];
  uint64_t v120 = v45[39];
  uint64_t v121 = v45[40];
  unint64_t v122 = v45[41];
  uint64_t v123 = v45[42];
  uint64_t v124 = v45[43];
  uint64_t v125 = v45[44];
  uint64_t v126 = v45[45];
  uint64_t v127 = v45[46];
  uint64_t v129 = v45[47];
  uint64_t v131 = v45[48];
  uint64_t v133 = v45[49];
  uint64_t v135 = v45[50];
  uint64_t v137 = v45[51];
  uint64_t v139 = v45[52];
  uint64_t v141 = v45[53];
  uint64_t v143 = v45[54];
  uint64_t v145 = v45[55];
  uint64_t v147 = v45[56];
  uint64_t v149 = v45[57];
  uint64_t v151 = v45[58];
  uint64_t v153 = v45[59];
  unint64_t v162 = v45[60];
  uint64_t v164 = v45[61];
  unint64_t v166 = v45[62];
  uint64_t v168 = v45[63];
  uint64_t v46 = *v45;
  uint64_t v47 = v45[1];
  uint64_t v48 = (void *)v45[2];
  uint64_t v49 = (void *)v45[3];
  uint64_t v50 = (void *)v45[4];
  uint64_t v51 = (void *)v45[5];
  uint64_t v52 = v45[6];
  sub_2498FB4B4(*v45, v47, v48, v49, v50, v51, v52, v232, v230, v228, v226, v224, v222, v220, v218, v216, v214, v212, v210,
    v208,
    v206,
    v204,
    v202,
    v200,
    v198,
    v196,
    v194,
    v192,
    v190,
    v188,
    v186,
    v184,
    v182,
    v180,
    v178,
    v176,
    v174,
    v172,
    v119,
    v120,
    v121,
    v122,
    v123,
    v124,
    v125,
    v126,
    v127,
    v129,
    *((_OWORD *)v45 + 24),
    v133,
    v135,
    v137,
    v139,
    v141,
    v143,
    v145,
    v147,
    v149,
    v151,
    v153,
    v162,
    v164,
    v166);
  *uint64_t v44 = v46;
  v44[1] = v47;
  v44[2] = (uint64_t)v48;
  v44[3] = (uint64_t)v49;
  v44[4] = (uint64_t)v50;
  v44[5] = (uint64_t)v51;
  v44[6] = v52;
  v44[7] = v232;
  v44[8] = (uint64_t)v230;
  v44[9] = (uint64_t)v228;
  v44[10] = (uint64_t)v226;
  v44[11] = v224;
  v44[12] = v222;
  v44[13] = v220;
  v44[14] = v218;
  v44[15] = v216;
  v44[16] = v214;
  v44[17] = v212;
  v44[18] = v210;
  v44[19] = v208;
  v44[20] = (uint64_t)v206;
  v44[21] = v204;
  v44[22] = v202;
  v44[23] = v200;
  v44[24] = v198;
  v44[25] = v196;
  v44[26] = v194;
  v44[27] = (uint64_t)v192;
  v44[28] = (uint64_t)v190;
  v44[29] = v188;
  v44[30] = v186;
  v44[31] = v184;
  v44[32] = v182;
  v44[33] = v180;
  v44[34] = v178;
  v44[35] = v176;
  v44[36] = v174;
  v44[37] = v172;
  v44[38] = v119;
  v44[39] = v120;
  v44[40] = v121;
  v44[41] = v122;
  v44[42] = v123;
  v44[43] = v124;
  v44[44] = v125;
  v44[45] = v126;
  v44[46] = v127;
  v44[47] = v129;
  v44[48] = v131;
  v44[49] = v133;
  v44[50] = v135;
  v44[51] = v137;
  v44[52] = v139;
  v44[53] = v141;
  v44[54] = v143;
  v44[55] = v145;
  v44[56] = v147;
  v44[57] = v149;
  v44[58] = v151;
  v44[59] = v153;
  v44[60] = v162;
  v44[61] = v164;
  v44[62] = v166;
  v44[63] = v168;
  uint64_t v53 = *(int *)(v234 + 24);
  uint64_t v54 = &v236[v53];
  uint64_t v55 = &v238[v53];
  *(void *)uint64_t v54 = *(void *)v55;
  *((void *)v54 + 1) = *((void *)v55 + 1);
  *((void *)v54 + 2) = *((void *)v55 + 2);
  v54[24] = v55[24];
  v54[25] = v55[25];
  *((void *)v54 + 4) = *((void *)v55 + 4);
  *((void *)v54 + 5) = *((void *)v55 + 5);
  uint64_t v56 = *(void (**)(char *, void, uint64_t, uint64_t))(v170 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v56(v236, 0, 1, v234);
LABEL_21:
  uint64_t v58 = v241[10];
  char v59 = (void *)((char *)v23 + v58);
  uint64_t v60 = (void *)((char *)v24 + v58);
  *char v59 = *v60;
  v59[1] = v60[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v61 = v241[11];
  uint64_t v62 = (char *)v23 + v61;
  unint64_t v63 = (char *)v24 + v61;
  uint64_t v64 = sub_249AEB808();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 24))(v62, v63, v64);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  *(void *)&v62[*(int *)(v65 + 52)] = *(void *)&v63[*(int *)(v65 + 52)];
  return v240;
}

uint64_t initializeWithTake for SlotView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  char v8 = (const void *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA78);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA8);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v13 = sub_249AEB808();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  long long v17 = *(_OWORD *)(a2 + v14 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)(a2 + v14);
  *(_OWORD *)(v15 + 16) = v17;
  long long v18 = *(_OWORD *)(a2 + v14 + 48);
  *(_OWORD *)(v15 + 32) = *(_OWORD *)(a2 + v14 + 32);
  *(_OWORD *)(v15 + 48) = v18;
  long long v19 = *(_OWORD *)(a2 + v14 + 80);
  *(_OWORD *)(v15 + 64) = *(_OWORD *)(a2 + v14 + 64);
  *(_OWORD *)(v15 + 80) = v19;
  *(_OWORD *)(v15 + 96) = *(_OWORD *)(a2 + v14 + 96);
  *(void *)(v15 + 112) = *(void *)(a2 + v14 + 112);
  *(_OWORD *)(v15 + 120) = *(_OWORD *)(a2 + v14 + 120);
  uint64_t v20 = (int *)type metadata accessor for Slot();
  uint64_t v21 = v20[9];
  uint64_t v22 = (char *)(v15 + v21);
  long long v23 = (char *)(v16 + v21);
  uint64_t v24 = type metadata accessor for Instrument();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    uint64_t v27 = sub_249AEB808();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v22, v23, v27);
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
    *(void *)&v22[*(int *)(v28 + 52)] = *(void *)&v23[*(int *)(v28 + 52)];
    memcpy(&v22[*(int *)(v24 + 20)], &v23[*(int *)(v24 + 20)], 0x200uLL);
    uint64_t v29 = *(int *)(v24 + 24);
    long long v30 = &v22[v29];
    uint64_t v31 = &v23[v29];
    long long v32 = *((_OWORD *)v31 + 1);
    *(_OWORD *)long long v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v32;
    *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  *(_OWORD *)(v15 + v20[10]) = *(_OWORD *)(v16 + v20[10]);
  uint64_t v33 = v20[11];
  uint64_t v34 = v15 + v33;
  uint64_t v35 = v16 + v33;
  uint64_t v36 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  *(void *)(v34 + *(int *)(v37 + 52)) = *(void *)(v35 + *(int *)(v37 + 52));
  return a1;
}

uint64_t assignWithTake for SlotView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v6;
  sub_249A15424(v7, v8, v9);
  char v10 = *(unsigned char *)(a2 + 32);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v10;
  sub_2499AAF18(v11, v12);
  if (a1 != a2)
  {
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    sub_2498D60E8(a1 + v13, &qword_2696DFA78);
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA78);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
      {
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA8);
        memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        uint64_t v20 = sub_249AEB808();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v14, v15, v20);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  uint64_t v21 = *(int *)(a3 + 28);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  if (*(void *)(a1 + v21 + 40) < 2uLL) {
    goto LABEL_11;
  }
  unint64_t v24 = *(void *)(v23 + 40);
  if (v24 < 2)
  {
    sub_2498D60E8(v22, &qword_2696E1880);
LABEL_11:
    long long v25 = *(_OWORD *)(v23 + 16);
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v25;
    *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
    goto LABEL_13;
  }
  *(void *)uint64_t v22 = *(void *)v23;
  *(_OWORD *)(v22 + 8) = *(_OWORD *)(v23 + 8);
  *(void *)(v22 + 24) = *(void *)(v23 + 24);
  *(void *)(v22 + 32) = *(void *)(v23 + 32);
  *(void *)(v22 + 40) = v24;
  swift_bridgeObjectRelease();
LABEL_13:
  long long v26 = *(_OWORD *)(v23 + 64);
  *(_OWORD *)(v22 + 48) = *(_OWORD *)(v23 + 48);
  *(_OWORD *)(v22 + 64) = v26;
  long long v27 = *(_OWORD *)(v23 + 96);
  *(_OWORD *)(v22 + 80) = *(_OWORD *)(v23 + 80);
  *(_OWORD *)(v22 + 96) = v27;
  *(_OWORD *)(v22 + 112) = *(_OWORD *)(v23 + 112);
  *(void *)(v22 + 128) = *(void *)(v23 + 128);
  swift_bridgeObjectRelease();
  uint64_t v116 = (int *)type metadata accessor for Slot();
  uint64_t v28 = v116[9];
  uint64_t v29 = (char *)(v22 + v28);
  long long v30 = (char *)(v23 + v28);
  uint64_t v31 = type metadata accessor for Instrument();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      uint64_t v54 = sub_249AEB808();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 40))(v29, v30, v54);
      uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
      *(void *)&v29[*(int *)(v55 + 52)] = *(void *)&v30[*(int *)(v55 + 52)];
      uint64_t v56 = *(int *)(v31 + 20);
      uint64_t v57 = &v29[v56];
      uint64_t v58 = &v30[v56];
      uint64_t v59 = *(void *)v57;
      uint64_t v60 = *((void *)v57 + 1);
      uint64_t v61 = (void *)*((void *)v57 + 2);
      uint64_t v62 = (void *)*((void *)v57 + 3);
      unint64_t v63 = (void *)*((void *)v57 + 4);
      uint64_t v64 = (void *)*((void *)v57 + 5);
      uint64_t v65 = *((void *)v57 + 6);
      uint64_t v66 = *((void *)v57 + 7);
      long long v67 = *((_OWORD *)v57 + 4);
      long long v68 = *((_OWORD *)v57 + 5);
      long long v69 = *((_OWORD *)v57 + 6);
      long long v70 = *((_OWORD *)v57 + 7);
      long long v71 = *((_OWORD *)v57 + 8);
      long long v72 = *((_OWORD *)v57 + 9);
      long long v73 = *((_OWORD *)v57 + 10);
      long long v74 = *((_OWORD *)v57 + 11);
      long long v75 = *((_OWORD *)v57 + 12);
      long long v76 = *((_OWORD *)v57 + 13);
      long long v77 = *((_OWORD *)v57 + 14);
      long long v78 = *((_OWORD *)v57 + 15);
      long long v79 = *((_OWORD *)v57 + 16);
      long long v80 = *((_OWORD *)v57 + 17);
      long long v81 = *((_OWORD *)v57 + 18);
      long long v82 = *((_OWORD *)v57 + 19);
      long long v83 = *((_OWORD *)v57 + 20);
      long long v84 = *((_OWORD *)v57 + 21);
      long long v85 = *((_OWORD *)v57 + 22);
      long long v86 = *((_OWORD *)v57 + 23);
      long long v87 = *((_OWORD *)v57 + 24);
      long long v88 = *((_OWORD *)v57 + 25);
      long long v89 = *((_OWORD *)v57 + 26);
      long long v90 = *((_OWORD *)v57 + 27);
      long long v91 = *((_OWORD *)v57 + 28);
      long long v92 = *((_OWORD *)v57 + 29);
      long long v93 = *((_OWORD *)v57 + 30);
      unint64_t v94 = *((void *)v57 + 62);
      long long v95 = *((_OWORD *)v58 + 1);
      *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
      *((_OWORD *)v57 + 1) = v95;
      long long v96 = *((_OWORD *)v58 + 3);
      *((_OWORD *)v57 + 2) = *((_OWORD *)v58 + 2);
      *((_OWORD *)v57 + 3) = v96;
      long long v97 = *((_OWORD *)v58 + 5);
      *((_OWORD *)v57 + 4) = *((_OWORD *)v58 + 4);
      *((_OWORD *)v57 + 5) = v97;
      long long v98 = *((_OWORD *)v58 + 7);
      *((_OWORD *)v57 + 6) = *((_OWORD *)v58 + 6);
      *((_OWORD *)v57 + 7) = v98;
      long long v99 = *((_OWORD *)v58 + 9);
      *((_OWORD *)v57 + 8) = *((_OWORD *)v58 + 8);
      *((_OWORD *)v57 + 9) = v99;
      long long v100 = *((_OWORD *)v58 + 11);
      *((_OWORD *)v57 + 10) = *((_OWORD *)v58 + 10);
      *((_OWORD *)v57 + 11) = v100;
      long long v101 = *((_OWORD *)v58 + 13);
      *((_OWORD *)v57 + 12) = *((_OWORD *)v58 + 12);
      *((_OWORD *)v57 + 13) = v101;
      long long v102 = *((_OWORD *)v58 + 15);
      *((_OWORD *)v57 + 14) = *((_OWORD *)v58 + 14);
      *((_OWORD *)v57 + 15) = v102;
      long long v103 = *((_OWORD *)v58 + 17);
      *((_OWORD *)v57 + 16) = *((_OWORD *)v58 + 16);
      *((_OWORD *)v57 + 17) = v103;
      long long v104 = *((_OWORD *)v58 + 19);
      *((_OWORD *)v57 + 18) = *((_OWORD *)v58 + 18);
      *((_OWORD *)v57 + 19) = v104;
      long long v105 = *((_OWORD *)v58 + 21);
      *((_OWORD *)v57 + 20) = *((_OWORD *)v58 + 20);
      *((_OWORD *)v57 + 21) = v105;
      long long v106 = *((_OWORD *)v58 + 23);
      *((_OWORD *)v57 + 22) = *((_OWORD *)v58 + 22);
      *((_OWORD *)v57 + 23) = v106;
      long long v107 = *((_OWORD *)v58 + 25);
      *((_OWORD *)v57 + 24) = *((_OWORD *)v58 + 24);
      *((_OWORD *)v57 + 25) = v107;
      long long v108 = *((_OWORD *)v58 + 27);
      *((_OWORD *)v57 + 26) = *((_OWORD *)v58 + 26);
      *((_OWORD *)v57 + 27) = v108;
      long long v109 = *((_OWORD *)v58 + 29);
      *((_OWORD *)v57 + 28) = *((_OWORD *)v58 + 28);
      *((_OWORD *)v57 + 29) = v109;
      long long v110 = *((_OWORD *)v58 + 31);
      *((_OWORD *)v57 + 30) = *((_OWORD *)v58 + 30);
      *((_OWORD *)v57 + 31) = v110;
      sub_2498FCAAC(v59, v60, v61, v62, v63, v64, v65, v66, (void *)v67, *((void **)&v67 + 1), (void *)v68, *((unint64_t *)&v68 + 1), v69, *((uint64_t *)&v69 + 1), v70, *((uint64_t *)&v70 + 1), v71, *((uint64_t *)&v71 + 1), v72,
        *((uint64_t *)&v72 + 1),
        (void *)v73,
        *((uint64_t *)&v73 + 1),
        v74,
        *((uint64_t *)&v74 + 1),
        v75,
        *((uint64_t *)&v75 + 1),
        v76,
        *((void **)&v76 + 1),
        (void *)v77,
        *((uint64_t *)&v77 + 1),
        v78,
        *((uint64_t *)&v78 + 1),
        v79,
        *((uint64_t *)&v79 + 1),
        v80,
        *((uint64_t *)&v80 + 1),
        v81,
        *((uint64_t *)&v81 + 1),
        v82,
        *((uint64_t *)&v82 + 1),
        v83,
        *((unint64_t *)&v83 + 1),
        v84,
        *((uint64_t *)&v84 + 1),
        v85,
        SBYTE8(v85),
        v86,
        *((uint64_t *)&v86 + 1),
        v87,
        *((uint64_t *)&v87 + 1),
        v88,
        SBYTE8(v88),
        v89,
        *((uint64_t *)&v89 + 1),
        v90,
        *((uint64_t *)&v90 + 1),
        v91,
        SBYTE8(v91),
        v92,
        *((uint64_t *)&v92 + 1),
        v93,
        *((uint64_t *)&v93 + 1),
        v94);
      uint64_t v111 = *(int *)(v31 + 24);
      long long v112 = &v29[v111];
      long long v113 = &v30[v111];
      *(void *)long long v112 = *(void *)&v30[v111];
      swift_release();
      uint64_t v114 = *((void *)v113 + 2);
      *((void *)v112 + 1) = *((void *)v113 + 1);
      *((void *)v112 + 2) = v114;
      swift_bridgeObjectRelease();
      v112[24] = v113[24];
      v112[25] = v113[25];
      uint64_t v115 = *((void *)v113 + 5);
      *((void *)v112 + 4) = *((void *)v113 + 4);
      *((void *)v112 + 5) = v115;
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    sub_249A2F470((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for Instrument);
    goto LABEL_18;
  }
  if (v35)
  {
LABEL_18:
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
    memcpy(v29, v30, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v36 = sub_249AEB808();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v29, v30, v36);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  *(void *)&v29[*(int *)(v37 + 52)] = *(void *)&v30[*(int *)(v37 + 52)];
  memcpy(&v29[*(int *)(v31 + 20)], &v30[*(int *)(v31 + 20)], 0x200uLL);
  uint64_t v38 = *(int *)(v31 + 24);
  uint64_t v39 = &v29[v38];
  int v40 = &v30[v38];
  long long v41 = *((_OWORD *)v40 + 1);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *((_OWORD *)v39 + 1) = v41;
  *((_OWORD *)v39 + 2) = *((_OWORD *)v40 + 2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
LABEL_19:
  uint64_t v43 = v116[10];
  uint64_t v44 = (void *)(v22 + v43);
  uint64_t v45 = (uint64_t *)(v23 + v43);
  uint64_t v47 = *v45;
  uint64_t v46 = v45[1];
  *uint64_t v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  uint64_t v48 = v116[11];
  uint64_t v49 = v22 + v48;
  uint64_t v50 = v23 + v48;
  uint64_t v51 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 40))(v49, v50, v51);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  *(void *)(v49 + *(int *)(v52 + 52)) = *(void *)(v50 + *(int *)(v52 + 52));
  return a1;
}

uint64_t getEnumTagSinglePayload for SlotView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249A2EC84);
}

uint64_t sub_249A2EC84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3928);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      char v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for Slot();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for SlotView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249A2EDC0);
}

uint64_t sub_249A2EDC0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 16) = -(char)a2;
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3928);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      char v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for Slot();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_249A2EEEC()
{
  sub_249A196A8();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Slot();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_249A2EFC8()
{
  return sub_249A2F238(&qword_2696E3C30, &qword_2696E3C38, (void (*)(void))sub_249A2F004);
}

unint64_t sub_249A2F004()
{
  unint64_t result = qword_2696E3C40;
  if (!qword_2696E3C40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E3C48);
    sub_249A2F0A4();
    sub_2498D0A3C(&qword_2696E3C60, &qword_2696E3C68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3C40);
  }
  return result;
}

unint64_t sub_249A2F0A4()
{
  unint64_t result = qword_2696E3C50;
  if (!qword_2696E3C50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E3C58);
    sub_2498D0A3C(&qword_2696E3C60, &qword_2696E3C68);
    sub_2498D0A3C(&qword_2696E3C70, &qword_2696E3C78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3C50);
  }
  return result;
}

unint64_t sub_249A2F168()
{
  unint64_t result = qword_2696E3CB0;
  if (!qword_2696E3CB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E3CA8);
    sub_249A2F238(&qword_2696E3CB8, &qword_2696E3CA0, (void (*)(void))sub_249A2F2B0);
    sub_249A2F348(&qword_2696E3CD0, (void (*)(uint64_t))type metadata accessor for InstrumentView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3CB0);
  }
  return result;
}

uint64_t sub_249A2F238(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249A2F2B0()
{
  unint64_t result = qword_2696E3CC0;
  if (!qword_2696E3CC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E3968);
    sub_2498D0A3C(&qword_2696E3CC8, &qword_2696E3998);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3CC0);
  }
  return result;
}

uint64_t sub_249A2F348(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249A2F3A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_249A2F408(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_249A2F470(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for RemoteNotificationContainer(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_249934D7C(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  int v2 = *(unsigned __int8 *)(a1 + 80);
  if (v2 != 255) {
    sub_249934DE4(*(void *)(a1 + 64), *(void *)(a1 + 72), v2);
  }
  if (*(void *)(a1 + 96))
  {
    swift_bridgeObjectRelease();
    swift_release();
  }

  return swift_release();
}

uint64_t initializeWithCopy for RemoteNotificationContainer(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  char v9 = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  sub_2499ACFC4(v5, v6, v7, v8, v9);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = v9;
  int v10 = *(unsigned __int8 *)(a2 + 80);
  if (v10 == 255)
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  }
  else
  {
    uint64_t v11 = *(void *)(a2 + 64);
    uint64_t v12 = *(void *)(a2 + 72);
    sub_2499AD02C(v11, v12, *(unsigned char *)(a2 + 80));
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = v12;
    *(unsigned char *)(a1 + 80) = v10;
  }
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  uint64_t v13 = *(void *)(a2 + 96);
  if (v13)
  {
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v13;
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
  }
  uint64_t v14 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v14;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RemoteNotificationContainer(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  char v8 = *(unsigned char *)(a2 + 56);
  sub_2499ACFC4(v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  char v13 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v8;
  sub_249934D7C(v9, v10, v11, v12, v13);
  uint64_t v14 = (long long *)(a1 + 64);
  uint64_t v15 = (long long *)(a2 + 64);
  int v16 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v16 == 255)
    {
      long long v25 = *v15;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *uint64_t v14 = v25;
    }
    else
    {
      uint64_t v22 = *(void *)(a2 + 64);
      uint64_t v23 = *(void *)(a2 + 72);
      sub_2499AD02C(v22, v23, *(unsigned char *)(a2 + 80));
      *(void *)(a1 + 64) = v22;
      *(void *)(a1 + 72) = v23;
      *(unsigned char *)(a1 + 80) = v16;
    }
  }
  else if (v16 == 255)
  {
    sub_249A2879C(a1 + 64);
    char v24 = *(unsigned char *)(a2 + 80);
    *uint64_t v14 = *v15;
    *(unsigned char *)(a1 + 80) = v24;
  }
  else
  {
    uint64_t v17 = *(void *)(a2 + 64);
    uint64_t v18 = *(void *)(a2 + 72);
    sub_2499AD02C(v17, v18, *(unsigned char *)(a2 + 80));
    uint64_t v19 = *(void *)(a1 + 64);
    uint64_t v20 = *(void *)(a1 + 72);
    *(void *)(a1 + 64) = v17;
    *(void *)(a1 + 72) = v18;
    char v21 = *(unsigned char *)(a1 + 80);
    *(unsigned char *)(a1 + 80) = v16;
    sub_249934DE4(v19, v20, v21);
  }
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  long long v26 = (_OWORD *)(a1 + 88);
  long long v27 = (_OWORD *)(a2 + 88);
  uint64_t v28 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96))
  {
    if (v28)
    {
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249A287D0(a1 + 88);
      uint64_t v29 = *(void *)(a2 + 104);
      *long long v26 = *v27;
      *(void *)(a1 + 104) = v29;
    }
  }
  else if (v28)
  {
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    long long v30 = *v27;
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *long long v26 = v30;
  }
  uint64_t v31 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v31;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for RemoteNotificationContainer(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  char v10 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v5;
  sub_249934D7C(v6, v7, v8, v9, v10);
  uint64_t v11 = (_OWORD *)(a2 + 64);
  int v12 = *(unsigned __int8 *)(a1 + 80);
  if (v12 != 255)
  {
    int v13 = *(unsigned __int8 *)(a2 + 80);
    if (v13 != 255)
    {
      uint64_t v14 = *(void *)(a1 + 64);
      uint64_t v15 = *(void *)(a1 + 72);
      *(_OWORD *)(a1 + 64) = *v11;
      *(unsigned char *)(a1 + 80) = v13;
      sub_249934DE4(v14, v15, v12);
      goto LABEL_6;
    }
    sub_249A2879C(a1 + 64);
  }
  *(_OWORD *)(a1 + 64) = *v11;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
LABEL_6:
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  if (!*(void *)(a1 + 96))
  {
LABEL_10:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    goto LABEL_11;
  }
  uint64_t v16 = *(void *)(a2 + 96);
  if (!v16)
  {
    sub_249A287D0(a1 + 88);
    goto LABEL_10;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v16;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
LABEL_11:
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteNotificationContainer(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteNotificationContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteNotificationContainer()
{
  return &type metadata for RemoteNotificationContainer;
}

uint64_t sub_249A2FA74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249A2FA90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v71 = a1;
  uint64_t v2 = sub_249AEB908();
  uint64_t v69 = *(void *)(v2 - 8);
  uint64_t v70 = v2;
  MEMORY[0x270FA5388](v2);
  long long v68 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for NotificationView(0);
  char v5 = (int *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  long long v73 = (char *)&v52 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFAC0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v67 = (uint64_t)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3CD8);
  MEMORY[0x270FA5388](v65);
  uint64_t v66 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v63 = *v1;
  uint64_t v13 = *((void *)v1 + 1);
  uint64_t v14 = *((void *)v1 + 2);
  uint64_t v15 = *((void *)v1 + 3);
  uint64_t v16 = *((void *)v1 + 4);
  uint64_t v17 = *((void *)v1 + 6);
  uint64_t v55 = *((void *)v1 + 5);
  uint64_t v52 = v17;
  uint64_t v18 = *((void *)v1 + 8);
  uint64_t v56 = *((void *)v1 + 9);
  uint64_t v57 = v18;
  LODWORD(v62) = v1[81];
  uint64_t v19 = *((void *)v1 + 11);
  uint64_t v59 = *((void *)v1 + 12);
  uint64_t v60 = v19;
  uint64_t v58 = *((void *)v1 + 13);
  uint64_t v61 = *((void *)v1 + 14);
  uint64_t v72 = *((void *)v1 + 15);
  unsigned __int8 v20 = v1[56];
  int v53 = v20;
  int v54 = v1[80];
  *uint64_t v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF8);
  swift_storeEnumTagMultiPayload();
  char v21 = (uint64_t *)((char *)v7 + v5[7]);
  *char v21 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = (uint64_t *)((char *)v7 + v5[8]);
  *uint64_t v22 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF0);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = (uint64_t *)((char *)v7 + v5[9]);
  *uint64_t v23 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  char v24 = (char *)v7 + v5[10];
  uint64_t v64 = v13;
  *(void *)char v24 = v13;
  *((void *)v24 + 1) = v14;
  uint64_t v25 = v14;
  *((void *)v24 + 2) = v15;
  *((void *)v24 + 3) = v16;
  uint64_t v26 = v55;
  *((void *)v24 + 4) = v55;
  *((void *)v24 + 5) = v17;
  v24[48] = v20;
  uint64_t v27 = v56;
  uint64_t v28 = v57;
  *((void *)v24 + 7) = v57;
  *((void *)v24 + 8) = v27;
  LOBYTE(v5) = v54;
  v24[72] = v54;
  v24[73] = v62;
  uint64_t v30 = v59;
  uint64_t v29 = v60;
  *((void *)v24 + 10) = v60;
  *((void *)v24 + 11) = v30;
  uint64_t v31 = v61;
  *((void *)v24 + 12) = v58;
  *((void *)v24 + 13) = v31;
  uint64_t v32 = (uint64_t)v73;
  *((void *)v24 + 14) = v72;
  uint64_t v33 = (uint64_t)v7;
  uint64_t v34 = v25;
  sub_249A30018(v33, v32);
  uint64_t v62 = v34;
  swift_bridgeObjectRetain();
  sub_2499ACFC4(v15, v16, v26, v52, v53);
  sub_249A28280(v28, v27, (char)v5);
  sub_249A28294(v29, v30);
  swift_retain();
  LODWORD(v5) = sub_249AEBB68();
  if (v5 == sub_249AEBB68()) {
    uint64_t v35 = sub_249AECC08();
  }
  else {
    uint64_t v35 = sub_249AECC18();
  }
  uint64_t v37 = v67;
  uint64_t v38 = (uint64_t)v73;
  sub_2499002D4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v67, 0.0, 1, INFINITY, 0, v35, v36);
  sub_249A3007C(v38);
  if (qword_2696DD630 != -1) {
    swift_once();
  }
  uint64_t v39 = v70;
  uint64_t v40 = __swift_project_value_buffer(v70, (uint64_t)qword_26972C730);
  uint64_t v42 = v68;
  uint64_t v41 = v69;
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 16);
  v43(v68, v40, v39);
  uint64_t v74 = 540697705;
  unint64_t v75 = 0xE400000000000000;
  swift_bridgeObjectRetain();
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  uint64_t v44 = v74;
  unint64_t v45 = v75;
  uint64_t v46 = (uint64_t)v66;
  uint64_t v47 = &v66[*(int *)(v65 + 36)];
  v43(v47, (uint64_t)v42, v39);
  uint64_t v48 = type metadata accessor for AppearanceLogger();
  uint64_t v49 = &v47[*(int *)(v48 + 20)];
  *(void *)uint64_t v49 = "Remote Notification";
  *((void *)v49 + 1) = 19;
  v49[16] = 2;
  uint64_t v50 = (uint64_t *)&v47[*(int *)(v48 + 24)];
  *uint64_t v50 = v44;
  v50[1] = v45;
  sub_249A300D8(v37, v46);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v39);
  sub_249A30140(v37);
  return sub_249A301A0(v46, v71);
}

uint64_t sub_249A30018(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NotificationView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_249A3007C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NotificationView(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249A300D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFAC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249A30140(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFAC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249A301A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3CD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_249A3020C()
{
  unint64_t result = qword_2696E3CE0;
  if (!qword_2696E3CE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E3CD8);
    sub_249A302B8();
    sub_249A30364(&qword_2696E3CF8, (void (*)(uint64_t))type metadata accessor for AppearanceLogger);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3CE0);
  }
  return result;
}

unint64_t sub_249A302B8()
{
  unint64_t result = qword_2696E3CE8;
  if (!qword_2696E3CE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DFAC0);
    sub_249A30364(&qword_2696E3CF0, (void (*)(uint64_t))type metadata accessor for NotificationView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3CE8);
  }
  return result;
}

uint64_t sub_249A30364(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.Style.description.getter()
{
  sub_2499457D8(v0, (uint64_t)v3);
  sub_2499457D8((uint64_t)v3, (uint64_t)v4);
  int v1 = sub_249945834((uint64_t)v4);
  sub_249945840((uint64_t)v4);
  if (v1 == 1) {
    return 0xD000000000000012;
  }
  else {
    return 0x676E695269676944;
  }
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.Style.hash(into:)(uint64_t a1)
{
  sub_2499457D8(v1, (uint64_t)v5);
  sub_2499457D8((uint64_t)v5, (uint64_t)v6);
  int v3 = sub_249945834((uint64_t)v6);
  sub_249945840((uint64_t)v6);
  sub_249AEE348();
  if (v3 == 1)
  {
    PowermeterDataIdentifiers.hash(into:)();
    Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)(a1);
  }
  return Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)(a1);
}

uint64_t sub_249A30594()
{
  if (*v0) {
    return 0x74656D7265776F70;
  }
  else {
    return 0x72614269676964;
  }
}

uint64_t sub_249A305D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A35A4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A305FC(uint64_t a1)
{
  unint64_t v2 = sub_249A33570();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A30638(uint64_t a1)
{
  unint64_t v2 = sub_249A33570();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_249A30674(uint64_t a1)
{
  unint64_t v2 = sub_249A3366C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A306B0(uint64_t a1)
{
  unint64_t v2 = sub_249A3366C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_249A306EC(uint64_t a1)
{
  unint64_t v2 = sub_249A335C4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A30728(uint64_t a1)
{
  unint64_t v2 = sub_249A335C4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.Style.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3D00);
  uint64_t v29 = *(void *)(v4 - 8);
  uint64_t v30 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3D08);
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3D10);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2499457D8(v2, (uint64_t)v32);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A33570();
  sub_249AEE468();
  sub_2499457D8((uint64_t)v32, (uint64_t)v33);
  LODWORD(a1) = sub_249945834((uint64_t)v33);
  uint64_t v14 = (uint64_t (**)(char *, uint64_t))(v11 + 8);
  uint64_t v15 = (long long *)sub_249945840((uint64_t)v33);
  if (a1 == 1)
  {
    v31[0] = 1;
    sub_249A335C4();
    sub_249AEDE48();
    memcpy(v31, v15, sizeof(v31));
    sub_249A33618();
    uint64_t v16 = v30;
    sub_249AEDF08();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v16);
  }
  else
  {
    v31[0] = 0;
    sub_249A3366C();
    sub_249AEDE48();
    long long v17 = *v15;
    long long v18 = v15[2];
    *(_OWORD *)&v31[16] = v15[1];
    *(_OWORD *)&v31[32] = v18;
    *(_OWORD *)uint64_t v31 = v17;
    long long v19 = v15[3];
    long long v20 = v15[4];
    long long v21 = v15[6];
    *(_OWORD *)&v31[80] = v15[5];
    *(_OWORD *)&v31[96] = v21;
    *(_OWORD *)&v31[48] = v19;
    *(_OWORD *)&v31[64] = v20;
    long long v22 = v15[7];
    long long v23 = v15[8];
    long long v24 = v15[9];
    *(_DWORD *)&v31[160] = *((_DWORD *)v15 + 40);
    *(_OWORD *)&v31[128] = v23;
    *(_OWORD *)&v31[144] = v24;
    *(_OWORD *)&v31[112] = v22;
    sub_249A336C0();
    uint64_t v25 = v28;
    sub_249AEDF08();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v25);
  }
  return (*v14)(v13, v10);
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.Style.hashValue.getter()
{
  sub_2499457D8(v0, (uint64_t)v4);
  sub_249AEE338();
  sub_2499457D8((uint64_t)v4, (uint64_t)v5);
  int v1 = sub_249945834((uint64_t)v5);
  sub_249945840((uint64_t)v5);
  sub_249AEE348();
  if (v1 == 1)
  {
    PowermeterDataIdentifiers.hash(into:)();
    Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)((uint64_t)v3);
  }
  Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)((uint64_t)v3);
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.Style.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3D40);
  uint64_t v27 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3D48);
  uint64_t v26 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3D50);
  uint64_t v28 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  uint64_t v30 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v11);
  sub_249A33570();
  uint64_t v12 = v34;
  sub_249AEE428();
  if (!v12)
  {
    uint64_t v13 = v29;
    uint64_t v34 = sub_249AEDE18();
    uint64_t v14 = v8;
    if (*(void *)(v34 + 16) == 1)
    {
      if (*(unsigned char *)(v34 + 32))
      {
        v32[0] = 1;
        sub_249A335C4();
        uint64_t v15 = v4;
        uint64_t v16 = v14;
        sub_249AEDD38();
        sub_249A33714();
        sub_249AEDE08();
        uint64_t v17 = v28;
        (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v13);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v16);
        memcpy(v31, v32, sizeof(v31));
        sub_249A33768((uint64_t)v31);
        long long v23 = v31;
      }
      else
      {
        v32[0] = 0;
        sub_249A3366C();
        sub_249AEDD38();
        sub_249A337C0();
        sub_249AEDE08();
        long long v22 = (void (**)(char *, uint64_t))(v28 + 8);
        (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v5);
        swift_bridgeObjectRelease();
        (*v22)(v10, v8);
        *(_OWORD *)&v32[128] = *(_OWORD *)&v31[128];
        *(_OWORD *)&v32[144] = *(_OWORD *)&v31[144];
        *(_DWORD *)&v32[160] = *(_DWORD *)&v31[160];
        *(_OWORD *)&v32[64] = *(_OWORD *)&v31[64];
        *(_OWORD *)&v32[80] = *(_OWORD *)&v31[80];
        *(_OWORD *)&v32[96] = *(_OWORD *)&v31[96];
        *(_OWORD *)&v32[112] = *(_OWORD *)&v31[112];
        *(_OWORD *)uint64_t v32 = *(_OWORD *)v31;
        *(_OWORD *)&v32[16] = *(_OWORD *)&v31[16];
        *(_OWORD *)&v32[32] = *(_OWORD *)&v31[32];
        *(_OWORD *)&v32[48] = *(_OWORD *)&v31[48];
        sub_249A33814((uint64_t)v32);
        long long v23 = v32;
      }
      sub_2499457D8((uint64_t)v23, (uint64_t)v33);
      sub_2499457D8((uint64_t)v33, v25);
    }
    else
    {
      uint64_t v18 = sub_249AEDB08();
      swift_allocError();
      long long v20 = v19;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBD0);
      *long long v20 = &type metadata for Instrument.GaugeStyle.ProgressBarConfiguration.Style;
      sub_249AEDD48();
      sub_249AEDAE8();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, *MEMORY[0x263F8DCB0], v18);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v30);
}

uint64_t sub_249A311FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.GaugeStyle.ProgressBarConfiguration.Style.init(from:)(a1, a2);
}

uint64_t sub_249A31214(void *a1)
{
  return Instrument.GaugeStyle.ProgressBarConfiguration.Style.encode(to:)(a1);
}

uint64_t sub_249A31234()
{
  sub_2499457D8(v0, (uint64_t)v4);
  sub_249AEE338();
  sub_2499457D8((uint64_t)v4, (uint64_t)v5);
  int v1 = sub_249945834((uint64_t)v5);
  sub_249945840((uint64_t)v5);
  sub_249AEE348();
  if (v1 == 1)
  {
    PowermeterDataIdentifiers.hash(into:)();
    Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)((uint64_t)v3);
  }
  Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)((uint64_t)v3);
  return sub_249AEE388();
}

uint64_t sub_249A313A0()
{
  sub_2499457D8(v0, (uint64_t)v3);
  sub_2499457D8((uint64_t)v3, (uint64_t)v4);
  int v1 = sub_249945834((uint64_t)v4);
  sub_249945840((uint64_t)v4);
  if (v1 == 1) {
    return 0xD000000000000012;
  }
  else {
    return 0x676E695269676944;
  }
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.style.getter@<X0>(uint64_t a1@<X8>)
{
  sub_2499457D8(v1, (uint64_t)v4);
  sub_2499457D8((uint64_t)v4, a1);
  return sub_249A33868((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2498FC748);
}

void *Instrument.GaugeStyle.ProgressBarConfiguration.style.setter(uint64_t a1)
{
  sub_2499457D8(a1, (uint64_t)v3);
  sub_2499457D8((uint64_t)v3, (uint64_t)__src);
  memcpy(__dst, v1, 0x154uLL);
  sub_249A33868((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2498FDCF0);
  return memcpy(v1, __src, 0x154uLL);
}

uint64_t (*Instrument.GaugeStyle.ProgressBarConfiguration.style.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.init(style:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2499457D8(a1, (uint64_t)v4);
  return sub_2499457D8((uint64_t)v4, a2);
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.assets.getter()
{
  sub_2499457D8(v0, (uint64_t)v2);
  sub_2499457D8((uint64_t)v2, (uint64_t)v3);
  sub_249945834((uint64_t)v3);
  sub_249945840((uint64_t)v3);
  return MEMORY[0x263F8EE78];
}

uint64_t Instrument.GaugeStyle.DigiBarPowermeterConfiguration.assets.getter()
{
  return MEMORY[0x263F8EE78];
}

void *Instrument.GaugeStyle.ProgressBarConfiguration.restoreAssets(from:)()
{
  sub_2499457D8((uint64_t)v0, (uint64_t)v3);
  sub_2499457D8((uint64_t)v3, (uint64_t)v4);
  sub_249945834((uint64_t)v4);
  sub_249945840((uint64_t)v4);
  sub_2499457D8((uint64_t)v3, (uint64_t)__src);
  return memcpy(v0, __src, 0x154uLL);
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.description.getter()
{
  sub_2499457D8(v0, (uint64_t)v2);
  sub_2499457D8((uint64_t)v2, (uint64_t)v3);
  sub_249945834((uint64_t)v3);
  sub_249945840((uint64_t)v3);
  sub_249A33868((uint64_t)v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2498FC748);
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  sub_249A33868((uint64_t)v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2498FDCF0);
  return 0x206C6169646152;
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.hash(into:)(uint64_t a1)
{
  sub_2499457D8(v1, (uint64_t)v6);
  sub_2499457D8((uint64_t)v6, (uint64_t)v7);
  if (sub_249945834((uint64_t)v7) == 1)
  {
    sub_249945840((uint64_t)v7);
    sub_249AEE348();
    sub_2499457D8((uint64_t)v6, (uint64_t)&v5);
    uint64_t v3 = (void *)sub_249945840((uint64_t)&v5);
    sub_249A33BAC(v3);
    PowermeterDataIdentifiers.hash(into:)();
    Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)(a1);
    Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)(a1);
    return sub_249A33868((uint64_t)v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2498FDCF0);
  }
  else
  {
    sub_249945840((uint64_t)v7);
    sub_249AEE348();
    return Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)(a1);
  }
}

BOOL static Instrument.GaugeStyle.ProgressBarConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2499457D8(a1, (uint64_t)v6);
  sub_2499457D8(a2, (uint64_t)v7);
  sub_2499457D8((uint64_t)v6, (uint64_t)v5);
  sub_2499457D8((uint64_t)v7, (uint64_t)v4);
  return _s14CarPlayAssetUI10InstrumentV10GaugeStyleO24ProgressBarConfigurationV0G0O2eeoiySbAI_AItFZ_0((uint64_t)v5, (uint64_t)v4);
}

uint64_t sub_249A3195C()
{
  return 0x656C797473;
}

uint64_t sub_249A31970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656C797473 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249A31A00(uint64_t a1)
{
  unint64_t v2 = sub_249A33904();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A31A3C(uint64_t a1)
{
  unint64_t v2 = sub_249A33904();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3D68);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2499457D8(v1, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A33904();
  sub_249AEE468();
  sub_2499457D8((uint64_t)v10, (uint64_t)&v9);
  sub_249A33958();
  sub_249AEDF08();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.hashValue.getter()
{
  sub_2499457D8(v0, (uint64_t)v4);
  sub_249AEE338();
  sub_2499457D8((uint64_t)v4, (uint64_t)v5);
  int v1 = sub_249945834((uint64_t)v5);
  sub_249945840((uint64_t)v5);
  sub_249AEE348();
  if (v1 == 1)
  {
    PowermeterDataIdentifiers.hash(into:)();
    Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)((uint64_t)v3);
  }
  Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)((uint64_t)v3);
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v13 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3D80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A33904();
  sub_249AEE428();
  if (!v2)
  {
    uint64_t v8 = v13;
    sub_249A339AC();
    sub_249AEDE08();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    sub_2499457D8((uint64_t)&v12, (uint64_t)v10);
    sub_2499457D8((uint64_t)v10, (uint64_t)v11);
    memcpy(v8, v11, 0x154uLL);
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_249A31EF0()
{
  sub_2499457D8(v0, (uint64_t)v2);
  sub_2499457D8((uint64_t)v2, (uint64_t)v3);
  sub_249945834((uint64_t)v3);
  sub_249945840((uint64_t)v3);
  return MEMORY[0x263F8EE78];
}

void *sub_249A31F44()
{
  sub_2499457D8((uint64_t)v0, (uint64_t)v3);
  sub_2499457D8((uint64_t)v3, (uint64_t)v4);
  sub_249945834((uint64_t)v4);
  sub_249945840((uint64_t)v4);
  sub_2499457D8((uint64_t)v3, (uint64_t)__src);
  return memcpy(v0, __src, 0x154uLL);
}

uint64_t sub_249A31FB8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Instrument.GaugeStyle.ProgressBarConfiguration.init(from:)(a1, a2);
}

uint64_t sub_249A31FD0(void *a1)
{
  return Instrument.GaugeStyle.ProgressBarConfiguration.encode(to:)(a1);
}

uint64_t sub_249A31FEC(uint64_t a1)
{
  sub_2499457D8(v1, (uint64_t)v5);
  sub_2499457D8((uint64_t)v5, (uint64_t)v6);
  int v3 = sub_249945834((uint64_t)v6);
  sub_249945840((uint64_t)v6);
  sub_249AEE348();
  if (v3 == 1)
  {
    PowermeterDataIdentifiers.hash(into:)();
    Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)(a1);
  }
  return Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)(a1);
}

BOOL sub_249A32148(uint64_t a1, uint64_t a2)
{
  sub_2499457D8(a1, (uint64_t)v6);
  sub_2499457D8(a2, (uint64_t)v7);
  sub_2499457D8((uint64_t)v6, (uint64_t)v5);
  sub_2499457D8((uint64_t)v7, (uint64_t)v4);
  return _s14CarPlayAssetUI10InstrumentV10GaugeStyleO24ProgressBarConfigurationV0G0O2eeoiySbAI_AItFZ_0((uint64_t)v5, (uint64_t)v4);
}

void Instrument.GaugeStyle.DigiBarPowermeterConfiguration.dataIdentifiers.getter(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 4);
  *(_DWORD *)a1 = *(_DWORD *)v1;
  *(_WORD *)(a1 + 4) = v2;
}

uint64_t Instrument.GaugeStyle.DigiBarPowermeterConfiguration.dataIdentifiers.setter(uint64_t result)
{
  __int16 v2 = *(_WORD *)(result + 4);
  *(_DWORD *)uint64_t v1 = *(_DWORD *)result;
  *(_WORD *)(v1 + 4) = v2;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DigiBarPowermeterConfiguration.dataIdentifiers.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DigiBarPowermeterConfiguration.consumedPowerConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 120);
  long long v3 = *(_OWORD *)(v1 + 152);
  v13[8] = *(_OWORD *)(v1 + 136);
  v13[9] = v3;
  int v14 = *(_DWORD *)(v1 + 168);
  long long v4 = *(_OWORD *)(v1 + 56);
  long long v5 = *(_OWORD *)(v1 + 88);
  v13[4] = *(_OWORD *)(v1 + 72);
  v13[5] = v5;
  v13[6] = *(_OWORD *)(v1 + 104);
  v13[7] = v2;
  long long v6 = *(_OWORD *)(v1 + 24);
  v13[0] = *(_OWORD *)(v1 + 8);
  v13[1] = v6;
  v13[2] = *(_OWORD *)(v1 + 40);
  v13[3] = v4;
  long long v7 = *(_OWORD *)(v1 + 120);
  long long v8 = *(_OWORD *)(v1 + 152);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v1 + 136);
  *(_OWORD *)(a1 + 144) = v8;
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(v1 + 168);
  long long v9 = *(_OWORD *)(v1 + 56);
  long long v10 = *(_OWORD *)(v1 + 88);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 72);
  *(_OWORD *)(a1 + 80) = v10;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v1 + 104);
  *(_OWORD *)(a1 + 112) = v7;
  long long v11 = *(_OWORD *)(v1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 48) = v9;
  return sub_249A33A00((uint64_t)v13);
}

__n128 Instrument.GaugeStyle.DigiBarPowermeterConfiguration.consumedPowerConfiguration.setter(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 120);
  long long v4 = *(_OWORD *)(v1 + 152);
  v14[8] = *(_OWORD *)(v1 + 136);
  v14[9] = v4;
  int v15 = *(_DWORD *)(v1 + 168);
  long long v5 = *(_OWORD *)(v1 + 56);
  long long v6 = *(_OWORD *)(v1 + 88);
  v14[4] = *(_OWORD *)(v1 + 72);
  v14[5] = v6;
  v14[6] = *(_OWORD *)(v1 + 104);
  v14[7] = v3;
  long long v7 = *(_OWORD *)(v1 + 24);
  v14[0] = *(_OWORD *)(v1 + 8);
  v14[1] = v7;
  uint64_t v14[2] = *(_OWORD *)(v1 + 40);
  v14[3] = v5;
  sub_249A33AAC((uint64_t)v14);
  long long v8 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 120) = *(_OWORD *)(a1 + 112);
  long long v9 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v1 + 136) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v1 + 152) = v9;
  long long v10 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 48);
  long long v11 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 88) = v11;
  *(_OWORD *)(v1 + 104) = v8;
  __n128 result = *(__n128 *)a1;
  long long v13 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 24) = v13;
  *(_DWORD *)(v1 + 168) = *(_DWORD *)(a1 + 160);
  *(_OWORD *)(v1 + 40) = v10;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DigiBarPowermeterConfiguration.consumedPowerConfiguration.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DigiBarPowermeterConfiguration.regenPowerConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 288);
  long long v3 = *(_OWORD *)(v1 + 320);
  long long v24 = *(_OWORD *)(v1 + 304);
  long long v25 = v3;
  long long v4 = *(_OWORD *)(v1 + 224);
  long long v5 = *(_OWORD *)(v1 + 256);
  long long v20 = *(_OWORD *)(v1 + 240);
  long long v6 = v20;
  long long v21 = v5;
  long long v7 = *(_OWORD *)(v1 + 256);
  long long v8 = *(_OWORD *)(v1 + 288);
  long long v22 = *(_OWORD *)(v1 + 272);
  long long v9 = v22;
  long long v23 = v8;
  long long v10 = *(_OWORD *)(v1 + 192);
  v17[0] = *(_OWORD *)(v1 + 176);
  v17[1] = v10;
  long long v11 = *(_OWORD *)(v1 + 224);
  long long v13 = *(_OWORD *)(v1 + 176);
  long long v12 = *(_OWORD *)(v1 + 192);
  long long v18 = *(_OWORD *)(v1 + 208);
  long long v14 = v18;
  long long v19 = v11;
  long long v15 = *(_OWORD *)(v1 + 320);
  *(_OWORD *)(a1 + 128) = v24;
  *(_OWORD *)(a1 + 144) = v15;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v2;
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v12;
  int v26 = *(_DWORD *)(v1 + 336);
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(v1 + 336);
  *(_OWORD *)(a1 + 32) = v14;
  *(_OWORD *)(a1 + 48) = v4;
  return sub_249A33A00((uint64_t)v17);
}

__n128 Instrument.GaugeStyle.DigiBarPowermeterConfiguration.regenPowerConfiguration.setter(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 320);
  v13[8] = *(_OWORD *)(v1 + 304);
  v13[9] = v3;
  int v14 = *(_DWORD *)(v1 + 336);
  long long v4 = *(_OWORD *)(v1 + 256);
  v13[4] = *(_OWORD *)(v1 + 240);
  v13[5] = v4;
  long long v5 = *(_OWORD *)(v1 + 288);
  v13[6] = *(_OWORD *)(v1 + 272);
  v13[7] = v5;
  long long v6 = *(_OWORD *)(v1 + 192);
  v13[0] = *(_OWORD *)(v1 + 176);
  v13[1] = v6;
  long long v7 = *(_OWORD *)(v1 + 224);
  v13[2] = *(_OWORD *)(v1 + 208);
  v13[3] = v7;
  sub_249A33AAC((uint64_t)v13);
  long long v8 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v1 + 304) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v1 + 320) = v8;
  *(_DWORD *)(v1 + 336) = *(_DWORD *)(a1 + 160);
  long long v9 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 240) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 256) = v9;
  long long v10 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 272) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 288) = v10;
  long long v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 176) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 192) = v11;
  __n128 result = *(__n128 *)(a1 + 48);
  *(_OWORD *)(v1 + 208) = *(_OWORD *)(a1 + 32);
  *(__n128 *)(v1 + 224) = result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DigiBarPowermeterConfiguration.regenPowerConfiguration.modify())()
{
  return nullsub_1;
}

double Instrument.GaugeStyle.DigiBarPowermeterConfiguration.init(consumedPowerConfiguration:regenPowerConfiguration:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a3 + 120) = *(_OWORD *)(a1 + 112);
  long long v4 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(a3 + 136) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(a3 + 152) = v4;
  long long v5 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a3 + 56) = *(_OWORD *)(a1 + 48);
  long long v6 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a3 + 72) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a3 + 88) = v6;
  *(_OWORD *)(a3 + 104) = v3;
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_DWORD *)(a3 + 168) = *(_DWORD *)(a1 + 160);
  *(_OWORD *)(a3 + 24) = v7;
  *(_OWORD *)(a3 + 40) = v5;
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a3 + 304) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a3 + 320) = v8;
  *(_DWORD *)(a3 + 336) = *(_DWORD *)(a2 + 160);
  long long v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a3 + 240) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a3 + 256) = v9;
  long long v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a3 + 272) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a3 + 288) = v10;
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a3 + 176) = *(_OWORD *)a2;
  *(_OWORD *)(a3 + 192) = v11;
  long long v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a3 + 208) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a3 + 224) = v12;
  *(void *)&double result = 640165136;
  *(_DWORD *)a3 = 640165136;
  *(_WORD *)(a3 + 4) = 14375;
  return result;
}

uint64_t Instrument.GaugeStyle.DigiBarPowermeterConfiguration.hash(into:)(uint64_t a1)
{
  return Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)(a1);
}

uint64_t sub_249A32610()
{
  unint64_t v1 = 0xD00000000000001ALL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000017;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E65644961746164;
  }
}

uint64_t sub_249A32684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A35B4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A326AC(uint64_t a1)
{
  unint64_t v2 = sub_249A33B58();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A326E8(uint64_t a1)
{
  unint64_t v2 = sub_249A33B58();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.GaugeStyle.DigiBarPowermeterConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3D90);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __int16 v9 = *(_WORD *)(v3 + 4);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A33B58();
  sub_249AEE468();
  LODWORD(v21) = *(_DWORD *)v3;
  WORD2(v21) = v9;
  char v32 = 0;
  sub_2499EA340();
  sub_249AEDF08();
  if (!v2)
  {
    long long v10 = *(_OWORD *)(v3 + 120);
    long long v11 = *(_OWORD *)(v3 + 152);
    long long v29 = *(_OWORD *)(v3 + 136);
    long long v30 = v11;
    int v31 = *(_DWORD *)(v3 + 168);
    long long v12 = *(_OWORD *)(v3 + 56);
    long long v13 = *(_OWORD *)(v3 + 88);
    long long v25 = *(_OWORD *)(v3 + 72);
    long long v26 = v13;
    long long v27 = *(_OWORD *)(v3 + 104);
    long long v28 = v10;
    long long v14 = *(_OWORD *)(v3 + 24);
    long long v21 = *(_OWORD *)(v3 + 8);
    long long v22 = v14;
    long long v23 = *(_OWORD *)(v3 + 40);
    long long v24 = v12;
    char v32 = 1;
    sub_249A336C0();
    sub_249AEDF08();
    long long v15 = *(_OWORD *)(v3 + 320);
    long long v29 = *(_OWORD *)(v3 + 304);
    long long v30 = v15;
    int v31 = *(_DWORD *)(v3 + 336);
    long long v16 = *(_OWORD *)(v3 + 256);
    long long v25 = *(_OWORD *)(v3 + 240);
    long long v26 = v16;
    long long v17 = *(_OWORD *)(v3 + 288);
    long long v27 = *(_OWORD *)(v3 + 272);
    long long v28 = v17;
    long long v18 = *(_OWORD *)(v3 + 192);
    long long v21 = *(_OWORD *)(v3 + 176);
    long long v22 = v18;
    long long v19 = *(_OWORD *)(v3 + 224);
    long long v23 = *(_OWORD *)(v3 + 208);
    long long v24 = v19;
    char v32 = 2;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Instrument.GaugeStyle.DigiBarPowermeterConfiguration.hashValue.getter()
{
  sub_249AEE338();
  PowermeterDataIdentifiers.hash(into:)();
  Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)((uint64_t)v1);
  Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)((uint64_t)v1);
  return sub_249AEE388();
}

void *Instrument.GaugeStyle.DigiBarPowermeterConfiguration.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3DA0);
  uint64_t v5 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A33B58();
  sub_249AEE428();
  if (v2) {
    return (void *)__swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  uint64_t v8 = v5;
  long long v21 = a2;
  v22[0] = 0;
  sub_2499EA394();
  sub_249AEDE08();
  int v19 = v24;
  int v20 = v23;
  int v17 = v26;
  int v18 = v25;
  int v9 = v27;
  int v10 = v28;
  char v52 = 1;
  sub_249A337C0();
  sub_249AEDE08();
  int v15 = v9;
  int v16 = v10;
  *(_OWORD *)((char *)&v65[7] + 2) = v60;
  *(_OWORD *)((char *)&v65[8] + 2) = v61;
  *(_OWORD *)((char *)&v65[9] + 2) = v62;
  *(_OWORD *)((char *)&v65[3] + 2) = v56;
  *(_OWORD *)((char *)&v65[4] + 2) = v57;
  *(_OWORD *)((char *)&v65[5] + 2) = v58;
  *(_OWORD *)((char *)&v65[6] + 2) = v59;
  *(_OWORD *)((char *)v65 + 2) = v53;
  *(_OWORD *)((char *)&v65[1] + 2) = v54;
  *(_DWORD *)((char *)&v65[10] + 2) = v63;
  *(_OWORD *)((char *)&v65[2] + 2) = v55;
  char v40 = 2;
  uint64_t v11 = v66;
  sub_249AEDE08();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v11);
  *(_OWORD *)&v22[304] = v49;
  *(_OWORD *)&v22[320] = v50;
  *(_OWORD *)&v22[240] = v45;
  *(_OWORD *)&v22[256] = v46;
  *(_OWORD *)&v22[288] = v48;
  *(_OWORD *)&v22[272] = v47;
  *(_OWORD *)&v22[176] = v41;
  *(_OWORD *)&v22[192] = v42;
  *(_OWORD *)&v22[224] = v44;
  *(_OWORD *)&v22[208] = v43;
  *(_OWORD *)&v64[116] = v48;
  *(_OWORD *)&v64[132] = v49;
  *(_OWORD *)&v64[148] = v50;
  *(_OWORD *)&v64[52] = v44;
  *(_OWORD *)&v64[68] = v45;
  *(_OWORD *)&v64[84] = v46;
  *(_OWORD *)&v64[100] = v47;
  *(_OWORD *)&v64[4] = v41;
  *(_OWORD *)&v64[20] = v42;
  *(_OWORD *)&v64[36] = v43;
  *(_OWORD *)&v22[104] = *(_OWORD *)((char *)&v65[6] + 2);
  *(_OWORD *)&v22[120] = *(_OWORD *)((char *)&v65[7] + 2);
  *(_OWORD *)&v22[136] = *(_OWORD *)((char *)&v65[8] + 2);
  *(_OWORD *)&v22[152] = *(_OWORD *)((char *)&v65[9] + 2);
  *(_OWORD *)&v22[56] = *(_OWORD *)((char *)&v65[3] + 2);
  *(_OWORD *)&v22[72] = *(_OWORD *)((char *)&v65[4] + 2);
  *(_OWORD *)&v22[88] = *(_OWORD *)((char *)&v65[5] + 2);
  *(_OWORD *)&v22[8] = *(_OWORD *)((char *)v65 + 2);
  *(_OWORD *)&v22[24] = *(_OWORD *)((char *)&v65[1] + 2);
  *(_DWORD *)&v22[336] = v51;
  *(_DWORD *)&v64[164] = v51;
  *(_DWORD *)&v22[168] = *(_DWORD *)((char *)&v65[10] + 2);
  *(_OWORD *)&v22[40] = *(_OWORD *)((char *)&v65[2] + 2);
  LOBYTE(v11) = v19;
  v22[0] = v20;
  v22[1] = v19;
  LOBYTE(v8) = v17;
  unsigned __int8 v12 = v18;
  v22[2] = v18;
  v22[3] = v17;
  LOBYTE(v10) = v15;
  v22[4] = v15;
  v22[5] = v16;
  memcpy(v21, v22, 0x154uLL);
  sub_249A33BAC(v22);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  long long v36 = v65[7];
  long long v37 = v65[8];
  *(_OWORD *)uint64_t v38 = v65[9];
  long long v32 = v65[3];
  long long v33 = v65[4];
  long long v34 = v65[5];
  long long v35 = v65[6];
  long long v29 = v65[0];
  long long v30 = v65[1];
  long long v31 = v65[2];
  *(_OWORD *)&v38[75] = *(_OWORD *)&v64[128];
  *(_OWORD *)&v38[83] = *(_OWORD *)&v64[144];
  *(_OWORD *)&v38[59] = *(_OWORD *)&v64[96];
  *(_OWORD *)&v38[67] = *(_OWORD *)&v64[112];
  *(_OWORD *)&v38[35] = *(_OWORD *)&v64[48];
  *(_OWORD *)&v38[43] = *(_OWORD *)&v64[64];
  *(_OWORD *)&v38[51] = *(_OWORD *)&v64[80];
  *(_OWORD *)&v38[11] = *(_OWORD *)v64;
  *(_OWORD *)&v38[19] = *(_OWORD *)&v64[16];
  unsigned __int8 v23 = v20;
  unsigned __int8 v24 = v11;
  unsigned __int8 v25 = v12;
  unsigned __int8 v26 = v8;
  unsigned __int8 v27 = v10;
  unsigned __int8 v28 = v16;
  *(void *)&v38[7] = *(void *)((char *)&v65[9] + 14);
  uint64_t v39 = *(void *)&v64[160];
  *(_OWORD *)&v38[27] = *(_OWORD *)&v64[32];
  return sub_249A33CD0(&v23);
}

void *sub_249A32F74@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Instrument.GaugeStyle.DigiBarPowermeterConfiguration.init(from:)(a1, a2);
}

uint64_t sub_249A32F8C(void *a1)
{
  return Instrument.GaugeStyle.DigiBarPowermeterConfiguration.encode(to:)(a1);
}

uint64_t sub_249A32FA8(uint64_t a1)
{
  return Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)(a1);
}

uint64_t sub_249A3307C()
{
  sub_249AEE338();
  PowermeterDataIdentifiers.hash(into:)();
  Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)((uint64_t)v1);
  Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)((uint64_t)v1);
  return sub_249AEE388();
}

uint64_t sub_249A33160()
{
  return MEMORY[0x263F8EE78];
}

BOOL _s14CarPlayAssetUI10InstrumentV10GaugeStyleO30DigiBarPowermeterConfigurationV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  __int16 v4 = *(_WORD *)(a1 + 4);
  __int16 v5 = *(_WORD *)(a2 + 4);
  LODWORD(v39) = *(_DWORD *)a1;
  WORD2(v39) = v4;
  LODWORD(v28) = *(_DWORD *)a2;
  WORD2(v28) = v5;
  if ((_s14CarPlayAssetUI25PowermeterDataIdentifiersV2eeoiySbAC_ACtFZ_0() & 1) == 0) {
    return 0;
  }
  long long v6 = *(_OWORD *)(a1 + 120);
  long long v7 = *(_OWORD *)(a1 + 152);
  long long v47 = *(_OWORD *)(a1 + 136);
  long long v48 = v7;
  int v49 = *(_DWORD *)(a1 + 168);
  long long v8 = *(_OWORD *)(a1 + 56);
  long long v9 = *(_OWORD *)(a1 + 88);
  long long v43 = *(_OWORD *)(a1 + 72);
  long long v44 = v9;
  long long v45 = *(_OWORD *)(a1 + 104);
  long long v46 = v6;
  long long v10 = *(_OWORD *)(a1 + 24);
  long long v39 = *(_OWORD *)(a1 + 8);
  long long v40 = v10;
  long long v41 = *(_OWORD *)(a1 + 40);
  long long v42 = v8;
  long long v11 = *(_OWORD *)(a2 + 120);
  long long v12 = *(_OWORD *)(a2 + 152);
  long long v36 = *(_OWORD *)(a2 + 136);
  long long v37 = v12;
  int v38 = *(_DWORD *)(a2 + 168);
  long long v13 = *(_OWORD *)(a2 + 56);
  long long v14 = *(_OWORD *)(a2 + 88);
  long long v32 = *(_OWORD *)(a2 + 72);
  long long v33 = v14;
  long long v34 = *(_OWORD *)(a2 + 104);
  long long v35 = v11;
  long long v15 = *(_OWORD *)(a2 + 24);
  long long v28 = *(_OWORD *)(a2 + 8);
  long long v29 = v15;
  long long v30 = *(_OWORD *)(a2 + 40);
  long long v31 = v13;
  if (_s14CarPlayAssetUI10InstrumentV10GaugeStyleO20DigiBarConfigurationV2eeoiySbAG_AGtFZ_0(&v39, &v28))
  {
    long long v16 = *(_OWORD *)(a1 + 320);
    long long v47 = *(_OWORD *)(a1 + 304);
    long long v48 = v16;
    int v49 = *(_DWORD *)(a1 + 336);
    long long v17 = *(_OWORD *)(a1 + 256);
    long long v43 = *(_OWORD *)(a1 + 240);
    long long v44 = v17;
    long long v18 = *(_OWORD *)(a1 + 288);
    long long v45 = *(_OWORD *)(a1 + 272);
    long long v46 = v18;
    long long v19 = *(_OWORD *)(a1 + 192);
    long long v39 = *(_OWORD *)(a1 + 176);
    long long v40 = v19;
    long long v20 = *(_OWORD *)(a1 + 224);
    long long v41 = *(_OWORD *)(a1 + 208);
    long long v42 = v20;
    long long v21 = *(_OWORD *)(a2 + 320);
    long long v36 = *(_OWORD *)(a2 + 304);
    long long v37 = v21;
    int v38 = *(_DWORD *)(a2 + 336);
    long long v22 = *(_OWORD *)(a2 + 256);
    long long v32 = *(_OWORD *)(a2 + 240);
    long long v33 = v22;
    long long v23 = *(_OWORD *)(a2 + 288);
    long long v34 = *(_OWORD *)(a2 + 272);
    long long v35 = v23;
    long long v24 = *(_OWORD *)(a2 + 192);
    long long v28 = *(_OWORD *)(a2 + 176);
    long long v29 = v24;
    long long v25 = *(_OWORD *)(a2 + 224);
    long long v30 = *(_OWORD *)(a2 + 208);
    long long v31 = v25;
    return _s14CarPlayAssetUI10InstrumentV10GaugeStyleO20DigiBarConfigurationV2eeoiySbAG_AGtFZ_0(&v39, &v28);
  }
  else
  {
    return 0;
  }
}

BOOL _s14CarPlayAssetUI10InstrumentV10GaugeStyleO24ProgressBarConfigurationV0G0O2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  sub_2499457D8(a1, (uint64_t)v26);
  sub_2499457D8(a2, (uint64_t)v27);
  sub_2499457D8((uint64_t)v26, (uint64_t)v28);
  sub_2499457D8((uint64_t)v27, (uint64_t)&v29);
  sub_2499457D8((uint64_t)v26, (uint64_t)v30);
  if (sub_249945834((uint64_t)v30) == 1)
  {
    uint64_t v3 = (const void *)sub_249945840((uint64_t)v30);
    sub_2499457D8((uint64_t)v27, (uint64_t)v25);
    int v4 = sub_249945834((uint64_t)v25);
    uint64_t v5 = sub_249945840((uint64_t)v25);
    if (v4 == 1)
    {
      long long v6 = (const void *)v5;
      memcpy(__dst, v3, 0x154uLL);
      memcpy(v23, v6, 0x154uLL);
      sub_249A33868((uint64_t)v27, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2498FC748);
      sub_249A33868((uint64_t)v26, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2498FC748);
      sub_249A33868((uint64_t)v26, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2498FC748);
      sub_249A33868((uint64_t)v27, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2498FC748);
      BOOL v7 = _s14CarPlayAssetUI10InstrumentV10GaugeStyleO30DigiBarPowermeterConfigurationV2eeoiySbAG_AGtFZ_0((uint64_t)__dst, (uint64_t)v23);
LABEL_7:
      BOOL v11 = v7;
      sub_249A35CC0((uint64_t)v28);
      sub_249A33868((uint64_t)v27, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2498FDCF0);
      sub_249A33868((uint64_t)v26, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2498FDCF0);
      return v11;
    }
  }
  else
  {
    uint64_t v8 = sub_249945840((uint64_t)v30);
    sub_2499457D8((uint64_t)v27, (uint64_t)v25);
    int v9 = sub_249945834((uint64_t)v25);
    uint64_t v10 = sub_249945840((uint64_t)v25);
    if (v9 != 1)
    {
      long long v12 = *(_OWORD *)(v8 + 144);
      __dst[8] = *(_OWORD *)(v8 + 128);
      __dst[9] = v12;
      LODWORD(__dst[10]) = *(_DWORD *)(v8 + 160);
      long long v13 = *(_OWORD *)(v8 + 80);
      __dst[4] = *(_OWORD *)(v8 + 64);
      __dst[5] = v13;
      long long v14 = *(_OWORD *)(v8 + 112);
      __dst[6] = *(_OWORD *)(v8 + 96);
      __dst[7] = v14;
      long long v15 = *(_OWORD *)(v8 + 16);
      __dst[0] = *(_OWORD *)v8;
      __dst[1] = v15;
      long long v16 = *(_OWORD *)(v8 + 48);
      __dst[2] = *(_OWORD *)(v8 + 32);
      __dst[3] = v16;
      long long v17 = *(_OWORD *)(v10 + 144);
      v23[8] = *(_OWORD *)(v10 + 128);
      v23[9] = v17;
      LODWORD(v23[10]) = *(_DWORD *)(v10 + 160);
      long long v18 = *(_OWORD *)(v10 + 80);
      v23[4] = *(_OWORD *)(v10 + 64);
      v23[5] = v18;
      long long v19 = *(_OWORD *)(v10 + 112);
      v23[6] = *(_OWORD *)(v10 + 96);
      v23[7] = v19;
      long long v20 = *(_OWORD *)(v10 + 16);
      v23[0] = *(_OWORD *)v10;
      v23[1] = v20;
      long long v21 = *(_OWORD *)(v10 + 48);
      v23[2] = *(_OWORD *)(v10 + 32);
      v23[3] = v21;
      sub_249A33868((uint64_t)v27, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2498FC748);
      sub_249A33868((uint64_t)v26, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2498FC748);
      sub_249A33868((uint64_t)v26, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2498FC748);
      sub_249A33868((uint64_t)v27, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2498FC748);
      BOOL v7 = _s14CarPlayAssetUI10InstrumentV10GaugeStyleO20DigiBarConfigurationV2eeoiySbAG_AGtFZ_0(__dst, v23);
      goto LABEL_7;
    }
  }
  sub_249A33868((uint64_t)v26, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2498FC748);
  sub_249A33868((uint64_t)v27, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2498FC748);
  sub_249A35CC0((uint64_t)v28);
  return 0;
}

unint64_t sub_249A33570()
{
  unint64_t result = qword_2696E3D18;
  if (!qword_2696E3D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3D18);
  }
  return result;
}

unint64_t sub_249A335C4()
{
  unint64_t result = qword_2696E3D20;
  if (!qword_2696E3D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3D20);
  }
  return result;
}

unint64_t sub_249A33618()
{
  unint64_t result = qword_2696E3D28;
  if (!qword_2696E3D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3D28);
  }
  return result;
}

unint64_t sub_249A3366C()
{
  unint64_t result = qword_2696E3D30;
  if (!qword_2696E3D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3D30);
  }
  return result;
}

unint64_t sub_249A336C0()
{
  unint64_t result = qword_2696E3D38;
  if (!qword_2696E3D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3D38);
  }
  return result;
}

unint64_t sub_249A33714()
{
  unint64_t result = qword_2696E3D58;
  if (!qword_2696E3D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3D58);
  }
  return result;
}

int8x16_t sub_249A33768(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 216) & 1;
  unint64_t v2 = *(void *)(a1 + 328) & 0xFFFFFFFFFFLL | 0x8000000000000000;
  *(void *)(a1 + 80) &= 0x83FFFFFFFFuLL;
  *(int8x16_t *)(a1 + 160) = vandq_s8(*(int8x16_t *)(a1 + 160), (int8x16_t)xmmword_249B06FE0);
  *(void *)(a1 + 216) = v1;
  int8x16_t result = vandq_s8(*(int8x16_t *)(a1 + 248), (int8x16_t)xmmword_249B06FF0);
  *(int8x16_t *)(a1 + 248) = result;
  *(void *)(a1 + 328) = v2;
  return result;
}

unint64_t sub_249A337C0()
{
  unint64_t result = qword_2696E3D60;
  if (!qword_2696E3D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3D60);
  }
  return result;
}

int8x16_t sub_249A33814(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 216) & 1;
  uint64_t v2 = *(void *)(a1 + 328) & 0xFFFFFFFFFFLL;
  *(void *)(a1 + 80) &= 0x83FFFFFFFFuLL;
  *(int8x16_t *)(a1 + 160) = vandq_s8(*(int8x16_t *)(a1 + 160), (int8x16_t)xmmword_249B06FE0);
  *(void *)(a1 + 216) = v1;
  int8x16_t result = vandq_s8(*(int8x16_t *)(a1 + 248), (int8x16_t)xmmword_249B06FF0);
  *(int8x16_t *)(a1 + 248) = result;
  *(void *)(a1 + 328) = v2;
  return result;
}

uint64_t sub_249A33868(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))
{
  long long v8 = *(_OWORD *)(a1 + 288);
  long long v9 = *(_OWORD *)(a1 + 304);
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v7 = *(_OWORD *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 224);
  long long v5 = *(_OWORD *)(a1 + 240);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    v7,
    *((void *)&v7 + 1),
    v8,
    *((void *)&v8 + 1),
    v9,
    *((void *)&v9 + 1),
    *(void *)(a1 + 320),
    *(void *)(a1 + 328),
    *(_DWORD *)(a1 + 336));
  return a1;
}

unint64_t sub_249A33904()
{
  unint64_t result = qword_2696E3D70;
  if (!qword_2696E3D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3D70);
  }
  return result;
}

unint64_t sub_249A33958()
{
  unint64_t result = qword_2696E3D78;
  if (!qword_2696E3D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3D78);
  }
  return result;
}

unint64_t sub_249A339AC()
{
  unint64_t result = qword_2696E3D88;
  if (!qword_2696E3D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3D88);
  }
  return result;
}

uint64_t sub_249A33A00(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 88);
  swift_bridgeObjectRetain();
  sub_2498FC674(v2);
  sub_2498FC674(v4);
  return a1;
}

uint64_t sub_249A33AAC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 88);
  swift_bridgeObjectRelease();
  sub_249882B2C(v2);
  sub_249882B2C(v4);
  return a1;
}

unint64_t sub_249A33B58()
{
  unint64_t result = qword_2696E3D98;
  if (!qword_2696E3D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3D98);
  }
  return result;
}

void *sub_249A33BAC(void *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v5 = a1[12];
  uint64_t v4 = a1[23];
  uint64_t v6 = a1[33];
  swift_bridgeObjectRetain();
  sub_2498FC674(v2);
  sub_2498FC674(v5);
  swift_bridgeObjectRetain();
  sub_2498FC674(v4);
  sub_2498FC674(v6);
  return a1;
}

void *sub_249A33CD0(void *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v5 = a1[12];
  uint64_t v4 = a1[23];
  uint64_t v6 = a1[33];
  swift_bridgeObjectRelease();
  sub_249882B2C(v2);
  sub_249882B2C(v5);
  swift_bridgeObjectRelease();
  sub_249882B2C(v4);
  sub_249882B2C(v6);
  return a1;
}

unint64_t sub_249A33DF8()
{
  unint64_t result = qword_2696E3DA8;
  if (!qword_2696E3DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3DA8);
  }
  return result;
}

unint64_t sub_249A33E50()
{
  unint64_t result = qword_2696E3DB0;
  if (!qword_2696E3DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3DB0);
  }
  return result;
}

unint64_t sub_249A33EA8()
{
  unint64_t result = qword_2696E3DB8;
  if (!qword_2696E3DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3DB8);
  }
  return result;
}

void *__swift_memcpy340_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x154uLL);
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.ProgressBarConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.ProgressBarConfiguration;
}

uint64_t _s14descr26FD9EE19O24ProgressBarConfigurationV5StyleOwxx_0(uint64_t a1)
{
  long long v6 = *(_OWORD *)(a1 + 288);
  long long v7 = *(_OWORD *)(a1 + 304);
  long long v4 = *(_OWORD *)(a1 + 256);
  long long v5 = *(_OWORD *)(a1 + 272);
  long long v2 = *(_OWORD *)(a1 + 224);
  long long v3 = *(_OWORD *)(a1 + 240);
  return sub_2498FDCF0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
           *(void *)(a1 + 152),
           *(void *)(a1 + 160),
           *(void *)(a1 + 168),
           *(void *)(a1 + 176),
           *(void *)(a1 + 184),
           *(void *)(a1 + 192),
           *(void *)(a1 + 200),
           *(void *)(a1 + 208),
           *(void *)(a1 + 216),
           v2,
           *((uint64_t *)&v2 + 1),
           v3,
           *((uint64_t *)&v3 + 1),
           v4,
           *((uint64_t *)&v4 + 1),
           v5,
           *((uint64_t *)&v5 + 1),
           v6,
           *((uint64_t *)&v6 + 1),
           v7,
           *((uint64_t *)&v7 + 1),
           *(void *)(a1 + 320),
           *(void *)(a1 + 328));
}

uint64_t _s14descr26FD9EE19O24ProgressBarConfigurationV5StyleOwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = *(void *)(a2 + 72);
  uint64_t v46 = *(void *)(a2 + 64);
  uint64_t v43 = *(void *)(a2 + 88);
  uint64_t v44 = *(void *)(a2 + 80);
  uint64_t v41 = *(void *)(a2 + 104);
  uint64_t v42 = *(void *)(a2 + 96);
  uint64_t v40 = *(void *)(a2 + 112);
  uint64_t v13 = *(void *)(a2 + 120);
  uint64_t v14 = *(void *)(a2 + 128);
  uint64_t v15 = *(void *)(a2 + 136);
  uint64_t v16 = *(void *)(a2 + 144);
  uint64_t v17 = *(void *)(a2 + 152);
  uint64_t v18 = *(void *)(a2 + 160);
  uint64_t v19 = *(void *)(a2 + 168);
  uint64_t v20 = *(void *)(a2 + 176);
  uint64_t v3 = *(void *)(a2 + 200);
  uint64_t v21 = *(void *)(a2 + 184);
  uint64_t v22 = *(void *)(a2 + 192);
  uint64_t v23 = *(void *)(a2 + 208);
  uint64_t v24 = *(void *)(a2 + 216);
  uint64_t v25 = *(void *)(a2 + 224);
  uint64_t v26 = *(void *)(a2 + 232);
  uint64_t v27 = *(void *)(a2 + 240);
  uint64_t v28 = *(void *)(a2 + 248);
  uint64_t v29 = *(void *)(a2 + 256);
  uint64_t v30 = *(void *)(a2 + 264);
  uint64_t v31 = *(void *)(a2 + 272);
  uint64_t v32 = *(void *)(a2 + 280);
  uint64_t v33 = *(void *)(a2 + 288);
  uint64_t v34 = *(void *)(a2 + 296);
  uint64_t v35 = *(void *)(a2 + 304);
  uint64_t v36 = *(void *)(a2 + 312);
  uint64_t v37 = *(void *)(a2 + 320);
  uint64_t v38 = *(void *)(a2 + 328);
  int v39 = *(_DWORD *)(a2 + 336);
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 48);
  sub_2498FC748(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v46, v45, v44, v43, v42, v41, v40, v13, v14, v15, v16,
    v17,
    v18,
    v19,
    v20,
    v21,
    v22,
    v3,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v46;
  *(void *)(a1 + 72) = v45;
  *(void *)(a1 + 80) = v44;
  *(void *)(a1 + 88) = v43;
  *(void *)(a1 + 96) = v42;
  *(void *)(a1 + 104) = v41;
  *(void *)(a1 + 112) = v40;
  *(void *)(a1 + 120) = v13;
  *(void *)(a1 + 128) = v14;
  *(void *)(a1 + 136) = v15;
  *(void *)(a1 + 144) = v16;
  *(void *)(a1 + 152) = v17;
  *(void *)(a1 + 160) = v18;
  *(void *)(a1 + 168) = v19;
  *(void *)(a1 + 176) = v20;
  *(void *)(a1 + 184) = v21;
  *(void *)(a1 + 192) = v22;
  *(void *)(a1 + 200) = v3;
  *(void *)(a1 + 208) = v23;
  *(void *)(a1 + 216) = v24;
  *(void *)(a1 + 224) = v25;
  *(void *)(a1 + 232) = v26;
  *(void *)(a1 + 240) = v27;
  *(void *)(a1 + 248) = v28;
  *(void *)(a1 + 256) = v29;
  *(void *)(a1 + 264) = v30;
  *(void *)(a1 + 272) = v31;
  *(void *)(a1 + 280) = v32;
  *(void *)(a1 + 288) = v33;
  *(void *)(a1 + 296) = v34;
  *(void *)(a1 + 304) = v35;
  *(void *)(a1 + 312) = v36;
  *(void *)(a1 + 320) = v37;
  *(void *)(a1 + 328) = v38;
  *(_DWORD *)(a1 + 336) = v39;
  return a1;
}

uint64_t _s14descr26FD9EE19O24ProgressBarConfigurationV5StyleOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v71 = *(void *)a2;
  uint64_t v72 = *(void *)(a2 + 8);
  uint64_t v69 = *(void *)(a2 + 24);
  uint64_t v70 = *(void *)(a2 + 16);
  uint64_t v67 = *(void *)(a2 + 40);
  uint64_t v68 = *(void *)(a2 + 32);
  uint64_t v65 = *(void *)(a2 + 56);
  uint64_t v66 = *(void *)(a2 + 48);
  uint64_t v63 = *(void *)(a2 + 72);
  uint64_t v64 = *(void *)(a2 + 64);
  uint64_t v61 = *(void *)(a2 + 88);
  uint64_t v62 = *(void *)(a2 + 80);
  uint64_t v59 = *(void *)(a2 + 104);
  uint64_t v60 = *(void *)(a2 + 96);
  uint64_t v58 = *(void *)(a2 + 112);
  uint64_t v3 = *(void *)(a2 + 136);
  uint64_t v39 = *(void *)(a2 + 120);
  uint64_t v40 = *(void *)(a2 + 128);
  uint64_t v4 = *(void *)(a2 + 144);
  uint64_t v5 = *(void *)(a2 + 152);
  uint64_t v6 = *(void *)(a2 + 160);
  uint64_t v7 = *(void *)(a2 + 168);
  uint64_t v8 = *(void *)(a2 + 176);
  uint64_t v9 = *(void *)(a2 + 184);
  uint64_t v10 = *(void *)(a2 + 192);
  uint64_t v11 = *(void *)(a2 + 200);
  uint64_t v41 = *(void *)(a2 + 208);
  uint64_t v42 = *(void *)(a2 + 216);
  uint64_t v43 = *(void *)(a2 + 224);
  uint64_t v44 = *(void *)(a2 + 232);
  uint64_t v45 = *(void *)(a2 + 240);
  uint64_t v46 = *(void *)(a2 + 248);
  uint64_t v47 = *(void *)(a2 + 256);
  uint64_t v48 = *(void *)(a2 + 264);
  uint64_t v49 = *(void *)(a2 + 272);
  uint64_t v50 = *(void *)(a2 + 280);
  uint64_t v51 = *(void *)(a2 + 288);
  uint64_t v52 = *(void *)(a2 + 296);
  uint64_t v53 = *(void *)(a2 + 304);
  uint64_t v54 = *(void *)(a2 + 312);
  uint64_t v55 = *(void *)(a2 + 320);
  uint64_t v56 = *(void *)(a2 + 328);
  int v57 = *(_DWORD *)(a2 + 336);
  sub_2498FC748(*(void *)a2, v72, v70, v69, v68, v67, v66, v65, v64, v63, v62, v61, v60, v59, v58, v39, v40, v3, v4,
    v5,
    v6,
    v7,
    v8,
    v9,
    v10,
    v11,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  *(void *)a1 = v71;
  *(void *)(a1 + 8) = v72;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v70;
  *(void *)(a1 + 24) = v69;
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v68;
  *(void *)(a1 + 40) = v67;
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v66;
  *(void *)(a1 + 56) = v65;
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 64) = v64;
  *(void *)(a1 + 72) = v63;
  *(void *)(a1 + 80) = v62;
  *(void *)(a1 + 88) = v61;
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v60;
  *(void *)(a1 + 104) = v59;
  *(void *)(a1 + 112) = v58;
  *(void *)(a1 + 120) = v39;
  long long v24 = *(_OWORD *)(a1 + 128);
  long long v25 = *(_OWORD *)(a1 + 144);
  *(void *)(a1 + 128) = v40;
  *(void *)(a1 + 136) = v3;
  *(void *)(a1 + 144) = v4;
  *(void *)(a1 + 152) = v5;
  long long v26 = *(_OWORD *)(a1 + 160);
  long long v27 = *(_OWORD *)(a1 + 176);
  *(void *)(a1 + 160) = v6;
  *(void *)(a1 + 168) = v7;
  *(void *)(a1 + 176) = v8;
  *(void *)(a1 + 184) = v9;
  long long v28 = *(_OWORD *)(a1 + 192);
  long long v29 = *(_OWORD *)(a1 + 208);
  *(void *)(a1 + 192) = v10;
  *(void *)(a1 + 200) = v11;
  *(void *)(a1 + 208) = v41;
  *(void *)(a1 + 216) = v42;
  long long v30 = *(_OWORD *)(a1 + 224);
  long long v31 = *(_OWORD *)(a1 + 240);
  *(void *)(a1 + 224) = v43;
  *(void *)(a1 + 232) = v44;
  *(void *)(a1 + 240) = v45;
  *(void *)(a1 + 248) = v46;
  long long v32 = *(_OWORD *)(a1 + 256);
  long long v33 = *(_OWORD *)(a1 + 272);
  *(void *)(a1 + 256) = v47;
  *(void *)(a1 + 264) = v48;
  *(void *)(a1 + 272) = v49;
  *(void *)(a1 + 280) = v50;
  long long v34 = *(_OWORD *)(a1 + 288);
  long long v35 = *(_OWORD *)(a1 + 304);
  *(void *)(a1 + 288) = v51;
  *(void *)(a1 + 296) = v52;
  *(void *)(a1 + 304) = v53;
  *(void *)(a1 + 312) = v54;
  uint64_t v36 = *(void *)(a1 + 320);
  uint64_t v37 = *(void *)(a1 + 328);
  *(void *)(a1 + 320) = v55;
  *(void *)(a1 + 328) = v56;
  *(_DWORD *)(a1 + 336) = v57;
  sub_2498FDCF0(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    v37);
  return a1;
}

uint64_t _s14descr26FD9EE19O24ProgressBarConfigurationV5StyleOwta_0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 336);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  long long v13 = *(_OWORD *)(a1 + 64);
  long long v14 = *(_OWORD *)(a1 + 80);
  long long v15 = *(_OWORD *)(a1 + 96);
  long long v16 = *(_OWORD *)(a1 + 112);
  long long v17 = *(_OWORD *)(a1 + 128);
  long long v18 = *(_OWORD *)(a1 + 144);
  long long v19 = *(_OWORD *)(a1 + 160);
  long long v20 = *(_OWORD *)(a1 + 176);
  long long v21 = *(_OWORD *)(a1 + 192);
  long long v22 = *(_OWORD *)(a1 + 208);
  long long v23 = *(_OWORD *)(a1 + 224);
  long long v24 = *(_OWORD *)(a1 + 240);
  long long v25 = *(_OWORD *)(a1 + 256);
  long long v26 = *(_OWORD *)(a1 + 272);
  long long v27 = *(_OWORD *)(a1 + 288);
  long long v28 = *(_OWORD *)(a1 + 304);
  uint64_t v29 = *(void *)(a1 + 320);
  uint64_t v30 = *(void *)(a1 + 328);
  long long v31 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v31;
  long long v32 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v32;
  long long v33 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v33;
  long long v34 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v34;
  long long v35 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v35;
  long long v36 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v36;
  long long v37 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v37;
  long long v38 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v38;
  long long v39 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v39;
  long long v40 = *(_OWORD *)(a2 + 304);
  long long v41 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v40;
  *(_OWORD *)(a1 + 320) = v41;
  *(_DWORD *)(a1 + 336) = v4;
  sub_2498FDCF0(v5, v6, v7, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    v30);
  return a1;
}

uint64_t _s14descr26FD9EE19O24ProgressBarConfigurationV5StyleOwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 340)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(void *)(a1 + 80) >> 34) & 0x1F | (*(void *)(a1 + 80) >> 35) & 0x1FFFFFE0 | (*(void *)(a1 + 160) >> 11) & 0xE0000000;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t sub_249A34714(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 328) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 336) = 0;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 340) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)(result + 64) = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)unint64_t result = 0u;
      *(void *)(result + 80) = ((unint64_t)-a2 << 35) & 0xFFFFFF0000000000 | ((-a2 & 0x1FLL) << 34);
      *(_OWORD *)(result + 88) = 0u;
      *(_OWORD *)(result + 104) = 0u;
      *(_OWORD *)(result + 120) = 0u;
      *(_OWORD *)(result + 136) = 0u;
      *(void *)(result + 152) = 0;
      *(void *)(result + 160) = ((unint64_t)-a2 << 11) & 0x70000000000;
      *(_OWORD *)(result + 184) = 0u;
      *(_OWORD *)(result + 200) = 0u;
      *(_OWORD *)(result + 216) = 0u;
      *(_OWORD *)(result + 232) = 0u;
      *(_OWORD *)(result + 248) = 0u;
      *(_OWORD *)(result + 168) = 0u;
      result += 168;
      *(_OWORD *)(result + 96) = 0u;
      *(_OWORD *)(result + 112) = 0u;
      *(_OWORD *)(result + 128) = 0u;
      *(_OWORD *)(result + 144) = 0u;
      *(_OWORD *)(result + 156) = 0u;
      return result;
    }
    *(unsigned char *)(result + 340) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

int8x16_t sub_249A3480C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 216) & 1;
  uint64_t v3 = *(void *)(a1 + 328) & 0xFFFFFFFFFFLL | (a2 << 63);
  *(void *)(a1 + 80) &= 0x83FFFFFFFFuLL;
  *(int8x16_t *)(a1 + 160) = vandq_s8(*(int8x16_t *)(a1 + 160), (int8x16_t)xmmword_249B06FE0);
  *(void *)(a1 + 216) = v2;
  int8x16_t result = vandq_s8(*(int8x16_t *)(a1 + 248), (int8x16_t)xmmword_249B06FF0);
  *(int8x16_t *)(a1 + 248) = result;
  *(void *)(a1 + 328) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.ProgressBarConfiguration.Style()
{
  return &type metadata for Instrument.GaugeStyle.ProgressBarConfiguration.Style;
}

uint64_t _s14descr26FD9EE19O30DigiBarPowermeterConfigurationVwxx(void *a1)
{
  swift_bridgeObjectRelease();
  if (a1[2])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[12])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[23])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = a1[33];
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s14descr26FD9EE19O30DigiBarPowermeterConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v5 = (_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  uint64_t v7 = *(void *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 77) = *(void *)(a2 + 77);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = v7;
    *(void *)(a1 + 104) = v9;
    long long v10 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v10;
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(void *)(a1 + 157) = *(void *)(a2 + 157);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v11;
    *(void *)(a1 + 157) = *(void *)(a2 + 157);
    long long v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
  }
  uint64_t v13 = *(void *)(a2 + 184);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  if (v13)
  {
    uint64_t v14 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = v13;
    *(void *)(a1 + 192) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  }
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(void *)(a1 + 245) = *(void *)(a2 + 245);
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  uint64_t v15 = *(void *)(a2 + 264);
  if (v15)
  {
    uint64_t v16 = *(void *)(a2 + 272);
    *(void *)(a1 + 264) = v15;
    *(void *)(a1 + 272) = v16;
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
    *(void *)(a1 + 325) = *(void *)(a2 + 325);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v17;
    *(void *)(a1 + 325) = *(void *)(a2 + 325);
    long long v18 = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = v18;
  }
  *(_DWORD *)(a1 + 336) = *(_DWORD *)(a2 + 336);
  return a1;
}

uint64_t _s14descr26FD9EE19O30DigiBarPowermeterConfigurationVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16))
  {
    if (v4)
    {
      *(void *)(a1 + 16) = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_2499BC150(a1 + 16);
  }
  else if (v4)
  {
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
LABEL_8:
  long long v5 = *(_OWORD *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  long long v7 = *(_OWORD *)(a2 + 64);
  long long v8 = (_OWORD *)(a1 + 96);
  uint64_t v9 = *(void *)(a1 + 96);
  *(void *)(a1 + 77) = *(void *)(a2 + 77);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  long long v11 = (_OWORD *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 96);
  if (v9)
  {
    if (v10)
    {
      *(void *)(a1 + 96) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      long long v12 = *(_OWORD *)(a2 + 112);
      long long v13 = *(_OWORD *)(a2 + 128);
      long long v14 = *(_OWORD *)(a2 + 144);
      *(void *)(a1 + 157) = *(void *)(a2 + 157);
      *(_OWORD *)(a1 + 128) = v13;
      *(_OWORD *)(a1 + 144) = v14;
      *(_OWORD *)(a1 + 112) = v12;
    }
    else
    {
      sub_249A34E9C(a1 + 96);
      *long long v8 = *v11;
      long long v19 = *(_OWORD *)(a2 + 128);
      long long v18 = *(_OWORD *)(a2 + 144);
      long long v20 = *(_OWORD *)(a2 + 112);
      *(void *)(a1 + 157) = *(void *)(a2 + 157);
      *(_OWORD *)(a1 + 128) = v19;
      *(_OWORD *)(a1 + 144) = v18;
      *(_OWORD *)(a1 + 112) = v20;
    }
  }
  else if (v10)
  {
    *(void *)(a1 + 96) = v10;
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    long long v15 = *(_OWORD *)(a2 + 112);
    long long v16 = *(_OWORD *)(a2 + 128);
    long long v17 = *(_OWORD *)(a2 + 144);
    *(void *)(a1 + 157) = *(void *)(a2 + 157);
    *(_OWORD *)(a1 + 128) = v16;
    *(_OWORD *)(a1 + 144) = v17;
    *(_OWORD *)(a1 + 112) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *long long v8 = *v11;
    long long v21 = *(_OWORD *)(a2 + 112);
    long long v22 = *(_OWORD *)(a2 + 128);
    long long v23 = *(_OWORD *)(a2 + 144);
    *(void *)(a1 + 157) = *(void *)(a2 + 157);
    *(_OWORD *)(a1 + 128) = v22;
    *(_OWORD *)(a1 + 144) = v23;
    *(_OWORD *)(a1 + 112) = v21;
  }
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(a2 + 184);
  if (*(void *)(a1 + 184))
  {
    if (v24)
    {
      *(void *)(a1 + 184) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    sub_2499BC150(a1 + 184);
  }
  else if (v24)
  {
    *(void *)(a1 + 184) = v24;
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
LABEL_22:
  long long v25 = *(_OWORD *)(a2 + 200);
  long long v26 = *(_OWORD *)(a2 + 216);
  long long v27 = *(_OWORD *)(a2 + 232);
  *(void *)(a1 + 245) = *(void *)(a2 + 245);
  *(_OWORD *)(a1 + 232) = v27;
  *(_OWORD *)(a1 + 216) = v26;
  *(_OWORD *)(a1 + 200) = v25;
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  long long v28 = (_OWORD *)(a1 + 264);
  uint64_t v29 = (_OWORD *)(a2 + 264);
  uint64_t v30 = *(void *)(a2 + 264);
  if (*(void *)(a1 + 264))
  {
    if (v30)
    {
      *(void *)(a1 + 264) = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      long long v31 = *(_OWORD *)(a2 + 280);
      long long v32 = *(_OWORD *)(a2 + 296);
      long long v33 = *(_OWORD *)(a2 + 312);
      *(void *)(a1 + 325) = *(void *)(a2 + 325);
      *(_OWORD *)(a1 + 312) = v33;
      *(_OWORD *)(a1 + 296) = v32;
      *(_OWORD *)(a1 + 280) = v31;
    }
    else
    {
      sub_249A34E9C(a1 + 264);
      *long long v28 = *v29;
      long long v38 = *(_OWORD *)(a2 + 296);
      long long v37 = *(_OWORD *)(a2 + 312);
      long long v39 = *(_OWORD *)(a2 + 280);
      *(void *)(a1 + 325) = *(void *)(a2 + 325);
      *(_OWORD *)(a1 + 296) = v38;
      *(_OWORD *)(a1 + 312) = v37;
      *(_OWORD *)(a1 + 280) = v39;
    }
  }
  else if (v30)
  {
    *(void *)(a1 + 264) = v30;
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    long long v34 = *(_OWORD *)(a2 + 280);
    long long v35 = *(_OWORD *)(a2 + 296);
    long long v36 = *(_OWORD *)(a2 + 312);
    *(void *)(a1 + 325) = *(void *)(a2 + 325);
    *(_OWORD *)(a1 + 312) = v36;
    *(_OWORD *)(a1 + 296) = v35;
    *(_OWORD *)(a1 + 280) = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *long long v28 = *v29;
    long long v40 = *(_OWORD *)(a2 + 280);
    long long v41 = *(_OWORD *)(a2 + 296);
    long long v42 = *(_OWORD *)(a2 + 312);
    *(void *)(a1 + 325) = *(void *)(a2 + 325);
    *(_OWORD *)(a1 + 296) = v41;
    *(_OWORD *)(a1 + 312) = v42;
    *(_OWORD *)(a1 + 280) = v40;
  }
  *(_DWORD *)(a1 + 336) = *(_DWORD *)(a2 + 336);
  return a1;
}

uint64_t sub_249A34E9C(uint64_t a1)
{
  return a1;
}

uint64_t _s14descr26FD9EE19O30DigiBarPowermeterConfigurationVwta(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16))
  {
    if (v4)
    {
      *(void *)(a1 + 16) = v4;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_2499BC150(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
LABEL_6:
  uint64_t v5 = *(void *)(a2 + 96);
  uint64_t v6 = *(void *)(a1 + 96);
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 77) = *(void *)(a2 + 77);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  if (v6)
  {
    if (v5)
    {
      *(void *)(a1 + 96) = v5;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRelease();
      long long v8 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v8;
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(void *)(a1 + 157) = *(void *)(a2 + 157);
      goto LABEL_11;
    }
    sub_249A34E9C(a1 + 96);
  }
  long long v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  *(void *)(a1 + 157) = *(void *)(a2 + 157);
  long long v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v10;
LABEL_11:
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 184);
  if (*(void *)(a1 + 184))
  {
    if (v11)
    {
      *(void *)(a1 + 184) = v11;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_2499BC150(a1 + 184);
  }
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
LABEL_16:
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(void *)(a1 + 245) = *(void *)(a2 + 245);
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  if (!*(void *)(a1 + 264))
  {
LABEL_20:
    long long v13 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v13;
    *(void *)(a1 + 325) = *(void *)(a2 + 325);
    long long v14 = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = v14;
    goto LABEL_21;
  }
  uint64_t v12 = *(void *)(a2 + 264);
  if (!v12)
  {
    sub_249A34E9C(a1 + 264);
    goto LABEL_20;
  }
  *(void *)(a1 + 264) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
  *(void *)(a1 + 325) = *(void *)(a2 + 325);
LABEL_21:
  *(_DWORD *)(a1 + 336) = *(_DWORD *)(a2 + 336);
  return a1;
}

uint64_t _s14descr26FD9EE19O30DigiBarPowermeterConfigurationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 340)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 48) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t _s14descr26FD9EE19O30DigiBarPowermeterConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 328) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 336) = 0;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 340) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = 0;
      *(void *)(result + 40) = 0;
      *(void *)(result + 48) = 2 * -a2;
      *(void *)(result + 56) = 0;
      *(void *)(result + 64) = 0;
      *(void *)(result + 72) = 0;
      *(void *)(result + 77) = 0;
      return result;
    }
    *(unsigned char *)(result + 340) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.DigiBarPowermeterConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.DigiBarPowermeterConfiguration;
}

unsigned char *_s14descr26FD9EE19O30DigiBarPowermeterConfigurationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A352F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr26FD9EE19O30DigiBarPowermeterConfigurationV10CodingKeysOMa()
{
  return &_s14descr26FD9EE19O30DigiBarPowermeterConfigurationV10CodingKeysON;
}

ValueMetadata *_s14descr26FD9EE19O24ProgressBarConfigurationV10CodingKeysOMa()
{
  return &_s14descr26FD9EE19O24ProgressBarConfigurationV10CodingKeysON;
}

unsigned char *_s14descr26FD9EE19O24ProgressBarConfigurationV5StyleO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A35408);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr26FD9EE19O24ProgressBarConfigurationV5StyleO10CodingKeysOMa()
{
  return &_s14descr26FD9EE19O24ProgressBarConfigurationV5StyleO10CodingKeysON;
}

ValueMetadata *_s14descr26FD9EE19O24ProgressBarConfigurationV5StyleO17DigiBarCodingKeysOMa()
{
  return &_s14descr26FD9EE19O24ProgressBarConfigurationV5StyleO17DigiBarCodingKeysON;
}

unsigned char *_s14descr26FD9EE19O24ProgressBarConfigurationV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x249A354ECLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s14descr26FD9EE19O24ProgressBarConfigurationV5StyleO20PowermeterCodingKeysOMa()
{
  return &_s14descr26FD9EE19O24ProgressBarConfigurationV5StyleO20PowermeterCodingKeysON;
}

unint64_t sub_249A35528()
{
  unint64_t result = qword_2696E3DC0;
  if (!qword_2696E3DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3DC0);
  }
  return result;
}

unint64_t sub_249A35580()
{
  unint64_t result = qword_2696E3DC8;
  if (!qword_2696E3DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3DC8);
  }
  return result;
}

unint64_t sub_249A355D8()
{
  unint64_t result = qword_2696E3DD0;
  if (!qword_2696E3DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3DD0);
  }
  return result;
}

unint64_t sub_249A35630()
{
  unint64_t result = qword_2696E3DD8;
  if (!qword_2696E3DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3DD8);
  }
  return result;
}

unint64_t sub_249A35688()
{
  unint64_t result = qword_2696E3DE0;
  if (!qword_2696E3DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3DE0);
  }
  return result;
}

unint64_t sub_249A356E0()
{
  unint64_t result = qword_2696E3DE8;
  if (!qword_2696E3DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3DE8);
  }
  return result;
}

unint64_t sub_249A35738()
{
  unint64_t result = qword_2696E3DF0;
  if (!qword_2696E3DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3DF0);
  }
  return result;
}

unint64_t sub_249A35790()
{
  unint64_t result = qword_2696E3DF8;
  if (!qword_2696E3DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3DF8);
  }
  return result;
}

unint64_t sub_249A357E8()
{
  unint64_t result = qword_2696E3E00;
  if (!qword_2696E3E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3E00);
  }
  return result;
}

unint64_t sub_249A35840()
{
  unint64_t result = qword_2696E3E08;
  if (!qword_2696E3E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3E08);
  }
  return result;
}

unint64_t sub_249A35898()
{
  unint64_t result = qword_2696E3E10;
  if (!qword_2696E3E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3E10);
  }
  return result;
}

unint64_t sub_249A358F0()
{
  unint64_t result = qword_2696E3E18;
  if (!qword_2696E3E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3E18);
  }
  return result;
}

unint64_t sub_249A35948()
{
  unint64_t result = qword_2696E3E20;
  if (!qword_2696E3E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3E20);
  }
  return result;
}

unint64_t sub_249A359A0()
{
  unint64_t result = qword_2696E3E28;
  if (!qword_2696E3E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3E28);
  }
  return result;
}

unint64_t sub_249A359F8()
{
  unint64_t result = qword_2696E3E30;
  if (!qword_2696E3E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3E30);
  }
  return result;
}

uint64_t sub_249A35A4C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72614269676964 && a2 == 0xE700000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74656D7265776F70 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_249A35B4C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65644961746164 && a2 == 0xEF73726569666974;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000249B17120 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000249B17140)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_249A35CC0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 360);
  uint64_t v33 = *(void *)(a1 + 352);
  uint64_t v34 = *(void *)(a1 + 344);
  uint64_t v3 = *(void *)(a1 + 368);
  uint64_t v4 = *(void *)(a1 + 376);
  uint64_t v5 = *(void *)(a1 + 384);
  uint64_t v6 = *(void *)(a1 + 392);
  uint64_t v7 = *(void *)(a1 + 400);
  long long v31 = *(_OWORD *)(a1 + 424);
  long long v32 = *(_OWORD *)(a1 + 408);
  long long v29 = *(_OWORD *)(a1 + 456);
  long long v30 = *(_OWORD *)(a1 + 440);
  long long v27 = *(_OWORD *)(a1 + 488);
  long long v28 = *(_OWORD *)(a1 + 472);
  long long v25 = *(_OWORD *)(a1 + 520);
  long long v26 = *(_OWORD *)(a1 + 504);
  long long v24 = *(_OWORD *)(a1 + 536);
  long long v22 = *(_OWORD *)(a1 + 568);
  long long v23 = *(_OWORD *)(a1 + 552);
  long long v20 = *(_OWORD *)(a1 + 600);
  long long v21 = *(_OWORD *)(a1 + 584);
  long long v18 = *(_OWORD *)(a1 + 632);
  long long v19 = *(_OWORD *)(a1 + 616);
  long long v17 = *(_OWORD *)(a1 + 648);
  uint64_t v8 = *(void *)(a1 + 664);
  uint64_t v9 = *(void *)(a1 + 672);
  long long v15 = *(_OWORD *)(a1 + 288);
  long long v16 = *(_OWORD *)(a1 + 304);
  long long v13 = *(_OWORD *)(a1 + 256);
  long long v14 = *(_OWORD *)(a1 + 272);
  long long v11 = *(_OWORD *)(a1 + 224);
  long long v12 = *(_OWORD *)(a1 + 240);
  sub_2498FDCF0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    *(void *)(a1 + 320),
    *(void *)(a1 + 328));
  sub_2498FDCF0(v34, v33, v2, v3, v4, v5, v6, v7, v32, *((uint64_t *)&v32 + 1), v31, *((uint64_t *)&v31 + 1), v30, *((uint64_t *)&v30 + 1), v29, *((uint64_t *)&v29 + 1), v28, *((uint64_t *)&v28 + 1), v27,
    *((uint64_t *)&v27 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v8,
    v9);
  return a1;
}

uint64_t ImageGroupConfiguration.description.getter()
{
  if (*v0 != 57)
  {
    unint64_t v1 = InstrumentDataIdentifier.rawValue.getter();
    sub_249AE34DC(v1, v2);
    swift_bridgeObjectRelease();
  }
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t ImageGroupConfiguration.assets.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v2 = sub_249943E98(v1, (void (*)(long long *__return_ptr, long long *))sub_249945790);
  swift_bridgeObjectRelease();
  swift_release_n();
  return v2;
}

uint64_t ImageGroupConfiguration.restoreAssets(from:)(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v37 = v2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v2 + 64);
  int64_t v38 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v32 = v2;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      goto LABEL_25;
    }
    if (__OFADD__(v7++, 1)) {
      break;
    }
    if (v7 >= v38) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v37 + 8 * v7);
    if (!v14)
    {
      int64_t v15 = v7 + 1;
      if (v7 + 1 >= v38) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v37 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v7 + 2;
        if (v7 + 2 >= v38) {
          return swift_release();
        }
        unint64_t v14 = *(void *)(v37 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v7 + 3;
          if (v7 + 3 >= v38) {
            return swift_release();
          }
          unint64_t v14 = *(void *)(v37 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v7 + 4;
            if (v7 + 4 >= v38) {
              return swift_release();
            }
            unint64_t v14 = *(void *)(v37 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v7 + 5;
              if (v7 + 5 >= v38) {
                return swift_release();
              }
              unint64_t v14 = *(void *)(v37 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  int64_t v7 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_40;
                  }
                  if (v7 >= v38) {
                    return swift_release();
                  }
                  unint64_t v14 = *(void *)(v37 + 8 * v7);
                  ++v15;
                  if (v14) {
                    goto LABEL_24;
                  }
                }
              }
            }
          }
        }
      }
      int64_t v7 = v15;
    }
LABEL_24:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v7 << 6);
LABEL_25:
    long long v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v12);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    swift_bridgeObjectRetain();
    long long v19 = sub_249A3686C(v44, v17, v18);
    long long v10 = (void (*)(void *, void))v19;
    if (*((void *)v20 + 6))
    {
      long long v21 = v20;
      uint64_t v45 = (void (*)(void *, uint64_t))v19;
      uint64_t v22 = a1[3];
      uint64_t v23 = a1[4];
      __swift_project_boxed_opaque_existential_2Tm(a1, v22);
      *(void *)&long long v42 = *((void *)v21 + 5);
      if ((*(uint64_t (**)(long long *, uint64_t, uint64_t))(v23 + 24))(&v42, v22, v23))
      {
        long long v24 = (void *)*((void *)v21 + 2);
        long long v40 = *v21;
        uint64_t v25 = *((void *)v21 + 3);
        int v26 = *((char *)v21 + 32);
        if (v26 < 0)
        {
          long long v42 = *v21;
          *(void *)&long long v43 = v24;
          *((void *)&v43 + 1) = v25;
          id v8 = (id)v40;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          ImageAsset.LocalizedImage.restore(from:)(a1);
          if (v39)
          {
            long long v31 = (void *)v42;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            goto LABEL_38;
          }
          sub_2498826E4((void *)v40, *((uint64_t *)&v40 + 1), v24, v25, v26);
          long long v9 = v43;
          *long long v21 = v42;
          v21[1] = v9;
          *((unsigned char *)v21 + 32) = 0x80;
        }
        else
        {
          char v33 = *((unsigned char *)v21 + 32);
          uint64_t v34 = *((void *)v21 + 3);
          uint64_t v27 = a1[4];
          uint64_t v36 = a1[3];
          __swift_project_boxed_opaque_existential_2Tm(a1, v36);
          LOBYTE(v42) = 0;
          long long v35 = *(uint64_t (**)(void, void, long long *, uint64_t, uint64_t))(v27 + 8);
          id v28 = v24;
          swift_bridgeObjectRetain();
          uint64_t v29 = v35(v40, *((void *)&v40 + 1), &v42, v36, v27);
          if (v39)
          {
            sub_2498826E4((void *)v40, *((uint64_t *)&v40 + 1), v24, v34, v33);
LABEL_38:
            v45(v44, 1);
            swift_release();
            return swift_bridgeObjectRelease();
          }
          uint64_t v30 = v29;

          sub_2498826E4((void *)v40, *((uint64_t *)&v40 + 1), v24, v34, v33);
          *long long v21 = v40;
          *((void *)v21 + 2) = v30;
          *((void *)v21 + 3) = v34;
          *((unsigned char *)v21 + 32) = v33 & 1;
          uint64_t v2 = v32;
        }
      }
      long long v10 = v45;
    }
    v10(v44, 0);
    uint64_t result = swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

unint64_t ImageGroupConfiguration.InstrumentDataTransformationType.description.getter()
{
  return 0xD000000000000019;
}

uint64_t ImageGroupConfiguration.InstrumentDataTransformationType.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 1;
  return result;
}

uint64_t ImageGroupConfiguration.InstrumentDataTransformationType.rawValue.getter()
{
  return 1;
}

void *sub_249A3640C@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 1;
  return result;
}

uint64_t sub_249A36420()
{
  return sub_249AED3B8();
}

uint64_t sub_249A36480()
{
  return sub_249AED358();
}

uint64_t sub_249A364D0()
{
  return sub_249AEE388();
}

uint64_t sub_249A36514()
{
  return sub_249AEE348();
}

uint64_t sub_249A3653C()
{
  return sub_249AEE388();
}

void ImageGroupConfiguration.dataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *ImageGroupConfiguration.dataIdentifier.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*ImageGroupConfiguration.dataIdentifier.modify())()
{
  return nullsub_1;
}

void ImageGroupConfiguration.criticalStateDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *ImageGroupConfiguration.criticalStateDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*ImageGroupConfiguration.criticalStateDataIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ImageGroupConfiguration.states.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ImageGroupConfiguration.states.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*ImageGroupConfiguration.states.modify())()
{
  return nullsub_1;
}

uint64_t ImageGroupConfiguration.defaultState.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ImageGroupConfiguration.defaultState.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ImageGroupConfiguration.defaultState.modify())()
{
  return nullsub_1;
}

uint64_t ImageGroupConfiguration.redactedState.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ImageGroupConfiguration.redactedState.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ImageGroupConfiguration.redactedState.modify())()
{
  return nullsub_1;
}

void ImageGroupConfiguration.dataTransformationType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

unsigned char *ImageGroupConfiguration.dataTransformationType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 48) = *result;
  return result;
}

uint64_t (*ImageGroupConfiguration.dataTransformationType.modify())()
{
  return nullsub_1;
}

unsigned char *ImageGroupConfiguration.init(dataIdentifier:criticalStateDataIdentifier:states:defaultState:redactedState:dataTransformationType:)@<X0>(unsigned char *result@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  char v9 = *a2;
  char v10 = *a8;
  *(unsigned char *)a9 = *result;
  *(unsigned char *)(a9 + 1) = v9;
  *(void *)(a9 + 8) = a3;
  *(void *)(a9 + 16) = a4;
  *(void *)(a9 + 24) = a5;
  *(void *)(a9 + 32) = a6;
  *(void *)(a9 + 40) = a7;
  *(unsigned char *)(a9 + 48) = v10;
  return result;
}

uint64_t sub_249A367B0(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  char v6 = *(unsigned char *)(a1 + 32);
  sub_24988247C(*(void **)a1, v3, v4, v5, v6);
  swift_bridgeObjectRetain();
  swift_getAtKeyPath();
  sub_2498826E4(v1, v3, v4, v5, v6);
  return swift_bridgeObjectRelease();
}

void (*sub_249A3686C(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  char v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_249A375A0(v6, a2, a3);
  return sub_249A368EC;
}

void sub_249A368EC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();

  free(v1);
}

uint64_t ImageGroupConfiguration.hash(into:)(uint64_t a1)
{
  int v3 = *(unsigned __int8 *)(v1 + 1);
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 40);
  int v7 = *(unsigned __int8 *)(v1 + 48);
  if (*(unsigned char *)v1 == 57)
  {
    sub_249AEE358();
    if (v3 != 57)
    {
LABEL_3:
      sub_249AEE358();
      InstrumentDataIdentifier.rawValue.getter();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_249AEE358();
    InstrumentDataIdentifier.rawValue.getter();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    if (v3 != 57) {
      goto LABEL_3;
    }
  }
  sub_249AEE358();
LABEL_6:
  swift_bridgeObjectRetain();
  sub_24988C1B4(a1, v4);
  swift_bridgeObjectRelease();
  if (v5)
  {
    sub_249AEE358();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_8;
    }
LABEL_11:
    sub_249AEE358();
    if (v7) {
      return sub_249AEE358();
    }
    goto LABEL_12;
  }
  sub_249AEE358();
  if (!v6) {
    goto LABEL_11;
  }
LABEL_8:
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  if (v7) {
    return sub_249AEE358();
  }
LABEL_12:
  sub_249AEE358();
  return sub_249AEE348();
}

unint64_t sub_249A36B08(char a1)
{
  unint64_t result = 0x6E65644961746164;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 2:
      unint64_t result = 0x736574617473;
      break;
    case 3:
      unint64_t result = 0x53746C7561666564;
      break;
    case 4:
      unint64_t result = 0x6465746361646572;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_249A36BFC()
{
  return sub_249A36B08(*v0);
}

uint64_t sub_249A36C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A38490(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A36C2C(uint64_t a1)
{
  unint64_t v2 = sub_249A37CC8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A36C68(uint64_t a1)
{
  unint64_t v2 = sub_249A37CC8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ImageGroupConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3E38);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v21 = v1[1];
  uint64_t v9 = *((void *)v1 + 1);
  uint64_t v18 = *((void *)v1 + 2);
  uint64_t v19 = v9;
  uint64_t v10 = *((void *)v1 + 3);
  uint64_t v15 = *((void *)v1 + 4);
  uint64_t v16 = *((void *)v1 + 5);
  uint64_t v17 = v10;
  int v14 = v1[48];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A37CC8();
  sub_249AEE468();
  LOBYTE(v20) = v8;
  char v22 = 0;
  sub_24989C934();
  sub_249AEDEA8();
  if (!v2)
  {
    uint64_t v11 = v19;
    LOBYTE(v20) = v21;
    char v22 = 1;
    sub_249AEDEA8();
    uint64_t v20 = v11;
    char v22 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3E48);
    sub_249A37DC4(&qword_2696E3E50, (void (*)(void))sub_249A37D1C);
    sub_249AEDF08();
    LOBYTE(v20) = 3;
    sub_249AEDE58();
    LOBYTE(v20) = 4;
    sub_249AEDE58();
    LOBYTE(v20) = v14;
    char v22 = 5;
    sub_249A37D70();
    sub_249AEDEA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ImageGroupConfiguration.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  char v2 = *(unsigned char *)(v0 + 48);
  v5[36] = *(_WORD *)v0;
  uint64_t v6 = v1;
  long long v3 = *(_OWORD *)(v0 + 32);
  long long v7 = *(_OWORD *)(v0 + 16);
  long long v8 = v3;
  char v9 = v2;
  sub_249AEE338();
  ImageGroupConfiguration.hash(into:)((uint64_t)v5);
  return sub_249AEE388();
}

uint64_t ImageGroupConfiguration.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3E68);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A37CC8();
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    char v30 = 0;
    sub_24989C988();
    sub_249AEDDA8();
    int v9 = v28;
    char v30 = 1;
    sub_249AEDDA8();
    int v10 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3E48);
    char v30 = 2;
    sub_249A37DC4(&qword_2696E3E70, (void (*)(void))sub_249A37E40);
    sub_249AEDE08();
    int v27 = v10;
    int v29 = v9;
    uint64_t v12 = v28;
    LOBYTE(v28) = 3;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_249AEDD58();
    uint64_t v15 = v14;
    uint64_t v25 = v13;
    int v26 = a2;
    LOBYTE(v28) = 4;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_249AEDD58();
    uint64_t v18 = v17;
    uint64_t v24 = v16;
    char v30 = 5;
    sub_249A37E94();
    swift_bridgeObjectRetain();
    sub_249AEDDA8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v19 = v28;
    uint64_t v20 = v26;
    *int v26 = v29;
    v20[1] = v27;
    uint64_t v21 = v25;
    *((void *)v20 + 1) = v12;
    *((void *)v20 + 2) = v21;
    uint64_t v22 = v24;
    *((void *)v20 + 3) = v15;
    *((void *)v20 + 4) = v22;
    *((void *)v20 + 5) = v18;
    v20[48] = v19;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249A373F0()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v2 = sub_249943E98(v1, (void (*)(long long *__return_ptr, long long *))sub_249945790);
  swift_bridgeObjectRelease();
  swift_release_n();
  return v2;
}

uint64_t sub_249A37484(void *a1)
{
  return ImageGroupConfiguration.restoreAssets(from:)(a1);
}

uint64_t sub_249A3749C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ImageGroupConfiguration.init(from:)(a1, a2);
}

uint64_t sub_249A374B4(void *a1)
{
  return ImageGroupConfiguration.encode(to:)(a1);
}

uint64_t sub_249A374CC()
{
  uint64_t v1 = *(void *)(v0 + 8);
  char v2 = *(unsigned char *)(v0 + 48);
  v5[36] = *(_WORD *)v0;
  uint64_t v6 = v1;
  long long v3 = *(_OWORD *)(v0 + 32);
  long long v7 = *(_OWORD *)(v0 + 16);
  long long v8 = v3;
  char v9 = v2;
  sub_249AEE338();
  ImageGroupConfiguration.hash(into:)((uint64_t)v5);
  return sub_249AEE388();
}

uint64_t sub_249A37538()
{
  uint64_t v1 = *(void *)(v0 + 8);
  char v2 = *(unsigned char *)(v0 + 48);
  v5[36] = *(_WORD *)v0;
  uint64_t v6 = v1;
  long long v3 = *(_OWORD *)(v0 + 32);
  long long v7 = *(_OWORD *)(v0 + 16);
  long long v8 = v3;
  char v9 = v2;
  sub_249AEE338();
  ImageGroupConfiguration.hash(into:)((uint64_t)v5);
  return sub_249AEE388();
}

void (*sub_249A375A0(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_249A37898(v6);
  v6[10] = sub_249A376C0(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_249A3764C;
}

void sub_249A3764C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);

  free(v1);
}

void (*sub_249A376C0(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t *a1)
{
  uint64_t v5 = v4;
  int v10 = malloc(0x60uLL);
  *a1 = v10;
  v10[9] = a3;
  v10[10] = v4;
  v10[8] = a2;
  uint64_t v11 = *v4;
  uint64_t v13 = sub_2498EF01C(a2, a3);
  *((unsigned char *)v10 + 57) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[11] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*v5 + 56) + (v13 << 6);
        long long v20 = *(_OWORD *)v19;
        long long v21 = *(_OWORD *)(v19 + 16);
        uint64_t v22 = *(unsigned __int8 *)(v19 + 32);
        uint64_t v23 = *(void *)(v19 + 40);
        uint64_t v24 = *(void *)(v19 + 48);
        char v25 = *(unsigned char *)(v19 + 56);
LABEL_12:
        *(_OWORD *)int v10 = v20;
        *((_OWORD *)v10 + 1) = v21;
        v10[4] = v22;
        v10[5] = v23;
        v10[6] = v24;
        *((unsigned char *)v10 + 56) = v25;
        return sub_249A37838;
      }
LABEL_11:
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      char v25 = 0;
      long long v20 = 0uLL;
      long long v21 = 0uLL;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_2498E1850();
      goto LABEL_7;
    }
    sub_2498E6AA8(v16, a4 & 1);
    uint64_t v26 = sub_2498EF01C(a2, a3);
    if ((v17 & 1) == (v27 & 1))
    {
      uint64_t v13 = v26;
      v10[11] = v26;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t *))sub_249AEE2D8();
  __break(1u);
  return result;
}

void sub_249A37838(uint64_t *a1)
{
  uint64_t v1 = *a1;
  sub_249A378D4(*a1, *(unsigned char *)(*a1 + 57), *(uint64_t **)(*a1 + 80), *(void *)(*a1 + 88), *(void *)(*a1 + 64), *(void *)(*a1 + 72));
  sub_249A387B8(*(void **)v1, *(void *)(v1 + 8), *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));

  free((void *)v1);
}

uint64_t (*sub_249A37898(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_249A378C8;
}

uint64_t sub_249A378C8(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

void *sub_249A378D4(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v8 = *(void **)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  int v10 = *(void **)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  char v15 = *(unsigned char *)(a1 + 56);
  if (v14)
  {
    *(void *)&long long v19 = *(void *)a1;
    *((void *)&v19 + 1) = v9;
    *(void *)&long long v20 = v10;
    *((void *)&v20 + 1) = v11;
    v21[0] = v12;
    *(void *)&v21[8] = v13;
    *(void *)&v21[16] = v14;
    v21[24] = v15;
    if (a2)
    {
      uint64_t v16 = (_OWORD *)(*(void *)(*a3 + 56) + (a4 << 6));
      long long v17 = v20;
      *uint64_t v16 = v19;
      v16[1] = v17;
      uint64_t v16[2] = *(_OWORD *)v21;
      *(_OWORD *)((char *)v16 + 41) = *(_OWORD *)&v21[9];
    }
    else
    {
      sub_2498E8D34(a4, a5, a6, &v19, (void *)*a3);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_24992B678(a4, *a3);
  }

  return sub_249A387F8(v8, v9, v10, v11, v12, v13, v14);
}

uint64_t _s14CarPlayAssetUI23ImageGroupConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, unsigned __int8 *a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 1);
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  char v6 = *(unsigned char *)(a1 + 48);
  int v7 = *a2;
  int v8 = a2[1];
  uint64_t v9 = *((void *)a2 + 1);
  uint64_t v10 = *((void *)a2 + 5);
  unsigned __int8 v11 = a2[48];
  if (*(unsigned char *)a1 == 57)
  {
    uint64_t v32 = *((void *)a2 + 2);
    uint64_t v33 = *(void *)(a1 + 16);
    uint64_t v34 = *((void *)a2 + 3);
    uint64_t v35 = *(void *)(a1 + 24);
    uint64_t v31 = *((void *)a2 + 4);
    if (v7 != 57) {
      return 0;
    }
  }
  else
  {
    if (v7 == 57) {
      return 0;
    }
    uint64_t v32 = *((void *)a2 + 2);
    uint64_t v33 = *(void *)(a1 + 16);
    uint64_t v34 = *((void *)a2 + 3);
    uint64_t v35 = *(void *)(a1 + 24);
    uint64_t v29 = *(void *)(a1 + 40);
    uint64_t v31 = *((void *)a2 + 4);
    uint64_t v12 = *(void *)(a1 + 32);
    unsigned __int8 v13 = a2[48];
    unint64_t v14 = InstrumentDataIdentifier.rawValue.getter();
    uint64_t v16 = v15;
    if (v14 == InstrumentDataIdentifier.rawValue.getter() && v16 == v17)
    {
      swift_bridgeObjectRelease_n();
      unsigned __int8 v11 = v13;
      uint64_t v4 = v12;
      uint64_t v5 = v29;
    }
    else
    {
      char v18 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      unsigned __int8 v11 = v13;
      uint64_t v4 = v12;
      uint64_t v5 = v29;
      if ((v18 & 1) == 0) {
        return result;
      }
    }
  }
  if (v2 == 57)
  {
    if (v8 != 57) {
      return 0;
    }
  }
  else
  {
    if (v8 == 57) {
      return 0;
    }
    uint64_t v30 = v5;
    uint64_t v20 = v4;
    unsigned __int8 v21 = v11;
    unint64_t v22 = InstrumentDataIdentifier.rawValue.getter();
    uint64_t v24 = v23;
    if (v22 == InstrumentDataIdentifier.rawValue.getter() && v24 == v25)
    {
      swift_bridgeObjectRelease_n();
      unsigned __int8 v11 = v21;
      uint64_t v4 = v20;
      uint64_t v5 = v30;
    }
    else
    {
      char v26 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      unsigned __int8 v11 = v21;
      uint64_t v4 = v20;
      uint64_t v5 = v30;
      if ((v26 & 1) == 0) {
        return result;
      }
    }
  }
  if ((sub_2499FFF80(v3, v9) & 1) == 0) {
    return 0;
  }
  if (!v35)
  {
    if (v34) {
      return 0;
    }
LABEL_25:
    if (v5)
    {
      if (!v10) {
        return 0;
      }
      if (v4 != v31 || v5 != v10)
      {
        char v28 = sub_249AEE0D8();
        uint64_t result = 0;
        if ((v28 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v10)
    {
      return 0;
    }
    if (v6)
    {
      if (v11) {
        return 1;
      }
    }
    else if ((v11 & 1) == 0)
    {
      return 1;
    }
    return 0;
  }
  if (!v34) {
    return 0;
  }
  if (v33 == v32 && v35 == v34) {
    goto LABEL_25;
  }
  char v27 = sub_249AEE0D8();
  uint64_t result = 0;
  if (v27) {
    goto LABEL_25;
  }
  return result;
}

unint64_t sub_249A37CC8()
{
  unint64_t result = qword_2696E3E40;
  if (!qword_2696E3E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3E40);
  }
  return result;
}

unint64_t sub_249A37D1C()
{
  unint64_t result = qword_2696E3E58;
  if (!qword_2696E3E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3E58);
  }
  return result;
}

unint64_t sub_249A37D70()
{
  unint64_t result = qword_2696E3E60;
  if (!qword_2696E3E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3E60);
  }
  return result;
}

uint64_t sub_249A37DC4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E3E48);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249A37E40()
{
  unint64_t result = qword_2696E3E78;
  if (!qword_2696E3E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3E78);
  }
  return result;
}

unint64_t sub_249A37E94()
{
  unint64_t result = qword_2696E3E80;
  if (!qword_2696E3E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3E80);
  }
  return result;
}

unint64_t sub_249A37EEC()
{
  unint64_t result = qword_2696E3E88;
  if (!qword_2696E3E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3E88);
  }
  return result;
}

unint64_t sub_249A37F44()
{
  unint64_t result = qword_2696E3E90;
  if (!qword_2696E3E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3E90);
  }
  return result;
}

uint64_t initializeWithCopy for ImageGroupConfiguration(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ImageGroupConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for ImageGroupConfiguration(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageGroupConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageGroupConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageGroupConfiguration()
{
  return &type metadata for ImageGroupConfiguration;
}

unsigned char *storeEnumTagSinglePayload for ImageGroupConfiguration.InstrumentDataTransformationType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x249A3824CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageGroupConfiguration.InstrumentDataTransformationType()
{
  return &type metadata for ImageGroupConfiguration.InstrumentDataTransformationType;
}

unsigned char *storeEnumTagSinglePayload for ImageGroupConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A38350);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageGroupConfiguration.CodingKeys()
{
  return &type metadata for ImageGroupConfiguration.CodingKeys;
}

unint64_t sub_249A3838C()
{
  unint64_t result = qword_2696E3E98;
  if (!qword_2696E3E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3E98);
  }
  return result;
}

unint64_t sub_249A383E4()
{
  unint64_t result = qword_2696E3EA0;
  if (!qword_2696E3EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3EA0);
  }
  return result;
}

unint64_t sub_249A3843C()
{
  unint64_t result = qword_2696E3EA8;
  if (!qword_2696E3EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3EA8);
  }
  return result;
}

uint64_t sub_249A38490(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000249B17180 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736574617473 && a2 == 0xE600000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x53746C7561666564 && a2 == 0xEC00000065746174 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6465746361646572 && a2 == 0xED00006574617453 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000249B171A0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_249A38764()
{
  unint64_t result = qword_2696E3EB0[0];
  if (!qword_2696E3EB0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2696E3EB0);
  }
  return result;
}

void *sub_249A387B8(void *result, uint64_t a2, void *a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  if (a7)
  {
    sub_2498826E4(result, a2, a3, a4, a5);
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_249A387F8(void *result, uint64_t a2, void *a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  if (a7)
  {
    sub_24988247C(result, a2, a3, a4, a5);
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t (*SlotViewBuilder.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (**a5)(uint64_t a1)@<X8>))(uint64_t a1)
{
  unint64_t result = (uint64_t (*)(uint64_t))swift_allocObject();
  *((void *)result + 2) = a3;
  *((void *)result + 3) = a4;
  *((void *)result + 4) = a1;
  *((void *)result + 5) = a2;
  *a5 = sub_249A38970;
  a5[1] = result;
  return result;
}

uint64_t sub_249A388A8(uint64_t a1)
{
  __n128 v1 = MEMORY[0x270FA5388](a1);
  v2(v1);
  return sub_249AECAF8();
}

uint64_t sub_249A38938()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_249A38970(uint64_t a1)
{
  return sub_249A388A8(a1);
}

ValueMetadata *type metadata accessor for SlotViewBuilder()
{
  return &type metadata for SlotViewBuilder;
}

uint64_t sub_249A3898C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_249AEC238();
  __n128 v5 = MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(a2 - 8) + 16))((char *)&v8 - v6, a1, a2, v5);
  swift_storeEnumTagMultiPayload();
  return sub_249AEC248();
}

uint64_t sub_249A38A84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_249AEC238();
  __n128 v6 = MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(a3 - 8) + 16))((char *)&v9 - v7, a1, a3, v6);
  swift_storeEnumTagMultiPayload();
  return sub_249AEC248();
}

uint64_t Angle.description.getter()
{
  return 0;
}

uint64_t sub_249A38C2C()
{
  return 0;
}

uint64_t IdentifiableIndices.Element.id.getter@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);

  return v4(a1, v1, AssociatedTypeWitness);
}

uint64_t sub_249A38D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a3, a1, AssociatedTypeWitness);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for IdentifiableIndices.Element() + 44);
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);

  return v9(v7, a2, v8);
}

uint64_t IdentifiableIndices.startIndex.getter(uint64_t a1)
{
  return sub_249A38F04(a1, MEMORY[0x263F8D7B0]);
}

uint64_t IdentifiableIndices.endIndex.getter(uint64_t a1)
{
  return sub_249A38F04(a1, MEMORY[0x263F8D7E0]);
}

uint64_t sub_249A38F04(uint64_t a1, uint64_t (*a2)(void, void))
{
  return a2(*(void *)(a1 + 16), *(void *)(*(void *)(*(void *)(a1 + 24) + 8) + 8));
}

uint64_t IdentifiableIndices.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a3;
  uint64_t v19 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v18 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  __n128 v6 = (char *)&v16 - v5;
  swift_getAssociatedTypeWitness();
  uint64_t v7 = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = swift_checkMetadataState();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unsigned __int8 v13 = (char *)&v16 - v12;
  unint64_t v14 = (void (*)(unsigned char *, void))sub_249AED718();
  (*(void (**)(char *))(v11 + 16))(v13);
  v14(v21, 0);
  sub_249AEDAA8();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v6, a1, v18);
  return sub_249A38D90((uint64_t)v9, (uint64_t)v6, v20);
}

uint64_t IdentifiableIndices.index(before:)(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270F9D3F8](a1, *(void *)(a2 + 16), *(void *)(*(void *)(a2 + 24) + 8));
}

uint64_t IdentifiableIndices.index(after:)(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270F9E0A8](a1, *(void *)(a2 + 16), *(void *)(*(void *)(*(void *)(a2 + 24) + 8) + 8));
}

uint64_t sub_249A391D8()
{
  swift_getWitnessTable();

  return sub_249AECFC8();
}

uint64_t sub_249A39258()
{
  swift_getWitnessTable();

  return sub_249AECFD8();
}

uint64_t sub_249A392C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249A39684(a1, a2, a3, (void (*)(uint64_t, uint64_t, __n128))IdentifiableIndices.index(before:));
}

uint64_t sub_249A392E4()
{
  swift_getWitnessTable();

  return sub_249AED648();
}

void (*sub_249A39374(uint64_t **a1, uint64_t a2, uint64_t a3))(void *a1)
{
  __n128 v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_249A3942C(v6, a2, a3);
  return sub_249A393E4;
}

void sub_249A393E4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_249A3942C(uint64_t *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = type metadata accessor for IdentifiableIndices.Element();
  *a1 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  a1[1] = v7;
  uint64_t v8 = malloc(*(void *)(v7 + 64));
  a1[2] = (uint64_t)v8;
  IdentifiableIndices.subscript.getter(a2, a3, (uint64_t)v8);
  return sub_249A394F0;
}

void sub_249A394F0(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);

  free(v1);
}

uint64_t sub_249A39550@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_249AED8D8();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_249A395E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249A3DE04(a1, a2, a3, a4, MEMORY[0x263F8D870], MEMORY[0x263F8D170]);
}

uint64_t sub_249A39624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249A3DE04(a1, a2, a3, a4, MEMORY[0x263F8D1A0], MEMORY[0x263F8D180]);
}

uint64_t sub_249A3966C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249A39684(a1, a2, a3, (void (*)(uint64_t, uint64_t, __n128))IdentifiableIndices.index(after:));
}

uint64_t sub_249A39684(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, __n128))
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v9 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v13 - v10;
  a4(a1, a2, v9);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v11, AssociatedTypeWitness);
}

uint64_t sub_249A397A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v7 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  __n128 v9 = (char *)&v13 - v8;
  uint64_t v10 = *(void *)(a1 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 16))(a2, v2, a1, v7);
  IdentifiableIndices.startIndex.getter(a1);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2, a1);
  swift_getWitnessTable();
  uint64_t v11 = sub_249AEDC18();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2 + *(int *)(v11 + 36), v9, AssociatedTypeWitness);
}

uint64_t sub_249A39930(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F9E108](a1, WitnessTable);
}

uint64_t sub_249A39984(uint64_t a1)
{
  swift_getWitnessTable();
  uint64_t v3 = sub_249A3E074();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8))(v1, a1);
  return v3;
}

uint64_t sub_249A39A14()
{
  return sub_249AED2D8();
}

uint64_t RandomAccessCollection<>.identifiableIndices.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t ForEach<>.init<A>(_:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  v23[1] = a4;
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v26 = a1;
  uint64_t v27 = a9;
  uint64_t v16 = type metadata accessor for IdentifiableIndices();
  uint64_t v17 = *(void *)(v16 - 8);
  __n128 v18 = MEMORY[0x270FA5388](v16);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16))((char *)v23 - v19, a1, v16, v18);
  uint64_t v20 = (void *)swift_allocObject();
  uint64_t v20[2] = a4;
  void v20[3] = a5;
  v20[4] = a6;
  v20[5] = a7;
  v20[6] = a8;
  v20[7] = a10;
  uint64_t v21 = v25;
  v20[8] = v24;
  v20[9] = v21;
  swift_getWitnessTable();
  type metadata accessor for IdentifiableIndices.Element();
  swift_getWitnessTable();
  sub_249AECB58();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v26, v16);
}

uint64_t type metadata accessor for IdentifiableIndices()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_249A39D10(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v20 - v15;
  uint64_t v17 = type metadata accessor for IdentifiableIndices.Element();
  a2(a1 + *(int *)(v17 + 44));
  sub_2499D044C(v13, a5, a7);
  __n128 v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v13, a5);
  sub_2499D044C(v16, a5, a7);
  return ((uint64_t (*)(char *, uint64_t))v18)(v16, a5);
}

uint64_t sub_249A39E70()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_249A39EA8(uint64_t a1)
{
  return sub_249A39D10(a1, *(void (**)(uint64_t))(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t type metadata accessor for IdentifiableIndices.Element()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t ForEach<>.init<A>(_:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  return sub_249A3A590(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, (uint64_t)&unk_26FDB0598, (uint64_t)sub_249A3A534);
}

{
  return sub_249A3A590(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, (uint64_t)&unk_26FDB05C0, (uint64_t)sub_249A3B0C4);
}

uint64_t sub_249A39F38@<X0>(uint64_t a1@<X0>, void (*a2)(char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v82 = a1;
  uint64_t v83 = a5;
  uint64_t v75 = a3;
  long long v76 = a2;
  uint64_t v77 = a9;
  uint64_t v80 = a4;
  uint64_t v81 = a10;
  uint64_t v71 = a11;
  uint64_t v84 = a12;
  uint64_t v85 = a8;
  uint64_t v86 = type metadata accessor for IdentifiableIndices.Element();
  uint64_t v64 = *(void *)(v86 - 8);
  uint64_t v14 = *(void *)(v64 + 64);
  MEMORY[0x270FA5388](v86);
  long long v73 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v55 - v16;
  uint64_t v61 = (char *)v55 - v16;
  uint64_t v79 = a7;
  uint64_t v18 = sub_249AECB38();
  uint64_t v78 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  MEMORY[0x270FA5388](v18);
  uint64_t v66 = (char *)v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)v55 - v22;
  uint64_t v60 = (char *)v55 - v22;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v74 = sub_249AECB38();
  uint64_t v72 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  uint64_t v68 = (char *)v55 - v24;
  uint64_t v57 = a6;
  uint64_t v70 = *(void *)(a6 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v65 = (char *)v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v28 = MEMORY[0x270FA5388](v27);
  uint64_t v67 = (char *)v55 - v29;
  uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v19 + 16);
  v63(v23, v80, v18, v28);
  uint64_t v30 = v64;
  uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 16);
  v62(v17, v82, v86);
  uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
  unint64_t v59 = (*(unsigned __int8 *)(v19 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v32 = v59;
  uint64_t v58 = ((v20 + v59 + v31) & ~v31) + v14;
  unint64_t v33 = (v20 + v59 + v31) & ~v31;
  v55[0] = v33;
  uint64_t v34 = (char *)swift_allocObject();
  *((void *)v34 + 2) = 0;
  *((void *)v34 + 3) = 0;
  *((void *)v34 + 4) = v83;
  *((void *)v34 + 5) = a6;
  uint64_t v35 = v85;
  *((void *)v34 + 6) = v79;
  *((void *)v34 + 7) = v35;
  uint64_t v36 = v71;
  *((void *)v34 + 8) = v81;
  *((void *)v34 + 9) = v36;
  *((void *)v34 + 10) = v84;
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v55[1] = v19 + 32;
  uint64_t v56 = v37;
  uint64_t v38 = v78;
  v37(&v34[v32], v60, v78);
  uint64_t v39 = &v34[v33];
  long long v40 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  uint64_t v41 = v86;
  v40(v39, v61, v86);
  long long v42 = v66;
  ((void (*)(char *, uint64_t, uint64_t))v63)(v66, v80, v38);
  long long v43 = v73;
  v62(v73, v82, v41);
  uint64_t v44 = (char *)swift_allocObject();
  *((void *)v44 + 2) = 0;
  *((void *)v44 + 3) = 0;
  uint64_t v45 = v57;
  *((void *)v44 + 4) = v83;
  *((void *)v44 + 5) = v45;
  uint64_t v46 = v78;
  uint64_t v47 = v85;
  *((void *)v44 + 6) = v79;
  *((void *)v44 + 7) = v47;
  *((void *)v44 + 8) = v81;
  *((void *)v44 + 9) = v36;
  uint64_t v48 = &v44[v59];
  *((void *)v44 + 10) = v84;
  v56(v48, v42, v46);
  v40(&v44[v55[0]], v43, v86);
  uint64_t v49 = v68;
  sub_249AECB28();
  uint64_t v50 = v65;
  v76(v49);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v49, v74);
  uint64_t v51 = v67;
  uint64_t v52 = v47;
  sub_2499D044C(v50, v45, v47);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v70 + 8);
  v53(v50, v45);
  sub_2499D044C(v51, v45, v52);
  return ((uint64_t (*)(char *, uint64_t))v53)(v51, v45);
}

uint64_t sub_249A3A534(uint64_t a1)
{
  return sub_249A3B0DC(a1, (uint64_t (*)(uint64_t, void, void, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t))sub_249A39F38);
}

uint64_t sub_249A3A590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v49 = a3;
  uint64_t v50 = a8;
  uint64_t v47 = a2;
  uint64_t v48 = a7;
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  uint64_t v51 = a9;
  uint64_t v52 = a13;
  uint64_t v44 = a12;
  uint64_t v40 = a11;
  uint64_t v41 = a10;
  uint64_t v15 = sub_249AECB38();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v37 - v17;
  uint64_t v37 = (char *)&v37 - v17;
  uint64_t v43 = type metadata accessor for IdentifiableIndices();
  MEMORY[0x270FA5388](v43);
  uint64_t v20 = (char *)&v37 - v19;
  long long v42 = (char *)&v37 - v19;
  uint64_t v21 = *(void *)(a6 - 8);
  __n128 v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = a1;
  MEMORY[0x24C5ADC80](v15, v23);
  RandomAccessCollection<>.identifiableIndices.getter(a6, (uint64_t)v20);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v25, a6);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v27 = v18;
  uint64_t v28 = v15;
  uint64_t v38 = v15;
  v26(v27, a1, v15);
  unint64_t v29 = (*(unsigned __int8 *)(v16 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v30 = (char *)swift_allocObject();
  uint64_t v31 = v46;
  *((void *)v30 + 2) = v45;
  *((void *)v30 + 3) = v31;
  uint64_t v32 = v48;
  *((void *)v30 + 4) = a6;
  *((void *)v30 + 5) = v32;
  uint64_t v34 = v40;
  uint64_t v33 = v41;
  *((void *)v30 + 6) = v50;
  *((void *)v30 + 7) = v33;
  uint64_t v35 = v47;
  *((void *)v30 + 8) = v34;
  *((void *)v30 + 9) = v35;
  *((void *)v30 + 10) = v49;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v30[v29], v37, v28);
  swift_getWitnessTable();
  type metadata accessor for IdentifiableIndices.Element();
  swift_getWitnessTable();
  sub_249AECB58();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v39, v38);
}

uint64_t sub_249A3A8AC@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v100 = a8;
  uint64_t v101 = a6;
  uint64_t v99 = a5;
  uint64_t v74 = a4;
  uint64_t v92 = a3;
  long long v93 = a2;
  uint64_t v94 = a9;
  uint64_t v97 = a10;
  uint64_t v98 = a11;
  uint64_t v88 = a12;
  uint64_t v16 = type metadata accessor for IdentifiableIndices.Element();
  uint64_t v83 = *(void *)(v16 - 8);
  uint64_t v75 = *(void *)(v83 + 64);
  MEMORY[0x270FA5388](v16);
  long long v90 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v79 = (char *)&v65 - v19;
  uint64_t v76 = sub_249AECB38();
  uint64_t v20 = *(void *)(v76 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  MEMORY[0x270FA5388](v76);
  uint64_t v84 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v65 - v23;
  uint64_t v70 = (char *)&v65 - v23;
  uint64_t v96 = a7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v91 = sub_249AECB38();
  uint64_t v89 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v85 = (char *)&v65 - v25;
  uint64_t v80 = swift_getAssociatedTypeWitness();
  uint64_t v81 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v77 = (char *)&v65 - v26;
  uint64_t v86 = *(void *)(a6 - 8);
  MEMORY[0x270FA5388]((char *)&v65 - v26);
  uint64_t v78 = (char *)&v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v29 = MEMORY[0x270FA5388](v28);
  uint64_t v82 = (char *)&v65 - v30;
  uint64_t v95 = v16;
  uint64_t v72 = a1;
  (*(void (**)(__n128))(v31 + 16))(v29);
  uint64_t v32 = v20;
  long long v73 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v33 = v76;
  v73(v24, a4, v76);
  uint64_t v34 = v83;
  uint64_t v71 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 16);
  uint64_t v35 = v79;
  v71(v79, a1, v16);
  uint64_t v36 = *(unsigned __int8 *)(v32 + 80);
  uint64_t v37 = v32;
  uint64_t v38 = *(unsigned __int8 *)(v34 + 80);
  uint64_t v39 = (v36 + 88) & ~v36;
  uint64_t v68 = v39;
  uint64_t v40 = (v21 + v39 + v38) & ~v38;
  v75 += v40;
  uint64_t v66 = v40;
  uint64_t v69 = v36 | v38 | 7;
  uint64_t v41 = (void *)swift_allocObject();
  _OWORD v41[2] = 0;
  v41[3] = 0;
  uint64_t v42 = v101;
  v41[4] = v99;
  v41[5] = v42;
  uint64_t v43 = v100;
  v41[6] = v96;
  v41[7] = v43;
  uint64_t v44 = v98;
  v41[8] = v97;
  v41[9] = v44;
  uint64_t v45 = v88;
  v41[10] = v88;
  uint64_t v46 = (char *)v41 + v39;
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  uint64_t v67 = v37 + 32;
  v47(v46, v70, v33);
  uint64_t v48 = (char *)v41 + v40;
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  uint64_t v50 = v95;
  v49(v48, v35, v95);
  uint64_t v51 = v84;
  v73(v84, v74, v33);
  uint64_t v52 = v90;
  v71(v90, v72, v50);
  uint64_t v53 = (char *)swift_allocObject();
  *((void *)v53 + 2) = 0;
  *((void *)v53 + 3) = 0;
  uint64_t v54 = v100;
  uint64_t v55 = v101;
  *((void *)v53 + 4) = v99;
  *((void *)v53 + 5) = v55;
  *((void *)v53 + 6) = v96;
  *((void *)v53 + 7) = v54;
  uint64_t v56 = v98;
  *((void *)v53 + 8) = v97;
  *((void *)v53 + 9) = v56;
  uint64_t v57 = &v53[v68];
  *((void *)v53 + 10) = v45;
  v47(v57, v51, v33);
  v49(&v53[v66], v52, v95);
  uint64_t v58 = v85;
  sub_249AECB28();
  unint64_t v59 = v78;
  uint64_t v60 = v77;
  v93(v77, v58);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v58, v91);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v60, v80);
  uint64_t v61 = v82;
  uint64_t v62 = v101;
  sub_2499D044C(v59, v101, v54);
  uint64_t v63 = *(void (**)(char *, uint64_t))(v86 + 8);
  v63(v59, v62);
  sub_2499D044C(v61, v62, v54);
  return ((uint64_t (*)(char *, uint64_t))v63)(v61, v62);
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = (int *)(sub_249AECB38() - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (v3 + 88) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v4 + v2[10], v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_249A3B0C4(uint64_t a1)
{
  return sub_249A3B0DC(a1, (uint64_t (*)(uint64_t, void, void, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t))sub_249A3A8AC);
}

uint64_t sub_249A3B0DC(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t))
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(v2 + 32);
  uint64_t v8 = *(void *)(v2 + 40);
  long long v12 = *(_OWORD *)(v2 + 48);
  uint64_t v9 = *(void *)(v2 + 64);
  uint64_t v10 = *(void *)(sub_249AECB38() - 8);
  return a2(a1, *(void *)(v2 + 72), *(void *)(v2 + 80), v2 + ((*(unsigned __int8 *)(v10 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v5, v6, v7, v8, v12, *((void *)&v12 + 1), v9);
}

uint64_t sub_249A3B1B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_249AECB38();
  MEMORY[0x24C5ADC80](v8);
  type metadata accessor for IdentifiableIndices.Element();
  uint64_t v9 = (void (*)(unsigned char *, void))sub_249AED718();
  uint64_t v11 = v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a3, v11, AssociatedTypeWitness);
  v9(v14, 0);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, a2);
}

uint64_t sub_249A3B34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v25 = a5;
  uint64_t v26 = a1;
  v24[0] = a11;
  v24[1] = a12;
  MEMORY[0x270FA5388](a1);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v15 = (char *)v24 - v14;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v24 - v18;
  uint64_t v20 = type metadata accessor for IdentifiableIndices.Element();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v25 + *(int *)(v20 + 44), v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v26, AssociatedTypeWitness);
  uint64_t v21 = sub_249AECB38();
  MEMORY[0x24C5ADC80](v21, v22);
  sub_249AED068();
  return sub_249AECB18();
}

uint64_t Binding.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24C5ADC80](v7, v4);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t Binding.subscript.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24C5ADC80](v10, v7);
  uint64_t v11 = (void (*)(unsigned char *, void))swift_readAtKeyPath();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*MEMORY[0x263F8DE50] + v4 + 8) - 8) + 16))(a3);
  v11(v13, 0);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_249A3B7E0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  uint64_t v5 = sub_249AECB38();
  swift_retain();
  sub_249A3E284(a1, v4, v5);

  return swift_release();
}

uint64_t Binding.subscript.setter(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  sub_249A3E284(a1, (uint64_t)a2, a3);
  swift_release();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*MEMORY[0x263F8DE50] + v4 + 8) - 8) + 8);

  return v5(a1);
}

void (*Binding.subscript.modify(void *a1, uint64_t *a2, uint64_t a3))(uint64_t **a1, char a2)
{
  __n128 v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[1] = a3;
  v7[2] = v3;
  *__n128 v7 = a2;
  uint64_t v8 = *(void *)(*MEMORY[0x263F8DE50] + *a2 + 8);
  v7[3] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[4] = v9;
  size_t v10 = *(void *)(v9 + 64);
  v7[5] = malloc(v10);
  uint64_t v11 = malloc(v10);
  v7[6] = v11;
  Binding.subscript.getter(a2, a3, (uint64_t)v11);
  return sub_249A3BA10;
}

void sub_249A3BA10(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[5];
  uint64_t v4 = (void *)(*a1)[6];
  uint64_t v5 = (*a1)[3];
  uint64_t v6 = (*a1)[4];
  uint64_t v7 = (*a1)[1];
  uint64_t v8 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[5], v4, v5);
    swift_retain();
    sub_249A3E284((uint64_t)v3, v8, v7);
    swift_release();
    uint64_t v9 = *(void (**)(void *, uint64_t))(v6 + 8);
    v9(v3, v5);
    v9(v4, v5);
  }
  else
  {
    swift_retain();
    sub_249A3E284((uint64_t)v4, v8, v7);
    swift_release();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t Binding<A>.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v32 = a5;
  uint64_t v33 = a4;
  uint64_t v29 = a2;
  uint64_t v30 = a6;
  uint64_t v31 = a1;
  uint64_t v26 = a3;
  uint64_t v8 = sub_249AECB38();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v28 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v25 - v13;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
  v27((char *)v25 - v13, a1, v8, v12);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v25[1] = v15 + v10;
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = 0;
  *((void *)v16 + 3) = 0;
  uint64_t v17 = v29;
  *((void *)v16 + 4) = v29;
  *((void *)v16 + 5) = a3;
  uint64_t v18 = v32;
  *((void *)v16 + 6) = v33;
  *((void *)v16 + 7) = v18;
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v19(&v16[v15], v14, v8);
  uint64_t v20 = v28;
  ((void (*)(char *, uint64_t, uint64_t))v27)(v28, v31, v8);
  uint64_t v21 = (char *)swift_allocObject();
  *((void *)v21 + 2) = 0;
  *((void *)v21 + 3) = 0;
  uint64_t v22 = v26;
  *((void *)v21 + 4) = v17;
  *((void *)v21 + 5) = v22;
  uint64_t v23 = v32;
  *((void *)v21 + 6) = v33;
  *((void *)v21 + 7) = v23;
  v19(&v21[v15], v20, v8);
  sub_249AECB28();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v31, v8);
}

uint64_t sub_249A3BD64(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v1 = sub_249AECB38();
  MEMORY[0x24C5ADC80](v1);
  return sub_249AECE68();
}

uint64_t sub_249A3BE28(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v4 = MEMORY[0x270FA5388](v3);
  (*(void (**)(char *, __n128))(v5 + 16))(v2, v4);
  sub_249AECE68();
  sub_249AECB38();
  return sub_249AECB18();
}

uint64_t Binding<A>.init(_:skipping:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v35 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = a2;
  uint64_t v39 = *(void *)(a3 - 8);
  uint64_t v40 = *(void *)(v39 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v37 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_249AECB38();
  uint64_t v9 = *(void *)(v31 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v31);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v13 = MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)&v31 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, __n128))(v9 + 16);
  uint64_t v36 = a1;
  v16((char *)&v31 - v14, a1, v13);
  uint64_t v17 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v38 = v9;
  uint64_t v18 = (v17 + 48) & ~v17;
  uint64_t v32 = v18 + v10;
  uint64_t v33 = v17 | 7;
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = 0;
  *((void *)v19 + 3) = 0;
  *((void *)v19 + 4) = a3;
  *((void *)v19 + 5) = a4;
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  uint64_t v20 = v15;
  uint64_t v21 = v31;
  v34(&v19[v18], v20, v31);
  uint64_t v22 = a1;
  uint64_t v23 = v21;
  ((void (*)(char *, uint64_t, uint64_t))v16)(v11, v22, v21);
  uint64_t v24 = v39;
  uint64_t v25 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v37, v42, a3);
  uint64_t v26 = v24;
  unint64_t v27 = (v32 + *(unsigned __int8 *)(v24 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v28 = (char *)swift_allocObject();
  *((void *)v28 + 2) = 0;
  *((void *)v28 + 3) = 0;
  uint64_t v29 = v35;
  *((void *)v28 + 4) = a3;
  *((void *)v28 + 5) = v29;
  v34(&v28[v18], v11, v23);
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v28[v27], v25, a3);
  sub_249AECB28();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v42, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v36, v23);
}

uint64_t sub_249A3C290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void *)(a6 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_249AED088())
  {
    uint64_t v11 = sub_249AECB38();
    MEMORY[0x24C5ADC80](v11);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a6);
  }
  sub_249AECB38();
  return sub_249AECB18();
}

uint64_t Binding<A>.skipping(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v13 = MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v16 + 16))(v15, v4, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  return Binding<A>.init(_:skipping:)((uint64_t)v15, (uint64_t)v11, v8, a3, a4);
}

uint64_t sub_249A3C514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v83 = a1;
  uint64_t v88 = a3;
  swift_getWitnessTable();
  uint64_t v4 = sub_249AEC298();
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v91 = sub_249AEC288();
  uint64_t v7 = sub_249AEBD88();
  uint64_t v75 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v74 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  long long v73 = (char *)&v69 - v10;
  uint64_t v11 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v76 = v13;
  uint64_t v80 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_249AED568();
  uint64_t v70 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  unint64_t v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = v5;
  uint64_t v20 = sub_249AEC118();
  uint64_t v89 = v4;
  uint64_t v90 = v20;
  uint64_t v21 = sub_249AEBD88();
  uint64_t v72 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v71 = (char *)&v69 - v25;
  uint64_t v87 = v7;
  uint64_t v26 = sub_249AEC258();
  uint64_t v85 = *(void *)(v26 - 8);
  uint64_t v86 = v26;
  __n128 v27 = MEMORY[0x270FA5388](v26);
  uint64_t v84 = (char *)&v69 - v28;
  LODWORD(v7) = *(unsigned __int8 *)(v77 + *(int *)(a2 + 44));
  uint64_t v29 = v77;
  uint64_t v30 = v77 + *(int *)(a2 + 36);
  uint64_t v81 = v16;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16);
  uint64_t v79 = v19;
  v31(v19, v30, v6, v27);
  if (v7 == 1)
  {
    uint64_t v32 = v29 + *(int *)(a2 + 40);
    uint64_t v75 = v21;
    uint64_t v33 = v70;
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v15, v32, v78);
    uint64_t v34 = v80;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v80, v29, a2);
    unint64_t v35 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v36 = swift_allocObject();
    uint64_t v37 = v82;
    *(void *)(v36 + 16) = v6;
    *(void *)(v36 + 24) = v37;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v36 + v35, v34, a2);
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v39 = v79;
    uint64_t v40 = WitnessTable;
    sub_249AEC768();
    swift_release();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v78);
    uint64_t v41 = v75;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v39, v6);
    uint64_t v42 = swift_getWitnessTable();
    uint64_t v94 = v40;
    uint64_t v95 = v42;
    uint64_t v43 = swift_getWitnessTable();
    uint64_t v44 = v71;
    sub_2499D044C(v23, v41, v43);
    uint64_t v45 = *(void (**)(char *, uint64_t))(v72 + 8);
    v45(v23, v41);
    sub_2499D044C(v44, v41, v43);
    uint64_t v46 = swift_getWitnessTable();
    uint64_t v92 = v40;
    uint64_t v93 = v46;
    swift_getWitnessTable();
    uint64_t v47 = v84;
    sub_249A3898C((uint64_t)v23, v41);
    v45(v23, v41);
    v45(v44, v41);
  }
  else
  {
    uint64_t v48 = v80;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v80, v29, a2);
    unint64_t v49 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v50 = swift_allocObject();
    uint64_t v51 = v82;
    *(void *)(v50 + 16) = v6;
    *(void *)(v50 + 24) = v51;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v50 + v49, v48, a2);
    uint64_t v52 = swift_getWitnessTable();
    uint64_t v53 = (uint64_t)v74;
    uint64_t v54 = v79;
    sub_249AEC7D8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v54, v6);
    uint64_t v55 = swift_getWitnessTable();
    uint64_t v104 = v52;
    uint64_t v105 = v55;
    uint64_t v56 = v87;
    uint64_t v57 = swift_getWitnessTable();
    uint64_t v58 = v73;
    sub_2499D044C(v53, v56, v57);
    unint64_t v59 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
    v59(v53, v56);
    sub_2499D044C(v58, v56, v57);
    uint64_t v60 = swift_getWitnessTable();
    uint64_t v102 = v52;
    uint64_t v103 = v60;
    swift_getWitnessTable();
    uint64_t v47 = v84;
    sub_249A38A84(v53, v21, v56);
    v59(v53, v56);
    v59((uint64_t)v58, v56);
  }
  uint64_t v61 = swift_getWitnessTable();
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v100 = v61;
  uint64_t v101 = v62;
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v64 = swift_getWitnessTable();
  uint64_t v98 = v61;
  uint64_t v99 = v64;
  uint64_t v65 = swift_getWitnessTable();
  uint64_t v96 = v63;
  uint64_t v97 = v65;
  uint64_t v66 = v86;
  uint64_t v67 = swift_getWitnessTable();
  sub_2499D044C(v47, v66, v67);
  return (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v47, v66);
}

uint64_t sub_249A3CF18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  void v3[2] = a1;
  sub_249AED548();
  v3[5] = sub_249AED538();
  uint64_t v5 = sub_249AED528();
  v3[6] = v5;
  v3[7] = v4;
  return MEMORY[0x270FA2498](sub_249A3CFB4, v5, v4);
}

uint64_t sub_249A3CFB4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (void *)(v1 + *(int *)(type metadata accessor for TaskConditional() + 48));
  uint64_t v5 = (uint64_t (*)(void))(*v2 + *(int *)*v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_249A3D094;
  return v5();
}

uint64_t sub_249A3D094()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return MEMORY[0x270FA2498](sub_249A41BC8, v3, v2);
}

uint64_t sub_249A3D1B4(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v5 = type metadata accessor for TaskConditional();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4048);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v24 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4050);
  sub_249AECA58();
  if (v25)
  {
    sub_249AED578();
    swift_release();
  }
  uint64_t v12 = (char *)a2 + *(int *)(v5 + 40);
  uint64_t v13 = sub_249AED568();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  (*(void (**)(char *, long long *, uint64_t))(v6 + 16))(v8, a2, v5);
  sub_249AED548();
  uint64_t v15 = sub_249AED538();
  unint64_t v16 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v17 = (char *)swift_allocObject();
  uint64_t v18 = MEMORY[0x263F8F500];
  *((void *)v17 + 2) = v15;
  *((void *)v17 + 3) = v18;
  uint64_t v19 = v23;
  *((void *)v17 + 4) = v22;
  *((void *)v17 + 5) = v19;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v17[v16], v8, v5);
  uint64_t v20 = sub_249AA1D74((uint64_t)v11, (uint64_t)&unk_2696E4060, (uint64_t)v17);
  long long v24 = *a2;
  uint64_t v25 = v20;
  return sub_249AECA68();
}

uint64_t sub_249A3D47C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  uint64_t v6[2] = a4;
  sub_249AED548();
  v6[5] = sub_249AED538();
  uint64_t v8 = sub_249AED528();
  v6[6] = v8;
  v6[7] = v7;
  return MEMORY[0x270FA2498](sub_249A3D518, v8, v7);
}

uint64_t sub_249A3D518()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (void *)(v1 + *(int *)(type metadata accessor for TaskConditional() + 48));
  uint64_t v5 = (uint64_t (*)(void))(*v2 + *(int *)*v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_249A3D5F8;
  return v5();
}

uint64_t sub_249A3D5F8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return MEMORY[0x270FA2498](sub_249A3D718, v3, v2);
}

uint64_t sub_249A3D718()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_249A3D778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4068);
  sub_249AECA48();
  *(_OWORD *)a7 = v19;
  uint64_t v14 = (int *)type metadata accessor for TaskConditional();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(&a7[v14[9]], a1, a6);
  uint64_t v15 = &a7[v14[10]];
  uint64_t v16 = sub_249AED568();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, a2, v16);
  a7[v14[11]] = a3;
  uint64_t v18 = &a7[v14[12]];
  *(void *)uint64_t v18 = a4;
  *((void *)v18 + 1) = a5;
  return result;
}

uint64_t View.task<A>(id:priority:runOnAppear:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v33 = a8;
  uint64_t v31 = a9;
  uint64_t v32 = a6;
  uint64_t v27 = a2;
  uint64_t v28 = a5;
  uint64_t v30 = a4;
  int v29 = a3;
  uint64_t v26 = a1;
  uint64_t v10 = sub_249AED568();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a7 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for TaskConditional();
  uint64_t v19 = *(void *)(v18 - 8);
  __n128 v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v25 - v21;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v17, v26, a7, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v27, v10);
  uint64_t v23 = v28;
  swift_retain();
  sub_249A3D778((uint64_t)v17, (uint64_t)v13, v29, v30, v23, a7, v22);
  MEMORY[0x24C5AD930](v22, v32, v18, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v18);
}

uint64_t EdgeInsets.hash(into:)()
{
  return sub_249AEE378();
}

uint64_t EdgeInsets.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t sub_249A3DBE8()
{
  return sub_249AEE388();
}

uint64_t sub_249A3DC50()
{
  return EdgeInsets.hash(into:)();
}

uint64_t sub_249A3DC5C()
{
  return sub_249AEE388();
}

double UIEdgeInsets.init(_:layoutDirection:)(uint64_t a1, double a2)
{
  uint64_t v4 = sub_249AEBD78();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x263F18DD0], v4, v6);
  sub_249AEBD68();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v9(a1, v4);
  v9((uint64_t)v8, v4);
  return a2;
}

uint64_t sub_249A3DE04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t v23 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v22 - v17;
  char v19 = sub_249AED018();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  char v20 = v23(v18, &v14[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_249A3E078(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_249AED778();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v17 - v10;
  v17[1] = AssociatedConformanceWitness;
  LOBYTE(AssociatedConformanceWitness) = sub_249AED018();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a1, v5);
  v12(v8, a2, v5);
  if ((AssociatedConformanceWitness & 1) == 0)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16(v8, v5);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v16)(v11, v5);
    goto LABEL_5;
  }
  char v13 = sub_249AED018();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v8, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
  if ((v13 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_249A3E284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x270FA5388](a1);
  __n128 v5 = MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, __n128))(v7 + 16))((char *)&v9 - v6, v5);
  MEMORY[0x24C5ADC80](a3);
  swift_setAtWritableKeyPath();
  return sub_249AECB18();
}

uint64_t sub_249A3E3E4()
{
  sub_249AECB38();
  uint64_t v1 = *(void *)(v0 + 16);

  return sub_249A3BD64(v1);
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = (int *)(sub_249AECB38() - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v4 + v2[10], v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_249A3E588(uint64_t a1)
{
  sub_249AECB38();

  return sub_249A3BE28(a1);
}

uint64_t sub_249A3E628()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = (int *)(sub_249AECB38() - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v4 + v2[10], v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_249A3E728()
{
  return MEMORY[0x24C5ADC80]();
}

uint64_t sub_249A3E794()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = (int *)(sub_249AECB38() - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = *(void *)(v1 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v4 + *(void *)(*(void *)v2 + 64) + v6) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v3 | v6 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  uint64_t v10 = v0 + v4 + v2[10];
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v11(v10, v1);
  v11(v0 + v7, v1);

  return MEMORY[0x270FA0238](v0, v8, v9);
}

uint64_t sub_249A3E8F0(uint64_t a1)
{
  uint64_t v3 = v1[4];
  uint64_t v4 = *(void *)(sub_249AECB38() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = (uint64_t)v1
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));

  return sub_249A3C290(a1, v6, v7, (uint64_t)v1 + v5, v8, v3);
}

uint64_t type metadata accessor for TaskConditional()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_249A3E9EC()
{
  swift_getAssociatedTypeWitness();

  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_249A3EA64()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A3EA80()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A3EAE4()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A3EB48()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A3EB64()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A3EBC8()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A3EC2C()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A3EC48()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_249A3EC6C()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A3EC88()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A3ECA4()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A3ECC0@<X0>(uint64_t **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = sub_249AECB38();
  return Binding.subscript.getter(v3, v4, a2);
}

uint64_t sub_249A3ED18()
{
  return 16;
}

__n128 sub_249A3ED24(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_249A3ED30()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_249A3EDC0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_249A3EF1C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x249A3F134);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t sub_249A3F15C()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_249A3F28C(uint64_t *a1, uint64_t *a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v11 > 7
    || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0
    || (v10 & (unint64_t)~v9) + *(void *)(*(void *)(v7 - 8) + 64) > 0x18)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v11 + 16) & ~v11));
    swift_retain();
  }
  else
  {
    uint64_t v15 = v7;
    uint64_t v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v16, ((unint64_t)a2 + v10) & v16, v15);
  }
  return a1;
}

uint64_t sub_249A3F460(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = v5;
  unint64_t v9 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  return v7(v9, v8);
}

uint64_t sub_249A3F578(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_249A3F69C(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_249A3F7C0(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_249A3F8E4(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_249A3FA08(unsigned __int16 *a1, unsigned int a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= v6) {
    unsigned int v10 = v6;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(v5 + 64) + v11;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v12 & ~v11) + *(void *)(*(void *)(v7 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((a2 - v10 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v9)
        {
          uint64_t v22 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v5 + 48);
          return v22(a1, v6, AssociatedTypeWitness);
        }
        else
        {
          char v20 = *(uint64_t (**)(unint64_t))(v8 + 48);
          return v20(((unint64_t)a1 + v12) & ~v11);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_249A3FD00(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v23 = v7;
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = v9;
  unsigned int v11 = *(_DWORD *)(v9 + 84);
  if (v11 <= v8) {
    unsigned int v12 = v8;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = *(void *)(v7 + 64) + v13;
  size_t v15 = (v14 & ~v13) + *(void *)(v9 + 64);
  if (a3 <= v12)
  {
    int v16 = 0;
  }
  else if (v15 <= 3)
  {
    unsigned int v19 = ((a3 - v12 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v19))
    {
      int v16 = 4;
    }
    else if (v19 >= 0x100)
    {
      int v16 = 2;
    }
    else
    {
      int v16 = v19 > 1;
    }
  }
  else
  {
    int v16 = 1;
  }
  if (v12 < a2)
  {
    unsigned int v17 = ~v12 + a2;
    if (v15 < 4)
    {
      int v18 = (v17 >> (8 * v15)) + 1;
      if (v15)
      {
        int v20 = v17 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        a1[v15] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v15] = v18;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v15] = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x249A40078);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v8 >= v11)
        {
          uint64_t v22 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
          v22(a1, a2, v8, AssociatedTypeWitness);
        }
        else
        {
          uint64_t v21 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
          v21((unint64_t)&a1[v14] & ~v13, a2);
        }
      }
      return;
  }
}

uint64_t sub_249A400A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A40134()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_249AED568();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_249A40224(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = sub_249AED568();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v8 + v11;
  unint64_t v13 = (v8 + v11 + ((v7 + 16) & ~(unint64_t)v7)) & ~v11;
  uint64_t v14 = *(void *)(v10 + 64);
  unint64_t v15 = ((v13 + v14) & 0xFFFFFFFFFFFFFFF8) + 24;
  int v16 = (*(_DWORD *)(v10 + 80) | v7) & 0x100000;
  uint64_t v17 = *a2;
  *a1 = *a2;
  if ((v11 | (unint64_t)v7) > 7 || v16 != 0 || v15 > 0x18)
  {
    a1 = (uint64_t *)(v17
                   + (((v11 | v7) & 0xF8 ^ 0x1F8) & ((v11 | v7) + 16)));
  }
  else
  {
    uint64_t v31 = v9;
    uint64_t v32 = v5;
    uint64_t v20 = ~v11;
    a1[1] = a2[1];
    uint64_t v21 = (char *)a2 + v7;
    unint64_t v22 = ((unint64_t)a1 + v7 + 16) & ~(unint64_t)v7;
    unint64_t v23 = (unint64_t)(v21 + 16) & ~(unint64_t)v7;
    long long v24 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
    swift_retain();
    swift_retain();
    v24(v22, v23, v32);
    unint64_t v25 = (v22 + v12) & v20;
    unint64_t v26 = (v23 + v12) & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(v25, v26, v31);
    *(unsigned char *)(v25 + v14) = *(unsigned char *)(v26 + v14);
    unint64_t v27 = (v25 + v14) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v28 = (v26 + v14) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v29 = *(void *)(v28 + 16);
    *(void *)(v27 + 8) = *(void *)(v28 + 8);
    *(void *)(v27 + 16) = v29;
  }
  swift_retain();
  return a1;
}

uint64_t sub_249A4041C(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  uint64_t v7 = *(void *)(v5 + 56);
  uint64_t v8 = sub_249AED568();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))((v6 + v7 + *(unsigned __int8 *)(*(void *)(v8 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80), v8);

  return swift_release();
}

void *sub_249A40504(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(void *)(v5 - 8) + 16;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  swift_retain();
  swift_retain();
  v6(v9, v10, v5);
  uint64_t v11 = *(void *)(v7 + 48);
  uint64_t v12 = sub_249AED568();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = v13 + 16;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v11 + v15;
  uint64_t v17 = (v11 + v15 + v9) & ~v15;
  uint64_t v18 = (v16 + v10) & ~v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v17, v18, v12);
  uint64_t v19 = *(void *)(v14 + 48);
  uint64_t v20 = v19 + v17;
  uint64_t v21 = v19 + v18;
  *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
  v20 &= 0xFFFFFFFFFFFFFFF8;
  v21 &= 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = *(void *)(v21 + 16);
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  *(void *)(v20 + 16) = v22;
  swift_retain();
  return a1;
}

void *sub_249A40624(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 40);
  uint64_t v12 = sub_249AED568();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = v13 + 24;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (v11 + v15 + v9) & ~v15;
  uint64_t v17 = (v11 + v15 + v10) & ~v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24))(v16, v17, v12);
  uint64_t v18 = *(void *)(v14 + 40);
  uint64_t v19 = v18 + v16;
  uint64_t v20 = v18 + v17;
  *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
  v19 &= 0xFFFFFFFFFFFFFFF8;
  v20 &= 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = *(void *)(v20 + 16);
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  *(void *)(v19 + 16) = v21;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_249A40768(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32);
  uint64_t v10 = sub_249AED568();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = v11 + 32;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v9 + v13 + v7) & ~v13;
  uint64_t v15 = (v9 + v13 + v8) & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v14, v15, v10);
  uint64_t v16 = *(void *)(v12 + 32);
  unint64_t v17 = v16 + v14;
  unint64_t v18 = v16 + v15;
  *(unsigned char *)unint64_t v17 = *(unsigned char *)v18;
  *(_OWORD *)((v17 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((v18 & 0xFFFFFFFFFFFFFFF8) + 8);
  return a1;
}

void *sub_249A4086C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 40;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 24);
  uint64_t v12 = sub_249AED568();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = v13 + 40;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (v11 + v15 + v9) & ~v15;
  uint64_t v17 = (v11 + v15 + v10) & ~v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 40))(v16, v17, v12);
  uint64_t v18 = *(void *)(v14 + 24);
  unint64_t v19 = v18 + v16;
  unint64_t v20 = v18 + v17;
  *(unsigned char *)unint64_t v19 = *(unsigned char *)v20;
  *(_OWORD *)((v19 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((v20 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_release();
  return a1;
}

uint64_t sub_249A40998(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(sub_249AED568() - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = *(void *)(v8 + 64);
  if (v7 <= v9) {
    unsigned int v14 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v14 = v7;
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  if (v14 < a2)
  {
    unint64_t v15 = ((((v11 + v12 + ((v10 + 16) & ~v10)) & ~v12) + v13) & 0xFFFFFFFFFFFFFFF8) + 24;
    uint64_t v16 = v15 & 0xFFFFFFF8;
    if ((v15 & 0xFFFFFFF8) != 0) {
      unsigned int v17 = 2;
    }
    else {
      unsigned int v17 = a2 - v14 + 1;
    }
    if (v17 >= 0x10000) {
      LODWORD(v18) = 4;
    }
    else {
      LODWORD(v18) = 2;
    }
    if (v17 < 0x100) {
      LODWORD(v18) = 1;
    }
    if (v17 >= 2) {
      uint64_t v18 = v18;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = *((unsigned __int8 *)a1 + v15);
        if (!v19) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v19 = *(unsigned __int16 *)((char *)a1 + v15);
        if (v19) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x249A40C1CLL);
      case 4:
        int v19 = *(int *)((char *)a1 + v15);
        if (!v19) {
          break;
        }
LABEL_24:
        int v21 = v19 - 1;
        if (v16)
        {
          int v21 = 0;
          int v22 = *a1;
        }
        else
        {
          int v22 = 0;
        }
        return v14 + (v22 | v21) + 1;
      default:
        break;
    }
  }
  uint64_t v23 = ((unint64_t)a1 + v10 + 16) & ~v10;
  if (v7 == v14)
  {
    long long v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    return v24(v23, v7, v5);
  }
  else
  {
    uint64_t v25 = (v23 + v11 + v12) & ~v12;
    if (v9 == v14)
    {
      unint64_t v26 = *(uint64_t (**)(uint64_t))(v8 + 48);
      return v26(v25);
    }
    else
    {
      unint64_t v27 = *(void *)(((v25 + v13) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v27 >= 0xFFFFFFFF) {
        LODWORD(v27) = -1;
      }
      return (v27 + 1);
    }
  }
}

void sub_249A40C30(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v30 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(sub_249AED568() - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = *(void *)(v8 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v10 + 64);
  if (v9 <= v11) {
    unsigned int v16 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v16 = v9;
  }
  if (v16 <= 0x7FFFFFFF) {
    unsigned int v16 = 0x7FFFFFFF;
  }
  unint64_t v17 = ((((v13 + v14 + ((v12 + 16) & ~v12)) & ~v14) + v15) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v16 >= a3)
  {
    int v20 = 0;
    int v21 = a2 - v16;
    if (a2 <= v16)
    {
LABEL_19:
      switch(v20)
      {
        case 1:
          *((unsigned char *)a1 + v17) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)((char *)a1 + v17) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_49;
        case 4:
          *(_DWORD *)((char *)a1 + v17) = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            uint64_t v24 = ((unint64_t)a1 + v12 + 16) & ~v12;
            if (v9 == v16)
            {
              uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56);
              v25(v24, a2, v9, v7);
            }
            else
            {
              uint64_t v26 = (v24 + v13 + v14) & ~v14;
              if (v11 == v16)
              {
                unint64_t v27 = *(void (**)(uint64_t, uint64_t))(v10 + 56);
                v27(v26, a2);
              }
              else
              {
                unint64_t v28 = (v26 + v15) & 0xFFFFFFFFFFFFFFF8;
                if ((a2 & 0x80000000) != 0)
                {
                  uint64_t v29 = a2 ^ 0x80000000;
                  *(void *)(v28 + 16) = 0;
                }
                else
                {
                  uint64_t v29 = (a2 - 1);
                }
                *(void *)(v28 + 8) = v29;
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (((((v13 + v14 + ((v12 + 16) & ~v12)) & ~v14) + v15) & 0xFFFFFFF8) == 0xFFFFFFE8) {
      unsigned int v18 = a3 - v16 + 1;
    }
    else {
      unsigned int v18 = 2;
    }
    if (v18 >= 0x10000) {
      int v19 = 4;
    }
    else {
      int v19 = 2;
    }
    if (v18 < 0x100) {
      int v19 = 1;
    }
    if (v18 >= 2) {
      int v20 = v19;
    }
    else {
      int v20 = 0;
    }
    int v21 = a2 - v16;
    if (a2 <= v16) {
      goto LABEL_19;
    }
  }
  if (((((v13 + v14 + ((v12 + 16) & ~v12)) & ~v14) + v15) & 0xFFFFFFF8) == 0xFFFFFFE8) {
    int v22 = v21;
  }
  else {
    int v22 = 1;
  }
  if (((((v13 + v14 + ((v12 + 16) & ~v12)) & ~v14) + v15) & 0xFFFFFFF8) != 0xFFFFFFE8)
  {
    int v23 = ~v16 + a2;
    bzero(a1, ((((v13 + v14 + ((v12 + 16) & ~v12)) & ~v14) + v15) & 0xFFFFFFFFFFFFFFF8) + 24);
    *a1 = v23;
  }
  switch(v20)
  {
    case 1:
      *((unsigned char *)a1 + v17) = v22;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v17) = v22;
      break;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x249A40F18);
    case 4:
      *(_DWORD *)((char *)a1 + v17) = v22;
      break;
    default:
      return;
  }
}

uint64_t sub_249A40F40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249A40F88(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(type metadata accessor for TaskConditional() - 8);
  uint64_t v6 = (long long *)(v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));

  return sub_249A3D1B4(a1, v6, v3, v4);
}

uint64_t objectdestroy_21Tm()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = (int *)(type metadata accessor for TaskConditional() - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = v0 + v4;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v7 + v2[11], v1);
  uint64_t v8 = v7 + v2[12];
  uint64_t v9 = sub_249AED568();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_249A41160()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(type metadata accessor for TaskConditional() - 8);
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_249A41BC4;
  return sub_249A3CF18(v5, v2, v3);
}

uint64_t sub_249A41248()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = (int *)(type metadata accessor for TaskConditional() - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  uint64_t v7 = v0 + v4;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v7 + v2[11], v1);
  uint64_t v8 = v7 + v2[12];
  uint64_t v9 = sub_249AED568();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_249A41398(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(type metadata accessor for TaskConditional() - 8);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_249A414A0;
  return sub_249A3D47C(a1, v7, v8, v9, v4, v5);
}

uint64_t sub_249A414A0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_249A415A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 48);
  sub_249AECB38();
  type metadata accessor for IdentifiableIndices.Element();
  return sub_249A3B1B0(*(void *)(v1 + 16), v3, a1);
}

uint64_t objectdestroy_34Tm()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = (int *)(sub_249AECB38() - 8);
  uint64_t v4 = *(unsigned __int8 *)(*(void *)v3 + 80);
  uint64_t v5 = (v4 + 88) & ~v4;
  uint64_t v6 = *(void *)(*(void *)v3 + 64);
  uint64_t v7 = (int *)(type metadata accessor for IdentifiableIndices.Element() - 8);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)v7 + 80);
  uint64_t v9 = (v5 + v6 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(*(void *)v7 + 64);
  uint64_t v11 = v4 | v8 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v0 + v5 + v3[10], v2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v9, v1);
  uint64_t v12 = v0 + v9 + v7[13];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v12, AssociatedTypeWitness);

  return MEMORY[0x270FA0238](v0, v10, v11);
}

uint64_t sub_249A418F8(uint64_t a1)
{
  uint64_t v3 = v1[5];
  uint64_t v14 = v1[4];
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  uint64_t v7 = v1[8];
  uint64_t v6 = v1[9];
  uint64_t v8 = v1[10];
  uint64_t v9 = *(void *)(sub_249AECB38() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = *(void *)(type metadata accessor for IdentifiableIndices.Element() - 8);
  return sub_249A3B34C(a1, v1[2], v1[3], (uint64_t)v1 + v10, (uint64_t)v1+ ((v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v14, v3, v4, v5, v7, v6, v8);
}

uint64_t sub_249A41A1C()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A41BCC(uint64_t a1)
{
  uint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v6) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v12);
    ++v8;
    if (!v13)
    {
      int64_t v8 = v12 + 1;
      if (v12 + 1 >= v6) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v2 + 8 * v8);
      if (!v13)
      {
        int64_t v8 = v12 + 2;
        if (v12 + 2 >= v6) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v2 + 8 * v8);
        if (!v13)
        {
          int64_t v8 = v12 + 3;
          if (v12 + 3 >= v6) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v2 + 8 * v8);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_5:
    memcpy(__dst, (const void *)(*(void *)(a1 + 56) + (v10 << 9)), sizeof(__dst));
    uint64_t v11 = NinePartImage.assets.getter();
    uint64_t result = sub_2498944CC(v11);
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v6)
  {
LABEL_23:
    swift_release();
    return v16;
  }
  unint64_t v13 = *(void *)(v2 + 8 * v14);
  if (v13)
  {
    int64_t v8 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void Display.restoreAssets(from:)(void *a1)
{
  uint64_t v3 = v1;
  unint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_31:
    }
      unint64_t v5 = sub_24997005C(v5);
    unint64_t v7 = 0;
    while (1)
    {
      if (v6 == v7)
      {
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      if (v7 >= *(void *)(v5 + 16)) {
        goto LABEL_30;
      }
      type metadata accessor for Layout();
      Layout.restoreAssets(from:)((uint64_t)a1);
      if (v2) {
        break;
      }
      if (v6 == ++v7)
      {
        *(void *)(v1 + 24) = v5;
        goto LABEL_9;
      }
    }
    *(void *)(v1 + 24) = v5;
  }
  else
  {
LABEL_9:
    uint64_t v8 = *(void *)(v1 + 448);
    if (v8)
    {
      MEMORY[0x270FA5388](a1);
      unsigned int v18 = a1;
      swift_bridgeObjectRetain();
      sub_249A49770((void (*)(_OWORD *__return_ptr, void *))sub_249A494E4, (uint64_t)v17, v8);
      uint64_t v10 = v9;
      swift_bridgeObjectRelease();
      if (v2) {
        return;
      }
    }
    else
    {
      uint64_t v10 = 0;
    }
    uint64_t v11 = swift_bridgeObjectRelease();
    *(void *)(v3 + 448) = v10;
    uint64_t v12 = *(void *)(v3 + 456);
    if (v12)
    {
      MEMORY[0x270FA5388](v11);
      unsigned int v18 = a1;
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_249A49500((void (*)(void *__return_ptr, unsigned char *))sub_249A49A4C, (uint64_t)v17, v12);
      swift_bridgeObjectRelease();
      if (v2) {
        return;
      }
    }
    else
    {
      uint64_t v13 = 0;
    }
    swift_bridgeObjectRelease();
    *(void *)(v3 + 456) = v13;
    if ((~*(_DWORD *)(v3 + 88) & 0xFELL) == 0 || (ImageAsset.restore(from:)(a1), !v2))
    {
      if ((~*(_DWORD *)(v3 + 160) & 0xFELL) == 0 || (ImageAsset.restore(from:)(a1), !v2))
      {
        if ((~*(_DWORD *)(v3 + 232) & 0xFELL) == 0 || (ImageAsset.restore(from:)(a1), !v2))
        {
          if ((~*(_DWORD *)(v3 + 304) & 0xFELL) == 0 || (ImageAsset.restore(from:)(a1), !v2))
          {
            ImageAsset.restore(from:)(a1);
            if (!v2)
            {
              ImageAsset.restore(from:)(a1);
              uint64_t v14 = a1[3];
              uint64_t v15 = a1[4];
              __swift_project_boxed_opaque_existential_2Tm(a1, v14);
              uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
              swift_bridgeObjectRelease();
              *(void *)(v3 + 464) = v16;
            }
          }
        }
      }
    }
  }
}

uint64_t Display.assets.getter()
{
  v402[60] = *MEMORY[0x263EF8340];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v2 - 8);
  v339 = (char *)&v330 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v361 = type metadata accessor for Slot();
  uint64_t v349 = *(void *)(v361 - 8);
  MEMORY[0x270FA5388](v361);
  uint64_t v365 = (uint64_t)&v330 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v338 = 0;
  uint64_t v362 = type metadata accessor for Component();
  uint64_t v350 = *(void *)(v362 - 8);
  MEMORY[0x270FA5388](v362);
  uint64_t v355 = (uint64_t)&v330 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v357 = type metadata accessor for Zone();
  uint64_t v333 = *(void *)(v357 - 8);
  MEMORY[0x270FA5388](v357);
  uint64_t v356 = (uint64_t)&v330 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v402, v0, 0x1E0uLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4070);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_249AEFCA0;
  uint64_t v8 = (void *)v402[7];
  uint64_t v9 = v402[8];
  *(void *)(v7 + 32) = v402[7];
  uint64_t v363 = v7 + 32;
  uint64_t v10 = (void *)v402[9];
  uint64_t v11 = v402[10];
  uint64_t v12 = v402[11];
  uint64_t v13 = v402[12];
  char v14 = v402[13];
  uint64_t v15 = v402[14];
  uint64_t v16 = v402[15];
  *(void *)&long long v364 = v402[15];
  *(void *)(v7 + 40) = v9;
  *(void *)(v7 + 48) = v10;
  *(void *)(v7 + 56) = v11;
  *(void *)(v7 + 64) = v12;
  *(void *)(v7 + 72) = v13;
  *(unsigned char *)(v7 + 80) = v14;
  *(void *)(v7 + 88) = v15;
  *(void *)(v7 + 96) = v16;
  uint64_t v17 = v402[17];
  v358 = (void *)v402[17];
  v359 = (void *)v402[16];
  uint64_t v18 = v402[18];
  uint64_t v19 = v402[19];
  v353 = (void *)v402[19];
  uint64_t i = (void *)v402[18];
  uint64_t v20 = v402[20];
  uint64_t v21 = v402[21];
  unint64_t v351 = v402[21];
  id v352 = (id)v402[20];
  char v22 = v402[22];
  uint64_t v23 = v402[23];
  uint64_t v24 = v402[24];
  uint64_t v360 = v402[24];
  *(void *)(v7 + 104) = v402[16];
  *(void *)(v7 + 112) = v17;
  *(void *)(v7 + 120) = v18;
  *(void *)(v7 + 128) = v19;
  *(void *)(v7 + 136) = v20;
  *(void *)(v7 + 144) = v21;
  *(unsigned char *)(v7 + 152) = v22;
  *(void *)(v7 + 160) = v23;
  *(void *)(v7 + 168) = v24;
  uint64_t v25 = v402[26];
  uint64_t v26 = v402[27];
  v345 = (void *)v402[27];
  *(void *)&long long v346 = v402[26];
  uint64_t v27 = v402[28];
  uint64_t v28 = v402[29];
  v343 = (void *)v402[29];
  uint64_t v344 = v402[28];
  uint64_t v29 = v402[30];
  v342 = (void *)v402[30];
  char v30 = v402[31];
  uint64_t v31 = v402[32];
  uint64_t v32 = v402[33];
  v347 = (void *)v402[25];
  *(void *)&long long v348 = v402[33];
  *(void *)(v7 + 176) = v402[25];
  *(void *)(v7 + 184) = v25;
  *(void *)(v7 + 192) = v26;
  *(void *)(v7 + 200) = v27;
  *(void *)(v7 + 208) = v28;
  *(void *)(v7 + 216) = v29;
  *(unsigned char *)(v7 + 224) = v30;
  *(void *)(v7 + 232) = v31;
  *(void *)(v7 + 240) = v32;
  uint64_t v33 = (void *)v402[34];
  uint64_t v34 = v402[35];
  unint64_t v35 = (void *)v402[36];
  uint64_t v36 = v402[37];
  uint64_t v37 = v402[41];
  uint64_t v38 = v402[42];
  *(unsigned char *)(v7 + 296) = v402[40];
  *(void *)(v7 + 304) = v37;
  *(void *)&long long v386 = MEMORY[0x263F8EE78];
  uint64_t v39 = v402[38];
  uint64_t v40 = v402[39];
  *(void *)(v7 + 248) = v33;
  *(void *)(v7 + 256) = v34;
  *(void *)(v7 + 264) = v35;
  *(void *)(v7 + 272) = v36;
  *(void *)(v7 + 280) = v39;
  *(void *)(v7 + 288) = v40;
  *(void *)(v7 + 312) = v38;
  sub_249882468(v8, v9, v10, v11, v12);
  swift_bridgeObjectRetain();
  sub_249882468(v359, (uint64_t)v358, i, (uint64_t)v353, (char)v352);
  swift_bridgeObjectRetain();
  sub_249882468(v347, v346, v345, v344, (char)v343);
  swift_bridgeObjectRetain();
  sub_249882468(v33, v34, v35, v36, v39);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v41 = v338;
  do
  {
    char v42 = *(unsigned char *)(v7 + v41 + 80);
    long long v43 = *(_OWORD *)(v7 + v41 + 48);
    long long v397 = *(_OWORD *)(v7 + v41 + 32);
    long long v398 = v43;
    long long v399 = *(_OWORD *)(v7 + v41 + 64);
    LOBYTE(v400[0]) = v42;
    *(_OWORD *)((char *)v400 + 8) = *(_OWORD *)(v7 + v41 + 88);
    sub_2498D6084((uint64_t)&v397, (uint64_t)&v392, &qword_2696E4078);
    char v44 = (char)v395;
    if ((~(_BYTE)v395 & 0xFE) != 0)
    {
      uint64_t v45 = v396;
      uint64_t v46 = v394;
      uint64_t v47 = v393;
      long long v364 = v392;
      *((void *)&v390 + 1) = &type metadata for ImageAsset;
      v391 = &protocol witness table for ImageAsset;
      uint64_t v48 = swift_allocObject();
      *(void *)&long long v389 = v48;
      *(_OWORD *)(v48 + 16) = v364;
      *(void *)(v48 + 32) = v47;
      *(void *)(v48 + 40) = v46;
      *(unsigned char *)(v48 + 48) = v44;
      *(void *)(v48 + 56) = v45;
      sub_249882BCC(&v389, (uint64_t)&v397);
      sub_249882BCC(&v397, (uint64_t)&v392);
      unint64_t v49 = (void *)v386;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        unint64_t v49 = sub_2498AB278(0, v49[2] + 1, 1, v49);
        *(void *)&long long v386 = v49;
      }
      unint64_t v51 = v49[2];
      unint64_t v50 = v49[3];
      if (v51 >= v50 >> 1) {
        *(void *)&long long v386 = sub_2498AB278((void *)(v50 > 1), v51 + 1, 1, v49);
      }
      uint64_t v52 = v394;
      uint64_t v53 = (uint64_t)v395;
      uint64_t v54 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v392, (uint64_t)v394);
      __n128 v55 = MEMORY[0x270FA5388](v54);
      uint64_t v57 = (char *)&v330 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v58 + 16))(v57, v55);
      sub_249A1DA78(v51, (uint64_t)v57, (uint64_t *)&v386, (uint64_t)v52, v53);
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v392);
    }
    else
    {
      v391 = 0;
      long long v389 = 0u;
      long long v390 = 0u;
      sub_2498D60E8((uint64_t)&v389, &qword_2696DDA48);
    }
    v41 += 72;
  }
  while (v41 != 288);
  swift_bridgeObjectRelease();
  uint64_t v59 = v386;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v367 = v59;
  uint64_t v60 = v402[56];
  if (v402[56])
  {
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v61 = v338;
    uint64_t v62 = sub_249A49E6C(v60, (void (*)(long long *__return_ptr, long long *))sub_249A4A178);
    uint64_t v338 = v61;
    swift_bridgeObjectRelease();
    swift_release_n();
    sub_2498944CC(v62);
  }
  if (v402[57])
  {
    uint64_t v63 = swift_bridgeObjectRetain();
    uint64_t v64 = v338;
    uint64_t v65 = sub_249A41BCC(v63);
    uint64_t v338 = v64;
    swift_bridgeObjectRelease();
    sub_2498944CC(v65);
  }
  uint64_t v66 = v402[3];
  uint64_t v334 = *(void *)(v402[3] + 16);
  if (!v334)
  {
LABEL_173:
    v307 = (void *)*MEMORY[0x263F81778];
    uint64_t v1 = (_UNKNOWN **)*MEMORY[0x263F81838];
    *((void *)&v399 + 1) = 0x322D6D6574737953;
    *(void *)&v400[0] = 0xE900000000000034;
    LOBYTE(v397) = 0;
    *((void *)&v397 + 1) = 100;
    *(void *)&long long v398 = v307;
    *((void *)&v398 + 1) = v1;
    LOWORD(v399) = 0;
    sub_249882274((uint64_t)v402);
    uint64_t v73 = v307;
    sub_2499B34B0();
    swift_bridgeObjectRelease();
    sub_2498824DC((uint64_t)v402);
    uint64_t v70 = v367;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_197;
    }
    goto LABEL_174;
  }
  v341 = (int *)type metadata accessor for Layout();
  uint64_t v67 = *((void *)v341 - 1);
  uint64_t v336 = v66 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
  uint64_t v335 = *(void *)(v67 + 72);
  uint64_t v332 = v66;
  swift_bridgeObjectRetain();
  uint64_t v68 = 0;
  long long v348 = xmmword_249AF0A70;
  long long v346 = xmmword_249AFA7A0;
LABEL_18:
  uint64_t v337 = v68;
  uint64_t v69 = v341[6];
  uint64_t v340 = v336 + v335 * v68;
  uint64_t v70 = *(void *)(v340 + v69);
  uint64_t v71 = *(void *)(v70 + 16);
  if (!v71)
  {
    unint64_t v75 = MEMORY[0x263F8EE78];
    uint64_t v70 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (!v70) {
      goto LABEL_64;
    }
LABEL_41:
    uint64_t v91 = v350;
    uint64_t v73 = v75 + ((*(unsigned __int8 *)(v350 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v350 + 80));
    swift_bridgeObjectRetain();
    uint64_t v92 = *(void *)(v91 + 72);
    uint64_t v93 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v94 = v355;
      sub_249A4A180(v73, v355, (uint64_t (*)(void))type metadata accessor for Component);
      uint64_t v95 = *(void *)(v94 + *(int *)(v362 + 32));
      swift_bridgeObjectRetain();
      sub_249A4A1E8(v94, (uint64_t (*)(void))type metadata accessor for Component);
      uint64_t v96 = *(void *)(v95 + 16);
      int64_t v97 = v93[2];
      int64_t v98 = v97 + v96;
      if (__OFADD__(v97, v96)) {
        goto LABEL_183;
      }
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v98 <= v93[3] >> 1)
      {
        if (*(void *)(v95 + 16)) {
          goto LABEL_53;
        }
      }
      else
      {
        if (v97 <= v98) {
          int64_t v100 = v97 + v96;
        }
        else {
          int64_t v100 = v97;
        }
        uint64_t v93 = (void *)sub_2498AC054(isUniquelyReferenced_nonNull_native, v100, 1, (unint64_t)v93);
        if (*(void *)(v95 + 16))
        {
LABEL_53:
          uint64_t v101 = v93[2];
          if ((v93[3] >> 1) - v101 < v96) {
            goto LABEL_190;
          }
          unint64_t v102 = (*(unsigned __int8 *)(v349 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v349 + 80);
          uint64_t v103 = *(void *)(v349 + 72);
          uint64_t v104 = (char *)v93 + v102 + v103 * v101;
          if (v95 + v102 < (unint64_t)&v104[v103 * v96] && (unint64_t)v104 < v95 + v102 + v103 * v96) {
            goto LABEL_198;
          }
          swift_arrayInitWithCopy();
          if (v96)
          {
            uint64_t v106 = v93[2];
            BOOL v89 = __OFADD__(v106, v96);
            uint64_t v107 = v106 + v96;
            if (v89) {
              goto LABEL_194;
            }
            v93[2] = v107;
          }
          goto LABEL_43;
        }
      }
      if (v96) {
        goto LABEL_184;
      }
LABEL_43:
      swift_bridgeObjectRelease();
      v73 += v92;
      if (!--v70)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_65;
      }
    }
  }
  uint64_t v72 = v333;
  uint64_t v73 = v70 + ((*(unsigned __int8 *)(v333 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v333 + 80));
  swift_bridgeObjectRetain_n();
  uint64_t v74 = *(void *)(v72 + 72);
  unint64_t v75 = MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v76 = v356;
    sub_249A4A180(v73, v356, (uint64_t (*)(void))type metadata accessor for Zone);
    uint64_t v77 = *(void *)(v76 + *(int *)(v357 + 28));
    swift_bridgeObjectRetain();
    sub_249A4A1E8(v76, (uint64_t (*)(void))type metadata accessor for Zone);
    uint64_t v78 = *(void *)(v77 + 16);
    int64_t v79 = *(void *)(v75 + 16);
    int64_t v80 = v79 + v78;
    if (__OFADD__(v79, v78)) {
      break;
    }
    int v81 = swift_isUniquelyReferenced_nonNull_native();
    if (v81 && v80 <= *(void *)(v75 + 24) >> 1)
    {
      if (*(void *)(v77 + 16)) {
        goto LABEL_31;
      }
    }
    else
    {
      if (v79 <= v80) {
        int64_t v82 = v79 + v78;
      }
      else {
        int64_t v82 = v79;
      }
      unint64_t v75 = sub_2498AB974(v81, v82, 1, v75);
      if (*(void *)(v77 + 16))
      {
LABEL_31:
        uint64_t v83 = *(void *)(v75 + 16);
        if ((*(void *)(v75 + 24) >> 1) - v83 < v78) {
          goto LABEL_189;
        }
        unint64_t v84 = (*(unsigned __int8 *)(v350 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v350 + 80);
        uint64_t v85 = *(void *)(v350 + 72);
        unint64_t v86 = v75 + v84 + v85 * v83;
        if (v77 + v84 < v86 + v85 * v78 && v86 < v77 + v84 + v85 * v78)
        {
LABEL_198:
          sub_249AEDCB8();
          __break(1u);
          JUMPOUT(0x249A44478);
        }
        swift_arrayInitWithCopy();
        if (v78)
        {
          uint64_t v88 = *(void *)(v75 + 16);
          BOOL v89 = __OFADD__(v88, v78);
          uint64_t v90 = v88 + v78;
          if (v89) {
            goto LABEL_193;
          }
          *(void *)(v75 + 16) = v90;
        }
        goto LABEL_21;
      }
    }
    if (v78) {
      goto LABEL_182;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    v73 += v74;
    if (!--v71)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v70 = *(void *)(v75 + 16);
      if (v70) {
        goto LABEL_41;
      }
LABEL_64:
      swift_bridgeObjectRelease();
      uint64_t v93 = (void *)MEMORY[0x263F8EE78];
LABEL_65:
      uint64_t v108 = v93[2];
      uint64_t v109 = (uint64_t)v339;
      if (v108)
      {
        uint64_t v110 = v349;
        uint64_t v111 = (uint64_t)v93
             + ((*(unsigned __int8 *)(v349 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v349 + 80));
        swift_bridgeObjectRetain();
        *(void *)&long long v364 = *(void *)(v110 + 72);
        long long v112 = (void *)MEMORY[0x263F8EE78];
        uint64_t i = v93;
        while (1)
        {
          uint64_t v113 = v365;
          sub_249A4A180(v111, v365, (uint64_t (*)(void))type metadata accessor for Slot);
          sub_2498D6084(v113 + *(int *)(v361 + 36), v109, &qword_2696DE540);
          uint64_t v114 = type metadata accessor for Instrument();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 48))(v109, 1, v114) == 1)
          {
            sub_2498D60E8(v109, &qword_2696DE540);
            uint64_t v115 = (void *)MEMORY[0x263F8EE78];
          }
          else
          {
            sub_2498A4990(v109 + *(int *)(v114 + 20), (uint64_t)&v392);
            sub_2498A4990((uint64_t)&v392, (uint64_t)&v397);
            int v116 = sub_2498B8790((uint64_t)&v397);
            if (v116 == 1)
            {
              uint64_t v135 = (void *)sub_2498B87AC((uint64_t)&v397);
              sub_2499441A8(v135, &v389);
              switch(sub_249944500((uint64_t)&v389))
              {
                case 1u:
                  uint64_t v363 = v111;
                  uint64_t v136 = (void *)sub_24994451C((uint64_t)&v389);
                  uint64_t v137 = v136;
                  uint64_t v138 = (void *)v136[20];
                  v359 = v112;
                  uint64_t v360 = v108;
                  if (v138)
                  {
                    uint64_t v139 = v136[19];
                    v358 = (void *)v136[18];
                    uint64_t v141 = v136[21];
                    uint64_t v140 = v136[22];
                    uint64_t v142 = v136[23];
                    uint64_t v143 = v136[24];
                    v353 = v138;
                    id v144 = v138;
                    uint64_t v145 = v143;
                    swift_bridgeObjectRetain_n();
                    id v352 = v144;
                    uint64_t v115 = sub_2498AB278(0, 1, 1, MEMORY[0x263F8EE78]);
                    unint64_t v146 = v115[3];
                    unint64_t v351 = v115[2];
                    v347 = (void *)(v351 + 1);
                    if (v351 >= v146 >> 1) {
                      uint64_t v115 = sub_2498AB278((void *)(v146 > 1), v351 + 1, 1, v115);
                    }
                    v387 = &type metadata for InstrumentFont;
                    v388 = &protocol witness table for InstrumentFont;
                    uint64_t v147 = swift_allocObject();
                    *(void *)&long long v386 = v147;
                    uint64_t v148 = (uint64_t)v358;
                    *(unsigned char *)(v147 + 16) = (_BYTE)v358;
                    unint64_t v150 = v351;
                    id v149 = v352;
                    *(void *)(v147 + 24) = v139;
                    *(void *)(v147 + 32) = v149;
                    *(void *)(v147 + 40) = v141;
                    *(unsigned char *)(v147 + 48) = v140 & 1;
                    *(unsigned char *)(v147 + 49) = BYTE1(v140) & 1;
                    *(void *)(v147 + 56) = v142;
                    *(void *)(v147 + 64) = v145;
                    v115[2] = v347;
                    sub_249882BCC(&v386, (uint64_t)&v115[5 * v150 + 4]);
                    sub_24989CF3C(v148, v139, v353);
                    long long v112 = v359;
                    uint64_t v108 = v360;
                    uint64_t v151 = (void *)v137[27];
                    if (!v151)
                    {
LABEL_117:
                      uint64_t v111 = v363;
                      break;
                    }
                  }
                  else
                  {
                    uint64_t v115 = (void *)MEMORY[0x263F8EE78];
                    uint64_t v151 = (void *)v136[27];
                    if (!v151) {
                      goto LABEL_117;
                    }
                  }
                  uint64_t v152 = v137[25];
                  v358 = (void *)v137[26];
                  uint64_t v154 = v137[28];
                  uint64_t v153 = v137[29];
                  unint64_t v155 = (void *)v137[30];
                  uint64_t v156 = v137[31];
                  id v352 = v151;
                  v353 = v155;
                  id v157 = v151;
                  uint64_t v158 = v156;
                  swift_bridgeObjectRetain_n();
                  id v159 = v157;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v115 = sub_2498AB278(0, v115[2] + 1, 1, v115);
                  }
                  unint64_t v161 = v115[2];
                  unint64_t v160 = v115[3];
                  unint64_t v351 = v161 + 1;
                  if (v161 >= v160 >> 1) {
                    uint64_t v115 = sub_2498AB278((void *)(v160 > 1), v161 + 1, 1, v115);
                  }
                  v387 = &type metadata for InstrumentFont;
                  v388 = &protocol witness table for InstrumentFont;
                  uint64_t v162 = swift_allocObject();
                  *(void *)&long long v386 = v162;
                  *(unsigned char *)(v162 + 16) = v152;
                  uint64_t v163 = (uint64_t)v358;
                  *(void *)(v162 + 24) = v358;
                  *(void *)(v162 + 32) = v159;
                  *(void *)(v162 + 40) = v154;
                  *(unsigned char *)(v162 + 48) = v153 & 1;
                  *(unsigned char *)(v162 + 49) = BYTE1(v153) & 1;
                  *(void *)(v162 + 56) = v353;
                  *(void *)(v162 + 64) = v158;
                  v115[2] = v351;
                  sub_249882BCC(&v386, (uint64_t)&v115[5 * v161 + 4]);
                  sub_24989CF3C(v152, v163, v352);
LABEL_126:
                  long long v112 = v359;
                  uint64_t v108 = v360;
                  uint64_t v111 = v363;
                  break;
                case 2u:
                  uint64_t v164 = *(void *)(sub_24994451C((uint64_t)&v389) + 8);
                  swift_getKeyPath();
                  uint64_t v363 = v111;
                  sub_24997EA04((uint64_t)v135, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
                  swift_bridgeObjectRetain();
                  swift_retain();
                  uint64_t v165 = v338;
                  uint64_t v115 = (void *)sub_249943E98(v164, (void (*)(long long *__return_ptr, long long *))sub_249945790);
                  uint64_t v338 = v165;
                  swift_bridgeObjectRelease();
                  uint64_t v111 = v363;
                  swift_release_n();
                  sub_24997EA04((uint64_t)v135, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
                  break;
                case 3u:
                  uint64_t v166 = sub_24994451C((uint64_t)&v389);
                  sub_249944658(v166, (uint64_t)&v386);
                  int v167 = sub_24994AD58((uint64_t)&v386);
                  v359 = v112;
                  uint64_t v360 = v108;
                  uint64_t v363 = v111;
                  switch(v167)
                  {
                    case 2:
                      uint64_t v227 = sub_24994AD64((uint64_t)&v386);
                      char v220 = *(unsigned char *)(v227 + 8);
                      uint64_t v221 = *(void *)(v227 + 16);
                      uint64_t v222 = *(void **)(v227 + 24);
                      uint64_t v1 = *(_UNKNOWN ***)(v227 + 32);
                      char v223 = *(unsigned char *)(v227 + 40);
                      char v224 = *(unsigned char *)(v227 + 41);
                      uint64_t v226 = *(void *)(v227 + 48);
                      uint64_t v225 = *(void *)(v227 + 56);
                      goto LABEL_138;
                    case 4:
                      uint64_t v228 = sub_24994AD64((uint64_t)&v386);
                      sub_24989CB58(v228 + 8, (uint64_t)&v368);
                      if (sub_24989CF7C((uint64_t)&v368) == 1) {
                        goto LABEL_96;
                      }
                      LODWORD(v358) = BYTE8(v368);
                      v353 = v369;
                      uint64_t v1 = v371;
                      LODWORD(v352) = v372;
                      LODWORD(v351) = v373;
                      uint64_t v229 = v375;
                      v347 = v374;
                      v230 = v370;
                      swift_bridgeObjectRetain();
                      uint64_t v231 = sub_2498AB278(0, 1, 1, MEMORY[0x263F8EE78]);
                      unint64_t v233 = v231[2];
                      unint64_t v232 = v231[3];
                      if (v233 >= v232 >> 1) {
                        uint64_t v231 = sub_2498AB278((void *)(v232 > 1), v233 + 1, 1, v231);
                      }
                      uint64_t v344 = v377;
                      v345 = v376;
                      uint64_t v234 = v378;
                      __int16 v235 = v380;
                      v342 = v381;
                      v343 = v379;
                      uint64_t v236 = v382;
                      v384 = &type metadata for InstrumentFont;
                      v385 = &protocol witness table for InstrumentFont;
                      uint64_t v237 = swift_allocObject();
                      *(void *)&long long v383 = v237;
                      *(unsigned char *)(v237 + 16) = (_BYTE)v358;
                      *(void *)(v237 + 24) = v353;
                      *(void *)(v237 + 32) = v230;
                      *(void *)(v237 + 40) = v1;
                      *(unsigned char *)(v237 + 48) = (_BYTE)v352;
                      *(unsigned char *)(v237 + 49) = v351;
                      *(void *)(v237 + 56) = v347;
                      *(void *)(v237 + 64) = v229;
                      v231[2] = v233 + 1;
                      sub_249882BCC(&v383, (uint64_t)&v231[5 * v233 + 4]);
                      v366 = v231;
                      if (v234)
                      {
                        unint64_t v238 = v231[2];
                        unint64_t v239 = v231[3];
                        v358 = v234;
                        id v240 = v234;
                        swift_bridgeObjectRetain_n();
                        id v241 = v240;
                        v353 = (void *)(v238 + 1);
                        if (v238 >= v239 >> 1) {
                          uint64_t v231 = sub_2498AB278((void *)(v239 > 1), v238 + 1, 1, v231);
                        }
                        v384 = &type metadata for InstrumentFont;
                        v385 = &protocol witness table for InstrumentFont;
                        uint64_t v242 = swift_allocObject();
                        *(void *)&long long v383 = v242;
                        uint64_t v243 = v344;
                        uint64_t v244 = (uint64_t)v345;
                        *(unsigned char *)(v242 + 16) = (_BYTE)v345;
                        *(void *)(v242 + 24) = v243;
                        *(void *)(v242 + 32) = v241;
                        v245 = v342;
                        *(void *)(v242 + 40) = v343;
                        *(unsigned char *)(v242 + 48) = v235 & 1;
                        *(unsigned char *)(v242 + 49) = HIBYTE(v235) & 1;
                        *(void *)(v242 + 56) = v245;
                        *(void *)(v242 + 64) = v236;
                        v231[2] = v353;
                        sub_249882BCC(&v383, (uint64_t)&v231[5 * v238 + 4]);
                        sub_24989CF3C(v244, v243, v358);
                        v366 = v231;
                      }
                      uint64_t v246 = swift_bridgeObjectRetain();
                      uint64_t v247 = v338;
                      sub_249A0C9D0(v246, &v366);
                      uint64_t v338 = v247;
                      swift_bridgeObjectRelease();
                      uint64_t v115 = v366;
                      goto LABEL_126;
                    case 5:
                      uint64_t v248 = sub_24994AD64((uint64_t)&v386);
                      char v220 = *(unsigned char *)v248;
                      uint64_t v221 = *(void *)(v248 + 8);
                      uint64_t v222 = *(void **)(v248 + 16);
                      uint64_t v1 = *(_UNKNOWN ***)(v248 + 24);
                      char v223 = *(unsigned char *)(v248 + 32);
                      char v224 = *(unsigned char *)(v248 + 33);
                      uint64_t v226 = *(void *)(v248 + 40);
                      uint64_t v225 = *(void *)(v248 + 48);
                      goto LABEL_138;
                    case 6:
                    case 8:
                      uint64_t v199 = sub_24994AD64((uint64_t)&v386);
                      char v200 = *(unsigned char *)(v199 + 8);
                      uint64_t v202 = *(void *)(v199 + 16);
                      uint64_t v201 = *(void **)(v199 + 24);
                      uint64_t v1 = *(_UNKNOWN ***)(v199 + 32);
                      char v203 = *(unsigned char *)(v199 + 40);
                      LODWORD(v358) = *(unsigned __int8 *)(v199 + 41);
                      uint64_t v204 = *(void *)(v199 + 56);
                      v353 = *(void **)(v199 + 48);
                      id v352 = v201;
                      swift_bridgeObjectRetain();
                      uint64_t v172 = sub_2498AB278(0, 1, 1, MEMORY[0x263F8EE78]);
                      unint64_t v206 = v172[2];
                      unint64_t v205 = v172[3];
                      unint64_t v351 = v206 + 1;
                      if (v206 >= v205 >> 1) {
                        uint64_t v172 = sub_2498AB278((void *)(v205 > 1), v206 + 1, 1, v172);
                      }
                      v347 = *(void **)(v199 + 200);
                      uint64_t v207 = *(void **)(v199 + 208);
                      uint64_t v208 = *(void **)(v199 + 216);
                      uint64_t v344 = *(void *)(v199 + 224);
                      v345 = v207;
                      uint64_t v209 = *(void **)(v199 + 240);
                      v342 = *(void **)(v199 + 232);
                      v343 = v209;
                      uint64_t v331 = *(void *)(v199 + 248);
                      v370 = &type metadata for InstrumentFont;
                      v371 = &protocol witness table for InstrumentFont;
                      uint64_t v210 = swift_allocObject();
                      *(void *)&long long v368 = v210;
                      *(unsigned char *)(v210 + 16) = v200;
                      id v211 = v352;
                      *(void *)(v210 + 24) = v202;
                      *(void *)(v210 + 32) = v211;
                      *(void *)(v210 + 40) = v1;
                      *(unsigned char *)(v210 + 48) = v203;
                      *(unsigned char *)(v210 + 49) = (_BYTE)v358;
                      *(void *)(v210 + 56) = v353;
                      *(void *)(v210 + 64) = v204;
                      v172[2] = v351;
                      sub_249882BCC(&v368, (uint64_t)&v172[5 * v206 + 4]);
                      *(void *)&long long v383 = v172;
                      if (!v208) {
                        goto LABEL_125;
                      }
                      unint64_t v212 = v172[2];
                      unint64_t v213 = v172[3];
                      v358 = v208;
                      id v214 = v208;
                      uint64_t v185 = v331;
                      swift_bridgeObjectRetain_n();
                      id v215 = v214;
                      id v352 = (id)(v212 + 1);
                      v353 = (void *)v212;
                      if (v212 >= v213 >> 1) {
                        uint64_t v172 = sub_2498AB278((void *)(v213 > 1), v212 + 1, 1, v172);
                      }
                      v370 = &type metadata for InstrumentFont;
                      v371 = &protocol witness table for InstrumentFont;
                      uint64_t v186 = swift_allocObject();
                      *(void *)&long long v368 = v186;
                      uint64_t v188 = (uint64_t)v347;
                      *(unsigned char *)(v186 + 16) = (_BYTE)v347;
                      uint64_t v187 = (uint64_t)v345;
                      *(void *)(v186 + 24) = v345;
                      *(void *)(v186 + 32) = v215;
                      uint64_t v189 = v343;
                      *(void *)(v186 + 40) = v344;
                      __int16 v190 = (__int16)v342;
                      break;
                    default:
                      uint64_t v168 = sub_24994AD64((uint64_t)&v386);
                      LODWORD(v358) = *(unsigned __int8 *)(v168 + 8);
                      v353 = *(void **)(v168 + 16);
                      uint64_t v169 = *(void **)(v168 + 24);
                      uint64_t v1 = *(_UNKNOWN ***)(v168 + 32);
                      LODWORD(v352) = *(unsigned __int8 *)(v168 + 40);
                      LODWORD(v351) = *(unsigned __int8 *)(v168 + 41);
                      uint64_t v170 = *(void *)(v168 + 56);
                      v347 = *(void **)(v168 + 48);
                      id v171 = v169;
                      swift_bridgeObjectRetain();
                      uint64_t v172 = sub_2498AB278(0, 1, 1, MEMORY[0x263F8EE78]);
                      unint64_t v174 = v172[2];
                      unint64_t v173 = v172[3];
                      if (v174 >= v173 >> 1) {
                        uint64_t v172 = sub_2498AB278((void *)(v173 > 1), v174 + 1, 1, v172);
                      }
                      uint64_t v175 = *(void **)(v168 + 200);
                      uint64_t v176 = *(void **)(v168 + 216);
                      uint64_t v344 = *(void *)(v168 + 208);
                      v345 = v175;
                      uint64_t v177 = *(void **)(v168 + 224);
                      uint64_t v331 = *(void *)(v168 + 232);
                      uint64_t v178 = *(void *)(v168 + 248);
                      v342 = *(void **)(v168 + 240);
                      v343 = v177;
                      v370 = &type metadata for InstrumentFont;
                      v371 = &protocol witness table for InstrumentFont;
                      uint64_t v179 = swift_allocObject();
                      *(void *)&long long v368 = v179;
                      *(unsigned char *)(v179 + 16) = (_BYTE)v358;
                      *(void *)(v179 + 24) = v353;
                      *(void *)(v179 + 32) = v171;
                      *(void *)(v179 + 40) = v1;
                      *(unsigned char *)(v179 + 48) = (_BYTE)v352;
                      *(unsigned char *)(v179 + 49) = v351;
                      *(void *)(v179 + 56) = v347;
                      *(void *)(v179 + 64) = v170;
                      v172[2] = v174 + 1;
                      sub_249882BCC(&v368, (uint64_t)&v172[5 * v174 + 4]);
                      *(void *)&long long v383 = v172;
                      if (!v176) {
                        goto LABEL_125;
                      }
                      uint64_t v180 = v176;
                      unint64_t v181 = v172[2];
                      unint64_t v182 = v172[3];
                      v358 = v180;
                      id v183 = v180;
                      swift_bridgeObjectRetain_n();
                      id v184 = v183;
                      id v352 = (id)(v181 + 1);
                      v353 = (void *)v181;
                      uint64_t v185 = v178;
                      if (v181 >= v182 >> 1) {
                        uint64_t v172 = sub_2498AB278((void *)(v182 > 1), v181 + 1, 1, v172);
                      }
                      v370 = &type metadata for InstrumentFont;
                      v371 = &protocol witness table for InstrumentFont;
                      uint64_t v186 = swift_allocObject();
                      *(void *)&long long v368 = v186;
                      uint64_t v187 = v344;
                      uint64_t v188 = (uint64_t)v345;
                      *(unsigned char *)(v186 + 16) = (_BYTE)v345;
                      *(void *)(v186 + 24) = v187;
                      *(void *)(v186 + 32) = v184;
                      uint64_t v189 = v342;
                      *(void *)(v186 + 40) = v343;
                      __int16 v190 = v331;
                      break;
                  }
                  *(unsigned char *)(v186 + 48) = v190 & 1;
                  *(unsigned char *)(v186 + 49) = HIBYTE(v190) & 1;
                  *(void *)(v186 + 56) = v189;
                  *(void *)(v186 + 64) = v185;
                  uint64_t v216 = v353;
                  v172[2] = v352;
                  sub_249882BCC(&v368, (uint64_t)&v172[5 * (void)v216 + 4]);
                  sub_24989CF3C(v188, v187, v358);
                  *(void *)&long long v383 = v172;
LABEL_125:
                  uint64_t v217 = swift_bridgeObjectRetain();
                  uint64_t v218 = v338;
                  sub_249A0C9D0(v217, (void **)&v383);
                  uint64_t v338 = v218;
                  swift_bridgeObjectRelease();
                  uint64_t v115 = (void *)v383;
                  goto LABEL_126;
                case 4u:
                  uint64_t v191 = sub_24994451C((uint64_t)&v389);
                  sub_24994452C(v191, (uint64_t)&v386);
                  switch(sub_249944588((uint64_t)&v386))
                  {
                    case 6u:
                      uint64_t v251 = sub_249944640((uint64_t)&v386);
                      sub_2499457D8(v251, (uint64_t)&v368);
                      sub_249945834((uint64_t)&v368);
                      sub_249945840((uint64_t)&v368);
                      goto LABEL_96;
                    case 8u:
                    case 9u:
                      uint64_t v219 = sub_249944640((uint64_t)&v386);
                      char v220 = *(unsigned char *)(v219 + 24);
                      uint64_t v363 = v111;
                      uint64_t v221 = *(void *)(v219 + 32);
                      uint64_t v222 = *(void **)(v219 + 40);
                      uint64_t v1 = *(_UNKNOWN ***)(v219 + 48);
                      v359 = v112;
                      uint64_t v360 = v108;
                      char v223 = *(unsigned char *)(v219 + 56);
                      char v224 = *(unsigned char *)(v219 + 57);
                      uint64_t v226 = *(void *)(v219 + 64);
                      uint64_t v225 = *(void *)(v219 + 72);
LABEL_138:
                      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
                      uint64_t v115 = (void *)swift_allocObject();
                      *((_OWORD *)v115 + 1) = v348;
                      v115[7] = &type metadata for InstrumentFont;
                      v115[8] = &protocol witness table for InstrumentFont;
                      uint64_t v249 = swift_allocObject();
                      v115[4] = v249;
                      *(unsigned char *)(v249 + 16) = v220;
                      *(void *)(v249 + 24) = v221;
                      *(void *)(v249 + 32) = v222;
                      *(void *)(v249 + 40) = v1;
                      *(unsigned char *)(v249 + 48) = v223;
                      *(unsigned char *)(v249 + 49) = v224;
                      long long v112 = v359;
                      uint64_t v108 = v360;
                      *(void *)(v249 + 56) = v226;
                      *(void *)(v249 + 64) = v225;
                      id v250 = v222;
                      uint64_t v111 = v363;
                      swift_bridgeObjectRetain();
                      break;
                    default:
                      sub_249944640((uint64_t)&v386);
                      goto LABEL_96;
                  }
                  break;
                case 5u:
                case 6u:
                  goto LABEL_96;
                default:
                  sub_24994451C((uint64_t)&v389);
                  goto LABEL_96;
              }
            }
            else if (v116 == 2 {
                   && (uint64_t v117 = sub_2498B87AC((uint64_t)&v397),
            }
                       uint64_t v118 = *(void **)(v117 + 40),
                       (~*(_DWORD *)(v117 + 40) & 0xFELL) != 0))
            {
              uint64_t v119 = *(void **)(v117 + 96);
              id v352 = *(id *)(v117 + 80);
              v353 = v119;
              unint64_t v351 = *(void *)(v117 + 72);
              v347 = *(void **)(v117 + 64);
              uint64_t v120 = *(void **)(v117 + 56);
              uint64_t v344 = *(void *)(v117 + 48);
              v345 = v120;
              v359 = v112;
              uint64_t v360 = v108;
              uint64_t v121 = *(void **)(v117 + 24);
              uint64_t v122 = *(void *)(v117 + 32);
              v342 = v118;
              v343 = v121;
              uint64_t v363 = v111;
              uint64_t v124 = *(void **)(v117 + 8);
              uint64_t v123 = *(void *)(v117 + 16);
              LODWORD(v358) = *(unsigned __int8 *)(v117 + 88);
              __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
              uint64_t v115 = (void *)swift_allocObject();
              *((_OWORD *)v115 + 1) = v346;
              v115[7] = &type metadata for ImageAsset;
              v115[8] = &protocol witness table for ImageAsset;
              uint64_t v125 = swift_allocObject();
              v115[4] = v125;
              *(void *)(v125 + 16) = v124;
              *(void *)(v125 + 24) = v123;
              *(void *)(v125 + 32) = v121;
              *(void *)(v125 + 40) = v122;
              *(unsigned char *)(v125 + 48) = (_BYTE)v118;
              *(void *)(v125 + 56) = v344;
              v115[12] = &type metadata for ImageAsset;
              v115[13] = &protocol witness table for ImageAsset;
              uint64_t v126 = swift_allocObject();
              v115[9] = v126;
              uint64_t v127 = v345;
              uint64_t v128 = (uint64_t)v347;
              *(void *)(v126 + 16) = v345;
              *(void *)(v126 + 24) = v128;
              uint64_t v130 = (void *)v351;
              uint64_t v129 = (uint64_t)v352;
              *(void *)(v126 + 32) = v351;
              *(void *)(v126 + 40) = v129;
              *(unsigned char *)(v126 + 48) = (_BYTE)v358;
              *(void *)(v126 + 56) = v353;
              uint64_t v131 = v124;
              uint64_t v132 = v123;
              uint64_t v111 = v363;
              uint64_t v133 = v122;
              long long v112 = v359;
              uint64_t v108 = v360;
              sub_24988247C(v131, v132, v343, v133, (char)v342);
              uint64_t v134 = v130;
              uint64_t v109 = (uint64_t)v339;
              sub_24988247C(v127, v128, v134, v129, (char)v358);
            }
            else
            {
LABEL_96:
              uint64_t v115 = (void *)MEMORY[0x263F8EE78];
            }
            sub_249A4A1E8(v109, (uint64_t (*)(void))type metadata accessor for Instrument);
          }
          sub_249A4A1E8(v365, (uint64_t (*)(void))type metadata accessor for Slot);
          uint64_t v73 = v115[2];
          uint64_t v70 = v112[2];
          uint64_t v192 = v70 + v73;
          if (__OFADD__(v70, v73)) {
            goto LABEL_185;
          }
          v193 = (void *)swift_isUniquelyReferenced_nonNull_native();
          if (v193 && v192 <= v112[3] >> 1)
          {
            if (v115[2]) {
              goto LABEL_107;
            }
          }
          else
          {
            if (v70 <= v192) {
              int64_t v194 = v70 + v73;
            }
            else {
              int64_t v194 = v70;
            }
            long long v112 = sub_2498AB278(v193, v194, 1, v112);
            if (v115[2])
            {
LABEL_107:
              uint64_t v195 = v112[2];
              if ((v112[3] >> 1) - v195 < v73) {
                goto LABEL_191;
              }
              uint64_t v70 = (uint64_t)&v112[5 * v195 + 4];
              if ((unint64_t)(v115 + 4) < v70 + 40 * v73 && v70 < (unint64_t)&v115[5 * v73 + 4]) {
                goto LABEL_198;
              }
              __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEB0);
              swift_arrayInitWithCopy();
              if (v73)
              {
                uint64_t v197 = v112[2];
                BOOL v89 = __OFADD__(v197, v73);
                uint64_t v198 = v197 + v73;
                if (v89) {
                  goto LABEL_195;
                }
                v112[2] = v198;
              }
              goto LABEL_68;
            }
          }
          if (v73) {
            goto LABEL_186;
          }
LABEL_68:
          swift_bridgeObjectRelease();
          v111 += v364;
          if (!--v108)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_142;
          }
        }
      }
      swift_bridgeObjectRelease();
      long long v112 = (void *)MEMORY[0x263F8EE78];
LABEL_142:
      *(void *)&long long v392 = v112;
      uint64_t v252 = v340 + v341[12];
      uint64_t v253 = *(void *)(v252 + 16);
      if (v253)
      {
        uint64_t v255 = *(void *)(v252 + 24);
        uint64_t v254 = *(void *)(v252 + 32);
        v257 = *(void **)v252;
        uint64_t v256 = *(void *)(v252 + 8);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
        uint64_t v258 = swift_allocObject();
        *(_OWORD *)(v258 + 16) = v348;
        *(void *)(v258 + 56) = &type metadata for CAPackageAsset;
        *(void *)(v258 + 64) = &protocol witness table for CAPackageAsset;
        v259 = (void *)swift_allocObject();
        *(void *)(v258 + 32) = v259;
        v259[2] = v257;
        v259[3] = v256;
        v259[4] = v253;
        v259[5] = v255;
        v259[6] = v254;
        id v260 = v257;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_2498944CC(v258);
      }
      v261 = *(void **)(v340 + v341[13]);
      uint64_t v262 = v261[2];
      if (v262)
      {
        swift_bridgeObjectRetain_n();
        v263 = (void *)v392;
        *(void *)&long long v364 = v262 - 1;
        uint64_t v264 = 32;
        for (uint64_t i = v261; ; v261 = i)
        {
          uint64_t v363 = v264;
          v265 = (char *)v261 + v264;
          long long v266 = *((_OWORD *)v265 + 1);
          long long v397 = *(_OWORD *)v265;
          long long v398 = v266;
          long long v267 = *((_OWORD *)v265 + 2);
          long long v268 = *((_OWORD *)v265 + 3);
          long long v269 = *((_OWORD *)v265 + 5);
          v400[1] = *((_OWORD *)v265 + 4);
          v400[2] = v269;
          long long v399 = v267;
          v400[0] = v268;
          long long v270 = *((_OWORD *)v265 + 6);
          long long v271 = *((_OWORD *)v265 + 7);
          long long v272 = *((_OWORD *)v265 + 8);
          uint64_t v401 = *((void *)v265 + 18);
          v400[4] = v271;
          v400[5] = v272;
          v400[3] = v270;
          v273 = (void *)v399;
          uint64_t v274 = *((void *)&v400[1] + 1);
          uint64_t v360 = *((void *)&v269 + 1);
          v275 = (void *)v269;
          long long v276 = v270;
          long long v277 = v271;
          switch((unint64_t)v271 >> 61)
          {
            case 1uLL:
              id v352 = *(id *)&v400[0];
              v353 = (void *)v399;
              unint64_t v351 = *(void *)&v400[1];
              uint64_t v285 = *((void *)&v400[0] + 1);
              v358 = (void *)*((void *)&v399 + 1);
              v359 = (void *)*((void *)&v400[0] + 1);
              v347 = (void *)*((void *)&v270 + 1);
              uint64_t v286 = *((void *)&v399 + 1);
              __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
              uint64_t v278 = swift_allocObject();
              *(_OWORD *)(v278 + 16) = v348;
              *(void *)(v278 + 56) = &type metadata for ImageAsset;
              *(void *)(v278 + 64) = &protocol witness table for ImageAsset;
              uint64_t v287 = swift_allocObject();
              *(void *)(v278 + 32) = v287;
              *(void *)(v287 + 16) = v353;
              *(void *)(v287 + 24) = v286;
              v288 = v352;
              *(void *)(v287 + 32) = v352;
              *(void *)(v287 + 40) = v285;
              LOBYTE(v285) = v351;
              *(unsigned char *)(v287 + 48) = v351;
              *(void *)(v287 + 56) = v274;
              sub_24997096C((uint64_t)&v397);
              sub_2499707B8(v353, (uint64_t)v358, v288, (uint64_t)v359, v285, v274, v275, v360, (void *)v276, (uint64_t)v347, v277);
              break;
            case 2uLL:
              id v352 = *(id *)&v400[0];
              v353 = (void *)v270;
              v289 = (void *)v399;
              uint64_t v290 = *(void *)&v400[1];
              v358 = (void *)*((void *)&v399 + 1);
              v359 = (void *)*((void *)&v400[0] + 1);
              v291 = *(void **)&v400[0];
              sub_24997096C((uint64_t)&v397);
              sub_24997096C((uint64_t)&v397);
              v293 = v358;
              v292 = v359;
              uint64_t v294 = v290;
              sub_2499707B8(v289, (uint64_t)v358, v291, (uint64_t)v359, v290, v274, v275, v360, v353, *((uint64_t *)&v276 + 1), v277);
              swift_bridgeObjectRelease();
              __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
              uint64_t v278 = swift_allocObject();
              *(_OWORD *)(v278 + 16) = v348;
              *(void *)(v278 + 56) = &type metadata for CAPackageAsset;
              *(void *)(v278 + 64) = &protocol witness table for CAPackageAsset;
              v295 = (void *)swift_allocObject();
              *(void *)(v278 + 32) = v295;
              v295[2] = v289;
              v295[3] = v293;
              v295[4] = v352;
              goto LABEL_153;
            case 4uLL:
              id v352 = *(id *)&v400[0];
              v353 = (void *)v399;
              unint64_t v351 = *(void *)&v400[1];
              v358 = (void *)*((void *)&v399 + 1);
              v359 = (void *)*((void *)&v400[0] + 1);
              v279 = (void *)v269;
              uint64_t v280 = *(void *)&v400[0];
              __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
              uint64_t v278 = swift_allocObject();
              *(_OWORD *)(v278 + 16) = v346;
              *(void *)(v278 + 56) = &type metadata for ImageAsset;
              *(void *)(v278 + 64) = &protocol witness table for ImageAsset;
              uint64_t v281 = swift_allocObject();
              *(void *)(v278 + 32) = v281;
              *(void *)(v281 + 16) = v353;
              *(void *)(v281 + 24) = v358;
              *(void *)(v281 + 32) = v280;
              *(void *)(v281 + 40) = v359;
              *(unsigned char *)(v281 + 48) = v351;
              *(void *)(v281 + 56) = v274;
              *(void *)(v278 + 96) = &type metadata for ImageAsset;
              *(void *)(v278 + 104) = &protocol witness table for ImageAsset;
              uint64_t v282 = swift_allocObject();
              *(void *)(v278 + 72) = v282;
              v283 = v279;
              *(void *)(v282 + 16) = v279;
              uint64_t v284 = v360;
              *(void *)(v282 + 24) = v360;
              *(_OWORD *)(v282 + 32) = v276;
              *(unsigned char *)(v282 + 48) = v277;
              *(void *)(v282 + 56) = *((void *)&v277 + 1);
              sub_24997096C((uint64_t)&v397);
              sub_2499707B8(v353, (uint64_t)v358, v352, (uint64_t)v359, v351, v274, v283, v284, (void *)v276, *((uint64_t *)&v276 + 1), v277);
              break;
            case 5uLL:
              uint64_t v296 = *(void *)&v400[1];
              v358 = (void *)*((void *)&v399 + 1);
              v359 = (void *)*((void *)&v400[0] + 1);
              v353 = (void *)*((void *)&v400[1] + 1);
              uint64_t v297 = *((void *)&v270 + 1);
              v298 = *(void **)&v400[0];
              sub_24997096C((uint64_t)&v397);
              sub_24997096C((uint64_t)&v397);
              v299 = v358;
              v292 = v359;
              uint64_t v294 = v296;
              sub_2499707B8(v273, (uint64_t)v358, v298, (uint64_t)v359, v296, (uint64_t)v353, v275, v360, (void *)v276, v297, v277);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
              uint64_t v278 = swift_allocObject();
              *(_OWORD *)(v278 + 16) = v348;
              *(void *)(v278 + 56) = &type metadata for CAPackageAsset;
              *(void *)(v278 + 64) = &protocol witness table for CAPackageAsset;
              v295 = (void *)swift_allocObject();
              *(void *)(v278 + 32) = v295;
              v295[2] = v273;
              v295[3] = v299;
              v295[4] = v298;
LABEL_153:
              v295[5] = v292;
              v295[6] = v294;
              sub_249970A70((uint64_t)&v397);
              break;
            default:
              sub_24997096C((uint64_t)&v397);
              uint64_t v278 = MEMORY[0x263F8EE78];
              break;
          }
          uint64_t v70 = *(void *)(v278 + 16);
          uint64_t v73 = v263[2];
          uint64_t v300 = v73 + v70;
          if (__OFADD__(v73, v70)) {
            goto LABEL_187;
          }
          v301 = (void *)swift_isUniquelyReferenced_nonNull_native();
          if (v301 && (uint64_t v302 = v263[3] >> 1, v302 >= v300))
          {
            if (!*(void *)(v278 + 16)) {
              goto LABEL_168;
            }
          }
          else
          {
            if (v73 <= v300) {
              int64_t v306 = v73 + v70;
            }
            else {
              int64_t v306 = v73;
            }
            v263 = sub_2498AB278(v301, v306, 1, v263);
            uint64_t v302 = v263[3] >> 1;
            if (!*(void *)(v278 + 16))
            {
LABEL_168:
              if (v70) {
                goto LABEL_188;
              }
              goto LABEL_169;
            }
          }
          uint64_t v303 = v263[2];
          if (v302 - v303 < v70) {
            goto LABEL_192;
          }
          uint64_t v73 = (uint64_t)&v263[5 * v303 + 4];
          if (v278 + 32 < (unint64_t)(v73 + 40 * v70) && v73 < (unint64_t)(v278 + 32 + 40 * v70)) {
            goto LABEL_198;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEB0);
          swift_arrayInitWithCopy();
          if (v70)
          {
            uint64_t v304 = v263[2];
            BOOL v89 = __OFADD__(v304, v70);
            uint64_t v305 = v304 + v70;
            if (v89) {
              goto LABEL_196;
            }
            v263[2] = v305;
          }
LABEL_169:
          swift_bridgeObjectRelease();
          sub_249970A70((uint64_t)&v397);
          if (!(void)v364)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_17;
          }
          *(void *)&long long v364 = v364 - 1;
          uint64_t v264 = v363 + 152;
        }
      }
      v263 = (void *)v392;
LABEL_17:
      uint64_t v68 = v337 + 1;
      sub_2498944CC((uint64_t)v263);
      if (v68 == v334)
      {
        swift_bridgeObjectRelease();
        goto LABEL_173;
      }
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_182:
  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  __break(1u);
LABEL_189:
  __break(1u);
LABEL_190:
  __break(1u);
LABEL_191:
  __break(1u);
LABEL_192:
  __break(1u);
LABEL_193:
  __break(1u);
LABEL_194:
  __break(1u);
LABEL_195:
  __break(1u);
LABEL_196:
  __break(1u);
LABEL_197:
  uint64_t v70 = (uint64_t)sub_2498AB278(0, *(void *)(v70 + 16) + 1, 1, (void *)v70);
LABEL_174:
  unint64_t v309 = *(void *)(v70 + 16);
  unint64_t v308 = *(void *)(v70 + 24);
  if (v309 >= v308 >> 1) {
    uint64_t v70 = (uint64_t)sub_2498AB278((void *)(v308 > 1), v309 + 1, 1, (void *)v70);
  }
  v394 = &type metadata for InstrumentFont;
  v395 = &protocol witness table for InstrumentFont;
  uint64_t v310 = swift_allocObject();
  *(void *)&long long v392 = v310;
  *(unsigned char *)(v310 + 16) = 0;
  *(void *)(v310 + 24) = 100;
  *(void *)(v310 + 32) = v73;
  *(void *)(v310 + 40) = v1;
  *(_WORD *)(v310 + 48) = 0;
  *(void *)(v310 + 56) = 0x746C7561666564;
  *(void *)(v310 + 64) = 0xE700000000000000;
  *(void *)(v70 + 16) = v309 + 1;
  sub_249882BCC(&v392, v70 + 40 * v309 + 32);
  uint64_t v311 = v402[43];
  uint64_t v312 = v402[44];
  uint64_t v313 = v402[45];
  uint64_t v314 = v402[46];
  char v315 = v402[47];
  uint64_t v316 = v402[48];
  sub_24988247C((void *)v402[43], v402[44], (void *)v402[45], v402[46], v402[47]);
  unint64_t v318 = *(void *)(v70 + 16);
  unint64_t v317 = *(void *)(v70 + 24);
  if (v318 >= v317 >> 1) {
    uint64_t v70 = (uint64_t)sub_2498AB278((void *)(v317 > 1), v318 + 1, 1, (void *)v70);
  }
  *((void *)&v398 + 1) = &type metadata for ImageAsset;
  *(void *)&long long v399 = &protocol witness table for ImageAsset;
  uint64_t v319 = swift_allocObject();
  *(void *)&long long v397 = v319;
  *(void *)(v319 + 16) = v311;
  *(void *)(v319 + 24) = v312;
  *(void *)(v319 + 32) = v313;
  *(void *)(v319 + 40) = v314;
  *(unsigned char *)(v319 + 48) = v315;
  *(void *)(v319 + 56) = v316;
  *(void *)(v70 + 16) = v318 + 1;
  sub_249882BCC(&v397, v70 + 40 * v318 + 32);
  uint64_t v320 = v402[49];
  uint64_t v321 = v402[50];
  uint64_t v322 = v402[51];
  uint64_t v323 = v402[52];
  char v324 = v402[53];
  uint64_t v325 = v402[54];
  sub_24988247C((void *)v402[49], v402[50], (void *)v402[51], v402[52], v402[53]);
  unint64_t v327 = *(void *)(v70 + 16);
  unint64_t v326 = *(void *)(v70 + 24);
  if (v327 >= v326 >> 1) {
    uint64_t v70 = (uint64_t)sub_2498AB278((void *)(v326 > 1), v327 + 1, 1, (void *)v70);
  }
  *((void *)&v398 + 1) = &type metadata for ImageAsset;
  *(void *)&long long v399 = &protocol witness table for ImageAsset;
  uint64_t v328 = swift_allocObject();
  *(void *)&long long v397 = v328;
  *(void *)(v328 + 16) = v320;
  *(void *)(v328 + 24) = v321;
  *(void *)(v328 + 32) = v322;
  *(void *)(v328 + 40) = v323;
  *(unsigned char *)(v328 + 48) = v324;
  *(void *)(v328 + 56) = v325;
  *(void *)(v70 + 16) = v327 + 1;
  sub_249882BCC(&v397, v70 + 40 * v327 + 32);
  return v70;
}

uint64_t Display.DisplayType.defaultID.getter()
{
  unint64_t v1 = 0x445F7265746E6543;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000011;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x5F72657473756C43;
  }
}

void *Display.init(type:manufacturerLogo:appleLogo:id:size:density:requiresDarkAppearance:reversesDynamicContentDPadScrolling:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, int a5@<W4>, char a6@<W5>, _OWORD *a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>)
{
  LODWORD(v69) = a5;
  uint64_t v63 = a7;
  uint64_t v64 = a4;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v68 = (uint64_t)v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v62 - v20;
  uint64_t v67 = type metadata accessor for LayoutTemplate();
  uint64_t v22 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v24 = (char *)v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for Layout();
  uint64_t v66 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v27 = (char *)v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v70 = (uint64_t)v62 - v29;
  int v30 = *a1;
  char v31 = *(unsigned char *)(a2 + 32);
  uint64_t v32 = *(void *)(a2 + 40);
  char v33 = *((unsigned char *)a3 + 32);
  uint64_t v34 = *((void *)a3 + 5);
  long long v81 = *v64;
  LOBYTE(v74[0]) = v30;
  long long v35 = *(_OWORD *)(a2 + 16);
  v80[0] = *(_OWORD *)a2;
  v80[1] = v35;
  LOBYTE(v80[2]) = v31;
  *((void *)&v80[2] + 1) = v32;
  long long v36 = a3[1];
  long long v71 = *a3;
  long long v72 = v36;
  LOBYTE(v73[0]) = v33;
  v73[1] = v34;
  uint64_t v37 = MEMORY[0x263F8EE78];
  unint64_t v38 = sub_2498EDF94(MEMORY[0x263F8EE78]);
  Display.init(id:type:layouts:size:density:manufacturerLogo:appleLogo:requiresDarkAppearance:reversesDynamicContentDPadScrolling:localNotifications:shadows:)((unint64_t *)&v81, (unsigned __int8 *)v74, v37, (uint64_t *)v80, (uint64_t *)&v71, v69, a6, v38, (uint64_t)&v76, a8, a9, a10, 0);
  long long v81 = v76;
  unint64_t v39 = *((void *)&v77 + 1);
  uint64_t v82 = v77;
  long long v40 = v78;
  memcpy(v80, v79, sizeof(v80));
  if (v30)
  {
    if (v30 == 1)
    {
      if (qword_2696DD678 != -1) {
        swift_once();
      }
      uint64_t v41 = &qword_2696E19D8;
    }
    else
    {
      if (qword_2696DD680 != -1) {
        swift_once();
      }
      uint64_t v41 = &qword_2696E19E0;
    }
  }
  else
  {
    if (qword_2696DD670 != -1) {
      swift_once();
    }
    uint64_t v41 = (uint64_t *)&off_2696E19D0;
  }
  uint64_t v42 = *v41;
  uint64_t v43 = *(void *)(*v41 + 16);
  if (v43)
  {
    uint64_t v44 = v42 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    uint64_t v64 = *(long long **)(v22 + 72);
    v62[1] = v42;
    swift_bridgeObjectRetain_n();
    uint64_t v65 = v27;
    do
    {
      unint64_t v69 = v39;
      sub_249A4A180(v44, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for LayoutTemplate);
      sub_249AEB7F8();
      if (qword_2696DD3B8 != -1) {
        swift_once();
      }
      uint64_t v45 = qword_2696DFB20;
      uint64_t v46 = (uint64_t)v21;
      uint64_t v47 = v21;
      uint64_t v48 = v68;
      sub_2498D6084(v46, v68, &qword_2696DFCB0);
      unint64_t v49 = (uint64_t *)&v24[*(int *)(v67 + 20)];
      uint64_t v50 = *v49;
      uint64_t v51 = v49[1];
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v52 = (uint64_t)v24;
      uint64_t v53 = LayoutTemplate.scaledZones(for:)(*(double *)&v40, *((double *)&v40 + 1));
      char v75 = 0;
      long long v78 = 0u;
      v79[0] = 0u;
      long long v76 = 0u;
      long long v77 = 0u;
      BYTE2(v79[1]) = 0;
      LOWORD(v79[1]) = 512;
      v74[0] = 0;
      v74[1] = 0;
      long long v72 = 0u;
      memset(v73, 0, 25);
      long long v71 = 0u;
      uint64_t v54 = v70;
      uint64_t v55 = v48;
      uint64_t v21 = v47;
      Layout.init(id:displayName:zones:layoutType:systemUILayout:backgroundColor:safeAreaInsets:layoutStyleID:preview:wallpapers:)(v55, v50, v51, v53, &v75, (uint64_t *)&v76, v45, v74, v70, 0.0, 0.0, 0.0, 0.0, (uint64_t)&v71, MEMORY[0x263F8EE78]);
      uint64_t v56 = (char *)v52;
      sub_249A4A1E8(v52, (uint64_t (*)(void))type metadata accessor for LayoutTemplate);
      sub_2498D60E8((uint64_t)v21, &qword_2696DFCB0);
      uint64_t v57 = (uint64_t)v65;
      sub_249A4A180(v54, (uint64_t)v65, (uint64_t (*)(void))type metadata accessor for Layout);
      unint64_t v39 = v69;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v39 = sub_2498AB3DC(0, *(void *)(v39 + 16) + 1, 1, v39);
      }
      unint64_t v59 = *(void *)(v39 + 16);
      unint64_t v58 = *(void *)(v39 + 24);
      uint64_t v24 = v56;
      if (v59 >= v58 >> 1) {
        unint64_t v39 = sub_2498AB3DC(v58 > 1, v59 + 1, 1, v39);
      }
      *(void *)(v39 + 16) = v59 + 1;
      sub_249A4C234(v57, v39+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(void *)(v66 + 72) * v59, (uint64_t (*)(void))type metadata accessor for Layout);
      sub_249A4A1E8(v70, (uint64_t (*)(void))type metadata accessor for Layout);
      v44 += (uint64_t)v64;
      --v43;
    }
    while (v43);
    swift_bridgeObjectRelease_n();
  }
  uint64_t v60 = v63;
  *uint64_t v63 = v81;
  *((void *)v60 + 2) = v82;
  uint64_t result = memcpy(v60 + 3, v80, 0x1B0uLL);
  *((void *)v60 + 3) = v39;
  v60[2] = v40;
  return result;
}

void Display.DisplayType.id.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

CarPlayAssetUI::Display::DisplayType_optional __swiftcall Display.DisplayType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_249AEDCF8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static Display.DisplayType.allCases.getter()
{
  return &unk_26FDA2848;
}

uint64_t Display.DisplayType.rawValue.getter()
{
  uint64_t v1 = 0x6F437265746E6563;
  if (*v0 != 1) {
    uint64_t v1 = 0x65676E6573736170;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x72657473756C63;
  }
}

uint64_t sub_249A44C7C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2498F1644(*a1, *a2);
}

uint64_t sub_249A44C88()
{
  return sub_249AEE388();
}

uint64_t sub_249A44D3C()
{
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249A44DDC()
{
  return sub_249AEE388();
}

CarPlayAssetUI::Display::DisplayType_optional sub_249A44E8C(Swift::String *a1)
{
  return Display.DisplayType.init(rawValue:)(*a1);
}

void sub_249A44E98(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xED0000656C6F736ELL;
  uint64_t v5 = 0x6F437265746E6563;
  if (v2 != 1)
  {
    uint64_t v5 = 0x65676E6573736170;
    unint64_t v4 = 0xE900000000000072;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x72657473756C63;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_249A44F08()
{
  return sub_249AED3A8();
}

uint64_t sub_249A44F68()
{
  return sub_249AED348();
}

void sub_249A44FB8(void *a1@<X8>)
{
  *a1 = &unk_26FDA1528;
}

uint64_t Display.id.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Display.id.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = v2;
  v1[1] = v3;
  return result;
}

uint64_t (*Display.id.modify())()
{
  return nullsub_1;
}

void Display.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *Display.type.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*Display.type.modify())()
{
  return nullsub_1;
}

uint64_t Display.layouts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Display.layouts.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*Display.layouts.modify())()
{
  return nullsub_1;
}

double Display.size.getter()
{
  return *(double *)(v0 + 32);
}

void sub_249A450BC(double *a1, uint64_t a2)
{
  double v2 = *a1;
  double v3 = a1[1];
  double v4 = *(double *)(a2 + 32);
  double v5 = *(double *)(a2 + 40);
  *(double *)(a2 + 32) = *a1;
  *(double *)(a2 + 40) = v3;
  if (v2 != v4 || v3 != v5) {
    sub_249A4511C(v4, v5, v2, v3);
  }
}

void Display.size.setter(CGFloat a1, double a2)
{
  double v5 = *(double *)(v2 + 32);
  double v6 = *(double *)(v2 + 40);
  *(CGFloat *)(v2 + 32) = a1;
  *(double *)(v2 + 40) = a2;
  if (v5 != a1 || v6 != a2) {
    sub_249A4511C(v5, v6, a1, a2);
  }
}

void sub_249A4511C(CGFloat a1, double MidY, CGFloat a3, double a4)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC38);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = (unint64_t)&v139 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = type metadata accessor for Slot();
  uint64_t v162 = *(void *)(v173 - 8);
  MEMORY[0x270FA5388](v173);
  uint64_t v177 = (uint64_t)&v139 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (double *)((char *)&v139 - v14);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v139 - v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v172 = (uint64_t)&v139 - v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (uint64_t *)((char *)&v139 - v22);
  MEMORY[0x270FA5388](v24);
  uint64_t v187 = (uint64_t)&v139 - v25;
  MEMORY[0x270FA5388](v26);
  uint64_t v186 = (uint64_t)&v139 - v27;
  uint64_t v28 = type metadata accessor for Component();
  uint64_t v146 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  int v30 = (char *)&v139 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  char v33 = (char *)&v139 - v32;
  uint64_t v156 = type metadata accessor for Zone();
  uint64_t v140 = *(void *)(v156 - 8);
  MEMORY[0x270FA5388](v156);
  uint64_t v158 = (uint64_t)&v139 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v155 = (uint64_t)&v139 - v36;
  unint64_t v37 = *(void *)(v4 + 24);
  if (*(void *)(v37 + 16))
  {
    uint64_t v141 = *(void *)(v37 + 16);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_73;
    }
    while (1)
    {
      CGFloat v150 = a3 / a1;
      uint64_t v170 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v162 + 56);
      uint64_t v169 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v162 + 48);
      CGFloat v149 = a4 / MidY;
      unint64_t v171 = v11;
      unint64_t v11 = 0;
      unint64_t v174 = v23;
      unint64_t v161 = v30;
      uint64_t v175 = v33;
      uint64_t v38 = v141;
      uint64_t v139 = v4;
      uint64_t v159 = v28;
      while (v11 != v38)
      {
        *(void *)(v4 + 24) = v37;
        if (v11 >= *(void *)(v37 + 16)) {
          goto LABEL_72;
        }
        uint64_t v39 = type metadata accessor for Layout();
        unint64_t v40 = v37
            + ((*(unsigned __int8 *)(*(void *)(v39 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v39 - 8) + 80))
            + *(void *)(*(void *)(v39 - 8) + 72) * v11;
        uint64_t v41 = *(int *)(v39 + 24);
        uint64_t v42 = *(void *)(v40 + v41);
        int64_t v43 = *(void *)(v42 + 16);
        if (v43)
        {
          uint64_t v143 = v41;
          unint64_t v144 = v40;
          unint64_t v145 = v11;
          uint64_t v194 = MEMORY[0x263F8EE78];
          uint64_t v44 = v42;
          swift_bridgeObjectRetain();
          int64_t v154 = v43;
          sub_249A22150(0, v43, 0);
          uint64_t v45 = 0;
          unint64_t v46 = (*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80);
          uint64_t v142 = v44;
          unint64_t v153 = v46;
          uint64_t v152 = v44 + v46;
          uint64_t v47 = *(void *)(v140 + 72);
          uint64_t v48 = v155;
          uint64_t v151 = v47;
          do
          {
            uint64_t v157 = v45;
            uint64_t v49 = v152 + v47 * v45;
            uint64_t v50 = v158;
            sub_249A4A180(v49, v158, (uint64_t (*)(void))type metadata accessor for Zone);
            sub_249A4A180(v50, v48, (uint64_t (*)(void))type metadata accessor for Zone);
            uint64_t v51 = (double *)(v48 + *(int *)(v156 + 24));
            MidY = *v51;
            a1 = v51[1];
            double v52 = v51[2];
            double v53 = v51[3];
            CGAffineTransformMakeScale(&v193, v150, v149);
            v195.origin.double x = MidY;
            v195.origin.CGFloat y = a1;
            v195.size.CGFloat width = v52;
            v195.size.CGFloat height = v53;
            CGRect v196 = CGRectApplyAffineTransform(v195, &v193);
            *(CGRect *)uint64_t v51 = v196;
            int v167 = v51;
            if (v196.size.width != v52 || v196.size.height != v53)
            {
              uint64_t v55 = *(int *)(v156 + 28);
              uint64_t v56 = *(void *)(v48 + v55);
              int64_t v57 = *(void *)(v56 + 16);
              if (v57)
              {
                uint64_t v148 = *(int *)(v156 + 28);
                uint64_t v192 = MEMORY[0x263F8EE78];
                swift_bridgeObjectRetain();
                sub_249A22110(0, v57, 0);
                uint64_t v58 = 0;
                unint64_t v59 = (*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80);
                uint64_t v147 = v56;
                unint64_t v165 = v59;
                uint64_t v164 = v56 + v59;
                uint64_t v60 = *(void *)(v146 + 72);
                uint64_t v61 = v159;
                uint64_t v163 = v60;
                int64_t v166 = v57;
                do
                {
                  uint64_t v168 = v58;
                  sub_249A4A180(v164 + v60 * v58, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for Component);
                  sub_249A4A180((uint64_t)v30, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for Component);
                  double v63 = v167[2];
                  double v62 = v167[3];
                  uint64_t v64 = (double *)&v33[*(int *)(v61 + 28)];
                  double v66 = *v64;
                  double v65 = v64[1];
                  *uint64_t v64 = v63;
                  v64[1] = v62;
                  if (v63 != v66 || v62 != v65)
                  {
                    uint64_t v68 = *(int *)(v61 + 32);
                    uint64_t v69 = *(void *)&v33[v68];
                    int64_t v70 = *(void *)(v69 + 16);
                    uint64_t v176 = v68;
                    if (v70)
                    {
                      double v188 = v63 / v66;
                      uint64_t v191 = MEMORY[0x263F8EE78];
                      CGFloat v178 = v62 / v65;
                      uint64_t v71 = v69;
                      swift_bridgeObjectRetain();
                      sub_249A22130(0, v70, 0);
                      unint64_t v72 = (*(unsigned __int8 *)(v162 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v162 + 80);
                      uint64_t v160 = v71;
                      uint64_t v73 = v71 + v72;
                      uint64_t v74 = *(void *)(v162 + 72);
                      do
                      {
                        uint64_t v75 = v177;
                        sub_249A4A180(v73, v177, (uint64_t (*)(void))type metadata accessor for Slot);
                        sub_249A4A180(v75, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Slot);
                        CGFloat v76 = v15[6];
                        CGFloat v77 = v15[7];
                        CGFloat v78 = v15[8];
                        CGFloat v79 = v15[9];
                        CGFloat v80 = v178;
                        CGAffineTransformMakeScale(&v193, v188, v178);
                        v197.origin.double x = v76;
                        v197.origin.CGFloat y = v77;
                        v197.size.CGFloat width = v78;
                        v197.size.CGFloat height = v79;
                        CGRect v198 = CGRectApplyAffineTransform(v197, &v193);
                        double x = v198.origin.x;
                        CGFloat y = v198.origin.y;
                        CGFloat width = v198.size.width;
                        CGFloat height = v198.size.height;
                        double v82 = v15[10];
                        double v81 = v15[11];
                        double v83 = v15[13];
                        double v181 = v15[12];
                        v198.origin.double x = v76;
                        v198.origin.CGFloat y = v77;
                        v198.size.CGFloat width = v78;
                        v198.size.CGFloat height = v79;
                        double v189 = v81 + CGRectGetMinX(v198);
                        v199.origin.double x = v76;
                        v199.origin.CGFloat y = v77;
                        v199.size.CGFloat width = v78;
                        v199.size.CGFloat height = v79;
                        CGFloat v182 = v82 + CGRectGetMinY(v199);
                        v200.origin.double x = v76;
                        v200.origin.CGFloat y = v77;
                        v200.size.CGFloat width = v78;
                        v200.size.CGFloat height = v79;
                        CGFloat v84 = CGRectGetWidth(v200) - v83 - v81;
                        v201.origin.double x = v76;
                        v201.origin.CGFloat y = v77;
                        v201.size.CGFloat width = v78;
                        v201.size.CGFloat height = v79;
                        CGFloat v85 = CGRectGetHeight(v201) - v181 - v82;
                        CGAffineTransformMakeScale(&v193, v188, v80);
                        v202.origin.double x = v189;
                        v202.origin.CGFloat y = v182;
                        v202.size.CGFloat width = v84;
                        v202.size.CGFloat height = v85;
                        CGRect v203 = CGRectApplyAffineTransform(v202, &v193);
                        double v189 = v203.origin.y;
                        MidY = v203.size.width;
                        a1 = v203.size.height;
                        CGFloat v86 = v203.origin.x;
                        double v179 = v203.origin.x;
                        double MinY = CGRectGetMinY(v203);
                        CGFloat v88 = x;
                        v204.origin.double x = x;
                        CGFloat v89 = y;
                        v204.origin.CGFloat y = y;
                        CGFloat v90 = width;
                        v204.size.CGFloat width = width;
                        CGFloat v91 = height;
                        v204.size.CGFloat height = height;
                        CGFloat v182 = MinY - CGRectGetMinY(v204);
                        v205.origin.double x = v86;
                        CGFloat v92 = v189;
                        v205.origin.CGFloat y = v189;
                        v205.size.CGFloat width = MidY;
                        v205.size.CGFloat height = a1;
                        double MinX = CGRectGetMinX(v205);
                        v206.origin.double x = v88;
                        v206.origin.CGFloat y = v89;
                        v206.size.CGFloat width = v90;
                        v206.size.CGFloat height = v91;
                        double v181 = MinX - CGRectGetMinX(v206);
                        v207.origin.double x = v88;
                        v207.origin.CGFloat y = v89;
                        v207.size.CGFloat width = v90;
                        CGFloat v94 = v91;
                        v207.size.CGFloat height = v91;
                        double MaxY = CGRectGetMaxY(v207);
                        a3 = v179;
                        v208.origin.double x = v179;
                        v208.origin.CGFloat y = v92;
                        v208.size.CGFloat width = MidY;
                        v208.size.CGFloat height = a1;
                        double v180 = MaxY - CGRectGetMaxY(v208);
                        a4 = x;
                        v209.origin.double x = x;
                        v209.origin.CGFloat y = v89;
                        v209.size.CGFloat width = v90;
                        v209.size.CGFloat height = v94;
                        double MaxX = CGRectGetMaxX(v209);
                        v210.origin.double x = a3;
                        v210.origin.CGFloat y = v189;
                        v210.size.CGFloat width = MidY;
                        v210.size.CGFloat height = a1;
                        CGFloat v97 = CGRectGetMaxX(v210);
                        v15[6] = a4;
                        v15[7] = v89;
                        v15[8] = v90;
                        v15[9] = v94;
                        double v98 = v181;
                        v15[10] = v182;
                        v15[11] = v98;
                        v15[12] = v180;
                        v15[13] = MaxX - v97;
                        sub_249A4A1E8(v75, (uint64_t (*)(void))type metadata accessor for Slot);
                        uint64_t v99 = v191;
                        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                        {
                          sub_249A22130(0, *(void *)(v99 + 16) + 1, 1);
                          uint64_t v99 = v191;
                        }
                        unint64_t v101 = *(void *)(v99 + 16);
                        unint64_t v100 = *(void *)(v99 + 24);
                        if (v101 >= v100 >> 1)
                        {
                          sub_249A22130(v100 > 1, v101 + 1, 1);
                          uint64_t v99 = v191;
                        }
                        *(void *)(v99 + 16) = v101 + 1;
                        sub_249A4C234((uint64_t)v15, v99 + v72 + v101 * v74, (uint64_t (*)(void))type metadata accessor for Slot);
                        v73 += v74;
                        --v70;
                      }
                      while (v70);
                      swift_bridgeObjectRelease();
                      char v33 = v175;
                      uint64_t v68 = v176;
                      uint64_t v23 = v174;
                      int v30 = v161;
                    }
                    else
                    {
                      uint64_t v99 = MEMORY[0x263F8EE78];
                    }
                    swift_bridgeObjectRelease();
                    *(void *)&v33[v68] = v99;
                    int64_t v102 = *(void *)(v99 + 16);
                    if (v102)
                    {
                      *(void *)&v193.CGFloat a = MEMORY[0x263F8EE78];
                      swift_bridgeObjectRetain();
                      sub_249A22130(0, v102, 0);
                      uint64_t v103 = 0;
                      *(void *)&double x = (*(unsigned __int8 *)(v162 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v162 + 80);
                      *(void *)&double v189 = v99 + *(void *)&x;
                      uint64_t v104 = *(void *)(v162 + 72);
                      CGFloat y = *(double *)&v102;
                      while (1)
                      {
                        uint64_t v105 = v187;
                        sub_249A4A180(*(void *)&v189 + v104 * v103, v187, (uint64_t (*)(void))type metadata accessor for Slot);
                        sub_249A4A180(v105, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for Slot);
                        unint64_t v106 = v23[5];
                        if (v106 >= 2)
                        {
                          uint64_t v107 = *v23;
                          uint64_t v108 = v23[1];
                          uint64_t v109 = v23[2];
                          uint64_t v110 = v23[3];
                          uint64_t v111 = v23[4];
                          uint64_t v112 = *(void *)&v175[v176];
                          uint64_t v113 = *(void *)(v112 + 16);
                          double v188 = *(double *)&v107;
                          if (v113)
                          {
                            uint64_t v114 = v112 + *(void *)&x;
                            sub_249992828(v107, v108, v109, v110, v111, v106);
                            swift_bridgeObjectRetain();
                            while (1)
                            {
                              sub_249A4A180(v114, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for Slot);
                              BOOL v115 = *((void *)v18 + 15) == v111 && v106 == *((void *)v18 + 16);
                              if (v115 || (sub_249AEE0D8() & 1) != 0) {
                                break;
                              }
                              sub_249A4A1E8((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for Slot);
                              v114 += v104;
                              if (!--v113) {
                                goto LABEL_42;
                              }
                            }
                            uint64_t v116 = v171;
                            sub_249A4C234((uint64_t)v18, v171, (uint64_t (*)(void))type metadata accessor for Slot);
                            uint64_t v117 = 0;
                          }
                          else
                          {
                            sub_249992828(v107, v108, v109, v110, v111, v106);
                            swift_bridgeObjectRetain();
LABEL_42:
                            uint64_t v117 = 1;
                            uint64_t v116 = v171;
                          }
                          uint64_t v118 = v173;
                          (*v170)(v116, v117, 1, v173);
                          swift_bridgeObjectRelease();
                          if ((*v169)(v116, 1, v118) == 1)
                          {
                            sub_2498D60E8(v116, &qword_2696DFC38);
                            sub_249AEDC58();
                            __break(1u);
                            return;
                          }
                          uint64_t v119 = v116;
                          uint64_t v120 = v172;
                          sub_249A4C234(v119, v172, (uint64_t (*)(void))type metadata accessor for Slot);
                          CGFloat v121 = *(double *)(v120 + 48);
                          a1 = *(double *)(v120 + 56);
                          CGFloat v122 = *(double *)(v120 + 64);
                          CGFloat v123 = *(double *)(v120 + 72);
                          v211.origin.double x = v121;
                          v211.origin.CGFloat y = a1;
                          v211.size.CGFloat width = v122;
                          v211.size.CGFloat height = v123;
                          double v124 = CGRectGetWidth(v211);
                          v212.origin.double x = v121;
                          v212.origin.CGFloat y = a1;
                          v212.size.CGFloat width = v122;
                          v212.size.CGFloat height = v123;
                          double v125 = CGRectGetHeight(v212);
                          if (v125 >= v124) {
                            double v125 = v124;
                          }
                          a3 = v125 * 0.5 + 15.0 + 20.0;
                          v213.origin.double x = v121;
                          v213.origin.CGFloat y = a1;
                          v213.size.CGFloat width = v122;
                          v213.size.CGFloat height = v123;
                          CGFloat MidX = CGRectGetMidX(v213);
                          v214.origin.double x = v121;
                          v214.origin.CGFloat y = a1;
                          v214.size.CGFloat width = v122;
                          v214.size.CGFloat height = v123;
                          MidY = CGRectGetMidY(v214);
                          sub_249A4A1E8(v120, (uint64_t (*)(void))type metadata accessor for Slot);
                          uint64_t v23 = v174;
                          sub_24999283C(*v174, v174[1], v174[2], v174[3], v174[4], v174[5]);
                          *(double *)uint64_t v23 = v188;
                          *((CGFloat *)v23 + 1) = a3;
                          *((CGFloat *)v23 + 2) = MidX;
                          *((double *)v23 + 3) = MidY;
                          v23[4] = v111;
                          v23[5] = v106;
                          int64_t v102 = *(void *)&y;
                        }
                        sub_249A4C234((uint64_t)v23, v186, (uint64_t (*)(void))type metadata accessor for Slot);
                        sub_249A4A1E8(v187, (uint64_t (*)(void))type metadata accessor for Slot);
                        CGFloat a = v193.a;
                        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                        {
                          sub_249A22130(0, *(void *)(*(void *)&a + 16) + 1, 1);
                          CGFloat a = v193.a;
                        }
                        unint64_t v129 = *(void *)(*(void *)&a + 16);
                        unint64_t v128 = *(void *)(*(void *)&a + 24);
                        if (v129 >= v128 >> 1)
                        {
                          sub_249A22130(v128 > 1, v129 + 1, 1);
                          CGFloat a = v193.a;
                        }
                        ++v103;
                        *(void *)(*(void *)&a + 16) = v129 + 1;
                        sub_249A4C234(v186, *(void *)&a + *(void *)&x + v129 * v104, (uint64_t (*)(void))type metadata accessor for Slot);
                        if (v103 == v102)
                        {
                          swift_bridgeObjectRelease();
                          char v33 = v175;
                          uint64_t v68 = v176;
                          int v30 = v161;
                          goto LABEL_54;
                        }
                      }
                    }
                    CGFloat a = MEMORY[0x263F8EE78];
LABEL_54:
                    swift_bridgeObjectRelease();
                    *(CGFloat *)&v33[v68] = a;
                    uint64_t v61 = v159;
                  }
                  sub_249A4A1E8((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for Component);
                  uint64_t v130 = v192;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    sub_249A22110(0, *(void *)(v130 + 16) + 1, 1);
                    uint64_t v130 = v192;
                  }
                  unint64_t v132 = *(void *)(v130 + 16);
                  unint64_t v131 = *(void *)(v130 + 24);
                  if (v132 >= v131 >> 1)
                  {
                    sub_249A22110(v131 > 1, v132 + 1, 1);
                    uint64_t v130 = v192;
                  }
                  uint64_t v133 = v168 + 1;
                  *(void *)(v130 + 16) = v132 + 1;
                  uint64_t v58 = v133;
                  uint64_t v134 = v130 + v165 + v132 * v163;
                  uint64_t v60 = v163;
                  sub_249A4C234((uint64_t)v33, v134, (uint64_t (*)(void))type metadata accessor for Component);
                }
                while (v58 != v166);
                swift_bridgeObjectRelease();
                uint64_t v48 = v155;
                uint64_t v55 = v148;
              }
              else
              {
                uint64_t v130 = MEMORY[0x263F8EE78];
              }
              swift_bridgeObjectRelease();
              *(void *)(v48 + v55) = v130;
            }
            sub_249A4A1E8(v158, (uint64_t (*)(void))type metadata accessor for Zone);
            uint64_t v28 = v194;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_249A22150(0, *(void *)(v28 + 16) + 1, 1);
              uint64_t v28 = v194;
            }
            uint64_t v135 = v157;
            unint64_t v137 = *(void *)(v28 + 16);
            unint64_t v136 = *(void *)(v28 + 24);
            if (v137 >= v136 >> 1)
            {
              sub_249A22150(v136 > 1, v137 + 1, 1);
              uint64_t v135 = v157;
              uint64_t v28 = v194;
            }
            uint64_t v45 = v135 + 1;
            *(void *)(v28 + 16) = v137 + 1;
            uint64_t v47 = v151;
            uint64_t v138 = v28 + v153 + v137 * v151;
            uint64_t v48 = v155;
            sub_249A4C234(v155, v138, (uint64_t (*)(void))type metadata accessor for Zone);
          }
          while (v45 != v154);
          swift_bridgeObjectRelease();
          unint64_t v40 = v144;
          uint64_t v41 = v143;
          uint64_t v4 = v139;
          unint64_t v11 = v145;
        }
        else
        {
          uint64_t v28 = MEMORY[0x263F8EE78];
        }
        ++v11;
        swift_bridgeObjectRelease();
        *(void *)(v40 + v41) = v28;
        unint64_t v37 = *(void *)(v4 + 24);
        uint64_t v38 = v141;
        if (v11 == v141) {
          return;
        }
      }
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      unint64_t v37 = sub_24997005C(v37);
    }
  }
}

void (*Display.size.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 32);
  return sub_249A46320;
}

void sub_249A46320(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  double v2 = *(double *)a1;
  double v3 = *(double *)(a1 + 8);
  double v4 = *(double *)(v1 + 32);
  double v5 = *(double *)(v1 + 40);
  *(void *)(v1 + 32) = *(void *)a1;
  *(double *)(v1 + 40) = v3;
  if (v2 != v4 || v3 != v5) {
    sub_249A4511C(v4, v5, v2, v3);
  }
}

double Display.density.getter()
{
  return *(double *)(v0 + 48);
}

void Display.density.setter(double a1)
{
  *(double *)(v1 + 48) = a1;
}

uint64_t (*Display.density.modify())()
{
  return nullsub_1;
}

uint64_t Display.background.getter@<X0>(uint64_t a1@<X8>)
{
  double v2 = *(void **)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 64);
  double v4 = *(void **)(v1 + 72);
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v6 = *(void *)(v1 + 88);
  uint64_t v7 = *(void *)(v1 + 96);
  char v8 = *(unsigned char *)(v1 + 104);
  uint64_t v9 = *(void *)(v1 + 112);
  uint64_t v10 = *(void *)(v1 + 120);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  sub_249882468(v2, v3, v4, v5, v6);

  return swift_bridgeObjectRetain();
}

__n128 Display.background.setter(long long *a1)
{
  __n128 v8 = (__n128)a1[1];
  long long v9 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  uint64_t v3 = *((void *)a1 + 5);
  char v4 = *((unsigned char *)a1 + 48);
  uint64_t v5 = *((void *)a1 + 7);
  uint64_t v6 = *((void *)a1 + 8);
  sub_2498826D0(*(void **)(v1 + 56), *(void *)(v1 + 64), *(void **)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88));
  swift_bridgeObjectRelease();
  *(_OWORD *)(v1 + 56) = v9;
  __n128 result = v8;
  *(__n128 *)(v1 + 72) = v8;
  *(void *)(v1 + 88) = v2;
  *(void *)(v1 + 96) = v3;
  *(unsigned char *)(v1 + 104) = v4;
  *(void *)(v1 + 112) = v5;
  *(void *)(v1 + 120) = v6;
  return result;
}

uint64_t (*Display.background.modify())()
{
  return nullsub_1;
}

uint64_t Display.shapeMask.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 128);
  uint64_t v3 = *(void *)(v1 + 136);
  char v4 = *(void **)(v1 + 144);
  uint64_t v5 = *(void *)(v1 + 152);
  uint64_t v6 = *(void *)(v1 + 160);
  uint64_t v7 = *(void *)(v1 + 168);
  char v8 = *(unsigned char *)(v1 + 176);
  uint64_t v9 = *(void *)(v1 + 184);
  uint64_t v10 = *(void *)(v1 + 192);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  sub_249882468(v2, v3, v4, v5, v6);

  return swift_bridgeObjectRetain();
}

__n128 Display.shapeMask.setter(long long *a1)
{
  __n128 v8 = (__n128)a1[1];
  long long v9 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  uint64_t v3 = *((void *)a1 + 5);
  char v4 = *((unsigned char *)a1 + 48);
  uint64_t v5 = *((void *)a1 + 7);
  uint64_t v6 = *((void *)a1 + 8);
  sub_2498826D0(*(void **)(v1 + 128), *(void *)(v1 + 136), *(void **)(v1 + 144), *(void *)(v1 + 152), *(void *)(v1 + 160));
  swift_bridgeObjectRelease();
  __n128 result = v8;
  *(_OWORD *)(v1 + 128) = v9;
  *(__n128 *)(v1 + 144) = v8;
  *(void *)(v1 + 160) = v2;
  *(void *)(v1 + 168) = v3;
  *(unsigned char *)(v1 + 176) = v4;
  *(void *)(v1 + 184) = v5;
  *(void *)(v1 + 192) = v6;
  return result;
}

uint64_t (*Display.shapeMask.modify())()
{
  return nullsub_1;
}

uint64_t Display.interior.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 200);
  uint64_t v3 = *(void *)(v1 + 208);
  char v4 = *(void **)(v1 + 216);
  uint64_t v5 = *(void *)(v1 + 224);
  uint64_t v6 = *(void *)(v1 + 232);
  uint64_t v7 = *(void *)(v1 + 240);
  char v8 = *(unsigned char *)(v1 + 248);
  uint64_t v9 = *(void *)(v1 + 256);
  uint64_t v10 = *(void *)(v1 + 264);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  sub_249882468(v2, v3, v4, v5, v6);

  return swift_bridgeObjectRetain();
}

__n128 Display.interior.setter(long long *a1)
{
  __n128 v8 = (__n128)a1[1];
  long long v9 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  uint64_t v3 = *((void *)a1 + 5);
  char v4 = *((unsigned char *)a1 + 48);
  uint64_t v5 = *((void *)a1 + 7);
  uint64_t v6 = *((void *)a1 + 8);
  sub_2498826D0(*(void **)(v1 + 200), *(void *)(v1 + 208), *(void **)(v1 + 216), *(void *)(v1 + 224), *(void *)(v1 + 232));
  swift_bridgeObjectRelease();
  *(_OWORD *)(v1 + 200) = v9;
  __n128 result = v8;
  *(__n128 *)(v1 + 216) = v8;
  *(void *)(v1 + 232) = v2;
  *(void *)(v1 + 240) = v3;
  *(unsigned char *)(v1 + 248) = v4;
  *(void *)(v1 + 256) = v5;
  *(void *)(v1 + 264) = v6;
  return result;
}

uint64_t (*Display.interior.modify())()
{
  return nullsub_1;
}

uint64_t Display.wheelOcclusion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 272);
  uint64_t v3 = *(void *)(v1 + 280);
  char v4 = *(void **)(v1 + 288);
  uint64_t v5 = *(void *)(v1 + 296);
  uint64_t v6 = *(void *)(v1 + 304);
  uint64_t v7 = *(void *)(v1 + 312);
  char v8 = *(unsigned char *)(v1 + 320);
  uint64_t v9 = *(void *)(v1 + 328);
  uint64_t v10 = *(void *)(v1 + 336);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  sub_249882468(v2, v3, v4, v5, v6);

  return swift_bridgeObjectRetain();
}

__n128 Display.wheelOcclusion.setter(long long *a1)
{
  __n128 v8 = (__n128)a1[1];
  long long v9 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  uint64_t v3 = *((void *)a1 + 5);
  char v4 = *((unsigned char *)a1 + 48);
  uint64_t v5 = *((void *)a1 + 7);
  uint64_t v6 = *((void *)a1 + 8);
  sub_2498826D0(*(void **)(v1 + 272), *(void *)(v1 + 280), *(void **)(v1 + 288), *(void *)(v1 + 296), *(void *)(v1 + 304));
  swift_bridgeObjectRelease();
  __n128 result = v8;
  *(_OWORD *)(v1 + 272) = v9;
  *(__n128 *)(v1 + 288) = v8;
  *(void *)(v1 + 304) = v2;
  *(void *)(v1 + 312) = v3;
  *(unsigned char *)(v1 + 320) = v4;
  *(void *)(v1 + 328) = v5;
  *(void *)(v1 + 336) = v6;
  return result;
}

uint64_t (*Display.wheelOcclusion.modify())()
{
  return nullsub_1;
}

uint64_t Display.manufacturerLogo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 344);
  uint64_t v3 = *(void *)(v1 + 352);
  char v4 = *(void **)(v1 + 360);
  uint64_t v5 = *(void *)(v1 + 368);
  uint64_t v6 = *(void *)(v1 + 384);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v7 = *(unsigned char *)(v1 + 376);
  *(unsigned char *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v6;
  return sub_24988247C(v2, v3, v4, v5, v7);
}

__n128 Display.manufacturerLogo.setter(__n128 *a1)
{
  __n128 v7 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  unsigned __int8 v4 = a1[2].n128_u8[0];
  unint64_t v5 = a1[2].n128_u64[1];
  sub_2498826E4(*(void **)(v1 + 344), *(void *)(v1 + 352), *(void **)(v1 + 360), *(void *)(v1 + 368), *(unsigned char *)(v1 + 376));
  __n128 result = v7;
  *(__n128 *)(v1 + 344) = v7;
  *(void *)(v1 + 360) = v2;
  *(void *)(v1 + 368) = v3;
  *(unsigned char *)(v1 + 376) = v4;
  *(void *)(v1 + 384) = v5;
  return result;
}

uint64_t (*Display.manufacturerLogo.modify())()
{
  return nullsub_1;
}

uint64_t Display.appleLogo.getter@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void **)(v1 + 392);
  uint64_t v3 = *(void *)(v1 + 400);
  unsigned __int8 v4 = *(void **)(v1 + 408);
  uint64_t v5 = *(void *)(v1 + 416);
  uint64_t v6 = *(void *)(v1 + 432);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v7 = *(unsigned char *)(v1 + 424);
  *(unsigned char *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v6;
  return sub_24988247C(v2, v3, v4, v5, v7);
}

__n128 Display.appleLogo.setter(__n128 *a1)
{
  __n128 v7 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  unsigned __int8 v4 = a1[2].n128_u8[0];
  unint64_t v5 = a1[2].n128_u64[1];
  sub_2498826E4(*(void **)(v1 + 392), *(void *)(v1 + 400), *(void **)(v1 + 408), *(void *)(v1 + 416), *(unsigned char *)(v1 + 424));
  __n128 result = v7;
  *(__n128 *)(v1 + 392) = v7;
  *(void *)(v1 + 408) = v2;
  *(void *)(v1 + 416) = v3;
  *(unsigned char *)(v1 + 424) = v4;
  *(void *)(v1 + 432) = v5;
  return result;
}

uint64_t (*Display.appleLogo.modify())()
{
  return nullsub_1;
}

uint64_t Display.requiresDarkAppearance.getter()
{
  return *(unsigned __int8 *)(v0 + 440);
}

uint64_t Display.requiresDarkAppearance.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 440) = result;
  return result;
}

uint64_t (*Display.requiresDarkAppearance.modify())()
{
  return nullsub_1;
}

uint64_t Display.reversesDynamicContentDPadScrolling.getter()
{
  return *(unsigned __int8 *)(v0 + 441);
}

uint64_t Display.reversesDynamicContentDPadScrolling.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 441) = result;
  return result;
}

uint64_t (*Display.reversesDynamicContentDPadScrolling.modify())()
{
  return nullsub_1;
}

uint64_t Display.localNotifications.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Display.localNotifications.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 448) = a1;
  return result;
}

uint64_t (*Display.localNotifications.modify())()
{
  return nullsub_1;
}

uint64_t Display.shadows.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Display.shadows.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 456) = a1;
  return result;
}

uint64_t (*Display.shadows.modify())()
{
  return nullsub_1;
}

uint64_t Display.manifestEntries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Display.manifestEntries.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 464) = a1;
  return result;
}

uint64_t (*Display.manifestEntries.modify())()
{
  return nullsub_1;
}

unint64_t Display.init(id:type:layouts:size:density:manufacturerLogo:appleLogo:requiresDarkAppearance:reversesDynamicContentDPadScrolling:localNotifications:shadows:)@<X0>(unint64_t *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, uint64_t a13)
{
  unint64_t v20 = *a1;
  unint64_t v19 = a1[1];
  int v21 = *a2;
  uint64_t v34 = a4[1];
  uint64_t v35 = *a4;
  uint64_t v22 = a4[3];
  char v23 = *((unsigned char *)a4 + 32);
  uint64_t v32 = a4[5];
  uint64_t v33 = a4[2];
  uint64_t v30 = a5[1];
  uint64_t v31 = *a5;
  uint64_t v28 = a5[3];
  uint64_t v29 = a5[2];
  char v27 = *((unsigned char *)a5 + 32);
  uint64_t v26 = a5[5];
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_2696E2ED8;
  if (!v19)
  {
    if (v21)
    {
      if (v21 == 1)
      {
        unint64_t v19 = 0xEE0079616C707369;
        unint64_t v20 = 0x445F7265746E6543;
      }
      else
      {
        unint64_t v19 = 0x8000000249B16F10;
        unint64_t v20 = 0xD000000000000011;
      }
    }
    else
    {
      unint64_t v19 = 0xEF79616C70736944;
      unint64_t v20 = 0x5F72657473756C43;
    }
  }
  unint64_t result = sub_2498EDE40(MEMORY[0x263F8EE78]);
  *(void *)a9 = v20;
  *(void *)(a9 + 8) = v19;
  *(unsigned char *)(a9 + 16) = v21;
  *(void *)(a9 + 24) = a3;
  *(double *)(a9 + 32) = a10;
  *(double *)(a9 + 40) = a11;
  *(double *)(a9 + 48) = a12;
  *(_OWORD *)(a9 + 56) = 0u;
  *(_OWORD *)(a9 + 72) = 0u;
  *(_OWORD *)(a9 + 88) = xmmword_249B05040;
  *(unsigned char *)(a9 + 104) = 0;
  *(_OWORD *)(a9 + 112) = xmmword_249B07F70;
  *(_OWORD *)(a9 + 128) = 0u;
  *(_OWORD *)(a9 + 144) = 0u;
  *(_OWORD *)(a9 + 160) = xmmword_249B05040;
  *(unsigned char *)(a9 + 176) = 0;
  *(_OWORD *)(a9 + 184) = xmmword_249B07F80;
  *(_OWORD *)(a9 + 216) = 0u;
  *(_OWORD *)(a9 + 200) = 0u;
  *(_OWORD *)(a9 + 232) = xmmword_249B05040;
  *(unsigned char *)(a9 + 248) = 0;
  *(_OWORD *)(a9 + 256) = xmmword_249B07F90;
  *(_OWORD *)(a9 + 272) = 0u;
  *(_OWORD *)(a9 + 288) = 0u;
  *(_OWORD *)(a9 + 304) = xmmword_249B05040;
  *(unsigned char *)(a9 + 320) = 0;
  strcpy((char *)(a9 + 328), "wheelOcclusion");
  *(unsigned char *)(a9 + 343) = -18;
  *(void *)(a9 + 344) = v35;
  *(void *)(a9 + 352) = v34;
  *(void *)(a9 + 360) = v33;
  *(void *)(a9 + 368) = v22;
  *(unsigned char *)(a9 + 376) = v23;
  *(void *)(a9 + 384) = v32;
  *(void *)(a9 + 392) = v31;
  *(void *)(a9 + 400) = v30;
  *(void *)(a9 + 408) = v29;
  *(void *)(a9 + 416) = v28;
  *(unsigned char *)(a9 + 424) = v27;
  *(void *)(a9 + 432) = v26;
  *(unsigned char *)(a9 + 440) = a6 & 1;
  *(unsigned char *)(a9 + 441) = a7;
  *(void *)(a9 + 448) = a8;
  *(void *)(a9 + 456) = a13;
  *(void *)(a9 + 464) = result;
  *(void *)(a9 + 472) = v24;
  return result;
}

uint64_t Display.addLayout(using:layoutType:layoutStyleID:)(uint64_t a1, char *a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v39 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
  MEMORY[0x270FA5388](v7 - 8);
  long long v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v37 - v11;
  uint64_t v13 = type metadata accessor for LayoutTemplate();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Layout();
  uint64_t v40 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  int v21 = (char *)&v37 - v20;
  char v22 = *a2;
  uint64_t v23 = a3[1];
  uint64_t v38 = *a3;
  sub_249A4A180(v39, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for LayoutTemplate);
  double v24 = *(double *)(v4 + 32);
  double v25 = *(double *)(v4 + 40);
  uint64_t v39 = v4;
  swift_bridgeObjectRetain();
  sub_249AEB7F8();
  if (qword_2696DD3B8 != -1) {
    swift_once();
  }
  uint64_t v26 = qword_2696DFB20;
  sub_2498D6084((uint64_t)v12, (uint64_t)v9, &qword_2696DFCB0);
  char v27 = (uint64_t *)&v15[*(int *)(v13 + 20)];
  uint64_t v28 = *v27;
  uint64_t v29 = v27[1];
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v30 = LayoutTemplate.scaledZones(for:)(v24, v25);
  v46[0] = v22;
  memset(v43, 0, sizeof(v43));
  char v45 = 0;
  __int16 v44 = 512;
  v42[0] = v38;
  v42[1] = v23;
  memset(v41, 0, 57);
  Layout.init(id:displayName:zones:layoutType:systemUILayout:backgroundColor:safeAreaInsets:layoutStyleID:preview:wallpapers:)((uint64_t)v9, v28, v29, v30, v46, (uint64_t *)v43, v26, v42, (uint64_t)v21, 0.0, 0.0, 0.0, 0.0, (uint64_t)v41, MEMORY[0x263F8EE78]);
  sub_249A4A1E8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for LayoutTemplate);
  sub_2498D60E8((uint64_t)v12, &qword_2696DFCB0);
  sub_249A4A180((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for Layout);
  uint64_t v31 = v39;
  unint64_t v32 = *(void *)(v39 + 24);
  uint64_t v33 = (uint64_t)v18;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v32 = sub_2498AB3DC(0, *(void *)(v32 + 16) + 1, 1, v32);
  }
  unint64_t v35 = *(void *)(v32 + 16);
  unint64_t v34 = *(void *)(v32 + 24);
  if (v35 >= v34 >> 1) {
    unint64_t v32 = sub_2498AB3DC(v34 > 1, v35 + 1, 1, v32);
  }
  *(void *)(v32 + 16) = v35 + 1;
  sub_249A4C234(v33, v32+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v35, (uint64_t (*)(void))type metadata accessor for Layout);
  *(void *)(v31 + 24) = v32;
  return sub_249A4A1E8((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for Layout);
}

uint64_t Display.getLayouts(layoutType:)(unsigned __int8 *a1)
{
  uint64_t v25 = type metadata accessor for Layout();
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v23 - v6;
  int v8 = *a1;
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v10 = MEMORY[0x263F8EE78];
  uint64_t v26 = MEMORY[0x263F8EE78];
  uint64_t v11 = *(void *)(v9 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v24 = v11;
  if (!v11)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return v10;
  }
  unint64_t v13 = 0;
  if (v8) {
    uint64_t v14 = 0x79616C7265766FLL;
  }
  else {
    uint64_t v14 = 0x7972616D697270;
  }
  while (v13 < *(void *)(v9 + 16))
  {
    unint64_t v15 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v16 = *(void *)(v23 + 72);
    sub_249A4A180(v9 + v15 + v16 * v13, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Layout);
    if (v7[*(int *)(v25 + 36)]) {
      uint64_t v17 = 0x79616C7265766FLL;
    }
    else {
      uint64_t v17 = 0x7972616D697270;
    }
    if (v17 == v14)
    {
      swift_bridgeObjectRelease_n();
LABEL_14:
      uint64_t v19 = (uint64_t)v4;
      sub_249A4C234((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for Layout);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_249A220F0(0, *(void *)(v10 + 16) + 1, 1);
      }
      uint64_t v10 = v26;
      unint64_t v21 = *(void *)(v26 + 16);
      unint64_t v20 = *(void *)(v26 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_249A220F0(v20 > 1, v21 + 1, 1);
        uint64_t v10 = v26;
      }
      *(void *)(v10 + 16) = v21 + 1;
      uint64_t v22 = v10 + v15 + v21 * v16;
      uint64_t v4 = (char *)v19;
      uint64_t result = sub_249A4C234(v19, v22, (uint64_t (*)(void))type metadata accessor for Layout);
      goto LABEL_6;
    }
    char v18 = sub_249AEE0D8();
    swift_bridgeObjectRelease_n();
    if (v18) {
      goto LABEL_14;
    }
    uint64_t result = sub_249A4A1E8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Layout);
LABEL_6:
    if (v24 == ++v13)
    {
      uint64_t v10 = v26;
      goto LABEL_20;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_249A473C4(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701869940;
      break;
    case 2:
      unint64_t result = 0x7374756F79616CLL;
      break;
    case 3:
      unint64_t result = 1702521203;
      break;
    case 4:
      unint64_t result = 0x797469736E6564;
      break;
    case 5:
      unint64_t result = 0x756F72676B636162;
      break;
    case 6:
      unint64_t result = 0x73614D6570616873;
      break;
    case 7:
      unint64_t result = 0x726F697265746E69;
      break;
    case 8:
      unint64_t result = 0x63634F6C65656877;
      break;
    case 9:
      unint64_t result = 0xD000000000000010;
      break;
    case 10:
      unint64_t result = 0x676F4C656C707061;
      break;
    case 11:
      unint64_t result = 0xD000000000000016;
      break;
    case 12:
      unint64_t result = 0xD000000000000023;
      break;
    case 13:
      unint64_t result = 0xD000000000000012;
      break;
    case 14:
      unint64_t result = 0x73776F64616873;
      break;
    case 15:
      unint64_t result = 0x74736566696E616DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_249A475C0()
{
  return sub_249A473C4(*v0);
}

uint64_t sub_249A475C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A4BB6C(a1, a2);
  *a3 = result;
  return result;
}

void sub_249A475F0(unsigned char *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_249A475FC(uint64_t a1)
{
  unint64_t v2 = sub_249A4A248();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A47638(uint64_t a1)
{
  unint64_t v2 = sub_249A4A248();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Display.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4080);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[1];
  uint64_t v77 = *v1;
  int v76 = *((unsigned __int8 *)v1 + 16);
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = v1[5];
  uint64_t v11 = v1[6];
  uint64_t v74 = v1[7];
  uint64_t v75 = v8;
  uint64_t v12 = v1[8];
  uint64_t v72 = v1[9];
  uint64_t v73 = v12;
  uint64_t v13 = v1[10];
  uint64_t v70 = v1[11];
  uint64_t v71 = v13;
  uint64_t v69 = v1[12];
  int v68 = *((unsigned __int8 *)v1 + 104);
  uint64_t v67 = v1[14];
  uint64_t v66 = v1[15];
  uint64_t v57 = v1[16];
  uint64_t v58 = v1[17];
  uint64_t v59 = v1[18];
  uint64_t v65 = v1[19];
  uint64_t v64 = v1[20];
  uint64_t v63 = v1[21];
  int v62 = *((unsigned __int8 *)v1 + 176);
  uint64_t v61 = v1[23];
  uint64_t v60 = v1[24];
  uint64_t v50 = v1[25];
  uint64_t v51 = v1[26];
  uint64_t v52 = v1[27];
  uint64_t v56 = v1[28];
  uint64_t v55 = v1[29];
  uint64_t v54 = v1[30];
  int v53 = *((unsigned __int8 *)v1 + 248);
  int v26 = *((unsigned __int8 *)v1 + 440);
  uint64_t v48 = v1[32];
  uint64_t v49 = v1[33];
  uint64_t v39 = v1[34];
  uint64_t v40 = v1[35];
  uint64_t v41 = v1[36];
  uint64_t v42 = v1[37];
  uint64_t v43 = v1[38];
  uint64_t v44 = v1[39];
  int v45 = *((unsigned __int8 *)v1 + 320);
  uint64_t v46 = v1[41];
  uint64_t v47 = v1[42];
  uint64_t v33 = v1[43];
  uint64_t v34 = v1[44];
  uint64_t v35 = v1[45];
  uint64_t v36 = v1[46];
  int v37 = *((unsigned __int8 *)v1 + 376);
  uint64_t v38 = v1[48];
  uint64_t v27 = v1[49];
  uint64_t v28 = v1[50];
  uint64_t v29 = v1[51];
  uint64_t v30 = v1[52];
  int v31 = *((unsigned __int8 *)v1 + 424);
  uint64_t v32 = v1[54];
  int v25 = *((unsigned __int8 *)v1 + 441);
  uint64_t v24 = v1[56];
  uint64_t v23 = v1[57];
  uint64_t v14 = v1[59];
  uint64_t v22 = v1[58];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A4A248();
  sub_249AEE468();
  uint64_t v79 = v77;
  uint64_t v80 = v7;
  char v88 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4090);
  sub_249A4A4B0(&qword_2696E4098);
  uint64_t v15 = v78;
  sub_249AEDF08();
  if (!v15)
  {
    uint64_t v17 = v74;
    uint64_t v16 = v75;
    uint64_t v19 = v72;
    uint64_t v18 = v73;
    uint64_t v78 = v14;
    LOBYTE(v79) = v76;
    char v88 = 1;
    sub_249A4A29C();
    sub_249AEDF08();
    uint64_t v79 = v16;
    char v88 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E40A8);
    sub_249A4A56C(&qword_2696E40B0, &qword_2696E40B8);
    sub_249AEDF08();
    uint64_t v79 = v9;
    uint64_t v80 = v10;
    char v88 = 3;
    type metadata accessor for CGSize(0);
    sub_249A4A600(&qword_2696E19F8, type metadata accessor for CGSize);
    sub_249AEDF08();
    uint64_t v79 = v11;
    char v88 = 4;
    sub_24988E51C();
    sub_249AEDF08();
    uint64_t v79 = v17;
    uint64_t v80 = v18;
    uint64_t v81 = v19;
    uint64_t v82 = v71;
    uint64_t v83 = v70;
    uint64_t v84 = v69;
    char v85 = v68;
    uint64_t v86 = v67;
    uint64_t v87 = v66;
    char v88 = 5;
    sub_249A0B318();
    sub_249AEDF08();
    uint64_t v79 = v57;
    uint64_t v80 = v58;
    uint64_t v81 = v59;
    uint64_t v82 = v65;
    uint64_t v83 = v64;
    uint64_t v84 = v63;
    char v85 = v62;
    uint64_t v86 = v61;
    uint64_t v87 = v60;
    char v88 = 6;
    sub_249AEDF08();
    uint64_t v79 = v50;
    uint64_t v80 = v51;
    uint64_t v81 = v52;
    uint64_t v82 = v56;
    uint64_t v83 = v55;
    uint64_t v84 = v54;
    char v85 = v53;
    uint64_t v86 = v48;
    uint64_t v87 = v49;
    char v88 = 7;
    sub_249AEDF08();
    uint64_t v79 = v39;
    uint64_t v80 = v40;
    uint64_t v81 = v41;
    uint64_t v82 = v42;
    uint64_t v83 = v43;
    uint64_t v84 = v44;
    char v85 = v45;
    uint64_t v86 = v46;
    uint64_t v87 = v47;
    char v88 = 8;
    sub_249AEDF08();
    uint64_t v79 = v33;
    uint64_t v80 = v34;
    uint64_t v81 = v35;
    uint64_t v82 = v36;
    LOBYTE(v83) = v37;
    uint64_t v84 = v38;
    char v88 = 9;
    sub_24989D190();
    sub_249AEDF08();
    uint64_t v79 = v27;
    uint64_t v80 = v28;
    uint64_t v81 = v29;
    uint64_t v82 = v30;
    LOBYTE(v83) = v31;
    uint64_t v84 = v32;
    char v88 = 10;
    sub_249AEDF08();
    LOBYTE(v79) = 11;
    sub_249AEDEC8();
    LOBYTE(v79) = 12;
    sub_249AEDE68();
    uint64_t v79 = v24;
    char v88 = 13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E40C0);
    sub_249A4A430(&qword_2696E40C8, &qword_2696E40C0, (void (*)(void))sub_249A4A2F0);
    sub_249AEDEA8();
    uint64_t v79 = v23;
    char v88 = 14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E40D8);
    sub_249A4A430(&qword_2696E40E0, &qword_2696E40D8, (void (*)(void))sub_249A4A344);
    sub_249AEDEA8();
    uint64_t v79 = v22;
    uint64_t v80 = v78;
    char v88 = 15;
    if ((qword_249B08358[byte_2696E03A8] & v78) == 0)
    {
      if (v22)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2696E40F0);
        sub_249A4A398();
        sub_249AEDF08();
      }
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Display.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4100);
  uint64_t v59 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_2696E2ED8;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A4A248();
  sub_249AEE428();
  if (v2)
  {
    uint64_t v84 = 0;
    uint64_t v85 = 0;
    uint64_t v82 = 0;
    uint64_t v83 = 0;
    uint64_t v81 = 0;
    uint64_t v69 = 0;
    uint64_t v70 = 0;
    uint64_t v66 = 0;
    uint64_t v67 = 0;
    uint64_t v64 = 0;
    uint64_t v65 = 0;
    uint64_t v72 = 0;
    uint64_t v73 = 0;
    uint64_t v71 = 0;
    int v68 = 0;
    uint64_t v77 = 0;
    uint64_t v78 = 0;
    uint64_t v75 = 0;
    int v76 = 0;
    uint64_t v74 = 0;
    unint64_t v79 = 0xE90000000000006BLL;
    uint64_t v80 = 254;
    uint64_t v62 = 254;
    unint64_t v63 = 0xE800000000000000;
    uint64_t v61 = 254;
    uint64_t v60 = 254;
    uint64_t v86 = v2;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    int v8 = 0;
    int v9 = 0;
LABEL_6:
    sub_2498826D0(v74, v75, v76, v77, v60);
    swift_bridgeObjectRelease();
    sub_2498826D0(v68, v70, v71, v72, v61);
    swift_bridgeObjectRelease();
    sub_2498826D0(v64, v65, v66, v67, v62);
    swift_bridgeObjectRelease();
    sub_2498826D0(v81, v82, v83, v84, v80);
    swift_bridgeObjectRelease();
    if (v9) {
      sub_2498826E4(v56, v55, v54, v53, v52);
    }
    if (v8) {
      sub_2498826E4(v47, v48, v49, v50, v51);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v46 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4090);
  LOBYTE(v87[0]) = 0;
  sub_249A4A4B0(&qword_2696E4108);
  sub_249AEDE08();
  uint64_t v11 = v88;
  uint64_t v12 = v89;
  LOBYTE(v87[0]) = 1;
  sub_249A4A518();
  sub_249AEDE08();
  int v13 = v88;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E40A8);
  LOBYTE(v87[0]) = 2;
  sub_249A4A56C(&qword_2696E4118, &qword_2696E4120);
  sub_249AEDE08();
  uint64_t v57 = (uint64_t)v88;
  type metadata accessor for CGSize(0);
  LOBYTE(v87[0]) = 3;
  sub_249A4A600(&qword_2696E1A08, type metadata accessor for CGSize);
  sub_249AEDE08();
  uint64_t v14 = (uint64_t)v88;
  uint64_t v15 = v89;
  LOBYTE(v87[0]) = 4;
  sub_24988E570();
  sub_249AEDE08();
  int v45 = v13;
  uint64_t v16 = v88;
  LOBYTE(v87[0]) = 5;
  sub_249A0B2C0();
  sub_249AEDE08();
  uint64_t v74 = v88;
  uint64_t v75 = v89;
  int v76 = v90;
  uint64_t v77 = v91;
  uint64_t v60 = v92;
  uint64_t v78 = v93;
  int v43 = v94;
  uint64_t v42 = v95;
  uint64_t v44 = v96;
  LOBYTE(v87[0]) = 6;
  sub_249AEDE08();
  int v68 = v88;
  uint64_t v70 = v89;
  uint64_t v71 = v90;
  uint64_t v61 = v92;
  uint64_t v72 = v91;
  uint64_t v73 = v93;
  int v41 = v94;
  uint64_t v40 = v95;
  unint64_t v79 = v96;
  LOBYTE(v87[0]) = 7;
  sub_249AEDE08();
  uint64_t v64 = v88;
  uint64_t v65 = v89;
  uint64_t v66 = v90;
  uint64_t v67 = v91;
  uint64_t v69 = v93;
  int v39 = v94;
  uint64_t v38 = v95;
  uint64_t v62 = v92;
  unint64_t v63 = v96;
  LOBYTE(v87[0]) = 8;
  sub_249AEDE08();
  uint64_t v81 = v88;
  uint64_t v82 = v89;
  uint64_t v83 = v90;
  uint64_t v84 = v91;
  uint64_t v80 = v92;
  uint64_t v85 = v93;
  int v34 = v94;
  uint64_t v35 = v95;
  uint64_t v36 = v12;
  uint64_t v37 = v96;
  LOBYTE(v87[0]) = 9;
  sub_24989D2E8();
  sub_249AEDE08();
  uint64_t v55 = v89;
  uint64_t v56 = v88;
  uint64_t v53 = v91;
  uint64_t v54 = v90;
  int v52 = v92;
  uint64_t v33 = v93;
  LOBYTE(v87[0]) = 10;
  sub_249AEDE08();
  int v8 = 1;
  uint64_t v86 = 0;
  uint64_t v47 = v88;
  uint64_t v48 = v89;
  uint64_t v49 = v90;
  uint64_t v50 = v91;
  int v51 = v92;
  uint64_t v32 = v93;
  LOBYTE(v88) = 11;
  LODWORD(v31) = sub_249AEDDC8();
  uint64_t v86 = 0;
  LOBYTE(v88) = 12;
  int v30 = sub_249AEDD68();
  uint64_t v86 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E40C0);
  LOBYTE(v87[0]) = 13;
  sub_249A4A648();
  uint64_t v17 = v86;
  sub_249AEDDA8();
  uint64_t v86 = v17;
  if (v17) {
    goto LABEL_12;
  }
  uint64_t v18 = v88;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E40D8);
  LOBYTE(v87[0]) = 14;
  sub_249A4A718();
  uint64_t v19 = v86;
  sub_249AEDDA8();
  uint64_t v86 = v19;
  if (v19
    || (unint64_t v20 = v88,
        char v157 = 15,
        __swift_instantiateConcreteTypeFromMangledName(&qword_2696E40F0),
        sub_249A4A7E8(),
        uint64_t v21 = v86,
        sub_249AEDDA8(),
        (uint64_t v86 = v21) != 0))
  {
LABEL_12:
    (*(void (**)(char *, uint64_t))(v59 + 8))(v6, v4);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    int v9 = 1;
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  int v29 = v31 & 1;
  uint64_t v22 = v88;
  if (v88 == (void *)1) {
    uint64_t v22 = 0;
  }
  int v31 = v22;
  (*(void (**)(char *, uint64_t))(v59 + 8))(v6, v4);
  swift_bridgeObjectRelease();
  uint64_t v28 = v11;
  v87[0] = v11;
  v87[1] = v36;
  LOBYTE(v87[2]) = v45;
  v87[3] = v57;
  v87[4] = v14;
  v87[5] = v15;
  v87[6] = v16;
  v87[7] = v74;
  v87[8] = v75;
  v87[9] = v76;
  v87[10] = v77;
  v87[11] = v60;
  v87[12] = v78;
  LOBYTE(v87[13]) = v43;
  v87[14] = v42;
  v87[15] = v44;
  v87[16] = v68;
  v87[17] = v70;
  v87[18] = v71;
  v87[19] = v72;
  uint64_t v23 = v62;
  v87[20] = v61;
  v87[21] = v73;
  LOBYTE(v87[22]) = v41;
  v87[23] = v40;
  v87[24] = v79;
  unint64_t v24 = v63;
  v87[25] = v64;
  v87[26] = v65;
  v87[27] = v66;
  v87[28] = v67;
  v87[29] = v62;
  uint64_t v25 = v69;
  v87[30] = v69;
  char v26 = v39;
  LOBYTE(v87[31]) = v39;
  uint64_t v27 = v38;
  v87[32] = v38;
  v87[33] = v63;
  v87[34] = v81;
  v87[35] = v82;
  v87[36] = v83;
  v87[37] = v84;
  v87[38] = v80;
  v87[39] = v85;
  LOBYTE(v87[40]) = v34;
  v87[41] = v35;
  v87[42] = v37;
  v87[43] = v56;
  v87[44] = v55;
  v87[45] = v54;
  v87[46] = v53;
  LOBYTE(v87[47]) = v52;
  v87[48] = v33;
  v87[49] = v47;
  v87[50] = v48;
  v87[51] = v49;
  v87[52] = v50;
  LOBYTE(v87[53]) = v51;
  v87[54] = v32;
  LOBYTE(v87[55]) = v29;
  BYTE1(v87[55]) = v30;
  v87[56] = v18;
  v87[57] = v20;
  v87[58] = v31;
  v87[59] = v46;
  memcpy(v58, v87, 0x1E0uLL);
  sub_249882274((uint64_t)v87);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  char v88 = v28;
  uint64_t v89 = v36;
  LOBYTE(v90) = v45;
  uint64_t v91 = v57;
  uint64_t v95 = v74;
  uint64_t v96 = v75;
  CGFloat v97 = v76;
  uint64_t v98 = v77;
  uint64_t v99 = v60;
  uint64_t v100 = v78;
  char v101 = v43;
  uint64_t v103 = v42;
  uint64_t v104 = v44;
  uint64_t v105 = v68;
  uint64_t v106 = v70;
  uint64_t v107 = v71;
  uint64_t v108 = v72;
  uint64_t v109 = v61;
  uint64_t v110 = v73;
  char v111 = v41;
  uint64_t v113 = v40;
  unint64_t v114 = v79;
  BOOL v115 = v64;
  uint64_t v116 = v65;
  uint64_t v117 = v66;
  uint64_t v118 = v67;
  uint64_t v119 = v23;
  uint64_t v120 = v25;
  char v121 = v26;
  CGFloat v123 = v27;
  unint64_t v124 = v24;
  *(_DWORD *)((char *)&v90 + 1) = v166[0];
  HIDWORD(v90) = *(_DWORD *)((char *)v166 + 3);
  uint64_t v92 = v14;
  uint64_t v93 = v15;
  CGFloat v94 = v16;
  *(_DWORD *)&v102[3] = *(_DWORD *)&v165[3];
  *(_DWORD *)int64_t v102 = *(_DWORD *)v165;
  *(_DWORD *)uint64_t v112 = *(_DWORD *)v164;
  *(_DWORD *)&v112[3] = *(_DWORD *)&v164[3];
  *(_DWORD *)&v122[3] = *(_DWORD *)&v163[3];
  *(_DWORD *)CGFloat v122 = *(_DWORD *)v163;
  double v125 = v81;
  uint64_t v126 = v82;
  uint64_t v127 = v83;
  uint64_t v128 = v84;
  uint64_t v129 = v80;
  uint64_t v130 = v85;
  char v131 = v34;
  *(_DWORD *)unint64_t v132 = *(_DWORD *)v162;
  *(_DWORD *)&v132[3] = *(_DWORD *)&v162[3];
  uint64_t v133 = v35;
  uint64_t v134 = v37;
  uint64_t v135 = v56;
  uint64_t v136 = v55;
  unint64_t v137 = v54;
  uint64_t v138 = v53;
  char v139 = v52;
  *(_DWORD *)uint64_t v140 = *(_DWORD *)v161;
  *(_DWORD *)&v140[3] = *(_DWORD *)&v161[3];
  uint64_t v141 = v33;
  uint64_t v142 = v47;
  uint64_t v143 = v48;
  unint64_t v144 = v49;
  uint64_t v145 = v50;
  char v146 = v51;
  *(_DWORD *)uint64_t v147 = *(_DWORD *)v160;
  *(_DWORD *)&v147[3] = *(_DWORD *)&v160[3];
  uint64_t v148 = v32;
  char v149 = v29;
  char v150 = v30;
  int v151 = v158;
  __int16 v152 = v159;
  unint64_t v153 = v18;
  int64_t v154 = v20;
  uint64_t v155 = v31;
  uint64_t v156 = v46;
  return sub_2498824DC((uint64_t)&v88);
}

uint64_t sub_249A491A0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Display.init(from:)(a1, a2);
}

uint64_t sub_249A491B8(void *a1)
{
  return Display.encode(to:)(a1);
}

void sub_249A491D0(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 32);
  sub_24988247C(*(void **)a1, v2, v3, v4, v5);
  swift_getAtKeyPath();
  sub_2498826E4(v1, v2, v3, v4, v5);
}

void sub_249A4927C(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  int v8 = *(void **)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  char v10 = *(unsigned char *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  char v12 = *(unsigned char *)(a1 + 48);
  sub_24988247C(*(void **)a1, v7, v8, v9, v10);
  ImageAsset.restore(from:)(a2);
  if (v3)
  {
    sub_2498826E4(v6, v7, v8, v9, v10);
  }
  else
  {
    *(void *)a3 = v6;
    *(void *)(a3 + 8) = v7;
    *(void *)(a3 + 16) = v8;
    *(void *)(a3 + 24) = v9;
    *(unsigned char *)(a3 + 32) = v10;
    *(void *)(a3 + 40) = v11;
    *(unsigned char *)(a3 + 48) = v12;
  }
}

void *sub_249A49330@<X0>(void *__src@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  memcpy(__dst, __src, 0x1F9uLL);
  memcpy(__srca, __src, sizeof(__srca));
  sub_2499FC734((uint64_t)__dst);
  ImageAsset.restore(from:)(a2);
  if (v3)
  {
    memcpy(v8, __srca, 0x1F9uLL);
    return (void *)sub_2499FC918((uint64_t)v8);
  }
  else
  {
    ImageAsset.restore(from:)(a2);
    ImageAsset.restore(from:)(a2);
    ImageAsset.restore(from:)(a2);
    if ((~LOBYTE(__dst[56]) & 0xFE) != 0) {
      ImageAsset.restore(from:)(a2);
    }
    ImageAsset.restore(from:)(a2);
    ImageAsset.restore(from:)(a2);
    ImageAsset.restore(from:)(a2);
    ImageAsset.restore(from:)(a2);
    return memcpy(a3, __srca, 0x1F9uLL);
  }
}

void sub_249A494CC(void *a1)
{
}

void sub_249A494E4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_249A4927C(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_249A49500(void (*a1)(void *__return_ptr, unsigned char *), uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4198);
  uint64_t result = sub_249AEDC88();
  uint64_t v6 = (void *)result;
  int64_t v7 = 0;
  uint64_t v32 = a3;
  uint64_t v10 = *(void *)(a3 + 64);
  uint64_t v9 = a3 + 64;
  uint64_t v8 = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v9 - 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v8;
  int64_t v26 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v27 = result + 64;
  if ((v12 & v8) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v14 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v7 << 6))
  {
    uint64_t v19 = (uint64_t *)(*(void *)(v32 + 48) + 16 * i);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    uint64_t v22 = (const void *)(*(void *)(v32 + 56) + (i << 9));
    memcpy(__dst, v22, 0x1F9uLL);
    memcpy(v30, v22, 0x1F9uLL);
    swift_bridgeObjectRetain();
    sub_2499FC734((uint64_t)__dst);
    a1(__src, v30);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_2499FC918((uint64_t)__dst);
      return (uint64_t)v6;
    }
    sub_2499FC918((uint64_t)__dst);
    *(void *)(v27 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v23 = (void *)(v6[6] + 16 * i);
    *uint64_t v23 = v21;
    v23[1] = v20;
    uint64_t result = (uint64_t)memcpy((void *)(v6[7] + (i << 9)), __src, 0x1F9uLL);
    uint64_t v24 = v6[2];
    BOOL v16 = __OFADD__(v24, 1);
    uint64_t v25 = v24 + 1;
    if (v16)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    uint64_t v6[2] = v25;
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v16 = __OFADD__(v7++, 1);
    if (v16) {
      goto LABEL_27;
    }
    if (v7 >= v26) {
      return (uint64_t)v6;
    }
    unint64_t v17 = *(void *)(v9 + 8 * v7);
    if (!v17) {
      break;
    }
LABEL_15:
    unint64_t v13 = (v17 - 1) & v17;
  }
  int64_t v18 = v7 + 1;
  if (v7 + 1 >= v26) {
    return (uint64_t)v6;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v18);
  if (v17) {
    goto LABEL_14;
  }
  int64_t v18 = v7 + 2;
  if (v7 + 2 >= v26) {
    return (uint64_t)v6;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v18);
  if (v17) {
    goto LABEL_14;
  }
  int64_t v18 = v7 + 3;
  if (v7 + 3 >= v26) {
    return (uint64_t)v6;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v18);
  if (v17)
  {
LABEL_14:
    int64_t v7 = v18;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v7 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v7 >= v26) {
      return (uint64_t)v6;
    }
    unint64_t v17 = *(void *)(v9 + 8 * v7);
    ++v18;
    if (v17) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_249A49770(void (*a1)(_OWORD *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF528);
  uint64_t v4 = sub_249AEDC88();
  int64_t v5 = 0;
  uint64_t v38 = a3;
  int v39 = (void *)v4;
  uint64_t v8 = *(void *)(a3 + 64);
  uint64_t v7 = a3 + 64;
  uint64_t v6 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v7 - 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v6;
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v36 = v4 + 64;
  if (!v11) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v40 = (v11 - 1) & v11;
  int64_t v41 = v5;
  for (unint64_t i = __clz(__rbit64(v11)) | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v14 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(v38 + 48) + 16 * i);
    uint64_t v18 = v17[1];
    uint64_t v42 = *v17;
    uint64_t v19 = *(void *)(v38 + 56) + 56 * i;
    uint64_t v20 = *(void **)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    uint64_t v22 = *(void **)(v19 + 16);
    uint64_t v23 = *(void *)(v19 + 24);
    char v24 = *(unsigned char *)(v19 + 32);
    uint64_t v25 = *(void *)(v19 + 40);
    LOBYTE(v19) = *(unsigned char *)(v19 + 48);
    v47[0] = v20;
    v47[1] = v21;
    v47[2] = v22;
    v47[3] = v23;
    char v48 = v24;
    uint64_t v49 = v25;
    char v50 = v19;
    swift_bridgeObjectRetain();
    sub_24988247C(v20, v21, v22, v23, v24);
    uint64_t v26 = v51;
    a1(v43, v47);
    uint64_t v51 = v26;
    if (v26)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_2498826E4(v20, v21, v22, v23, v24);
      return;
    }
    sub_2498826E4(v20, v21, v22, v23, v24);
    *(void *)(v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v27 = (void *)(v39[6] + 16 * i);
    *uint64_t v27 = v42;
    v27[1] = v18;
    uint64_t v28 = v39[7] + 56 * i;
    char v29 = v44;
    uint64_t v30 = v45;
    char v31 = v46;
    long long v32 = v43[1];
    *(_OWORD *)uint64_t v28 = v43[0];
    *(_OWORD *)(v28 + 16) = v32;
    *(unsigned char *)(v28 + 32) = v29;
    *(void *)(v28 + 40) = v30;
    *(unsigned char *)(v28 + 48) = v31;
    uint64_t v33 = v39[2];
    BOOL v13 = __OFADD__(v33, 1);
    uint64_t v34 = v33 + 1;
    if (v13)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v39[2] = v34;
    unint64_t v11 = v40;
    int64_t v5 = v41;
    if (v40) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v13 = __OFADD__(v5, 1);
    int64_t v14 = v5 + 1;
    if (v13) {
      goto LABEL_27;
    }
    if (v14 >= v35) {
      return;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    if (!v15) {
      break;
    }
LABEL_15:
    uint64_t v40 = (v15 - 1) & v15;
    int64_t v41 = v14;
  }
  int64_t v16 = v14 + 1;
  if (v14 + 1 >= v35) {
    return;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15) {
    goto LABEL_14;
  }
  int64_t v16 = v14 + 2;
  if (v14 + 2 >= v35) {
    return;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15) {
    goto LABEL_14;
  }
  int64_t v16 = v14 + 3;
  if (v14 + 3 >= v35) {
    return;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
LABEL_14:
    int64_t v14 = v16;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v14 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v14 >= v35) {
      return;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v16;
    if (v15) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
}

void *sub_249A49A4C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_249A49330(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_249A49A68()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_249A49AB0()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_249A49AF0()
{
  sub_2498826E4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return MEMORY[0x270FA0238](v0, 64, 7);
}

void sub_249A49B30(void (*a1)(_OWORD *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4D8);
  uint64_t v4 = sub_249AEDC88();
  int64_t v5 = 0;
  uint64_t v36 = a3;
  uint64_t v37 = (void *)v4;
  uint64_t v8 = *(void *)(a3 + 64);
  uint64_t v7 = a3 + 64;
  uint64_t v6 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v7 - 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v6;
  uint64_t v32 = v7;
  int64_t v33 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v34 = v4 + 64;
  if (!v11) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v38 = (v11 - 1) & v11;
  int64_t v39 = v5;
  for (unint64_t i = __clz(__rbit64(v11)) | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v14 << 6))
  {
    uint64_t v17 = *(void *)(*(void *)(v36 + 48) + 8 * i);
    uint64_t v18 = *(void *)(v36 + 56) + 48 * i;
    uint64_t v19 = *(void **)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v22 = *(void **)(v18 + 16);
    uint64_t v21 = *(void *)(v18 + 24);
    char v23 = *(unsigned char *)(v18 + 32);
    uint64_t v24 = *(void *)(v18 + 40);
    v43[0] = v19;
    v43[1] = v20;
    _OWORD v43[2] = v22;
    v43[3] = v21;
    char v44 = v23;
    uint64_t v45 = v24;
    sub_24988247C(v19, v20, v22, v21, v23);
    uint64_t v25 = v46;
    a1(v40, v43);
    uint64_t v46 = v25;
    if (v25)
    {
      swift_release();
      sub_2498826E4(v19, v20, v22, v21, v23);
      return;
    }
    sub_2498826E4(v19, v20, v22, v21, v23);
    *(void *)(v34 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v37[6] + 8 * i) = v17;
    uint64_t v26 = v37[7] + 48 * i;
    char v27 = v41;
    uint64_t v28 = v42;
    long long v29 = v40[1];
    *(_OWORD *)uint64_t v26 = v40[0];
    *(_OWORD *)(v26 + 16) = v29;
    *(unsigned char *)(v26 + 32) = v27;
    *(void *)(v26 + 40) = v28;
    uint64_t v30 = v37[2];
    BOOL v13 = __OFADD__(v30, 1);
    uint64_t v31 = v30 + 1;
    if (v13)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v37[2] = v31;
    unint64_t v11 = v38;
    int64_t v5 = v39;
    if (v38) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v13 = __OFADD__(v5, 1);
    int64_t v14 = v5 + 1;
    if (v13) {
      goto LABEL_27;
    }
    if (v14 >= v33) {
      return;
    }
    unint64_t v15 = *(void *)(v32 + 8 * v14);
    if (!v15) {
      break;
    }
LABEL_15:
    uint64_t v38 = (v15 - 1) & v15;
    int64_t v39 = v14;
  }
  int64_t v16 = v14 + 1;
  if (v14 + 1 >= v33) {
    return;
  }
  unint64_t v15 = *(void *)(v32 + 8 * v16);
  if (v15) {
    goto LABEL_14;
  }
  int64_t v16 = v14 + 2;
  if (v14 + 2 >= v33) {
    return;
  }
  unint64_t v15 = *(void *)(v32 + 8 * v16);
  if (v15) {
    goto LABEL_14;
  }
  int64_t v16 = v14 + 3;
  if (v14 + 3 >= v33) {
    return;
  }
  unint64_t v15 = *(void *)(v32 + 8 * v16);
  if (v15)
  {
LABEL_14:
    int64_t v14 = v16;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v14 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v14 >= v33) {
      return;
    }
    unint64_t v15 = *(void *)(v32 + 8 * v14);
    ++v16;
    if (v15) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_249A49DE4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_249A49E6C(uint64_t a1, void (*a2)(long long *__return_ptr, long long *))
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v4 = a1;
  uint64_t v54 = MEMORY[0x263F8EE78];
  sub_249A21F30(0, v2, 0);
  uint64_t v3 = v54;
  uint64_t result = sub_249A49DE4(v4);
  unint64_t v7 = result;
  uint64_t v8 = 0;
  uint64_t v9 = v4 + 64;
  uint64_t v34 = v4 + 88;
  int64_t v35 = v2;
  int v36 = v6;
  uint64_t v37 = v4 + 64;
  uint64_t v38 = v4;
  while ((v7 & 0x8000000000000000) == 0 && (uint64_t)v7 < 1 << *(unsigned char *)(v4 + 32))
  {
    if ((*(void *)(v9 + 8 * (v7 >> 6)) & (1 << v7)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(v4 + 36) != v6) {
      goto LABEL_26;
    }
    uint64_t v40 = v8;
    unint64_t v41 = v7 >> 6;
    uint64_t v12 = *(void *)(v4 + 56) + 56 * v7;
    int64_t v14 = *(void **)v12;
    uint64_t v13 = *(void *)(v12 + 8);
    unint64_t v15 = *(void **)(v12 + 16);
    uint64_t v16 = *(void *)(v12 + 24);
    uint64_t v17 = *(void *)(v12 + 40);
    char v18 = *(unsigned char *)(v12 + 48);
    char v19 = *(unsigned char *)(v12 + 32);
    *(void *)&long long v43 = v14;
    *((void *)&v43 + 1) = v13;
    char v44 = v15;
    uint64_t v45 = (ValueMetadata *)v16;
    LOBYTE(v46) = v19;
    uint64_t v47 = v17;
    char v48 = v18;
    sub_24988247C(v14, v13, v15, v16, v19);
    a2(&v49, &v43);
    sub_2498826E4(v14, v13, v15, v16, v19);
    uint64_t v54 = v3;
    unint64_t v21 = *(void *)(v3 + 16);
    unint64_t v20 = *(void *)(v3 + 24);
    if (v21 >= v20 >> 1)
    {
      sub_249A21F30(v20 > 1, v21 + 1, 1);
      uint64_t v3 = v54;
    }
    long long v42 = v49;
    uint64_t v22 = v3;
    uint64_t v23 = v50;
    uint64_t v24 = v51;
    char v25 = v52;
    uint64_t v26 = v53;
    uint64_t v45 = &type metadata for ImageAsset;
    uint64_t v46 = &protocol witness table for ImageAsset;
    uint64_t v27 = swift_allocObject();
    *(void *)&long long v43 = v27;
    *(_OWORD *)(v27 + 16) = v42;
    *(void *)(v27 + 32) = v23;
    *(void *)(v27 + 40) = v24;
    uint64_t v3 = v22;
    *(unsigned char *)(v27 + 48) = v25;
    *(void *)(v27 + 56) = v26;
    *(void *)(v22 + 16) = v21 + 1;
    uint64_t result = sub_249882BCC(&v43, v22 + 40 * v21 + 32);
    uint64_t v4 = v38;
    int64_t v10 = 1 << *(unsigned char *)(v38 + 32);
    if ((uint64_t)v7 >= v10) {
      goto LABEL_27;
    }
    uint64_t v9 = v37;
    unint64_t v28 = v7 >> 6;
    uint64_t v29 = *(void *)(v37 + 8 * v41);
    if ((v29 & (1 << v7)) == 0) {
      goto LABEL_28;
    }
    int v6 = v36;
    if (*(_DWORD *)(v38 + 36) != v36) {
      goto LABEL_29;
    }
    unint64_t v30 = v29 & (-2 << (v7 & 0x3F));
    if (v30)
    {
      int64_t v10 = __clz(__rbit64(v30)) | v7 & 0xFFFFFFFFFFFFFFC0;
      int64_t v11 = v35;
    }
    else
    {
      unint64_t v31 = v41 + 1;
      unint64_t v32 = (unint64_t)(v10 + 63) >> 6;
      int64_t v11 = v35;
      if (v41 + 1 < v32)
      {
        unint64_t v33 = *(void *)(v37 + 8 * v31);
        if (!v33)
        {
          unint64_t v31 = v41 + 2;
          if (v41 + 2 >= v32) {
            goto LABEL_4;
          }
          unint64_t v33 = *(void *)(v37 + 8 * v31);
          if (!v33)
          {
            while (v32 - 3 != v28)
            {
              unint64_t v33 = *(void *)(v34 + 8 * v28++);
              if (v33)
              {
                unint64_t v31 = v28 + 2;
                goto LABEL_17;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_17:
        int64_t v10 = __clz(__rbit64(v33)) + (v31 << 6);
      }
    }
LABEL_4:
    uint64_t v8 = v40 + 1;
    unint64_t v7 = v10;
    if (v40 + 1 == v11) {
      return v3;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void sub_249A4A178(uint64_t a1)
{
}

uint64_t sub_249A4A180(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_249A4A1E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_249A4A248()
{
  unint64_t result = qword_2696E4088;
  if (!qword_2696E4088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4088);
  }
  return result;
}

unint64_t sub_249A4A29C()
{
  unint64_t result = qword_2696E40A0;
  if (!qword_2696E40A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E40A0);
  }
  return result;
}

unint64_t sub_249A4A2F0()
{
  unint64_t result = qword_2696E40D0;
  if (!qword_2696E40D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E40D0);
  }
  return result;
}

unint64_t sub_249A4A344()
{
  unint64_t result = qword_2696E40E8;
  if (!qword_2696E40E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E40E8);
  }
  return result;
}

unint64_t sub_249A4A398()
{
  unint64_t result = qword_2696E40F8;
  if (!qword_2696E40F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E40F0);
    sub_249A4A430((unint64_t *)&qword_2696E21C0, &qword_2696E21B8, (void (*)(void))sub_2499B7940);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E40F8);
  }
  return result;
}

uint64_t sub_249A4A430(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249A4A4B0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E4090);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249A4A518()
{
  unint64_t result = qword_2696E4110;
  if (!qword_2696E4110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4110);
  }
  return result;
}

uint64_t sub_249A4A56C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E40A8);
    sub_249A4A600(a2, (void (*)(uint64_t))type metadata accessor for Layout);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249A4A600(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249A4A648()
{
  unint64_t result = qword_2696E4128;
  if (!qword_2696E4128)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E40C0);
    sub_249A4A6C4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4128);
  }
  return result;
}

unint64_t sub_249A4A6C4()
{
  unint64_t result = qword_2696E4130;
  if (!qword_2696E4130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4130);
  }
  return result;
}

unint64_t sub_249A4A718()
{
  unint64_t result = qword_2696E4138;
  if (!qword_2696E4138)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E40D8);
    sub_249A4A794();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4138);
  }
  return result;
}

unint64_t sub_249A4A794()
{
  unint64_t result = qword_2696E4140;
  if (!qword_2696E4140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4140);
  }
  return result;
}

unint64_t sub_249A4A7E8()
{
  unint64_t result = qword_2696E4148;
  if (!qword_2696E4148)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E40F0);
    sub_2499F0584();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4148);
  }
  return result;
}

unint64_t sub_249A4A860()
{
  unint64_t result = qword_2696E4150;
  if (!qword_2696E4150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4150);
  }
  return result;
}

unint64_t sub_249A4A8B8()
{
  unint64_t result = qword_2696E4158;
  if (!qword_2696E4158)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E4160);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4158);
  }
  return result;
}

unint64_t sub_249A4A918()
{
  unint64_t result = qword_2696E4168;
  if (!qword_2696E4168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4168);
  }
  return result;
}

unint64_t sub_249A4A970()
{
  unint64_t result = qword_2696E4170;
  if (!qword_2696E4170)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E4090);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4170);
  }
  return result;
}

__n128 sub_249A4A9DC@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[2];
  *a2 = result;
  return result;
}

uint64_t sub_249A4A9EC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 464);
  return swift_bridgeObjectRetain();
}

uint64_t sub_249A4A9F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 464) = v3;
  return result;
}

uint64_t destroy for Display(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((~*(_DWORD *)(a1 + 88) & 0xFELL) != 0) {
    sub_2498826E4(*(void **)(a1 + 56), *(void *)(a1 + 64), *(void **)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88));
  }
  swift_bridgeObjectRelease();
  if ((~*(_DWORD *)(a1 + 160) & 0xFELL) != 0) {
    sub_2498826E4(*(void **)(a1 + 128), *(void *)(a1 + 136), *(void **)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160));
  }
  swift_bridgeObjectRelease();
  if ((~*(_DWORD *)(a1 + 232) & 0xFELL) != 0) {
    sub_2498826E4(*(void **)(a1 + 200), *(void *)(a1 + 208), *(void **)(a1 + 216), *(void *)(a1 + 224), *(void *)(a1 + 232));
  }
  swift_bridgeObjectRelease();
  if ((~*(_DWORD *)(a1 + 304) & 0xFELL) != 0) {
    sub_2498826E4(*(void **)(a1 + 272), *(void *)(a1 + 280), *(void **)(a1 + 288), *(void *)(a1 + 296), *(void *)(a1 + 304));
  }
  swift_bridgeObjectRelease();
  sub_2498826E4(*(void **)(a1 + 344), *(void *)(a1 + 352), *(void **)(a1 + 360), *(void *)(a1 + 368), *(unsigned char *)(a1 + 376));
  sub_2498826E4(*(void **)(a1 + 392), *(void *)(a1 + 400), *(void **)(a1 + 408), *(void *)(a1 + 416), *(unsigned char *)(a1 + 424));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Display(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 88);
  uint64_t v6 = ~*(_DWORD *)(a2 + 88) & 0xFELL;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v8 = *(void **)(a2 + 56);
    uint64_t v9 = *(void *)(a2 + 64);
    int64_t v10 = *(void **)(a2 + 72);
    uint64_t v11 = *(void *)(a2 + 80);
    sub_24988247C(v8, v9, v10, v11, v5);
    *(void *)(a1 + 56) = v8;
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = v10;
    *(void *)(a1 + 80) = v11;
    *(unsigned char *)(a1 + 88) = v5;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v7;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  }
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v12 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v12;
  uint64_t v13 = *(void *)(a2 + 160);
  uint64_t v14 = ~*(_DWORD *)(a2 + 160) & 0xFELL;
  swift_bridgeObjectRetain();
  if (v14)
  {
    uint64_t v16 = *(void **)(a2 + 128);
    uint64_t v17 = *(void *)(a2 + 136);
    char v18 = *(void **)(a2 + 144);
    uint64_t v19 = *(void *)(a2 + 152);
    sub_24988247C(v16, v17, v18, v19, v13);
    *(void *)(a1 + 128) = v16;
    *(void *)(a1 + 136) = v17;
    *(void *)(a1 + 144) = v18;
    *(void *)(a1 + 152) = v19;
    *(unsigned char *)(a1 + 160) = v13;
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
  }
  else
  {
    long long v15 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v15;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  }
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  uint64_t v20 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v20;
  uint64_t v21 = *(void *)(a2 + 232);
  uint64_t v22 = ~*(_DWORD *)(a2 + 232) & 0xFELL;
  swift_bridgeObjectRetain();
  if (v22)
  {
    uint64_t v24 = *(void **)(a2 + 200);
    uint64_t v25 = *(void *)(a2 + 208);
    uint64_t v26 = *(void **)(a2 + 216);
    uint64_t v27 = *(void *)(a2 + 224);
    sub_24988247C(v24, v25, v26, v27, v21);
    *(void *)(a1 + 200) = v24;
    *(void *)(a1 + 208) = v25;
    *(void *)(a1 + 216) = v26;
    *(void *)(a1 + 224) = v27;
    *(unsigned char *)(a1 + 232) = v21;
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
  }
  else
  {
    long long v23 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v23;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  }
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  uint64_t v28 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v28;
  uint64_t v29 = *(void *)(a2 + 304);
  uint64_t v30 = ~*(_DWORD *)(a2 + 304) & 0xFELL;
  swift_bridgeObjectRetain();
  if (v30)
  {
    unint64_t v32 = *(void **)(a2 + 272);
    uint64_t v33 = *(void *)(a2 + 280);
    uint64_t v34 = *(void **)(a2 + 288);
    uint64_t v35 = *(void *)(a2 + 296);
    sub_24988247C(v32, v33, v34, v35, v29);
    *(void *)(a1 + 272) = v32;
    *(void *)(a1 + 280) = v33;
    *(void *)(a1 + 288) = v34;
    *(void *)(a1 + 296) = v35;
    *(unsigned char *)(a1 + 304) = v29;
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
  }
  else
  {
    long long v31 = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 288) = v31;
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  }
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  uint64_t v36 = *(void *)(a2 + 336);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = v36;
  uint64_t v37 = *(void **)(a2 + 344);
  uint64_t v38 = *(void *)(a2 + 352);
  int64_t v39 = *(void **)(a2 + 360);
  uint64_t v40 = *(void *)(a2 + 368);
  char v41 = *(unsigned char *)(a2 + 376);
  swift_bridgeObjectRetain();
  sub_24988247C(v37, v38, v39, v40, v41);
  *(void *)(a1 + 344) = v37;
  *(void *)(a1 + 352) = v38;
  *(void *)(a1 + 360) = v39;
  *(void *)(a1 + 368) = v40;
  *(unsigned char *)(a1 + 376) = v41;
  long long v42 = *(void **)(a2 + 392);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  uint64_t v43 = *(void *)(a2 + 400);
  char v44 = *(void **)(a2 + 408);
  uint64_t v45 = *(void *)(a2 + 416);
  char v46 = *(unsigned char *)(a2 + 424);
  sub_24988247C(v42, v43, v44, v45, v46);
  *(void *)(a1 + 392) = v42;
  *(void *)(a1 + 400) = v43;
  *(void *)(a1 + 408) = v44;
  *(void *)(a1 + 416) = v45;
  *(unsigned char *)(a1 + 424) = v46;
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(_WORD *)(a1 + 440) = *(_WORD *)(a2 + 440);
  uint64_t v47 = *(void *)(a2 + 456);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = v47;
  uint64_t v48 = *(void *)(a2 + 472);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Display(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v4 = (_OWORD *)(a1 + 56);
  uint64_t v5 = (_OWORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 88);
  uint64_t v7 = v6 & 0xFE;
  if ((~*(_DWORD *)(a1 + 88) & 0xFELL) != 0)
  {
    if (v7 == 254)
    {
      sub_2499C5438(a1 + 56);
      long long v11 = *(_OWORD *)(a2 + 72);
      long long v10 = *(_OWORD *)(a2 + 88);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 72) = v11;
      *(_OWORD *)(a1 + 88) = v10;
      goto LABEL_9;
    }
    uint64_t v16 = *(void **)(a2 + 56);
    uint64_t v17 = *(void *)(a2 + 64);
    char v18 = *(void **)(a2 + 72);
    uint64_t v19 = *(void *)(a2 + 80);
    sub_24988247C(v16, v17, v18, v19, *(void *)(a2 + 88));
    uint64_t v20 = *(void **)(a1 + 56);
    uint64_t v21 = *(void *)(a1 + 64);
    uint64_t v22 = *(void **)(a1 + 72);
    uint64_t v23 = *(void *)(a1 + 80);
    *(void *)(a1 + 56) = v16;
    *(void *)(a1 + 64) = v17;
    *(void *)(a1 + 72) = v18;
    *(void *)(a1 + 80) = v19;
    char v24 = *(unsigned char *)(a1 + 88);
    *(unsigned char *)(a1 + 88) = v6;
    sub_2498826E4(v20, v21, v22, v23, v24);
  }
  else
  {
    if (v7 == 254)
    {
      long long v8 = *v5;
      long long v9 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v9;
      *uint64_t v4 = v8;
      goto LABEL_9;
    }
    uint64_t v12 = *(void **)(a2 + 56);
    uint64_t v13 = *(void *)(a2 + 64);
    uint64_t v14 = *(void **)(a2 + 72);
    uint64_t v15 = *(void *)(a2 + 80);
    sub_24988247C(v12, v13, v14, v15, *(void *)(a2 + 88));
    *(void *)(a1 + 56) = v12;
    *(void *)(a1 + 64) = v13;
    *(void *)(a1 + 72) = v14;
    *(void *)(a1 + 80) = v15;
    *(unsigned char *)(a1 + 88) = v6;
  }
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
LABEL_9:
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = (_OWORD *)(a1 + 128);
  uint64_t v26 = (_OWORD *)(a2 + 128);
  uint64_t v27 = *(void *)(a2 + 160);
  uint64_t v28 = v27 & 0xFE;
  if ((~*(_DWORD *)(a1 + 160) & 0xFELL) != 0)
  {
    if (v28 == 254)
    {
      sub_2499C5438(a1 + 128);
      long long v32 = *(_OWORD *)(a2 + 144);
      long long v31 = *(_OWORD *)(a2 + 160);
      *uint64_t v25 = *v26;
      *(_OWORD *)(a1 + 144) = v32;
      *(_OWORD *)(a1 + 160) = v31;
      goto LABEL_17;
    }
    uint64_t v37 = *(void **)(a2 + 128);
    uint64_t v38 = *(void *)(a2 + 136);
    int64_t v39 = *(void **)(a2 + 144);
    uint64_t v40 = *(void *)(a2 + 152);
    sub_24988247C(v37, v38, v39, v40, *(void *)(a2 + 160));
    char v41 = *(void **)(a1 + 128);
    uint64_t v42 = *(void *)(a1 + 136);
    uint64_t v43 = *(void **)(a1 + 144);
    uint64_t v44 = *(void *)(a1 + 152);
    *(void *)(a1 + 128) = v37;
    *(void *)(a1 + 136) = v38;
    *(void *)(a1 + 144) = v39;
    *(void *)(a1 + 152) = v40;
    char v45 = *(unsigned char *)(a1 + 160);
    *(unsigned char *)(a1 + 160) = v27;
    sub_2498826E4(v41, v42, v43, v44, v45);
  }
  else
  {
    if (v28 == 254)
    {
      long long v29 = *v26;
      long long v30 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v30;
      *uint64_t v25 = v29;
      goto LABEL_17;
    }
    uint64_t v33 = *(void **)(a2 + 128);
    uint64_t v34 = *(void *)(a2 + 136);
    uint64_t v35 = *(void **)(a2 + 144);
    uint64_t v36 = *(void *)(a2 + 152);
    sub_24988247C(v33, v34, v35, v36, *(void *)(a2 + 160));
    *(void *)(a1 + 128) = v33;
    *(void *)(a1 + 136) = v34;
    *(void *)(a1 + 144) = v35;
    *(void *)(a1 + 152) = v36;
    *(unsigned char *)(a1 + 160) = v27;
  }
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
LABEL_17:
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v46 = (_OWORD *)(a1 + 200);
  uint64_t v47 = (_OWORD *)(a2 + 200);
  uint64_t v48 = *(void *)(a2 + 232);
  uint64_t v49 = v48 & 0xFE;
  if ((~*(_DWORD *)(a1 + 232) & 0xFELL) != 0)
  {
    if (v49 == 254)
    {
      sub_2499C5438(a1 + 200);
      long long v53 = *(_OWORD *)(a2 + 216);
      long long v52 = *(_OWORD *)(a2 + 232);
      *char v46 = *v47;
      *(_OWORD *)(a1 + 216) = v53;
      *(_OWORD *)(a1 + 232) = v52;
      goto LABEL_25;
    }
    uint64_t v58 = *(void **)(a2 + 200);
    uint64_t v59 = *(void *)(a2 + 208);
    uint64_t v60 = *(void **)(a2 + 216);
    uint64_t v61 = *(void *)(a2 + 224);
    sub_24988247C(v58, v59, v60, v61, *(void *)(a2 + 232));
    uint64_t v62 = *(void **)(a1 + 200);
    uint64_t v63 = *(void *)(a1 + 208);
    uint64_t v64 = *(void **)(a1 + 216);
    uint64_t v65 = *(void *)(a1 + 224);
    *(void *)(a1 + 200) = v58;
    *(void *)(a1 + 208) = v59;
    *(void *)(a1 + 216) = v60;
    *(void *)(a1 + 224) = v61;
    char v66 = *(unsigned char *)(a1 + 232);
    *(unsigned char *)(a1 + 232) = v48;
    sub_2498826E4(v62, v63, v64, v65, v66);
  }
  else
  {
    if (v49 == 254)
    {
      long long v50 = *v47;
      long long v51 = *(_OWORD *)(a2 + 232);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 232) = v51;
      *char v46 = v50;
      goto LABEL_25;
    }
    uint64_t v54 = *(void **)(a2 + 200);
    uint64_t v55 = *(void *)(a2 + 208);
    uint64_t v56 = *(void **)(a2 + 216);
    uint64_t v57 = *(void *)(a2 + 224);
    sub_24988247C(v54, v55, v56, v57, *(void *)(a2 + 232));
    *(void *)(a1 + 200) = v54;
    *(void *)(a1 + 208) = v55;
    *(void *)(a1 + 216) = v56;
    *(void *)(a1 + 224) = v57;
    *(unsigned char *)(a1 + 232) = v48;
  }
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
LABEL_25:
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v67 = (_OWORD *)(a1 + 272);
  int v68 = (_OWORD *)(a2 + 272);
  uint64_t v69 = *(void *)(a2 + 304);
  uint64_t v70 = v69 & 0xFE;
  if ((~*(_DWORD *)(a1 + 304) & 0xFELL) != 0)
  {
    if (v70 == 254)
    {
      sub_2499C5438(a1 + 272);
      long long v74 = *(_OWORD *)(a2 + 288);
      long long v73 = *(_OWORD *)(a2 + 304);
      *uint64_t v67 = *v68;
      *(_OWORD *)(a1 + 288) = v74;
      *(_OWORD *)(a1 + 304) = v73;
      goto LABEL_33;
    }
    unint64_t v79 = *(void **)(a2 + 272);
    uint64_t v80 = *(void *)(a2 + 280);
    uint64_t v81 = *(void **)(a2 + 288);
    uint64_t v82 = *(void *)(a2 + 296);
    sub_24988247C(v79, v80, v81, v82, *(void *)(a2 + 304));
    uint64_t v83 = *(void **)(a1 + 272);
    uint64_t v84 = *(void *)(a1 + 280);
    uint64_t v85 = *(void **)(a1 + 288);
    uint64_t v86 = *(void *)(a1 + 296);
    *(void *)(a1 + 272) = v79;
    *(void *)(a1 + 280) = v80;
    *(void *)(a1 + 288) = v81;
    *(void *)(a1 + 296) = v82;
    char v87 = *(unsigned char *)(a1 + 304);
    *(unsigned char *)(a1 + 304) = v69;
    sub_2498826E4(v83, v84, v85, v86, v87);
LABEL_32:
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    goto LABEL_33;
  }
  if (v70 != 254)
  {
    uint64_t v75 = *(void **)(a2 + 272);
    uint64_t v76 = *(void *)(a2 + 280);
    uint64_t v77 = *(void **)(a2 + 288);
    uint64_t v78 = *(void *)(a2 + 296);
    sub_24988247C(v75, v76, v77, v78, *(void *)(a2 + 304));
    *(void *)(a1 + 272) = v75;
    *(void *)(a1 + 280) = v76;
    *(void *)(a1 + 288) = v77;
    *(void *)(a1 + 296) = v78;
    *(unsigned char *)(a1 + 304) = v69;
    goto LABEL_32;
  }
  long long v71 = *v68;
  long long v72 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v72;
  *uint64_t v67 = v71;
LABEL_33:
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v88 = *(void **)(a2 + 344);
  uint64_t v89 = *(void *)(a2 + 352);
  CGFloat v90 = *(void **)(a2 + 360);
  uint64_t v91 = *(void *)(a2 + 368);
  char v92 = *(unsigned char *)(a2 + 376);
  sub_24988247C(v88, v89, v90, v91, v92);
  uint64_t v93 = *(void **)(a1 + 344);
  uint64_t v94 = *(void *)(a1 + 352);
  uint64_t v95 = *(void **)(a1 + 360);
  uint64_t v96 = *(void *)(a1 + 368);
  *(void *)(a1 + 344) = v88;
  *(void *)(a1 + 352) = v89;
  *(void *)(a1 + 360) = v90;
  *(void *)(a1 + 368) = v91;
  char v97 = *(unsigned char *)(a1 + 376);
  *(unsigned char *)(a1 + 376) = v92;
  sub_2498826E4(v93, v94, v95, v96, v97);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  uint64_t v98 = *(void **)(a2 + 392);
  uint64_t v99 = *(void *)(a2 + 400);
  uint64_t v100 = *(void **)(a2 + 408);
  uint64_t v101 = *(void *)(a2 + 416);
  char v102 = *(unsigned char *)(a2 + 424);
  sub_24988247C(v98, v99, v100, v101, v102);
  uint64_t v103 = *(void **)(a1 + 392);
  uint64_t v104 = *(void *)(a1 + 400);
  uint64_t v105 = *(void **)(a1 + 408);
  uint64_t v106 = *(void *)(a1 + 416);
  *(void *)(a1 + 392) = v98;
  *(void *)(a1 + 400) = v99;
  *(void *)(a1 + 408) = v100;
  *(void *)(a1 + 416) = v101;
  char v107 = *(unsigned char *)(a1 + 424);
  *(unsigned char *)(a1 + 424) = v102;
  sub_2498826E4(v103, v104, v105, v106, v107);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(unsigned char *)(a1 + 440) = *(unsigned char *)(a2 + 440);
  *(unsigned char *)(a1 + 441) = *(unsigned char *)(a2 + 441);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  return a1;
}

void *__swift_memcpy480_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1E0uLL);
}

uint64_t assignWithTake for Display(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  int v5 = *(_DWORD *)(a1 + 88);
  if ((~(_BYTE)v5 & 0xFE) == 0) {
    goto LABEL_4;
  }
  uint64_t v6 = *(void *)(a2 + 88);
  if ((~*(_DWORD *)(a2 + 88) & 0xFELL) == 0)
  {
    sub_2499C5438(a1 + 56);
LABEL_4:
    long long v7 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v7;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_6;
  }
  long long v8 = *(void **)(a1 + 56);
  uint64_t v9 = *(void *)(a1 + 64);
  long long v10 = *(void **)(a1 + 72);
  uint64_t v11 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = v6;
  sub_2498826E4(v8, v9, v10, v11, v5);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
LABEL_6:
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v12 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v12;
  swift_bridgeObjectRelease();
  int v13 = *(_DWORD *)(a1 + 160);
  if ((~(_BYTE)v13 & 0xFE) == 0)
  {
LABEL_9:
    long long v15 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v15;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    goto LABEL_11;
  }
  uint64_t v14 = *(void *)(a2 + 160);
  if ((~*(_DWORD *)(a2 + 160) & 0xFELL) == 0)
  {
    sub_2499C5438(a1 + 128);
    goto LABEL_9;
  }
  uint64_t v16 = *(void **)(a1 + 128);
  uint64_t v17 = *(void *)(a1 + 136);
  char v18 = *(void **)(a1 + 144);
  uint64_t v19 = *(void *)(a1 + 152);
  long long v20 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v20;
  *(unsigned char *)(a1 + 160) = v14;
  sub_2498826E4(v16, v17, v18, v19, v13);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
LABEL_11:
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  uint64_t v21 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v21;
  swift_bridgeObjectRelease();
  int v22 = *(_DWORD *)(a1 + 232);
  if ((~(_BYTE)v22 & 0xFE) == 0)
  {
LABEL_14:
    long long v24 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v24;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    goto LABEL_16;
  }
  uint64_t v23 = *(void *)(a2 + 232);
  if ((~*(_DWORD *)(a2 + 232) & 0xFELL) == 0)
  {
    sub_2499C5438(a1 + 200);
    goto LABEL_14;
  }
  uint64_t v25 = *(void **)(a1 + 200);
  uint64_t v26 = *(void *)(a1 + 208);
  uint64_t v27 = *(void **)(a1 + 216);
  uint64_t v28 = *(void *)(a1 + 224);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 232) = v23;
  sub_2498826E4(v25, v26, v27, v28, v22);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
LABEL_16:
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  uint64_t v29 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v29;
  swift_bridgeObjectRelease();
  int v30 = *(_DWORD *)(a1 + 304);
  if ((~(_BYTE)v30 & 0xFE) != 0)
  {
    uint64_t v31 = *(void *)(a2 + 304);
    if ((~*(_DWORD *)(a2 + 304) & 0xFELL) != 0)
    {
      uint64_t v33 = *(void **)(a1 + 272);
      uint64_t v34 = *(void *)(a1 + 280);
      uint64_t v35 = *(void **)(a1 + 288);
      uint64_t v36 = *(void *)(a1 + 296);
      long long v37 = *(_OWORD *)(a2 + 288);
      *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
      *(_OWORD *)(a1 + 288) = v37;
      *(unsigned char *)(a1 + 304) = v31;
      sub_2498826E4(v33, v34, v35, v36, v30);
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      goto LABEL_21;
    }
    sub_2499C5438(a1 + 272);
  }
  long long v32 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v32;
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
LABEL_21:
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  uint64_t v38 = *(void *)(a2 + 336);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = v38;
  swift_bridgeObjectRelease();
  char v39 = *(unsigned char *)(a2 + 376);
  uint64_t v40 = *(void **)(a1 + 344);
  uint64_t v41 = *(void *)(a1 + 352);
  uint64_t v42 = *(void **)(a1 + 360);
  uint64_t v43 = *(void *)(a1 + 368);
  long long v44 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 360) = v44;
  char v45 = *(unsigned char *)(a1 + 376);
  *(unsigned char *)(a1 + 376) = v39;
  sub_2498826E4(v40, v41, v42, v43, v45);
  uint64_t v46 = *(void *)(a2 + 416);
  char v47 = *(unsigned char *)(a2 + 424);
  uint64_t v48 = *(void **)(a1 + 392);
  uint64_t v49 = *(void *)(a1 + 400);
  long long v50 = *(void **)(a1 + 408);
  uint64_t v51 = *(void *)(a1 + 416);
  long long v52 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v52;
  *(void *)(a1 + 416) = v46;
  char v53 = *(unsigned char *)(a1 + 424);
  *(unsigned char *)(a1 + 424) = v47;
  sub_2498826E4(v48, v49, v50, v51, v53);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(unsigned char *)(a1 + 440) = *(unsigned char *)(a2 + 440);
  *(unsigned char *)(a1 + 441) = *(unsigned char *)(a2 + 441);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  return a1;
}

uint64_t getEnumTagSinglePayload for Display(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 480)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Display(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 472) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 480) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 480) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Display()
{
  return &type metadata for Display;
}

unsigned char *storeEnumTagSinglePayload for Display.DisplayType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A4B898);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Display.DisplayType()
{
  return &type metadata for Display.DisplayType;
}

uint64_t getEnumTagSinglePayload for Display.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Display.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *uint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A4BA2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Display.CodingKeys()
{
  return &type metadata for Display.CodingKeys;
}

unint64_t sub_249A4BA68()
{
  unint64_t result = qword_2696E4178;
  if (!qword_2696E4178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4178);
  }
  return result;
}

unint64_t sub_249A4BAC0()
{
  unint64_t result = qword_2696E4180;
  if (!qword_2696E4180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4180);
  }
  return result;
}

unint64_t sub_249A4BB18()
{
  unint64_t result = qword_2696E4188;
  if (!qword_2696E4188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4188);
  }
  return result;
}

uint64_t sub_249A4BB6C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7374756F79616CLL && a2 == 0xE700000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x797469736E6564 && a2 == 0xE700000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEA0000000000646ELL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x73614D6570616873 && a2 == 0xE90000000000006BLL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x726F697265746E69 && a2 == 0xE800000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x63634F6C65656877 && a2 == 0xEE006E6F6973756CLL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000249B171C0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x676F4C656C707061 && a2 == 0xE90000000000006FLL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000249B171E0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x8000000249B17200 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249B17230 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x73776F64616873 && a2 == 0xE700000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x74736566696E616DLL && a2 == 0xEF73656972746E45)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 15;
    }
    else {
      return 16;
    }
  }
}

unint64_t sub_249A4C1E0()
{
  unint64_t result = qword_2696E4190;
  if (!qword_2696E4190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4190);
  }
  return result;
}

uint64_t sub_249A4C234(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_249A4C29C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (uint64_t v6 = sub_2498EF018(a1, a2), (v7 & 1) != 0))
  {
    int v8 = (long long *)(*(void *)(a3 + 56) + (v6 << 7));
    long long v9 = v8[3];
    long long v11 = *v8;
    long long v10 = v8[1];
    uint64_t v16[2] = v8[2];
    v16[3] = v9;
    v16[0] = v11;
    v16[1] = v10;
    long long v13 = v8[5];
    long long v12 = v8[6];
    long long v14 = v8[4];
    *(_OWORD *)&v17[9] = *(long long *)((char *)v8 + 105);
    v16[5] = v13;
    *(_OWORD *)uint64_t v17 = v12;
    v16[4] = v14;
    memmove(a4, v8, 0x79uLL);
    nullsub_1(a4);
    return sub_24988E364((uint64_t)v16);
  }
  else
  {
    sub_2498EBBEC(v16);
    return sub_249A506CC((uint64_t)v16, (uint64_t)a4);
  }
}

uint64_t EditableTheme.layoutStyles()()
{
  uint64_t v1 = *v0;
  swift_getKeyPath();
  swift_bridgeObjectRetain_n();
  swift_retain();
  BOOL v2 = sub_2498E8DEC(v1);
  swift_bridgeObjectRelease();
  unsigned int v4 = v2;
  sub_2498EA964((uint64_t *)&v4);
  swift_bridgeObjectRelease();
  swift_release_n();
  return (uint64_t)v4;
}

void EditableTheme.init()(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x263F8EE80];
  *a1 = MEMORY[0x263F8EE88];
  a1[1] = v1;
}

uint64_t sub_249A4C400()
{
  uint64_t v3 = *v0;
  swift_bridgeObjectRetain();
  uint64_t v4 = MEMORY[0x263F8EE78];
  unint64_t v262 = sub_2498EDB68(MEMORY[0x263F8EE78]);
  uint64_t v263 = v3;
  uint64_t v258 = v3 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  int64_t v259 = (unint64_t)(v5 + 63) >> 6;
  unint64_t v7 = v6 & *(void *)(v3 + 56);
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v260 = (v7 - 1) & v7;
  unint64_t v9 = __clz(__rbit64(v7)) | (v8 << 6);
  uint64_t v10 = v263;
LABEL_20:
  int64_t v261 = v8;
  long long v14 = (uint64_t *)(*(void *)(v10 + 48) + 56 * v9);
  uint64_t v264 = *v14;
  uint64_t v15 = v14[2];
  int64_t v2 = *(void *)(v15 + 16);
  uint64_t v268 = v14[1];
  uint64_t v269 = v15;
  if (!v2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v188 = v4;
    goto LABEL_181;
  }
  unint64_t v318 = (void *)v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_249A220B0(0, v2, 0);
  unint64_t v16 = sub_249A49DE0(v15);
  if ((v16 & 0x8000000000000000) != 0 || (uint64_t)v16 >= 1 << *(unsigned char *)(v15 + 32)) {
    goto LABEL_245;
  }
  uint64_t v18 = v15 + 64;
  int v265 = v17;
  uint64_t v266 = v15 + 64;
  uint64_t v257 = v15 + 88;
  uint64_t v19 = 1;
  int64_t v267 = v2;
LABEL_24:
  if ((*(void *)(v18 + 8 * (v16 >> 6)) & (1 << v16)) == 0) {
    goto LABEL_246;
  }
  if (*(_DWORD *)(v15 + 36) != v17) {
    goto LABEL_247;
  }
  int v271 = v17;
  uint64_t v272 = 1 << v16;
  unint64_t v273 = v16 >> 6;
  uint64_t v270 = v19;
  uint64_t v20 = *(void *)(v15 + 56);
  uint64_t v21 = *(void *)(v15 + 48) + 112 * v16;
  uint64_t v23 = *(void *)(v21 + 16);
  uint64_t v22 = *(void *)(v21 + 24);
  uint64_t v290 = v22;
  uint64_t v25 = *(void *)(v21 + 32);
  uint64_t v24 = *(void *)(v21 + 40);
  uint64_t v26 = *(void *)(v21 + 48);
  uint64_t v27 = *(void *)(v21 + 56);
  char v28 = *(unsigned char *)(v21 + 64);
  uint64_t v29 = *(void *)(v21 + 80);
  uint64_t v279 = *(void *)(v21 + 72);
  uint64_t v284 = v29;
  uint64_t v285 = v24;
  uint64_t v282 = *(void *)v21;
  unint64_t v283 = *(void *)(v21 + 88);
  char v280 = *(unsigned char *)(v21 + 96);
  uint64_t v30 = *(void *)(v21 + 104);
  uint64_t v275 = v16;
  uint64_t v294 = *(void *)(v20 + 8 * v16);
  uint64_t v286 = *(void *)(v21 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v288 = v25;
  uint64_t v289 = v27;
  char v281 = v28;
  sub_24988CD7C(v22, v25, v24, v26, v27, v28);
  sub_24988CDF0(v29);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v287 = v26;
  sub_24988CD7C(v22, v25, v24, v26, v27, v28);
  sub_24988CDF0(v29);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v293 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v31 = v28;
  sub_249889FFC(v22, v25, v24, v26, v27, v28);
  sub_24988D7A0(v284);
  swift_bridgeObjectRelease();
  uint64_t v277 = v30;
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988CD7C(v22, v25, v24, v26, v27, v28);
  sub_24988CDF0(v284);
  swift_retain();
  *(void *)&long long v310 = v282;
  *((void *)&v310 + 1) = v286;
  sub_24988CE30();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v276 = sub_249AED918();
  uint64_t v274 = v32;
  swift_bridgeObjectRetain();
  unint64_t v33 = v283;
  char v34 = v28;
  uint64_t v35 = v24;
  swift_bridgeObjectRetain();
  int64_t v2 = v25;
  sub_24988CD7C(v290, v25, v24, v26, v27, v281);
  sub_24988CDF0(v284);
  swift_retain();
  uint64_t v36 = _s14CarPlayAssetUI5ThemeO7ColorIDO8allCasesSayAEGvgZ_0();
  uint64_t v292 = *(void *)(v36 + 16);
  if (!v292)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v164 = v26;
    sub_249889FFC(v290, v25, v285, v26, v27, v31);
    sub_24988D7A0(v284);
    swift_release();
    int64_t v154 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_152;
  }
  uint64_t v291 = v36 + 32;
  swift_bridgeObjectRetain();
  uint64_t v37 = 0;
  uint64_t v38 = (void *)MEMORY[0x263F8EE80];
  uint64_t v39 = v30;
  uint64_t v40 = v294;
  while (1)
  {
    uint64_t v43 = v291 + 24 * v37;
    uint64_t v44 = *(void *)v43;
    uint64_t v45 = *(void *)(v43 + 8);
    unint64_t v1 = *(unsigned __int8 *)(v43 + 16);
    uint64_t v46 = *(void *)(v40 + 16);
    sub_24988D770(*(void *)v43, v45, *(unsigned char *)(v43 + 16));
    sub_24988D770(v44, v45, v1);
    uint64_t v296 = v38;
    uint64_t v297 = v1;
    uint64_t v295 = v37;
    if (!v46)
    {
      swift_bridgeObjectRetain();
      unint64_t v48 = v1;
LABEL_62:
      switch(v48)
      {
        case 1uLL:
          *(void *)&long long v310 = v282;
          *((void *)&v310 + 1) = v286;
          *(void *)&long long v311 = v293;
          *((void *)&v311 + 1) = v290;
          *(void *)&long long v312 = v288;
          *((void *)&v312 + 1) = v285;
          *(void *)&long long v313 = v287;
          *((void *)&v313 + 1) = v289;
          LOBYTE(v314) = v281;
          *((void *)&v314 + 1) = v279;
          *(void *)&long long v315 = v284;
          *((void *)&v315 + 1) = v283;
          LOBYTE(v316[0]) = v280;
          *((void *)&v316[0] + 1) = v39;
          LOBYTE(v308[0]) = v44;
          sub_249951DBC((unsigned __int8 *)v308, (uint64_t *)&v317);
          goto LABEL_123;
        case 2uLL:
          *(void *)&long long v310 = v282;
          *((void *)&v310 + 1) = v286;
          *(void *)&long long v311 = v293;
          *((void *)&v311 + 1) = v290;
          *(void *)&long long v312 = v288;
          *((void *)&v312 + 1) = v285;
          *(void *)&long long v313 = v287;
          *((void *)&v313 + 1) = v289;
          LOBYTE(v314) = v281;
          *((void *)&v314 + 1) = v279;
          *(void *)&long long v315 = v284;
          *((void *)&v315 + 1) = v283;
          LOBYTE(v316[0]) = v280;
          *((void *)&v316[0] + 1) = v39;
          LOBYTE(v308[0]) = v44;
          sub_249952278((unsigned __int8 *)v308, (uint64_t *)&v317);
          goto LABEL_123;
        case 3uLL:
          uint64_t v278 = v45;
          uint64_t v83 = sub_249AEC898();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDE98);
          uint64_t v84 = swift_allocObject();
          *(void *)(v84 + 32) = 0;
          unint64_t v1 = v84 + 32;
          *(void *)(v84 + 40) = v83;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF500);
          uint64_t v85 = sub_249AEDCA8();
          double v86 = *(double *)(v84 + 32);
          uint64_t v87 = *(void *)(v84 + 40);
          unint64_t v88 = sub_2498EF500(v86);
          if (v89) {
            goto LABEL_243;
          }
          int64_t v2 = v85 + 64;
          *(void *)(v85 + 64 + ((v88 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v88;
          uint64_t v90 = 8 * v88;
          *(double *)(*(void *)(v85 + 48) + v90) = v86;
          *(void *)(*(void *)(v85 + 56) + v90) = v87;
          uint64_t v91 = *(void *)(v85 + 16);
          BOOL v11 = __OFADD__(v91, 1);
          uint64_t v92 = v91 + 1;
          if (v11) {
            goto LABEL_244;
          }
          *(void *)(v85 + 16) = v92;
          swift_setDeallocating();
          swift_retain();
          swift_retain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEA0);
          swift_arrayDestroy();
          swift_deallocClassInstance();
          int64_t v93 = *(void *)(v85 + 16);
          if (!v93)
          {
            swift_release();
            unint64_t v99 = MEMORY[0x263F8EE78];
            goto LABEL_109;
          }
          *(void *)&long long v310 = MEMORY[0x263F8EE78];
          sub_249A22070(0, v93, 0);
          char v94 = *(unsigned char *)(v85 + 32);
          unint64_t v95 = *(void *)(v85 + 64);
          if (v95)
          {
            uint64_t v96 = 0;
          }
          else
          {
            uint64_t v97 = 1 << v94;
            if ((v94 & 0x3Fu) < 7)
            {
LABEL_73:
              uint64_t v98 = 0;
              unint64_t v99 = v310;
              int v301 = *(_DWORD *)(v85 + 36);
              uint64_t v303 = v85 + 64;
              int64_t v299 = v93;
              do
              {
                if (v98 == v93) {
                  goto LABEL_223;
                }
                if (v97 < 0) {
                  goto LABEL_224;
                }
                if (v97 >= 1 << v94) {
                  goto LABEL_225;
                }
                unint64_t v1 = (unint64_t)v97 >> 6;
                if ((*(void *)(v2 + 8 * ((unint64_t)v97 >> 6)) & (1 << v97)) == 0) {
                  goto LABEL_226;
                }
                uint64_t v101 = *(void *)(*(void *)(v85 + 56) + 8 * v97);
                uint64_t v102 = sub_249AED588();
                uint64_t v305 = v103;
                unint64_t v306 = v102;
                *(void *)&long long v310 = v99;
                unint64_t v105 = *(void *)(v99 + 16);
                unint64_t v104 = *(void *)(v99 + 24);
                swift_retain();
                if (v105 >= v104 >> 1)
                {
                  sub_249A22070(v104 > 1, v105 + 1, 1);
                  unint64_t v99 = v310;
                }
                *(void *)(v99 + 16) = v105 + 1;
                uint64_t v106 = (void *)(v99 + 24 * v105);
                v106[4] = v306;
                v106[5] = v305;
                v106[6] = v101;
                char v94 = *(unsigned char *)(v85 + 32);
                unint64_t v100 = 1 << v94;
                if (v97 >= 1 << v94) {
                  goto LABEL_227;
                }
                int64_t v2 = v85 + 64;
                uint64_t v107 = *(void *)(v303 + 8 * v1);
                if ((v107 & (1 << v97)) == 0) {
                  goto LABEL_228;
                }
                if (v301 != *(_DWORD *)(v85 + 36)) {
                  goto LABEL_229;
                }
                unint64_t v108 = v107 & (-2 << (v97 & 0x3F));
                if (v108)
                {
                  unint64_t v100 = __clz(__rbit64(v108)) | v97 & 0xFFFFFFFFFFFFFFC0;
                  int64_t v93 = v299;
                }
                else
                {
                  unint64_t v109 = v1 + 1;
                  unint64_t v110 = (v100 + 63) >> 6;
                  int64_t v93 = v299;
                  if (v1 + 1 < v110)
                  {
                    unint64_t v111 = *(void *)(v303 + 8 * v109);
                    if (v111)
                    {
LABEL_91:
                      unint64_t v100 = __clz(__rbit64(v111)) + (v109 << 6);
                    }
                    else
                    {
                      while (v110 - 2 != v1)
                      {
                        unint64_t v111 = *(void *)(v85 + 80 + 8 * v1++);
                        if (v111)
                        {
                          unint64_t v109 = v1 + 1;
                          goto LABEL_91;
                        }
                      }
                    }
                  }
                }
                ++v98;
                uint64_t v97 = v100;
              }
              while (v98 != v93);
              swift_release();
              uint64_t v39 = v277;
LABEL_109:
              unint64_t v130 = v99;
              if (*(void *)(v99 + 16))
              {
                __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEA8);
                uint64_t v113 = (void *)sub_249AEDCA8();
                uint64_t v131 = *(void *)(v130 + 16);
                unint64_t v317 = v113;
                uint64_t v115 = v44;
                if (v131)
                {
                  swift_bridgeObjectRetain_n();
                  uint64_t v132 = 0;
                  unint64_t v306 = v130;
                  uint64_t v133 = (unint64_t *)(v130 + 48);
                  while (1)
                  {
                    uint64_t v134 = v132 + 1;
                    if (__OFADD__(v132, 1)) {
                      break;
                    }
                    int64_t v2 = *(v133 - 1);
                    unint64_t v1 = *v133;
                    *(void *)&long long v310 = *(v133 - 2);
                    uint64_t v135 = v310;
                    *((void *)&v310 + 1) = v2;
                    swift_bridgeObjectRetain();
                    swift_retain();
                    unint64_t v136 = sub_2498EF01C(v135, v2);
                    uint64_t v138 = v113[2];
                    BOOL v139 = (v137 & 1) == 0;
                    BOOL v11 = __OFADD__(v138, v139);
                    uint64_t v140 = v138 + v139;
                    if (v11) {
                      goto LABEL_235;
                    }
                    char v141 = v137;
                    if (v113[3] < v140)
                    {
                      sub_2498E4510(v140, 1);
                      uint64_t v113 = v317;
                      unint64_t v136 = sub_2498EF01C(v135, v2);
                      if ((v141 & 1) != (v142 & 1))
                      {
LABEL_257:
                        sub_249AEE2D8();
                        __break(1u);
                        goto LABEL_258;
                      }
                    }
                    if (v141) {
                      goto LABEL_255;
                    }
                    v113[(v136 >> 6) + 8] |= 1 << v136;
                    uint64_t v143 = (uint64_t *)(v113[6] + 16 * v136);
                    *uint64_t v143 = v135;
                    v143[1] = v2;
                    *(void *)(v113[7] + 8 * v136) = v1;
                    uint64_t v144 = v113[2];
                    BOOL v11 = __OFADD__(v144, 1);
                    uint64_t v145 = v144 + 1;
                    if (v11) {
                      goto LABEL_236;
                    }
                    v113[2] = v145;
                    v133 += 3;
                    ++v132;
                    if (v134 == v131)
                    {
LABEL_119:
                      swift_release();
                      swift_bridgeObjectRelease_n();
                      uint64_t v39 = v277;
                      goto LABEL_122;
                    }
                  }
                  __break(1u);
LABEL_235:
                  __break(1u);
LABEL_236:
                  __break(1u);
LABEL_237:
                  __break(1u);
LABEL_238:
                  __break(1u);
                  goto LABEL_239;
                }
                goto LABEL_121;
              }
              goto LABEL_120;
            }
            unint64_t v95 = *(void *)(v85 + 72);
            if (v95)
            {
              uint64_t v96 = 1;
            }
            else
            {
              uint64_t v161 = 0;
              unint64_t v162 = (unint64_t)(v97 + 63) >> 6;
              if (v162 <= 2) {
                unint64_t v162 = 2;
              }
              unint64_t v163 = v162 - 2;
              do
              {
                if (v163 == v161) {
                  goto LABEL_73;
                }
                unint64_t v95 = *(void *)(v85 + 80 + 8 * v161++);
              }
              while (!v95);
              uint64_t v96 = v161 + 1;
            }
          }
          uint64_t v97 = __clz(__rbit64(v95)) + (v96 << 6);
          goto LABEL_73;
        case 4uLL:
          swift_beginAccess();
          uint64_t v82 = off_2696E31B0;
          if (!off_2696E31B0) {
            goto LABEL_262;
          }
          *(void *)&v308[0] = v44;
          *((void *)&v308[0] + 1) = v45;
          *(void *)&long long v310 = v282;
          *((void *)&v310 + 1) = v286;
          *(void *)&long long v311 = v293;
          *((void *)&v311 + 1) = v290;
          *(void *)&long long v312 = v288;
          *((void *)&v312 + 1) = v285;
          *(void *)&long long v313 = v287;
          *((void *)&v313 + 1) = v289;
          LOBYTE(v314) = v281;
          *((void *)&v314 + 1) = v279;
          *(void *)&long long v315 = v284;
          *((void *)&v315 + 1) = v283;
          LOBYTE(v316[0]) = v280;
          *((void *)&v316[0] + 1) = v39;
          swift_retain();
          ((void (*)(void **__return_ptr, _OWORD *, long long *))v82)(&v317, v308, &v310);
          sub_2498B9AB8((uint64_t)v82);
          goto LABEL_123;
        default:
          *(void *)&long long v310 = v282;
          *((void *)&v310 + 1) = v286;
          *(void *)&long long v311 = v293;
          *((void *)&v311 + 1) = v290;
          *(void *)&long long v312 = v288;
          *((void *)&v312 + 1) = v285;
          *(void *)&long long v313 = v287;
          *((void *)&v313 + 1) = v289;
          LOBYTE(v314) = v281;
          *((void *)&v314 + 1) = v279;
          *(void *)&long long v315 = v284;
          *((void *)&v315 + 1) = v283;
          LOBYTE(v316[0]) = v280;
          *((void *)&v316[0] + 1) = v39;
          LOBYTE(v308[0]) = v44;
          sub_2499526C8((unsigned __int8 *)v308, (uint64_t *)&v317);
          goto LABEL_123;
      }
    }
    sub_24988D770(v44, v45, v1);
    swift_bridgeObjectRetain();
    unint64_t v47 = sub_2498EF034(v44, v45, v1);
    unint64_t v48 = v1;
    if ((v49 & 1) == 0)
    {
      sub_24988D788(v44, v45, v1);
      goto LABEL_62;
    }
    long long v50 = (uint64_t *)(*(void *)(v40 + 56) + 24 * v47);
    unint64_t v51 = *v50;
    int64_t v2 = v50[1];
    unint64_t v1 = v50[2];
    sub_249890CB0(*v50, v2);
    sub_24988D788(v44, v45, v48);
    if (v2 < 0)
    {
      unint64_t v317 = (void *)v51;
      goto LABEL_123;
    }
    uint64_t v278 = v45;
    if (!*(void *)(v293 + 16)) {
      goto LABEL_260;
    }
    LOBYTE(v310) = v2 & 1;
    unint64_t v52 = sub_2498EEF60(v51, v2 & 1, v1);
    if ((v53 & 1) == 0) {
      goto LABEL_260;
    }
    uint64_t v54 = *(void *)(*(void *)(v293 + 56) + 8 * v52);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDE98);
    unint64_t v1 = swift_allocObject();
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = v54;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF500);
    uint64_t v55 = sub_249AEDCA8();
    double v56 = *(double *)(v1 + 32);
    uint64_t v57 = *(void *)(v1 + 40);
    unint64_t v58 = sub_2498EF500(v56);
    if (v59) {
      goto LABEL_240;
    }
    int64_t v2 = v55 + 64;
    *(void *)(v55 + 64 + ((v58 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v58;
    uint64_t v60 = 8 * v58;
    *(double *)(*(void *)(v55 + 48) + v60) = v56;
    *(void *)(*(void *)(v55 + 56) + v60) = v57;
    uint64_t v61 = *(void *)(v55 + 16);
    BOOL v11 = __OFADD__(v61, 1);
    uint64_t v62 = v61 + 1;
    if (v11) {
      goto LABEL_241;
    }
    *(void *)(v55 + 16) = v62;
    swift_setDeallocating();
    swift_retain_n();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEA0);
    swift_arrayDestroy();
    swift_deallocClassInstance();
    int64_t v63 = *(void *)(v55 + 16);
    if (v63) {
      break;
    }
    swift_release();
    unint64_t v69 = MEMORY[0x263F8EE78];
LABEL_97:
    unint64_t v112 = v69;
    if (*(void *)(v69 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEA8);
      uint64_t v113 = (void *)sub_249AEDCA8();
      uint64_t v114 = *(void *)(v112 + 16);
      unint64_t v317 = v113;
      uint64_t v115 = v44;
      if (v114)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v116 = 0;
        unint64_t v306 = v112;
        uint64_t v117 = (unint64_t *)(v112 + 48);
        while (1)
        {
          uint64_t v118 = v116 + 1;
          if (__OFADD__(v116, 1)) {
            goto LABEL_230;
          }
          uint64_t v119 = *(v117 - 1);
          unint64_t v1 = *v117;
          *(void *)&long long v310 = *(v117 - 2);
          int64_t v2 = v310;
          *((void *)&v310 + 1) = v119;
          swift_bridgeObjectRetain();
          swift_retain();
          unint64_t v120 = sub_2498EF01C(v2, v119);
          uint64_t v122 = v113[2];
          BOOL v123 = (v121 & 1) == 0;
          BOOL v11 = __OFADD__(v122, v123);
          uint64_t v124 = v122 + v123;
          if (v11) {
            goto LABEL_231;
          }
          char v125 = v121;
          if (v113[3] < v124)
          {
            sub_2498E4510(v124, 1);
            uint64_t v113 = v317;
            unint64_t v120 = sub_2498EF01C(v2, v119);
            if ((v125 & 1) != (v126 & 1)) {
              goto LABEL_257;
            }
          }
          if (v125) {
            goto LABEL_255;
          }
          v113[(v120 >> 6) + 8] |= 1 << v120;
          uint64_t v127 = (int64_t *)(v113[6] + 16 * v120);
          *uint64_t v127 = v2;
          v127[1] = v119;
          *(void *)(v113[7] + 8 * v120) = v1;
          uint64_t v128 = v113[2];
          BOOL v11 = __OFADD__(v128, 1);
          uint64_t v129 = v128 + 1;
          if (v11) {
            goto LABEL_232;
          }
          v113[2] = v129;
          v117 += 3;
          ++v116;
          if (v118 == v114) {
            goto LABEL_119;
          }
        }
      }
      goto LABEL_121;
    }
LABEL_120:
    uint64_t v115 = v44;
    uint64_t v113 = (void *)MEMORY[0x263F8EE80];
    unint64_t v317 = (void *)MEMORY[0x263F8EE80];
LABEL_121:
    swift_release();
LABEL_122:
    swift_bridgeObjectRelease();
    unint64_t v317 = v113;
    uint64_t v44 = v115;
    uint64_t v45 = v278;
LABEL_123:
    uint64_t v146 = (uint64_t)v317;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v310 = v296;
    int64_t v2 = v44;
    unint64_t v51 = sub_2498EF034(v44, v45, v297);
    uint64_t v149 = v296[2];
    BOOL v150 = (v148 & 1) == 0;
    uint64_t v151 = v149 + v150;
    if (__OFADD__(v149, v150)) {
      goto LABEL_237;
    }
    unint64_t v1 = v148;
    if (v296[3] >= v151)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_2498DFDFC();
      }
    }
    else
    {
      sub_2498E3D54(v151, isUniquelyReferenced_nonNull_native);
      unint64_t v152 = sub_2498EF034(v44, v45, v297);
      if ((v1 & 1) != (v153 & 1)) {
        goto LABEL_259;
      }
      unint64_t v51 = v152;
    }
    int64_t v154 = (void *)v310;
    if (v1)
    {
      uint64_t v41 = *(void *)(v310 + 56);
      swift_bridgeObjectRelease();
      *(void *)(v41 + 8 * v51) = v146;
      char v42 = v297;
    }
    else
    {
      *(void *)(v310 + 8 * (v51 >> 6) + 64) |= 1 << v51;
      uint64_t v155 = v154[6] + 24 * v51;
      *(void *)uint64_t v155 = v2;
      *(void *)(v155 + 8) = v45;
      char v42 = v297;
      *(unsigned char *)(v155 + 16) = v297;
      *(void *)(v154[7] + 8 * v51) = v146;
      uint64_t v156 = v154[2];
      BOOL v11 = __OFADD__(v156, 1);
      uint64_t v157 = v156 + 1;
      if (v11) {
        goto LABEL_238;
      }
      v154[2] = v157;
      sub_24988D770(v2, v45, v297);
    }
    swift_bridgeObjectRelease();
    uint64_t v37 = v295 + 1;
    sub_24988D788(v2, v45, v42);
    sub_24988D788(v2, v45, v42);
    swift_bridgeObjectRelease();
    uint64_t v38 = v154;
    uint64_t v40 = v294;
    if (v295 + 1 == v292)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v164 = v287;
      int64_t v2 = v288;
      uint64_t v35 = v285;
      char v34 = v281;
      sub_249889FFC(v290, v288, v285, v287, v289, v281);
      unint64_t v33 = v283;
      sub_24988D7A0(v284);
      swift_release();
LABEL_152:
      swift_bridgeObjectRelease();
      swift_retain();
      sub_24988CD7C(v290, v2, v35, v164, v289, v34);
      sub_24988CDF0(v284);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_249889FFC(v290, v288, v35, v164, v289, v34);
      sub_24988D7A0(v284);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      char v165 = v34;
      sub_249889FFC(v290, v288, v35, v287, v289, v34);
      unint64_t v1 = v33;
      sub_24988D7A0(v284);
      swift_bridgeObjectRelease();
      swift_release();
      int64_t v166 = v318;
      LOBYTE(v2) = v267;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v167 = v276;
      }
      else
      {
        sub_249A220B0(0, v166[2] + 1, 1);
        uint64_t v167 = v276;
        int64_t v166 = v318;
      }
      unint64_t v169 = v166[2];
      unint64_t v168 = v166[3];
      unint64_t v170 = v33;
      uint64_t v171 = v284;
      char v172 = v165;
      uint64_t v174 = v288;
      uint64_t v173 = v289;
      uint64_t v175 = v285;
      uint64_t v176 = v286;
      if (v169 >= v168 >> 1)
      {
        sub_249A220B0(v168 > 1, v169 + 1, 1);
        uint64_t v167 = v276;
        uint64_t v175 = v285;
        uint64_t v176 = v286;
        uint64_t v174 = v288;
        uint64_t v173 = v289;
        char v172 = v165;
        uint64_t v171 = v284;
        unint64_t v170 = v33;
        int64_t v166 = v318;
      }
      v166[2] = v169 + 1;
      uint64_t v177 = &v166[16 * v169];
      v177[4] = v282;
      v177[5] = v176;
      v177[6] = v167;
      v177[7] = v274;
      v177[8] = v277;
      v177[9] = v154;
      v177[10] = v290;
      v177[11] = v174;
      v177[12] = v175;
      v177[13] = v287;
      v177[14] = v173;
      *((unsigned char *)v177 + 120) = v172;
      int v178 = *(_DWORD *)((char *)&v310 + 3);
      *(_DWORD *)((char *)v177 + 121) = v310;
      *((_DWORD *)v177 + 31) = v178;
      v177[16] = v279;
      v177[17] = v171;
      v177[18] = v170;
      *((unsigned char *)v177 + 152) = v280;
      uint64_t v15 = v269;
      char v179 = *(unsigned char *)(v269 + 32);
      if (v275 >= 1 << v179) {
        goto LABEL_248;
      }
      uint64_t v18 = v266;
      unint64_t v180 = v273;
      uint64_t v181 = *(void *)(v266 + 8 * v273);
      if ((v181 & v272) == 0) {
        goto LABEL_249;
      }
      if (*(_DWORD *)(v269 + 36) != v271) {
        goto LABEL_250;
      }
      unint64_t v182 = v181 & (-2 << (v275 & 0x3F));
      if (v182)
      {
        unint64_t v16 = __clz(__rbit64(v182)) | v275 & 0xFFFFFFFFFFFFFFC0;
        uint64_t v183 = v270;
        uint64_t v4 = MEMORY[0x263F8EE78];
        if (v270 == v267) {
          goto LABEL_211;
        }
        goto LABEL_175;
      }
      unint64_t v184 = v273 + 1;
      unint64_t v185 = (unint64_t)((1 << v179) + 63) >> 6;
      uint64_t v4 = MEMORY[0x263F8EE78];
      if (v273 + 1 >= v185) {
        goto LABEL_174;
      }
      unint64_t v186 = *(void *)(v266 + 8 * v184);
      if (v186) {
        goto LABEL_165;
      }
      unint64_t v184 = v273 + 2;
      if (v273 + 2 >= v185)
      {
LABEL_174:
        unint64_t v16 = 1 << v179;
        uint64_t v183 = v270;
        if (v270 == v267) {
          goto LABEL_211;
        }
      }
      else
      {
        unint64_t v186 = *(void *)(v266 + 8 * v184);
        if (v186)
        {
LABEL_165:
          uint64_t v183 = v270;
          goto LABEL_166;
        }
        unint64_t v187 = v185 - 3;
        uint64_t v183 = v270;
        do
        {
          if (v187 == v180)
          {
            unint64_t v16 = 1 << v179;
            if (v270 == v267) {
              goto LABEL_211;
            }
            goto LABEL_175;
          }
          unint64_t v186 = *(void *)(v257 + 8 * v180++);
        }
        while (!v186);
        unint64_t v184 = v180 + 2;
LABEL_166:
        unint64_t v16 = __clz(__rbit64(v186)) + (v184 << 6);
        if (v183 == v267)
        {
LABEL_211:
          swift_bridgeObjectRelease();
          uint64_t v188 = (uint64_t)v166;
LABEL_181:
          swift_bridgeObjectRetain();
          double v189 = (void *)sub_2498EDC84(v4);
          uint64_t v190 = *(void *)(v188 + 16);
          if (!v190) {
            goto LABEL_199;
          }
          swift_bridgeObjectRetain();
          long long v191 = *(_OWORD *)(v188 + 32);
          long long v192 = *(_OWORD *)(v188 + 112);
          long long v314 = *(_OWORD *)(v188 + 96);
          long long v315 = v192;
          v316[0] = *(_OWORD *)(v188 + 128);
          *(_OWORD *)((char *)v316 + 9) = *(_OWORD *)(v188 + 137);
          long long v193 = *(_OWORD *)(v188 + 48);
          long long v194 = *(_OWORD *)(v188 + 64);
          long long v310 = v191;
          long long v311 = v193;
          unint64_t v306 = v188;
          long long v195 = *(_OWORD *)(v188 + 80);
          long long v312 = v194;
          long long v313 = v195;
          uint64_t v196 = *((void *)&v310 + 1);
          uint64_t v197 = v310;
          sub_24988E364((uint64_t)&v310);
          swift_bridgeObjectRetain();
          char v198 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v318 = v189;
          unint64_t v1 = sub_2498EF018(v197, v196);
          uint64_t v200 = v189[2];
          BOOL v201 = (v199 & 1) == 0;
          uint64_t v202 = v200 + v201;
          if (!__OFADD__(v200, v201))
          {
            LOBYTE(v2) = v199;
            uint64_t v203 = 160;
            do
            {
              if (v189[3] >= v202)
              {
                if (v198)
                {
                  if (v2) {
                    goto LABEL_191;
                  }
                }
                else
                {
                  sub_2498E05E0();
                  if (v2) {
                    goto LABEL_191;
                  }
                }
              }
              else
              {
                sub_2498E4BD4(v202, v198 & 1);
                uint64_t v204 = sub_2498EF018(v197, v196);
                if ((v2 & 1) != (v205 & 1))
                {
                  uint64_t v255 = &qword_2696DDB20;
                  goto LABEL_264;
                }
                unint64_t v1 = v204;
                if (v2)
                {
LABEL_191:
                  double v189 = v318;
                  uint64_t v216 = (long long *)(v318[7] + (v1 << 7));
                  long long v217 = v216[3];
                  long long v219 = *v216;
                  long long v218 = v216[1];
                  v308[2] = v216[2];
                  v308[3] = v217;
                  v308[0] = v219;
                  v308[1] = v218;
                  long long v221 = v216[5];
                  long long v220 = v216[6];
                  long long v222 = v216[4];
                  *(_OWORD *)((char *)v309 + 9) = *(long long *)((char *)v216 + 105);
                  v308[5] = v221;
                  v309[0] = v220;
                  v308[4] = v222;
                  sub_24988E414((uint64_t)v308);
                  long long v223 = v313;
                  long long v225 = v310;
                  long long v224 = v311;
                  v216[2] = v312;
                  v216[3] = v223;
                  *uint64_t v216 = v225;
                  v216[1] = v224;
                  long long v227 = v315;
                  long long v226 = v316[0];
                  long long v228 = v314;
                  *(long long *)((char *)v216 + 105) = *(_OWORD *)((char *)v316 + 9);
                  v216[5] = v227;
                  v216[6] = v226;
                  v216[4] = v228;
                  goto LABEL_192;
                }
              }
              double v189 = v318;
              v318[(v1 >> 6) + 8] |= 1 << v1;
              CGRect v206 = (void *)(v189[6] + 16 * v1);
              void *v206 = v197;
              v206[1] = v196;
              CGRect v207 = (_OWORD *)(v189[7] + (v1 << 7));
              long long v208 = *(_OWORD *)((char *)v316 + 9);
              long long v210 = v315;
              long long v209 = v316[0];
              v207[4] = v314;
              v207[5] = v210;
              v207[6] = v209;
              *(_OWORD *)((char *)v207 + 105) = v208;
              long long v212 = v312;
              long long v211 = v313;
              long long v213 = v311;
              *CGRect v207 = v310;
              v207[1] = v213;
              v207[2] = v212;
              v207[3] = v211;
              uint64_t v214 = v189[2];
              BOOL v11 = __OFADD__(v214, 1);
              uint64_t v215 = v214 + 1;
              if (v11) {
                goto LABEL_242;
              }
              v189[2] = v215;
              swift_bridgeObjectRetain();
LABEL_192:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (!--v190)
              {
                swift_bridgeObjectRelease();
LABEL_199:
                swift_bridgeObjectRelease();
                char v238 = swift_isUniquelyReferenced_nonNull_native();
                *(void *)&long long v310 = v262;
                unint64_t v240 = sub_2498EF018(v264, v268);
                uint64_t v241 = *(void *)(v262 + 16);
                BOOL v242 = (v239 & 1) == 0;
                uint64_t v243 = v241 + v242;
                uint64_t v4 = MEMORY[0x263F8EE78];
                if (__OFADD__(v241, v242)) {
                  goto LABEL_251;
                }
                char v244 = v239;
                if (*(void *)(v262 + 24) < v243)
                {
                  sub_2498E4BC8(v243, v238);
                  uint64_t v245 = sub_2498EF018(v264, v268);
                  if ((v244 & 1) == (v246 & 1))
                  {
                    unint64_t v240 = v245;
                    goto LABEL_205;
                  }
LABEL_263:
                  uint64_t v255 = &qword_2696DDB18;
LABEL_264:
                  __swift_instantiateConcreteTypeFromMangledName(v255);
                  sub_249AEE2D8();
                  __break(1u);
                  JUMPOUT(0x249A4E2CCLL);
                }
                if ((v238 & 1) == 0) {
                  sub_2498E05D4();
                }
LABEL_205:
                uint64_t v247 = (void *)v310;
                unint64_t v262 = v310;
                if (v244)
                {
                  uint64_t v248 = *(void *)(v310 + 56);
                  swift_bridgeObjectRelease();
                  *(void *)(v248 + 8 * v240) = v189;
                  goto LABEL_209;
                }
                *(void *)(v310 + 8 * (v240 >> 6) + 64) |= 1 << v240;
                uint64_t v249 = (void *)(v247[6] + 16 * v240);
                *uint64_t v249 = v264;
                v249[1] = v268;
                *(void *)(v247[7] + 8 * v240) = v189;
                uint64_t v250 = v247[2];
                BOOL v11 = __OFADD__(v250, 1);
                uint64_t v251 = v250 + 1;
                if (!v11)
                {
                  v247[2] = v251;
                  swift_bridgeObjectRetain();
LABEL_209:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease();
                  unint64_t v7 = v260;
                  int64_t v8 = v261;
                  if (v260) {
                    goto LABEL_4;
                  }
LABEL_5:
                  BOOL v11 = __OFADD__(v8++, 1);
                  uint64_t v10 = v263;
                  if (v11) {
                    goto LABEL_252;
                  }
                  if (v8 >= v259) {
                    goto LABEL_233;
                  }
                  unint64_t v12 = *(void *)(v258 + 8 * v8);
                  if (v12) {
                    goto LABEL_19;
                  }
                  int64_t v13 = v8 + 1;
                  if (v8 + 1 >= v259) {
                    goto LABEL_233;
                  }
                  unint64_t v12 = *(void *)(v258 + 8 * v13);
                  if (v12) {
                    goto LABEL_18;
                  }
                  int64_t v13 = v8 + 2;
                  if (v8 + 2 >= v259) {
                    goto LABEL_233;
                  }
                  unint64_t v12 = *(void *)(v258 + 8 * v13);
                  if (v12) {
                    goto LABEL_18;
                  }
                  int64_t v13 = v8 + 3;
                  if (v8 + 3 >= v259) {
                    goto LABEL_233;
                  }
                  unint64_t v12 = *(void *)(v258 + 8 * v13);
                  if (v12) {
                    goto LABEL_18;
                  }
                  int64_t v13 = v8 + 4;
                  if (v8 + 4 >= v259) {
                    goto LABEL_233;
                  }
                  unint64_t v12 = *(void *)(v258 + 8 * v13);
                  if (v12) {
                    goto LABEL_18;
                  }
                  int64_t v13 = v8 + 5;
                  if (v8 + 5 >= v259) {
                    goto LABEL_233;
                  }
                  unint64_t v12 = *(void *)(v258 + 8 * v13);
                  if (v12)
                  {
LABEL_18:
                    int64_t v8 = v13;
LABEL_19:
                    uint64_t v260 = (v12 - 1) & v12;
                    unint64_t v9 = __clz(__rbit64(v12)) + (v8 << 6);
                    goto LABEL_20;
                  }
                  while (1)
                  {
                    int64_t v8 = v13 + 1;
                    if (__OFADD__(v13, 1)) {
                      break;
                    }
                    if (v8 >= v259) {
                      goto LABEL_233;
                    }
                    unint64_t v12 = *(void *)(v258 + 8 * v8);
                    ++v13;
                    if (v12) {
                      goto LABEL_19;
                    }
                  }
LABEL_254:
                  __break(1u);
LABEL_255:
                  uint64_t v253 = (void *)swift_allocError();
                  swift_willThrow();
                  id v307 = v253;
                  id v254 = v253;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEB8);
                  if (swift_dynamicCast())
                  {
                    *(void *)&v308[0] = 0;
                    *((void *)&v308[0] + 1) = 0xE000000000000000;
                    sub_249AEDA78();
                    sub_249AED1E8();
                    sub_249AEDC08();
                    sub_249AED1E8();
                  }
                  else
                  {
LABEL_258:
                    swift_release();
                    unint64_t v51 = v306;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();

                    swift_unexpectedError();
                    __break(1u);
LABEL_259:
                    sub_249AEE2D8();
                    __break(1u);
LABEL_260:
                    *(void *)&long long v310 = 0;
                    *((void *)&v310 + 1) = 0xE000000000000000;
                    sub_249AEDA78();
                    sub_249AED1E8();
                    *(void *)&v308[0] = v51;
                    BYTE8(v308[0]) = v2 & 1;
                    sub_249AEDC08();
                    sub_249AED1E8();
                    *(void *)&v308[0] = v1;
                    sub_249AEDF48();
                    sub_249AED1E8();
                    swift_bridgeObjectRelease();
                  }
LABEL_262:
                  sub_249AEDC58();
                  __break(1u);
                  goto LABEL_263;
                }
LABEL_253:
                __break(1u);
                goto LABEL_254;
              }
              long long v229 = *(_OWORD *)(v306 + v203 + 48);
              long long v231 = *(_OWORD *)(v306 + v203);
              long long v230 = *(_OWORD *)(v306 + v203 + 16);
              long long v312 = *(_OWORD *)(v306 + v203 + 32);
              long long v313 = v229;
              long long v310 = v231;
              long long v311 = v230;
              long long v232 = *(_OWORD *)(v306 + v203 + 64);
              long long v233 = *(_OWORD *)(v306 + v203 + 80);
              long long v234 = *(_OWORD *)(v306 + v203 + 96);
              *(_OWORD *)((char *)v316 + 9) = *(_OWORD *)(v306 + v203 + 105);
              long long v315 = v233;
              v316[0] = v234;
              long long v314 = v232;
              uint64_t v196 = *((void *)&v231 + 1);
              uint64_t v197 = v231;
              sub_24988E364((uint64_t)&v310);
              swift_bridgeObjectRetain();
              char v198 = swift_isUniquelyReferenced_nonNull_native();
              unint64_t v318 = v189;
              unint64_t v1 = sub_2498EF018(v197, v196);
              LOBYTE(v2) = v235;
              uint64_t v236 = v189[2];
              BOOL v237 = (v235 & 1) == 0;
              v203 += 128;
              uint64_t v202 = v236 + v237;
            }
            while (!__OFADD__(v236, v237));
          }
LABEL_239:
          __break(1u);
LABEL_240:
          __break(1u);
LABEL_241:
          __break(1u);
LABEL_242:
          __break(1u);
LABEL_243:
          __break(1u);
LABEL_244:
          __break(1u);
LABEL_245:
          __break(1u);
LABEL_246:
          __break(1u);
LABEL_247:
          __break(1u);
LABEL_248:
          __break(1u);
LABEL_249:
          __break(1u);
LABEL_250:
          __break(1u);
LABEL_251:
          __break(1u);
LABEL_252:
          __break(1u);
          goto LABEL_253;
        }
      }
LABEL_175:
      if ((v16 & 0x8000000000000000) != 0) {
        goto LABEL_245;
      }
      uint64_t v19 = v183 + 1;
      int v17 = v265;
      if ((uint64_t)v16 >= 1 << v179) {
        goto LABEL_245;
      }
      goto LABEL_24;
    }
  }
  *(void *)&long long v310 = MEMORY[0x263F8EE78];
  sub_249A22070(0, v63, 0);
  char v64 = *(unsigned char *)(v55 + 32);
  unint64_t v65 = *(void *)(v55 + 64);
  if (v65)
  {
    uint64_t v66 = 0;
    goto LABEL_40;
  }
  uint64_t v67 = 1 << v64;
  if ((v64 & 0x3Fu) >= 7)
  {
    unint64_t v65 = *(void *)(v55 + 72);
    if (v65)
    {
      uint64_t v66 = 1;
LABEL_40:
      uint64_t v67 = __clz(__rbit64(v65)) + (v66 << 6);
    }
    else
    {
      uint64_t v158 = 0;
      unint64_t v159 = (unint64_t)(v67 + 63) >> 6;
      if (v159 <= 2) {
        unint64_t v159 = 2;
      }
      unint64_t v160 = v159 - 2;
      while (v160 != v158)
      {
        unint64_t v65 = *(void *)(v55 + 80 + 8 * v158++);
        if (v65)
        {
          uint64_t v66 = v158 + 1;
          goto LABEL_40;
        }
      }
    }
  }
  uint64_t v68 = 0;
  unint64_t v69 = v310;
  int v300 = *(_DWORD *)(v55 + 36);
  uint64_t v302 = v55 + 64;
  int64_t v298 = v63;
  while (v68 != v63)
  {
    if (v67 < 0) {
      goto LABEL_217;
    }
    if (v67 >= 1 << v64) {
      goto LABEL_218;
    }
    unint64_t v1 = (unint64_t)v67 >> 6;
    if ((*(void *)(v2 + 8 * ((unint64_t)v67 >> 6)) & (1 << v67)) == 0) {
      goto LABEL_219;
    }
    uint64_t v71 = *(void *)(*(void *)(v55 + 56) + 8 * v67);
    uint64_t v72 = sub_249AED588();
    uint64_t v304 = v73;
    unint64_t v306 = v72;
    *(void *)&long long v310 = v69;
    unint64_t v75 = *(void *)(v69 + 16);
    unint64_t v74 = *(void *)(v69 + 24);
    swift_retain();
    if (v75 >= v74 >> 1)
    {
      sub_249A22070(v74 > 1, v75 + 1, 1);
      unint64_t v69 = v310;
    }
    *(void *)(v69 + 16) = v75 + 1;
    uint64_t v76 = (void *)(v69 + 24 * v75);
    v76[4] = v306;
    v76[5] = v304;
    v76[6] = v71;
    char v64 = *(unsigned char *)(v55 + 32);
    unint64_t v70 = 1 << v64;
    if (v67 >= 1 << v64) {
      goto LABEL_220;
    }
    int64_t v2 = v55 + 64;
    uint64_t v77 = *(void *)(v302 + 8 * v1);
    if ((v77 & (1 << v67)) == 0) {
      goto LABEL_221;
    }
    if (v300 != *(_DWORD *)(v55 + 36)) {
      goto LABEL_222;
    }
    unint64_t v78 = v77 & (-2 << (v67 & 0x3F));
    if (v78)
    {
      unint64_t v70 = __clz(__rbit64(v78)) | v67 & 0xFFFFFFFFFFFFFFC0;
      int64_t v63 = v298;
    }
    else
    {
      unint64_t v79 = v1 + 1;
      unint64_t v80 = (v70 + 63) >> 6;
      int64_t v63 = v298;
      if (v1 + 1 < v80)
      {
        unint64_t v81 = *(void *)(v302 + 8 * v79);
        if (v81)
        {
LABEL_59:
          unint64_t v70 = __clz(__rbit64(v81)) + (v79 << 6);
        }
        else
        {
          while (v80 - 2 != v1)
          {
            unint64_t v81 = *(void *)(v55 + 80 + 8 * v1++);
            if (v81)
            {
              unint64_t v79 = v1 + 1;
              goto LABEL_59;
            }
          }
        }
      }
    }
    ++v68;
    uint64_t v67 = v70;
    if (v68 == v63)
    {
      swift_release();
      uint64_t v39 = v277;
      goto LABEL_97;
    }
  }
  __break(1u);
LABEL_217:
  __break(1u);
LABEL_218:
  __break(1u);
LABEL_219:
  __break(1u);
LABEL_220:
  __break(1u);
LABEL_221:
  __break(1u);
LABEL_222:
  __break(1u);
LABEL_223:
  __break(1u);
LABEL_224:
  __break(1u);
LABEL_225:
  __break(1u);
LABEL_226:
  __break(1u);
LABEL_227:
  __break(1u);
LABEL_228:
  __break(1u);
LABEL_229:
  __break(1u);
LABEL_230:
  __break(1u);
LABEL_231:
  __break(1u);
LABEL_232:
  __break(1u);
LABEL_233:
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v256 + 8) = v262;
  return result;
}

double EditableTheme.addLayoutStyle(_:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  long long v4 = *(_OWORD *)(a1 + 16);
  v10[0] = *(_OWORD *)a1;
  v10[1] = v4;
  uint64_t v10[2] = *(_OWORD *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  *(void *)&long long v9 = v5;
  *((void *)&v9 + 1) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2498DB3AC((uint64_t)v10);
  sub_249924EAC((uint64_t)v8, (uint64_t)v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249A4C400();
  double result = *(double *)&v9;
  *a2 = v9;
  return result;
}

uint64_t EditableTheme.addingLayoutStyle(_:)(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 16);
  v4[0] = *(_OWORD *)a1;
  v4[1] = v1;
  v4[2] = *(_OWORD *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  sub_2498DB3AC((uint64_t)v4);
  sub_249924EAC((uint64_t)v3, (uint64_t)v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_249A4C400();
}

uint64_t EditableTheme.updatingLayoutStyle(_:)(uint64_t a1)
{
  int64_t v2 = v1;
  long long v3 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v3;
  v9[2] = *(_OWORD *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 48);
  sub_2498DB3AC((uint64_t)v9);
  uint64_t v4 = swift_bridgeObjectRetain();
  unint64_t v5 = sub_249A504D4(v4, v9);
  sub_2498EB45C((uint64_t)v9);
  unint64_t v8 = v5;
  sub_2498DB3AC((uint64_t)v9);
  sub_249924EAC((uint64_t)v7, (uint64_t)v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *int64_t v2 = v8;
  return sub_249A4C400();
}

double EditableTheme.layoutStyle(for:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (uint64_t *)(a1 + *(int *)(type metadata accessor for Layout() + 28));
  uint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    long long v9 = *v2;
    v8[0] = v6;
    v8[1] = v5;
    EditableTheme.subscript.getter(v8, a2);
  }
  else
  {
    *(void *)(a2 + 48) = 0;
    double result = 0.0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

unint64_t EditableTheme.subscript.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_2498E8DEC(v5);
  swift_bridgeObjectRelease();
  v17[0] = v4;
  v17[1] = v3;
  uint64_t v16[2] = v17;
  swift_bridgeObjectRetain();
  unint64_t result = sub_2498DCC5C(sub_249A506B0, (uint64_t)v16, (uint64_t)v6);
  if (v8)
  {
    swift_bridgeObjectRelease();
    unint64_t result = swift_release();
    *(void *)(a2 + 48) = 0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  else
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < v6[2])
    {
      long long v9 = &v6[7 * result];
      uint64_t v10 = v9[5];
      uint64_t v12 = v9[6];
      uint64_t v11 = v9[7];
      uint64_t v14 = v9[8];
      uint64_t v13 = v9[9];
      uint64_t v15 = v9[10];
      *(void *)a2 = v9[4];
      *(void *)(a2 + 8) = v10;
      *(void *)(a2 + 16) = v12;
      *(void *)(a2 + 24) = v11;
      *(void *)(a2 + 32) = v14;
      *(void *)(a2 + 40) = v13;
      *(void *)(a2 + 48) = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    __break(1u);
  }
  return result;
}

uint64_t EditableTheme.palettes(for:)(uint64_t *a1)
{
  uint64_t v2 = *(void *)(v1 + 8);
  if (!*(void *)(v2 + 16)) {
    return 0;
  }
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_2498EF018(v4, v3);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    return 0;
  }
  uint64_t v7 = *(void *)(*(void *)(v2 + 56) + 8 * v5);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_2498E92A4(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v8;
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  uint64_t v2 = *(void *)(v1 + 8);
  if (!*(void *)(v2 + 16)) {
    return 0;
  }
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_2498EF018(v4, v3);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v7 = *(void *)(*(void *)(v2 + 56) + 8 * v5);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_2498E92A4(v7);
  swift_bridgeObjectRelease_n();
  return v8;
}

uint64_t EditableTheme.palettes(for:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for Layout() + 28));
  uint64_t v4 = v3[1];
  if (v4)
  {
    if (*(void *)(v2 + 16))
    {
      uint64_t v5 = *v3;
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_2498EF018(v5, v4);
      if (v7)
      {
        uint64_t v8 = *(void *)(*(void *)(v2 + 56) + 8 * v6);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        uint64_t v4 = sub_2498E92A4(v8);
        swift_bridgeObjectRelease_n();
        return v4;
      }
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  return v4;
}

unint64_t EditableTheme.defaultPalette(for:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v4 = v2[1];
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(type metadata accessor for Layout() + 28));
  uint64_t v7 = v6[1];
  if (v7)
  {
    uint64_t v8 = *v6;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    long long v9 = sub_2498E8DEC(v5);
    uint64_t v10 = swift_bridgeObjectRelease();
    *(void *)&v20[0] = v8;
    *((void *)&v20[0] + 1) = v7;
    MEMORY[0x270FA5388](v10);
    uint64_t v18[2] = v20;
    swift_bridgeObjectRetain();
    unint64_t result = sub_2498DCC5C(sub_249A506B0, (uint64_t)v18, (uint64_t)v9);
    if ((v12 & 1) == 0)
    {
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (result < v9[2])
      {
        uint64_t v13 = &v9[7 * result];
        uint64_t v14 = v13[8];
        uint64_t v19 = v13[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_release();
        if (*(void *)(v4 + 16))
        {
          uint64_t v15 = sub_2498EF018(v8, v7);
          if (v16)
          {
            uint64_t v17 = *(void *)(*(void *)(v4 + 56) + 8 * v15);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_249A4C29C(v19, v14, v17, a2);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
  }
LABEL_10:
  sub_2498EBBEC(v20);
  return sub_249A506CC((uint64_t)v20, (uint64_t)a2);
}

uint64_t static EditableTheme.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_249A4EB2C(*a1, *a2) & 1) == 0) {
    return 0;
  }

  return sub_2499FF23C(v2, v3);
}

uint64_t sub_249A4EB2C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v57 = result;
  uint64_t v58 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v67 = a2 + 56;
  int64_t v56 = v7;
  if (!v6) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v59 = (v6 - 1) & v6;
  int64_t v60 = v3;
  unint64_t v8 = __clz(__rbit64(v6)) | (v3 << 6);
LABEL_24:
  uint64_t v13 = (uint64_t *)(*(void *)(result + 48) + 56 * v8);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  uint64_t v16 = v13[2];
  uint64_t v17 = v13[3];
  uint64_t v18 = v13[4];
  uint64_t v19 = v13[5];
  uint64_t v20 = v13[6];
  sub_249AEE338();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v71 = v15;
  sub_249AECF78();
  uint64_t v72 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24988B990((uint64_t)v82, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v64 = v17;
  sub_249AECF78();
  uint64_t v62 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v63 = v19;
  sub_249AECF78();
  uint64_t v61 = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_249AEE388();
  uint64_t v22 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v23 = v21 & ~v22;
  if (((*(void *)(v67 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
  {
LABEL_73:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v65 = ~v22;
  uint64_t v77 = v16;
  while (1)
  {
    unint64_t v73 = v23;
    uint64_t v25 = (void *)(*(void *)(v2 + 48) + 56 * v23);
    uint64_t v26 = v25[2];
    uint64_t v27 = v25[4];
    uint64_t v68 = v25[5];
    uint64_t v69 = v25[3];
    uint64_t v76 = v25[6];
    BOOL v28 = *v25 == v71 && v25[1] == v72;
    if (!v28 && (sub_249AEE0D8() & 1) == 0) {
      goto LABEL_27;
    }
    if (v26 != v16) {
      break;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_61:
    if (v69 == v64 && v27 == v62 || (sub_249AEE0D8() & 1) != 0)
    {
      if (v68 == v63 && v76 == v61)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_70:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v2 = a2;
        int64_t v7 = v56;
        unint64_t result = v57;
        unint64_t v6 = v59;
        int64_t v3 = v60;
        if (v59) {
          goto LABEL_7;
        }
LABEL_8:
        int64_t v9 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_77;
        }
        if (v9 < v7)
        {
          unint64_t v10 = *(void *)(v58 + 8 * v9);
          int64_t v11 = v3 + 1;
          if (v10) {
            goto LABEL_23;
          }
          int64_t v11 = v3 + 2;
          if (v3 + 2 < v7)
          {
            unint64_t v10 = *(void *)(v58 + 8 * v11);
            if (v10) {
              goto LABEL_23;
            }
            int64_t v11 = v3 + 3;
            if (v3 + 3 < v7)
            {
              unint64_t v10 = *(void *)(v58 + 8 * v11);
              if (v10) {
                goto LABEL_23;
              }
              int64_t v11 = v3 + 4;
              if (v3 + 4 < v7)
              {
                unint64_t v10 = *(void *)(v58 + 8 * v11);
                if (v10) {
                  goto LABEL_23;
                }
                uint64_t v12 = v3 + 5;
                if (v3 + 5 < v7)
                {
                  unint64_t v10 = *(void *)(v58 + 8 * v12);
                  if (!v10)
                  {
                    while (1)
                    {
                      int64_t v11 = v12 + 1;
                      if (__OFADD__(v12, 1)) {
                        goto LABEL_78;
                      }
                      if (v11 >= v7) {
                        return 1;
                      }
                      unint64_t v10 = *(void *)(v58 + 8 * v11);
                      ++v12;
                      if (v10) {
                        goto LABEL_23;
                      }
                    }
                  }
                  int64_t v11 = v3 + 5;
LABEL_23:
                  uint64_t v59 = (v10 - 1) & v10;
                  int64_t v60 = v11;
                  unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
                  goto LABEL_24;
                }
              }
            }
          }
        }
        return 1;
      }
      char v24 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v24) {
        goto LABEL_70;
      }
    }
    else
    {
LABEL_68:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_69:
      swift_bridgeObjectRelease();
    }
LABEL_27:
    uint64_t v2 = a2;
    unint64_t v23 = (v73 + 1) & v65;
    if (((*(void *)(v67 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
      goto LABEL_73;
    }
  }
  if (*(void *)(v26 + 16) != *(void *)(v16 + 16)) {
    goto LABEL_27;
  }
  uint64_t v29 = 1 << *(unsigned char *)(v26 + 32);
  uint64_t v74 = v26 + 64;
  if (v29 < 64) {
    uint64_t v30 = ~(-1 << v29);
  }
  else {
    uint64_t v30 = -1;
  }
  unint64_t v31 = v30 & *(void *)(v26 + 64);
  int64_t v75 = (unint64_t)(v29 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v70 = v27;
  swift_bridgeObjectRetain();
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v32 = 0;
  uint64_t v78 = v26;
  while (1)
  {
    if (v31)
    {
      uint64_t v79 = (v31 - 1) & v31;
      int64_t v80 = v32;
      unint64_t v33 = __clz(__rbit64(v31)) | (v32 << 6);
      goto LABEL_57;
    }
    int64_t v34 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
      goto LABEL_76;
    }
    uint64_t v27 = v70;
    if (v34 >= v75) {
      goto LABEL_61;
    }
    unint64_t v35 = *(void *)(v74 + 8 * v34);
    int64_t v36 = v32 + 1;
    if (!v35)
    {
      int64_t v36 = v32 + 2;
      if (v32 + 2 >= v75) {
        goto LABEL_61;
      }
      unint64_t v35 = *(void *)(v74 + 8 * v36);
      if (!v35)
      {
        int64_t v36 = v32 + 3;
        if (v32 + 3 >= v75) {
          goto LABEL_61;
        }
        unint64_t v35 = *(void *)(v74 + 8 * v36);
        if (!v35)
        {
          int64_t v36 = v32 + 4;
          if (v32 + 4 >= v75) {
            goto LABEL_61;
          }
          unint64_t v35 = *(void *)(v74 + 8 * v36);
          if (!v35) {
            break;
          }
        }
      }
    }
LABEL_56:
    uint64_t v79 = (v35 - 1) & v35;
    int64_t v80 = v36;
    unint64_t v33 = __clz(__rbit64(v35)) + (v36 << 6);
LABEL_57:
    uint64_t v38 = *(void *)(v26 + 56);
    uint64_t v39 = *(void *)(v26 + 48) + 112 * v33;
    uint64_t v40 = *(void *)(v39 + 8);
    uint64_t v41 = *(void *)(v39 + 16);
    uint64_t v42 = *(void *)(v39 + 24);
    uint64_t v44 = *(void *)(v39 + 32);
    uint64_t v43 = *(void *)(v39 + 40);
    uint64_t v46 = *(void *)(v39 + 48);
    uint64_t v45 = *(void *)(v39 + 56);
    uint64_t v47 = *(void *)(v39 + 72);
    uint64_t v48 = *(void *)(v39 + 80);
    uint64_t v49 = *(void *)(v39 + 88);
    uint64_t v50 = *(unsigned __int8 *)(v39 + 96);
    uint64_t v81 = *(void *)(v39 + 104);
    uint64_t v51 = *(void *)(v38 + 8 * v33);
    unsigned __int8 v52 = *(unsigned char *)(v39 + 64);
    *(void *)&long long v83 = *(void *)v39;
    *((void *)&v83 + 1) = v40;
    uint64_t v84 = v41;
    uint64_t v85 = v42;
    uint64_t v86 = v44;
    uint64_t v87 = v43;
    uint64_t v88 = v46;
    uint64_t v89 = v45;
    uint64_t v90 = v52;
    uint64_t v91 = v47;
    uint64_t v92 = v48;
    uint64_t v93 = v49;
    uint64_t v94 = v50;
    uint64_t v95 = v81;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24988CD7C(v42, v44, v43, v46, v45, v52);
    sub_24988CDF0(v48);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v16 = v77;
    sub_2498EF0DC(&v83);
    LOBYTE(v43) = v53;
    sub_2498B4BF8((uint64_t)&v83);
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_69;
    }
    uint64_t v54 = swift_bridgeObjectRetain();
    char v55 = sub_2499FE6E8(v54, v51);
    swift_bridgeObjectRelease();
    unint64_t result = swift_bridgeObjectRelease();
    uint64_t v26 = v78;
    unint64_t v31 = v79;
    int64_t v32 = v80;
    if ((v55 & 1) == 0) {
      goto LABEL_68;
    }
  }
  uint64_t v37 = v32 + 5;
  if (v32 + 5 >= v75) {
    goto LABEL_61;
  }
  unint64_t v35 = *(void *)(v74 + 8 * v37);
  if (v35)
  {
    int64_t v36 = v32 + 5;
    goto LABEL_56;
  }
  while (1)
  {
    int64_t v36 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v36 >= v75) {
      goto LABEL_61;
    }
    unint64_t v35 = *(void *)(v74 + 8 * v36);
    ++v37;
    if (v35) {
      goto LABEL_56;
    }
  }
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
  return result;
}

uint64_t sub_249A4F27C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_249A4EB2C(*a1, *a2) & 1) == 0) {
    return 0;
  }

  return sub_2499FF23C(v2, v3);
}

unint64_t EditableTheme.defaultPalette(for:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = *v2;
  uint64_t v7 = v2[1];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_2498E8DEC(v6);
  swift_bridgeObjectRelease();
  uint64_t v32 = v4;
  uint64_t v33 = v5;
  uint64_t v29 = &v32;
  swift_bridgeObjectRetain();
  unint64_t result = sub_2498DCC5C(sub_249A506B0, (uint64_t)v28, (uint64_t)v8);
  if (v10)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
    sub_2498EBBEC(v30);
    uint64_t v24 = (uint64_t)a2;
    return sub_249A506CC((uint64_t)v30, v24);
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (result >= v8[2])
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v27 = a2;
  int64_t v11 = &v8[7 * result];
  uint64_t v12 = v11[8];
  uint64_t v26 = v11[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&v30[0] = v6;
  *((void *)&v30[0] + 1) = v7;
  uint64_t v32 = v4;
  uint64_t v33 = v5;
  uint64_t v13 = EditableTheme.palettes(for:)(&v32);
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v32 = v26;
    uint64_t v33 = v12;
    MEMORY[0x270FA5388](v13);
    void v25[2] = &v32;
    unint64_t result = sub_2498DCB58((uint64_t (*)(_OWORD *))sub_249A50734, (uint64_t)v25, v14);
    if ((v15 & 1) == 0)
    {
      if ((result & 0x8000000000000000) == 0)
      {
        if (result < *(void *)(v14 + 16))
        {
          uint64_t v16 = (_OWORD *)(v14 + (result << 7));
          long long v17 = v16[2];
          long long v18 = v16[3];
          long long v19 = v16[5];
          v30[2] = v16[4];
          v30[3] = v19;
          v30[0] = v17;
          v30[1] = v18;
          long long v20 = v16[6];
          long long v21 = v16[7];
          long long v22 = v16[8];
          *(_OWORD *)&v31[9] = *(_OWORD *)((char *)v16 + 137);
          v30[5] = v21;
          *(_OWORD *)unint64_t v31 = v22;
          v30[4] = v20;
          unint64_t v23 = v27;
          memmove(v27, v16 + 2, 0x79uLL);
          nullsub_1(v23);
          sub_24988E364((uint64_t)v30);
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        goto LABEL_18;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_2498EBBEC(v30);
  uint64_t v24 = (uint64_t)v27;
  return sub_249A506CC((uint64_t)v30, v24);
}

unint64_t EditableTheme.defaultWallpaperID(for:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = *v2;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_2498E8DEC(v6);
  swift_bridgeObjectRelease();
  v14[0] = v4;
  v14[1] = v5;
  v13[2] = v14;
  swift_bridgeObjectRetain();
  unint64_t result = sub_2498DCC5C(sub_249A506B0, (uint64_t)v13, (uint64_t)v7);
  if (v9)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    unint64_t result = swift_release();
    *a2 = 0;
    a2[1] = 0;
  }
  else
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < v7[2])
    {
      char v10 = &v7[7 * result];
      uint64_t v11 = v10[9];
      uint64_t v12 = v10[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      *a2 = v11;
      a2[1] = v12;
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_249A4F70C()
{
  return 0x745374756F79616CLL;
}

uint64_t sub_249A4F72C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x745374756F79616CLL && a2 == 0xEC00000073656C79)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249A4F7DC(uint64_t a1)
{
  unint64_t v2 = sub_249A50754();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A4F818(uint64_t a1)
{
  unint64_t v2 = sub_249A50754();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EditableTheme.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E41A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x263F8EE80];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A50754();
  sub_249AEE428();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E41B0);
    sub_249A507A8();
    sub_249AEDE08();
    uint64_t v10 = sub_2498DAF64(v14);
    swift_bridgeObjectRelease();
    uint64_t v12 = v10;
    sub_249A4C400();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v11 = v13;
    *a2 = v12;
    a2[1] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t EditableTheme.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E41C8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A50754();
  sub_249AEE468();
  sub_249AEDE38();
  swift_getKeyPath();
  swift_bridgeObjectRetain_n();
  swift_retain();
  char v9 = sub_2498E8DEC(v8);
  swift_bridgeObjectRelease();
  v24[0] = (uint64_t)v9;
  sub_2498EA964(v24);
  if (v2)
  {
    swift_release();
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release_n();
    uint64_t v10 = v24[0];
    uint64_t v11 = *(void *)(v24[0] + 16);
    if (v11)
    {
      long long v21 = v7;
      uint64_t v22 = v5;
      uint64_t v23 = v4;
      swift_retain();
      uint64_t v20 = v10;
      uint64_t v12 = (uint64_t *)(v10 + 80);
      do
      {
        uint64_t v13 = *(v12 - 1);
        uint64_t v14 = *v12;
        uint64_t v15 = *(v12 - 3);
        uint64_t v16 = *(v12 - 2);
        uint64_t v17 = *(v12 - 5);
        uint64_t v18 = *(v12 - 4);
        v24[0] = *(v12 - 6);
        v24[1] = v17;
        void v24[2] = v18;
        v24[3] = v15;
        v24[4] = v16;
        v24[5] = v13;
        v24[6] = v14;
        uint64_t v28 = v27;
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
        sub_249A50870();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_249AEDF78();
        v12 += 7;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        --v11;
      }
      while (v11);
      swift_release();
      uint64_t v5 = v22;
      uint64_t v4 = v23;
      uint64_t v7 = v21;
    }
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v25);
  }
  return result;
}

uint64_t sub_249A4FD48@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return EditableTheme.init(from:)(a1, a2);
}

uint64_t sub_249A4FD60(void *a1)
{
  return EditableTheme.encode(to:)(a1);
}

uint64_t sub_249A4FD78(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE08);
  uint64_t result = sub_249AEDA38();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_249AEE338();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    uint64_t result = sub_249AEE388();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

unint64_t sub_249A50010(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3)
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDA8);
  unint64_t result = sub_249AEDA38();
  unint64_t v6 = result;
  if (a2 < 1) {
    unint64_t v8 = 0;
  }
  else {
    unint64_t v8 = *a1;
  }
  uint64_t v9 = 0;
  unint64_t v25 = result + 56;
  while (1)
  {
    if (v8)
    {
      uint64_t v26 = (v8 - 1) & v8;
      uint64_t v27 = v9;
      unint64_t v10 = __clz(__rbit64(v8)) | (v9 << 6);
    }
    else
    {
      uint64_t v11 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_30;
      }
      if (v11 >= a2)
      {
LABEL_27:
        swift_release();
        return v6;
      }
      unint64_t v12 = a1[v11];
      uint64_t v13 = v9 + 1;
      if (!v12)
      {
        uint64_t v13 = v9 + 2;
        if (v9 + 2 >= a2) {
          goto LABEL_27;
        }
        unint64_t v12 = a1[v13];
        if (!v12)
        {
          uint64_t v13 = v9 + 3;
          if (v9 + 3 >= a2) {
            goto LABEL_27;
          }
          unint64_t v12 = a1[v13];
          if (!v12)
          {
            uint64_t v14 = v9 + 4;
            if (v9 + 4 >= a2) {
              goto LABEL_27;
            }
            unint64_t v12 = a1[v14];
            if (!v12)
            {
              while (1)
              {
                uint64_t v13 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  goto LABEL_31;
                }
                if (v13 >= a2) {
                  goto LABEL_27;
                }
                unint64_t v12 = a1[v13];
                ++v14;
                if (v12) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v9 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v26 = (v12 - 1) & v12;
      uint64_t v27 = v13;
      unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    }
    uint64_t v15 = *(void *)(a4 + 48) + 56 * v10;
    uint64_t v16 = *(void *)v15;
    uint64_t v17 = *(void *)(v15 + 24);
    uint64_t v18 = *(void *)(v15 + 32);
    uint64_t v20 = *(void *)(v15 + 40);
    uint64_t v19 = *(void *)(v15 + 48);
    long long v28 = *(_OWORD *)(v15 + 8);
    sub_249AEE338();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24988B990((uint64_t)v29, *((uint64_t *)&v28 + 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    sub_249AEE388();
    unint64_t result = sub_249AED9B8();
    *(void *)(v25 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v21 = *(void *)(v6 + 48) + 56 * result;
    *(void *)uint64_t v21 = v16;
    *(_OWORD *)(v21 + 8) = v28;
    *(void *)(v21 + 24) = v17;
    *(void *)(v21 + 32) = v18;
    *(void *)(v21 + 40) = v20;
    *(void *)(v21 + 48) = v19;
    ++*(void *)(v6 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    unint64_t v8 = v26;
    uint64_t v9 = v27;
    if (!v5) {
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

unint64_t sub_249A50320(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  unint64_t v22 = (unint64_t *)result;
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    unint64_t v13 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v14 = v13 | (v7 << 6);
LABEL_20:
    uint64_t v18 = (unint64_t *)(*(void *)(a3 + 48) + 56 * v14);
    unint64_t result = *v18;
    if (*v18 != *a4 || v18[1] != a4[1])
    {
      unint64_t result = sub_249AEE0D8();
      if ((result & 1) == 0)
      {
        *(unint64_t *)((char *)v22 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        if (__OFADD__(v6++, 1))
        {
          __break(1u);
LABEL_28:
          swift_retain();
          return sub_249A50010(v22, a2, v6, a3);
        }
      }
    }
  }
  int64_t v15 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v15 >= v12) {
    goto LABEL_28;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v15);
  ++v7;
  if (v16) {
    goto LABEL_19;
  }
  int64_t v7 = v15 + 1;
  if (v15 + 1 >= v12) {
    goto LABEL_28;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v7);
  if (v16) {
    goto LABEL_19;
  }
  int64_t v7 = v15 + 2;
  if (v15 + 2 >= v12) {
    goto LABEL_28;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v7);
  if (v16)
  {
LABEL_19:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v7 << 6);
    goto LABEL_20;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v12) {
    goto LABEL_28;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16)
  {
    int64_t v7 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_28;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_19;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_249A504D4(uint64_t a1, void *a2)
{
  v13[1] = *MEMORY[0x263EF8340];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  sub_2498DB3AC((uint64_t)a2);
  uint64_t isStackAllocationSafe = sub_2498DB3AC((uint64_t)a2);
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    sub_2498DB3AC((uint64_t)a2);
    unint64_t v10 = sub_249A50320((unint64_t)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a1, a2);
    sub_2498EB45C((uint64_t)a2);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
    sub_2498EB45C((uint64_t)a2);
    sub_2498EB45C((uint64_t)a2);
  }
  else
  {
    unint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    sub_2498DB3AC((uint64_t)a2);
    unint64_t v10 = sub_249A50320((unint64_t)v11, v7, a1, a2);
    sub_2498EB45C((uint64_t)a2);
    swift_release();
    MEMORY[0x24C5B0110](v11, -1, -1);
    sub_2498EB45C((uint64_t)a2);
    sub_2498EB45C((uint64_t)a2);
  }
  return v10;
}

uint64_t sub_249A506B0(void *a1)
{
  return sub_249896AEC(a1) & 1;
}

uint64_t sub_249A506CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_249A50734(void *a1)
{
  return sub_2498E9568(a1, *(void **)(v1 + 16)) & 1;
}

unint64_t sub_249A50754()
{
  unint64_t result = qword_2696E41A8;
  if (!qword_2696E41A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E41A8);
  }
  return result;
}

unint64_t sub_249A507A8()
{
  unint64_t result = qword_2696E41B8;
  if (!qword_2696E41B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E41B0);
    sub_249A5081C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E41B8);
  }
  return result;
}

unint64_t sub_249A5081C()
{
  unint64_t result = qword_2696E41C0;
  if (!qword_2696E41C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E41C0);
  }
  return result;
}

unint64_t sub_249A50870()
{
  unint64_t result = qword_2696E41D0;
  if (!qword_2696E41D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E41D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for EditableTheme()
{
  return &type metadata for EditableTheme;
}

unsigned char *storeEnumTagSinglePayload for EditableTheme.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x249A50970);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EditableTheme.CodingKeys()
{
  return &type metadata for EditableTheme.CodingKeys;
}

unint64_t sub_249A509AC()
{
  unint64_t result = qword_2696E41D8;
  if (!qword_2696E41D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E41D8);
  }
  return result;
}

unint64_t sub_249A50A04()
{
  unint64_t result = qword_2696E41E0;
  if (!qword_2696E41E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E41E0);
  }
  return result;
}

unint64_t sub_249A50A5C()
{
  unint64_t result = qword_2696E41E8;
  if (!qword_2696E41E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E41E8);
  }
  return result;
}

uint64_t NotificationSymbolConfiguration.font.getter()
{
  return swift_retain();
}

uint64_t NotificationSymbolConfiguration.font.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*NotificationSymbolConfiguration.font.modify())()
{
  return nullsub_1;
}

uint64_t NotificationSymbolConfiguration.containerMinSize.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t NotificationSymbolConfiguration.containerMinSize.setter(uint64_t result, uint64_t a2, char a3)
{
  *(void *)(v3 + 8) = result;
  *(void *)(v3 + 16) = a2;
  *(unsigned char *)(v3 + 24) = a3 & 1;
  return result;
}

uint64_t (*NotificationSymbolConfiguration.containerMinSize.modify())()
{
  return nullsub_1;
}

uint64_t NotificationSymbolConfiguration.scale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 24);
  uint64_t v4 = sub_249AEC9B8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for NotificationSymbolConfiguration(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696E4478);
}

uint64_t NotificationSymbolConfiguration.scale.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 24);
  uint64_t v4 = sub_249AEC9B8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NotificationSymbolConfiguration.scale.modify())(void)
{
  return nullsub_1;
}

double NotificationSymbolConfiguration.padding.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 28));
}

uint64_t NotificationSymbolConfiguration.padding.setter(double a1, double a2, double a3, double a4)
{
  uint64_t result = type metadata accessor for NotificationSymbolConfiguration(0);
  unint64_t v10 = (double *)(v4 + *(int *)(result + 28));
  *unint64_t v10 = a1;
  v10[1] = a2;
  uint64_t v10[2] = a3;
  _OWORD v10[3] = a4;
  return result;
}

uint64_t (*NotificationSymbolConfiguration.padding.modify())(void)
{
  return nullsub_1;
}

uint64_t NotificationSymbolConfiguration.init(font:containerMinSize:scale:padding:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>)
{
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(unsigned char *)(a6 + 24) = a4 & 1;
  uint64_t v16 = type metadata accessor for NotificationSymbolConfiguration(0);
  uint64_t v17 = a6 + *(int *)(v16 + 24);
  uint64_t v18 = sub_249AEC9B8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v17, a5, v18);
  uint64_t v20 = (double *)(a6 + *(int *)(v16 + 28));
  *uint64_t v20 = a7;
  v20[1] = a8;
  uint64_t v20[2] = a9;
  void v20[3] = a10;
  return result;
}

uint64_t NotificationTextConfiguration.titleFont.getter()
{
  return swift_retain();
}

uint64_t NotificationTextConfiguration.titleFont.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*NotificationTextConfiguration.titleFont.modify())()
{
  return nullsub_1;
}

uint64_t NotificationTextConfiguration.bodyFont.getter()
{
  return swift_retain();
}

uint64_t NotificationTextConfiguration.bodyFont.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*NotificationTextConfiguration.bodyFont.modify())()
{
  return nullsub_1;
}

uint64_t NotificationTextConfiguration.titleForegroundStyle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_249882C34(v1 + 16, a1);
}

uint64_t NotificationTextConfiguration.titleForegroundStyle.setter(long long *a1)
{
  uint64_t v3 = v1 + 16;
  __swift_destroy_boxed_opaque_existential_2Tm(v3);

  return sub_249882BCC(a1, v3);
}

uint64_t (*NotificationTextConfiguration.titleForegroundStyle.modify())()
{
  return nullsub_1;
}

uint64_t NotificationTextConfiguration.bodyForegroundStyle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_249882C34(v1 + 56, a1);
}

uint64_t NotificationTextConfiguration.bodyForegroundStyle.setter(long long *a1)
{
  uint64_t v3 = v1 + 56;
  __swift_destroy_boxed_opaque_existential_2Tm(v3);

  return sub_249882BCC(a1, v3);
}

uint64_t (*NotificationTextConfiguration.bodyForegroundStyle.modify())()
{
  return nullsub_1;
}

double NotificationTextConfiguration.xPadding.getter()
{
  return *(double *)(v0 + 96);
}

void NotificationTextConfiguration.xPadding.setter(double a1)
{
  *(double *)(v1 + 96) = a1;
}

uint64_t (*NotificationTextConfiguration.xPadding.modify())()
{
  return nullsub_1;
}

double NotificationTextConfiguration.yPadding.getter()
{
  return *(double *)(v0 + 104);
}

void NotificationTextConfiguration.yPadding.setter(double a1)
{
  *(double *)(v1 + 104) = a1;
}

uint64_t (*NotificationTextConfiguration.yPadding.modify())()
{
  return nullsub_1;
}

double NotificationTextConfiguration.intertextPadding.getter()
{
  return *(double *)(v0 + 112);
}

void NotificationTextConfiguration.intertextPadding.setter(double a1)
{
  *(double *)(v1 + 112) = a1;
}

uint64_t (*NotificationTextConfiguration.intertextPadding.modify())()
{
  return nullsub_1;
}

uint64_t NotificationTextConfiguration.lineLimit.getter()
{
  return *(void *)(v0 + 120);
}

uint64_t NotificationTextConfiguration.lineLimit.setter(uint64_t result)
{
  *(void *)(v1 + 120) = result;
  return result;
}

uint64_t (*NotificationTextConfiguration.lineLimit.modify())()
{
  return nullsub_1;
}

uint64_t NotificationTextConfiguration.leadingAlignment.getter()
{
  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t NotificationTextConfiguration.leadingAlignment.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 128) = result;
  return result;
}

uint64_t (*NotificationTextConfiguration.leadingAlignment.modify())()
{
  return nullsub_1;
}

double NotificationTextConfiguration.minimumScaleFactor.getter()
{
  return *(double *)(v0 + 136);
}

void NotificationTextConfiguration.minimumScaleFactor.setter(double a1)
{
  *(double *)(v1 + 136) = a1;
}

uint64_t (*NotificationTextConfiguration.minimumScaleFactor.modify())()
{
  return nullsub_1;
}

uint64_t NotificationTextConfiguration.init(titleFont:bodyFont:titleForegroundStyle:bodyForegroundStyle:xPadding:yPadding:intertextPadding:lineLimit:leadingAlignment:minimumScaleFactor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>)
{
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  sub_249882BCC(a3, a7 + 16);
  uint64_t result = sub_249882BCC(a4, a7 + 56);
  *(double *)(a7 + 96) = a8;
  *(double *)(a7 + 104) = a9;
  *(double *)(a7 + 112) = a10;
  *(void *)(a7 + 120) = a5;
  *(unsigned char *)(a7 + 128) = a6;
  *(double *)(a7 + 136) = a11;
  return result;
}

uint64_t UserInteractiveConfiguration.buttonConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v2;
  *(void *)(a1 + 40) = v3;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(v1 + 48);
  swift_retain();

  return swift_retain();
}

__n128 UserInteractiveConfiguration.buttonConfiguration.setter(long long *a1)
{
  long long v8 = *a1;
  uint64_t v3 = *((void *)a1 + 2);
  uint64_t v4 = *((void *)a1 + 3);
  uint64_t v5 = *((void *)a1 + 6);
  uint64_t v6 = *((void *)a1 + 7);
  swift_release();
  swift_release();
  *(_OWORD *)uint64_t v1 = v8;
  *(void *)(v1 + 16) = v3;
  *(void *)(v1 + 24) = v4;
  __n128 result = (__n128)a1[2];
  *(__n128 *)(v1 + 32) = result;
  *(void *)(v1 + 48) = v5;
  *(void *)(v1 + 56) = v6;
  return result;
}

uint64_t (*UserInteractiveConfiguration.buttonConfiguration.modify())()
{
  return nullsub_1;
}

uint64_t UserInteractiveConfiguration.leadingSymbol.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t UserInteractiveConfiguration.leadingSymbol.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 64) = result;
  return result;
}

uint64_t (*UserInteractiveConfiguration.leadingSymbol.modify())()
{
  return nullsub_1;
}

double UserInteractiveConfiguration.platterCornerRadius.getter()
{
  return *(double *)(v0 + 72);
}

void UserInteractiveConfiguration.platterCornerRadius.setter(double a1)
{
  *(double *)(v1 + 72) = a1;
}

uint64_t (*UserInteractiveConfiguration.platterCornerRadius.modify())()
{
  return nullsub_1;
}

uint64_t UserInteractiveConfiguration.symbolConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_249A51DE0(type metadata accessor for UserInteractiveConfiguration, a1);
}

uint64_t type metadata accessor for UserInteractiveConfiguration(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696E4488);
}

uint64_t UserInteractiveConfiguration.symbolConfiguration.setter(uint64_t a1)
{
  return sub_249A51E4C(a1, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t (*UserInteractiveConfiguration.symbolConfiguration.modify())(void)
{
  return nullsub_1;
}

uint64_t UserInteractiveConfiguration.textConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_249A51EFC(type metadata accessor for UserInteractiveConfiguration, a1);
}

uint64_t sub_249A51334(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t UserInteractiveConfiguration.textConfiguration.setter(uint64_t a1)
{
  return sub_249A51F60(a1, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t sub_249A51384(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t (*UserInteractiveConfiguration.textConfiguration.modify())(void)
{
  return nullsub_1;
}

uint64_t UserInteractiveConfiguration.maxNotificationSize.getter()
{
  return sub_249A52008(type metadata accessor for UserInteractiveConfiguration);
}

uint64_t UserInteractiveConfiguration.maxNotificationSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  return sub_249A52054(a1, a2, a3, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t (*UserInteractiveConfiguration.maxNotificationSize.modify())(void)
{
  return nullsub_1;
}

uint64_t UserInteractiveConfiguration.minNotificationSize.getter()
{
  return sub_249A52104(type metadata accessor for UserInteractiveConfiguration);
}

uint64_t UserInteractiveConfiguration.minNotificationSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  return sub_249A52150(a1, a2, a3, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t (*UserInteractiveConfiguration.minNotificationSize.modify())(void)
{
  return nullsub_1;
}

uint64_t UserInteractiveConfiguration.pushToBottom.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for UserInteractiveConfiguration(0) + 44));
}

uint64_t UserInteractiveConfiguration.pushToBottom.setter(char a1)
{
  return sub_249A52224(a1, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t (*UserInteractiveConfiguration.pushToBottom.modify())(void)
{
  return nullsub_1;
}

uint64_t UserInteractiveConfiguration.platterBackgroundMaterial.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UserInteractiveConfiguration(0) + 48);
  uint64_t v4 = sub_249AECBE8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t UserInteractiveConfiguration.platterBackgroundMaterial.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UserInteractiveConfiguration(0) + 48);
  uint64_t v4 = sub_249AECBE8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*UserInteractiveConfiguration.platterBackgroundMaterial.modify())(void)
{
  return nullsub_1;
}

uint64_t UserInteractiveConfiguration.shadowConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UserInteractiveConfiguration(0) + 52);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_retain();
}

__n128 UserInteractiveConfiguration.shadowConfiguration.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  uint64_t v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for UserInteractiveConfiguration(0) + 52));
  swift_release();
  __n128 result = v5;
  *uint64_t v3 = v5;
  v3[1].n128_u64[0] = v2;
  return result;
}

uint64_t (*UserInteractiveConfiguration.shadowConfiguration.modify())(void)
{
  return nullsub_1;
}

double UserInteractiveConfiguration.init(buttonConfiguration:leadingSymbol:platterCornerRadius:symbolConfiguration:textConfiguration:pushToBottom:maxNotificationSize:minNotificationSize:platterBackgroundMaterial:shadowConfiguration:)@<D0>(long long *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, unsigned __int8 a13, uint64_t a14, uint64_t a15)
{
  int v46 = a8;
  uint64_t v43 = a6;
  uint64_t v44 = a7;
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  int v41 = a13;
  int v42 = a5;
  uint64_t v39 = a11;
  uint64_t v40 = a12;
  uint64_t v45 = a14;
  uint64_t v19 = sub_249AECBE8();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  unint64_t v22 = (char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v36 = *a1;
  uint64_t v23 = *((void *)a1 + 2);
  uint64_t v24 = *((void *)a1 + 3);
  uint64_t v25 = *((void *)a1 + 6);
  uint64_t v26 = *((void *)a1 + 7);
  *(_OWORD *)uint64_t v48 = *(_OWORD *)a15;
  uint64_t v47 = *(void *)(a15 + 16);
  uint64_t v27 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
  uint64_t v28 = a9 + v27[9];
  uint64_t v29 = a9 + v27[10];
  uint64_t v30 = (void *)(a9 + v27[13]);
  v30[1] = 0;
  v30[2] = 0;
  *uint64_t v30 = 0;
  *(_OWORD *)a9 = v36;
  *(void *)(a9 + 16) = v23;
  *(void *)(a9 + 24) = v24;
  *(_OWORD *)(a9 + 32) = a1[2];
  *(void *)(a9 + 48) = v25;
  *(void *)(a9 + 56) = v26;
  *(unsigned char *)(a9 + 64) = a2;
  *(double *)(a9 + 72) = a10;
  uint64_t v31 = v37;
  sub_249A51B50(v37, a9 + v27[7], type metadata accessor for NotificationSymbolConfiguration);
  uint64_t v32 = v38;
  sub_249A51334(v38, a9 + v27[8]);
  *(unsigned char *)(a9 + v27[11]) = v42;
  uint64_t v33 = v44;
  *(void *)uint64_t v28 = v43;
  *(void *)(v28 + 8) = v33;
  *(unsigned char *)(v28 + 16) = v46 & 1;
  uint64_t v34 = v40;
  *(void *)uint64_t v29 = v39;
  *(void *)(v29 + 8) = v34;
  *(unsigned char *)(v29 + 16) = v41 & 1;
  sub_249AECBD8();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v45, v19);
  sub_249A51A0C(v32);
  sub_249A543A0(v31, type metadata accessor for NotificationSymbolConfiguration);
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(a9 + v27[12], v22, v19);
  swift_release();
  double result = v48[0];
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v48;
  v30[2] = v47;
  return result;
}

uint64_t sub_249A51A0C(uint64_t a1)
{
  return a1;
}

uint64_t sub_249A51A3C()
{
  uint64_t result = sub_249AEC8F8();
  qword_26972C7E8 = result;
  return result;
}

uint64_t sub_249A51A5C()
{
  uint64_t result = sub_249AEC908();
  qword_26972C7F0 = result;
  return result;
}

double UserInteractiveConfiguration.ButtonConfiguration.interButtonPadding.getter()
{
  return *(double *)v0;
}

double UserInteractiveConfiguration.ButtonConfiguration.xPadding.getter()
{
  return *(double *)(v0 + 8);
}

double UserInteractiveConfiguration.ButtonConfiguration.height.getter()
{
  return *(double *)(v0 + 16);
}

double UserInteractiveConfiguration.ButtonConfiguration.maxWidth.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t UserInteractiveConfiguration.ButtonConfiguration.fill.getter()
{
  return swift_retain();
}

uint64_t UserInteractiveConfiguration.ButtonConfiguration.buttonLabelFont.getter()
{
  return swift_retain();
}

uint64_t UserInteractiveConfiguration.ButtonConfiguration.buttonLabelFont.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*UserInteractiveConfiguration.ButtonConfiguration.buttonLabelFont.modify())()
{
  return nullsub_1;
}

double UserInteractiveConfiguration.ButtonConfiguration.cornerRadius.getter()
{
  return *(double *)(v0 + 48);
}

double UserInteractiveConfiguration.ButtonConfiguration.lineWidth.getter()
{
  return *(double *)(v0 + 56);
}

uint64_t UserInteractiveConfiguration.ButtonConfiguration.init(interButtonPadding:xPadding:height:maxWidth:fill:buttonLabelFont:cornerRadius:lineWidth:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>, double a8@<D4>, double a9@<D5>)
{
  *(double *)a3 = a4;
  *(double *)(a3 + 8) = a5;
  *(double *)(a3 + 16) = a6;
  *(double *)(a3 + 24) = a7;
  *(void *)(a3 + 32) = result;
  *(void *)(a3 + 40) = a2;
  *(double *)(a3 + 48) = a8;
  *(double *)(a3 + 56) = a9;
  return result;
}

uint64_t BannerConfiguration.buttonConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_249A51B50(v1, a1, type metadata accessor for IconNotificationButtonConfiguration);
}

uint64_t sub_249A51B50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t BannerConfiguration.buttonConfiguration.setter(uint64_t a1)
{
  return sub_249A51BE8(a1, v1, type metadata accessor for IconNotificationButtonConfiguration);
}

uint64_t sub_249A51BE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t (*BannerConfiguration.buttonConfiguration.modify())()
{
  return nullsub_1;
}

double BannerConfiguration.platterCornerRadius.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for BannerConfiguration(0) + 20));
}

uint64_t type metadata accessor for BannerConfiguration(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696E4498);
}

uint64_t BannerConfiguration.platterCornerRadius.setter(double a1)
{
  uint64_t result = type metadata accessor for BannerConfiguration(0);
  *(double *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*BannerConfiguration.platterCornerRadius.modify())(void)
{
  return nullsub_1;
}

uint64_t BannerConfiguration.includeCloseButtonAffordance.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for BannerConfiguration(0) + 24));
}

uint64_t BannerConfiguration.includeCloseButtonAffordance.setter(char a1)
{
  uint64_t result = type metadata accessor for BannerConfiguration(0);
  *(unsigned char *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*BannerConfiguration.includeCloseButtonAffordance.modify())(void)
{
  return nullsub_1;
}

uint64_t BannerConfiguration.symbolConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_249A51DE0(type metadata accessor for BannerConfiguration, a1);
}

uint64_t sub_249A51DE0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1(0);
  return sub_249A51B50(v2 + *(int *)(v4 + 28), a2, type metadata accessor for NotificationSymbolConfiguration);
}

uint64_t BannerConfiguration.symbolConfiguration.setter(uint64_t a1)
{
  return sub_249A51E4C(a1, type metadata accessor for BannerConfiguration);
}

uint64_t sub_249A51E4C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = a2(0);
  return sub_249A51BE8(a1, v2 + *(int *)(v4 + 28), type metadata accessor for NotificationSymbolConfiguration);
}

uint64_t (*BannerConfiguration.symbolConfiguration.modify())(void)
{
  return nullsub_1;
}

uint64_t BannerConfiguration.textConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_249A51EFC(type metadata accessor for BannerConfiguration, a1);
}

uint64_t sub_249A51EFC@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 32);

  return sub_249A51334(v4, a2);
}

uint64_t BannerConfiguration.textConfiguration.setter(uint64_t a1)
{
  return sub_249A51F60(a1, type metadata accessor for BannerConfiguration);
}

uint64_t sub_249A51F60(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 32);

  return sub_249A51384(a1, v4);
}

uint64_t (*BannerConfiguration.textConfiguration.modify())(void)
{
  return nullsub_1;
}

uint64_t BannerConfiguration.maxNotificationSize.getter()
{
  return sub_249A52008(type metadata accessor for BannerConfiguration);
}

uint64_t sub_249A52008(uint64_t (*a1)(void))
{
  return *(void *)(v1 + *(int *)(a1(0) + 36));
}

uint64_t BannerConfiguration.maxNotificationSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  return sub_249A52054(a1, a2, a3, type metadata accessor for BannerConfiguration);
}

uint64_t sub_249A52054(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void))
{
  uint64_t result = a4(0);
  uint64_t v9 = v4 + *(int *)(result + 36);
  *(void *)uint64_t v9 = a1;
  *(void *)(v9 + 8) = a2;
  *(unsigned char *)(v9 + 16) = a3 & 1;
  return result;
}

uint64_t (*BannerConfiguration.maxNotificationSize.modify())(void)
{
  return nullsub_1;
}

uint64_t BannerConfiguration.minNotificationSize.getter()
{
  return sub_249A52104(type metadata accessor for BannerConfiguration);
}

uint64_t sub_249A52104(uint64_t (*a1)(void))
{
  return *(void *)(v1 + *(int *)(a1(0) + 40));
}

uint64_t BannerConfiguration.minNotificationSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  return sub_249A52150(a1, a2, a3, type metadata accessor for BannerConfiguration);
}

uint64_t sub_249A52150(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void))
{
  uint64_t result = a4(0);
  uint64_t v9 = v4 + *(int *)(result + 40);
  *(void *)uint64_t v9 = a1;
  *(void *)(v9 + 8) = a2;
  *(unsigned char *)(v9 + 16) = a3 & 1;
  return result;
}

uint64_t (*BannerConfiguration.minNotificationSize.modify())(void)
{
  return nullsub_1;
}

uint64_t BannerConfiguration.pushToBottom.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for BannerConfiguration(0) + 44));
}

uint64_t BannerConfiguration.pushToBottom.setter(char a1)
{
  return sub_249A52224(a1, type metadata accessor for BannerConfiguration);
}

uint64_t sub_249A52224(char a1, uint64_t (*a2)(void))
{
  uint64_t result = a2(0);
  *(unsigned char *)(v2 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*BannerConfiguration.pushToBottom.modify())(void)
{
  return nullsub_1;
}

uint64_t BannerConfiguration.shadowConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BannerConfiguration(0) + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_retain();
}

__n128 BannerConfiguration.shadowConfiguration.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  uint64_t v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for BannerConfiguration(0) + 48));
  swift_release();
  __n128 result = v5;
  *uint64_t v3 = v5;
  v3[1].n128_u64[0] = v2;
  return result;
}

uint64_t (*BannerConfiguration.shadowConfiguration.modify())(void)
{
  return nullsub_1;
}

__n128 BannerConfiguration.init(buttonConfiguration:platterCornerRadius:symbolConfiguration:textConfiguration:includeCloseButtonAffordance:pushToBottom:maxNotificationSize:minNotificationSize:shadowConfiguration:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, char a13, __n128 *a14)
{
  __n128 v31 = *a14;
  unint64_t v30 = a14[1].n128_u64[0];
  uint64_t v20 = (int *)type metadata accessor for BannerConfiguration(0);
  uint64_t v21 = a9 + v20[9];
  uint64_t v22 = a9 + v20[10];
  uint64_t v23 = (__n128 *)(a9 + v20[12]);
  sub_249A52514(a1, a9, type metadata accessor for IconNotificationButtonConfiguration);
  *(double *)(a9 + v20[5]) = a10;
  sub_249A52514(a2, a9 + v20[7], type metadata accessor for NotificationSymbolConfiguration);
  uint64_t v24 = (_OWORD *)(a9 + v20[8]);
  long long v25 = a3[7];
  v24[6] = a3[6];
  uint64_t v24[7] = v25;
  v24[8] = a3[8];
  long long v26 = a3[3];
  void v24[2] = a3[2];
  v24[3] = v26;
  long long v27 = a3[5];
  v24[4] = a3[4];
  v24[5] = v27;
  long long v28 = a3[1];
  *uint64_t v24 = *a3;
  v24[1] = v28;
  *(unsigned char *)(a9 + v20[6]) = a4;
  *(unsigned char *)(a9 + v20[11]) = a5;
  *(void *)uint64_t v21 = a6;
  *(void *)(v21 + 8) = a7;
  *(unsigned char *)(v21 + 16) = a8 & 1;
  *(void *)uint64_t v22 = a11;
  *(void *)(v22 + 8) = a12;
  *(unsigned char *)(v22 + 16) = a13 & 1;
  __n128 result = v31;
  *uint64_t v23 = v31;
  v23[1].n128_u64[0] = v30;
  return result;
}

uint64_t sub_249A52514(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

double NoticeConfiguration.platterCornerRadius.getter()
{
  return *(double *)v0;
}

void NoticeConfiguration.platterCornerRadius.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*NoticeConfiguration.platterCornerRadius.modify())()
{
  return nullsub_1;
}

uint64_t NoticeConfiguration.symbolConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for NoticeConfiguration(0);
  return sub_249A51B50(v1 + *(int *)(v3 + 20), a1, type metadata accessor for NotificationSymbolConfiguration);
}

uint64_t type metadata accessor for NoticeConfiguration(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696E44A8);
}

uint64_t NoticeConfiguration.symbolConfiguration.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for NoticeConfiguration(0);
  return sub_249A51BE8(a1, v1 + *(int *)(v3 + 20), type metadata accessor for NotificationSymbolConfiguration);
}

uint64_t (*NoticeConfiguration.symbolConfiguration.modify())(void)
{
  return nullsub_1;
}

uint64_t NoticeConfiguration.textConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NoticeConfiguration(0) + 24);

  return sub_249A51334(v3, a1);
}

uint64_t NoticeConfiguration.textConfiguration.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NoticeConfiguration(0) + 24);

  return sub_249A51384(a1, v3);
}

uint64_t (*NoticeConfiguration.textConfiguration.modify())(void)
{
  return nullsub_1;
}

uint64_t NoticeConfiguration.maxNotificationSize.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for NoticeConfiguration(0) + 28));
}

uint64_t NoticeConfiguration.maxNotificationSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = type metadata accessor for NoticeConfiguration(0);
  uint64_t v8 = v3 + *(int *)(result + 28);
  *(void *)uint64_t v8 = a1;
  *(void *)(v8 + 8) = a2;
  *(unsigned char *)(v8 + 16) = a3 & 1;
  return result;
}

uint64_t (*NoticeConfiguration.maxNotificationSize.modify())(void)
{
  return nullsub_1;
}

uint64_t NoticeConfiguration.minNotificationSize.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for NoticeConfiguration(0) + 32));
}

uint64_t NoticeConfiguration.minNotificationSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = type metadata accessor for NoticeConfiguration(0);
  uint64_t v8 = v3 + *(int *)(result + 32);
  *(void *)uint64_t v8 = a1;
  *(void *)(v8 + 8) = a2;
  *(unsigned char *)(v8 + 16) = a3 & 1;
  return result;
}

uint64_t (*NoticeConfiguration.minNotificationSize.modify())(void)
{
  return nullsub_1;
}

uint64_t NoticeConfiguration.pushToBottom.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for NoticeConfiguration(0) + 36));
}

uint64_t NoticeConfiguration.pushToBottom.setter(char a1)
{
  uint64_t result = type metadata accessor for NoticeConfiguration(0);
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*NoticeConfiguration.pushToBottom.modify())(void)
{
  return nullsub_1;
}

uint64_t NoticeConfiguration.shadowConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NoticeConfiguration(0) + 40);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_retain();
}

__n128 NoticeConfiguration.shadowConfiguration.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  uint64_t v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for NoticeConfiguration(0) + 40));
  swift_release();
  __n128 result = v5;
  *uint64_t v3 = v5;
  v3[1].n128_u64[0] = v2;
  return result;
}

uint64_t (*NoticeConfiguration.shadowConfiguration.modify())(void)
{
  return nullsub_1;
}

__n128 NoticeConfiguration.init(platterCornerRadius:symbolConfiguration:textConfiguration:pushToBottom:maxNotificationSize:minNotificationSize:shadowConfiguration:)@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, double *a9@<X8>, double a10@<D0>, char a11, __n128 *a12)
{
  __n128 v29 = *a12;
  unint64_t v18 = a12[1].n128_u64[0];
  uint64_t v19 = (int *)type metadata accessor for NoticeConfiguration(0);
  uint64_t v20 = (char *)a9 + v19[7];
  uint64_t v21 = (char *)a9 + v19[8];
  uint64_t v22 = (__n128 *)((char *)a9 + v19[10]);
  *a9 = a10;
  sub_249A52514(a1, (uint64_t)a9 + v19[5], type metadata accessor for NotificationSymbolConfiguration);
  uint64_t v23 = (_OWORD *)((char *)a9 + v19[6]);
  long long v24 = a2[7];
  v23[6] = a2[6];
  v23[7] = v24;
  v23[8] = a2[8];
  long long v25 = a2[3];
  void v23[2] = a2[2];
  v23[3] = v25;
  long long v26 = a2[5];
  v23[4] = a2[4];
  v23[5] = v26;
  long long v27 = a2[1];
  *uint64_t v23 = *a2;
  v23[1] = v27;
  *((unsigned char *)a9 + v19[9]) = a3;
  *(void *)uint64_t v20 = a4;
  *((void *)v20 + 1) = a5;
  v20[16] = a6 & 1;
  *(void *)uint64_t v21 = a7;
  *((void *)v21 + 1) = a8;
  v21[16] = a11 & 1;
  __n128 result = v29;
  *uint64_t v22 = v29;
  v22[1].n128_u64[0] = v18;
  return result;
}

double sub_249A52BC8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A58);
  MEMORY[0x270FA5388](v0 - 8);
  unint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for NotificationSymbolConfiguration(0);
  __swift_allocate_value_buffer(v3, qword_2696E41F0);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_2696E41F0);
  uint64_t v5 = sub_249AEC548();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
  sub_249AEC588();
  sub_249A58EAC((uint64_t)v2);
  sub_249AEC578();
  uint64_t v6 = sub_249AEC598();
  swift_release();
  uint64_t v7 = v4 + *(int *)(v3 + 24);
  uint64_t v8 = *MEMORY[0x263F1B530];
  uint64_t v9 = sub_249AEC9B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  *(void *)uint64_t v4 = v6;
  *(_OWORD *)(v4 + 8) = xmmword_249B08550;
  *(unsigned char *)(v4 + 24) = 0;
  unint64_t v10 = (_OWORD *)(v4 + *(int *)(v3 + 28));
  double result = 0.0;
  *unint64_t v10 = xmmword_249B08560;
  v10[1] = xmmword_249B08560;
  return result;
}

uint64_t static NotificationSymbolConfiguration.default.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD798 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for NotificationSymbolConfiguration(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2696E41F0);
  return sub_249A51B50(v3, a1, type metadata accessor for NotificationSymbolConfiguration);
}

uint64_t sub_249A52DE0(uint64_t a1)
{
  return sub_249A52F50(a1, &qword_26972C7F8);
}

double sub_249A52DEC()
{
  if (qword_2696DD7A0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_26972C7F8;
  sub_249AEC578();
  uint64_t v1 = sub_249AEC598();
  swift_retain();
  int v2 = sub_249AEC2A8();
  uint64_t v3 = MEMORY[0x263F19E50];
  uint64_t v4 = MEMORY[0x263F19E40];
  uint64_t v8 = MEMORY[0x263F19E50];
  uint64_t v9 = MEMORY[0x263F19E40];
  LODWORD(v7) = v2;
  int v5 = sub_249AEC2C8();
  qword_2696E4258 = v3;
  unk_2696E4260 = v4;
  dword_2696E4240 = v5;
  qword_2696E4208 = v1;
  *(void *)algn_2696E4210 = v0;
  sub_249882BCC(&v7, (uint64_t)&algn_2696E4210[8]);
  double result = 44.0;
  xmmword_2696E4268 = xmmword_249B08570;
  qword_2696E4278 = 0x4020000000000000;
  unk_2696E4280 = 8;
  byte_2696E4288 = 1;
  qword_2696E4290 = 0x3FF0000000000000;
  return result;
}

uint64_t static NotificationTextConfiguration.default.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD7A8 != -1) {
    swift_once();
  }

  return sub_249A51334((uint64_t)&qword_2696E4208, a1);
}

uint64_t sub_249A52F44(uint64_t a1)
{
  return sub_249A52F50(a1, &qword_26972C800);
}

uint64_t sub_249A52F50(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A58);
  MEMORY[0x270FA5388](v3 - 8);
  int v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_249AEC548();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = sub_249AEC588();
  uint64_t result = sub_249A58EAC((uint64_t)v5);
  *a2 = v7;
  return result;
}

double sub_249A53028()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A58);
  MEMORY[0x270FA5388](v0 - 8);
  int v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = objc_msgSend(self, sel__carSystemQuaternaryColor);
  uint64_t v4 = MEMORY[0x24C5ADAC0](v3);
  sub_249AEC578();
  uint64_t v5 = sub_249AEC548();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
  uint64_t v6 = sub_249AEC588();
  sub_249A58EAC((uint64_t)v2);
  xmmword_2696E4298 = xmmword_249B08580;
  *(_OWORD *)&qword_2696E42A8 = xmmword_249B08590;
  qword_2696E42B8 = v4;
  unk_2696E42C0 = v6;
  double result = 20.0;
  xmmword_2696E42C8 = xmmword_249B085A0;
  return result;
}

double sub_249A53154()
{
  if (qword_2696DD7B0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_26972C800;
  sub_249AEC578();
  uint64_t v1 = sub_249AEC598();
  swift_retain();
  int v2 = sub_249AEC2A8();
  uint64_t v3 = MEMORY[0x263F19E50];
  uint64_t v4 = MEMORY[0x263F19E40];
  uint64_t v8 = MEMORY[0x263F19E50];
  uint64_t v9 = MEMORY[0x263F19E40];
  LODWORD(v7) = v2;
  int v5 = sub_249AEC2C8();
  qword_2696E4328 = v3;
  unk_2696E4330 = v4;
  dword_2696E4310 = v5;
  qword_2696E42D8 = v1;
  unk_2696E42E0 = v0;
  sub_249882BCC(&v7, (uint64_t)&unk_2696E42E8);
  double result = 44.0;
  xmmword_2696E4338 = xmmword_249B08570;
  qword_2696E4348 = 0x4020000000000000;
  unk_2696E4350 = 8;
  byte_2696E4358 = 0;
  qword_2696E4360 = 0x3FF0000000000000;
  return result;
}

double sub_249A5323C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A58);
  MEMORY[0x270FA5388](v0 - 8);
  int v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for NotificationSymbolConfiguration(0);
  __swift_allocate_value_buffer(v3, qword_2696E4368);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_2696E4368);
  uint64_t v5 = sub_249AEC548();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
  sub_249AEC588();
  sub_249A58EAC((uint64_t)v2);
  sub_249AEC578();
  uint64_t v6 = sub_249AEC598();
  swift_release();
  uint64_t v7 = v4 + *(int *)(v3 + 24);
  uint64_t v8 = *MEMORY[0x263F1B530];
  uint64_t v9 = sub_249AEC9B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  *(void *)uint64_t v4 = v6;
  *(_OWORD *)(v4 + 8) = xmmword_249B08550;
  *(unsigned char *)(v4 + 24) = 0;
  unint64_t v10 = (_OWORD *)(v4 + *(int *)(v3 + 28));
  double result = 40.0;
  __asm { FMOV            V1.2D, #16.0 }
  *unint64_t v10 = xmmword_249B085B0;
  v10[1] = _Q1;
  return result;
}

uint64_t static UserInteractiveConfiguration.symbolConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD7C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for NotificationSymbolConfiguration(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2696E4368);
  return sub_249A51B50(v3, a1, type metadata accessor for NotificationSymbolConfiguration);
}

uint64_t sub_249A53458()
{
  uint64_t v26 = sub_249AECBE8();
  uint64_t v0 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  long long v25 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v24 - v3;
  uint64_t v5 = type metadata accessor for NotificationSymbolConfiguration(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
  __swift_allocate_value_buffer((uint64_t)v8, qword_2696E4380);
  uint64_t v9 = __swift_project_value_buffer((uint64_t)v8, (uint64_t)qword_2696E4380);
  if (qword_2696DD7B8 != -1) {
    swift_once();
  }
  long long v10 = xmmword_2696E4298;
  uint64_t v11 = qword_2696E42A8;
  uint64_t v12 = unk_2696E42B0;
  uint64_t v13 = qword_2696E42B8;
  uint64_t v14 = unk_2696E42C0;
  long long v15 = xmmword_2696E42C8;
  uint64_t v16 = qword_2696DD7C8;
  swift_retain();
  swift_retain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v5, (uint64_t)qword_2696E4368);
  sub_249A51B50(v17, (uint64_t)v7, type metadata accessor for NotificationSymbolConfiguration);
  if (qword_2696DD7C0 != -1) {
    swift_once();
  }
  sub_249A51334((uint64_t)&qword_2696E42D8, (uint64_t)v27);
  sub_249AECBD8();
  uint64_t v18 = v9 + v8[9];
  uint64_t v19 = v9 + v8[10];
  uint64_t v20 = (void *)(v9 + v8[13]);
  *uint64_t v20 = 0;
  v20[1] = 0;
  uint64_t v20[2] = 0;
  *(_OWORD *)uint64_t v9 = v10;
  *(void *)(v9 + 16) = v11;
  *(void *)(v9 + 24) = v12;
  *(void *)(v9 + 32) = v13;
  *(void *)(v9 + 40) = v14;
  *(_OWORD *)(v9 + 48) = v15;
  *(unsigned char *)(v9 + 64) = 0;
  *(void *)(v9 + 72) = 0x4044000000000000;
  sub_249A51B50((uint64_t)v7, v9 + v8[7], type metadata accessor for NotificationSymbolConfiguration);
  sub_249A51334((uint64_t)v27, v9 + v8[8]);
  *(unsigned char *)(v9 + v8[11]) = 0;
  *(void *)uint64_t v18 = 0;
  *(void *)(v18 + 8) = 0;
  *(unsigned char *)(v18 + 16) = 1;
  *(void *)uint64_t v19 = 0;
  *(void *)(v19 + 8) = 0;
  *(unsigned char *)(v19 + 16) = 1;
  uint64_t v21 = v25;
  sub_249AECBD8();
  uint64_t v22 = v26;
  (*(void (**)(char *, uint64_t))(v0 + 8))(v4, v26);
  sub_249A51A0C((uint64_t)v27);
  sub_249A543A0((uint64_t)v7, type metadata accessor for NotificationSymbolConfiguration);
  (*(void (**)(uint64_t, char *, uint64_t))(v0 + 32))(v9 + v8[12], v21, v22);
  uint64_t result = swift_release();
  *uint64_t v20 = 0;
  v20[1] = 0;
  uint64_t v20[2] = 0;
  return result;
}

uint64_t static UserInteractiveConfiguration.default.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for UserInteractiveConfiguration(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2696E4380);
  return sub_249A51B50(v3, a1, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t sub_249A5385C(uint64_t a1)
{
  return sub_249A53934(a1, qword_2696E4398, &qword_2696DD738, (uint64_t)qword_2696E2BD0);
}

uint64_t static BannerConfiguration.close.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD7D8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for BannerConfiguration(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2696E4398);
  return sub_249A51B50(v3, a1, type metadata accessor for BannerConfiguration);
}

uint64_t sub_249A53908(uint64_t a1)
{
  return sub_249A53934(a1, qword_2696E43B0, &qword_2696DD740, (uint64_t)qword_2696E2BE8);
}

uint64_t sub_249A53934(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for NotificationSymbolConfiguration(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IconNotificationButtonConfiguration(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for BannerConfiguration(0);
  __swift_allocate_value_buffer((uint64_t)v13, a2);
  uint64_t v14 = __swift_project_value_buffer((uint64_t)v13, (uint64_t)a2);
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v10, a4);
  sub_249A51B50(v15, (uint64_t)v12, type metadata accessor for IconNotificationButtonConfiguration);
  if (qword_2696DD798 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v7, (uint64_t)qword_2696E41F0);
  sub_249A51B50(v16, (uint64_t)v9, type metadata accessor for NotificationSymbolConfiguration);
  if (qword_2696DD7A8 != -1) {
    swift_once();
  }
  sub_249A51334((uint64_t)&qword_2696E4208, v14 + v13[8]);
  uint64_t v17 = v14 + v13[9];
  uint64_t v18 = v14 + v13[10];
  uint64_t v19 = (void *)(v14 + v13[12]);
  sub_249A52514((uint64_t)v12, v14, type metadata accessor for IconNotificationButtonConfiguration);
  *(void *)(v14 + v13[5]) = 0x4044000000000000;
  uint64_t result = sub_249A52514((uint64_t)v9, v14 + v13[7], type metadata accessor for NotificationSymbolConfiguration);
  *(unsigned char *)(v14 + v13[6]) = 0;
  *(unsigned char *)(v14 + v13[11]) = 0;
  *(void *)uint64_t v17 = 0;
  *(void *)(v17 + 8) = 0;
  *(unsigned char *)(v17 + 16) = 1;
  *(void *)uint64_t v18 = 0;
  *(void *)(v18 + 8) = 0;
  *(unsigned char *)(v18 + 16) = 1;
  v19[1] = 0;
  v19[2] = 0;
  *uint64_t v19 = 0;
  return result;
}

uint64_t static BannerConfiguration.chevron.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD7E0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for BannerConfiguration(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2696E43B0);
  return sub_249A51B50(v3, a1, type metadata accessor for BannerConfiguration);
}

uint64_t sub_249A53C34()
{
  uint64_t v0 = type metadata accessor for NotificationSymbolConfiguration(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (int *)type metadata accessor for NoticeConfiguration(0);
  __swift_allocate_value_buffer((uint64_t)v3, qword_2696E43C8);
  uint64_t v4 = (void *)__swift_project_value_buffer((uint64_t)v3, (uint64_t)qword_2696E43C8);
  if (qword_2696DD798 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)qword_2696E41F0);
  sub_249A51B50(v5, (uint64_t)v2, type metadata accessor for NotificationSymbolConfiguration);
  if (qword_2696DD7A8 != -1) {
    swift_once();
  }
  sub_249A51334((uint64_t)&qword_2696E4208, (uint64_t)v4 + v3[6]);
  uint64_t v6 = (char *)v4 + v3[7];
  uint64_t v7 = (char *)v4 + v3[8];
  uint64_t v8 = (void *)((char *)v4 + v3[10]);
  *uint64_t v4 = 0x4044000000000000;
  uint64_t result = sub_249A52514((uint64_t)v2, (uint64_t)v4 + v3[5], type metadata accessor for NotificationSymbolConfiguration);
  *((unsigned char *)v4 + v3[9]) = 0;
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  v8[1] = 0;
  uint64_t v8[2] = 0;
  *uint64_t v8 = 0;
  return result;
}

uint64_t static NoticeConfiguration.default.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD7E8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for NoticeConfiguration(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2696E43C8);
  return sub_249A51B50(v3, a1, type metadata accessor for NoticeConfiguration);
}

uint64_t sub_249A53E60(uint64_t a1)
{
  return sub_249A53E9C(a1, qword_2696E43E0);
}

uint64_t sub_249A53E6C@<X0>(uint64_t a1@<X8>)
{
  return sub_249A53F60(&qword_2696DD7F0, (uint64_t)qword_2696E43E0, a1);
}

uint64_t sub_249A53E90(uint64_t a1)
{
  return sub_249A53E9C(a1, qword_2696E43F8);
}

uint64_t sub_249A53E9C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for UserInteractiveConfiguration(0);
  __swift_allocate_value_buffer(v3, a2);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)a2);
  if (qword_2696DD7D0 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v3, (uint64_t)qword_2696E4380);
  return sub_249A51B50(v5, v4, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t sub_249A53F3C@<X0>(uint64_t a1@<X8>)
{
  return sub_249A53F60(&qword_2696DD7F8, (uint64_t)qword_2696E43F8, a1);
}

uint64_t sub_249A53F60@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for UserInteractiveConfiguration(0);
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  return sub_249A51B50(v6, a3, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t sub_249A53FCC()
{
  uint64_t v0 = type metadata accessor for BannerConfiguration(0);
  __swift_allocate_value_buffer(v0, qword_2696E4410);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2696E4410);
  if (qword_2696DD7D8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2696E4398);
  return sub_249A51B50(v2, v1, type metadata accessor for BannerConfiguration);
}

uint64_t sub_249A54070@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD800 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for BannerConfiguration(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2696E4410);
  return sub_249A51B50(v3, a1, type metadata accessor for BannerConfiguration);
}

uint64_t sub_249A540F0()
{
  uint64_t v0 = type metadata accessor for BannerConfiguration(0);
  __swift_allocate_value_buffer(v0, qword_2696E4428);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2696E4428);
  if (qword_2696DD7E0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2696E43B0);
  return sub_249A51B50(v2, v1, type metadata accessor for BannerConfiguration);
}

uint64_t sub_249A54194@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD808 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for BannerConfiguration(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2696E4428);
  return sub_249A51B50(v3, a1, type metadata accessor for BannerConfiguration);
}

uint64_t sub_249A54214()
{
  uint64_t v0 = type metadata accessor for NoticeConfiguration(0);
  __swift_allocate_value_buffer(v0, qword_2696E4440);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2696E4440);
  if (qword_2696DD7E8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2696E43C8);
  return sub_249A51B50(v2, v1, type metadata accessor for NoticeConfiguration);
}

uint64_t sub_249A542B8@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD810 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for NoticeConfiguration(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2696E4440);
  return sub_249A51B50(v3, a1, type metadata accessor for NoticeConfiguration);
}

uint64_t EnvironmentValues.userInteractiveConfiguration.getter()
{
  sub_2499E7C8C();

  return sub_249AEBFF8();
}

uint64_t EnvironmentValues.userInteractiveConfiguration.setter(uint64_t a1)
{
  return sub_249A545AC(a1, (void (*)(uint64_t))sub_2499E7C8C);
}

uint64_t sub_249A543A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void (*EnvironmentValues.userInteractiveConfiguration.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  size_t v4 = *(void *)(*(void *)(type metadata accessor for UserInteractiveConfiguration(0) - 8) + 64);
  v3[1] = malloc(v4);
  void v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_2499E7C8C();
  sub_249AEBFF8();
  return sub_249A544BC;
}

void sub_249A544BC(uint64_t **a1, char a2)
{
}

uint64_t EnvironmentValues.blockingUserInteractiveConfiguration.getter()
{
  sub_249A54538();

  return sub_249AEBFF8();
}

unint64_t sub_249A54538()
{
  unint64_t result = qword_2696E4458;
  if (!qword_2696E4458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4458);
  }
  return result;
}

uint64_t EnvironmentValues.blockingUserInteractiveConfiguration.setter(uint64_t a1)
{
  return sub_249A545AC(a1, (void (*)(uint64_t))sub_249A54538);
}

uint64_t sub_249A545AC(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for UserInteractiveConfiguration(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = sub_249A51B50(a1, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for UserInteractiveConfiguration);
  a2(v6);
  sub_249AEC008();
  return sub_249A543A0(a1, type metadata accessor for UserInteractiveConfiguration);
}

void (*EnvironmentValues.blockingUserInteractiveConfiguration.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  size_t v4 = *(void *)(*(void *)(type metadata accessor for UserInteractiveConfiguration(0) - 8) + 64);
  v3[1] = malloc(v4);
  void v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_249A54538();
  sub_249AEBFF8();
  return sub_249A54740;
}

void sub_249A54740(uint64_t **a1, char a2)
{
}

uint64_t EnvironmentValues.closeButtonBannerConfiguration.getter()
{
  sub_249A547BC();

  return sub_249AEBFF8();
}

unint64_t sub_249A547BC()
{
  unint64_t result = qword_2696E4460;
  if (!qword_2696E4460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4460);
  }
  return result;
}

uint64_t EnvironmentValues.closeButtonBannerConfiguration.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BannerConfiguration(0);
  MEMORY[0x270FA5388](v2 - 8);
  sub_249A51B50(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for BannerConfiguration);
  sub_249A547BC();
  sub_249AEC008();
  return sub_249A543A0(a1, type metadata accessor for BannerConfiguration);
}

void (*EnvironmentValues.closeButtonBannerConfiguration.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  size_t v4 = *(void *)(*(void *)(type metadata accessor for BannerConfiguration(0) - 8) + 64);
  v3[1] = malloc(v4);
  void v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_249A547BC();
  sub_249AEBFF8();
  return sub_249A54994;
}

void sub_249A54994(uint64_t **a1, char a2)
{
}

uint64_t EnvironmentValues.chevronBannerConfiguration.getter()
{
  sub_249A54A10();

  return sub_249AEBFF8();
}

unint64_t sub_249A54A10()
{
  unint64_t result = qword_2696E4468;
  if (!qword_2696E4468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4468);
  }
  return result;
}

uint64_t EnvironmentValues.chevronBannerConfiguration.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BannerConfiguration(0);
  MEMORY[0x270FA5388](v2 - 8);
  sub_249A51B50(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for BannerConfiguration);
  sub_249A54A10();
  sub_249AEC008();
  return sub_249A543A0(a1, type metadata accessor for BannerConfiguration);
}

void (*EnvironmentValues.chevronBannerConfiguration.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  size_t v4 = *(void *)(*(void *)(type metadata accessor for BannerConfiguration(0) - 8) + 64);
  v3[1] = malloc(v4);
  void v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_249A54A10();
  sub_249AEBFF8();
  return sub_249A54BE8;
}

void sub_249A54BE8(uint64_t **a1, char a2)
{
}

uint64_t EnvironmentValues.noticeNotificationConfiguration.getter()
{
  sub_249A54C64();

  return sub_249AEBFF8();
}

unint64_t sub_249A54C64()
{
  unint64_t result = qword_2696E4470;
  if (!qword_2696E4470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4470);
  }
  return result;
}

uint64_t sub_249A54CB8()
{
  return sub_249AEBFF8();
}

uint64_t sub_249A54CF8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NoticeConfiguration(0);
  MEMORY[0x270FA5388](v2 - 8);
  size_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_249A51B50(a1, (uint64_t)&v9 - v6, type metadata accessor for NoticeConfiguration);
  sub_249A51B50((uint64_t)v7, (uint64_t)v4, type metadata accessor for NoticeConfiguration);
  sub_249A54C64();
  sub_249AEC008();
  return sub_249A543A0((uint64_t)v7, type metadata accessor for NoticeConfiguration);
}

uint64_t EnvironmentValues.noticeNotificationConfiguration.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NoticeConfiguration(0);
  MEMORY[0x270FA5388](v2 - 8);
  sub_249A51B50(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NoticeConfiguration);
  sub_249A54C64();
  sub_249AEC008();
  return sub_249A543A0(a1, type metadata accessor for NoticeConfiguration);
}

void (*EnvironmentValues.noticeNotificationConfiguration.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  size_t v4 = *(void *)(*(void *)(type metadata accessor for NoticeConfiguration(0) - 8) + 64);
  v3[1] = malloc(v4);
  void v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_249A54C64();
  sub_249AEBFF8();
  return sub_249A54F84;
}

void sub_249A54F84(uint64_t **a1, char a2)
{
}

void sub_249A54FB8(uint64_t **a1, char a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v8 = *a1;
  sub_249A51B50((*a1)[3], (*a1)[2], a3);
  uint64_t v9 = (void *)v8[3];
  uint64_t v10 = (void *)v8[1];
  uint64_t v11 = (void *)v8[2];
  if (a2)
  {
    sub_249A51B50(v8[2], v8[1], a3);
    sub_249AEC008();
    sub_249A543A0((uint64_t)v11, a5);
  }
  else
  {
    sub_249AEC008();
  }
  sub_249A543A0((uint64_t)v9, a5);
  free(v9);
  free(v11);
  free(v10);

  free(v8);
}

uint64_t sub_249A550BC()
{
  return sub_249AEBFF8();
}

uint64_t initializeBufferWithCopyOfBuffer for NotificationSymbolConfiguration(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_249AEC9B8();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = (_OWORD *)(v7 + v13);
    uint64_t v15 = (_OWORD *)((char *)a2 + v13);
    long long v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
  }
  return v7;
}

uint64_t initializeWithCopy for NotificationSymbolConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_249AEC9B8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  return a1;
}

uint64_t assignWithCopy for NotificationSymbolConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  long long v6 = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_249AEC9B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  uint64_t v12[2] = v13[2];
  v12[3] = v13[3];
  return a1;
}

uint64_t initializeWithTake for NotificationSymbolConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_249AEC9B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (_OWORD *)(a1 + v10);
  uint64_t v12 = (_OWORD *)(a2 + v10);
  long long v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  return a1;
}

uint64_t assignWithTake for NotificationSymbolConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_249AEC9B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (_OWORD *)(a1 + v10);
  uint64_t v12 = (_OWORD *)(a2 + v10);
  long long v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationSymbolConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249A55538);
}

uint64_t sub_249A55538(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_249AEC9B8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for NotificationSymbolConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249A555FC);
}

void *sub_249A555FC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_249AEC9B8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_249A556A4()
{
  uint64_t result = sub_249AEC9B8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for NotificationTextConfiguration(uint64_t a1)
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm(a1 + 16);

  return __swift_destroy_boxed_opaque_existential_2Tm(a1 + 56);
}

uint64_t initializeWithCopy for NotificationTextConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  swift_retain();
  v8(a1 + 16, v5, v7);
  long long v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 56, a2 + 56);
  long long v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v10;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  return a1;
}

uint64_t assignWithCopy for NotificationTextConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    int v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *int v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *int v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for NotificationTextConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm(a1 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  __swift_destroy_boxed_opaque_existential_2Tm(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationTextConfiguration(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationTextConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationTextConfiguration()
{
  return &type metadata for NotificationTextConfiguration;
}

void *initializeBufferWithCopyOfBuffer for UserInteractiveConfiguration(uint64_t a1, uint64_t *a2, int *a3)
{
  long long v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v42 = *a2;
    *long long v4 = *a2;
    long long v4 = (void *)(v42 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(void *)(a1 + 72) = a2[9];
    uint64_t v9 = a3[7];
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    *(void *)uint64_t v10 = *(uint64_t *)((char *)a2 + v9);
    *(_OWORD *)(v10 + 8) = *(_OWORD *)((char *)a2 + v9 + 8);
    *(unsigned char *)(v10 + 24) = *((unsigned char *)a2 + v9 + 24);
    uint64_t v12 = type metadata accessor for NotificationSymbolConfiguration(0);
    uint64_t v13 = *(int *)(v12 + 24);
    uint64_t v45 = v11 + v13;
    uint64_t v46 = v10 + v13;
    uint64_t v14 = sub_249AEC9B8();
    uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    v44(v46, v45, v14);
    uint64_t v15 = *(int *)(v12 + 28);
    long long v16 = (_OWORD *)(v10 + v15);
    uint64_t v17 = (_OWORD *)(v11 + v15);
    long long v18 = v17[1];
    *long long v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = a3[8];
    uint64_t v20 = (char *)v4 + v19;
    uint64_t v21 = (uint64_t)a2 + v19;
    uint64_t v22 = *(uint64_t *)((char *)a2 + v19 + 8);
    *(void *)uint64_t v20 = *(uint64_t *)((char *)a2 + v19);
    *((void *)v20 + 1) = v22;
    uint64_t v47 = (uint64_t)v4 + v19 + 16;
    uint64_t v23 = (uint64_t)a2 + v19 + 16;
    long long v24 = *(_OWORD *)((char *)a2 + v19 + 40);
    *(_OWORD *)(v20 + 40) = v24;
    uint64_t v25 = v24;
    uint64_t v26 = **(void (***)(uint64_t, uint64_t, uint64_t))(v24 - 8);
    swift_retain();
    swift_retain();
    v26(v47, v23, v25);
    long long v27 = *(_OWORD *)(v21 + 80);
    *((_OWORD *)v20 + 5) = v27;
    (**(void (***)(uint64_t, uint64_t))(v27 - 8))((uint64_t)(v20 + 56), v21 + 56);
    long long v28 = *(_OWORD *)(v21 + 112);
    *((_OWORD *)v20 + 6) = *(_OWORD *)(v21 + 96);
    *((_OWORD *)v20 + 7) = v28;
    v20[128] = *(unsigned char *)(v21 + 128);
    *((void *)v20 + 17) = *(void *)(v21 + 136);
    uint64_t v29 = a3[9];
    uint64_t v30 = a3[10];
    __n128 v31 = (char *)v4 + v29;
    uint64_t v32 = (uint64_t)a2 + v29;
    *(_OWORD *)__n128 v31 = *(_OWORD *)v32;
    v31[16] = *(unsigned char *)(v32 + 16);
    uint64_t v33 = (char *)v4 + v30;
    uint64_t v34 = (uint64_t)a2 + v30;
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    v33[16] = *(unsigned char *)(v34 + 16);
    uint64_t v35 = a3[12];
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    long long v36 = (char *)v4 + v35;
    uint64_t v37 = (uint64_t)a2 + v35;
    uint64_t v38 = sub_249AECBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    uint64_t v39 = a3[13];
    uint64_t v40 = (char *)v4 + v39;
    uint64_t v41 = (uint64_t)a2 + v39;
    *(void *)uint64_t v40 = *(void *)v41;
    *(_OWORD *)(v40 + 8) = *(_OWORD *)(v41 + 8);
  }
  swift_retain();
  return v4;
}

uint64_t destroy for UserInteractiveConfiguration(uint64_t a1, int *a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + a2[7];
  swift_release();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 24);
  uint64_t v6 = sub_249AEC9B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[8];
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm(v7 + 16);
  __swift_destroy_boxed_opaque_existential_2Tm(v7 + 56);
  uint64_t v8 = a1 + a2[12];
  uint64_t v9 = sub_249AECBE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return swift_release();
}

uint64_t initializeWithCopy for UserInteractiveConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(a2 + v7 + 8);
  *(unsigned char *)(v8 + 24) = *(unsigned char *)(a2 + v7 + 24);
  uint64_t v10 = type metadata accessor for NotificationSymbolConfiguration(0);
  uint64_t v11 = *(int *)(v10 + 24);
  uint64_t v43 = v9 + v11;
  uint64_t v44 = v8 + v11;
  uint64_t v12 = sub_249AEC9B8();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  v13(v44, v43, v12);
  uint64_t v14 = *(int *)(v10 + 28);
  uint64_t v15 = (_OWORD *)(v8 + v14);
  long long v16 = (_OWORD *)(v9 + v14);
  long long v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)(a2 + v18 + 8);
  *(void *)uint64_t v19 = *(void *)(a2 + v18);
  *(void *)(v19 + 8) = v21;
  uint64_t v22 = a1 + v18 + 16;
  uint64_t v23 = a2 + v18 + 16;
  long long v24 = *(_OWORD *)(a2 + v18 + 40);
  *(_OWORD *)(v19 + 40) = v24;
  uint64_t v25 = v24;
  uint64_t v26 = **(void (***)(uint64_t, uint64_t, uint64_t))(v24 - 8);
  swift_retain();
  swift_retain();
  v26(v22, v23, v25);
  long long v27 = *(_OWORD *)(v20 + 80);
  *(_OWORD *)(v19 + 80) = v27;
  (**(void (***)(uint64_t, uint64_t))(v27 - 8))(v19 + 56, v20 + 56);
  long long v28 = *(_OWORD *)(v20 + 112);
  *(_OWORD *)(v19 + 96) = *(_OWORD *)(v20 + 96);
  *(_OWORD *)(v19 + 112) = v28;
  *(unsigned char *)(v19 + 128) = *(unsigned char *)(v20 + 128);
  *(void *)(v19 + 136) = *(void *)(v20 + 136);
  uint64_t v29 = a3[9];
  uint64_t v30 = a3[10];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = a2 + v29;
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *(unsigned char *)(v31 + 16) = *(unsigned char *)(v32 + 16);
  uint64_t v33 = a1 + v30;
  uint64_t v34 = a2 + v30;
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *(unsigned char *)(v33 + 16) = *(unsigned char *)(v34 + 16);
  uint64_t v35 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_249AECBE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  *(void *)uint64_t v40 = *(void *)v41;
  *(_OWORD *)(v40 + 8) = *(_OWORD *)(v41 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for UserInteractiveConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)(a1 + v6) = *(void *)(a2 + v6);
  swift_retain();
  swift_release();
  long long v9 = *(_OWORD *)(v8 + 8);
  *(unsigned char *)(v7 + 24) = *(unsigned char *)(v8 + 24);
  *(_OWORD *)(v7 + 8) = v9;
  uint64_t v10 = type metadata accessor for NotificationSymbolConfiguration(0);
  uint64_t v11 = *(int *)(v10 + 24);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_249AEC9B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = *(int *)(v10 + 28);
  long long v16 = (void *)(v7 + v15);
  long long v17 = (void *)(v8 + v15);
  *long long v16 = *v17;
  v16[1] = v17[1];
  uint64_t v16[2] = v17[2];
  v16[3] = v17[3];
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  swift_retain();
  swift_release();
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v19 + 16), (uint64_t *)(v20 + 16));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v19 + 56), (uint64_t *)(v20 + 56));
  *(void *)(v19 + 96) = *(void *)(v20 + 96);
  *(void *)(v19 + 104) = *(void *)(v20 + 104);
  *(void *)(v19 + 112) = *(void *)(v20 + 112);
  *(void *)(v19 + 120) = *(void *)(v20 + 120);
  *(unsigned char *)(v19 + 128) = *(unsigned char *)(v20 + 128);
  *(void *)(v19 + 136) = *(void *)(v20 + 136);
  uint64_t v21 = a3[9];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = (long long *)(a2 + v21);
  long long v24 = *v23;
  *(unsigned char *)(v22 + 16) = *((unsigned char *)v23 + 16);
  *(_OWORD *)uint64_t v22 = v24;
  uint64_t v25 = a3[10];
  uint64_t v26 = a1 + v25;
  long long v27 = (long long *)(a2 + v25);
  long long v28 = *v27;
  *(unsigned char *)(v26 + 16) = *((unsigned char *)v27 + 16);
  *(_OWORD *)uint64_t v26 = v28;
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v29 = a3[12];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = sub_249AECBE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
  uint64_t v33 = a3[13];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  *(void *)(a1 + v33) = *(void *)(a2 + v33);
  swift_retain();
  swift_release();
  *(void *)(v34 + 8) = *(void *)(v35 + 8);
  *(void *)(v34 + 16) = *(void *)(v35 + 16);
  return a1;
}

uint64_t initializeWithTake for UserInteractiveConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)(a2 + v8);
  *(unsigned char *)(v9 + 24) = *(unsigned char *)(a2 + v8 + 24);
  *(_OWORD *)(v9 + 8) = *(_OWORD *)(a2 + v8 + 8);
  uint64_t v11 = type metadata accessor for NotificationSymbolConfiguration(0);
  uint64_t v12 = *(int *)(v11 + 24);
  uint64_t v13 = v9 + v12;
  uint64_t v14 = v10 + v12;
  uint64_t v15 = sub_249AEC9B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = *(int *)(v11 + 28);
  long long v17 = (_OWORD *)(v9 + v16);
  uint64_t v18 = (_OWORD *)(v10 + v16);
  long long v19 = v18[1];
  *long long v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[8];
  uint64_t v21 = a3[9];
  uint64_t v22 = (_OWORD *)(a1 + v20);
  uint64_t v23 = (_OWORD *)(a2 + v20);
  long long v24 = v23[3];
  v22[2] = v23[2];
  v22[3] = v24;
  long long v25 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v25;
  long long v26 = v23[8];
  long long v27 = v23[6];
  v22[7] = v23[7];
  v22[8] = v26;
  long long v28 = v23[5];
  v22[4] = v23[4];
  v22[5] = v28;
  v22[6] = v27;
  uint64_t v29 = a1 + v21;
  uint64_t v30 = a2 + v21;
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *(unsigned char *)(v29 + 16) = *(unsigned char *)(v30 + 16);
  uint64_t v31 = a3[10];
  uint64_t v32 = a3[11];
  uint64_t v33 = a1 + v31;
  uint64_t v34 = (long long *)(a2 + v31);
  long long v35 = *v34;
  *(unsigned char *)(v33 + 16) = *((unsigned char *)v34 + 16);
  LOBYTE(v34) = *(unsigned char *)(a2 + v32);
  *(_OWORD *)uint64_t v33 = v35;
  *(unsigned char *)(a1 + v32) = (_BYTE)v34;
  uint64_t v36 = a3[12];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = sub_249AECBE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
  uint64_t v40 = a3[13];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  *(void *)(v41 + 16) = *(void *)(v42 + 16);
  return a1;
}

uint64_t assignWithTake for UserInteractiveConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_release();
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  *(unsigned char *)(v8 + 24) = *(unsigned char *)(v9 + 24);
  uint64_t v10 = type metadata accessor for NotificationSymbolConfiguration(0);
  uint64_t v11 = *(int *)(v10 + 24);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = v9 + v11;
  uint64_t v14 = sub_249AEC9B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = *(int *)(v10 + 28);
  uint64_t v16 = (_OWORD *)(v8 + v15);
  long long v17 = (_OWORD *)(v9 + v15);
  long long v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  swift_release();
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm(v20 + 16);
  long long v22 = *(_OWORD *)(v21 + 32);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)(v21 + 16);
  *(_OWORD *)(v20 + 32) = v22;
  *(void *)(v20 + 48) = *(void *)(v21 + 48);
  __swift_destroy_boxed_opaque_existential_2Tm(v20 + 56);
  *(_OWORD *)(v20 + 56) = *(_OWORD *)(v21 + 56);
  *(_OWORD *)(v20 + 72) = *(_OWORD *)(v21 + 72);
  *(void *)(v20 + 88) = *(void *)(v21 + 88);
  *(_OWORD *)(v20 + 96) = *(_OWORD *)(v21 + 96);
  *(void *)(v20 + 112) = *(void *)(v21 + 112);
  *(void *)(v20 + 120) = *(void *)(v21 + 120);
  *(unsigned char *)(v20 + 128) = *(unsigned char *)(v21 + 128);
  *(void *)(v20 + 136) = *(void *)(v21 + 136);
  uint64_t v23 = a3[9];
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *(unsigned char *)(v25 + 16) = *(unsigned char *)(v26 + 16);
  uint64_t v27 = a1 + v24;
  uint64_t v28 = a2 + v24;
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(unsigned char *)(v27 + 16) = *(unsigned char *)(v28 + 16);
  uint64_t v29 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = sub_249AECBE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
  uint64_t v33 = a3[13];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  *(void *)(a1 + v33) = *(void *)v35;
  swift_release();
  *(_OWORD *)(v34 + 8) = *(_OWORD *)(v35 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserInteractiveConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249A56A80);
}

uint64_t sub_249A56A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for NotificationSymbolConfiguration(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_249AECBE8();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 48);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for UserInteractiveConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249A56BC0);
}

uint64_t sub_249A56BC0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for NotificationSymbolConfiguration(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_249AECBE8();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 48);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_249A56CEC()
{
  uint64_t result = type metadata accessor for NotificationSymbolConfiguration(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_249AECBE8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t destroy for UserInteractiveConfiguration.ButtonConfiguration()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for UserInteractiveConfiguration.ButtonConfiguration(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for UserInteractiveConfiguration.ButtonConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  a1[7] = a2[7];
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_OWORD *assignWithTake for UserInteractiveConfiguration.ButtonConfiguration(_OWORD *a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  return a1;
}

uint64_t getEnumTagSinglePayload for UserInteractiveConfiguration.ButtonConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserInteractiveConfiguration.ButtonConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserInteractiveConfiguration.ButtonConfiguration()
{
  return &type metadata for UserInteractiveConfiguration.ButtonConfiguration;
}

void *initializeBufferWithCopyOfBuffer for BannerConfiguration(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
    uint64_t v9 = v8[6];
    uint64_t v10 = (char *)v7 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_249AEC9B8();
    char v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    v53(v10, v11, v12);
    uint64_t v13 = v8[7];
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)a2 + v13;
    long long v16 = *((_OWORD *)v15 + 1);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v16;
    unsigned char v14[32] = v15[32];
    uint64_t v17 = v8[8];
    long long v18 = (_OWORD *)((char *)v7 + v17);
    uint64_t v19 = (_OWORD *)((char *)a2 + v17);
    long long v20 = v19[1];
    *long long v18 = *v19;
    v18[1] = v20;
    *(void *)((char *)v7 + v8[9]) = *(void *)((char *)a2 + v8[9]);
    uint64_t v21 = a3[6];
    *(void *)((char *)v7 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *((unsigned char *)v7 + v21) = *((unsigned char *)a2 + v21);
    uint64_t v22 = a3[7];
    uint64_t v23 = (char *)v7 + v22;
    uint64_t v24 = (char *)a2 + v22;
    *(void *)uint64_t v23 = *(void *)((char *)a2 + v22);
    v23[24] = *((unsigned char *)a2 + v22 + 24);
    *(_OWORD *)(v23 + 8) = *(_OWORD *)((char *)a2 + v22 + 8);
    uint64_t v25 = type metadata accessor for NotificationSymbolConfiguration(0);
    uint64_t v26 = *(int *)(v25 + 24);
    uint64_t v27 = &v23[v26];
    uint64_t v28 = &v24[v26];
    swift_retain();
    v53(v27, v28, v12);
    uint64_t v29 = *(int *)(v25 + 28);
    uint64_t v30 = &v23[v29];
    uint64_t v31 = &v24[v29];
    long long v32 = *((_OWORD *)v31 + 1);
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v32;
    uint64_t v33 = a3[8];
    uint64_t v34 = (char *)v7 + v33;
    uint64_t v35 = (char *)a2 + v33;
    uint64_t v36 = *(void *)((char *)a2 + v33 + 8);
    *(void *)uint64_t v34 = *(void *)((char *)a2 + v33);
    *((void *)v34 + 1) = v36;
    uint64_t v54 = (uint64_t)v7 + v33 + 16;
    uint64_t v37 = (uint64_t)a2 + v33 + 16;
    long long v38 = *(_OWORD *)((char *)a2 + v33 + 40);
    *(_OWORD *)(v34 + 40) = v38;
    uint64_t v39 = v38;
    uint64_t v40 = **(void (***)(uint64_t, uint64_t, uint64_t))(v38 - 8);
    swift_retain();
    swift_retain();
    v40(v54, v37, v39);
    long long v41 = *((_OWORD *)v35 + 5);
    *((_OWORD *)v34 + 5) = v41;
    (**(void (***)(uint64_t, uint64_t))(v41 - 8))((uint64_t)(v34 + 56), (uint64_t)(v35 + 56));
    long long v42 = *((_OWORD *)v35 + 7);
    *((_OWORD *)v34 + 6) = *((_OWORD *)v35 + 6);
    *((_OWORD *)v34 + 7) = v42;
    v34[128] = v35[128];
    *((void *)v34 + 17) = *((void *)v35 + 17);
    uint64_t v43 = a3[9];
    uint64_t v44 = a3[10];
    uint64_t v45 = (char *)v7 + v43;
    uint64_t v46 = (char *)a2 + v43;
    *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
    v45[16] = v46[16];
    uint64_t v47 = (char *)v7 + v44;
    uint64_t v48 = (char *)a2 + v44;
    *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
    v47[16] = v48[16];
    uint64_t v49 = a3[12];
    *((unsigned char *)v7 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    uint64_t v50 = (char *)v7 + v49;
    uint64_t v51 = (char *)a2 + v49;
    *(void *)uint64_t v50 = *(void *)v51;
    *(_OWORD *)(v50 + 8) = *(_OWORD *)(v51 + 8);
  }
  swift_retain();
  return v7;
}

uint64_t destroy for BannerConfiguration(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 24);
  uint64_t v5 = sub_249AEC9B8();
  long long v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  swift_release();
  uint64_t v8 = type metadata accessor for NotificationSymbolConfiguration(0);
  v6(v7 + *(int *)(v8 + 24), v5);
  uint64_t v9 = a1 + *(int *)(a2 + 32);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm(v9 + 16);
  __swift_destroy_boxed_opaque_existential_2Tm(v9 + 56);

  return swift_release();
}

void *initializeWithCopy for BannerConfiguration(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_249AEC9B8();
  unsigned __int8 v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_retain();
  v52(v9, v10, v11);
  uint64_t v12 = v7[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  unsigned char v13[32] = v14[32];
  uint64_t v16 = v7[8];
  uint64_t v17 = (_OWORD *)((char *)a1 + v16);
  long long v18 = (_OWORD *)((char *)a2 + v16);
  long long v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  *(void *)((char *)a1 + v7[9]) = *(void *)((char *)a2 + v7[9]);
  uint64_t v20 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
  uint64_t v21 = a3[7];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  *(void *)uint64_t v22 = *(void *)((char *)a2 + v21);
  v22[24] = *((unsigned char *)a2 + v21 + 24);
  *(_OWORD *)(v22 + 8) = *(_OWORD *)((char *)a2 + v21 + 8);
  uint64_t v24 = type metadata accessor for NotificationSymbolConfiguration(0);
  uint64_t v25 = *(int *)(v24 + 24);
  uint64_t v26 = &v22[v25];
  uint64_t v27 = &v23[v25];
  swift_retain();
  v52(v26, v27, v11);
  uint64_t v28 = *(int *)(v24 + 28);
  uint64_t v29 = &v22[v28];
  uint64_t v30 = &v23[v28];
  long long v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  uint64_t v32 = a3[8];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *(void *)((char *)a2 + v32 + 8);
  *(void *)uint64_t v33 = *(void *)((char *)a2 + v32);
  *((void *)v33 + 1) = v35;
  uint64_t v53 = (uint64_t)a1 + v32 + 16;
  uint64_t v36 = (uint64_t)a2 + v32 + 16;
  long long v37 = *(_OWORD *)((char *)a2 + v32 + 40);
  *(_OWORD *)(v33 + 40) = v37;
  uint64_t v38 = v37;
  uint64_t v39 = **(void (***)(uint64_t, uint64_t, uint64_t))(v37 - 8);
  swift_retain();
  swift_retain();
  v39(v53, v36, v38);
  long long v40 = *((_OWORD *)v34 + 5);
  *((_OWORD *)v33 + 5) = v40;
  (**(void (***)(uint64_t, uint64_t))(v40 - 8))((uint64_t)(v33 + 56), (uint64_t)(v34 + 56));
  long long v41 = *((_OWORD *)v34 + 7);
  *((_OWORD *)v33 + 6) = *((_OWORD *)v34 + 6);
  *((_OWORD *)v33 + 7) = v41;
  v33[128] = v34[128];
  *((void *)v33 + 17) = *((void *)v34 + 17);
  uint64_t v42 = a3[9];
  uint64_t v43 = a3[10];
  uint64_t v44 = (char *)a1 + v42;
  uint64_t v45 = (char *)a2 + v42;
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  v44[16] = v45[16];
  uint64_t v46 = (char *)a1 + v43;
  uint64_t v47 = (char *)a2 + v43;
  *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  v46[16] = v47[16];
  uint64_t v48 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  uint64_t v49 = (char *)a1 + v48;
  uint64_t v50 = (char *)a2 + v48;
  *(void *)uint64_t v49 = *(void *)v50;
  *(_OWORD *)(v49 + 8) = *(_OWORD *)(v50 + 8);
  swift_retain();
  return a1;
}

void *assignWithCopy for BannerConfiguration(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  uint64_t v6 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_249AEC9B8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  uint64_t v12 = v6[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  long long v15 = *(_OWORD *)v14;
  long long v16 = *((_OWORD *)v14 + 1);
  unsigned char v13[32] = v14[32];
  *(_OWORD *)uint64_t v13 = v15;
  *((_OWORD *)v13 + 1) = v16;
  uint64_t v17 = v6[8];
  long long v18 = (void *)((char *)a1 + v17);
  long long v19 = (void *)((char *)a2 + v17);
  *long long v18 = *v19;
  v18[1] = v19[1];
  uint64_t v18[2] = v19[2];
  v18[3] = v19[3];
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v20 = a3[7];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);
  swift_retain();
  swift_release();
  long long v23 = *(_OWORD *)(v22 + 8);
  v21[24] = v22[24];
  *(_OWORD *)(v21 + 8) = v23;
  uint64_t v24 = type metadata accessor for NotificationSymbolConfiguration(0);
  v11(&v21[*(int *)(v24 + 24)], &v22[*(int *)(v24 + 24)], v10);
  uint64_t v25 = *(int *)(v24 + 28);
  uint64_t v26 = &v21[v25];
  uint64_t v27 = &v22[v25];
  *(void *)uint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = *((void *)v27 + 1);
  *((void *)v26 + 2) = *((void *)v27 + 2);
  *((void *)v26 + 3) = *((void *)v27 + 3);
  uint64_t v28 = a3[8];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  *(void *)((char *)a1 + v28) = *(void *)((char *)a2 + v28);
  swift_retain();
  swift_release();
  *((void *)v29 + 1) = *((void *)v30 + 1);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v29 + 2, (uint64_t *)v30 + 2);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v29 + 7, (uint64_t *)v30 + 7);
  *((void *)v29 + 12) = *((void *)v30 + 12);
  *((void *)v29 + 13) = *((void *)v30 + 13);
  *((void *)v29 + 14) = *((void *)v30 + 14);
  *((void *)v29 + 15) = *((void *)v30 + 15);
  v29[128] = v30[128];
  *((void *)v29 + 17) = *((void *)v30 + 17);
  uint64_t v31 = a3[9];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  long long v34 = *(_OWORD *)v33;
  v32[16] = v33[16];
  *(_OWORD *)uint64_t v32 = v34;
  uint64_t v35 = a3[10];
  uint64_t v36 = (char *)a1 + v35;
  long long v37 = (char *)a2 + v35;
  long long v38 = *(_OWORD *)v37;
  v36[16] = v37[16];
  *(_OWORD *)uint64_t v36 = v38;
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  uint64_t v39 = a3[12];
  long long v40 = (char *)a1 + v39;
  long long v41 = (char *)a2 + v39;
  *(void *)((char *)a1 + v39) = *(void *)((char *)a2 + v39);
  swift_retain();
  swift_release();
  *((void *)v40 + 1) = *((void *)v41 + 1);
  *((void *)v40 + 2) = *((void *)v41 + 2);
  return a1;
}

_OWORD *initializeWithTake for BannerConfiguration(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_249AEC9B8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = v6[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  unsigned char v13[32] = v14[32];
  uint64_t v16 = v6[8];
  uint64_t v17 = (_OWORD *)((char *)a1 + v16);
  long long v18 = (_OWORD *)((char *)a2 + v16);
  long long v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  uint64_t v20 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
  uint64_t v21 = a3[7];
  uint64_t v22 = (char *)a1 + v21;
  long long v23 = (char *)a2 + v21;
  *(void *)uint64_t v22 = *(void *)((char *)a2 + v21);
  v22[24] = *((unsigned char *)a2 + v21 + 24);
  *(_OWORD *)(v22 + 8) = *(_OWORD *)((char *)a2 + v21 + 8);
  uint64_t v24 = type metadata accessor for NotificationSymbolConfiguration(0);
  v11(&v22[*(int *)(v24 + 24)], &v23[*(int *)(v24 + 24)], v10);
  uint64_t v25 = *(int *)(v24 + 28);
  uint64_t v26 = &v22[v25];
  uint64_t v27 = &v23[v25];
  long long v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
  uint64_t v29 = a3[8];
  uint64_t v30 = a3[9];
  uint64_t v31 = (_OWORD *)((char *)a1 + v29);
  uint64_t v32 = (_OWORD *)((char *)a2 + v29);
  long long v33 = v32[3];
  v31[2] = v32[2];
  v31[3] = v33;
  long long v34 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v34;
  long long v35 = v32[8];
  long long v36 = v32[6];
  v31[7] = v32[7];
  v31[8] = v35;
  long long v37 = v32[5];
  v31[4] = v32[4];
  v31[5] = v37;
  v31[6] = v36;
  long long v38 = (char *)a1 + v30;
  uint64_t v39 = (char *)a2 + v30;
  *(_OWORD *)long long v38 = *(_OWORD *)v39;
  v38[16] = v39[16];
  uint64_t v40 = a3[10];
  uint64_t v41 = a3[11];
  uint64_t v42 = (char *)a1 + v40;
  uint64_t v43 = (char *)a2 + v40;
  *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
  v42[16] = v43[16];
  *((unsigned char *)a1 + v41) = *((unsigned char *)a2 + v41);
  uint64_t v44 = a3[12];
  uint64_t v45 = (char *)a1 + v44;
  uint64_t v46 = (char *)a2 + v44;
  *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
  *((void *)v45 + 2) = *((void *)v46 + 2);
  return a1;
}

void *assignWithTake for BannerConfiguration(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  uint64_t v6 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_249AEC9B8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  uint64_t v12 = v6[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  unsigned char v13[32] = v14[32];
  uint64_t v16 = v6[8];
  uint64_t v17 = (_OWORD *)((char *)a1 + v16);
  long long v18 = (_OWORD *)((char *)a2 + v16);
  long long v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  uint64_t v20 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
  uint64_t v21 = a3[7];
  uint64_t v22 = (char *)a1 + v21;
  long long v23 = (char *)a2 + v21;
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  swift_release();
  *(_OWORD *)(v22 + 8) = *(_OWORD *)(v23 + 8);
  v22[24] = v23[24];
  uint64_t v24 = type metadata accessor for NotificationSymbolConfiguration(0);
  v11(&v22[*(int *)(v24 + 24)], &v23[*(int *)(v24 + 24)], v10);
  uint64_t v25 = *(int *)(v24 + 28);
  uint64_t v26 = &v22[v25];
  uint64_t v27 = &v23[v25];
  long long v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
  uint64_t v29 = a3[8];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  *(void *)((char *)a1 + v29) = *(void *)((char *)a2 + v29);
  swift_release();
  *((void *)v30 + 1) = *((void *)v31 + 1);
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)(v30 + 16));
  long long v32 = *((_OWORD *)v31 + 2);
  *((_OWORD *)v30 + 1) = *((_OWORD *)v31 + 1);
  *((_OWORD *)v30 + 2) = v32;
  *((void *)v30 + 6) = *((void *)v31 + 6);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)(v30 + 56));
  *(_OWORD *)(v30 + 56) = *(_OWORD *)(v31 + 56);
  *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
  *((void *)v30 + 11) = *((void *)v31 + 11);
  *((_OWORD *)v30 + 6) = *((_OWORD *)v31 + 6);
  *((void *)v30 + 14) = *((void *)v31 + 14);
  *((void *)v30 + 15) = *((void *)v31 + 15);
  v30[128] = v31[128];
  *((void *)v30 + 17) = *((void *)v31 + 17);
  uint64_t v33 = a3[9];
  uint64_t v34 = a3[10];
  long long v35 = (char *)a1 + v33;
  long long v36 = (char *)a2 + v33;
  *(_OWORD *)long long v35 = *(_OWORD *)v36;
  v35[16] = v36[16];
  long long v37 = (char *)a1 + v34;
  long long v38 = (char *)a2 + v34;
  *(_OWORD *)long long v37 = *(_OWORD *)v38;
  v37[16] = v38[16];
  uint64_t v39 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  uint64_t v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  *(void *)((char *)a1 + v39) = *(void *)v41;
  swift_release();
  *(_OWORD *)(v40 + 8) = *(_OWORD *)(v41 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for BannerConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249A57E00);
}

uint64_t sub_249A57E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for NotificationSymbolConfiguration(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 28);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 32));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for BannerConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249A57F28);
}

uint64_t sub_249A57F28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for NotificationSymbolConfiguration(0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 28);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_249A58038()
{
  uint64_t result = type metadata accessor for IconNotificationButtonConfiguration(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for NotificationSymbolConfiguration(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for NoticeConfiguration(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v37 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v37 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    *(void *)uint64_t v8 = *(void *)((char *)a2 + v7);
    v8[24] = *((unsigned char *)a2 + v7 + 24);
    *(_OWORD *)(v8 + 8) = *(_OWORD *)((char *)a2 + v7 + 8);
    uint64_t v10 = type metadata accessor for NotificationSymbolConfiguration(0);
    uint64_t v11 = *(int *)(v10 + 24);
    uint64_t v39 = &v9[v11];
    uint64_t v40 = &v8[v11];
    uint64_t v12 = sub_249AEC9B8();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    v13(v40, v39, v12);
    uint64_t v14 = *(int *)(v10 + 28);
    long long v15 = &v8[v14];
    uint64_t v16 = &v9[v14];
    long long v17 = *((_OWORD *)v16 + 1);
    *(_OWORD *)long long v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v17;
    uint64_t v18 = a3[6];
    long long v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = *(void *)((char *)a2 + v18 + 8);
    *(void *)long long v19 = *(void *)((char *)a2 + v18);
    *((void *)v19 + 1) = v21;
    uint64_t v41 = (uint64_t)v4 + v18 + 16;
    uint64_t v22 = (uint64_t)a2 + v18 + 16;
    long long v23 = *(_OWORD *)((char *)a2 + v18 + 40);
    *(_OWORD *)(v19 + 40) = v23;
    uint64_t v24 = v23;
    uint64_t v25 = **(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8);
    swift_retain();
    swift_retain();
    v25(v41, v22, v24);
    long long v26 = *((_OWORD *)v20 + 5);
    *((_OWORD *)v19 + 5) = v26;
    (**(void (***)(uint64_t, uint64_t))(v26 - 8))((uint64_t)(v19 + 56), (uint64_t)(v20 + 56));
    long long v27 = *((_OWORD *)v20 + 7);
    *((_OWORD *)v19 + 6) = *((_OWORD *)v20 + 6);
    *((_OWORD *)v19 + 7) = v27;
    v19[128] = v20[128];
    *((void *)v19 + 17) = *((void *)v20 + 17);
    uint64_t v28 = a3[7];
    uint64_t v29 = a3[8];
    uint64_t v30 = (char *)v4 + v28;
    uint64_t v31 = (char *)a2 + v28;
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    v30[16] = v31[16];
    long long v32 = (char *)v4 + v29;
    uint64_t v33 = (char *)a2 + v29;
    *(_OWORD *)long long v32 = *(_OWORD *)v33;
    v32[16] = v33[16];
    uint64_t v34 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    long long v35 = (char *)v4 + v34;
    long long v36 = (char *)a2 + v34;
    *(void *)long long v35 = *(void *)v36;
    *(_OWORD *)(v35 + 8) = *(_OWORD *)(v36 + 8);
  }
  swift_retain();
  return v4;
}

uint64_t destroy for NoticeConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 24);
  uint64_t v6 = sub_249AEC9B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm(v7 + 16);
  __swift_destroy_boxed_opaque_existential_2Tm(v7 + 56);

  return swift_release();
}

void *initializeWithCopy for NoticeConfiguration(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v5 = a3[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  *(void *)uint64_t v6 = *(void *)((char *)a2 + v5);
  v6[24] = *((unsigned char *)a2 + v5 + 24);
  *(_OWORD *)(v6 + 8) = *(_OWORD *)((char *)a2 + v5 + 8);
  uint64_t v8 = type metadata accessor for NotificationSymbolConfiguration(0);
  uint64_t v9 = *(int *)(v8 + 24);
  long long v38 = &v6[v9];
  uint64_t v10 = &v7[v9];
  uint64_t v11 = sub_249AEC9B8();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_retain();
  v12(v38, v10, v11);
  uint64_t v13 = *(int *)(v8 + 28);
  uint64_t v14 = &v6[v13];
  long long v15 = &v7[v13];
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  uint64_t v17 = a3[6];
  uint64_t v18 = (char *)a1 + v17;
  long long v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)((char *)a2 + v17 + 8);
  *(void *)uint64_t v18 = *(void *)((char *)a2 + v17);
  *((void *)v18 + 1) = v20;
  uint64_t v21 = (uint64_t)a1 + v17 + 16;
  uint64_t v22 = (uint64_t)a2 + v17 + 16;
  long long v23 = *(_OWORD *)((char *)a2 + v17 + 40);
  *(_OWORD *)(v18 + 40) = v23;
  uint64_t v24 = v23;
  uint64_t v25 = **(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8);
  swift_retain();
  swift_retain();
  v25(v21, v22, v24);
  long long v26 = *((_OWORD *)v19 + 5);
  *((_OWORD *)v18 + 5) = v26;
  (**(void (***)(uint64_t, uint64_t))(v26 - 8))((uint64_t)(v18 + 56), (uint64_t)(v19 + 56));
  long long v27 = *((_OWORD *)v19 + 7);
  *((_OWORD *)v18 + 6) = *((_OWORD *)v19 + 6);
  *((_OWORD *)v18 + 7) = v27;
  v18[128] = v19[128];
  *((void *)v18 + 17) = *((void *)v19 + 17);
  uint64_t v28 = a3[7];
  uint64_t v29 = a3[8];
  uint64_t v30 = (char *)a1 + v28;
  uint64_t v31 = (char *)a2 + v28;
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  v30[16] = v31[16];
  long long v32 = (char *)a1 + v29;
  uint64_t v33 = (char *)a2 + v29;
  *(_OWORD *)long long v32 = *(_OWORD *)v33;
  v32[16] = v33[16];
  uint64_t v34 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  long long v35 = (char *)a1 + v34;
  long long v36 = (char *)a2 + v34;
  *(void *)long long v35 = *(void *)v36;
  *(_OWORD *)(v35 + 8) = *(_OWORD *)(v36 + 8);
  swift_retain();
  return a1;
}

void *assignWithCopy for NoticeConfiguration(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  long long v9 = *(_OWORD *)(v8 + 8);
  v7[24] = v8[24];
  *(_OWORD *)(v7 + 8) = v9;
  uint64_t v10 = type metadata accessor for NotificationSymbolConfiguration(0);
  uint64_t v11 = *(int *)(v10 + 24);
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_249AEC9B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = *(int *)(v10 + 28);
  long long v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  *(void *)long long v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  *((void *)v16 + 2) = *((void *)v17 + 2);
  *((void *)v16 + 3) = *((void *)v17 + 3);
  uint64_t v18 = a3[6];
  long long v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
  swift_retain();
  swift_release();
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v19 + 2, (uint64_t *)v20 + 2);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v19 + 7, (uint64_t *)v20 + 7);
  *((void *)v19 + 12) = *((void *)v20 + 12);
  *((void *)v19 + 13) = *((void *)v20 + 13);
  *((void *)v19 + 14) = *((void *)v20 + 14);
  *((void *)v19 + 15) = *((void *)v20 + 15);
  v19[128] = v20[128];
  *((void *)v19 + 17) = *((void *)v20 + 17);
  uint64_t v21 = a3[7];
  uint64_t v22 = (char *)a1 + v21;
  long long v23 = (char *)a2 + v21;
  long long v24 = *(_OWORD *)v23;
  v22[16] = v23[16];
  *(_OWORD *)uint64_t v22 = v24;
  uint64_t v25 = a3[8];
  long long v26 = (char *)a1 + v25;
  long long v27 = (char *)a2 + v25;
  long long v28 = *(_OWORD *)v27;
  v26[16] = v27[16];
  *(_OWORD *)long long v26 = v28;
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v29 = a3[10];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  *(void *)((char *)a1 + v29) = *(void *)((char *)a2 + v29);
  swift_retain();
  swift_release();
  *((void *)v30 + 1) = *((void *)v31 + 1);
  *((void *)v30 + 2) = *((void *)v31 + 2);
  return a1;
}

void *initializeWithTake for NoticeConfiguration(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)uint64_t v7 = *(void *)((char *)a2 + v6);
  v7[24] = *((unsigned char *)a2 + v6 + 24);
  *(_OWORD *)(v7 + 8) = *(_OWORD *)((char *)a2 + v6 + 8);
  uint64_t v9 = type metadata accessor for NotificationSymbolConfiguration(0);
  uint64_t v10 = *(int *)(v9 + 24);
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_249AEC9B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = *(int *)(v9 + 28);
  uint64_t v15 = &v7[v14];
  long long v16 = &v8[v14];
  long long v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  uint64_t v18 = a3[6];
  uint64_t v19 = a3[7];
  uint64_t v20 = (_OWORD *)((char *)a1 + v18);
  uint64_t v21 = (_OWORD *)((char *)a2 + v18);
  long long v22 = v21[3];
  uint64_t v20[2] = v21[2];
  void v20[3] = v22;
  long long v23 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v23;
  long long v24 = v21[8];
  long long v25 = v21[6];
  v20[7] = v21[7];
  _OWORD v20[8] = v24;
  long long v26 = v21[5];
  v20[4] = v21[4];
  v20[5] = v26;
  v20[6] = v25;
  long long v27 = (char *)a1 + v19;
  long long v28 = (char *)a2 + v19;
  *(_OWORD *)long long v27 = *(_OWORD *)v28;
  v27[16] = v28[16];
  uint64_t v29 = a3[8];
  uint64_t v30 = a3[9];
  uint64_t v31 = (char *)a1 + v29;
  long long v32 = (char *)a2 + v29;
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  v31[16] = v32[16];
  *((unsigned char *)a1 + v30) = *((unsigned char *)a2 + v30);
  uint64_t v33 = a3[10];
  uint64_t v34 = (char *)a1 + v33;
  long long v35 = (char *)a2 + v33;
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *((void *)v34 + 2) = *((void *)v35 + 2);
  return a1;
}

void *assignWithTake for NoticeConfiguration(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  swift_release();
  *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
  v7[24] = v8[24];
  uint64_t v9 = type metadata accessor for NotificationSymbolConfiguration(0);
  uint64_t v10 = *(int *)(v9 + 24);
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_249AEC9B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = *(int *)(v9 + 28);
  uint64_t v15 = &v7[v14];
  long long v16 = &v8[v14];
  long long v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  uint64_t v18 = a3[6];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
  swift_release();
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)(v19 + 16));
  long long v21 = *((_OWORD *)v20 + 2);
  *((_OWORD *)v19 + 1) = *((_OWORD *)v20 + 1);
  *((_OWORD *)v19 + 2) = v21;
  *((void *)v19 + 6) = *((void *)v20 + 6);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)(v19 + 56));
  *(_OWORD *)(v19 + 56) = *(_OWORD *)(v20 + 56);
  *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
  *((void *)v19 + 11) = *((void *)v20 + 11);
  *((_OWORD *)v19 + 6) = *((_OWORD *)v20 + 6);
  *((void *)v19 + 14) = *((void *)v20 + 14);
  *((void *)v19 + 15) = *((void *)v20 + 15);
  v19[128] = v20[128];
  *((void *)v19 + 17) = *((void *)v20 + 17);
  uint64_t v22 = a3[7];
  uint64_t v23 = a3[8];
  long long v24 = (char *)a1 + v22;
  long long v25 = (char *)a2 + v22;
  *(_OWORD *)long long v24 = *(_OWORD *)v25;
  v24[16] = v25[16];
  long long v26 = (char *)a1 + v23;
  long long v27 = (char *)a2 + v23;
  *(_OWORD *)long long v26 = *(_OWORD *)v27;
  v26[16] = v27[16];
  uint64_t v28 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  *(void *)((char *)a1 + v28) = *(void *)v30;
  swift_release();
  *(_OWORD *)(v29 + 8) = *(_OWORD *)(v30 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for NoticeConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249A58C00);
}

uint64_t sub_249A58C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NotificationSymbolConfiguration(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for NoticeConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249A58CD8);
}

uint64_t sub_249A58CD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for NotificationSymbolConfiguration(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_249A58D98()
{
  uint64_t result = type metadata accessor for NotificationSymbolConfiguration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for NoticeNotificationKey()
{
  return &type metadata for NoticeNotificationKey;
}

ValueMetadata *type metadata accessor for ChevronBannerNotificationKey()
{
  return &type metadata for ChevronBannerNotificationKey;
}

ValueMetadata *type metadata accessor for CloseButtonBannerNotificationKey()
{
  return &type metadata for CloseButtonBannerNotificationKey;
}

ValueMetadata *type metadata accessor for BlockingAlertNotificationKey()
{
  return &type metadata for BlockingAlertNotificationKey;
}

ValueMetadata *type metadata accessor for UserInteractiveNotificationKey()
{
  return &type metadata for UserInteractiveNotificationKey;
}

uint64_t sub_249A58EAC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249A58F0C(uint64_t a1)
{
  uint64_t v14 = MEMORY[0x263F8EE78];
  sub_249A21F10(0, 0, 0);
  uint64_t v2 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v2)
  {
    int v3 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v4 = *v3;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
      swift_unknownObjectRetain();
      uint64_t v7 = v6(ObjectType, v4);
      uint64_t v9 = v8;
      swift_unknownObjectRelease();
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_249A21F10(v10 > 1, v11 + 1, 1);
      }
      *(void *)(v14 + 16) = v11 + 1;
      uint64_t v12 = v14 + 16 * v11;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v9;
      v3 += 2;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_249A5902C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t _s16UnkeyedContainerCMa()
{
  return self;
}

uint64_t sub_249A59098@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249AF0A70;
  uint64_t v6 = (void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v7 = *(void *)(*(void *)(v1 + 16) + 16);
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_249AEDF48();
  uint64_t v10 = v9;
  *(void *)(inited + 56) = &type metadata for AnyCodingKey;
  *(void *)(inited + 64) = sub_249896A10();
  uint64_t v11 = swift_allocObject();
  *(void *)(inited + 32) = v11;
  *(void *)(v11 + 16) = v8;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v7;
  *(unsigned char *)(v11 + 40) = 0;
  sub_249894354(inited);
  uint64_t v12 = v4;
  uint64_t v13 = *(void *)(v2 + 32);
  uint64_t v14 = _s20SingleValueContainerCMa();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  *(void *)(v15 + 24) = 0xE000000000000000;
  *(unsigned char *)(v15 + 32) = 1;
  *(void *)(v15 + 40) = v12;
  *(void *)(v15 + 48) = v13;
  swift_beginAccess();
  long long v16 = *(void **)(v2 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + 16) = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    long long v16 = sub_2498AB168(0, v16[2] + 1, 1, v16);
    *uint64_t v6 = v16;
  }
  unint64_t v19 = v16[2];
  unint64_t v18 = v16[3];
  if (v19 >= v18 >> 1)
  {
    long long v16 = sub_2498AB168((void *)(v18 > 1), v19 + 1, 1, v16);
    *uint64_t v6 = v16;
  }
  uint64_t v16[2] = v19 + 1;
  uint64_t v20 = &v16[2 * v19];
  v20[4] = v15;
  v20[5] = &off_26FDAE250;
  swift_endAccess();
  a1[3] = v14;
  uint64_t result = sub_249A5A74C(&qword_2696E1708, 255, (void (*)(uint64_t))_s20SingleValueContainerCMa);
  a1[4] = result;
  *a1 = v15;
  return result;
}

uint64_t sub_249A592EC()
{
  sub_249A59098(v1);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v1, v1[3]);
  sub_249AEE178();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v1);
}

uint64_t sub_249A59380()
{
  uint64_t v1 = v0;
  _s14KeyedContainerCMa();
  uint64_t v2 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249AF0A70;
  uint64_t v4 = (void *)(v0 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(*(void *)(v0 + 16) + 16);
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_249AEDF48();
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for AnyCodingKey;
  *(void *)(inited + 64) = sub_249896A10();
  uint64_t v9 = swift_allocObject();
  *(void *)(inited + 32) = v9;
  *(void *)(v9 + 16) = v6;
  *(void *)(v9 + 24) = v8;
  *(void *)(v9 + 32) = v5;
  *(unsigned char *)(v9 + 40) = 0;
  sub_249894354(inited);
  uint64_t v10 = v2;
  uint64_t v11 = *(void *)(v1 + 32);
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_24998A1B8(v10, v11);
  swift_beginAccess();
  uint64_t v13 = *(void **)(v1 + 16);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v1 + 16) = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v13 = sub_2498AB168(0, v13[2] + 1, 1, v13);
    *uint64_t v4 = v13;
  }
  unint64_t v16 = v13[2];
  unint64_t v15 = v13[3];
  if (v16 >= v15 >> 1)
  {
    uint64_t v13 = sub_2498AB168((void *)(v15 > 1), v16 + 1, 1, v13);
    *uint64_t v4 = v13;
  }
  void v13[2] = v16 + 1;
  long long v17 = &v13[2 * v16];
  v17[4] = v12;
  v17[5] = &off_26FDAB6A8;
  swift_endAccess();
  swift_getWitnessTable();
  return sub_249AEDF28();
}

uint64_t sub_249A595C4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = v1[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249AF0A70;
  uint64_t v7 = v1 + 2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v1[2] + 16);
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_249AEDF48();
  uint64_t v11 = v10;
  *(void *)(inited + 56) = &type metadata for AnyCodingKey;
  *(void *)(inited + 64) = sub_249896A10();
  uint64_t v12 = swift_allocObject();
  *(void *)(inited + 32) = v12;
  *(void *)(v12 + 16) = v9;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v8;
  *(unsigned char *)(v12 + 40) = 0;
  sub_249894354(inited);
  uint64_t v13 = v2[4];
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = MEMORY[0x263F8EE78];
  v14[3] = v5;
  v14[4] = v13;
  swift_beginAccess();
  unint64_t v15 = (void *)v2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2[2] = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v15 = sub_2498AB168(0, v15[2] + 1, 1, v15);
    *uint64_t v7 = v15;
  }
  unint64_t v18 = v15[2];
  unint64_t v17 = v15[3];
  if (v18 >= v17 >> 1)
  {
    unint64_t v15 = sub_2498AB168((void *)(v17 > 1), v18 + 1, 1, v15);
    *uint64_t v7 = v15;
  }
  v15[2] = v18 + 1;
  unint64_t v19 = &v15[2 * v18];
  v19[4] = v14;
  v19[5] = &off_26FDB0E08;
  swift_endAccess();
  a1[3] = v4;
  uint64_t result = sub_249A5A74C(&qword_2696E1700, v20, (void (*)(uint64_t))_s16UnkeyedContainerCMa);
  a1[4] = result;
  *a1 = v14;
  return result;
}

uint64_t sub_249A59838@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249AF0A70;
  *(void *)(inited + 56) = &type metadata for AnyCodingKey;
  *(void *)(inited + 64) = sub_249896A10();
  uint64_t v6 = swift_allocObject();
  *(void *)(inited + 32) = v6;
  *(void *)(v6 + 16) = 0x7265707573;
  *(void *)(v6 + 24) = 0xE500000000000000;
  *(void *)(v6 + 32) = 0;
  *(unsigned char *)(v6 + 40) = 1;
  swift_bridgeObjectRetain();
  sub_249894354(inited);
  uint64_t v7 = v4;
  uint64_t v8 = *(void *)(v2 + 32);
  uint64_t v9 = type metadata accessor for _LuaEncoder();
  uint64_t v10 = (void *)swift_allocObject();
  uint64_t v10[2] = v7;
  _OWORD v10[3] = v8;
  v10[4] = 0;
  v10[5] = 0;
  a1[3] = v9;
  a1[4] = sub_249A5A74C((unint64_t *)&qword_2696E16F8, 255, (void (*)(uint64_t))type metadata accessor for _LuaEncoder);
  *a1 = v10;
  return swift_bridgeObjectRetain();
}

uint64_t sub_249A599A4()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(void *)(*(void *)(v1 + 16) + 16);
}

uint64_t sub_249A599E8()
{
  sub_249A59098(v1);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v1, v1[3]);
  sub_249AEE188();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v1);
}

uint64_t sub_249A59A58(char a1)
{
  char v3 = a1;
  sub_249A59098(v2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v2[3]);
  sub_249AEE178();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v2);
}

uint64_t sub_249A59AE0(uint64_t a1, uint64_t a2)
{
  v3[5] = a1;
  v3[6] = a2;
  sub_249A59098(v3);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v3[3]);
  sub_249AEE178();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v3);
}

uint64_t sub_249A59B68(double a1)
{
  *(double *)&v2[5] = a1;
  sub_249A59098(v2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v2[3]);
  sub_249AEE178();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v2);
}

uint64_t sub_249A59BF0(float a1)
{
  float v3 = a1;
  sub_249A59098(v2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v2[3]);
  sub_249AEE178();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v2);
}

uint64_t sub_249A59C78(uint64_t a1)
{
  return sub_249A59FD0(a1);
}

uint64_t sub_249A59CA0(char a1)
{
  return sub_249A59DA8(a1);
}

uint64_t sub_249A59CC8(__int16 a1)
{
  return sub_249A59E60(a1);
}

uint64_t sub_249A59CF0(int a1)
{
  return sub_249A59F18(a1);
}

uint64_t sub_249A59D18(uint64_t a1)
{
  return sub_249A59FD0(a1);
}

uint64_t sub_249A59D40()
{
  return sub_249AEE0A8();
}

uint64_t sub_249A59D58(uint64_t a1)
{
  return sub_249A59FD0(a1);
}

uint64_t sub_249A59D80(char a1)
{
  return sub_249A59DA8(a1);
}

uint64_t sub_249A59DA8(char a1)
{
  char v3 = a1;
  sub_249A59098(v2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v2[3]);
  sub_249AEE178();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v2);
}

uint64_t sub_249A59E38(__int16 a1)
{
  return sub_249A59E60(a1);
}

uint64_t sub_249A59E60(__int16 a1)
{
  __int16 v3 = a1;
  sub_249A59098(v2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v2[3]);
  sub_249AEE178();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v2);
}

uint64_t sub_249A59EF0(int a1)
{
  return sub_249A59F18(a1);
}

uint64_t sub_249A59F18(int a1)
{
  int v3 = a1;
  sub_249A59098(v2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v2[3]);
  sub_249AEE178();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v2);
}

uint64_t sub_249A59FA8(uint64_t a1)
{
  return sub_249A59FD0(a1);
}

uint64_t sub_249A59FD0(uint64_t a1)
{
  v2[5] = a1;
  sub_249A59098(v2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v2[3]);
  sub_249AEE178();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v2);
}

uint64_t sub_249A5A060()
{
  return sub_249AEE0B8();
}

uint64_t sub_249A5A078()
{
  return sub_249A592EC();
}

uint64_t sub_249A5A09C()
{
  return sub_249AEDF88();
}

uint64_t sub_249A5A0C8()
{
  return sub_249AEDFB8();
}

uint64_t sub_249A5A0F4()
{
  return sub_249AEDFA8();
}

uint64_t sub_249A5A120()
{
  return sub_249AEDFC8();
}

uint64_t sub_249A5A14C()
{
  return sub_249AEDFD8();
}

uint64_t sub_249A5A178()
{
  return sub_249AEDFE8();
}

uint64_t sub_249A5A1A4()
{
  return sub_249AEE008();
}

uint64_t sub_249A5A1D0()
{
  return sub_249AEE018();
}

uint64_t sub_249A5A1FC()
{
  return sub_249AEE028();
}

uint64_t sub_249A5A228()
{
  return sub_249AEE038();
}

uint64_t sub_249A5A254()
{
  return sub_249AEE058();
}

uint64_t sub_249A5A280()
{
  return sub_249AEDFF8();
}

uint64_t sub_249A5A2AC()
{
  return sub_249AEE048();
}

uint64_t sub_249A5A2D8()
{
  return sub_249AEE068();
}

uint64_t sub_249A5A304()
{
  return sub_249AEE078();
}

uint64_t sub_249A5A330()
{
  return sub_249AEE088();
}

uint64_t sub_249A5A35C()
{
  return sub_249AEE098();
}

uint64_t sub_249A5A388()
{
  return sub_249AEDF98();
}

uint64_t sub_249A5A3BC()
{
  return sub_249A59380();
}

uint64_t sub_249A5A3E0@<X0>(void *a1@<X8>)
{
  return sub_249A595C4(a1);
}

uint64_t sub_249A5A404@<X0>(void *a1@<X8>)
{
  return sub_249A59838(a1);
}

uint64_t sub_249A5A428()
{
  swift_beginAccess();
  if (!*(void *)(*(void *)(v0 + 16) + 16)) {
    return 32123;
  }
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_249A58F0C(v1);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0800);
  sub_2499544D0();
  uint64_t v2 = sub_249AECFE8();
  unint64_t v4 = v3;
  swift_bridgeObjectRelease();
  sub_249A5A620(123, 0xE100000000000000, v2, v4);
  if (v5)
  {
    uint64_t v11 = 8315;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x24C5AE400](8224, 0xE200000000000000, *(void *)(*(void *)(v0 + 24) + 16));
    uint64_t v8 = v7;
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_249A5A794(v9, v6, v8);
    swift_bridgeObjectRelease();
    uint64_t v11 = 2683;
    sub_249AECFE8();
    swift_bridgeObjectRelease();
    sub_249AED1E8();
    swift_bridgeObjectRelease();
    sub_249AED1E8();
  }
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  sub_249AED1E8();
  return v11;
}

unint64_t sub_249A5A620(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 4 * v4;
  unint64_t v8 = 15;
  while (sub_249AED298() != a1 || v9 != a2)
  {
    char v10 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v10) {
      return v8;
    }
    unint64_t v8 = sub_249AED198();
    if (v7 == v8 >> 14) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_249A5A714()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 41, 7);
}

uint64_t sub_249A5A74C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249A5A794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = MEMORY[0x263F8EE78];
  sub_249A21F10(0, 0, 0);
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v7 = *v6;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      swift_unknownObjectRetain();
      v9(ObjectType, v7);
      sub_249AED1E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_249AED1E8();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v11 = *(void *)(v15 + 16);
      unint64_t v10 = *(void *)(v15 + 24);
      if (v11 >= v10 >> 1) {
        sub_249A21F10(v10 > 1, v11 + 1, 1);
      }
      *(void *)(v15 + 16) = v11 + 1;
      uint64_t v12 = v15 + 16 * v11;
      *(void *)(v12 + 32) = a2;
      *(void *)(v12 + 40) = a3;
      v6 += 2;
      --v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  return v15;
}

double ArcDocument.init(package:editableTheme:extras:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  char v6 = *(unsigned char *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = *(void *)(a1 + 88);
  uint64_t v10 = *(void *)(a1 + 96);
  char v11 = *(unsigned char *)(a1 + 104);
  uint64_t v12 = *(void *)(a1 + 112);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(void *)(a4 + 16) = v4;
  *(void *)(a4 + 24) = v5;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(a4 + 48) = v6;
  *(void *)(a4 + 56) = v7;
  *(void *)(a4 + 64) = v8;
  *(_OWORD *)(a4 + 72) = *(_OWORD *)(a1 + 72);
  *(void *)(a4 + 88) = v9;
  *(void *)(a4 + 96) = v10;
  *(unsigned char *)(a4 + 104) = v11;
  *(void *)(a4 + 112) = v12;
  *(_OWORD *)(a4 + 120) = *a2;
  double result = 0.0;
  *(_OWORD *)(a4 + 168) = 0u;
  *(_OWORD *)(a4 + 152) = 0u;
  *(_OWORD *)(a4 + 136) = 0u;
  *(void *)(a4 + 184) = 0;
  *(void *)(a4 + 192) = a3;
  *(void *)(a4 + 200) = 0;
  return result;
}

uint64_t ArcDocument.save(using:)(void *a1)
{
  long long v2 = v1[11];
  v11[10] = v1[10];
  v11[11] = v2;
  v11[12] = v1[12];
  long long v3 = v1[7];
  v11[6] = v1[6];
  v11[7] = v3;
  long long v4 = v1[9];
  v11[8] = v1[8];
  v11[9] = v4;
  long long v5 = v1[3];
  v11[2] = v1[2];
  v11[3] = v5;
  long long v6 = v1[5];
  void v11[4] = v1[4];
  v11[5] = v6;
  long long v7 = v1[1];
  v11[0] = *v1;
  v11[1] = v7;
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, v8);
  return (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v9 + 8))(v11, v8, v9);
}

uint64_t ArcDocument.package.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v7 = *(void *)(v1 + 64);
  uint64_t v8 = *(void *)(v1 + 88);
  uint64_t v9 = *(void *)(v1 + 96);
  char v10 = *(unsigned char *)(v1 + 104);
  uint64_t v11 = *(void *)(v1 + 112);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(unsigned char *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(v1 + 72);
  *(void *)(a1 + 88) = v8;
  *(void *)(a1 + 96) = v9;
  *(unsigned char *)(a1 + 104) = v10;
  *(void *)(a1 + 112) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_249A5AAC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 88);
  uint64_t v9 = *(void *)(a1 + 96);
  char v10 = *(unsigned char *)(a1 + 104);
  uint64_t v11 = *(void *)(a1 + 112);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v6;
  *(void *)(a2 + 64) = v7;
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(a1 + 72);
  *(void *)(a2 + 88) = v8;
  *(void *)(a2 + 96) = v9;
  *(unsigned char *)(a2 + 104) = v10;
  *(void *)(a2 + 112) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_249A5AB60(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[3];
  uint64_t v19 = a1[2];
  uint64_t v20 = *a1;
  uint64_t v17 = a1[5];
  uint64_t v18 = a1[4];
  char v16 = *((unsigned char *)a1 + 48);
  uint64_t v5 = a1[8];
  uint64_t v15 = a1[7];
  long long v14 = *(_OWORD *)(a1 + 9);
  uint64_t v6 = a1[12];
  uint64_t v13 = a1[11];
  char v12 = *((unsigned char *)a1 + 104);
  uint64_t v7 = a1[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v18;
  *(void *)(a2 + 40) = v17;
  *(unsigned char *)(a2 + 48) = v16;
  *(void *)(a2 + 56) = v15;
  *(void *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 72) = v14;
  *(void *)(a2 + 88) = v13;
  *(void *)(a2 + 96) = v6;
  *(unsigned char *)(a2 + 104) = v12;
  *(void *)(a2 + 112) = v7;
  uint64_t v9 = *(void *)(a2 + 200);
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    *(void *)(a2 + 200) = v11;
  }
  return result;
}

uint64_t ArcDocument.package.setter(long long *a1)
{
  long long v15 = a1[1];
  long long v16 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  uint64_t v3 = *((void *)a1 + 5);
  char v4 = *((unsigned char *)a1 + 48);
  long long v13 = *(long long *)((char *)a1 + 72);
  long long v14 = *(long long *)((char *)a1 + 56);
  uint64_t v5 = *((void *)a1 + 11);
  uint64_t v6 = *((void *)a1 + 12);
  char v12 = *((unsigned char *)a1 + 104);
  uint64_t v11 = *((void *)a1 + 14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(_OWORD *)uint64_t v1 = v16;
  *(_OWORD *)(v1 + 16) = v15;
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v3;
  *(unsigned char *)(v1 + 48) = v4;
  *(_OWORD *)(v1 + 56) = v14;
  *(_OWORD *)(v1 + 72) = v13;
  *(void *)(v1 + 88) = v5;
  *(void *)(v1 + 96) = v6;
  *(unsigned char *)(v1 + 104) = v12;
  *(void *)(v1 + 112) = v11;
  uint64_t v8 = *(void *)(v1 + 200);
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    *(void *)(v1 + 200) = v10;
  }
  return result;
}

uint64_t (*ArcDocument.package.modify(void *a1))()
{
  *a1 = v1;
  return sub_249A5ADD0;
}

uint64_t ArcDocument.editableTheme.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 128);
  *a1 = *(void *)(v1 + 120);
  a1[1] = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_249A5AE10(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  a2[15] = v3;
  a2[16] = v4;
  uint64_t v6 = a2[25];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a2[25] = v8;
  }
  return result;
}

uint64_t ArcDocument.editableTheme.setter(_OWORD *a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(_OWORD *)(v1 + 120) = *a1;
  uint64_t v4 = *(void *)(v1 + 200);
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    *(void *)(v1 + 200) = v6;
  }
  return result;
}

uint64_t (*ArcDocument.editableTheme.modify(void *a1))()
{
  *a1 = v1;
  return sub_249A5ADD0;
}

uint64_t sub_249A5AEF8(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
  {
    uint64_t v2 = *(void *)(*(void *)result + 200);
    BOOL v3 = __OFADD__(v2, 1);
    uint64_t v4 = v2 + 1;
    if (v3) {
      __break(1u);
    }
    else {
      *(void *)(*(void *)result + 200) = v4;
    }
  }
  return result;
}

uint64_t ArcDocument.theme.getter@<X0>(void *a1@<X8>)
{
  uint64_t v4 = v1[17];
  uint64_t v3 = v1[18];
  uint64_t v5 = v1[19];
  uint64_t v6 = v1[20];
  uint64_t v7 = v1[21];
  uint64_t v8 = v1[22];
  uint64_t v9 = v1[23];
  if (v5)
  {
    long long v15 = &type metadata for ResolvedTheme;
    long long v16 = &protocol witness table for ResolvedTheme;
    uint64_t v10 = (void *)swift_allocObject();
    *(void *)&long long v14 = v10;
    uint64_t v10[2] = v4;
    _OWORD v10[3] = v3;
    v10[4] = v5;
    v10[5] = v6;
    v10[6] = v7;
    v10[7] = v8;
    v10[8] = v9;
    sub_249882BCC(&v14, (uint64_t)a1);
  }
  else
  {
    uint64_t v11 = v1[15];
    uint64_t v12 = v1[16];
    a1[3] = &type metadata for EditableTheme;
    a1[4] = &protocol witness table for EditableTheme;
    *a1 = v11;
    a1[1] = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return sub_249A5B008(v4, v3, v5);
}

uint64_t sub_249A5B008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_249A5B074()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

void *ArcDocument.extras.getter()
{
  uint64_t v1 = *(void **)(v0 + 192);
  id v2 = v1;
  return v1;
}

void ArcDocument.extras.setter(uint64_t a1)
{
  *(void *)(v1 + 192) = a1;
}

uint64_t (*ArcDocument.extras.modify())()
{
  return nullsub_1;
}

uint64_t ArcDocument.revision.getter()
{
  return *(void *)(v0 + 200);
}

uint64_t ArcDocument.revision.setter(uint64_t result)
{
  *(void *)(v1 + 200) = result;
  return result;
}

uint64_t (*ArcDocument.revision.modify())()
{
  return nullsub_1;
}

uint64_t sub_249A5B178@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 128);
  *a2 = *(void *)(a1 + 120);
  a2[1] = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void destroy for ArcDocument(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 152))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = *(void **)(a1 + 192);
}

uint64_t initializeWithCopy for ArcDocument(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v9 = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v10;
    uint64_t v11 = *(void *)(a2 + 160);
    uint64_t v12 = *(void *)(a2 + 168);
    *(void *)(a1 + 152) = v9;
    *(void *)(a1 + 160) = v11;
    uint64_t v14 = *(void *)(a2 + 176);
    uint64_t v13 = *(void *)(a2 + 184);
    *(void *)(a1 + 168) = v12;
    *(void *)(a1 + 176) = v14;
    *(void *)(a1 + 184) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v15 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v15;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
  }
  long long v16 = *(void **)(a2 + 192);
  uint64_t v17 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = v16;
  *(void *)(a1 + 200) = v17;
  id v18 = v16;
  return a1;
}

uint64_t assignWithCopy for ArcDocument(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 136);
  uint64_t v5 = (long long *)(a2 + 136);
  uint64_t v6 = *(void *)(a2 + 152);
  if (*(void *)(a1 + 152))
  {
    if (v6)
    {
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
    }
    else
    {
      sub_249A5B62C(a1 + 136);
      long long v8 = *(_OWORD *)(a2 + 152);
      long long v7 = *(_OWORD *)(a2 + 168);
      long long v9 = *v5;
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(_OWORD *)(a1 + 152) = v8;
      *(_OWORD *)(a1 + 168) = v7;
      *uint64_t v4 = v9;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *v5;
    long long v11 = *(_OWORD *)(a2 + 152);
    long long v12 = *(_OWORD *)(a2 + 168);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(_OWORD *)(a1 + 152) = v11;
    *(_OWORD *)(a1 + 168) = v12;
    *uint64_t v4 = v10;
  }
  uint64_t v13 = *(void **)(a1 + 192);
  uint64_t v14 = *(void **)(a2 + 192);
  *(void *)(a1 + 192) = v14;
  id v15 = v14;

  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  return a1;
}

uint64_t sub_249A5B62C(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for ArcDocument(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 152)) {
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(a2 + 152);
  if (!v8)
  {
    sub_249A5B62C(a1 + 136);
LABEL_5:
    long long v9 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v9;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    goto LABEL_6;
  }
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
LABEL_6:
  long long v10 = *(void **)(a1 + 192);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);

  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArcDocument(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 208)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArcDocument(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 208) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArcDocument()
{
  return &type metadata for ArcDocument;
}

uint64_t Color.encode(to:)(void *a1, uint64_t a2)
{
  CGColorSpaceRef v4 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x263F002D8]);
  if (!v4) {
    goto LABEL_16;
  }
  uint64_t v5 = v4;
  uint64_t v6 = (CGColor *)sub_249AEC818();
  if (!v6
    || (uint64_t v7 = v6,
        CGColorRef CopyByMatchingToColorSpace = CGColorCreateCopyByMatchingToColorSpace(v5, kCGRenderingIntentDefault, v6, 0),
        v7,
        !CopyByMatchingToColorSpace))
  {
    CGColorRef CopyByMatchingToColorSpace = v5;
LABEL_15:

LABEL_16:
    uint64_t v16 = sub_249AEDB38();
    swift_allocError();
    id v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3168);
    v18[3] = MEMORY[0x263F1B440];
    *id v18 = a2;
    __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
    swift_retain();
    sub_249AEE438();
    sub_249AEDAE8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x263F8DCE0], v16);
    return swift_willThrow();
  }
  if (CGColorGetNumberOfComponents(CopyByMatchingToColorSpace) != 4 || (uint64_t v9 = sub_249AED788()) == 0)
  {

    goto LABEL_15;
  }
  uint64_t v10 = v9;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249AEE458();
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    while (1)
    {
      double v13 = *(double *)(v10 + 8 * v12 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E07F8);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_249AF0A70;
      double v15 = v13 * 255.0;
      if ((~COERCE__INT64(v13 * 255.0) & 0x7FF0000000000000) == 0) {
        break;
      }
      if (v15 <= -9.22337204e18) {
        goto LABEL_19;
      }
      if (v15 >= 9.22337204e18) {
        goto LABEL_20;
      }
      ++v12;
      *(void *)(result + 56) = MEMORY[0x263F8D6C8];
      *(void *)(result + 64) = MEMORY[0x263F8D750];
      *(void *)(result + 32) = (uint64_t)v15;
      sub_249AED0F8();
      swift_bridgeObjectRetain();
      sub_249AED1E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v11 == v12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    sub_249AED1E8();
    swift_bridgeObjectRelease();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
    sub_249AEE148();
    swift_bridgeObjectRelease();

    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v19);
  }
  return result;
}

long long *Color.init(from:)(void *a1)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249AEE408();
  if (v1)
  {

    __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
    sub_249AEE418();
    __swift_project_boxed_opaque_existential_2Tm(v29, v30);
    uint64_t v3 = sub_249AEE0E8();
    unint64_t v5 = v4;
    if ((sub_249AED278() & 1) != 0 && sub_249AED188() == 9)
    {
      unint64_t v6 = sub_249AED1B8();
      swift_bridgeObjectRetain();
      unint64_t v7 = sub_249A061C8(v6, v3, v5);
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      uint64_t v13 = v12;
      swift_bridgeObjectRelease();
      MEMORY[0x24C5AE2B0](v7, v9, v11, v13);
      swift_bridgeObjectRelease();
      id v14 = objc_allocWithZone(MEMORY[0x263F08B08]);
      double v15 = (void *)sub_249AED0A8();
      swift_bridgeObjectRelease();
      id v16 = objc_msgSend(v14, sel_initWithString_, v15);

      uint64_t v27 = 0;
      if (objc_msgSend(v16, sel_scanHexLongLong_, &v27))
      {
        swift_bridgeObjectRelease();
        CGColorRef SRGB = CGColorCreateSRGB((double)BYTE3(v27) / 255.0, (double)BYTE2(v27) / 255.0, (double)BYTE1(v27) / 255.0, (double)v27 / 255.0);
        p_alphCGFloat a = (long long *)MEMORY[0x24C5ADAB0](SRGB);
      }
      else
      {
        uint64_t v22 = sub_249AEDB08();
        swift_allocError();
        long long v26 = v23;
        __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
        sub_249AEE3F8();
        *(void *)&alphCGFloat a = 0;
        *((void *)&alpha + 1) = 0xE000000000000000;
        sub_249AEDA78();
        swift_bridgeObjectRelease();
        strcpy((char *)&alpha, "invalid color ");
        HIBYTE(alpha) = -18;
        sub_249AED1E8();
        swift_bridgeObjectRelease();
        p_alphCGFloat a = v26;
        sub_249AEDAE8();
        (*(void (**)(long long *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v26, *MEMORY[0x263F8DCB8], v22);
        swift_willThrow();
      }
    }
    else
    {
      uint64_t v18 = sub_249AEDB08();
      swift_allocError();
      uint64_t v20 = v19;
      __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
      sub_249AEE3F8();
      sub_249AEDA78();
      swift_bridgeObjectRelease();
      strcpy((char *)&alpha, "invalid color ");
      HIBYTE(alpha) = -18;
      p_alphCGFloat a = &alpha;
      sub_249AED1E8();
      swift_bridgeObjectRelease();
      sub_249AEDAE8();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, *MEMORY[0x263F8DCB8], v18);
      swift_willThrow();
    }
  }
  else
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
    sub_24988E570();
    sub_249AEDF58();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
    sub_249AEDF58();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
    sub_249AEDF58();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
    sub_249AEDF58();
    CGColorRef v24 = CGColorCreateSRGB(*(CGFloat *)&alpha, *(CGFloat *)&alpha, *(CGFloat *)&alpha, *(CGFloat *)&alpha);
    p_alphCGFloat a = (long long *)MEMORY[0x24C5ADAB0](v24);
  }
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  return p_alpha;
}

long long *sub_249A5C23C@<X0>(void *a1@<X0>, long long **a2@<X8>)
{
  uint64_t result = Color.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_249A5C268(void *a1)
{
  return Color.encode(to:)(a1, *v1);
}

uint64_t sub_249A5C284(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v37 = MEMORY[0x263F8EE78];
  sub_249A21F30(0, v1, 0);
  uint64_t v2 = v37;
  uint64_t result = sub_249A49DE4(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v25 = v3 + 80;
  int64_t v26 = v1;
  int v27 = v5;
  uint64_t v28 = v3 + 64;
  uint64_t v29 = v3;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v30 = v7;
    uint64_t v12 = *(void *)(v3 + 56) + 48 * v6;
    uint64_t v13 = *(void **)v12;
    uint64_t v14 = *(void *)(v12 + 8);
    uint64_t v15 = *(void *)(v12 + 24);
    char v16 = *(unsigned char *)(v12 + 32);
    uint64_t v31 = *(void *)(v12 + 40);
    long long v32 = *(void **)(v12 + 16);
    sub_24988247C(*(void **)v12, v14, v32, v15, v16);
    uint64_t v37 = v2;
    unint64_t v18 = *(void *)(v2 + 16);
    unint64_t v17 = *(void *)(v2 + 24);
    int64_t v33 = v18 + 1;
    if (v18 >= v17 >> 1)
    {
      sub_249A21F30(v17 > 1, v33, 1);
      uint64_t v2 = v37;
    }
    long long v35 = &type metadata for ImageAsset;
    long long v36 = &protocol witness table for ImageAsset;
    uint64_t v19 = swift_allocObject();
    *(void *)&long long v34 = v19;
    *(void *)(v19 + 16) = v13;
    *(void *)(v19 + 24) = v14;
    *(void *)(v19 + 32) = v32;
    *(void *)(v19 + 40) = v15;
    *(unsigned char *)(v19 + 48) = v16;
    *(void *)(v19 + 56) = v31;
    *(void *)(v2 + 16) = v33;
    uint64_t result = sub_249882BCC(&v34, v2 + 40 * v18 + 32);
    uint64_t v3 = v29;
    int64_t v9 = 1 << *(unsigned char *)(v29 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = v28;
    uint64_t v20 = *(void *)(v28 + 8 * v11);
    if ((v20 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v27;
    if (*(_DWORD *)(v29 + 36) != v27) {
      goto LABEL_27;
    }
    unint64_t v21 = v20 & (-2 << (v6 & 0x3F));
    if (v21)
    {
      int64_t v9 = __clz(__rbit64(v21)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v26;
    }
    else
    {
      unint64_t v22 = v11 + 1;
      unint64_t v23 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v26;
      if (v11 + 1 < v23)
      {
        unint64_t v24 = *(void *)(v28 + 8 * v22);
        if (v24)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v24)) + (v22 << 6);
        }
        else
        {
          while (v23 - 2 != v11)
          {
            unint64_t v24 = *(void *)(v25 + 8 * v11++);
            if (v24)
            {
              unint64_t v22 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v30 + 1;
    uint64_t v6 = v9;
    if (v30 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.dataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.dataIdentifier.setter(unsigned char *result)
{
  *int64_t v1 = *result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.dataIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.stateColorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.stateColorIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.stateColorIDs.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.defaultColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_24988D770(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.defaultColorID.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_24988D788(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  *(unsigned char *)(v1 + 32) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.defaultColorID.modify())()
{
  return nullsub_1;
}

__n128 Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.init(dataIdentifier:stateColorIDs:defaultColorID:)@<Q0>(unsigned __int8 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, __n128 *a4@<X8>)
{
  unsigned __int8 v4 = a3[1].n128_u8[0];
  a4->n128_u8[0] = *a1;
  a4->n128_u64[1] = a2;
  __n128 result = *a3;
  a4[1] = *a3;
  a4[2].n128_u8[0] = v4;
  return result;
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.hash(into:)(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 32);
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v4);
  swift_bridgeObjectRelease();
  sub_24988D770(v3, v5, v6);
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();

  return sub_24988D788(v3, v5, v6);
}

uint64_t sub_249A5C724()
{
  uint64_t v1 = 0x6C6F436574617473;
  if (*v0 != 1) {
    uint64_t v1 = 0x43746C7561666564;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E65644961746164;
  }
}

uint64_t sub_249A5C7A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A5FFE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A5C7CC(uint64_t a1)
{
  unint64_t v2 = sub_249A5EC90();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A5C808(uint64_t a1)
{
  unint64_t v2 = sub_249A5EC90();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E44B8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  uint64_t v15 = *((void *)v1 + 2);
  uint64_t v16 = v9;
  uint64_t v14 = *((void *)v1 + 3);
  int v20 = v1[32];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A5EC90();
  sub_249AEE468();
  LOBYTE(v17) = v8;
  char v21 = 0;
  sub_24989C934();
  sub_249AEDF08();
  if (!v2)
  {
    char v10 = v20;
    uint64_t v12 = v14;
    uint64_t v11 = v15;
    uint64_t v17 = v16;
    char v21 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00D8);
    sub_24994507C((unint64_t *)&qword_2696E00E0, (void (*)(void))sub_24988E104);
    sub_249AEDF08();
    uint64_t v17 = v11;
    uint64_t v18 = v12;
    char v19 = v10;
    char v21 = 2;
    sub_24988E104();
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.hashValue.getter()
{
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  sub_249AEE338();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24988A2D4((uint64_t)v6, v2);
  swift_bridgeObjectRelease();
  sub_24988D770(v1, v3, v4);
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988D788(v1, v3, v4);
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E44C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A5EC90();
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  char v19 = 0;
  sub_24989C988();
  sub_249AEDE08();
  char v9 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00D8);
  char v19 = 1;
  sub_24994507C((unint64_t *)&qword_2696E00F8, (void (*)(void))sub_24988E268);
  sub_249AEDE08();
  uint64_t v10 = v16;
  char v19 = 2;
  sub_24988E268();
  swift_bridgeObjectRetain();
  sub_249AEDE08();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v11 = v16;
  uint64_t v12 = v17;
  char v13 = v18;
  swift_bridgeObjectRetain();
  sub_24988D770(v11, v12, v13);
  swift_bridgeObjectRelease();
  *(unsigned char *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v12;
  *(unsigned char *)(a2 + 32) = v13;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_24988D788(v11, v12, v13);
}

uint64_t sub_249A5CE3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.init(from:)(a1, a2);
}

uint64_t sub_249A5CE54(void *a1)
{
  return Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.encode(to:)(a1);
}

uint64_t sub_249A5CE74()
{
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  sub_249AEE338();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24988A2D4((uint64_t)v6, v2);
  swift_bridgeObjectRelease();
  sub_24988D770(v1, v3, v4);
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988D788(v1, v3, v4);
  return sub_249AEE388();
}

void Instrument.GaugeStyle.StateSensitiveImage.StateImages.dataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *Instrument.GaugeStyle.StateSensitiveImage.StateImages.dataIdentifier.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.StateSensitiveImage.StateImages.dataIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StateImages.images.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StateImages.images.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.StateSensitiveImage.StateImages.images.modify())()
{
  return nullsub_1;
}

unsigned char *Instrument.GaugeStyle.StateSensitiveImage.StateImages.init(dataIdentifier:images:)@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)a3 = *result;
  *(void *)(a3 + 8) = a2;
  return result;
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StateImages.assets.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_249A5C284(v0);
  swift_bridgeObjectRelease();
  return v1;
}

void Instrument.GaugeStyle.StateSensitiveImage.StateImages.restoreAssets(from:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v6[2] = a1;
  sub_249A49B30((void (*)(_OWORD *__return_ptr, void *))sub_249A5ECE4, (uint64_t)v6, v3);
  if (!v2)
  {
    uint64_t v5 = v4;
    swift_bridgeObjectRelease();
    *(void *)(v1 + 8) = v5;
  }
}

void sub_249A5D0B8(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(void **)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  char v10 = *(unsigned char *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  sub_24988247C(*(void **)a1, v7, v8, v9, v10);
  ImageAsset.restore(from:)(a2);
  if (v3)
  {
    sub_2498826E4(v6, v7, v8, v9, v10);
  }
  else
  {
    *(void *)a3 = v6;
    *(void *)(a3 + 8) = v7;
    *(void *)(a3 + 16) = v8;
    *(void *)(a3 + 24) = v9;
    *(unsigned char *)(a3 + 32) = v10;
    *(void *)(a3 + 40) = v11;
  }
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StateImages.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24988AAA4(a1, v3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_249A5D1EC()
{
  if (*v0) {
    return 0x736567616D69;
  }
  else {
    return 0x6E65644961746164;
  }
}

uint64_t sub_249A5D230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A601A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A5D258(uint64_t a1)
{
  unint64_t v2 = sub_249A5ED00();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A5D294(uint64_t a1)
{
  unint64_t v2 = sub_249A5ED00();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StateImages.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E44D0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  v10[0] = *((void *)v1 + 1);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A5ED00();
  sub_249AEE468();
  char v13 = v8;
  char v12 = 0;
  sub_24989C934();
  sub_249AEDF08();
  if (!v2)
  {
    v10[1] = v10[0];
    char v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDF30);
    sub_249A115E0(&qword_2696DDF38, (void (*)(void))sub_24989D190);
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StateImages.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_249AEE338();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988AAA4((uint64_t)v3, v1);
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StateImages.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E44E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A5ED00();
  sub_249AEE428();
  if (!v2)
  {
    char v14 = 0;
    sub_24989C988();
    sub_249AEDE08();
    char v9 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDF30);
    char v13 = 1;
    sub_249A115E0(&qword_2696DDF58, (void (*)(void))sub_24989D2E8);
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v10 = v12[1];
    *(unsigned char *)a2 = v9;
    *(void *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_249A5D748()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_249A5C284(v0);
  swift_bridgeObjectRelease();
  return v1;
}

void sub_249A5D79C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v6[2] = a1;
  sub_249A49B30((void (*)(_OWORD *__return_ptr, void *))sub_249A60438, (uint64_t)v6, v3);
  if (!v2)
  {
    uint64_t v5 = v4;
    swift_bridgeObjectRelease();
    *(void *)(v1 + 8) = v5;
  }
}

uint64_t sub_249A5D800@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.GaugeStyle.StateSensitiveImage.StateImages.init(from:)(a1, a2);
}

uint64_t sub_249A5D818(void *a1)
{
  return Instrument.GaugeStyle.StateSensitiveImage.StateImages.encode(to:)(a1);
}

uint64_t sub_249A5D830()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_249AEE338();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988AAA4((uint64_t)v3, v1);
  return sub_249AEE388();
}

uint64_t sub_249A5D8B0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();

  return sub_24988AAA4(a1, v3);
}

uint64_t sub_249A5D92C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_249AEE338();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988AAA4((uint64_t)v3, v1);
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.defaultImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void **)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v7 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v6;
  return sub_24988247C(v2, v3, v4, v5, v7);
}

__n128 Instrument.GaugeStyle.StateSensitiveImage.defaultImage.setter(__n128 *a1)
{
  __n128 v7 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  unsigned __int8 v4 = a1[2].n128_u8[0];
  unint64_t v5 = a1[2].n128_u64[1];
  sub_2498826E4(*(void **)v1, *(void *)(v1 + 8), *(void **)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
  __n128 result = v7;
  *(__n128 *)uint64_t v1 = v7;
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  *(unsigned char *)(v1 + 32) = v4;
  *(void *)(v1 + 40) = v5;
  return result;
}

uint64_t (*Instrument.GaugeStyle.StateSensitiveImage.defaultImage.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.stateImages.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  *a1 = *(void *)(v1 + 48);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.stateImages.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v3;
  return result;
}

uint64_t (*Instrument.GaugeStyle.StateSensitiveImage.stateImages.modify())()
{
  return nullsub_1;
}

void Instrument.GaugeStyle.StateSensitiveImage.statefulSolidColors.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v5 = *(void *)(v1 + 88);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v6 = *(unsigned char *)(v1 + 96);
  *(unsigned char *)(a1 + 32) = v6;
  sub_249A5ED54(v2, v3, v4, v5, v6);
}

__n128 Instrument.GaugeStyle.StateSensitiveImage.statefulSolidColors.setter(__n128 *a1)
{
  __n128 v6 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  unsigned __int8 v4 = a1[2].n128_u8[0];
  sub_249A5EDB0(*(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(unsigned char *)(v1 + 96));
  __n128 result = v6;
  *(__n128 *)(v1 + 64) = v6;
  *(void *)(v1 + 80) = v2;
  *(void *)(v1 + 88) = v3;
  *(unsigned char *)(v1 + 96) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.StateSensitiveImage.statefulSolidColors.modify())()
{
  return nullsub_1;
}

__n128 Instrument.GaugeStyle.StateSensitiveImage.init(defaultImage:stateImages:statefulSolidColors:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X8>)
{
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v4;
  __n128 result = *a2;
  long long v6 = *a3;
  long long v7 = a3[1];
  *(__n128 *)(a4 + 48) = *a2;
  *(_OWORD *)(a4 + 64) = v6;
  uint64_t v8 = *(void *)(a1 + 40);
  char v9 = *((unsigned char *)a3 + 32);
  *(unsigned char *)(a4 + 32) = *(unsigned char *)(a1 + 32);
  *(void *)(a4 + 40) = v8;
  *(_OWORD *)(a4 + 80) = v7;
  *(unsigned char *)(a4 + 96) = v9;
  return result;
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.assets.getter()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  unint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  char v5 = *(unsigned char *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_249AF0A70;
  *(void *)(v8 + 56) = &type metadata for ImageAsset;
  *(void *)(v8 + 64) = &protocol witness table for ImageAsset;
  uint64_t v9 = swift_allocObject();
  *(void *)(v8 + 32) = v9;
  *(void *)(v9 + 16) = v1;
  *(void *)(v9 + 24) = v2;
  *(void *)(v9 + 32) = v3;
  *(void *)(v9 + 40) = v4;
  *(unsigned char *)(v9 + 48) = v5;
  *(void *)(v9 + 56) = v6;
  sub_24988247C(v1, v2, v3, v4, v5);
  if (v7)
  {
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_249A5C284(v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
  }
  sub_2498944CC(v11);
  return v8;
}

void Instrument.GaugeStyle.StateSensitiveImage.restoreAssets(from:)(void *a1)
{
  ImageAsset.restore(from:)(a1);
  if (!v2)
  {
    if (*(void *)(v1 + 56))
    {
      MEMORY[0x270FA5388](v4);
      uint64_t v8[2] = a1;
      sub_249A49B30((void (*)(_OWORD *__return_ptr, void *))sub_249A60438, (uint64_t)v8, v5);
      uint64_t v7 = v6;
      swift_bridgeObjectRelease();
      *(void *)(v1 + 56) = v7;
    }
  }
}

void Instrument.GaugeStyle.StateSensitiveImage.hash(into:)(uint64_t a1)
{
  unint64_t v3 = *(void **)v1;
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v5 = *(void *)(v1 + 72);
  uint64_t v8 = *(void *)(v1 + 80);
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v7 = *(void *)(v1 + 88);
  char v6 = *(unsigned char *)(v1 + 96);
  uint64_t v10 = *(void *)(v1 + 8);
  uint64_t v11 = *(void **)(v1 + 16);
  uint64_t v12 = *(void *)(v1 + 24);
  char v13 = *(unsigned char *)(v1 + 32);
  sub_24988247C(*(void **)v1, v10, v11, v12, v13);
  ImageAsset.ImageType.hash(into:)(a1);
  sub_249AEE348();
  sub_2498826E4(v3, v10, v11, v12, v13);
  if (!v4)
  {
    sub_249AEE358();
    if (v5) {
      goto LABEL_3;
    }
LABEL_7:
    sub_249AEE358();
    return;
  }
  sub_249AEE358();
  InstrumentDataIdentifier.rawValue.getter();
  swift_bridgeObjectRetain_n();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988AAA4(a1, v4);
  swift_bridgeObjectRelease_n();
  if (!v5) {
    goto LABEL_7;
  }
LABEL_3:
  sub_249AEE358();
  InstrumentDataIdentifier.rawValue.getter();
  swift_bridgeObjectRetain();
  sub_24988D770(v8, v7, v6);
  swift_bridgeObjectRetain();
  sub_24988D770(v8, v7, v6);
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v5);
  swift_bridgeObjectRelease();
  sub_24988D770(v8, v7, v6);
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988D788(v8, v7, v6);
  sub_249A5EDB0(v9, v5, v8, v7, v6);

  sub_249A5EDB0(v9, v5, v8, v7, v6);
}

uint64_t sub_249A5DFD4()
{
  unint64_t v1 = 0x616D496574617473;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000013;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x49746C7561666564;
  }
}

uint64_t sub_249A5E044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A602B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A5E06C(uint64_t a1)
{
  unint64_t v2 = sub_249A5F190();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A5E0A8(uint64_t a1)
{
  unint64_t v2 = sub_249A5F190();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E44E8);
  uint64_t v29 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v27 = *v1;
  uint64_t v7 = *((void *)v1 + 2);
  uint64_t v6 = *((void *)v1 + 3);
  char v8 = *((unsigned char *)v1 + 32);
  uint64_t v9 = *((void *)v1 + 5);
  uint64_t v25 = *((void *)v1 + 6);
  uint64_t v26 = v9;
  uint64_t v10 = *((void *)v1 + 7);
  uint64_t v23 = *((void *)v1 + 8);
  uint64_t v24 = v10;
  uint64_t v11 = *((void *)v1 + 9);
  uint64_t v21 = *((void *)v1 + 10);
  uint64_t v22 = v11;
  uint64_t v20 = *((void *)v1 + 11);
  int v35 = *((unsigned __int8 *)v1 + 96);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A5F190();
  sub_249AEE468();
  long long v30 = v27;
  uint64_t v31 = v7;
  uint64_t v32 = v6;
  char v33 = v8;
  uint64_t v34 = v26;
  char v36 = 0;
  sub_24989D190();
  uint64_t v12 = v28;
  sub_249AEDF08();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v5, v3);
  }
  uint64_t v15 = v20;
  uint64_t v14 = v21;
  uint64_t v17 = v22;
  uint64_t v16 = v23;
  uint64_t v18 = v29;
  *(void *)&long long v30 = v25;
  *((void *)&v30 + 1) = v24;
  char v36 = 1;
  sub_249A5F1E4();
  sub_249AEDEA8();
  *(void *)&long long v30 = v16;
  *((void *)&v30 + 1) = v17;
  uint64_t v31 = v14;
  uint64_t v32 = v15;
  char v33 = v35;
  char v36 = 2;
  sub_249A5F238();
  sub_249AEDEA8();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v5, v3);
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.hashValue.getter()
{
  char v1 = *((unsigned char *)v0 + 32);
  uint64_t v2 = *((void *)v0 + 11);
  char v3 = *((unsigned char *)v0 + 96);
  long long v4 = v0[1];
  long long v7 = *v0;
  long long v8 = v4;
  char v9 = v1;
  long long v10 = *(long long *)((char *)v0 + 40);
  long long v11 = *(long long *)((char *)v0 + 56);
  long long v12 = *(long long *)((char *)v0 + 72);
  uint64_t v13 = v2;
  char v14 = v3;
  sub_249AEE338();
  Instrument.GaugeStyle.StateSensitiveImage.hash(into:)((uint64_t)v6);
  return sub_249AEE388();
}

void Instrument.GaugeStyle.StateSensitiveImage.init(from:)(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4508);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A5F190();
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    char v35 = 0;
  }
  else
  {
    char v55 = 0;
    sub_24989D2E8();
    sub_249AEDE08();
    uint64_t v45 = a2;
    uint64_t v9 = v49;
    int v10 = v52;
    uint64_t v44 = v53;
    char v55 = 1;
    uint64_t v46 = v50;
    uint64_t v47 = v48;
    uint64_t v11 = v51;
    sub_24988247C(v48, v49, v50, v51, v52);
    sub_249A5F28C();
    sub_249AEDDA8();
    int v54 = v10;
    long long v12 = v47;
    uint64_t v42 = v48;
    uint64_t v43 = v11;
    uint64_t v13 = v49;
    char v55 = 2;
    sub_249A5F2E0();
    swift_bridgeObjectRetain();
    sub_249AEDDA8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v15 = (uint64_t)v48;
    uint64_t v14 = v49;
    uint64_t v40 = v51;
    int v39 = v52;
    uint64_t v16 = (uint64_t)v50;
    sub_249A5ED54((uint64_t)v48, v49, (uint64_t)v50, v51, v52);
    sub_249A5EDB0(0, 0, 0, 0, 0);
    uint64_t v41 = v9;
    uint64_t v17 = v46;
    sub_24988247C(v12, v9, v46, v43, v54);
    swift_bridgeObjectRetain();
    uint64_t v37 = v14;
    uint64_t v38 = v15;
    uint64_t v18 = v16;
    uint64_t v36 = v16;
    uint64_t v19 = v16;
    uint64_t v20 = v40;
    LOBYTE(v16) = v39;
    sub_249A5ED54(v15, v14, v19, v40, v39);
    sub_249A5EDB0(v15, v14, v18, v20, v16);
    swift_bridgeObjectRelease();
    uint64_t v21 = v47;
    uint64_t v22 = v41;
    uint64_t v23 = v43;
    LOBYTE(v15) = v54;
    sub_2498826E4(v47, v41, v17, v43, v54);
    uint64_t v25 = v44;
    uint64_t v24 = v45;
    *uint64_t v45 = v21;
    v24[1] = v22;
    void v24[2] = v17;
    v24[3] = v23;
    *((unsigned char *)v24 + 32) = v15;
    uint64_t v26 = v42;
    v24[5] = v25;
    v24[6] = v26;
    uint64_t v27 = v37;
    uint64_t v28 = v38;
    uint64_t v24[7] = v13;
    v24[8] = v28;
    uint64_t v29 = v36;
    v24[9] = v27;
    v24[10] = v29;
    uint64_t v30 = v40;
    v24[11] = v40;
    LOBYTE(v22) = v39;
    *((unsigned char *)v24 + 96) = v39;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    sub_2498826E4(v47, v41, v17, v43, v54);
    swift_bridgeObjectRelease();
    uint64_t v31 = v28;
    uint64_t v32 = v27;
    uint64_t v33 = v29;
    uint64_t v34 = v30;
    char v35 = v22;
  }
  sub_249A5EDB0(v31, v32, v33, v34, v35);
}

void sub_249A5E814(void *a1)
{
  ImageAsset.restore(from:)(a1);
  if (!v2)
  {
    if (*(void *)(v1 + 56))
    {
      MEMORY[0x270FA5388](v4);
      uint64_t v8[2] = a1;
      sub_249A49B30((void (*)(_OWORD *__return_ptr, void *))sub_249A60438, (uint64_t)v8, v5);
      uint64_t v7 = v6;
      swift_bridgeObjectRelease();
      *(void *)(v1 + 56) = v7;
    }
  }
}

void sub_249A5E8BC(void *a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_249A5E8D4(void *a1)
{
  return Instrument.GaugeStyle.StateSensitiveImage.encode(to:)(a1);
}

uint64_t sub_249A5E8EC()
{
  char v1 = *((unsigned char *)v0 + 32);
  uint64_t v2 = *((void *)v0 + 11);
  char v3 = *((unsigned char *)v0 + 96);
  long long v4 = v0[1];
  long long v7 = *v0;
  long long v8 = v4;
  char v9 = v1;
  long long v10 = *(long long *)((char *)v0 + 40);
  long long v11 = *(long long *)((char *)v0 + 56);
  long long v12 = *(long long *)((char *)v0 + 72);
  uint64_t v13 = v2;
  char v14 = v3;
  sub_249AEE338();
  Instrument.GaugeStyle.StateSensitiveImage.hash(into:)((uint64_t)v6);
  return sub_249AEE388();
}

uint64_t sub_249A5E970()
{
  char v1 = *((unsigned char *)v0 + 32);
  uint64_t v2 = *((void *)v0 + 11);
  char v3 = *((unsigned char *)v0 + 96);
  long long v4 = v0[1];
  long long v7 = *v0;
  long long v8 = v4;
  char v9 = v1;
  long long v10 = *(long long *)((char *)v0 + 40);
  long long v11 = *(long long *)((char *)v0 + 56);
  long long v12 = *(long long *)((char *)v0 + 72);
  uint64_t v13 = v2;
  char v14 = v3;
  sub_249AEE338();
  Instrument.GaugeStyle.StateSensitiveImage.hash(into:)((uint64_t)v6);
  return sub_249AEE388();
}

uint64_t _s14CarPlayAssetUI10InstrumentV10GaugeStyleO19StateSensitiveImageV0H6ImagesV2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v6 = v5;
  if (v4 == InstrumentDataIdentifier.rawValue.getter() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v9 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      return 0;
    }
  }

  return sub_249A00DE0(v2, v3);
}

uint64_t _s14CarPlayAssetUI10InstrumentV10GaugeStyleO19StateSensitiveImageV19StatefulSolidColorsV2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v20 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  unint64_t v9 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v11 = v10;
  if (v9 == InstrumentDataIdentifier.rawValue.getter() && v11 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v14 = 0;
    if ((v13 & 1) == 0) {
      return v14 & 1;
    }
  }
  if (sub_2499FEF30(v3, v6))
  {
    sub_24988D770(v2, v4, v20);
    sub_24988D770(v5, v7, v8);
    uint64_t v15 = Theme.ColorID.rawValue.getter();
    uint64_t v17 = v16;
    if (v15 == Theme.ColorID.rawValue.getter() && v17 == v18) {
      char v14 = 1;
    }
    else {
      char v14 = sub_249AEE0D8();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24988D788(v5, v7, v8);
    sub_24988D788(v2, v4, v20);
  }
  else
  {
    char v14 = 0;
  }
  return v14 & 1;
}

unint64_t sub_249A5EC90()
{
  unint64_t result = qword_2696E44C0;
  if (!qword_2696E44C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E44C0);
  }
  return result;
}

void sub_249A5ECE4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_249A5D0B8(a1, *(void **)(v2 + 16), a2);
}

unint64_t sub_249A5ED00()
{
  unint64_t result = qword_2696E44D8;
  if (!qword_2696E44D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E44D8);
  }
  return result;
}

void sub_249A5ED54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_24988D770(a3, a4, a5);
  }
}

void sub_249A5EDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_24988D788(a3, a4, a5);
  }
}

uint64_t sub_249A5EE0C()
{
  sub_2498826E4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return MEMORY[0x270FA0238](v0, 64, 7);
}

BOOL _s14CarPlayAssetUI10InstrumentV10GaugeStyleO19StateSensitiveImageV2eeoiySbAG_AGtFZ_0(long long *a1, long long *a2)
{
  char v2 = *((unsigned char *)a1 + 32);
  uint64_t v4 = *((void *)a1 + 5);
  uint64_t v3 = *((void *)a1 + 6);
  uint64_t v5 = *((void *)a1 + 7);
  uint64_t v6 = *((void *)a1 + 9);
  uint64_t v35 = *((void *)a1 + 10);
  uint64_t v36 = *((void *)a1 + 8);
  uint64_t v7 = *((void *)a1 + 11);
  char v8 = *((unsigned char *)a1 + 96);
  char v9 = *((unsigned char *)a2 + 32);
  uint64_t v11 = *((void *)a2 + 5);
  uint64_t v10 = *((void *)a2 + 6);
  uint64_t v12 = *((void *)a2 + 7);
  uint64_t v13 = *((void *)a2 + 9);
  uint64_t v32 = *((void *)a2 + 8);
  long long v33 = a2[5];
  char v34 = *((unsigned char *)a2 + 96);
  long long v14 = a1[1];
  long long v40 = *a1;
  long long v41 = v14;
  char v42 = v2;
  long long v15 = a2[1];
  long long v37 = *a2;
  long long v38 = v15;
  char v39 = v9;
  char v16 = _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)&v40, (uint64_t)&v37);
  BOOL result = 0;
  if ((v16 & 1) != 0 && v4 == v11)
  {
    if (v5)
    {
      if (v12)
      {
        LOBYTE(v40) = v3;
        LOBYTE(v37) = v10;
        unint64_t v18 = InstrumentDataIdentifier.rawValue.getter();
        uint64_t v20 = v19;
        if (v18 == InstrumentDataIdentifier.rawValue.getter() && v20 == v21)
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v22 = sub_249AEE0D8();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v22 & 1) == 0)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            return 0;
          }
        }
        char v23 = sub_249A00DE0(v5, v12);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        if ((v23 & 1) == 0) {
          return 0;
        }
LABEL_14:
        uint64_t v24 = v6;
        if (v6)
        {
          uint64_t v25 = v35;
          uint64_t v26 = v36;
          *(void *)&long long v40 = v36;
          *((void *)&v40 + 1) = v24;
          *(void *)&long long v41 = v35;
          *((void *)&v41 + 1) = v7;
          uint64_t v27 = v7;
          char v28 = v8;
          char v42 = v8;
          if (v13)
          {
            LOBYTE(v37) = v32;
            *((void *)&v37 + 1) = v13;
            long long v38 = v33;
            char v39 = v34;
            sub_249A5ED54(v36, v24, v35, v7, v8);
            swift_bridgeObjectRetain();
            sub_24988D770(v35, v7, v8);
            char v29 = _s14CarPlayAssetUI10InstrumentV10GaugeStyleO19StateSensitiveImageV19StatefulSolidColorsV2eeoiySbAI_AItFZ_0((uint64_t)&v40, (uint64_t)&v37);
            long long v30 = v41;
            char v31 = v42;
            swift_bridgeObjectRelease();
            sub_24988D788(v30, *((uint64_t *)&v30 + 1), v31);
            sub_249A5EDB0(v36, v24, v35, v7, v8);
            return (v29 & 1) != 0;
          }
          swift_bridgeObjectRetain();
          sub_24988D770(v35, v7, v8);
          swift_bridgeObjectRetain();
          sub_24988D770(v35, v7, v8);
          swift_bridgeObjectRelease();
          sub_24988D788(v35, v7, v8);
        }
        else
        {
          char v28 = v8;
          uint64_t v27 = v7;
          uint64_t v25 = v35;
          uint64_t v26 = v36;
          if (!v13) {
            return 1;
          }
        }
        sub_249A5ED54(v32, v13, v33, *((uint64_t *)&v33 + 1), v34);
        sub_249A5EDB0(v26, v24, v25, v27, v28);
        sub_249A5EDB0(v32, v13, v33, *((uint64_t *)&v33 + 1), v34);
        return 0;
      }
      swift_bridgeObjectRetain();
    }
    else if (!v12)
    {
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

unint64_t sub_249A5F190()
{
  unint64_t result = qword_2696E44F0;
  if (!qword_2696E44F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E44F0);
  }
  return result;
}

unint64_t sub_249A5F1E4()
{
  unint64_t result = qword_2696E44F8;
  if (!qword_2696E44F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E44F8);
  }
  return result;
}

unint64_t sub_249A5F238()
{
  unint64_t result = qword_2696E4500;
  if (!qword_2696E4500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4500);
  }
  return result;
}

unint64_t sub_249A5F28C()
{
  unint64_t result = qword_2696E4510;
  if (!qword_2696E4510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4510);
  }
  return result;
}

unint64_t sub_249A5F2E0()
{
  unint64_t result = qword_2696E4518;
  if (!qword_2696E4518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4518);
  }
  return result;
}

unint64_t sub_249A5F338()
{
  unint64_t result = qword_2696E4520;
  if (!qword_2696E4520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4520);
  }
  return result;
}

unint64_t sub_249A5F390()
{
  unint64_t result = qword_2696E4528;
  if (!qword_2696E4528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4528);
  }
  return result;
}

unint64_t sub_249A5F3E8()
{
  unint64_t result = qword_2696E4530;
  if (!qword_2696E4530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4530);
  }
  return result;
}

uint64_t _s14descr26FD9EE19O19StateSensitiveImageVwxx(uint64_t a1)
{
  sub_2498826E4(*(void **)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 72);
  if (result)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(a1 + 80);
    uint64_t v4 = *(void *)(a1 + 88);
    char v5 = *(unsigned char *)(a1 + 96);
    return sub_24988D788(v3, v4, v5);
  }
  return result;
}

uint64_t _s14descr26FD9EE19O19StateSensitiveImageVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_24988247C(*(void **)a2, v5, v6, v7, v8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  if (v9)
  {
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(void *)(a1 + 72) = v9;
    uint64_t v10 = *(void *)(a2 + 80);
    uint64_t v11 = *(void *)(a2 + 88);
    char v12 = *(unsigned char *)(a2 + 96);
    swift_bridgeObjectRetain();
    sub_24988D770(v10, v11, v12);
    *(void *)(a1 + 80) = v10;
    *(void *)(a1 + 88) = v11;
    *(unsigned char *)(a1 + 96) = v12;
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v13;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  }
  return a1;
}

uint64_t _s14descr26FD9EE19O19StateSensitiveImageVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_24988247C(*(void **)a2, v5, v6, v7, v8);
  uint64_t v9 = *(void **)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void **)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  char v13 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  sub_2498826E4(v9, v10, v11, v12, v13);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v14 = (_OWORD *)(a1 + 64);
  long long v15 = (_OWORD *)(a2 + 64);
  uint64_t v16 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72))
  {
    if (v16)
    {
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(a2 + 80);
      uint64_t v18 = *(void *)(a2 + 88);
      char v19 = *(unsigned char *)(a2 + 96);
      sub_24988D770(v17, v18, v19);
      uint64_t v20 = *(void *)(a1 + 80);
      uint64_t v21 = *(void *)(a1 + 88);
      *(void *)(a1 + 80) = v17;
      *(void *)(a1 + 88) = v18;
      char v22 = *(unsigned char *)(a1 + 96);
      *(unsigned char *)(a1 + 96) = v19;
      sub_24988D788(v20, v21, v22);
    }
    else
    {
      sub_249A5F700(a1 + 64);
      char v26 = *(unsigned char *)(a2 + 96);
      long long v27 = *(_OWORD *)(a2 + 80);
      *long long v14 = *v15;
      *(_OWORD *)(a1 + 80) = v27;
      *(unsigned char *)(a1 + 96) = v26;
    }
  }
  else if (v16)
  {
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    uint64_t v23 = *(void *)(a2 + 80);
    uint64_t v24 = *(void *)(a2 + 88);
    char v25 = *(unsigned char *)(a2 + 96);
    swift_bridgeObjectRetain();
    sub_24988D770(v23, v24, v25);
    *(void *)(a1 + 80) = v23;
    *(void *)(a1 + 88) = v24;
    *(unsigned char *)(a1 + 96) = v25;
  }
  else
  {
    long long v28 = *v15;
    long long v29 = *(_OWORD *)(a2 + 80);
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *long long v14 = v28;
    *(_OWORD *)(a1 + 80) = v29;
  }
  return a1;
}

uint64_t sub_249A5F700(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy97_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s14descr26FD9EE19O19StateSensitiveImageVwta(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 32);
  long long v5 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void **)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  char v10 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v4;
  sub_2498826E4(v5, v6, v7, v8, v10);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 72)) {
    goto LABEL_5;
  }
  uint64_t v11 = *(void *)(a2 + 72);
  if (!v11)
  {
    sub_249A5F700(a1 + 64);
LABEL_5:
    long long v16 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v16;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    return a1;
  }
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = v11;
  swift_bridgeObjectRelease();
  char v12 = *(unsigned char *)(a2 + 96);
  uint64_t v13 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 88);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  char v15 = *(unsigned char *)(a1 + 96);
  *(unsigned char *)(a1 + 96) = v12;
  sub_24988D788(v13, v14, v15);
  return a1;
}

uint64_t _s14descr26FD9EE19O19StateSensitiveImageVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 97)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 56);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s14descr26FD9EE19O19StateSensitiveImageVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 97) = 0;
    }
    if (a2) {
      *(void *)(result + 56) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.StateSensitiveImage()
{
  return &type metadata for Instrument.GaugeStyle.StateSensitiveImage;
}

uint64_t _s14descr26FD9EE19O19StateSensitiveImageV19StatefulSolidColorsVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);

  return sub_24988D788(v2, v3, v4);
}

uint64_t _s14descr26FD9EE19O19StateSensitiveImageV19StatefulSolidColorsVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  char v5 = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_24988D770(v3, v4, v5);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return a1;
}

uint64_t _s14descr26FD9EE19O19StateSensitiveImageV19StatefulSolidColorsVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  LOBYTE(v2) = *(unsigned char *)(v2 + 32);
  sub_24988D770(v4, v5, v2);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v8 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v2;
  sub_24988D788(v6, v7, v8);
  return a1;
}

uint64_t _s14descr26FD9EE19O19StateSensitiveImageV19StatefulSolidColorsVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  char v7 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v4;
  sub_24988D788(v5, v6, v7);
  return a1;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors()
{
  return &type metadata for Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.StateSensitiveImage.StateImages()
{
  return &type metadata for Instrument.GaugeStyle.StateSensitiveImage.StateImages;
}

ValueMetadata *_s14descr26FD9EE19O19StateSensitiveImageV10CodingKeysOMa()
{
  return &_s14descr26FD9EE19O19StateSensitiveImageV10CodingKeysON;
}

unsigned char *_s14descr26FD9EE19O19StateSensitiveImageV11StateImagesV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A5FB8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr26FD9EE19O19StateSensitiveImageV11StateImagesV10CodingKeysOMa()
{
  return &_s14descr26FD9EE19O19StateSensitiveImageV11StateImagesV10CodingKeysON;
}

unsigned char *_s14descr26FD9EE19O19StateSensitiveImageV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A5FC90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr26FD9EE19O19StateSensitiveImageV19StatefulSolidColorsV10CodingKeysOMa()
{
  return &_s14descr26FD9EE19O19StateSensitiveImageV19StatefulSolidColorsV10CodingKeysON;
}

unint64_t sub_249A5FCCC()
{
  unint64_t result = qword_2696E4538;
  if (!qword_2696E4538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4538);
  }
  return result;
}

unint64_t sub_249A5FD24()
{
  unint64_t result = qword_2696E4540;
  if (!qword_2696E4540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4540);
  }
  return result;
}

unint64_t sub_249A5FD7C()
{
  unint64_t result = qword_2696E4548;
  if (!qword_2696E4548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4548);
  }
  return result;
}

unint64_t sub_249A5FDD4()
{
  unint64_t result = qword_2696E4550;
  if (!qword_2696E4550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4550);
  }
  return result;
}

unint64_t sub_249A5FE2C()
{
  unint64_t result = qword_2696E4558;
  if (!qword_2696E4558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4558);
  }
  return result;
}

unint64_t sub_249A5FE84()
{
  unint64_t result = qword_2696E4560;
  if (!qword_2696E4560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4560);
  }
  return result;
}

unint64_t sub_249A5FEDC()
{
  unint64_t result = qword_2696E4568;
  if (!qword_2696E4568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4568);
  }
  return result;
}

unint64_t sub_249A5FF34()
{
  unint64_t result = qword_2696E4570;
  if (!qword_2696E4570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4570);
  }
  return result;
}

unint64_t sub_249A5FF8C()
{
  unint64_t result = qword_2696E4578;
  if (!qword_2696E4578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4578);
  }
  return result;
}

uint64_t sub_249A5FFE0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F436574617473 && a2 == 0xED0000734449726FLL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x43746C7561666564 && a2 == 0xEE004449726F6C6FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_249A601A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736567616D69 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_249A602B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x49746C7561666564 && a2 == 0xEC0000006567616DLL;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x616D496574617473 && a2 == 0xEB00000000736567 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000249B17290)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void sub_249A60438(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_249A60450()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4610);
  MEMORY[0x270FA5388](v0 - 8);
  BOOL v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4700);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498DB20C(0, &qword_2696E4620);
  id v7 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v8 = sub_249AED8A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
  uint64_t v9 = sub_249AED858();

  sub_2498D60E8((uint64_t)v2, &qword_2696E4610);
  uint64_t v15 = v9;
  sub_249AED848();
  sub_249A6A130();
  uint64_t v10 = sub_249AEB988();
  swift_release();
  uint64_t v15 = v10;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4630);
  sub_2498D0A3C(&qword_2696E4638, &qword_2696E4630);
  sub_249AEBA38();
  swift_release();
  swift_release();
  sub_2498D0A3C(&qword_2696E4708, &qword_2696E4700);
  uint64_t v11 = sub_249AEBA28();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  type metadata accessor for InstrumentDataSource();
  swift_allocObject();
  uint64_t v12 = swift_retain();
  return sub_249A613D0(v12, v11, 1);
}

uint64_t sub_249A60764()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4610);
  MEMORY[0x270FA5388](v0 - 8);
  BOOL v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E47F0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498DB20C(0, &qword_2696E4620);
  id v7 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v8 = sub_249AED8A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
  uint64_t v9 = sub_249AED858();

  sub_2498D60E8((uint64_t)v2, &qword_2696E4610);
  uint64_t v15 = v9;
  sub_249AED848();
  sub_249A6A130();
  uint64_t v10 = sub_249AEB988();
  swift_release();
  uint64_t v15 = v10;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4630);
  sub_2498D0A3C(&qword_2696E4638, &qword_2696E4630);
  sub_249AEBA38();
  swift_release();
  swift_release();
  sub_2498D0A3C(&qword_2696E47F8, &qword_2696E47F0);
  uint64_t v11 = sub_249AEBA28();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  type metadata accessor for InstrumentDataSource();
  swift_allocObject();
  uint64_t v12 = swift_retain();
  return sub_249A6357C(v12, v11, 1);
}

uint64_t sub_249A60A78()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4610);
  MEMORY[0x270FA5388](v0 - 8);
  BOOL v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E47B0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498DB20C(0, &qword_2696E4620);
  id v7 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v8 = sub_249AED8A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
  uint64_t v9 = sub_249AED858();

  sub_2498D60E8((uint64_t)v2, &qword_2696E4610);
  uint64_t v15 = v9;
  sub_249AED848();
  sub_249A6A130();
  uint64_t v10 = sub_249AEB988();
  swift_release();
  uint64_t v15 = v10;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4630);
  sub_2498D0A3C(&qword_2696E4638, &qword_2696E4630);
  sub_249AEBA38();
  swift_release();
  swift_release();
  sub_2498D0A3C(&qword_2696E47B8, &qword_2696E47B0);
  uint64_t v11 = sub_249AEBA28();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  type metadata accessor for InstrumentDataSource();
  swift_allocObject();
  uint64_t v12 = swift_retain();
  return sub_249A627DC(v12, v11, 1);
}

uint64_t sub_249A60D8C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4610);
  MEMORY[0x270FA5388](v0 - 8);
  BOOL v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4648);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498DB20C(0, &qword_2696E4620);
  id v7 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v8 = sub_249AED8A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
  uint64_t v9 = sub_249AED858();

  sub_2498D60E8((uint64_t)v2, &qword_2696E4610);
  uint64_t v15 = v9;
  sub_249AED848();
  sub_249A6A130();
  uint64_t v10 = sub_249AEB988();
  swift_release();
  uint64_t v15 = v10;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4630);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1510);
  sub_2498D0A3C(&qword_2696E4638, &qword_2696E4630);
  sub_249AEBA38();
  swift_release();
  swift_release();
  sub_2498D0A3C(&qword_2696E4650, &qword_2696E4648);
  uint64_t v11 = sub_249AEBA28();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  type metadata accessor for InstrumentDataSource();
  swift_allocObject();
  uint64_t v12 = swift_retain();
  return sub_249A63274(v12, v11, 1);
}

uint64_t sub_249A610AC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4610);
  MEMORY[0x270FA5388](v0 - 8);
  BOOL v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4668);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498DB20C(0, &qword_2696E4620);
  id v7 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v8 = sub_249AED8A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
  uint64_t v9 = sub_249AED858();

  sub_2498D60E8((uint64_t)v2, &qword_2696E4610);
  uint64_t v15 = v9;
  sub_249AED848();
  sub_249A6A130();
  uint64_t v10 = sub_249AEB988();
  swift_release();
  uint64_t v15 = v10;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4630);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14F8);
  sub_2498D0A3C(&qword_2696E4638, &qword_2696E4630);
  sub_249AEBA38();
  swift_release();
  swift_release();
  sub_2498D0A3C(&qword_2696E4670, &qword_2696E4668);
  uint64_t v11 = sub_249AEBA28();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  type metadata accessor for InstrumentDataSource();
  swift_allocObject();
  uint64_t v12 = swift_retain();
  return sub_249A62AB0(v12, v11, 1);
}

uint64_t sub_249A613D0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C98);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v11 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  uint64_t v21 = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  sub_2498D6084((uint64_t)&v19, (uint64_t)v18, &qword_2696DF130);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF130);
  sub_249AEB9A8();
  sub_2498D60E8((uint64_t)&v19, &qword_2696DF130);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v8 + 32))(v11, v10, v7);
  *(void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x263F8EE88];
  uint64_t v12 = (void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v12 = nullsub_1;
  v12[1] = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = *(unsigned char *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8E778];
  *((void *)&v20 + 1) = MEMORY[0x263F8E778];
  uint64_t v21 = &protocol witness table for UInt8;
  LOBYTE(v19) = *(unsigned char *)(a1 + 40);
  sub_249882788((uint64_t)&v19, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_2696DF130);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = a3;
  if (a3)
  {
    *((void *)&v20 + 1) = v13;
    uint64_t v21 = &protocol witness table for UInt8;
    LOBYTE(v19) = *(unsigned char *)(a1 + 40);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2498D6084((uint64_t)&v19, (uint64_t)v18, &qword_2696DF130);
    swift_retain();
    sub_249AEB9F8();
    sub_2498D60E8((uint64_t)&v19, &qword_2696DF130);
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = v3;
  uint64_t v15 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v15 = sub_249A6A5C4;
  v15[1] = (uint64_t (*)())v14;
  swift_release();
  return v3;
}

uint64_t sub_249A61688(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C98);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v11 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  uint64_t v21 = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  sub_2498D6084((uint64_t)&v19, (uint64_t)v18, &qword_2696DF130);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF130);
  sub_249AEB9A8();
  sub_2498D60E8((uint64_t)&v19, &qword_2696DF130);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v8 + 32))(v11, v10, v7);
  *(void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x263F8EE88];
  uint64_t v12 = (void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v12 = nullsub_1;
  v12[1] = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = *(unsigned char *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8D538];
  *((void *)&v20 + 1) = MEMORY[0x263F8D538];
  uint64_t v21 = &protocol witness table for Double;
  *(void *)&long long v19 = *(void *)(a1 + 40);
  sub_249882788((uint64_t)&v19, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_2696DF130);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = a3;
  if (a3)
  {
    *((void *)&v20 + 1) = v13;
    uint64_t v21 = &protocol witness table for Double;
    *(void *)&long long v19 = *(void *)(a1 + 40);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2498D6084((uint64_t)&v19, (uint64_t)v18, &qword_2696DF130);
    swift_retain();
    sub_249AEB9F8();
    sub_2498D60E8((uint64_t)&v19, &qword_2696DF130);
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = v3;
  uint64_t v15 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v15 = sub_249A6B044;
  v15[1] = (uint64_t (*)())v14;
  swift_release();
  return v3;
}

uint64_t sub_249A61940(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C98);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v11 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  uint64_t v21 = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  sub_2498D6084((uint64_t)&v19, (uint64_t)v18, &qword_2696DF130);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF130);
  sub_249AEB9A8();
  sub_2498D60E8((uint64_t)&v19, &qword_2696DF130);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v8 + 32))(v11, v10, v7);
  *(void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x263F8EE88];
  uint64_t v12 = (void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v12 = nullsub_1;
  v12[1] = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = *(unsigned char *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8D4F8];
  *((void *)&v20 + 1) = MEMORY[0x263F8D4F8];
  uint64_t v21 = &protocol witness table for Bool;
  LOBYTE(v19) = *(unsigned char *)(a1 + 40);
  sub_249882788((uint64_t)&v19, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_2696DF130);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = a3;
  if (a3)
  {
    *((void *)&v20 + 1) = v13;
    uint64_t v21 = &protocol witness table for Bool;
    LOBYTE(v19) = *(unsigned char *)(a1 + 40);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2498D6084((uint64_t)&v19, (uint64_t)v18, &qword_2696DF130);
    swift_retain();
    sub_249AEB9F8();
    sub_2498D60E8((uint64_t)&v19, &qword_2696DF130);
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = v3;
  uint64_t v15 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v15 = sub_249A6AC98;
  v15[1] = (uint64_t (*)())v14;
  swift_release();
  return v3;
}

uint64_t sub_249A61BF8(uint64_t a1, uint64_t a2, int a3)
{
  LODWORD(KeyPath) = a3;
  uint64_t v41 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C98);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  uint64_t v45 = 0;
  long long v43 = 0u;
  long long v44 = 0u;
  sub_2498D6084((uint64_t)&v43, (uint64_t)v42, &qword_2696DF130);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF130);
  sub_249AEB9A8();
  sub_2498D60E8((uint64_t)&v43, &qword_2696DF130);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v9, v8, v5);
  *(void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x263F8EE88];
  uint64_t v10 = (void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v10 = nullsub_1;
  v10[1] = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = *(unsigned char *)(a1 + 16);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1408);
  *((void *)&v44 + 1) = v11;
  uint64_t v12 = sub_249987ABC(&qword_2696E1410, &qword_2696E1408);
  uint64_t v45 = v12;
  uint64_t v13 = (void *)swift_allocObject();
  *(void *)&long long v43 = v13;
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 72);
  uint64_t v18 = *(void *)(a1 + 80);
  uint64_t v20 = *(void *)(a1 + 88);
  void v13[2] = v14;
  v13[3] = v15;
  void v13[4] = v16;
  v13[5] = v17;
  v13[6] = v19;
  v13[7] = v18;
  uint64_t v39 = v18;
  v13[8] = v20;
  sub_249882788((uint64_t)&v43, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_2696DF130);
  char v21 = KeyPath;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = KeyPath;
  if (v21)
  {
    *((void *)&v44 + 1) = v11;
    uint64_t v45 = v12;
    char v22 = (void *)swift_allocObject();
    *(void *)&long long v43 = v22;
    uint64_t v23 = *(void *)(a1 + 40);
    uint64_t v24 = *(void *)(a1 + 48);
    uint64_t v25 = *(void *)(a1 + 56);
    uint64_t v37 = *(void *)(a1 + 64);
    uint64_t v26 = v37;
    uint64_t v38 = v25;
    uint64_t v27 = *(void *)(a1 + 72);
    uint64_t v35 = *(void *)(a1 + 80);
    uint64_t v28 = v35;
    uint64_t v36 = v27;
    uint64_t v34 = *(void *)(a1 + 88);
    uint64_t v29 = v34;
    v22[2] = v23;
    v22[3] = v24;
    v22[4] = v25;
    v22[5] = v26;
    v22[6] = v27;
    v22[7] = v28;
    v22[8] = v29;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v33 = swift_getKeyPath();
    sub_2498D6084((uint64_t)&v43, (uint64_t)v42, &qword_2696DF130);
    sub_249A6ABB4(v14, v15, v16, v17, v19, v39);
    sub_249A6ABB4(v23, v24, v38, v37, v36, v35);
    swift_retain();
    sub_249AEB9F8();
    sub_2498D60E8((uint64_t)&v43, &qword_2696DF130);
  }
  else
  {
    sub_249A6ABB4(v14, v15, v16, v17, v19, v39);
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v41;
  *(void *)(v30 + 24) = v3;
  char v31 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *char v31 = sub_249A6AC18;
  v31[1] = (uint64_t (*)())v30;
  swift_release();
  return v3;
}

uint64_t sub_249A61FB0(uint64_t a1, uint64_t a2, int a3)
{
  LODWORD(v70) = a3;
  uint64_t v71 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C98);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  uint64_t v75 = 0;
  long long v73 = 0u;
  long long v74 = 0u;
  sub_2498D6084((uint64_t)&v73, (uint64_t)v72, &qword_2696DF130);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF130);
  sub_249AEB9A8();
  sub_2498D60E8((uint64_t)&v73, &qword_2696DF130);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v9, v8, v5);
  *(void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x263F8EE88];
  uint64_t v10 = (void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v10 = nullsub_1;
  v10[1] = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = *(unsigned char *)(a1 + 16);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1420);
  *((void *)&v74 + 1) = v11;
  uint64_t v12 = sub_249987ABC(&qword_2696E1428, &qword_2696E1420);
  uint64_t v75 = v12;
  uint64_t v13 = swift_allocObject();
  *(void *)&long long v73 = v13;
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v18 = *(void *)(a1 + 72);
  uint64_t v19 = *(void *)(a1 + 80);
  uint64_t v20 = *(void *)(a1 + 88);
  uint64_t v21 = *(void *)(a1 + 96);
  uint64_t v22 = *(void *)(a1 + 104);
  uint64_t v23 = *(void *)(a1 + 112);
  uint64_t v24 = *(void *)(a1 + 120);
  unint64_t v25 = *(void *)(a1 + 128);
  uint64_t v26 = *(void *)(a1 + 136);
  uint64_t v27 = *(void *)(a1 + 144);
  LOBYTE(v9) = *(unsigned char *)(a1 + 152);
  uint64_t v68 = *(void *)(a1 + 48);
  uint64_t v15 = v68;
  uint64_t v69 = v14;
  *(void *)(v13 + 16) = v14;
  *(void *)(v13 + 24) = v15;
  uint64_t v66 = v17;
  uint64_t v67 = v16;
  *(void *)(v13 + 32) = v16;
  *(void *)(v13 + 40) = v17;
  uint64_t v64 = v19;
  uint64_t v65 = v18;
  *(void *)(v13 + 48) = v18;
  *(void *)(v13 + 56) = v19;
  uint64_t v62 = v21;
  uint64_t v63 = v20;
  *(void *)(v13 + 64) = v20;
  *(void *)(v13 + 72) = v21;
  uint64_t v61 = v22;
  *(void *)(v13 + 80) = v22;
  *(void *)(v13 + 88) = v23;
  *(void *)(v13 + 96) = v24;
  *(void *)(v13 + 104) = v25;
  *(void *)(v13 + 112) = v26;
  *(void *)(v13 + 120) = v27;
  *(unsigned char *)(v13 + 128) = v9;
  sub_249882788((uint64_t)&v73, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_2696DF130);
  char v28 = v70;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = v70;
  if (v28)
  {
    *((void *)&v74 + 1) = v11;
    uint64_t v75 = v12;
    uint64_t v29 = swift_allocObject();
    *(void *)&long long v73 = v29;
    uint64_t v30 = *(void *)(a1 + 48);
    uint64_t v70 = *(void *)(a1 + 40);
    uint64_t v60 = v30;
    uint64_t v59 = *(void *)(a1 + 56);
    uint64_t v31 = v59;
    uint64_t v58 = *(void *)(a1 + 64);
    uint64_t v32 = v58;
    uint64_t v57 = *(void *)(a1 + 72);
    uint64_t v33 = v57;
    uint64_t v56 = *(void *)(a1 + 80);
    uint64_t v34 = v56;
    uint64_t v55 = *(void *)(a1 + 88);
    uint64_t v35 = v55;
    uint64_t v54 = *(void *)(a1 + 96);
    uint64_t v36 = v54;
    uint64_t v51 = *(void *)(a1 + 104);
    uint64_t v37 = v51;
    uint64_t v38 = *(void *)(a1 + 120);
    uint64_t v50 = *(void *)(a1 + 112);
    uint64_t v39 = v50;
    uint64_t v49 = v38;
    uint64_t v41 = *(void *)(a1 + 136);
    unint64_t v48 = *(void *)(a1 + 128);
    unint64_t v40 = v48;
    uint64_t v47 = v41;
    uint64_t v42 = *(void *)(a1 + 144);
    char v43 = *(unsigned char *)(a1 + 152);
    *(void *)(v29 + 16) = v70;
    *(void *)(v29 + 24) = v30;
    *(void *)(v29 + 32) = v31;
    *(void *)(v29 + 40) = v32;
    *(void *)(v29 + 48) = v33;
    *(void *)(v29 + 56) = v34;
    *(void *)(v29 + 64) = v35;
    *(void *)(v29 + 72) = v36;
    *(void *)(v29 + 80) = v37;
    *(void *)(v29 + 88) = v39;
    *(void *)(v29 + 96) = v38;
    *(void *)(v29 + 104) = v40;
    *(void *)(v29 + 112) = v41;
    *(void *)(v29 + 120) = v42;
    *(unsigned char *)(v29 + 128) = v43;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v52 = swift_getKeyPath();
    sub_2498D6084((uint64_t)&v73, (uint64_t)v72, &qword_2696DF130);
    sub_249A6AA54(v69, v68, v67, v66, v65, v64, v63, v62, v61, v23, v24, v25);
    sub_249A6AA54(v70, v60, v59, v58, v57, v56, v55, v54, v51, v50, v49, v48);
    swift_retain();
    sub_249AEB9F8();
    sub_2498D60E8((uint64_t)&v73, &qword_2696DF130);
  }
  else
  {
    sub_249A6AA54(v69, v68, v67, v66, v65, v64, v63, v62, v61, v23, v24, v25);
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v71;
  *(void *)(v44 + 24) = v3;
  uint64_t v45 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v45 = sub_249A6AB10;
  v45[1] = (uint64_t (*)())v44;
  swift_release();
  return v3;
}

uint64_t sub_249A624CC(unsigned char *a1, uint64_t a2, char a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v26 = a2;
  uint64_t v27 = a6;
  uint64_t v25 = a5;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C98);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v6 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  uint64_t v31 = 0;
  long long v29 = 0u;
  long long v30 = 0u;
  sub_2498D6084((uint64_t)&v29, (uint64_t)v28, &qword_2696DF130);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF130);
  sub_249AEB9A8();
  sub_2498D60E8((uint64_t)&v29, &qword_2696DF130);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v14, v13, v10);
  *(void *)(v6 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x263F8EE88];
  uint64_t v15 = (void *)(v6 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v15 = nullsub_1;
  v15[1] = 0;
  *(unsigned char *)(v6 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(unsigned char *)(v6 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = a1[16];
  uint64_t v16 = &a1[*(void *)(*(void *)a1 + 112)];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(a4);
  *((void *)&v30 + 1) = v17;
  uint64_t v31 = &protocol witness table for Measurement<A>;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v29);
  uint64_t v19 = *(void (**)(uint64_t *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 16);
  v19(boxed_opaque_existential_0, v16, v17);
  sub_249882788((uint64_t)&v29, v6 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_2696DF130);
  *(unsigned char *)(v6 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = a3;
  if (a3)
  {
    *((void *)&v30 + 1) = v17;
    uint64_t v31 = &protocol witness table for Measurement<A>;
    uint64_t v20 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v29);
    v19(v20, v16, v17);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2498D6084((uint64_t)&v29, (uint64_t)v28, &qword_2696DF130);
    swift_retain();
    sub_249AEB9F8();
    sub_2498D60E8((uint64_t)&v29, &qword_2696DF130);
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v27;
  *(void *)(v21 + 16) = v26;
  *(void *)(v21 + 24) = v6;
  uint64_t v23 = (void *)(v6 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v23 = v22;
  v23[1] = v21;
  swift_release();
  return v6;
}

uint64_t sub_249A627DC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C98);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v11 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  uint64_t v23 = 0;
  long long v21 = 0u;
  long long v22 = 0u;
  sub_2498D6084((uint64_t)&v21, (uint64_t)v20, &qword_2696DF130);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF130);
  sub_249AEB9A8();
  sub_2498D60E8((uint64_t)&v21, &qword_2696DF130);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v8 + 32))(v11, v10, v7);
  *(void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x263F8EE88];
  uint64_t v12 = (void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v12 = nullsub_1;
  v12[1] = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = *(unsigned char *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8D310];
  *((void *)&v22 + 1) = MEMORY[0x263F8D310];
  uint64_t v23 = &protocol witness table for String;
  uint64_t v14 = *(void *)(a1 + 48);
  *(void *)&long long v21 = *(void *)(a1 + 40);
  *((void *)&v21 + 1) = v14;
  sub_249882788((uint64_t)&v21, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_2696DF130);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = a3;
  if (a3)
  {
    *((void *)&v22 + 1) = v13;
    uint64_t v23 = &protocol witness table for String;
    uint64_t v15 = *(void *)(a1 + 48);
    *(void *)&long long v21 = *(void *)(a1 + 40);
    *((void *)&v21 + 1) = v15;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2498D6084((uint64_t)&v21, (uint64_t)v20, &qword_2696DF130);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_249AEB9F8();
    sub_2498D60E8((uint64_t)&v21, &qword_2696DF130);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = v3;
  uint64_t v17 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v17 = sub_249A6A504;
  v17[1] = (uint64_t (*)())v16;
  swift_release();
  return v3;
}

uint64_t sub_249A62AB0(uint64_t a1, uint64_t a2, int a3)
{
  LODWORD(v71) = a3;
  uint64_t v72 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C98);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  uint64_t v76 = 0;
  long long v74 = 0u;
  long long v75 = 0u;
  sub_2498D6084((uint64_t)&v74, (uint64_t)v73, &qword_2696DF130);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF130);
  sub_249AEB9A8();
  sub_2498D60E8((uint64_t)&v74, &qword_2696DF130);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v9, v8, v5);
  *(void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x263F8EE88];
  uint64_t v10 = (void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v10 = nullsub_1;
  v10[1] = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = *(unsigned char *)(a1 + 16);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14F8);
  *((void *)&v75 + 1) = v11;
  uint64_t v12 = sub_249987ABC(&qword_2696E1500, &qword_2696E14F8);
  uint64_t v76 = v12;
  uint64_t v13 = (void *)swift_allocObject();
  *(void *)&long long v74 = v13;
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v18 = *(void *)(a1 + 72);
  uint64_t v19 = *(void *)(a1 + 80);
  uint64_t v20 = *(void *)(a1 + 88);
  uint64_t v21 = *(void *)(a1 + 96);
  uint64_t v22 = *(void *)(a1 + 104);
  uint64_t v23 = *(void *)(a1 + 112);
  uint64_t v24 = *(void *)(a1 + 120);
  uint64_t v25 = *(void *)(a1 + 128);
  uint64_t v26 = *(void *)(a1 + 136);
  uint64_t v27 = *(void *)(a1 + 144);
  uint64_t v28 = *(void *)(a1 + 152);
  uint64_t v69 = *(void *)(a1 + 48);
  uint64_t v15 = v69;
  uint64_t v70 = v14;
  void v13[2] = v14;
  v13[3] = v15;
  uint64_t v67 = v17;
  uint64_t v68 = v16;
  void v13[4] = v16;
  v13[5] = v17;
  uint64_t v65 = v19;
  uint64_t v66 = v18;
  v13[6] = v18;
  v13[7] = v19;
  uint64_t v63 = v21;
  uint64_t v64 = v20;
  v13[8] = v20;
  v13[9] = v21;
  uint64_t v62 = v22;
  _OWORD v13[10] = v22;
  v13[11] = v23;
  v13[12] = v24;
  v13[13] = v25;
  v13[14] = v26;
  v13[15] = v27;
  v13[16] = v28;
  sub_249882788((uint64_t)&v74, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_2696DF130);
  char v29 = v71;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = v71;
  if (v29)
  {
    *((void *)&v75 + 1) = v11;
    uint64_t v76 = v12;
    long long v30 = (void *)swift_allocObject();
    *(void *)&long long v74 = v30;
    uint64_t v31 = *(void *)(a1 + 48);
    uint64_t v71 = *(void *)(a1 + 40);
    uint64_t v61 = v31;
    uint64_t v60 = *(void *)(a1 + 56);
    uint64_t v32 = v60;
    uint64_t v59 = *(void *)(a1 + 64);
    uint64_t v33 = v59;
    uint64_t v58 = *(void *)(a1 + 72);
    uint64_t v34 = v58;
    uint64_t v57 = *(void *)(a1 + 80);
    uint64_t v35 = v57;
    uint64_t v56 = *(void *)(a1 + 88);
    uint64_t v36 = v56;
    uint64_t v55 = *(void *)(a1 + 96);
    uint64_t v37 = v55;
    uint64_t v52 = *(void *)(a1 + 104);
    uint64_t v38 = v52;
    uint64_t v39 = *(void *)(a1 + 120);
    uint64_t v51 = *(void *)(a1 + 112);
    uint64_t v40 = v51;
    uint64_t v50 = v39;
    uint64_t v42 = *(void *)(a1 + 136);
    uint64_t v49 = *(void *)(a1 + 128);
    uint64_t v41 = v49;
    uint64_t v48 = v42;
    uint64_t v44 = *(void *)(a1 + 144);
    uint64_t v43 = *(void *)(a1 + 152);
    v30[2] = v71;
    v30[3] = v31;
    v30[4] = v32;
    v30[5] = v33;
    _OWORD v30[6] = v34;
    v30[7] = v35;
    v30[8] = v36;
    v30[9] = v37;
    v30[10] = v38;
    v30[11] = v40;
    v30[12] = v39;
    v30[13] = v41;
    v30[14] = v42;
    v30[15] = v44;
    v30[16] = v43;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v53 = swift_getKeyPath();
    sub_2498D6084((uint64_t)&v74, (uint64_t)v73, &qword_2696DF130);
    sub_249A6A288(v70, v69, v68, v67, v66, v65, v64, v63, v62, v23, v24, v25);
    sub_249A6A288(v71, v61, v60, v59, v58, v57, v56, v55, v52, v51, v50, v49);
    swift_retain();
    sub_249AEB9F8();
    sub_2498D60E8((uint64_t)&v74, &qword_2696DF130);
  }
  else
  {
    sub_249A6A288(v70, v69, v68, v67, v66, v65, v64, v63, v62, v23, v24, v25);
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = v72;
  *(void *)(v45 + 24) = v3;
  uint64_t v46 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v46 = sub_249A6A35C;
  v46[1] = (uint64_t (*)())v45;
  swift_release();
  return v3;
}

uint64_t sub_249A62FBC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C98);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v11 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  uint64_t v21 = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  sub_2498D6084((uint64_t)&v19, (uint64_t)v18, &qword_2696DF130);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF130);
  sub_249AEB9A8();
  sub_2498D60E8((uint64_t)&v19, &qword_2696DF130);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v8 + 32))(v11, v10, v7);
  *(void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x263F8EE88];
  uint64_t v12 = (void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v12 = nullsub_1;
  v12[1] = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = *(unsigned char *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8E888];
  *((void *)&v20 + 1) = MEMORY[0x263F8E888];
  uint64_t v21 = &protocol witness table for UInt16;
  LOWORD(v19) = *(_WORD *)(a1 + 40);
  sub_249882788((uint64_t)&v19, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_2696DF130);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = a3;
  if (a3)
  {
    *((void *)&v20 + 1) = v13;
    uint64_t v21 = &protocol witness table for UInt16;
    LOWORD(v19) = *(_WORD *)(a1 + 40);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2498D6084((uint64_t)&v19, (uint64_t)v18, &qword_2696DF130);
    swift_retain();
    sub_249AEB9F8();
    sub_2498D60E8((uint64_t)&v19, &qword_2696DF130);
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = v3;
  uint64_t v15 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v15 = sub_249A6A994;
  v15[1] = (uint64_t (*)())v14;
  swift_release();
  return v3;
}

uint64_t sub_249A63274(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C98);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v11 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  uint64_t v26 = 0;
  long long v24 = 0u;
  long long v25 = 0u;
  sub_2498D6084((uint64_t)&v24, (uint64_t)v23, &qword_2696DF130);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF130);
  sub_249AEB9A8();
  sub_2498D60E8((uint64_t)&v24, &qword_2696DF130);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v8 + 32))(v11, v10, v7);
  *(void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x263F8EE88];
  uint64_t v12 = (void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v12 = nullsub_1;
  v12[1] = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = *(unsigned char *)(a1 + 16);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1510);
  *((void *)&v25 + 1) = v13;
  uint64_t v14 = sub_249987ABC(&qword_2696E1518, &qword_2696E1510);
  uint64_t v26 = v14;
  uint64_t v15 = *(void *)(a1 + 48);
  __int16 v16 = *(_WORD *)(a1 + 56);
  *(void *)&long long v24 = *(void *)(a1 + 40);
  *((void *)&v24 + 1) = v15;
  LOWORD(v25) = v16;
  sub_249882788((uint64_t)&v24, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_2696DF130);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = a3;
  if (a3)
  {
    *((void *)&v25 + 1) = v13;
    uint64_t v26 = v14;
    uint64_t v17 = *(void *)(a1 + 48);
    __int16 v18 = *(_WORD *)(a1 + 56);
    *(void *)&long long v24 = *(void *)(a1 + 40);
    *((void *)&v24 + 1) = v17;
    LOWORD(v25) = v18;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2498D6084((uint64_t)&v24, (uint64_t)v23, &qword_2696DF130);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_249AEB9F8();
    sub_2498D60E8((uint64_t)&v24, &qword_2696DF130);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = v3;
  long long v20 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *long long v20 = sub_249A6A1AC;
  v20[1] = (uint64_t (*)())v19;
  swift_release();
  return v3;
}

uint64_t sub_249A6357C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C98);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v11 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  uint64_t v21 = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  sub_2498D6084((uint64_t)&v19, (uint64_t)v18, &qword_2696DF130);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF130);
  sub_249AEB9A8();
  sub_2498D60E8((uint64_t)&v19, &qword_2696DF130);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v8 + 32))(v11, v10, v7);
  *(void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x263F8EE88];
  uint64_t v12 = (void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v12 = nullsub_1;
  v12[1] = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = *(unsigned char *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8D6C8];
  *((void *)&v20 + 1) = MEMORY[0x263F8D6C8];
  uint64_t v21 = &protocol witness table for Int;
  *(void *)&long long v19 = *(void *)(a1 + 40);
  sub_249882788((uint64_t)&v19, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_2696DF130);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = a3;
  if (a3)
  {
    *((void *)&v20 + 1) = v13;
    uint64_t v21 = &protocol witness table for Int;
    *(void *)&long long v19 = *(void *)(a1 + 40);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2498D6084((uint64_t)&v19, (uint64_t)v18, &qword_2696DF130);
    swift_retain();
    sub_249AEB9F8();
    sub_2498D60E8((uint64_t)&v19, &qword_2696DF130);
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = v3;
  uint64_t v15 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v15 = sub_249A6B0D8;
  v15[1] = (uint64_t (*)())v14;
  swift_release();
  return v3;
}

uint64_t sub_249A63834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5)
{
  *(void *)(swift_allocObject() + 16) = a2;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_2498D0A3C(a5, a4);
  sub_249AEBA68();
  swift_unownedRelease();
  swift_release();
  swift_unownedRetainStrong();
  swift_beginAccess();
  sub_249AEB958();
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_249A63968(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  swift_unownedRetainStrong();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  _OWORD v9[3] = v5;
  v9[4] = (uint64_t)&protocol witness table for Measurement<A>;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(boxed_opaque_existential_0, a1, v5);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2498D6084((uint64_t)v9, (uint64_t)&v8, &qword_2696DF130);
  swift_retain();
  sub_249AEB9F8();
  sub_2498D60E8((uint64_t)v9, &qword_2696DF130);
  return swift_release();
}

uint64_t sub_249A63A60(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v31 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14A8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3);
  uint64_t v28 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14C0);
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v27 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4610);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E46C0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v32 = v11;
  uint64_t v33 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498DB20C(0, &qword_2696E4620);
  uint64_t v15 = self;
  swift_retain();
  id v16 = objc_msgSend(v15, sel_mainRunLoop);
  uint64_t v17 = sub_249AED8A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v10, 1, 1, v17);
  uint64_t v18 = sub_249AED858();

  sub_2498D60E8((uint64_t)v10, &qword_2696E4610);
  uint64_t v34 = v18;
  sub_249AED848();
  sub_249A6A130();
  uint64_t v19 = sub_249AEB988();
  swift_release();
  uint64_t v34 = v19;
  sub_2498D6084(v29, (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2696E14C0);
  long long v20 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v28, v30, v3);
  unint64_t v21 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v22 = (v7 + *(unsigned __int8 *)(v4 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v23 = swift_allocObject();
  sub_249882788((uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v21, &qword_2696E14C0);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v23 + v22, v20, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4630);
  sub_2498D0A3C(&qword_2696E4638, &qword_2696E4630);
  sub_249AEBA48();
  swift_release();
  swift_release();
  sub_2498D0A3C(&qword_2696E46C8, &qword_2696E46C0);
  uint64_t v24 = v32;
  uint64_t v25 = sub_249AEBA28();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v24);
  type metadata accessor for InstrumentDataSource();
  swift_allocObject();
  return sub_249A624CC(v31, v25, 1, &qword_2696E14A8, (uint64_t)&unk_26FDB1430, (uint64_t)sub_249A6A494);
}

uint64_t sub_249A63F38(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v31 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFF08);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3);
  uint64_t v28 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1530);
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v27 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4610);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E47D0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v32 = v11;
  uint64_t v33 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498DB20C(0, &qword_2696E4620);
  uint64_t v15 = self;
  swift_retain();
  id v16 = objc_msgSend(v15, sel_mainRunLoop);
  uint64_t v17 = sub_249AED8A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v10, 1, 1, v17);
  uint64_t v18 = sub_249AED858();

  sub_2498D60E8((uint64_t)v10, &qword_2696E4610);
  uint64_t v34 = v18;
  sub_249AED848();
  sub_249A6A130();
  uint64_t v19 = sub_249AEB988();
  swift_release();
  uint64_t v34 = v19;
  sub_2498D6084(v29, (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2696E1530);
  long long v20 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v28, v30, v3);
  unint64_t v21 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v22 = (v7 + *(unsigned __int8 *)(v4 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v23 = swift_allocObject();
  sub_249882788((uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v21, &qword_2696E1530);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v23 + v22, v20, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4630);
  sub_2498D0A3C(&qword_2696E4638, &qword_2696E4630);
  sub_249AEBA48();
  swift_release();
  swift_release();
  sub_2498D0A3C(&qword_2696E47D8, &qword_2696E47D0);
  uint64_t v24 = v32;
  uint64_t v25 = sub_249AEBA28();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v24);
  type metadata accessor for InstrumentDataSource();
  swift_allocObject();
  return sub_249A624CC(v31, v25, 1, &qword_2696DFF08, (uint64_t)&unk_26FDB17A0, (uint64_t)sub_249A6AF68);
}

uint64_t sub_249A64410(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v31 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1478);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3);
  uint64_t v28 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1470);
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v27 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4610);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E46F0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v32 = v11;
  uint64_t v33 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498DB20C(0, &qword_2696E4620);
  uint64_t v15 = self;
  swift_retain();
  id v16 = objc_msgSend(v15, sel_mainRunLoop);
  uint64_t v17 = sub_249AED8A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v10, 1, 1, v17);
  uint64_t v18 = sub_249AED858();

  sub_2498D60E8((uint64_t)v10, &qword_2696E4610);
  uint64_t v34 = v18;
  sub_249AED848();
  sub_249A6A130();
  uint64_t v19 = sub_249AEB988();
  swift_release();
  uint64_t v34 = v19;
  sub_2498D6084(v29, (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2696E1470);
  long long v20 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v28, v30, v3);
  unint64_t v21 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v22 = (v7 + *(unsigned __int8 *)(v4 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v23 = swift_allocObject();
  sub_249882788((uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v21, &qword_2696E1470);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v23 + v22, v20, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4630);
  sub_2498D0A3C(&qword_2696E4638, &qword_2696E4630);
  sub_249AEBA48();
  swift_release();
  swift_release();
  sub_2498D0A3C(&qword_2696E46F8, &qword_2696E46F0);
  uint64_t v24 = v32;
  uint64_t v25 = sub_249AEBA28();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v24);
  type metadata accessor for InstrumentDataSource();
  swift_allocObject();
  return sub_249A624CC(v31, v25, 1, &qword_2696E1478, (uint64_t)&unk_26FDB1390, (uint64_t)sub_249A6A3B0);
}

void sub_249A648E8(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  double v4 = a3 - a2;
  if ((~COERCE__INT64(a3 - a2) & 0x7FF0000000000000) != 0)
  {
    unint64_t v7 = sub_249A221F0(0x20000000000001uLL);
    double v8 = v4 * ((double)v7 * 1.11022302e-16) + a2;
    if (v7 == 0x20000000000000) {
      double v8 = a3;
    }
    *a1 = v8;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_249A6496C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5, unint64_t *a6)
{
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_249AEB5E8();
  double v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t result = sub_249AEB5E8();
  if (v9 > v11)
  {
    __break(1u);
    goto LABEL_7;
  }
  if ((~COERCE__INT64(v11 - v9) & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  sub_249A221F0(0x20000000000001uLL);
  sub_249AEB5C8();
  sub_2498DB20C(0, a6);

  return sub_249AEB5D8();
}

unint64_t sub_249A64A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3)
  {
    int v5 = 0;
    return v5 | ((v3 == 0) << 8);
  }
  unint64_t result = sub_249A221F0(*(void *)(v2 + 16));
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v2 + 16))
  {
    int v5 = *(unsigned __int8 *)(v2 + result + 32);
    return v5 | ((v3 == 0) << 8);
  }
  __break(1u);
  return result;
}

unint64_t sub_249A64AF8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 160);
  unint64_t result = *(void *)(v3 + 16);
  if (result)
  {
    unint64_t result = sub_249A221F0(result);
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(void *)(v3 + 16))
    {
      int v5 = (void *)(v3 + 120 * result);
      uint64_t v6 = v5[4];
      uint64_t v7 = v5[5];
      uint64_t v8 = v5[6];
      uint64_t v9 = v5[7];
      uint64_t v10 = v5[8];
      uint64_t v11 = v5[9];
      uint64_t v12 = v5[10];
      uint64_t v13 = v5[11];
      uint64_t v14 = v5[12];
      uint64_t v15 = v5[13];
      uint64_t v16 = v5[14];
      uint64_t v17 = v5[15];
      uint64_t v18 = v5[16];
      uint64_t v19 = v5[17];
      uint64_t v20 = v5[18];
      *a2 = v6;
      a2[1] = v7;
      a2[2] = v8;
      a2[3] = v9;
      a2[4] = v10;
      a2[5] = v11;
      a2[6] = v12;
      a2[7] = v13;
      a2[8] = v14;
      a2[9] = v15;
      a2[10] = v16;
      a2[11] = v17;
      a2[12] = v18;
      a2[13] = v19;
      a2[14] = v20;
      return sub_249A6A288(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
    }
    __break(1u);
  }
  else
  {
    *(_OWORD *)a2 = xmmword_249B09200;
    *((_OWORD *)a2 + 1) = 0u;
    *((_OWORD *)a2 + 2) = 0u;
    *((_OWORD *)a2 + 3) = 0u;
    *((_OWORD *)a2 + 4) = 0u;
    *((_OWORD *)a2 + 5) = 0u;
    *((_OWORD *)a2 + 6) = 0u;
    a2[14] = 0;
  }
  return result;
}

unint64_t sub_249A64BC8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 64);
  unint64_t result = *(void *)(v3 + 16);
  if (!result)
  {
    *(_OWORD *)a2 = xmmword_249B09200;
    *(_WORD *)(a2 + 16) = 0;
    return result;
  }
  unint64_t result = sub_249A221F0(result);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (result >= *(void *)(v3 + 16))
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v5 = v3 + 24 * result;
  uint64_t v7 = *(void *)(v5 + 32);
  uint64_t v6 = *(void *)(v5 + 40);
  LOWORD(v5) = *(_WORD *)(v5 + 48);
  *(void *)a2 = v7;
  *(void *)(a2 + 8) = v6;
  *(_WORD *)(a2 + 16) = v5;

  return swift_bridgeObjectRetain();
}

unint64_t sub_249A64C54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 56);
  unint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 0;
  }
  unint64_t result = sub_249A221F0(v3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v2 + 16))
  {
    uint64_t v5 = *(void *)(v2 + 16 * result + 32);
    swift_bridgeObjectRetain();
    return v5;
  }
  __break(1u);
  return result;
}

unint64_t sub_249A64CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  if (!*(void *)(v2 + 16)) {
    return 0;
  }
  unint64_t result = sub_249A221F0(*(void *)(v2 + 16));
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v2 + 16))
  {
    return *(void *)(v2 + 8 * result + 32);
  }
  __break(1u);
  return result;
}

uint64_t sub_249A64D1C(int a1, double a2, double a3, double a4, double a5, double a6)
{
  int v33 = a1;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4610);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = &v32[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4758);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = &v32[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4760);
  uint64_t v18 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v20 = &v32[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v21 = a2 / a3;
  if (a6 >= a4) {
    double v22 = a4;
  }
  else {
    double v22 = a6;
  }
  if (a4 >= a5) {
    double v23 = v22;
  }
  else {
    double v23 = a5;
  }
  sub_2498DB20C(0, &qword_2696E4620);
  id v24 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v25 = sub_249AED8A8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v13, 1, 1, v25);
  uint64_t v26 = sub_249AED858();

  sub_2498D60E8((uint64_t)v13, &qword_2696E4610);
  double v35 = *(double *)&v26;
  sub_249AED848();
  sub_249A6A130();
  uint64_t v27 = sub_249AEB988();
  swift_release();
  uint64_t v36 = 1;
  uint64_t v37 = v27;
  double v35 = a5;
  uint64_t v28 = swift_allocObject();
  *(double *)(v28 + 16) = v23;
  *(double *)(v28 + 24) = a5;
  *(double *)(v28 + 32) = a6;
  *(double *)(v28 + 40) = v21;
  *(unsigned char *)(v28 + 48) = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4630);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4768);
  sub_2498D0A3C(&qword_2696E4638, &qword_2696E4630);
  sub_249AEBA58();
  swift_release();
  swift_release();
  sub_2498D0A3C(&qword_2696E4770, &qword_2696E4758);
  sub_249AEBA48();
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v17, v14);
  sub_2498D0A3C(&qword_2696E4778, &qword_2696E4760);
  uint64_t v29 = v34;
  uint64_t v30 = sub_249AEBA28();
  (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v20, v29);
  return v30;
}

uint64_t sub_249A65164@<X0>(uint64_t result@<X0>, char a2@<W2>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D3>)
{
  uint64_t v6 = *(void *)(result + 8);
  double v7 = (a4 - a5) * a6 * (double)v6;
  double v8 = *(double *)result + v7;
  if (v8 < a4) {
    double v9 = *(double *)result + v7;
  }
  else {
    double v9 = a5;
  }
  uint64_t v10 = -1;
  if (v8 <= a5) {
    uint64_t v10 = 1;
  }
  uint64_t v11 = -1;
  if (v8 < a4) {
    uint64_t v11 = 1;
  }
  if (v6 != 1) {
    uint64_t v11 = *(void *)(result + 8);
  }
  if (v6 == -1) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v11;
  }
  if (v8 <= a4) {
    a4 = v8;
  }
  if (v8 < a5) {
    a4 = a5;
  }
  if ((a2 & 1) == 0)
  {
    a4 = v9;
    uint64_t v12 = 1;
  }
  *(double *)a3 = a4;
  *(void *)(a3 + 8) = v12;
  return result;
}

double sub_249A651E0@<D0>(double *a1@<X0>, void *a2@<X8>)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

uint64_t sub_249A651EC(uint64_t a1, uint64_t a2, int a3, double a4, double a5)
{
  int v69 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1440);
  uint64_t v10 = v9 - 8;
  uint64_t v58 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v59 = v11;
  uint64_t v60 = (uint64_t)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4730);
  MEMORY[0x270FA5388](v66);
  uint64_t v63 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4610);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v55 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4738);
  uint64_t v65 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v62 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4740);
  uint64_t v64 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v61 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF0E8);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  MEMORY[0x270FA5388](v17);
  uint64_t v56 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  double v22 = (char *)&v52 - v21;
  uint64_t v23 = *(int *)(v10 + 44);
  sub_2498D0A3C(&qword_2696E1458, &qword_2696DF0E8);
  char v24 = sub_249AED008();
  uint64_t v57 = v18;
  if (v24)
  {
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    uint64_t v26 = a2;
    v25(v22, a2, v17);
  }
  else
  {
    uint64_t v53 = a2;
    uint64_t v27 = a2 + v23;
    char v28 = sub_249AECFF8();
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    if (v28)
    {
      uint64_t v29 = v22;
      uint64_t v30 = v27;
    }
    else
    {
      uint64_t v29 = v22;
      uint64_t v30 = a1;
    }
    v25(v29, v30, v17);
    uint64_t v26 = v53;
  }
  sub_2498DB20C(0, &qword_2696E4620);
  id v31 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v32 = sub_249AED8A8();
  uint64_t v33 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v55, 1, 1, v32);
  uint64_t v34 = sub_249AED858();

  sub_2498D60E8(v33, &qword_2696E4610);
  uint64_t v70 = v34;
  sub_249AED848();
  sub_249A6A130();
  uint64_t v35 = sub_249AEB988();
  swift_release();
  uint64_t v70 = v35;
  uint64_t v36 = *(int *)(v66 + 48);
  uint64_t v37 = (uint64_t)v63;
  v25(v63, v26, v17);
  *(void *)(v37 + v36) = 1;
  uint64_t v38 = v56;
  uint64_t v54 = v22;
  v25(v56, (uint64_t)v22, v17);
  uint64_t v39 = v60;
  sub_2498D6084(v26, v60, &qword_2696E1440);
  uint64_t v40 = v57;
  unint64_t v41 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  unint64_t v42 = (v19 + *(unsigned __int8 *)(v58 + 80) + v41) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  unint64_t v43 = (v59 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v44 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v40 + 32))(v44 + v41, v38, v17);
  sub_249882788(v39, v44 + v42, &qword_2696E1440);
  unint64_t v45 = v44 + v43;
  *(double *)unint64_t v45 = a4 / a5;
  *(unsigned char *)(v45 + 8) = v69 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4630);
  sub_2498D0A3C(&qword_2696E4638, &qword_2696E4630);
  uint64_t v46 = v62;
  sub_249AEBA58();
  swift_release();
  sub_2498D60E8(v37, &qword_2696E4730);
  swift_release();
  sub_2498D0A3C(&qword_2696E4748, &qword_2696E4738);
  uint64_t v47 = v61;
  uint64_t v48 = v68;
  sub_249AEBA48();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v46, v48);
  sub_2498D0A3C(&qword_2696E4750, &qword_2696E4740);
  uint64_t v49 = v67;
  uint64_t v50 = sub_249AEBA28();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v47, v49);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v54, v17);
  return v50;
}

uint64_t sub_249A65950(uint64_t a1, uint64_t a2, int a3, double a4, double a5)
{
  int v69 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1470);
  uint64_t v10 = v9 - 8;
  uint64_t v58 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v59 = v11;
  uint64_t v60 = (uint64_t)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4698);
  MEMORY[0x270FA5388](v66);
  uint64_t v63 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4610);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v55 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E46A0);
  uint64_t v65 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v62 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E46A8);
  uint64_t v64 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v61 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1478);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  MEMORY[0x270FA5388](v17);
  uint64_t v56 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  double v22 = (char *)&v52 - v21;
  uint64_t v23 = *(int *)(v10 + 44);
  sub_2498D0A3C(&qword_2696E1498, &qword_2696E1478);
  char v24 = sub_249AED008();
  uint64_t v57 = v18;
  if (v24)
  {
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    uint64_t v26 = a2;
    v25(v22, a2, v17);
  }
  else
  {
    uint64_t v53 = a2;
    uint64_t v27 = a2 + v23;
    char v28 = sub_249AECFF8();
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    if (v28)
    {
      uint64_t v29 = v22;
      uint64_t v30 = v27;
    }
    else
    {
      uint64_t v29 = v22;
      uint64_t v30 = a1;
    }
    v25(v29, v30, v17);
    uint64_t v26 = v53;
  }
  sub_2498DB20C(0, &qword_2696E4620);
  id v31 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v32 = sub_249AED8A8();
  uint64_t v33 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v55, 1, 1, v32);
  uint64_t v34 = sub_249AED858();

  sub_2498D60E8(v33, &qword_2696E4610);
  uint64_t v70 = v34;
  sub_249AED848();
  sub_249A6A130();
  uint64_t v35 = sub_249AEB988();
  swift_release();
  uint64_t v70 = v35;
  uint64_t v36 = *(int *)(v66 + 48);
  uint64_t v37 = (uint64_t)v63;
  v25(v63, v26, v17);
  *(void *)(v37 + v36) = 1;
  uint64_t v38 = v56;
  uint64_t v54 = v22;
  v25(v56, (uint64_t)v22, v17);
  uint64_t v39 = v60;
  sub_2498D6084(v26, v60, &qword_2696E1470);
  uint64_t v40 = v57;
  unint64_t v41 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  unint64_t v42 = (v19 + *(unsigned __int8 *)(v58 + 80) + v41) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  unint64_t v43 = (v59 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v44 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v40 + 32))(v44 + v41, v38, v17);
  sub_249882788(v39, v44 + v42, &qword_2696E1470);
  unint64_t v45 = v44 + v43;
  *(double *)unint64_t v45 = a4 / a5;
  *(unsigned char *)(v45 + 8) = v69 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4630);
  sub_2498D0A3C(&qword_2696E4638, &qword_2696E4630);
  uint64_t v46 = v62;
  sub_249AEBA58();
  swift_release();
  sub_2498D60E8(v37, &qword_2696E4698);
  swift_release();
  sub_2498D0A3C(&qword_2696E46B0, &qword_2696E46A0);
  uint64_t v47 = v61;
  uint64_t v48 = v68;
  sub_249AEBA48();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v46, v48);
  sub_2498D0A3C(&qword_2696E46B8, &qword_2696E46A8);
  uint64_t v49 = v67;
  uint64_t v50 = sub_249AEBA28();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v47, v49);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v54, v17);
  return v50;
}

uint64_t sub_249A660B4@<X0>(char *a1@<X0>, char *a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, char *a5@<X8>)
{
  LODWORD(v67) = a4;
  uint64_t v70 = a1;
  uint64_t v64 = (char *)a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4730);
  MEMORY[0x270FA5388](v7);
  uint64_t v60 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1440);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v61 = (uint64_t)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF0E8);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v62 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v65 = (char *)&v59 - v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v66 = (char *)&v59 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v59 - v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v59 - v22;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v59 - v25;
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v59 - v28;
  sub_2498DB20C(0, (unint64_t *)&qword_2696DF158);
  uint64_t v68 = a2;
  uint64_t v63 = a3;
  sub_249AEB5B8();
  sub_249AEB598();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v12 + 8);
  v30(v20, v11);
  uint64_t v69 = v7;
  uint64_t v31 = *(int *)(v7 + 48);
  uint64_t v32 = v70;
  sub_249AEB598();
  v30(v23, v11);
  sub_249AEB5A8();
  v30(v26, v11);
  if ((v67 & 1) == 0)
  {
    sub_2498D0A3C(&qword_2696E1458, &qword_2696DF0E8);
    if (sub_249AED008())
    {
      unint64_t v43 = v64;
      uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v64, v29, v11);
    }
    else
    {
      v30(v29, v11);
      unint64_t v43 = v64;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v64, v63, v11);
    }
    *(void *)&v43[*(int *)(v69 + 48)] = 1;
    return result;
  }
  uint64_t v33 = *(void *)&v32[v31];
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v34(v66, v29, v11);
  uint64_t v67 = v12 + 16;
  v34(v65, v68, v11);
  uint64_t v35 = v29;
  if (v33 == 1)
  {
    sub_2498D0A3C(&qword_2696E1458, &qword_2696DF0E8);
    uint64_t v37 = v65;
    uint64_t v36 = v66;
    char v38 = sub_249AED008();
    v30(v37, v11);
    v30(v36, v11);
    uint64_t v40 = v62;
    uint64_t v39 = v63;
    if ((v38 & 1) == 0)
    {
      uint64_t v41 = -1;
      unint64_t v42 = v64;
      goto LABEL_15;
    }
  }
  else
  {
    v30(v65, v11);
    v30(v66, v11);
    uint64_t v40 = v62;
    uint64_t v39 = v63;
  }
  uint64_t v45 = *(void *)&v70[v31];
  v34(v40, v35, v11);
  uint64_t v46 = v61;
  sub_2498D6084(v39, v61, &qword_2696E1440);
  if (v45 == -1)
  {
    sub_2498D0A3C(&qword_2696E1458, &qword_2696DF0E8);
    char v47 = sub_249AED008();
    sub_2498D60E8(v46, &qword_2696E1440);
    v30(v40, v11);
    unint64_t v42 = v64;
    if ((v47 & 1) == 0)
    {
      uint64_t v41 = 1;
      goto LABEL_15;
    }
  }
  else
  {
    sub_2498D60E8(v46, &qword_2696E1440);
    v30(v40, v11);
    unint64_t v42 = v64;
  }
  uint64_t v66 = v35;
  uint64_t v48 = v70;
  uint64_t v49 = *(int *)(v69 + 48);
  uint64_t v50 = v42;
  uint64_t v51 = v39;
  uint64_t v52 = v60;
  v34(v60, v70, v11);
  uint64_t v41 = *(void *)&v48[v31];
  *(void *)&v52[v49] = v41;
  uint64_t v35 = v66;
  uint64_t v53 = v52;
  uint64_t v39 = v51;
  unint64_t v42 = v50;
  v30(v53, v11);
LABEL_15:
  sub_2498D0A3C(&qword_2696E1458, &qword_2696DF0E8);
  if (sub_249AED008())
  {
    v34(v42, (char *)v39, v11);
  }
  else
  {
    uint64_t v54 = v35;
    uint64_t v55 = v68;
    if (sub_249AECFF8())
    {
      uint64_t v56 = v42;
      uint64_t v57 = v55;
    }
    else
    {
      uint64_t v56 = v42;
      uint64_t v57 = v54;
    }
    v34(v56, v57, v11);
    uint64_t v35 = v54;
  }
  uint64_t v58 = *(int *)(v69 + 48);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v30)(v35, v11);
  *(void *)&v42[v58] = v41;
  return result;
}

uint64_t sub_249A66780@<X0>(char *a1@<X0>, char *a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, char *a5@<X8>)
{
  LODWORD(v67) = a4;
  uint64_t v70 = a1;
  uint64_t v64 = (char *)a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4698);
  MEMORY[0x270FA5388](v7);
  uint64_t v60 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1470);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v61 = (uint64_t)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1478);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v62 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v65 = (char *)&v59 - v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v66 = (char *)&v59 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v59 - v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v59 - v22;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v59 - v25;
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v59 - v28;
  sub_2498DB20C(0, &qword_2696E1480);
  uint64_t v68 = a2;
  uint64_t v63 = a3;
  sub_249AEB5B8();
  sub_249AEB598();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v12 + 8);
  v30(v20, v11);
  uint64_t v69 = v7;
  uint64_t v31 = *(int *)(v7 + 48);
  uint64_t v32 = v70;
  sub_249AEB598();
  v30(v23, v11);
  sub_249AEB5A8();
  v30(v26, v11);
  if ((v67 & 1) == 0)
  {
    sub_2498D0A3C(&qword_2696E1498, &qword_2696E1478);
    if (sub_249AED008())
    {
      unint64_t v43 = v64;
      uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v64, v29, v11);
    }
    else
    {
      v30(v29, v11);
      unint64_t v43 = v64;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v64, v63, v11);
    }
    *(void *)&v43[*(int *)(v69 + 48)] = 1;
    return result;
  }
  uint64_t v33 = *(void *)&v32[v31];
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v34(v66, v29, v11);
  uint64_t v67 = v12 + 16;
  v34(v65, v68, v11);
  uint64_t v35 = v29;
  if (v33 == 1)
  {
    sub_2498D0A3C(&qword_2696E1498, &qword_2696E1478);
    uint64_t v37 = v65;
    uint64_t v36 = v66;
    char v38 = sub_249AED008();
    v30(v37, v11);
    v30(v36, v11);
    uint64_t v40 = v62;
    uint64_t v39 = v63;
    if ((v38 & 1) == 0)
    {
      uint64_t v41 = -1;
      unint64_t v42 = v64;
      goto LABEL_15;
    }
  }
  else
  {
    v30(v65, v11);
    v30(v66, v11);
    uint64_t v40 = v62;
    uint64_t v39 = v63;
  }
  uint64_t v45 = *(void *)&v70[v31];
  v34(v40, v35, v11);
  uint64_t v46 = v61;
  sub_2498D6084(v39, v61, &qword_2696E1470);
  if (v45 == -1)
  {
    sub_2498D0A3C(&qword_2696E1498, &qword_2696E1478);
    char v47 = sub_249AED008();
    sub_2498D60E8(v46, &qword_2696E1470);
    v30(v40, v11);
    unint64_t v42 = v64;
    if ((v47 & 1) == 0)
    {
      uint64_t v41 = 1;
      goto LABEL_15;
    }
  }
  else
  {
    sub_2498D60E8(v46, &qword_2696E1470);
    v30(v40, v11);
    unint64_t v42 = v64;
  }
  uint64_t v66 = v35;
  uint64_t v48 = v70;
  uint64_t v49 = *(int *)(v69 + 48);
  uint64_t v50 = v42;
  uint64_t v51 = v39;
  uint64_t v52 = v60;
  v34(v60, v70, v11);
  uint64_t v41 = *(void *)&v48[v31];
  *(void *)&v52[v49] = v41;
  uint64_t v35 = v66;
  uint64_t v53 = v52;
  uint64_t v39 = v51;
  unint64_t v42 = v50;
  v30(v53, v11);
LABEL_15:
  sub_2498D0A3C(&qword_2696E1498, &qword_2696E1478);
  if (sub_249AED008())
  {
    v34(v42, (char *)v39, v11);
  }
  else
  {
    uint64_t v54 = v35;
    uint64_t v55 = v68;
    if (sub_249AECFF8())
    {
      uint64_t v56 = v42;
      uint64_t v57 = v55;
    }
    else
    {
      uint64_t v56 = v42;
      uint64_t v57 = v54;
    }
    v34(v56, v57, v11);
    uint64_t v35 = v54;
  }
  uint64_t v58 = *(int *)(v69 + 48);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v30)(v35, v11);
  *(void *)&v42[v58] = v41;
  return result;
}

uint64_t sub_249A66E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249A66E74(a1, &qword_2696E4730, &qword_2696DF0E8, a2);
}

uint64_t sub_249A66E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249A66E74(a1, &qword_2696E4698, &qword_2696E1478, a2);
}

uint64_t sub_249A66E74@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a4, v9, v10);
}

unsigned char *sub_249A66F68@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 1) == 0;
  return result;
}

uint64_t sub_249A66F7C(char *a1)
{
  char v1 = *a1;
  swift_unownedRetainStrong();
  uint64_t v5 = MEMORY[0x263F8E778];
  uint64_t v6 = &protocol witness table for UInt8;
  v4[0] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2498D6084((uint64_t)v4, (uint64_t)&v3, &qword_2696DF130);
  swift_retain();
  sub_249AEB9F8();
  sub_2498D60E8((uint64_t)v4, &qword_2696DF130);
  return swift_release();
}

uint64_t sub_249A67038(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_unownedRetainStrong();
  _OWORD v4[3] = MEMORY[0x263F8D538];
  v4[4] = &protocol witness table for Double;
  v4[0] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2498D6084((uint64_t)v4, (uint64_t)&v3, &qword_2696DF130);
  swift_retain();
  sub_249AEB9F8();
  sub_2498D60E8((uint64_t)v4, &qword_2696DF130);
  return swift_release();
}

uint64_t sub_249A670FC(char *a1)
{
  char v1 = *a1;
  swift_unownedRetainStrong();
  uint64_t v5 = MEMORY[0x263F8D4F8];
  uint64_t v6 = &protocol witness table for Bool;
  v4[0] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2498D6084((uint64_t)v4, (uint64_t)&v3, &qword_2696DF130);
  swift_retain();
  sub_249AEB9F8();
  sub_2498D60E8((uint64_t)v4, &qword_2696DF130);
  return swift_release();
}

uint64_t sub_249A671B8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v7 = a1[6];
  swift_unownedRetainStrong();
  v11[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1408);
  void v11[4] = sub_249987ABC(&qword_2696E1410, &qword_2696E1408);
  uint64_t v8 = (void *)swift_allocObject();
  v11[0] = v8;
  uint64_t v8[2] = v1;
  v8[3] = v2;
  void v8[4] = v3;
  v8[5] = v4;
  v8[6] = v5;
  v8[7] = v6;
  unsigned char v8[8] = v7;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2498D6084((uint64_t)v11, (uint64_t)&v10, &qword_2696DF130);
  sub_249A6ABB4(v1, v2, v3, v4, v5, v6);
  swift_retain();
  sub_249AEB9F8();
  sub_2498D60E8((uint64_t)v11, &qword_2696DF130);
  return swift_release();
}

uint64_t sub_249A672F8(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v17 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 80);
  unint64_t v14 = *(void *)(a1 + 88);
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 96);
  uint64_t v13 = *(void *)(a1 + 104);
  char v9 = *(unsigned char *)(a1 + 112);
  swift_unownedRetainStrong();
  void v20[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1420);
  v20[4] = sub_249987ABC(&qword_2696E1428, &qword_2696E1420);
  uint64_t v10 = swift_allocObject();
  v20[0] = v10;
  *(void *)(v10 + 16) = v1;
  *(void *)(v10 + 24) = v2;
  *(void *)(v10 + 32) = v3;
  *(void *)(v10 + 40) = v4;
  *(void *)(v10 + 48) = v5;
  *(void *)(v10 + 56) = v18;
  *(void *)(v10 + 64) = v17;
  *(void *)(v10 + 72) = v16;
  *(void *)(v10 + 80) = v15;
  *(void *)(v10 + 88) = v6;
  *(void *)(v10 + 96) = v7;
  *(void *)(v10 + 104) = v14;
  *(void *)(v10 + 112) = v8;
  *(void *)(v10 + 120) = v13;
  *(unsigned char *)(v10 + 128) = v9;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2498D6084((uint64_t)v20, (uint64_t)v19, &qword_2696DF130);
  sub_249A6AA54(v12, v2, v3, v4, v5, v18, v17, v16, v15, v6, v7, v14);
  swift_retain();
  sub_249AEB9F8();
  sub_2498D60E8((uint64_t)v20, &qword_2696DF130);
  return swift_release();
}

uint64_t sub_249A6748C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  swift_unownedRetainStrong();
  v5[3] = MEMORY[0x263F8D310];
  v5[4] = &protocol witness table for String;
  v5[0] = v2;
  v5[1] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2498D6084((uint64_t)v5, (uint64_t)&v4, &qword_2696DF130);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_249AEB9F8();
  sub_2498D60E8((uint64_t)v5, &qword_2696DF130);
  return swift_release();
}

uint64_t sub_249A67558(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v12 = *a1;
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v18 = a1[5];
  uint64_t v16 = a1[7];
  uint64_t v17 = a1[6];
  uint64_t v6 = a1[9];
  uint64_t v7 = a1[10];
  uint64_t v14 = a1[11];
  uint64_t v15 = a1[8];
  uint64_t v8 = a1[12];
  uint64_t v13 = a1[13];
  uint64_t v9 = a1[14];
  swift_unownedRetainStrong();
  void v20[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14F8);
  v20[4] = sub_249987ABC(&qword_2696E1500, &qword_2696E14F8);
  uint64_t v10 = (void *)swift_allocObject();
  v20[0] = v10;
  void v10[2] = v1;
  _OWORD v10[3] = v2;
  v10[4] = v3;
  v10[5] = v4;
  v10[6] = v5;
  v10[7] = v18;
  v10[8] = v17;
  v10[9] = v16;
  v10[10] = v15;
  v10[11] = v6;
  v10[12] = v7;
  v10[13] = v14;
  v10[14] = v8;
  v10[15] = v13;
  v10[16] = v9;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2498D6084((uint64_t)v20, (uint64_t)v19, &qword_2696DF130);
  sub_249A6A288(v12, v2, v3, v4, v5, v18, v17, v16, v15, v6, v7, v14);
  swift_retain();
  sub_249AEB9F8();
  sub_2498D60E8((uint64_t)v20, &qword_2696DF130);
  return swift_release();
}

uint64_t sub_249A676EC(__int16 *a1)
{
  __int16 v1 = *a1;
  swift_unownedRetainStrong();
  uint64_t v5 = MEMORY[0x263F8E888];
  uint64_t v6 = &protocol witness table for UInt16;
  v4[0] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2498D6084((uint64_t)v4, (uint64_t)&v3, &qword_2696DF130);
  swift_retain();
  sub_249AEB9F8();
  sub_2498D60E8((uint64_t)v4, &qword_2696DF130);
  return swift_release();
}

uint64_t sub_249A677A8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  __int16 v3 = *((_WORD *)a1 + 8);
  swift_unownedRetainStrong();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1510);
  uint64_t v9 = sub_249987ABC(&qword_2696E1518, &qword_2696E1510);
  v6[0] = v2;
  v6[1] = v1;
  __int16 v7 = v3;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2498D6084((uint64_t)v6, (uint64_t)&v5, &qword_2696DF130);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_249AEB9F8();
  sub_2498D60E8((uint64_t)v6, &qword_2696DF130);
  return swift_release();
}

uint64_t sub_249A67898(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_unownedRetainStrong();
  _OWORD v4[3] = MEMORY[0x263F8D6C8];
  v4[4] = &protocol witness table for Int;
  v4[0] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2498D6084((uint64_t)v4, (uint64_t)&v3, &qword_2696DF130);
  swift_retain();
  sub_249AEB9F8();
  sub_2498D60E8((uint64_t)v4, &qword_2696DF130);
  return swift_release();
}

uint64_t sub_249A67954(uint64_t a1, double a2, double a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4610);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4618);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498DB20C(0, &qword_2696E4620);
  uint64_t v13 = self;
  swift_retain();
  id v14 = objc_msgSend(v13, sel_mainRunLoop);
  uint64_t v15 = sub_249AED8A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
  uint64_t v16 = sub_249AED858();

  sub_2498D60E8((uint64_t)v8, &qword_2696E4610);
  uint64_t v22 = v16;
  sub_249AED848();
  sub_249A6A130();
  uint64_t v17 = sub_249AEB988();
  swift_release();
  uint64_t v22 = v17;
  uint64_t v18 = swift_allocObject();
  *(double *)(v18 + 16) = a2;
  *(double *)(v18 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4630);
  sub_2498D0A3C(&qword_2696E4638, &qword_2696E4630);
  sub_249AEBA48();
  swift_release();
  swift_release();
  sub_2498D0A3C(&qword_2696E4640, &qword_2696E4618);
  uint64_t v19 = sub_249AEBA28();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  type metadata accessor for InstrumentDataSource();
  swift_allocObject();
  return sub_249A61688(a1, v19, 1);
}

uint64_t sub_249A67C98(uint64_t a1, char a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4610);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4810);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2498DB20C(0, &qword_2696E4620);
  uint64_t v11 = self;
  swift_retain();
  id v12 = objc_msgSend(v11, sel_mainRunLoop);
  uint64_t v13 = sub_249AED8A8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  uint64_t v14 = sub_249AED858();

  sub_2498D60E8((uint64_t)v6, &qword_2696E4610);
  uint64_t v19 = v14;
  sub_249AED848();
  sub_249A6A130();
  uint64_t v15 = sub_249AEB988();
  swift_release();
  uint64_t v19 = v15;
  v18[7] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4630);
  sub_2498D0A3C(&qword_2696E4638, &qword_2696E4630);
  sub_249AEBA58();
  swift_release();
  sub_2498D0A3C(&qword_2696E4818, &qword_2696E4810);
  uint64_t v16 = sub_249AEBA28();
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  type metadata accessor for InstrumentDataSource();
  swift_allocObject();
  return sub_249A61940(a1, v16, 1);
}

uint64_t _s14CarPlayAssetUI20InstrumentDataSourceC07previewG014dataIdentifier10zoneRegionAcA0efJ0O_SSSgtFZ_0(unsigned char *a1)
{
  char v126 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4580);
  uint64_t v111 = *(void *)(v1 - 8);
  uint64_t v112 = v1;
  MEMORY[0x270FA5388](v1);
  unint64_t v110 = (char *)&v102 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4588);
  uint64_t v108 = *(void *)(v3 - 8);
  uint64_t v109 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v107 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4590);
  uint64_t v105 = *(void *)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  uint64_t v103 = (char *)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4598);
  uint64_t v115 = *(void *)(v6 - 8);
  uint64_t v116 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v114 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFF08);
  uint64_t v104 = *(void *)(v122 - 8);
  MEMORY[0x270FA5388](v122);
  uint64_t v9 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1530);
  MEMORY[0x270FA5388](v10 - 8);
  id v12 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E45A0);
  uint64_t v118 = *(void *)(v13 - 8);
  uint64_t v119 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v117 = (char *)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E45A8);
  uint64_t v113 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E45B0);
  uint64_t v120 = *(void *)(v18 - 8);
  uint64_t v121 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E45B8);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v124 = v21;
  uint64_t v125 = v22;
  MEMORY[0x270FA5388](v21);
  BOOL v123 = (char *)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14A8);
  uint64_t v102 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v102 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14C0);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v29 = (char *)&v102 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E45C0);
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v102 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*v126)
  {
    case 1:
      if (qword_2696DD4B0 != -1) {
        swift_once();
      }
      uint64_t v38 = qword_2696E12A8;
      goto LABEL_169;
    case 2:
      if (qword_2696DD4B8 != -1) {
        swift_once();
      }
      uint64_t v38 = qword_2696E12B0;
      goto LABEL_169;
    case 3:
      if (qword_2696DD4C0 != -1) {
        swift_once();
      }
      uint64_t v39 = (unsigned char *)qword_2696E12B8;
      goto LABEL_75;
    case 4:
      if (qword_2696DD4C8 != -1) {
        swift_once();
      }
      uint64_t v39 = (unsigned char *)qword_2696E12C0;
      goto LABEL_75;
    case 5:
      if (qword_2696DD4A8 == -1) {
        goto LABEL_97;
      }
      goto LABEL_200;
    case 6:
      if (qword_2696DD438 != -1) {
        swift_once();
      }
      uint64_t v40 = qword_2696E1230;
      goto LABEL_84;
    case 7:
      if (qword_2696DD440 == -1) {
        goto LABEL_97;
      }
      goto LABEL_200;
    case 8:
      if (qword_2696DD448 != -1) {
        swift_once();
      }
      uint64_t v38 = qword_2696E1240;
      goto LABEL_169;
    case 9:
      uint64_t v41 = v31;
      if (qword_2696DD450 != -1) {
        swift_once();
      }
      uint64_t v42 = qword_2696E1248;
      goto LABEL_197;
    case 0xA:
      if (qword_2696DD458 != -1) {
        swift_once();
      }
      unint64_t v43 = (unsigned char *)qword_2696E1250;
      uint64_t v44 = self;
      id v45 = objc_msgSend(v44, sel_kilowatts);
      sub_249983AFC(v45, v29);

      id v46 = objc_msgSend(v44, sel_kilowatts);
      sub_2498DB20C(0, &qword_2696E14B0);
      sub_249AEB5D8();
      uint64_t v47 = sub_249A63A60(v43, (uint64_t)v29, (uint64_t)v26);
      (*(void (**)(char *, uint64_t))(v102 + 8))(v26, v24);
      sub_2498D60E8((uint64_t)v29, &qword_2696E14C0);
      goto LABEL_199;
    case 0xB:
      if (qword_2696DD460 == -1) {
        goto LABEL_97;
      }
      goto LABEL_200;
    case 0xC:
      if (qword_2696DD468 != -1) {
        swift_once();
      }
      uint64_t v40 = qword_2696E1260;
      double v48 = 130.0;
      double v49 = 0.0;
      goto LABEL_85;
    case 0xD:
    case 0x36:
      if (qword_2696DD470 != -1) {
        swift_once();
      }
      return sub_249A60A78();
    case 0xE:
      if (qword_2696DD478 != -1) {
        swift_once();
      }
      uint64_t v40 = qword_2696E1270;
      double v49 = 8000.0;
      double v48 = 10000.0;
      goto LABEL_85;
    case 0xF:
      if (qword_2696DD490 == -1) {
        goto LABEL_97;
      }
      goto LABEL_200;
    case 0x10:
      if (qword_2696DD480 != -1) {
        swift_once();
      }
      uint64_t v50 = (unsigned char *)qword_2696E1278;
      goto LABEL_131;
    case 0x11:
      if (qword_2696DD488 != -1) {
        swift_once();
      }
      uint64_t v51 = qword_2696E1280;
      swift_retain();
      double v52 = 9500.0;
      double v53 = 1.0;
      goto LABEL_164;
    case 0x12:
      if (qword_2696DD498 != -1) {
        swift_once();
      }
      uint64_t v38 = qword_2696E1290;
      goto LABEL_169;
    case 0x13:
      if (qword_2696DD4D0 != -1) {
        swift_once();
      }
      uint64_t v35 = off_2696E12C8;
      uint64_t v36 = (char *)off_2696E12C8 + *(void *)(*(void *)off_2696E12C8 + 152);
      uint64_t v37 = (char *)off_2696E12C8 + *(void *)(*(void *)off_2696E12C8 + 112);
      goto LABEL_60;
    case 0x14:
      if (qword_2696DD4D8 != -1) {
        swift_once();
      }
      uint64_t v38 = qword_2696E12D0;
      goto LABEL_169;
    case 0x15:
      if (qword_2696DD4E0 != -1) {
        swift_once();
      }
      uint64_t v38 = qword_2696E12D8;
      goto LABEL_169;
    case 0x16:
      if (qword_2696DD4E8 != -1) {
        swift_once();
      }
      uint64_t v39 = (unsigned char *)qword_2696E12E0;
      goto LABEL_75;
    case 0x17:
      if (qword_2696DD4F0 != -1) {
        swift_once();
      }
      uint64_t v39 = (unsigned char *)qword_2696E12E8;
LABEL_75:
      swift_retain();
      sub_249AEB998();
      sub_2498D0A3C(&qword_2696E45D8, &qword_2696E45B0);
      uint64_t v54 = v121;
      uint64_t v55 = sub_249AEBA28();
      (*(void (**)(char *, uint64_t))(v120 + 8))(v20, v54);
      type metadata accessor for InstrumentDataSource();
      swift_allocObject();
      uint64_t v56 = &qword_2696DFF08;
      uint64_t v57 = &unk_26FDB17A0;
      uint64_t v58 = sub_249A6AF68;
      goto LABEL_160;
    case 0x18:
      if (qword_2696DD4F8 == -1) {
        goto LABEL_97;
      }
      goto LABEL_200;
    case 0x19:
      if (qword_2696DD508 != -1) {
        swift_once();
      }
      uint64_t v59 = qword_2696E1300;
      goto LABEL_193;
    case 0x1A:
      if (qword_2696DD510 != -1) {
        swift_once();
      }
      uint64_t v40 = qword_2696E1308;
LABEL_84:
      double v49 = 0.0;
      double v48 = 2.0;
LABEL_85:
      return sub_249A67954(v40, v49, v48);
    case 0x1B:
      if (qword_2696DD518 == -1) {
        goto LABEL_97;
      }
      goto LABEL_200;
    case 0x1C:
      if (qword_2696DD520 != -1) {
        swift_once();
      }
      uint64_t v38 = qword_2696E1318;
      goto LABEL_169;
    case 0x1D:
      uint64_t v41 = v31;
      if (qword_2696DD530 != -1) {
        swift_once();
      }
      uint64_t v42 = qword_2696E1328;
      goto LABEL_197;
    case 0x1E:
      if (qword_2696DD540 == -1) {
        goto LABEL_97;
      }
LABEL_200:
      swift_once();
LABEL_97:
      return sub_249A60764();
    case 0x1F:
      if (qword_2696DD548 != -1) {
        swift_once();
      }
      return sub_249A60D8C();
    case 0x20:
      if (qword_2696DD550 != -1) {
        swift_once();
      }
      uint64_t v60 = qword_2696E1348;
      goto LABEL_173;
    case 0x21:
      if (qword_2696DD558 != -1) {
        swift_once();
      }
      return sub_249A610AC();
    case 0x22:
      if (qword_2696DD560 != -1) {
        swift_once();
      }
      uint64_t v51 = qword_2696E1358;
      swift_retain();
      double v53 = 60.0;
      double v52 = 1.0;
      double v61 = 1.0;
      int v62 = 0;
      goto LABEL_165;
    case 0x23:
      if (qword_2696DD568 != -1) {
        swift_once();
      }
      uint64_t v39 = off_2696E1360;
      uint64_t v63 = (char *)off_2696E1360 + *(void *)(*(void *)off_2696E1360 + 152);
      uint64_t v64 = (uint64_t)&v63[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E1470) + 36)];
      swift_retain();
      uint64_t v55 = sub_249A65950(v64, (uint64_t)v63, 0, 0.05, 300.0);
      type metadata accessor for InstrumentDataSource();
      swift_allocObject();
      uint64_t v56 = &qword_2696E1478;
      uint64_t v57 = &unk_26FDB1390;
      uint64_t v58 = sub_249A6A3B0;
      goto LABEL_160;
    case 0x24:
      if (qword_2696DD500 != -1) {
        swift_once();
      }
      uint64_t v65 = (unsigned char *)qword_2696E12F8;
      uint64_t v66 = self;
      id v67 = objc_msgSend(v66, sel_fahrenheit);
      sub_249983E18(v67, v12);

      id v68 = objc_msgSend(v66, sel_fahrenheit);
      sub_2498DB20C(0, (unint64_t *)&qword_2696DFF10);
      sub_249AEB5D8();
      uint64_t v47 = sub_249A63F38(v65, (uint64_t)v12, (uint64_t)v9);
      (*(void (**)(char *, uint64_t))(v104 + 8))(v9, v122);
      sub_2498D60E8((uint64_t)v12, &qword_2696E1530);
      goto LABEL_199;
    case 0x25:
      if (qword_2696DD570 != -1) {
        swift_once();
      }
      uint64_t v39 = (unsigned char *)qword_2696E1368;
      goto LABEL_137;
    case 0x26:
      if (qword_2696DD578 != -1) {
        swift_once();
      }
      uint64_t v50 = (unsigned char *)qword_2696E1370;
      goto LABEL_131;
    case 0x27:
      if (qword_2696DD580 != -1) {
        swift_once();
      }
      uint64_t v50 = off_2696E1378;
LABEL_131:
      uint64_t v69 = (uint64_t)&v50[*(void *)(*(void *)v50 + 152)];
      uint64_t v70 = (uint64_t)&v50[*(void *)(*(void *)v50 + 112)];
      return sub_249A63A60(v50, v69, v70);
    case 0x28:
      if (qword_2696DD588 != -1) {
        swift_once();
      }
      uint64_t v39 = (unsigned char *)qword_2696E1380;
LABEL_137:
      swift_retain();
      uint64_t v71 = v114;
      sub_249AEB998();
      sub_2498D0A3C(&qword_2696E4608, &qword_2696E4598);
      uint64_t v72 = v116;
      uint64_t v55 = sub_249AEBA28();
      (*(void (**)(char *, uint64_t))(v115 + 8))(v71, v72);
      type metadata accessor for InstrumentDataSource();
      swift_allocObject();
      uint64_t v56 = &qword_2696E14A8;
      uint64_t v57 = &unk_26FDB1430;
      uint64_t v58 = sub_249A6A494;
      goto LABEL_160;
    case 0x29:
      if (qword_2696DD590 != -1) {
        swift_once();
      }
      uint64_t v73 = qword_2696E1388;
      swift_retain();
      long long v74 = v103;
      sub_249AEB998();
      sub_2498D0A3C(&qword_2696E4600, &qword_2696E4590);
      uint64_t v75 = v106;
      uint64_t v76 = sub_249AEBA28();
      (*(void (**)(char *, uint64_t))(v105 + 8))(v74, v75);
      type metadata accessor for InstrumentDataSource();
      swift_allocObject();
      uint64_t v77 = sub_249A627DC(v73, v76, 1);
      goto LABEL_198;
    case 0x2A:
      if (qword_2696DD598 != -1) {
        swift_once();
      }
      uint64_t v78 = off_2696E1390;
      uint64_t v79 = (char *)off_2696E1390 + *(void *)(*(void *)off_2696E1390 + 152);
      int64_t v80 = (char *)off_2696E1390 + *(void *)(*(void *)off_2696E1390 + 112);
      return sub_249A64410(v78, (uint64_t)v79, (uint64_t)v80);
    case 0x2B:
      if (qword_2696DD5A0 != -1) {
        swift_once();
      }
      uint64_t v81 = qword_2696E1398;
      char v82 = 0;
      goto LABEL_184;
    case 0x2C:
      if (qword_2696DD5A8 != -1) {
        swift_once();
      }
      uint64_t v60 = qword_2696E13A0;
      goto LABEL_173;
    case 0x2D:
      if (qword_2696DD5B0 != -1) {
        swift_once();
      }
      return sub_249A60450();
    case 0x2E:
      if (qword_2696DD5B8 != -1) {
        swift_once();
      }
      uint64_t v39 = off_2696E13B0;
      long long v83 = (char *)off_2696E13B0 + *(void *)(*(void *)off_2696E13B0 + 152);
      uint64_t v84 = (uint64_t)&v83[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E1440) + 36)];
      swift_retain();
      uint64_t v55 = sub_249A651EC(v84, (uint64_t)v83, 0, 0.05, 30.0);
      type metadata accessor for InstrumentDataSource();
      swift_allocObject();
      uint64_t v56 = &qword_2696DF0E8;
      uint64_t v57 = &unk_26FDB1548;
      uint64_t v58 = sub_249A6A618;
LABEL_160:
      uint64_t v77 = sub_249A624CC(v39, v55, 1, v56, (uint64_t)v57, (uint64_t)v58);
      goto LABEL_198;
    case 0x2F:
      if (qword_2696DD5C0 != -1) {
        swift_once();
      }
      uint64_t v51 = qword_2696E13B8;
      swift_retain();
      double v52 = 200.0;
      double v53 = 5.0;
LABEL_164:
      double v61 = v52;
      int v62 = 1;
LABEL_165:
      uint64_t v85 = sub_249A64D1C(v62, 0.0166666667, v53, v52, 0.0, v61);
      type metadata accessor for InstrumentDataSource();
      swift_allocObject();
      return sub_249A61688(v51, v85, 1);
    case 0x30:
      if (qword_2696DD5D0 != -1) {
        swift_once();
      }
      uint64_t v38 = qword_2696E13C8;
LABEL_169:
      swift_retain();
      uint64_t v86 = v123;
      sub_249AEB998();
      sub_2498D0A3C(&qword_2696E45D0, &qword_2696E45B8);
      uint64_t v87 = v124;
      uint64_t v88 = sub_249AEBA28();
      (*(void (**)(char *, uint64_t))(v125 + 8))(v86, v87);
      type metadata accessor for InstrumentDataSource();
      swift_allocObject();
      uint64_t v77 = sub_249A61688(v38, v88, 1);
      goto LABEL_198;
    case 0x31:
      if (qword_2696DD5C8 != -1) {
        swift_once();
      }
      uint64_t v60 = qword_2696E13C0;
LABEL_173:
      swift_retain();
      uint64_t v89 = v117;
      sub_249AEB998();
      sub_2498D0A3C(&qword_2696E45F8, &qword_2696E45A0);
      uint64_t v90 = v119;
      uint64_t v91 = sub_249AEBA28();
      (*(void (**)(char *, uint64_t))(v118 + 8))(v89, v90);
      type metadata accessor for InstrumentDataSource();
      swift_allocObject();
      uint64_t v77 = sub_249A62FBC(v60, v91, 1);
      goto LABEL_198;
    case 0x32:
      if (qword_2696DD5E0 != -1) {
        swift_once();
      }
      uint64_t v92 = qword_2696E13D8;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1420);
      uint64_t v93 = v107;
      sub_249AEB998();
      sub_2498D0A3C(&qword_2696E45F0, &qword_2696E4588);
      uint64_t v94 = v109;
      uint64_t v95 = sub_249AEBA28();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v93, v94);
      type metadata accessor for InstrumentDataSource();
      swift_allocObject();
      uint64_t v77 = sub_249A61FB0(v92, v95, 1);
      goto LABEL_198;
    case 0x33:
      if (qword_2696DD5D8 != -1) {
        swift_once();
      }
      uint64_t v81 = qword_2696E13D0;
      goto LABEL_183;
    case 0x34:
      if (qword_2696DD528 != -1) {
        swift_once();
      }
      uint64_t v81 = qword_2696E1320;
LABEL_183:
      char v82 = 1;
LABEL_184:
      return sub_249A67C98(v81, v82);
    case 0x35:
      if (qword_2696DD5E8 != -1) {
        swift_once();
      }
      uint64_t v96 = qword_2696E13E0;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1408);
      uint64_t v97 = v110;
      sub_249AEB998();
      sub_2498D0A3C(&qword_2696E45E8, &qword_2696E4580);
      uint64_t v98 = v112;
      uint64_t v99 = sub_249AEBA28();
      (*(void (**)(char *, uint64_t))(v111 + 8))(v97, v98);
      type metadata accessor for InstrumentDataSource();
      swift_allocObject();
      uint64_t v77 = sub_249A61BF8(v96, v99, 1);
      goto LABEL_198;
    case 0x37:
      if (qword_2696DD5F0 != -1) {
        swift_once();
      }
      uint64_t v59 = qword_2696E13E8;
LABEL_193:
      swift_retain();
      sub_249AEB998();
      sub_2498D0A3C(&qword_2696E45E0, &qword_2696E45A8);
      uint64_t v100 = sub_249AEBA28();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v17, v15);
      type metadata accessor for InstrumentDataSource();
      swift_allocObject();
      uint64_t v77 = sub_249A61940(v59, v100, 1);
      goto LABEL_198;
    case 0x38:
      uint64_t v41 = v31;
      if (qword_2696DD538 != -1) {
        swift_once();
      }
      uint64_t v42 = qword_2696E1330;
LABEL_197:
      swift_retain();
      sub_249AEB998();
      sub_2498D0A3C(&qword_2696E45C8, &qword_2696E45C0);
      uint64_t v101 = sub_249AEBA28();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v33, v30);
      type metadata accessor for InstrumentDataSource();
      swift_allocObject();
      uint64_t v77 = sub_249A6357C(v42, v101, 1);
LABEL_198:
      uint64_t v47 = v77;
LABEL_199:
      uint64_t result = v47;
      break;
    default:
      if (qword_2696DD4A0 != -1) {
        swift_once();
      }
      uint64_t v35 = off_2696E1298;
      uint64_t v36 = (char *)off_2696E1298 + *(void *)(*(void *)off_2696E1298 + 152);
      uint64_t v37 = (char *)off_2696E1298 + *(void *)(*(void *)off_2696E1298 + 112);
LABEL_60:
      uint64_t result = sub_249A63F38(v35, (uint64_t)v36, (uint64_t)v37);
      break;
  }
  return result;
}

unint64_t sub_249A6A130()
{
  unint64_t result = qword_2696E4628;
  if (!qword_2696E4628)
  {
    sub_249AED848();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4628);
  }
  return result;
}

uint64_t sub_249A6A188()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_249A6A198(double *a1@<X8>)
{
  sub_249A648E8(a1, *(double *)(v1 + 16), *(double *)(v1 + 24));
}

unint64_t sub_249A6A1A0@<X0>(uint64_t a1@<X8>)
{
  return sub_249A64BC8(v1, a1);
}

uint64_t sub_249A6A1AC()
{
  return sub_249A63834(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_26FDB12F0, &qword_2696E4658, &qword_2696E4660);
}

uint64_t sub_249A6A1FC(uint64_t *a1)
{
  return sub_249A677A8(a1);
}

unint64_t sub_249A6A204@<X0>(uint64_t *a1@<X8>)
{
  return sub_249A64AF8(v1, a1);
}

uint64_t sub_249A6A20C()
{
  if (*(void *)(v0 + 24))
  {
    swift_bridgeObjectRelease();
    sub_249934D7C(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
    int v1 = *(unsigned __int8 *)(v0 + 88);
    if (v1 != 255) {
      sub_249934DE4(*(void *)(v0 + 72), *(void *)(v0 + 80), v1);
    }
    if (*(void *)(v0 + 104))
    {
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 136, 7);
}

uint64_t sub_249A6A288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_2499ACFC4(a3, a4, a5, a6, a7);
    sub_249A28280(a8, a9, a10);
    sub_249A28294(a11, a12);
    return swift_retain();
  }
  return result;
}

uint64_t sub_249A6A35C()
{
  return sub_249A63834(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_26FDB1368, &qword_2696E4678, &qword_2696E4680);
}

uint64_t sub_249A6A3A4(uint64_t *a1)
{
  return sub_249A67558(a1);
}

uint64_t sub_249A6A3B0()
{
  return sub_249A63834(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_26FDB13B8, &qword_2696E4688, &qword_2696E4690);
}

uint64_t sub_249A6A3F8(uint64_t a1)
{
  return sub_249A63968(a1, *(void *)(v1 + 16), &qword_2696E1478);
}

uint64_t sub_249A6A41C()
{
  return objectdestroy_27Tm(&qword_2696E1478, &qword_2696E1470);
}

uint64_t sub_249A6A430(uint64_t a1, uint64_t a2)
{
  return sub_249A6A830(a1, a2, &qword_2696E1478, &qword_2696E1470, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, __n128))sub_249A66780);
}

uint64_t sub_249A6A458()
{
  return objectdestroy_30Tm(&qword_2696E14C0, &qword_2696E14A8);
}

uint64_t sub_249A6A46C(uint64_t a1)
{
  return sub_249A6AE5C(a1, &qword_2696E14C0, &qword_2696E14A8, &qword_2696E14B0);
}

uint64_t sub_249A6A494()
{
  return sub_249A63834(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_26FDB1458, &qword_2696E46D0, &qword_2696E46D8);
}

uint64_t sub_249A6A4DC(uint64_t a1)
{
  return sub_249A63968(a1, *(void *)(v1 + 16), &qword_2696E14A8);
}

uint64_t sub_249A6A504()
{
  return sub_249A63834(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_26FDB14A8, &qword_2696E46E0, &qword_2696E46E8);
}

uint64_t sub_249A6A54C(uint64_t *a1)
{
  return sub_249A6748C(a1);
}

uint64_t sub_249A6A554()
{
  return objectdestroy_30Tm(&qword_2696E1470, &qword_2696E1478);
}

uint64_t sub_249A6A568(uint64_t a1)
{
  return sub_249A6AE5C(a1, &qword_2696E1470, &qword_2696E1478, &qword_2696E1480);
}

unint64_t sub_249A6A58C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_249A64A8C(a1, v2);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_249A6A5C4()
{
  return sub_249A63834(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_26FDB1520, &qword_2696E4710, &qword_2696E4718);
}

uint64_t sub_249A6A60C(char *a1)
{
  return sub_249A66F7C(a1);
}

uint64_t sub_249A6A618()
{
  return sub_249A63834(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_26FDB1570, &qword_2696E4720, &qword_2696E4728);
}

uint64_t sub_249A6A660(uint64_t a1)
{
  return sub_249A63968(a1, *(void *)(v1 + 16), &qword_2696DF0E8);
}

uint64_t sub_249A6A684()
{
  return objectdestroy_27Tm(&qword_2696DF0E8, &qword_2696E1440);
}

uint64_t objectdestroy_27Tm(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v6 + 16) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = (int *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)v9 + 80);
  uint64_t v11 = (v7 + v8 + v10) & ~v10;
  uint64_t v12 = v6 | v10 | 7;
  unint64_t v13 = ((*(void *)(*(void *)v9 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v14(v2 + v7, v4);
  v14(v2 + v11, v4);
  v14(v2 + v11 + v9[11], v4);

  return MEMORY[0x270FA0238](v2, v13, v12);
}

uint64_t sub_249A6A808(uint64_t a1, uint64_t a2)
{
  return sub_249A6A830(a1, a2, &qword_2696DF0E8, &qword_2696E1440, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, __n128))sub_249A660B4);
}

uint64_t sub_249A6A830(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t (*a5)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, __n128))
{
  uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a4) - 8);
  unint64_t v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v14 = (*(void *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15.n128_u64[0] = *(void *)(v5 + v14);
  uint64_t v16 = *(unsigned __int8 *)(v5 + v14 + 8);

  return a5(a1, a2, v5 + v10, v5 + v13, v16, v15);
}

uint64_t sub_249A6A970()
{
  return MEMORY[0x270FA0238](v0, 49, 7);
}

uint64_t sub_249A6A980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249A65164(a1, *(unsigned char *)(v2 + 48), a2, *(double *)(v2 + 16), *(double *)(v2 + 24), *(double *)(v2 + 40));
}

uint64_t sub_249A6A994()
{
  return sub_249A63834(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_26FDB1610, &qword_2696E4780, &qword_2696E4788);
}

uint64_t sub_249A6A9DC(__int16 *a1)
{
  return sub_249A676EC(a1);
}

uint64_t sub_249A6A9E4()
{
  if (v0[3])
  {
    swift_bridgeObjectRelease();
    if (v0[5]) {
      swift_release();
    }
    sub_2498A58D4(v0[7], v0[8], v0[9], v0[10], v0[11], v0[12], v0[13]);
  }

  return MEMORY[0x270FA0238](v0, 129, 7);
}

void sub_249A6AA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_2498B9AA8(a4);
    sub_2498A48A4(a6, a7, a8, a9, a10, a11, a12);
  }
}

uint64_t sub_249A6AB10()
{
  return sub_249A63834(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_26FDB1688, &qword_2696E4790, &qword_2696E4798);
}

uint64_t sub_249A6AB58(uint64_t a1)
{
  return sub_249A672F8(a1);
}

uint64_t sub_249A6AB60()
{
  if (*(void *)(v0 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 56)) {
      swift_release();
    }
  }

  return MEMORY[0x270FA0238](v0, 72, 7);
}

void sub_249A6ABB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2498B9AA8(a6);
  }
}

uint64_t sub_249A6AC18()
{
  return sub_249A63834(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_26FDB1700, &qword_2696E47A0, &qword_2696E47A8);
}

uint64_t sub_249A6AC60(uint64_t *a1)
{
  return sub_249A671B8(a1);
}

unint64_t sub_249A6AC68@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_249A64C54(a1, v2);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_249A6AC98()
{
  return sub_249A63834(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_26FDB1750, &qword_2696E47C0, &qword_2696E47C8);
}

uint64_t sub_249A6ACE0(char *a1)
{
  return sub_249A670FC(a1);
}

uint64_t sub_249A6ACE8()
{
  return objectdestroy_30Tm(&qword_2696E1530, &qword_2696DFF08);
}

uint64_t objectdestroy_30Tm(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = (int *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)v4 + 80);
  uint64_t v6 = (v5 + 16) & ~v5;
  uint64_t v7 = v6 + *(void *)(*(void *)v4 + 64);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = (v7 + v11) & ~v11;
  uint64_t v13 = v12 + *(void *)(v9 + 64);
  uint64_t v14 = v5 | v11 | 7;
  uint64_t v15 = v2 + v6;
  v10(v15, v8);
  v10(v15 + v4[11], v8);
  v10(v2 + v12, v8);

  return MEMORY[0x270FA0238](v2, v13, v14);
}

uint64_t sub_249A6AE38(uint64_t a1)
{
  return sub_249A6AE5C(a1, &qword_2696E1530, &qword_2696DFF08, (unint64_t *)&qword_2696DFF10);
}

uint64_t sub_249A6AE5C(uint64_t a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  return sub_249A6496C(a1, v4 + v10, v4 + ((v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), a3, a2, a4);
}

uint64_t sub_249A6AF68()
{
  return sub_249A63834(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_26FDB17C8, &qword_2696E47E0, &qword_2696E47E8);
}

uint64_t sub_249A6AFB0()
{
  swift_unownedRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_249A6AFE8(uint64_t a1)
{
  return sub_249A63968(a1, *(void *)(v1 + 16), &qword_2696DFF08);
}

unint64_t sub_249A6B00C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_249A64CBC(a1, v2);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v5 & 1;
  return result;
}

uint64_t sub_249A6B044()
{
  return sub_249A63834(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_26FDB1818, &qword_2696E4800, &qword_2696E4808);
}

uint64_t sub_249A6B08C(uint64_t *a1)
{
  return sub_249A67038(a1);
}

uint64_t objectdestroy_2Tm_0()
{
  swift_release();
  swift_unownedRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_249A6B0D8()
{
  return sub_249A63834(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_26FDB1868, &qword_2696E4820, &qword_2696E4828);
}

uint64_t sub_249A6B120(uint64_t *a1)
{
  return sub_249A67898(a1);
}

uint64_t static BackgroundConfiguration.defaultState.getter()
{
  return 0;
}

float BackgroundConfiguration.BlurConfiguration.radius.getter()
{
  return *(float *)v0;
}

float BackgroundConfiguration.BlurConfiguration.opacity.getter()
{
  return *(float *)(v0 + 4);
}

void BackgroundConfiguration.BlurConfiguration.opacity.setter(float a1)
{
  *(float *)(v1 + 4) = a1;
}

uint64_t (*BackgroundConfiguration.BlurConfiguration.opacity.modify())()
{
  return nullsub_1;
}

void BackgroundConfiguration.BlurConfiguration.init(radius:opacity:)(float *a1@<X8>, float a2@<S0>, float a3@<S1>)
{
  *a1 = a2;
  a1[1] = a3;
}

double static BackgroundConfiguration.BlurConfiguration.default.getter@<D0>(void *a1@<X8>)
{
  swift_beginAccess();
  double result = *(double *)&qword_2696E4830;
  *a1 = qword_2696E4830;
  return result;
}

double static BackgroundConfiguration.BlurConfiguration.default.setter(double *a1)
{
  swift_beginAccess();
  double result = *a1;
  qword_2696E4830 = *(void *)a1;
  return result;
}

uint64_t (*static BackgroundConfiguration.BlurConfiguration.default.modify())()
{
  return j__swift_endAccess;
}

uint64_t BackgroundConfiguration.BlurConfiguration.hash(into:)()
{
  return sub_249AEE368();
}

BOOL static BackgroundConfiguration.BlurConfiguration.== infix(_:_:)(float *a1, float *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_249A6B308()
{
  if (*v0) {
    return 0x7974696361706FLL;
  }
  else {
    return 0x737569646172;
  }
}

uint64_t sub_249A6B340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A6EE70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A6B368(uint64_t a1)
{
  unint64_t v2 = sub_249A6B55C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A6B3A4(uint64_t a1)
{
  unint64_t v2 = sub_249A6B55C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BackgroundConfiguration.BlurConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4838);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v8 = *(_DWORD *)(v1 + 4);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A6B55C();
  sub_249AEE468();
  char v12 = 0;
  sub_249AEDED8();
  if (!v2)
  {
    int v11 = v8;
    v10[7] = 1;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_249A6B55C()
{
  unint64_t result = qword_2696E4840;
  if (!qword_2696E4840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4840);
  }
  return result;
}

uint64_t BackgroundConfiguration.BlurConfiguration.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t BackgroundConfiguration.BlurConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4848);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A6B55C();
  sub_249AEE428();
  if (!v2)
  {
    char v17 = 0;
    sub_249AEDDD8();
    int v10 = v9;
    char v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3860);
    sub_249A11704();
    sub_249AEDDA8();
    if (v15) {
      float v12 = 0.0;
    }
    else {
      float v12 = v14;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_DWORD *)a2 = v10;
    *(float *)(a2 + 4) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_249A6B7EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BackgroundConfiguration.BlurConfiguration.init(from:)(a1, a2);
}

uint64_t sub_249A6B804(void *a1)
{
  return BackgroundConfiguration.BlurConfiguration.encode(to:)(a1);
}

uint64_t sub_249A6B820()
{
  return sub_249AEE368();
}

uint64_t sub_249A6B868()
{
  return sub_249AEE388();
}

BOOL sub_249A6B8C8(float *a1, float *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

CarPlayAssetUI::BackgroundConfiguration::RadialBackgroundType_optional __swiftcall BackgroundConfiguration.RadialBackgroundType.init(rawValue:)(Swift::Int rawValue)
{
  unsigned int v2 = 0x2010003u >> (8 * rawValue);
  if ((unint64_t)rawValue >= 4) {
    LOBYTE(v2) = 3;
  }
  *uint64_t v1 = v2;
  return (CarPlayAssetUI::BackgroundConfiguration::RadialBackgroundType_optional)rawValue;
}

uint64_t BackgroundConfiguration.RadialBackgroundType.rawValue.getter()
{
  return *v0 + 1;
}

CarPlayAssetUI::BackgroundConfiguration::RadialBackgroundType_optional sub_249A6B924(Swift::Int *a1)
{
  return BackgroundConfiguration.RadialBackgroundType.init(rawValue:)(*a1);
}

uint64_t sub_249A6B92C()
{
  return sub_249AED3B8();
}

uint64_t sub_249A6B98C()
{
  return sub_249AED358();
}

uint64_t BackgroundConfiguration.Style.hash(into:)()
{
  if (((*(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(__int16 *)(v0 + 52) << 32)) & 0x8000000000000000) != 0)
  {
    sub_249AEE348();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    return sub_249AEE358();
  }
  else
  {
    sub_249AEE348();
    sub_249AEE378();
    sub_249AEE378();
    sub_249AEE358();
    sub_2498ACC00();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE348();
    return sub_249AEE348();
  }
}

uint64_t sub_249A6BB34()
{
  if (*v0) {
    return 0x7261656E696CLL;
  }
  else {
    return 0x6C6169646172;
  }
}

uint64_t sub_249A6BB60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A6EF5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A6BB88(uint64_t a1)
{
  unint64_t v2 = sub_249A6DCDC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A6BBC4(uint64_t a1)
{
  unint64_t v2 = sub_249A6DCDC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_249A6BC00(uint64_t a1)
{
  unint64_t v2 = sub_249A6DD30();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A6BC3C(uint64_t a1)
{
  unint64_t v2 = sub_249A6DD30();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_249A6BC78()
{
  if (*v0) {
    return 1701869940;
  }
  else {
    return 0x72756769666E6F63;
  }
}

uint64_t sub_249A6BCB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A6F040(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A6BCE0(uint64_t a1)
{
  unint64_t v2 = sub_249A6DDD8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A6BD1C(uint64_t a1)
{
  unint64_t v2 = sub_249A6DDD8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BackgroundConfiguration.Style.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4850);
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v28 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4858);
  uint64_t v31 = *(void *)(v5 - 8);
  uint64_t v32 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4860);
  uint64_t v36 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  MEMORY[0x270FA5388](v8);
  int v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v1 + 8);
  uint64_t v12 = *(void *)(v1 + 16);
  unint64_t v33 = *(void *)v1;
  uint64_t v34 = v12;
  uint64_t v13 = *(void *)(v1 + 24);
  uint64_t v14 = *(void *)(v1 + 32);
  uint64_t v15 = *(void *)(v1 + 40);
  unint64_t v16 = *(unsigned int *)(v1 + 48) | (unint64_t)((uint64_t)*(__int16 *)(v1 + 52) << 32);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A6DCDC();
  uint64_t v38 = v10;
  sub_249AEE468();
  if ((v16 & 0x8000000000000000) != 0)
  {
    unsigned int v21 = v33;
    unint64_t v22 = HIDWORD(v33);
    LOBYTE(v39) = 1;
    sub_249A6DD30();
    uint64_t v23 = v28;
    uint64_t v24 = v37;
    uint64_t v25 = v38;
    sub_249AEDE48();
    unint64_t v39 = __PAIR64__(v22, v21);
    uint64_t v40 = v11;
    char v41 = v34 & 1;
    sub_249A6DD84();
    uint64_t v26 = v30;
    sub_249AEDF08();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v26);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v25, v24);
  }
  else
  {
    LOBYTE(v39) = 0;
    sub_249A6DDD8();
    uint64_t v17 = v37;
    sub_249AEDE48();
    unint64_t v39 = v33;
    uint64_t v40 = v11;
    char v41 = v34 & 1;
    uint64_t v42 = v13;
    uint64_t v43 = v14;
    uint64_t v44 = v15;
    int v45 = v16;
    char v46 = BYTE4(v16);
    char v47 = 0;
    sub_249A6DE2C();
    uint64_t v18 = v32;
    uint64_t v19 = v35;
    sub_249AEDF08();
    if (!v19)
    {
      LOBYTE(v39) = BYTE5(v16);
      char v47 = 1;
      sub_249A6DE80();
      sub_249AEDF08();
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v38, v17);
  }
}

uint64_t BackgroundConfiguration.Style.hashValue.getter()
{
  unint64_t v1 = *(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(__int16 *)(v0 + 52) << 32);
  sub_249AEE338();
  sub_249AEE348();
  if ((v1 & 0x8000000000000000) != 0)
  {
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE358();
  }
  else
  {
    sub_249AEE378();
    sub_249AEE378();
    sub_249AEE358();
    sub_2498ACC00();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE348();
    sub_249AEE348();
  }
  return sub_249AEE388();
}

uint64_t BackgroundConfiguration.Style.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v32 = a2;
  *(void *)&long long v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4898);
  *(void *)&long long v33 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E48A0);
  uint64_t v34 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E48A8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v36 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v12);
  sub_249A6DCDC();
  uint64_t v13 = v37;
  sub_249AEE428();
  if (v13) {
    goto LABEL_7;
  }
  uint64_t v14 = v35;
  uint64_t v37 = v9;
  uint64_t v15 = sub_249AEDE18();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v22 = sub_249AEDB08();
    swift_allocError();
    uint64_t v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBD0);
    *uint64_t v24 = &type metadata for BackgroundConfiguration.Style;
    sub_249AEDD48();
    sub_249AEDAE8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *MEMORY[0x263F8DCB0], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v8);
LABEL_7:
    uint64_t v21 = (uint64_t)v36;
    return __swift_destroy_boxed_opaque_existential_2Tm(v21);
  }
  if (*(unsigned char *)(v15 + 32))
  {
    LOBYTE(v38) = 1;
    sub_249A6DD30();
    sub_249AEDD38();
    sub_249A6DED4();
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v4, v14);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v8);
    uint64_t v16 = 0;
    long long v17 = v38;
    unsigned int v18 = v39;
    long long v19 = 0uLL;
    unint64_t v20 = 0x800000000000;
    uint64_t v21 = (uint64_t)v36;
  }
  else
  {
    LOBYTE(v38) = 0;
    sub_249A6DDD8();
    sub_249AEDD38();
    unsigned __int8 v45 = 0;
    sub_249A6DF28();
    sub_249AEDE08();
    long long v35 = v38;
    uint64_t v26 = v7;
    uint64_t v27 = v8;
    unsigned int v18 = v39;
    long long v33 = v40;
    uint64_t v16 = v41;
    uint64_t v31 = v42;
    uint64_t v30 = v43;
    char v44 = 1;
    sub_249A6DF7C();
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v27);
    unint64_t v20 = v31 | (v30 << 32) | ((unint64_t)v45 << 40);
    uint64_t v21 = (uint64_t)v36;
    long long v17 = v35;
    long long v19 = v33;
  }
  uint64_t v28 = v32;
  *uint64_t v32 = v17;
  *((void *)v28 + 2) = v18;
  *(_OWORD *)((char *)v28 + 24) = v19;
  *((void *)v28 + 5) = v16;
  *((_DWORD *)v28 + 12) = v20;
  *((_WORD *)v28 + 26) = WORD2(v20);
  return __swift_destroy_boxed_opaque_existential_2Tm(v21);
}

uint64_t sub_249A6C848@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return BackgroundConfiguration.Style.init(from:)(a1, a2);
}

uint64_t sub_249A6C860(void *a1)
{
  return BackgroundConfiguration.Style.encode(to:)(a1);
}

uint64_t sub_249A6C880()
{
  unint64_t v1 = *(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(__int16 *)(v0 + 52) << 32);
  sub_249AEE338();
  sub_249AEE348();
  if ((v1 & 0x8000000000000000) != 0)
  {
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE358();
  }
  else
  {
    sub_249AEE378();
    sub_249AEE378();
    sub_249AEE358();
    sub_2498ACC00();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE348();
    sub_249AEE348();
  }
  return sub_249AEE388();
}

__n128 BackgroundConfiguration.style.getter@<Q0>(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 48);
  __int16 v3 = *(_WORD *)(v1 + 52);
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  __n128 result = *(__n128 *)(v1 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(_WORD *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 48) = v2;
  return result;
}

void BackgroundConfiguration.blurConfiguration.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 64);
  *(void *)a1 = *(void *)(v1 + 56);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t BackgroundConfiguration.colorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 BackgroundConfiguration.init(style:blurConfiguration:colorIDs:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a1 + 48);
  __int16 v5 = *(_WORD *)(a1 + 52);
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v8;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a4 + 32) = result;
  *(_WORD *)(a4 + 52) = v5;
  *(_DWORD *)(a4 + 48) = v4;
  *(void *)(a4 + 56) = v6;
  *(unsigned char *)(a4 + 64) = v7;
  *(void *)(a4 + 72) = a3;
  return result;
}

uint64_t BackgroundConfiguration.assets.getter()
{
  return MEMORY[0x263F8EE78];
}

uint64_t BackgroundConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  int v4 = *(unsigned __int8 *)(v2 + 64);
  uint64_t v5 = *(void *)(v2 + 72);
  if (((*(unsigned int *)(v2 + 48) | (unint64_t)((uint64_t)*(__int16 *)(v2 + 52) << 32)) & 0x8000000000000000) == 0)
  {
    sub_249AEE348();
    sub_249AEE378();
    sub_249AEE378();
    sub_249AEE358();
    sub_2498ACC00();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE348();
    sub_249AEE348();
    if (v4) {
      goto LABEL_3;
    }
LABEL_8:
    sub_249AEE358();
    sub_249AEE368();
    sub_249AEE368();
    if (v5) {
      goto LABEL_4;
    }
    return sub_249AEE358();
  }
  sub_249AEE348();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE358();
  if (!v4) {
    goto LABEL_8;
  }
LABEL_3:
  sub_249AEE358();
  if (!v5) {
    return sub_249AEE358();
  }
LABEL_4:
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_249A6CCCC()
{
  unint64_t v1 = 0xD000000000000011;
  if (*v0 != 1) {
    unint64_t v1 = 0x734449726F6C6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656C797473;
  }
}

uint64_t sub_249A6CD28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A6F148(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A6CD50(uint64_t a1)
{
  unint64_t v2 = sub_249A6DFD0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A6CD8C(uint64_t a1)
{
  unint64_t v2 = sub_249A6DFD0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BackgroundConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E48C8);
  uint64_t v23 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v5 = *v1;
  long long v20 = v1[1];
  long long v21 = v5;
  uint64_t v7 = *((void *)v1 + 4);
  uint64_t v6 = *((void *)v1 + 5);
  int v8 = *((_DWORD *)v1 + 12);
  __int16 v9 = *((_WORD *)v1 + 26);
  uint64_t v10 = *((void *)v1 + 7);
  int v30 = *((unsigned __int8 *)v1 + 64);
  uint64_t v18 = *((void *)v1 + 9);
  uint64_t v19 = v10;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1;
  uint64_t v13 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(v12, v11);
  sub_249A6DFD0();
  sub_249AEE468();
  long long v24 = v21;
  long long v25 = v20;
  uint64_t v26 = v7;
  uint64_t v27 = v6;
  __int16 v29 = v9;
  int v28 = v8;
  char v31 = 0;
  sub_249A6E024();
  uint64_t v14 = v22;
  sub_249AEDF08();
  if (v14) {
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v13, v3);
  }
  uint64_t v16 = v18;
  uint64_t v17 = v23;
  *(void *)&long long v24 = v19;
  BYTE8(v24) = v30;
  char v31 = 1;
  sub_249A6E078();
  sub_249AEDEA8();
  *(void *)&long long v24 = v16;
  char v31 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00D8);
  sub_24994507C((unint64_t *)&qword_2696E00E0, (void (*)(void))sub_24988E104);
  sub_249AEDEA8();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v13, v3);
}

uint64_t BackgroundConfiguration.hashValue.getter()
{
  unint64_t v1 = *(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(__int16 *)(v0 + 52) << 32);
  int v2 = *(unsigned __int8 *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  sub_249AEE338();
  if ((v1 & 0x8000000000000000) == 0)
  {
    sub_249AEE348();
    sub_249AEE378();
    sub_249AEE378();
    sub_249AEE358();
    sub_2498ACC00();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE348();
    sub_249AEE348();
    if (v2) {
      goto LABEL_3;
    }
LABEL_6:
    sub_249AEE358();
    sub_249AEE368();
    sub_249AEE368();
    if (v3) {
      goto LABEL_4;
    }
LABEL_7:
    sub_249AEE358();
    return sub_249AEE388();
  }
  sub_249AEE348();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE358();
  if (!v2) {
    goto LABEL_6;
  }
LABEL_3:
  sub_249AEE358();
  if (!v3) {
    goto LABEL_7;
  }
LABEL_4:
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_24988A2D4((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_249AEE388();
}

uint64_t BackgroundConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E48E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A6DFD0();
  sub_249AEE428();
  if (!v2)
  {
    char v35 = 0;
    sub_249A6E0CC();
    sub_249AEDE08();
    uint64_t v25 = v28;
    uint64_t v26 = v27;
    uint64_t v23 = v30;
    uint64_t v24 = v29;
    uint64_t v21 = v32;
    uint64_t v22 = v31;
    uint64_t v9 = v34;
    uint64_t v10 = v33;
    char v35 = 1;
    sub_249A6E120();
    sub_249AEDDA8();
    uint64_t v19 = v10;
    uint64_t v20 = v9;
    uint64_t v12 = v27;
    LOBYTE(v10) = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00D8);
    char v35 = 2;
    sub_24994507C((unint64_t *)&qword_2696E00F8, (void (*)(void))sub_24988E268);
    sub_249AEDDA8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = v19 | (v20 << 32);
    uint64_t v14 = v27;
    uint64_t v15 = v25;
    *(void *)a2 = v26;
    *(void *)(a2 + 8) = v15;
    uint64_t v16 = v23;
    *(void *)(a2 + 16) = v24;
    *(void *)(a2 + 24) = v16;
    uint64_t v17 = v21;
    *(void *)(a2 + 32) = v22;
    *(void *)(a2 + 40) = v17;
    *(_DWORD *)(a2 + 48) = v13;
    *(_WORD *)(a2 + 52) = WORD2(v13);
    *(void *)(a2 + 56) = v12;
    *(unsigned char *)(a2 + 64) = v10;
    *(void *)(a2 + 72) = v14;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_249A6D55C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BackgroundConfiguration.init(from:)(a1, a2);
}

uint64_t sub_249A6D574(void *a1)
{
  return BackgroundConfiguration.encode(to:)(a1);
}

uint64_t sub_249A6D590(uint64_t a1)
{
  uint64_t v2 = v1;
  int v4 = *(unsigned __int8 *)(v2 + 64);
  uint64_t v5 = *(void *)(v2 + 72);
  if (((*(unsigned int *)(v2 + 48) | (unint64_t)((uint64_t)*(__int16 *)(v2 + 52) << 32)) & 0x8000000000000000) == 0)
  {
    sub_249AEE348();
    sub_249AEE378();
    sub_249AEE378();
    sub_249AEE358();
    sub_2498ACC00();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE348();
    sub_249AEE348();
    if (v4) {
      goto LABEL_3;
    }
LABEL_8:
    sub_249AEE358();
    sub_249AEE368();
    sub_249AEE368();
    if (v5) {
      goto LABEL_4;
    }
    return sub_249AEE358();
  }
  sub_249AEE348();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE358();
  if (!v4) {
    goto LABEL_8;
  }
LABEL_3:
  sub_249AEE358();
  if (!v5) {
    return sub_249AEE358();
  }
LABEL_4:
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_249A6D7AC()
{
  unint64_t v1 = *(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(__int16 *)(v0 + 52) << 32);
  int v2 = *(unsigned __int8 *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  sub_249AEE338();
  if ((v1 & 0x8000000000000000) == 0)
  {
    sub_249AEE348();
    sub_249AEE378();
    sub_249AEE378();
    sub_249AEE358();
    sub_2498ACC00();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE348();
    sub_249AEE348();
    if (v2) {
      goto LABEL_3;
    }
LABEL_6:
    sub_249AEE358();
    sub_249AEE368();
    sub_249AEE368();
    if (v3) {
      goto LABEL_4;
    }
LABEL_7:
    sub_249AEE358();
    return sub_249AEE388();
  }
  sub_249AEE348();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE358();
  if (!v2) {
    goto LABEL_6;
  }
LABEL_3:
  sub_249AEE358();
  if (!v3) {
    goto LABEL_7;
  }
LABEL_4:
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_24988A2D4((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_249AEE388();
}

BOOL _s14CarPlayAssetUI23BackgroundConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  unint64_t v4 = *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned __int16 *)(a1 + 52) << 32);
  float v6 = *(float *)(a1 + 56);
  float v5 = *(float *)(a1 + 60);
  char v7 = *(unsigned char *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v10 = *(void *)a2;
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v11 = *(void *)(a2 + 16);
  unint64_t v12 = *(unsigned int *)(a2 + 48) | ((unint64_t)*(unsigned __int16 *)(a2 + 52) << 32);
  uint64_t v13 = *(void *)(a2 + 56);
  char v14 = *(unsigned char *)(a2 + 64);
  uint64_t v15 = *(void *)(a2 + 72);
  if ((v4 & 0x800000000000) != 0)
  {
    if ((v12 & 0x800000000000) == 0) {
      return 0;
    }
    v30.i64[0] = *(void *)a1;
    v30.i64[1] = v2;
    char v31 = v3 & 1;
    v24.i64[0] = v10;
    v24.i64[1] = v9;
    char v25 = v11 & 1;
    if ((_s14CarPlayAssetUI18DigiBarLinearStyleV2eeoiySbAC_ACtFZ_0(&v30, &v24) & 1) == 0) {
      return 0;
    }
    goto LABEL_8;
  }
  if ((v12 & 0x800000000000) != 0) {
    return 0;
  }
  long long v16 = *(_OWORD *)(a2 + 24);
  uint64_t v17 = *(void *)(a2 + 40);
  uint64_t v18 = *(void *)(a1 + 40);
  v30.i64[0] = *(void *)a1;
  v30.i64[1] = v2;
  char v31 = v3 & 1;
  long long v32 = *(_OWORD *)(a1 + 24);
  uint64_t v33 = v18;
  int v34 = v4;
  char v35 = BYTE4(v4);
  v24.i64[0] = v10;
  v24.i64[1] = v9;
  char v25 = v11 & 1;
  long long v26 = v16;
  uint64_t v27 = v17;
  int v28 = v12;
  char v29 = BYTE4(v12);
  BOOL v19 = _s14CarPlayAssetUI18DigiBarRadialStyleV2eeoiySbAC_ACtFZ_0((uint64_t)&v30, (uint64_t)&v24);
  BOOL result = 0;
  if (v19 && !((v12 ^ v4) >> 40))
  {
LABEL_8:
    if (v7)
    {
      if ((v14 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (v6 == *(float *)&v13) {
        char v21 = v14;
      }
      else {
        char v21 = 1;
      }
      if ((v21 & 1) != 0 || v5 != *((float *)&v13 + 1)) {
        return 0;
      }
    }
    if (v8)
    {
      if (!v15) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v22 = swift_bridgeObjectRetain();
      char v23 = sub_2499FEF30(v22, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (v23 & 1) != 0;
    }
    return !v15;
  }
  return result;
}

uint64_t _s14CarPlayAssetUI23BackgroundConfigurationV5StyleO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  unint64_t v4 = *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned __int16 *)(a1 + 52) << 32);
  uint64_t v6 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  unint64_t v8 = *(unsigned int *)(a2 + 48) | ((unint64_t)*(unsigned __int16 *)(a2 + 52) << 32);
  if ((v4 & 0x800000000000) != 0)
  {
    if ((v8 & 0x800000000000) != 0)
    {
      v20.i64[0] = *(void *)a1;
      v20.i64[1] = v2;
      char v21 = v3 & 1;
      v14.i64[0] = v6;
      v14.i64[1] = v5;
      char v15 = v7 & 1;
      char v12 = _s14CarPlayAssetUI18DigiBarLinearStyleV2eeoiySbAC_ACtFZ_0(&v20, &v14);
      return v12 & 1;
    }
    goto LABEL_6;
  }
  if ((v8 & 0x800000000000) != 0) {
    goto LABEL_6;
  }
  long long v9 = *(_OWORD *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a1 + 40);
  v20.i64[0] = *(void *)a1;
  v20.i64[1] = v2;
  char v21 = v3 & 1;
  long long v22 = *(_OWORD *)(a1 + 24);
  uint64_t v23 = v11;
  int v24 = v4;
  char v25 = BYTE4(v4);
  v14.i64[0] = v6;
  v14.i64[1] = v5;
  char v15 = v7 & 1;
  long long v16 = v9;
  uint64_t v17 = v10;
  int v18 = v8;
  char v19 = BYTE4(v8);
  if (!_s14CarPlayAssetUI18DigiBarRadialStyleV2eeoiySbAC_ACtFZ_0((uint64_t)&v20, (uint64_t)&v14))
  {
LABEL_6:
    char v12 = 0;
    return v12 & 1;
  }
  char v12 = (v8 ^ v4) >> 40 == 0;
  return v12 & 1;
}

unint64_t sub_249A6DCDC()
{
  unint64_t result = qword_2696E4868;
  if (!qword_2696E4868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4868);
  }
  return result;
}

unint64_t sub_249A6DD30()
{
  unint64_t result = qword_2696E4870;
  if (!qword_2696E4870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4870);
  }
  return result;
}

unint64_t sub_249A6DD84()
{
  unint64_t result = qword_2696E4878;
  if (!qword_2696E4878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4878);
  }
  return result;
}

unint64_t sub_249A6DDD8()
{
  unint64_t result = qword_2696E4880;
  if (!qword_2696E4880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4880);
  }
  return result;
}

unint64_t sub_249A6DE2C()
{
  unint64_t result = qword_2696E4888;
  if (!qword_2696E4888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4888);
  }
  return result;
}

unint64_t sub_249A6DE80()
{
  unint64_t result = qword_2696E4890;
  if (!qword_2696E4890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4890);
  }
  return result;
}

unint64_t sub_249A6DED4()
{
  unint64_t result = qword_2696E48B0;
  if (!qword_2696E48B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E48B0);
  }
  return result;
}

unint64_t sub_249A6DF28()
{
  unint64_t result = qword_2696E48B8;
  if (!qword_2696E48B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E48B8);
  }
  return result;
}

unint64_t sub_249A6DF7C()
{
  unint64_t result = qword_2696E48C0;
  if (!qword_2696E48C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E48C0);
  }
  return result;
}

unint64_t sub_249A6DFD0()
{
  unint64_t result = qword_2696E48D0;
  if (!qword_2696E48D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E48D0);
  }
  return result;
}

unint64_t sub_249A6E024()
{
  unint64_t result = qword_2696E48D8;
  if (!qword_2696E48D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E48D8);
  }
  return result;
}

unint64_t sub_249A6E078()
{
  unint64_t result = qword_2696E48E0;
  if (!qword_2696E48E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E48E0);
  }
  return result;
}

unint64_t sub_249A6E0CC()
{
  unint64_t result = qword_2696E48F0;
  if (!qword_2696E48F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E48F0);
  }
  return result;
}

unint64_t sub_249A6E120()
{
  unint64_t result = qword_2696E48F8;
  if (!qword_2696E48F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E48F8);
  }
  return result;
}

unint64_t sub_249A6E178()
{
  unint64_t result = qword_2696E4900;
  if (!qword_2696E4900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4900);
  }
  return result;
}

unint64_t sub_249A6E1D0()
{
  unint64_t result = qword_2696E4908;
  if (!qword_2696E4908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4908);
  }
  return result;
}

unint64_t sub_249A6E228()
{
  unint64_t result = qword_2696E4910;
  if (!qword_2696E4910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4910);
  }
  return result;
}

unint64_t sub_249A6E280()
{
  unint64_t result = qword_2696E4918;
  if (!qword_2696E4918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4918);
  }
  return result;
}

float sub_249A6E2D4@<S0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  float result = *(float *)(a1 + 4);
  *a2 = result;
  return result;
}

float sub_249A6E2E0(float *a1, uint64_t a2)
{
  float result = *a1;
  *(float *)(a2 + 4) = *a1;
  return result;
}

uint64_t destroy for BackgroundConfiguration()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BackgroundConfiguration(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 46) = *(void *)(a2 + 46);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BackgroundConfiguration(uint64_t a1, long long *a2)
{
  long long v3 = *a2;
  long long v4 = a2[1];
  long long v5 = a2[2];
  *(void *)(a1 + 46) = *(void *)((char *)a2 + 46);
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)a1 = v3;
  uint64_t v6 = *((void *)a2 + 7);
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for BackgroundConfiguration(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 46) = *(void *)(a2 + 46);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BackgroundConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 16) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for BackgroundConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 2 * -a2;
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = 0;
      *(void *)(result + 40) = 0;
      *(void *)(result + 46) = 0;
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundConfiguration()
{
  return &type metadata for BackgroundConfiguration;
}

ValueMetadata *type metadata accessor for BackgroundConfiguration.BlurConfiguration()
{
  return &type metadata for BackgroundConfiguration.BlurConfiguration;
}

ValueMetadata *type metadata accessor for BackgroundConfiguration.RadialBackgroundType()
{
  return &type metadata for BackgroundConfiguration.RadialBackgroundType;
}

__n128 __swift_memcpy54_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 46) = *(void *)(a2 + 46);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for BackgroundConfiguration.Style(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 54)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 16) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for BackgroundConfiguration.Style(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 54) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 2 * -a2;
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = 0;
      *(void *)(result + 40) = 0;
      *(void *)(result + 46) = 0;
      return result;
    }
    *(unsigned char *)(result + 54) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_249A6E5E0(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 52) >> 15;
}

uint64_t sub_249A6E5EC(uint64_t a1)
{
  unsigned int v2 = *(_DWORD *)(a1 + 48);
  uint64_t result = a1 + 48;
  unint64_t v3 = v2 | ((unint64_t)*(unsigned __int16 *)(result + 4) << 32);
  *(_DWORD *)uint64_t result = v2;
  *(_WORD *)(result + 4) = WORD2(v3) & 0x7FFF;
  return result;
}

uint64_t sub_249A6E608(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(_DWORD *)(a1 + 48);
  uint64_t result = a1 + 48;
  unint64_t v4 = (v3 | ((unint64_t)*(unsigned __int16 *)(result + 4) << 32)) & 0x303030303030303 | (a2 << 47);
  *(void *)(result - 32) &= 1uLL;
  *(_DWORD *)uint64_t result = v3;
  *(_WORD *)(result + 4) = WORD2(v4);
  return result;
}

ValueMetadata *type metadata accessor for BackgroundConfiguration.Style()
{
  return &type metadata for BackgroundConfiguration.Style;
}

unsigned char *_s14CarPlayAssetUI23BackgroundConfigurationV20RadialBackgroundTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A6E714);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundConfiguration.CodingKeys()
{
  return &type metadata for BackgroundConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for BackgroundConfiguration.Style.CodingKeys()
{
  return &type metadata for BackgroundConfiguration.Style.CodingKeys;
}

ValueMetadata *type metadata accessor for BackgroundConfiguration.Style.RadialCodingKeys()
{
  return &type metadata for BackgroundConfiguration.Style.RadialCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for BackgroundConfiguration.Style.LinearCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x249A6E80CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundConfiguration.Style.LinearCodingKeys()
{
  return &type metadata for BackgroundConfiguration.Style.LinearCodingKeys;
}

unsigned char *_s14CarPlayAssetUI23BackgroundConfigurationV5StyleO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A6E910);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundConfiguration.BlurConfiguration.CodingKeys()
{
  return &type metadata for BackgroundConfiguration.BlurConfiguration.CodingKeys;
}

unint64_t sub_249A6E94C()
{
  unint64_t result = qword_2696E4920;
  if (!qword_2696E4920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4920);
  }
  return result;
}

unint64_t sub_249A6E9A4()
{
  unint64_t result = qword_2696E4928;
  if (!qword_2696E4928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4928);
  }
  return result;
}

unint64_t sub_249A6E9FC()
{
  unint64_t result = qword_2696E4930;
  if (!qword_2696E4930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4930);
  }
  return result;
}

unint64_t sub_249A6EA54()
{
  unint64_t result = qword_2696E4938;
  if (!qword_2696E4938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4938);
  }
  return result;
}

unint64_t sub_249A6EAAC()
{
  unint64_t result = qword_2696E4940;
  if (!qword_2696E4940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4940);
  }
  return result;
}

unint64_t sub_249A6EB04()
{
  unint64_t result = qword_2696E4948;
  if (!qword_2696E4948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4948);
  }
  return result;
}

unint64_t sub_249A6EB5C()
{
  unint64_t result = qword_2696E4950;
  if (!qword_2696E4950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4950);
  }
  return result;
}

unint64_t sub_249A6EBB4()
{
  unint64_t result = qword_2696E4958;
  if (!qword_2696E4958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4958);
  }
  return result;
}

unint64_t sub_249A6EC0C()
{
  unint64_t result = qword_2696E4960;
  if (!qword_2696E4960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4960);
  }
  return result;
}

unint64_t sub_249A6EC64()
{
  unint64_t result = qword_2696E4968;
  if (!qword_2696E4968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4968);
  }
  return result;
}

unint64_t sub_249A6ECBC()
{
  unint64_t result = qword_2696E4970;
  if (!qword_2696E4970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4970);
  }
  return result;
}

unint64_t sub_249A6ED14()
{
  unint64_t result = qword_2696E4978;
  if (!qword_2696E4978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4978);
  }
  return result;
}

unint64_t sub_249A6ED6C()
{
  unint64_t result = qword_2696E4980;
  if (!qword_2696E4980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4980);
  }
  return result;
}

unint64_t sub_249A6EDC4()
{
  unint64_t result = qword_2696E4988;
  if (!qword_2696E4988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4988);
  }
  return result;
}

unint64_t sub_249A6EE1C()
{
  unint64_t result = qword_2696E4990;
  if (!qword_2696E4990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4990);
  }
  return result;
}

uint64_t sub_249A6EE70(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x737569646172 && a2 == 0xE600000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7974696361706FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_249A6EF5C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6169646172 && a2 == 0xE600000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7261656E696CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_249A6F040(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_249A6F148(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C797473 && a2 == 0xE500000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249B172B0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x734449726F6C6F63 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_249A6F290()
{
  unint64_t result = qword_2696E4998[0];
  if (!qword_2696E4998[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2696E4998);
  }
  return result;
}

uint64_t Generator.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t Generator.callAsFunction()()
{
  return (*v0)();
}

uint64_t static Generator<A>.live.getter@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = *((void *)&xmmword_26BAADB90 + 1);
  *a1 = xmmword_26BAADB90;
  a1[1] = v2;
  return swift_retain();
}

uint64_t static Generator<A>.live.setter(long long *a1)
{
  xmmword_26BAADB90 = *a1;
  return swift_release();
}

uint64_t (*static Generator<A>.live.modify())()
{
  return j__swift_endAccess;
}

uint64_t Generator.callAsFunction<A>()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*v2)(v5);
  return TaggedValue.init(rawValue:)(v7, a2, v4);
}

uint64_t type metadata accessor for Generator()
{
  return __swift_instantiateGenericMetadata();
}

double static Instrument.GaugeStyle.AngleConfiguration.default.getter@<D0>(uint64_t a1@<X8>)
{
  if (qword_2696DD818 != -1) {
    swift_once();
  }
  char v2 = byte_2696E4A30;
  *(_OWORD *)a1 = xmmword_2696E4A20;
  *(unsigned char *)(a1 + 16) = v2;
  double result = dbl_2696E4A38[0];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)dbl_2696E4A38;
  return result;
}

double Instrument.GaugeStyle.AngleConfiguration.minimumAngle.getter()
{
  return *(double *)v0;
}

void Instrument.GaugeStyle.AngleConfiguration.minimumAngle.setter(double a1)
{
  *unint64_t v1 = a1;
}

uint64_t (*Instrument.GaugeStyle.AngleConfiguration.minimumAngle.modify())()
{
  return nullsub_1;
}

double Instrument.GaugeStyle.AngleConfiguration.maximumAngle.getter()
{
  return *(double *)(v0 + 8);
}

void Instrument.GaugeStyle.AngleConfiguration.maximumAngle.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*Instrument.GaugeStyle.AngleConfiguration.maximumAngle.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.AngleConfiguration.clockwise.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t Instrument.GaugeStyle.AngleConfiguration.clockwise.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.AngleConfiguration.clockwise.modify())()
{
  return nullsub_1;
}

double Instrument.GaugeStyle.AngleConfiguration.bounds.getter()
{
  return *(double *)(v0 + 24);
}

void Instrument.GaugeStyle.AngleConfiguration.bounds.setter(double a1, double a2)
{
  *(double *)(v2 + 24) = a1;
  *(double *)(v2 + 32) = a2;
}

uint64_t (*Instrument.GaugeStyle.AngleConfiguration.bounds.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.AngleConfiguration.init(minimumAngle:maximumAngle:clockwise:bounds:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(unsigned char *)(a2 + 16) = result;
  *(double *)(a2 + 24) = a5;
  *(double *)(a2 + 32) = a6;
  return result;
}

uint64_t Instrument.GaugeStyle.AngleConfiguration.hash(into:)()
{
  sub_249AEE378();
  sub_249AEE378();
  sub_249AEE358();

  return sub_2498ACC00();
}

uint64_t sub_249A6F68C()
{
  uint64_t result = 0x416D756D696E696DLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x416D756D6978616DLL;
      break;
    case 2:
      uint64_t result = 0x7369776B636F6C63;
      break;
    case 3:
      uint64_t result = 0x73646E756F62;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_249A6F720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A7026C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A6F748(uint64_t a1)
{
  unint64_t v2 = sub_249A6FEFC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A6F784(uint64_t a1)
{
  unint64_t v2 = sub_249A6FEFC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.GaugeStyle.AngleConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4A48);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v10 = v1[3];
  uint64_t v11 = v1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A6FEFC();
  sub_249AEE468();
  v13[0] = v9;
  char v14 = 0;
  sub_24988E51C();
  sub_249AEDF08();
  if (!v2)
  {
    v13[0] = v8;
    char v14 = 1;
    sub_249AEDF08();
    LOBYTE(v13[0]) = 2;
    sub_249AEDEC8();
    v13[0] = v10;
    v13[1] = v11;
    char v14 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE220);
    sub_249944708(&qword_2696DE228);
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.GaugeStyle.AngleConfiguration.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.AngleConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4A58);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A6FEFC();
  sub_249AEE428();
  if (!v2)
  {
    char v15 = 0;
    sub_24988E570();
    sub_249AEDE08();
    uint64_t v9 = v14;
    char v15 = 1;
    sub_249AEDE08();
    uint64_t v10 = v14;
    LOBYTE(v14) = 2;
    char v12 = sub_249AEDDC8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE220);
    char v15 = 3;
    sub_249944708(&qword_2696DE248);
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v13 = v14;
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v10;
    *(unsigned char *)(a2 + 16) = v12 & 1;
    *(_OWORD *)(a2 + 24) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_249A6FD08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.GaugeStyle.AngleConfiguration.init(from:)(a1, a2);
}

uint64_t sub_249A6FD20(void *a1)
{
  return Instrument.GaugeStyle.AngleConfiguration.encode(to:)(a1);
}

uint64_t sub_249A6FD40()
{
  return sub_249AEE388();
}

double sub_249A6FDD0()
{
  xmmword_2696E4A20 = xmmword_249B09BC0;
  byte_2696E4A30 = 1;
  double result = 0.0;
  unk_2696E4A38 = xmmword_249B09BD0;
  return result;
}

float Instrument.GaugeStyle.AngleConfiguration.angleDifference.getter()
{
  double v1 = *(double *)(v0 + 8) - *(double *)v0;
  double v2 = floor(v1 / 6.28318531);
  double v3 = (v2 + v2) * 3.14159265;
  double v4 = v3 - v1 + 6.28318531;
  double v5 = v1 - v3;
  if (!*(unsigned char *)(v0 + 16)) {
    return v4;
  }
  return v5;
}

double sub_249A6FE44@<D0>(uint64_t a1@<X8>)
{
  if (qword_2696DD818 != -1) {
    swift_once();
  }
  char v2 = byte_2696E4A30;
  *(_OWORD *)a1 = xmmword_2696E4A20;
  *(unsigned char *)(a1 + 16) = v2;
  double result = dbl_2696E4A38[0];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)dbl_2696E4A38;
  return result;
}

BOOL _s14CarPlayAssetUI10InstrumentV10GaugeStyleO18AngleConfigurationV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  BOOL v4 = *(double *)a1 == *(double *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
  if (v4 && ((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) == 0)
  {
    double v5 = *(double *)(a1 + 32);
    BOOL v6 = *(double *)(a1 + 24) == *(double *)(a2 + 24);
    return v5 == *(double *)(a2 + 32) && v6;
  }
  return result;
}

unint64_t sub_249A6FEFC()
{
  unint64_t result = qword_2696E4A50;
  if (!qword_2696E4A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4A50);
  }
  return result;
}

unint64_t sub_249A6FF54()
{
  unint64_t result = qword_2696E4A60;
  if (!qword_2696E4A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4A60);
  }
  return result;
}

uint64_t _s14descr26FD9EE19O18AngleConfigurationVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s14descr26FD9EE19O18AngleConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.AngleConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.AngleConfiguration;
}

unsigned char *_s14descr26FD9EE19O18AngleConfigurationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A7012CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr26FD9EE19O18AngleConfigurationV10CodingKeysOMa()
{
  return &_s14descr26FD9EE19O18AngleConfigurationV10CodingKeysON;
}

unint64_t sub_249A70168()
{
  unint64_t result = qword_2696E4A68;
  if (!qword_2696E4A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4A68);
  }
  return result;
}

unint64_t sub_249A701C0()
{
  unint64_t result = qword_2696E4A70;
  if (!qword_2696E4A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4A70);
  }
  return result;
}

unint64_t sub_249A70218()
{
  unint64_t result = qword_2696E4A78;
  if (!qword_2696E4A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4A78);
  }
  return result;
}

uint64_t sub_249A7026C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x416D756D696E696DLL && a2 == 0xEC000000656C676ELL;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x416D756D6978616DLL && a2 == 0xEC000000656C676ELL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7369776B636F6C63 && a2 == 0xE900000000000065 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73646E756F62 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void TachometerDataIdentifiers.dataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *TachometerDataIdentifiers.dataIdentifier.setter(unsigned char *result)
{
  *double v1 = *result;
  return result;
}

uint64_t (*TachometerDataIdentifiers.dataIdentifier.modify())()
{
  return nullsub_1;
}

void TachometerDataIdentifiers.engineRPMMaxDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *TachometerDataIdentifiers.engineRPMMaxDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*TachometerDataIdentifiers.engineRPMMaxDataIdentifier.modify())()
{
  return nullsub_1;
}

void TachometerDataIdentifiers.markerRedlineDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 2);
}

unsigned char *TachometerDataIdentifiers.markerRedlineDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 2) = *result;
  return result;
}

uint64_t (*TachometerDataIdentifiers.markerRedlineDataIdentifier.modify())()
{
  return nullsub_1;
}

void TachometerDataIdentifiers.engineRPMStateDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 3);
}

unsigned char *TachometerDataIdentifiers.engineRPMStateDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 3) = *result;
  return result;
}

uint64_t (*TachometerDataIdentifiers.engineRPMStateDataIdentifier.modify())()
{
  return nullsub_1;
}

void TachometerDataIdentifiers.uiSceneStateDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 4);
}

unsigned char *TachometerDataIdentifiers.uiSceneStateDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 4) = *result;
  return result;
}

uint64_t (*TachometerDataIdentifiers.uiSceneStateDataIdentifier.modify())()
{
  return nullsub_1;
}

double TachometerDataIdentifiers.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 252580369;
  *(_DWORD *)a1 = 252580369;
  *(unsigned char *)(a1 + 4) = 56;
  return result;
}

uint64_t TachometerDataIdentifiers.hash(into:)()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

unint64_t sub_249A706C0(char a1)
{
  unint64_t result = 0x6E65644961746164;
  switch(a1)
  {
    case 1:
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 2:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_249A7077C()
{
  return sub_249A706C0(*v0);
}

uint64_t sub_249A70784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A71628(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A707AC(uint64_t a1)
{
  unint64_t v2 = sub_249A712AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A707E8(uint64_t a1)
{
  unint64_t v2 = sub_249A712AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TachometerDataIdentifiers.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4A80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v9 = v1[1];
  int v18 = v1[2];
  int v19 = v9;
  int v10 = v1[3];
  int v16 = v1[4];
  int v17 = v10;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A712AC();
  sub_249AEE468();
  char v29 = v8;
  char v28 = 0;
  sub_24989C934();
  sub_249AEDF08();
  if (!v2)
  {
    char v11 = v17;
    char v12 = v18;
    char v13 = v16;
    char v27 = v19;
    char v26 = 1;
    sub_249AEDF08();
    char v25 = v12;
    char v24 = 2;
    sub_249AEDF08();
    char v23 = v11;
    char v22 = 3;
    sub_249AEDF08();
    char v21 = v13;
    char v20 = 4;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t TachometerDataIdentifiers.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t TachometerDataIdentifiers.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4A90);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A712AC();
  sub_249AEE428();
  if (!v2)
  {
    char v25 = 0;
    sub_24989C988();
    sub_249AEDE08();
    int v9 = v26;
    char v23 = 1;
    sub_249AEDE08();
    int v16 = v9;
    int v10 = v24;
    char v21 = 2;
    sub_249AEDE08();
    HIDWORD(v15) = v10;
    char v11 = v22;
    char v19 = 3;
    sub_249AEDE08();
    char v12 = v20;
    char v18 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0F10);
    sub_249974950();
    sub_249AEDDA8();
    if (v17 == 57) {
      char v14 = 56;
    }
    else {
      char v14 = v17;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v16;
    a2[1] = BYTE4(v15);
    a2[2] = v11;
    a2[3] = v12;
    a2[4] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_249A70E78@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return TachometerDataIdentifiers.init(from:)(a1, a2);
}

uint64_t sub_249A70E90(void *a1)
{
  return TachometerDataIdentifiers.encode(to:)(a1);
}

uint64_t sub_249A70EB0()
{
  return sub_249AEE388();
}

uint64_t _s14CarPlayAssetUI25TachometerDataIdentifiersV2eeoiySbAC_ACtFZ_0()
{
  unint64_t v0 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == InstrumentDataIdentifier.rawValue.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v4 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = 0;
    if ((v4 & 1) == 0) {
      return v5 & 1;
    }
  }
  unint64_t v6 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v8 = v7;
  if (v6 == InstrumentDataIdentifier.rawValue.getter() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = 0;
    if ((v10 & 1) == 0) {
      return v5 & 1;
    }
  }
  unint64_t v11 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v13 = v12;
  if (v11 == InstrumentDataIdentifier.rawValue.getter() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = 0;
    if ((v15 & 1) == 0) {
      return v5 & 1;
    }
  }
  unint64_t v16 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v18 = v17;
  if (v16 == InstrumentDataIdentifier.rawValue.getter() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v20 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = 0;
    if ((v20 & 1) == 0) {
      return v5 & 1;
    }
  }
  unint64_t v21 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v23 = v22;
  if (v21 == InstrumentDataIdentifier.rawValue.getter() && v23 == v24) {
    char v5 = 1;
  }
  else {
    char v5 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_249A712AC()
{
  unint64_t result = qword_2696E4A88;
  if (!qword_2696E4A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4A88);
  }
  return result;
}

unint64_t sub_249A71304()
{
  unint64_t result = qword_2696E4A98;
  if (!qword_2696E4A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4A98);
  }
  return result;
}

uint64_t sub_249A71358@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 4);
  return result;
}

unsigned char *sub_249A71364(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 4) = *result;
  return result;
}

uint64_t __swift_memcpy5_1(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SpeedometerDataIdentifiers(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC8 && a1[5]) {
    return (*(_DWORD *)a1 + 200);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 0x39;
  int v5 = v3 - 57;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SpeedometerDataIdentifiers(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC7)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)unint64_t result = a2 - 200;
    if (a3 >= 0xC8) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC8) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 56;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TachometerDataIdentifiers()
{
  return &type metadata for TachometerDataIdentifiers;
}

unsigned char *storeEnumTagSinglePayload for TachometerDataIdentifiers.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A714E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TachometerDataIdentifiers.CodingKeys()
{
  return &type metadata for TachometerDataIdentifiers.CodingKeys;
}

unint64_t sub_249A71524()
{
  unint64_t result = qword_2696E4AA0;
  if (!qword_2696E4AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4AA0);
  }
  return result;
}

unint64_t sub_249A7157C()
{
  unint64_t result = qword_2696E4AA8;
  if (!qword_2696E4AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4AA8);
  }
  return result;
}

unint64_t sub_249A715D4()
{
  unint64_t result = qword_2696E4AB0;
  if (!qword_2696E4AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4AB0);
  }
  return result;
}

uint64_t sub_249A71628(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000249B172D0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000249B172F0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000249B17310 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000249B15E50)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t Instrument.PopoverLocation.name.getter()
{
  if (*(void *)(v0 + 8)) {
    return 0x6C61636F6CLL;
  }
  else {
    return 0x65746F6D6572;
  }
}

BOOL static Instrument.PopoverConfiguration.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  unsigned int v4 = (void *)a1[2];
  uint64_t v5 = a1[3];
  char v6 = (void *)a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v9 = a1[7];
  char v10 = (void *)a1[8];
  uint64_t v11 = a1[9];
  uint64_t v13 = (void *)a1[10];
  uint64_t v12 = a1[11];
  uint64_t v15 = a1[12];
  uint64_t v14 = a1[13];
  uint64_t v16 = *a2;
  uint64_t v17 = a2[1];
  uint64_t v18 = (void *)a2[2];
  uint64_t v19 = a2[3];
  char v20 = (void *)a2[4];
  uint64_t v21 = a2[5];
  uint64_t v23 = a2[6];
  uint64_t v22 = a2[7];
  uint64_t v24 = (void *)a2[8];
  uint64_t v25 = a2[9];
  char v27 = (void *)a2[10];
  uint64_t v26 = a2[11];
  uint64_t v28 = a2[12];
  uint64_t v29 = a2[13];
  uint64_t v30 = v2;
  v92[0] = v2;
  v92[1] = v3;
  uint64_t v66 = v4;
  v92[2] = v4;
  uint64_t v70 = v5;
  uint64_t v71 = v7;
  v92[3] = v5;
  uint64_t v73 = v6;
  v92[4] = v6;
  v92[5] = v7;
  char v72 = v8;
  v92[6] = v8;
  v92[7] = v9;
  v92[8] = v10;
  v92[9] = v11;
  v92[10] = v13;
  uint64_t v31 = v12;
  v92[11] = v12;
  char v32 = v15;
  v92[12] = v15;
  v92[13] = v14;
  v92[14] = v16;
  uint64_t v33 = v17;
  v92[15] = v17;
  v92[16] = v18;
  v92[17] = v19;
  v92[18] = v20;
  v92[19] = v21;
  char v67 = v23;
  uint64_t v68 = v25;
  v92[20] = v23;
  uint64_t v34 = v22;
  v92[21] = v22;
  v92[22] = v24;
  v92[23] = v25;
  uint64_t v69 = v27;
  v92[24] = v27;
  v92[25] = v26;
  v92[26] = v28;
  v92[27] = v29;
  if (v3)
  {
    if (v17)
    {
      uint64_t v35 = v30;
      v83[0] = v30;
      v83[1] = v3;
      v83[2] = v4;
      v83[3] = v5;
      v83[4] = v6;
      v83[5] = v7;
      char v84 = v72;
      uint64_t v85 = v9;
      uint64_t v86 = v10;
      uint64_t v87 = v11;
      uint64_t v88 = v13;
      uint64_t v89 = v31;
      uint64_t v90 = v15;
      uint64_t v91 = v14;
      v74[0] = v16;
      v74[1] = v17;
      uint64_t v55 = v17;
      double v61 = v18;
      uint64_t v74[2] = v18;
      v74[3] = v19;
      double v53 = v20;
      uint64_t v36 = v20;
      v74[4] = v20;
      v74[5] = v21;
      uint64_t v64 = v22;
      char v75 = v67;
      uint64_t v76 = v22;
      uint64_t v77 = v24;
      uint64_t v78 = v68;
      uint64_t v79 = v27;
      uint64_t v80 = v26;
      uint64_t v81 = v28;
      uint64_t v82 = v29;
      uint64_t v56 = v16;
      char v54 = v28;
      uint64_t v62 = v11;
      uint64_t v37 = v31;
      uint64_t v58 = v31;
      uint64_t v59 = v26;
      char v38 = v32;
      char v57 = v32;
      uint64_t v39 = v3;
      uint64_t v40 = v34;
      uint64_t v41 = v10;
      uint64_t v63 = v10;
      uint64_t v42 = v11;
      unsigned __int8 v43 = v13;
      uint64_t v60 = v24;
      sub_2498FC8BC(v16, v33, v18, v19, v36, v21, v67, v40, v24, v68, v27, v26, v28);
      sub_2498FC8BC(v35, v39, v66, v70, v73, v71, v72, v9, v41, v42, v43, v37, v38);
      sub_2498FC8BC(v35, v39, v66, v70, v73, v71, v72, v9, v63, v62, v43, v58, v38);
      sub_2498FC8BC(v56, v55, v61, v19, v53, v21, v67, v64, v60, v68, v27, v59, v54);
      char v52 = _s14CarPlayAssetUI10InstrumentV15PopoverLocationO18LocalConfigurationV2eeoiySbAG_AGtFZ_0((uint64_t)v83, (uint64_t)v74);
      sub_249A74FFC((uint64_t)v92);
      sub_2498FDEF4(v56, v55, v61, v19, v53, v21, v67, v64, v60, v68, v27, v59, v54);
      sub_2498FDEF4(v35, v39, v66, v70, v73, v71, v72, v9, v63, v62, v43, v58, v57);
      return (v52 & 1) != 0;
    }
  }
  else if (!v17)
  {
    sub_249A74FFC((uint64_t)v92);
    return 1;
  }
  uint64_t v45 = v16;
  char v46 = v28;
  uint64_t v47 = v3;
  double v48 = v18;
  uint64_t v65 = v22;
  uint64_t v49 = v17;
  uint64_t v50 = v24;
  uint64_t v51 = v26;
  sub_2498FC8BC(v30, v47, v4, v5, v6, v7, v72, v9, v10, v11, v13, v31, v15);
  sub_2498FC8BC(v45, v49, v48, v19, v20, v21, v67, v65, v50, v68, v69, v51, v46);
  sub_249A74FFC((uint64_t)v92);
  return 0;
}

BOOL Instrument.PopoverLocation.rendersLocally.getter()
{
  return *(void *)(v0 + 8) != 0;
}

void Instrument.PopoverConfiguration.location.getter(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  unsigned int v4 = (void *)v1[2];
  uint64_t v5 = v1[3];
  char v6 = (void *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  char v10 = (void *)v1[8];
  uint64_t v11 = v1[9];
  uint64_t v12 = (void *)v1[10];
  uint64_t v13 = v1[11];
  uint64_t v14 = v1[12];
  uint64_t v15 = v1[13];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = (uint64_t)v4;
  a1[3] = v5;
  a1[4] = (uint64_t)v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = (uint64_t)v10;
  a1[9] = v11;
  a1[10] = (uint64_t)v12;
  a1[11] = v13;
  a1[12] = v14;
  a1[13] = v15;
  sub_2498FC8BC(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
}

__n128 Instrument.PopoverConfiguration.location.setter(long long *a1)
{
  long long v9 = a1[1];
  long long v10 = *a1;
  long long v8 = a1[2];
  long long v6 = a1[4];
  long long v7 = a1[3];
  __n128 v5 = (__n128)a1[5];
  uint64_t v2 = *((void *)a1 + 12);
  uint64_t v3 = *((void *)a1 + 13);
  sub_2498FDEF4(*(void *)v1, *(void *)(v1 + 8), *(void **)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void **)(v1 + 64), *(void *)(v1 + 72), *(void **)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96));
  *(_OWORD *)uint64_t v1 = v10;
  *(_OWORD *)(v1 + 16) = v9;
  *(_OWORD *)(v1 + 32) = v8;
  *(_OWORD *)(v1 + 48) = v7;
  __n128 result = v5;
  *(_OWORD *)(v1 + 64) = v6;
  *(__n128 *)(v1 + 80) = v5;
  *(void *)(v1 + 96) = v2;
  *(void *)(v1 + 104) = v3;
  return result;
}

uint64_t (*Instrument.PopoverConfiguration.location.modify())()
{
  return nullsub_1;
}

__n128 Instrument.PopoverConfiguration.init(location:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  long long v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v3;
  long long v4 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 80) = v4;
  __n128 result = *(__n128 *)(a1 + 96);
  *(__n128 *)(a2 + 96) = result;
  return result;
}

void Instrument.PopoverConfiguration.hash(into:)(uint64_t a1)
{
  if (*(void *)(v1 + 8))
  {
    sub_249AEE348();
    Instrument.PopoverLocation.LocalConfiguration.hash(into:)(a1);
  }
  else
  {
    sub_249AEE348();
  }
}

uint64_t sub_249A71EE4()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_249A71EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249A71F94(uint64_t a1)
{
  unint64_t v2 = sub_249A750C8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A71FD0(uint64_t a1)
{
  unint64_t v2 = sub_249A750C8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.PopoverConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4AB8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = *v1;
  long long v15 = v1[1];
  long long v16 = v7;
  long long v14 = v1[2];
  long long v13 = v1[3];
  long long v12 = v1[4];
  long long v11 = v1[5];
  uint64_t v9 = *((void *)v1 + 12);
  uint64_t v8 = *((void *)v1 + 13);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A750C8();
  sub_249AEE468();
  long long v17 = v16;
  long long v18 = v15;
  long long v19 = v14;
  long long v20 = v13;
  long long v21 = v12;
  long long v22 = v11;
  uint64_t v23 = v9;
  uint64_t v24 = v8;
  sub_249A7511C();
  sub_249AEDF08();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Instrument.PopoverConfiguration.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_249AEE338();
  sub_249AEE348();
  if (v1) {
    Instrument.PopoverLocation.LocalConfiguration.hash(into:)((uint64_t)v3);
  }
  return sub_249AEE388();
}

uint64_t Instrument.PopoverConfiguration.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4AD0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A750C8();
  sub_249AEE428();
  if (!v2)
  {
    sub_249A75170();
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v9 = v16[1];
    long long v10 = v16[2];
    long long v11 = v16[3];
    long long v12 = v16[4];
    long long v13 = v16[5];
    long long v14 = v16[6];
    *a2 = v16[0];
    a2[1] = v9;
    a2[2] = v10;
    a2[3] = v11;
    a2[4] = v12;
    a2[5] = v13;
    a2[6] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_249A72434@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return Instrument.PopoverConfiguration.init(from:)(a1, a2);
}

uint64_t sub_249A7244C(void *a1)
{
  return Instrument.PopoverConfiguration.encode(to:)(a1);
}

uint64_t sub_249A72464()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_249AEE338();
  sub_249AEE348();
  if (v1) {
    Instrument.PopoverLocation.LocalConfiguration.hash(into:)((uint64_t)v3);
  }
  return sub_249AEE388();
}

void sub_249A72548(uint64_t a1)
{
  if (*(void *)(v1 + 8))
  {
    sub_249AEE348();
    Instrument.PopoverLocation.LocalConfiguration.hash(into:)(a1);
  }
  else
  {
    sub_249AEE348();
  }
}

uint64_t sub_249A72618()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_249AEE338();
  sub_249AEE348();
  if (v1) {
    Instrument.PopoverLocation.LocalConfiguration.hash(into:)((uint64_t)v3);
  }
  return sub_249AEE388();
}

uint64_t sub_249A726F8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v10[0] = *a1;
  v10[1] = v2;
  long long v3 = a1[3];
  void v10[2] = a1[2];
  _OWORD v10[3] = v3;
  long long v4 = a1[5];
  v10[4] = a1[4];
  v10[5] = v4;
  v10[6] = a1[6];
  long long v5 = a2[1];
  v9[0] = *a2;
  v9[1] = v5;
  long long v6 = a2[3];
  v9[2] = a2[2];
  _OWORD v9[3] = v6;
  long long v7 = a2[5];
  v9[4] = a2[4];
  uint64_t v9[5] = v7;
  v9[6] = a2[6];
  return _s14CarPlayAssetUI10InstrumentV15PopoverLocationO2eeoiySbAE_AEtFZ_0((uint64_t *)v10, (uint64_t *)v9) & 1;
}

uint64_t Instrument.PopoverLocation.assets.getter()
{
  if (!*(void *)(v0 + 8)) {
    return MEMORY[0x263F8EE78];
  }
  long long v2 = *(void **)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  long long v3 = *(void **)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  long long v5 = *(void **)(v0 + 64);
  long long v14 = *(void **)(v0 + 80);
  uint64_t v15 = *(void *)(v0 + 72);
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v13 = *(void *)(v0 + 88);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(void *)(v0 + 56);
  char v9 = *(unsigned char *)(v0 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249AF0A70;
  *(void *)(inited + 32) = v2;
  *(void *)(inited + 40) = v1;
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v4;
  *(unsigned char *)(inited + 64) = v9;
  *(void *)(inited + 72) = v8;
  if ((~(_BYTE)v6 & 0xFE) != 0)
  {
    sub_249882468(v5, v15, v14, v13, v6);
    sub_249882468(v5, v15, v14, v13, v6);
    sub_24988247C(v2, v1, v3, v4, v9);
    uint64_t inited = (uint64_t)sub_2498AC668((void *)1, 2, 1, (void *)inited);
    *(void *)(inited + 16) = 2;
    *(void *)(inited + 80) = v5;
    *(void *)(inited + 88) = v15;
    *(void *)(inited + 96) = v14;
    *(void *)(inited + 104) = v13;
    *(unsigned char *)(inited + 112) = v6;
    *(void *)(inited + 120) = v7;
    sub_2498826D0(v5, v15, v14, v13, v6);
  }
  else
  {
    sub_24988247C(v2, v1, v3, v4, v9);
  }
  uint64_t v11 = sub_249A72F64(inited);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t Instrument.PopoverLocation.LocalConfiguration.assets.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v4 = *(void **)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  char v5 = *(unsigned char *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v14 = *(void *)(v0 + 72);
  uint64_t v15 = *(void **)(v0 + 64);
  uint64_t v13 = *(void **)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 96);
  uint64_t v16 = *(void *)(v0 + 88);
  int v8 = ~*(_DWORD *)(v0 + 96);
  uint64_t v9 = *(void *)(v0 + 104);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249AF0A70;
  *(void *)(inited + 32) = v1;
  *(void *)(inited + 40) = v2;
  *(void *)(inited + 48) = v4;
  *(void *)(inited + 56) = v3;
  *(unsigned char *)(inited + 64) = v5;
  *(void *)(inited + 72) = v6;
  if ((v8 & 0xFE) != 0)
  {
    sub_249882468(v15, v14, v13, v16, v7);
    sub_24988247C(v1, v2, v4, v3, v5);
    sub_249882468(v15, v14, v13, v16, v7);
    uint64_t inited = (uint64_t)sub_2498AC668((void *)1, 2, 1, (void *)inited);
    *(void *)(inited + 16) = 2;
    *(void *)(inited + 80) = v15;
    *(void *)(inited + 88) = v14;
    *(void *)(inited + 96) = v13;
    *(void *)(inited + 104) = v16;
    *(unsigned char *)(inited + 112) = v7;
    *(void *)(inited + 120) = v9;
    sub_2498826D0(v15, v14, v13, v16, v7);
  }
  else
  {
    sub_24988247C(v1, v2, v4, v3, v5);
  }
  uint64_t v11 = sub_249A72F64(inited);
  swift_bridgeObjectRelease();
  return v11;
}

void Instrument.PopoverLocation.restoreAssets(from:)(void *a1)
{
  if (*(void *)(v1 + 8))
  {
    uint64_t v9 = v2;
    uint64_t v10 = *(void *)v1;
    uint64_t v3 = *(void *)(v1 + 48);
    uint64_t v4 = *(void **)(v1 + 64);
    uint64_t v5 = *(void *)(v1 + 72);
    uint64_t v7 = *(void *)(v1 + 24);
    uint64_t v8 = *(void *)(v1 + 88);
    uint64_t v11 = *(void *)(v1 + 8);
    *(void *)&long long v12 = *(void *)(v1 + 16);
    *((void *)&v12 + 1) = v7;
    long long v13 = *(_OWORD *)(v1 + 32);
    uint64_t v6 = *(void *)(v1 + 56);
    *(void *)&long long v14 = v6;
    *((void *)&v14 + 1) = v4;
    *(void *)&long long v15 = v5;
    *((void *)&v15 + 1) = *(void *)(v1 + 80);
    *(void *)&long long v16 = v8;
    *((void *)&v16 + 1) = *(void *)(v1 + 96);
    uint64_t v17 = *(void *)(v1 + 104);
    swift_bridgeObjectRetain();
    sub_24988247C((void *)v12, v7, (void *)v13, *((uint64_t *)&v13 + 1), v3);
    sub_249882468(v4, v5, *((void **)&v15 + 1), v8, SBYTE8(v16));
    ImageAsset.restore(from:)(a1);
    if (v9)
    {
      swift_bridgeObjectRelease();
      sub_2498826E4((void *)v12, v7, (void *)v13, *((uint64_t *)&v13 + 1), v3);
      sub_2498826D0(v4, v5, *((void **)&v15 + 1), v8, SBYTE8(v16));
    }
    else
    {
      if ((~BYTE8(v16) & 0xFE) != 0) {
        ImageAsset.restore(from:)(a1);
      }
      sub_2498FDEF4(v10, v11, (void *)v12, v7, (void *)v13, *((uint64_t *)&v13 + 1), v3, v6, v4, v5, *((void **)&v15 + 1), v8, SBYTE8(v16));
      *(void *)uint64_t v1 = v10;
      *(void *)(v1 + 8) = v11;
      *(_OWORD *)(v1 + 16) = v12;
      *(_OWORD *)(v1 + 32) = v13;
      *(void *)(v1 + 48) = v3;
      *(_OWORD *)(v1 + 56) = v14;
      *(_OWORD *)(v1 + 72) = v15;
      *(_OWORD *)(v1 + 88) = v16;
      *(void *)(v1 + 104) = v17;
    }
  }
}

void Instrument.PopoverLocation.LocalConfiguration.restoreAssets(from:)(void *a1)
{
  ImageAsset.restore(from:)(a1);
  if (!v2 && (~*(_DWORD *)(v1 + 96) & 0xFELL) != 0) {
    ImageAsset.restore(from:)(a1);
  }
}

uint64_t Instrument.PopoverLocation.LocalConfiguration.streamName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.PopoverLocation.LocalConfiguration.streamName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Instrument.PopoverLocation.LocalConfiguration.streamName.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.PopoverLocation.LocalConfiguration.closeButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void **)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 56);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v7 = *(unsigned char *)(v1 + 48);
  *(unsigned char *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v6;
  return sub_24988247C(v2, v3, v4, v5, v7);
}

__n128 Instrument.PopoverLocation.LocalConfiguration.closeButton.setter(__n128 *a1)
{
  __n128 v7 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  unsigned __int8 v4 = a1[2].n128_u8[0];
  unint64_t v5 = a1[2].n128_u64[1];
  sub_2498826E4(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48));
  __n128 result = v7;
  *(__n128 *)(v1 + 16) = v7;
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v3;
  *(unsigned char *)(v1 + 48) = v4;
  *(void *)(v1 + 56) = v5;
  return result;
}

uint64_t (*Instrument.PopoverLocation.LocalConfiguration.closeButton.modify())()
{
  return nullsub_1;
}

void *Instrument.PopoverLocation.LocalConfiguration.focusedCloseButton.getter@<X0>(void *a1@<X8>)
{
  unint64_t v2 = (void *)v1[8];
  uint64_t v3 = v1[9];
  unsigned __int8 v4 = (void *)v1[10];
  uint64_t v5 = v1[11];
  uint64_t v6 = v1[12];
  uint64_t v7 = v1[13];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_249882468(v2, v3, v4, v5, v6);
}

__n128 Instrument.PopoverLocation.LocalConfiguration.focusedCloseButton.setter(long long *a1)
{
  __n128 v5 = (__n128)a1[1];
  long long v6 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  uint64_t v3 = *((void *)a1 + 5);
  sub_2498826D0(*(void **)(v1 + 64), *(void *)(v1 + 72), *(void **)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96));
  __n128 result = v5;
  *(_OWORD *)(v1 + 64) = v6;
  *(__n128 *)(v1 + 80) = v5;
  *(void *)(v1 + 96) = v2;
  *(void *)(v1 + 104) = v3;
  return result;
}

uint64_t (*Instrument.PopoverLocation.LocalConfiguration.focusedCloseButton.modify())()
{
  return nullsub_1;
}

__n128 Instrument.PopoverLocation.LocalConfiguration.init(streamName:closeButton:focusedCloseButton:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5 = *(unsigned char *)(a3 + 32);
  uint64_t v6 = *(void *)(a3 + 40);
  uint64_t v7 = *(unsigned __int8 *)(a4 + 32);
  uint64_t v8 = *(void *)(a4 + 40);
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  long long v9 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a5 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(a5 + 32) = v9;
  *(unsigned char *)(a5 + 48) = v5;
  *(void *)(a5 + 56) = v6;
  __n128 result = *(__n128 *)a4;
  long long v11 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a5 + 64) = *(_OWORD *)a4;
  *(_OWORD *)(a5 + 80) = v11;
  *(void *)(a5 + 96) = v7;
  *(void *)(a5 + 104) = v8;
  return result;
}

uint64_t sub_249A72F64(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_249A21F30(0, v1, 0);
    uint64_t v2 = v18;
    unsigned __int8 v4 = (void *)(a1 + 72);
    do
    {
      char v5 = (void *)*(v4 - 5);
      uint64_t v6 = *(v4 - 4);
      uint64_t v7 = (void *)*(v4 - 3);
      uint64_t v8 = *(v4 - 2);
      char v9 = *((unsigned char *)v4 - 8);
      uint64_t v14 = *v4;
      sub_24988247C(v5, v6, v7, v8, v9);
      uint64_t v18 = v2;
      unint64_t v11 = *(void *)(v2 + 16);
      unint64_t v10 = *(void *)(v2 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_249A21F30(v10 > 1, v11 + 1, 1);
        uint64_t v2 = v18;
      }
      v4 += 6;
      long long v16 = &type metadata for ImageAsset;
      uint64_t v17 = &protocol witness table for ImageAsset;
      uint64_t v12 = swift_allocObject();
      *(void *)&long long v15 = v12;
      *(void *)(v12 + 16) = v5;
      *(void *)(v12 + 24) = v6;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v8;
      *(unsigned char *)(v12 + 48) = v9;
      *(void *)(v12 + 56) = v14;
      *(void *)(v2 + 16) = v11 + 1;
      sub_249882BCC(&v15, v2 + 40 * v11 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

void Instrument.PopoverLocation.LocalConfiguration.hash(into:)(uint64_t a1)
{
  unsigned __int8 v4 = *(void **)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  char v5 = *(void **)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v12 = *(void **)(v1 + 64);
  unint64_t v10 = *(void **)(v1 + 80);
  uint64_t v11 = *(void *)(v1 + 72);
  uint64_t v7 = *(void *)(v1 + 96);
  int v13 = ~*(_DWORD *)(v1 + 96);
  uint64_t v9 = *(void *)(v1 + 88);
  char v8 = *(unsigned char *)(v1 + 48);
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988247C(v4, v3, v5, v6, v8);
  ImageAsset.ImageType.hash(into:)(a1);
  sub_249AEE348();
  sub_2498826E4(v4, v3, v5, v6, v8);
  if ((v13 & 0xFE) != 0)
  {
    sub_249AEE358();
    sub_24988247C(v12, v11, v10, v9, v7);
    ImageAsset.ImageType.hash(into:)(a1);
    sub_249AEE348();
    sub_2498826D0(v12, v11, v10, v9, v7);
  }
  else
  {
    sub_249AEE358();
  }
}

uint64_t sub_249A7325C()
{
  unint64_t v1 = 0x74754265736F6C63;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x614E6D6165727473;
  }
}

uint64_t sub_249A732C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A76C94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A732F0(uint64_t a1)
{
  unint64_t v2 = sub_249A751C4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A7332C(uint64_t a1)
{
  unint64_t v2 = sub_249A751C4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.PopoverLocation.LocalConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4AE0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v26 = *(void *)(v1 + 24);
  uint64_t v27 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v24 = *(void *)(v1 + 40);
  uint64_t v25 = v8;
  int v35 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v22 = *(void *)(v1 + 64);
  uint64_t v23 = v9;
  uint64_t v10 = *(void *)(v1 + 72);
  uint64_t v20 = *(void *)(v1 + 80);
  uint64_t v21 = v10;
  uint64_t v11 = *(void *)(v1 + 88);
  uint64_t v18 = *(void *)(v1 + 96);
  uint64_t v19 = v11;
  uint64_t v17 = *(void *)(v1 + 104);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A751C4();
  sub_249AEE468();
  LOBYTE(v29) = 0;
  uint64_t v12 = v28;
  sub_249AEDEB8();
  if (!v12)
  {
    uint64_t v14 = v20;
    uint64_t v13 = v21;
    uint64_t v29 = v27;
    uint64_t v30 = v26;
    uint64_t v31 = v25;
    uint64_t v32 = v24;
    LOBYTE(v33) = v35;
    uint64_t v15 = v22;
    uint64_t v34 = v23;
    char v36 = 1;
    sub_24989D190();
    sub_249AEDF08();
    uint64_t v29 = v15;
    uint64_t v30 = v13;
    uint64_t v31 = v14;
    uint64_t v32 = v19;
    uint64_t v33 = v18;
    uint64_t v34 = v17;
    char v36 = 2;
    sub_249AEDEA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Instrument.PopoverLocation.LocalConfiguration.hashValue.getter()
{
  uint64_t v1 = v0[1];
  char v2 = *((unsigned char *)v0 + 48);
  uint64_t v3 = v0[13];
  uint64_t v7 = *v0;
  uint64_t v8 = v1;
  long long v4 = *((_OWORD *)v0 + 2);
  long long v9 = *((_OWORD *)v0 + 1);
  long long v10 = v4;
  char v11 = v2;
  long long v12 = *(_OWORD *)(v0 + 7);
  long long v13 = *(_OWORD *)(v0 + 9);
  long long v14 = *(_OWORD *)(v0 + 11);
  uint64_t v15 = v3;
  sub_249AEE338();
  Instrument.PopoverLocation.LocalConfiguration.hash(into:)((uint64_t)v6);
  return sub_249AEE388();
}

void Instrument.PopoverLocation.LocalConfiguration.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4AF0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A751C4();
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    char v31 = -2;
  }
  else
  {
    LOBYTE(v45) = 0;
    uint64_t v9 = sub_249AEDDB8();
    uint64_t v11 = v10;
    uint64_t v44 = v9;
    char v52 = 1;
    sub_24989D2E8();
    swift_bridgeObjectRetain();
    sub_249AEDE08();
    uint64_t v43 = v11;
    long long v12 = v45;
    uint64_t v38 = v50;
    char v52 = 2;
    uint64_t v41 = v47;
    uint64_t v42 = v46;
    uint64_t v40 = v48;
    int v51 = v49;
    sub_24988247C(v45, v46, v47, v48, v49);
    uint64_t v39 = 0;
    sub_249AEDDA8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v13 = v45;
    uint64_t v14 = v48;
    uint64_t v39 = v49;
    char v36 = v12;
    uint64_t v37 = v50;
    uint64_t v15 = v46;
    long long v16 = v47;
    sub_249882468(v45, v46, v47, v48, v49);
    sub_2498826D0(0, 0, 0, 0, 254);
    swift_bridgeObjectRetain();
    sub_24988247C(v12, v42, v41, v40, v51);
    uint64_t v34 = v15;
    int v35 = v13;
    uint64_t v32 = v14;
    uint64_t v33 = v16;
    LOBYTE(v12) = v39;
    sub_249882468(v13, v15, v16, v14, v39);
    sub_2498826D0(v13, v15, v16, v14, (char)v12);
    uint64_t v17 = v36;
    uint64_t v19 = v41;
    uint64_t v18 = v42;
    uint64_t v20 = v40;
    LOBYTE(v13) = v51;
    sub_2498826E4(v36, v42, v41, v40, v51);
    uint64_t v21 = v43;
    swift_bridgeObjectRelease();
    *(void *)a2 = v44;
    *(void *)(a2 + 8) = v21;
    *(void *)(a2 + 16) = v17;
    *(void *)(a2 + 24) = v18;
    *(void *)(a2 + 32) = v19;
    *(void *)(a2 + 40) = v20;
    *(unsigned char *)(a2 + 48) = (_BYTE)v13;
    uint64_t v22 = v39;
    uint64_t v23 = v34;
    uint64_t v24 = v35;
    *(void *)(a2 + 56) = v38;
    *(void *)(a2 + 64) = v24;
    uint64_t v26 = v32;
    uint64_t v25 = v33;
    *(void *)(a2 + 72) = v23;
    *(void *)(a2 + 80) = v25;
    *(void *)(a2 + 88) = v26;
    *(void *)(a2 + 96) = v22;
    *(void *)(a2 + 104) = v37;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_2498826E4(v36, v42, v41, v40, v51);
    uint64_t v27 = v24;
    uint64_t v28 = v23;
    uint64_t v29 = v25;
    uint64_t v30 = v26;
    char v31 = v22;
  }
  sub_2498826D0(v27, v28, v29, v30, v31);
}

void sub_249A73A74(void *a1)
{
  ImageAsset.restore(from:)(a1);
  if (!v2 && (~*(_DWORD *)(v1 + 96) & 0xFELL) != 0) {
    ImageAsset.restore(from:)(a1);
  }
}

void sub_249A73AC8(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_249A73AE0(void *a1)
{
  return Instrument.PopoverLocation.LocalConfiguration.encode(to:)(a1);
}

uint64_t sub_249A73AF8()
{
  uint64_t v1 = v0[1];
  char v2 = *((unsigned char *)v0 + 48);
  uint64_t v3 = v0[13];
  uint64_t v7 = *v0;
  uint64_t v8 = v1;
  long long v4 = *((_OWORD *)v0 + 2);
  long long v9 = *((_OWORD *)v0 + 1);
  long long v10 = v4;
  char v11 = v2;
  long long v12 = *(_OWORD *)(v0 + 7);
  long long v13 = *(_OWORD *)(v0 + 9);
  long long v14 = *(_OWORD *)(v0 + 11);
  uint64_t v15 = v3;
  sub_249AEE338();
  Instrument.PopoverLocation.LocalConfiguration.hash(into:)((uint64_t)v6);
  return sub_249AEE388();
}

uint64_t sub_249A73B7C()
{
  uint64_t v1 = v0[1];
  char v2 = *((unsigned char *)v0 + 48);
  uint64_t v3 = v0[13];
  uint64_t v7 = *v0;
  uint64_t v8 = v1;
  long long v4 = *((_OWORD *)v0 + 2);
  long long v9 = *((_OWORD *)v0 + 1);
  long long v10 = v4;
  char v11 = v2;
  long long v12 = *(_OWORD *)(v0 + 7);
  long long v13 = *(_OWORD *)(v0 + 9);
  long long v14 = *(_OWORD *)(v0 + 11);
  uint64_t v15 = v3;
  sub_249AEE338();
  Instrument.PopoverLocation.LocalConfiguration.hash(into:)((uint64_t)v6);
  return sub_249AEE388();
}

void Instrument.PopoverLocation.hash(into:)(uint64_t a1)
{
  if (*(void *)(v1 + 8))
  {
    sub_249AEE348();
    Instrument.PopoverLocation.LocalConfiguration.hash(into:)(a1);
  }
  else
  {
    sub_249AEE348();
  }
}

uint64_t sub_249A73CCC()
{
  if (*v0) {
    return 0x65746F6D6572;
  }
  else {
    return 0x6E65526C61636F6CLL;
  }
}

uint64_t sub_249A73D10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A76E0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A73D38(uint64_t a1)
{
  unint64_t v2 = sub_249A75218();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A73D74(uint64_t a1)
{
  unint64_t v2 = sub_249A75218();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_249A73DB0(uint64_t a1)
{
  unint64_t v2 = sub_249A752C0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A73DEC(uint64_t a1)
{
  unint64_t v2 = sub_249A752C0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_249A73E28(uint64_t a1)
{
  unint64_t v2 = sub_249A7526C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A73E64(uint64_t a1)
{
  unint64_t v2 = sub_249A7526C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void Instrument.PopoverLocation.encode(to:)(void *a1)
{
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4AF8);
  uint64_t v29 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v28 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4B00);
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v32 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4B08);
  uint64_t v36 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v8 = v1[1];
  long long v9 = (void *)v1[2];
  uint64_t v44 = v1[3];
  uint64_t v45 = v7;
  double v61 = (void *)v1[4];
  uint64_t v10 = v1[5];
  uint64_t v11 = v1[6];
  uint64_t v42 = v1[7];
  uint64_t v43 = v10;
  uint64_t v37 = (void *)v1[8];
  uint64_t v12 = v1[9];
  uint64_t v40 = (void *)v1[10];
  uint64_t v41 = v12;
  uint64_t v39 = v1[11];
  uint64_t v38 = v1[12];
  uint64_t v31 = v1[13];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A75218();
  sub_249AEE468();
  if (v8)
  {
    LOBYTE(v47) = 0;
    uint64_t v13 = v8;
    uint64_t v27 = v8;
    swift_bridgeObjectRetain();
    uint64_t v26 = v9;
    uint64_t v14 = v43;
    uint64_t v15 = v44;
    uint64_t v35 = v11;
    sub_24988247C(v9, v44, v61, v43, v11);
    long long v16 = v37;
    uint64_t v17 = v31;
    sub_249882468(v37, v41, v40, v39, v38);
    sub_249A752C0();
    uint64_t v18 = v32;
    sub_249AEDE48();
    uint64_t v47 = v45;
    uint64_t v48 = v13;
    uint64_t v49 = v9;
    uint64_t v50 = v15;
    int v51 = v61;
    uint64_t v52 = v14;
    char v53 = v35;
    uint64_t v19 = v41;
    uint64_t v54 = v42;
    uint64_t v55 = v16;
    uint64_t v20 = v40;
    uint64_t v56 = v41;
    char v57 = v40;
    uint64_t v30 = (uint64_t)v6;
    uint64_t v21 = v39;
    LOBYTE(v16) = v38;
    uint64_t v58 = v39;
    uint64_t v59 = v38;
    uint64_t v60 = v17;
    sub_249A75314();
    uint64_t v22 = v34;
    sub_249AEDF08();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v18, v22);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v30, v46);
    sub_2498FDEF4(v45, v27, v26, v44, v61, v43, v35, v42, v37, v19, v20, v21, (char)v16);
  }
  else
  {
    LOBYTE(v47) = 1;
    sub_249A7526C();
    uint64_t v23 = v28;
    uint64_t v24 = v46;
    sub_249AEDE48();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v30);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v24);
  }
}

uint64_t Instrument.PopoverLocation.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_249AEE338();
  sub_249AEE348();
  if (v1) {
    Instrument.PopoverLocation.LocalConfiguration.hash(into:)((uint64_t)v3);
  }
  return sub_249AEE388();
}

uint64_t Instrument.PopoverLocation.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4B30);
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4B38);
  uint64_t v37 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4B40);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v41 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v13);
  sub_249A75218();
  uint64_t v14 = v51;
  sub_249AEE428();
  if (v14) {
    goto LABEL_9;
  }
  uint64_t v36 = v6;
  uint64_t v15 = v39;
  uint64_t v16 = v40;
  uint64_t v51 = v10;
  uint64_t v17 = sub_249AEDE18();
  if (*(void *)(v17 + 16) != 1)
  {
    uint64_t v27 = sub_249AEDB08();
    swift_allocError();
    uint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBD0);
    *uint64_t v29 = &type metadata for Instrument.PopoverLocation;
    sub_249AEDD48();
    sub_249AEDAE8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v12, v9);
LABEL_9:
    uint64_t v31 = (uint64_t)v41;
    return __swift_destroy_boxed_opaque_existential_2Tm(v31);
  }
  if (*(unsigned char *)(v17 + 32))
  {
    LOBYTE(v42) = 1;
    sub_249A7526C();
    sub_249AEDD38();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v16);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v12, v9);
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    long long v22 = 0uLL;
    long long v23 = 0uLL;
    long long v24 = 0uLL;
    long long v25 = 0uLL;
    long long v26 = 0uLL;
  }
  else
  {
    LOBYTE(v42) = 0;
    sub_249A752C0();
    uint64_t v30 = v8;
    sub_249AEDD38();
    sub_249A75368();
    uint64_t v33 = v36;
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v12, v9);
    uint64_t v18 = v42;
    uint64_t v19 = v43;
    long long v22 = v44;
    long long v23 = v45;
    uint64_t v20 = v46;
    long long v24 = v47;
    long long v25 = v48;
    long long v26 = v49;
    uint64_t v21 = v50;
  }
  uint64_t v31 = (uint64_t)v41;
  uint64_t v34 = v38;
  *uint64_t v38 = v18;
  v34[1] = v19;
  *((_OWORD *)v34 + 1) = v22;
  *((_OWORD *)v34 + 2) = v23;
  v34[6] = v20;
  *(_OWORD *)(v34 + 7) = v24;
  *(_OWORD *)(v34 + 9) = v25;
  *(_OWORD *)(v34 + 11) = v26;
  v34[13] = v21;
  return __swift_destroy_boxed_opaque_existential_2Tm(v31);
}

uint64_t sub_249A74908()
{
  if (*(void *)(v0 + 8)) {
    return Instrument.PopoverLocation.LocalConfiguration.assets.getter();
  }
  else {
    return MEMORY[0x263F8EE78];
  }
}

void sub_249A74980(void *a1)
{
}

uint64_t sub_249A74998@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Instrument.PopoverLocation.init(from:)(a1, a2);
}

void sub_249A749B0(void *a1)
{
}

uint64_t _s14CarPlayAssetUI10InstrumentV15PopoverLocationO18LocalConfigurationV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  long long v3 = *(_OWORD *)(a1 + 32);
  char v4 = *(unsigned char *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v5 = *(void **)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v7 = *(void **)(a1 + 80);
  uint64_t v9 = *(void *)(a1 + 96);
  uint64_t v29 = *(void *)(a1 + 104);
  uint64_t v30 = *(void *)(a1 + 88);
  long long v10 = *(_OWORD *)(a2 + 16);
  long long v11 = *(_OWORD *)(a2 + 32);
  char v12 = *(unsigned char *)(a2 + 48);
  uint64_t v14 = *(void *)(a2 + 56);
  uint64_t v13 = *(void **)(a2 + 64);
  uint64_t v26 = *(void *)(a2 + 72);
  long long v27 = *(_OWORD *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 96);
  uint64_t v28 = *(void *)(a2 + 104);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    goto LABEL_5;
  }
  long long v24 = *(_OWORD *)(a1 + 32);
  long long v25 = *(_OWORD *)(a1 + 16);
  long long v22 = *(_OWORD *)(a2 + 32);
  long long v23 = *(_OWORD *)(a2 + 16);
  char v16 = sub_249AEE0D8();
  long long v11 = v22;
  long long v10 = v23;
  long long v3 = v24;
  long long v2 = v25;
  char v17 = v16;
  uint64_t result = 0;
  if (v17)
  {
LABEL_5:
    long long v34 = v2;
    long long v35 = v3;
    char v36 = v4;
    long long v31 = v10;
    long long v32 = v11;
    char v33 = v12;
    char v19 = _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)&v34, (uint64_t)&v31);
    uint64_t result = 0;
    if ((v19 & 1) != 0 && v6 == v14)
    {
      uint64_t v20 = v15 & 0xFE;
      if ((~(_BYTE)v9 & 0xFE) == 0)
      {
        if (v20 == 254) {
          return 1;
        }
        goto LABEL_11;
      }
      if (v20 == 254)
      {
        sub_24988247C(v5, v8, v7, v30, v9);
        sub_24988247C(v5, v8, v7, v30, v9);
        sub_2498826E4(v5, v8, v7, v30, v9);
LABEL_11:
        sub_249882468(v13, v26, (void *)v27, *((uint64_t *)&v27 + 1), v15);
        sub_2498826D0(v5, v8, v7, v30, v9);
        sub_2498826D0(v13, v26, (void *)v27, *((uint64_t *)&v27 + 1), v15);
        return 0;
      }
      *(void *)&long long v34 = v5;
      *((void *)&v34 + 1) = v8;
      *(void *)&long long v35 = v7;
      *((void *)&v35 + 1) = v30;
      char v36 = v9;
      *(void *)&long long v31 = v13;
      *((void *)&v31 + 1) = v26;
      long long v32 = v27;
      char v33 = v15;
      sub_24988247C(v5, v8, v7, v30, v9);
      sub_24988247C(v5, v8, v7, v30, v9);
      unsigned __int8 v21 = _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)&v34, (uint64_t)&v31);
      sub_2498826E4(v5, v8, v7, v30, v9);
      sub_2498826D0(v5, v8, v7, v30, v9);
      return v21 & (v29 == v28);
    }
  }
  return result;
}

uint64_t _s14CarPlayAssetUI10InstrumentV15PopoverLocationO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  long long v3 = (void *)a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = (void *)a1[4];
  uint64_t v6 = a1[5];
  uint64_t v7 = a1[6];
  uint64_t v8 = a1[7];
  uint64_t v9 = (void *)a1[8];
  uint64_t v10 = a1[9];
  long long v11 = (void *)a1[10];
  uint64_t v12 = a1[11];
  uint64_t v14 = a1[12];
  uint64_t v13 = a1[13];
  uint64_t v15 = *a2;
  uint64_t v16 = a2[1];
  char v17 = (void *)a2[2];
  uint64_t v18 = a2[3];
  char v19 = (void *)a2[4];
  uint64_t v20 = a2[5];
  uint64_t v21 = a2[6];
  uint64_t v22 = a2[7];
  long long v24 = (void *)a2[8];
  uint64_t v23 = a2[9];
  long long v25 = (void *)a2[10];
  uint64_t v26 = a2[11];
  uint64_t v28 = a2[12];
  uint64_t v27 = a2[13];
  uint64_t v29 = *a1;
  v88[0] = v29;
  v88[1] = v2;
  v88[2] = v3;
  v88[3] = v4;
  v88[4] = v5;
  v88[5] = v6;
  v88[6] = v7;
  v88[7] = v8;
  v88[8] = v9;
  v88[9] = v10;
  v88[10] = v11;
  v88[11] = v12;
  v88[12] = v14;
  v88[13] = v13;
  uint64_t v67 = v15;
  uint64_t v68 = v17;
  v88[14] = v15;
  uint64_t v30 = v16;
  v88[15] = v16;
  v88[16] = v17;
  uint64_t v69 = v18;
  v88[17] = v18;
  v88[18] = v19;
  v88[19] = v20;
  v88[20] = v21;
  uint64_t v31 = v22;
  v88[21] = v22;
  v88[22] = v24;
  v88[23] = v23;
  long long v32 = v25;
  v88[24] = v25;
  v88[25] = v26;
  v88[26] = v28;
  v88[27] = v27;
  if (!v2)
  {
    if (!v30)
    {
      sub_249A74FFC((uint64_t)v88);
      char v40 = 1;
      return v40 & 1;
    }
    goto LABEL_5;
  }
  if (!v30)
  {
LABEL_5:
    char v48 = v14;
    uint64_t v41 = v2;
    uint64_t v42 = v19;
    uint64_t v43 = v20;
    char v44 = v21;
    sub_2498FC8BC(v29, v41, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v48);
    sub_2498FC8BC(v67, v30, v68, v69, v42, v43, v44, v31, v24, v23, v25, v26, v28);
    sub_249A74FFC((uint64_t)v88);
    char v40 = 0;
    return v40 & 1;
  }
  v79[0] = v29;
  v79[1] = v2;
  v79[2] = v3;
  v79[3] = v4;
  v79[4] = v5;
  v79[5] = v6;
  char v80 = v7;
  uint64_t v81 = v8;
  uint64_t v82 = v9;
  uint64_t v83 = v10;
  char v84 = v11;
  uint64_t v85 = v12;
  uint64_t v86 = v14;
  uint64_t v87 = v13;
  uint64_t v59 = v12;
  char v60 = v14;
  v70[0] = v15;
  v70[1] = v30;
  char v52 = v28;
  uint64_t v53 = v22;
  v70[2] = v68;
  v70[3] = v18;
  v70[4] = v19;
  v70[5] = v20;
  char v71 = v21;
  uint64_t v72 = v22;
  uint64_t v73 = v24;
  uint64_t v74 = v23;
  char v75 = v25;
  uint64_t v50 = v25;
  uint64_t v51 = v23;
  uint64_t v76 = v26;
  uint64_t v77 = v28;
  uint64_t v78 = v27;
  char v47 = v28;
  uint64_t v46 = v23;
  char v33 = v3;
  uint64_t v55 = v3;
  uint64_t v56 = v8;
  uint64_t v34 = v4;
  uint64_t v64 = v9;
  uint64_t v65 = v4;
  char v57 = v7;
  uint64_t v58 = v5;
  uint64_t v35 = v6;
  uint64_t v61 = v2;
  uint64_t v36 = v29;
  uint64_t v37 = v9;
  uint64_t v38 = v10;
  uint64_t v66 = v10;
  uint64_t v39 = v11;
  uint64_t v62 = v19;
  uint64_t v63 = v20;
  char v49 = v21;
  sub_2498FC8BC(v15, v30, v68, v18, v19, v20, v21, v31, v24, v46, v32, v26, v47);
  uint64_t v54 = v39;
  sub_2498FC8BC(v36, v61, v33, v34, v58, v35, v57, v56, v37, v38, v39, v59, v60);
  sub_2498FC8BC(v36, v61, v55, v65, v58, v35, v57, v56, v64, v66, v39, v59, v60);
  sub_2498FC8BC(v67, v30, v68, v69, v62, v63, v49, v53, v24, v51, v50, v26, v52);
  char v40 = _s14CarPlayAssetUI10InstrumentV15PopoverLocationO18LocalConfigurationV2eeoiySbAG_AGtFZ_0((uint64_t)v79, (uint64_t)v70);
  sub_249A74FFC((uint64_t)v88);
  sub_2498FDEF4(v67, v30, v68, v69, v62, v63, v49, v53, v24, v51, v50, v26, v52);
  sub_2498FDEF4(v36, v61, v55, v65, v58, v35, v57, v56, v64, v66, v54, v59, v60);
  return v40 & 1;
}

uint64_t sub_249A74FFC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 120);
  uint64_t v13 = *(void *)(a1 + 112);
  long long v3 = *(void **)(a1 + 128);
  uint64_t v4 = *(void *)(a1 + 136);
  uint64_t v5 = *(void **)(a1 + 144);
  uint64_t v6 = *(void *)(a1 + 152);
  uint64_t v7 = *(void *)(a1 + 160);
  uint64_t v8 = *(void *)(a1 + 168);
  long long v11 = *(_OWORD *)(a1 + 192);
  long long v12 = *(_OWORD *)(a1 + 176);
  uint64_t v9 = *(void *)(a1 + 208);
  sub_2498FDEF4(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(void **)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void **)(a1 + 64), *(void *)(a1 + 72), *(void **)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96));
  sub_2498FDEF4(v13, v2, v3, v4, v5, v6, v7, v8, (void *)v12, *((uint64_t *)&v12 + 1), (void *)v11, *((uint64_t *)&v11 + 1), v9);
  return a1;
}

unint64_t sub_249A750C8()
{
  unint64_t result = qword_2696E4AC0;
  if (!qword_2696E4AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4AC0);
  }
  return result;
}

unint64_t sub_249A7511C()
{
  unint64_t result = qword_2696E4AC8;
  if (!qword_2696E4AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4AC8);
  }
  return result;
}

unint64_t sub_249A75170()
{
  unint64_t result = qword_2696E4AD8;
  if (!qword_2696E4AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4AD8);
  }
  return result;
}

unint64_t sub_249A751C4()
{
  unint64_t result = qword_2696E4AE8;
  if (!qword_2696E4AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4AE8);
  }
  return result;
}

unint64_t sub_249A75218()
{
  unint64_t result = qword_2696E4B10;
  if (!qword_2696E4B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4B10);
  }
  return result;
}

unint64_t sub_249A7526C()
{
  unint64_t result = qword_2696E4B18;
  if (!qword_2696E4B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4B18);
  }
  return result;
}

unint64_t sub_249A752C0()
{
  unint64_t result = qword_2696E4B20;
  if (!qword_2696E4B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4B20);
  }
  return result;
}

unint64_t sub_249A75314()
{
  unint64_t result = qword_2696E4B28;
  if (!qword_2696E4B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4B28);
  }
  return result;
}

unint64_t sub_249A75368()
{
  unint64_t result = qword_2696E4B48;
  if (!qword_2696E4B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4B48);
  }
  return result;
}

unint64_t sub_249A753C0()
{
  unint64_t result = qword_2696E4B50;
  if (!qword_2696E4B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4B50);
  }
  return result;
}

unint64_t sub_249A75418()
{
  unint64_t result = qword_2696E4B58;
  if (!qword_2696E4B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4B58);
  }
  return result;
}

unint64_t sub_249A75470()
{
  unint64_t result = qword_2696E4B60;
  if (!qword_2696E4B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4B60);
  }
  return result;
}

void _s20PopoverConfigurationVwxx(uint64_t a1)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    sub_2498826E4(*(void **)(a1 + 16), *(void *)(a1 + 24), *(void **)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
    uint64_t v2 = *(void *)(a1 + 96);
    if ((~*(_DWORD *)(a1 + 96) & 0xFELL) != 0)
    {
      long long v3 = *(void **)(a1 + 64);
      uint64_t v4 = *(void *)(a1 + 72);
      uint64_t v5 = *(void **)(a1 + 80);
      uint64_t v6 = *(void *)(a1 + 88);
      sub_2498826E4(v3, v4, v5, v6, v2);
    }
  }
}

uint64_t _s20PopoverConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    uint64_t v5 = *(void **)(a2 + 16);
    uint64_t v6 = *(void *)(a2 + 24);
    uint64_t v7 = *(void **)(a2 + 32);
    uint64_t v8 = *(void *)(a2 + 40);
    char v9 = *(unsigned char *)(a2 + 48);
    swift_bridgeObjectRetain();
    sub_24988247C(v5, v6, v7, v8, v9);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    *(unsigned char *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    uint64_t v10 = *(void *)(a2 + 96);
    if ((~*(_DWORD *)(a2 + 96) & 0xFELL) != 0)
    {
      uint64_t v15 = *(void **)(a2 + 64);
      uint64_t v16 = *(void *)(a2 + 72);
      char v17 = *(void **)(a2 + 80);
      uint64_t v18 = *(void *)(a2 + 88);
      sub_24988247C(v15, v16, v17, v18, *(void *)(a2 + 96));
      *(void *)(a1 + 64) = v15;
      *(void *)(a1 + 72) = v16;
      *(void *)(a1 + 80) = v17;
      *(void *)(a1 + 88) = v18;
      *(unsigned char *)(a1 + 96) = v10;
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
    }
    else
    {
      long long v11 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v11;
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    }
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v12;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    long long v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    long long v14 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v14;
  }
  return a1;
}

uint64_t _s20PopoverConfigurationVwca(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (!*(void *)(a1 + 8))
  {
    if (!v4)
    {
      long long v39 = *a2;
      long long v40 = a2[2];
      *(_OWORD *)(a1 + 16) = a2[1];
      *(_OWORD *)(a1 + 32) = v40;
      *(_OWORD *)a1 = v39;
      long long v41 = a2[3];
      long long v42 = a2[4];
      long long v43 = a2[6];
      *(_OWORD *)(a1 + 80) = a2[5];
      *(_OWORD *)(a1 + 96) = v43;
      *(_OWORD *)(a1 + 48) = v41;
      *(_OWORD *)(a1 + 64) = v42;
      return a1;
    }
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    uint64_t v21 = (void *)*((void *)a2 + 2);
    uint64_t v22 = *((void *)a2 + 3);
    uint64_t v23 = (void *)*((void *)a2 + 4);
    uint64_t v24 = *((void *)a2 + 5);
    char v25 = *((unsigned char *)a2 + 48);
    swift_bridgeObjectRetain();
    sub_24988247C(v21, v22, v23, v24, v25);
    *(void *)(a1 + 16) = v21;
    *(void *)(a1 + 24) = v22;
    *(void *)(a1 + 32) = v23;
    *(void *)(a1 + 40) = v24;
    *(unsigned char *)(a1 + 48) = v25;
    *(void *)(a1 + 56) = *((void *)a2 + 7);
    uint64_t v17 = *((void *)a2 + 12);
    if ((~*((_DWORD *)a2 + 24) & 0xFELL) == 0)
    {
      long long v26 = a2[4];
      long long v27 = a2[6];
      *(_OWORD *)(a1 + 80) = a2[5];
      *(_OWORD *)(a1 + 96) = v27;
      *(_OWORD *)(a1 + 64) = v26;
      return a1;
    }
    goto LABEL_10;
  }
  if (!v4)
  {
    sub_249A75898(a1);
    long long v29 = a2[1];
    long long v28 = a2[2];
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 16) = v29;
    *(_OWORD *)(a1 + 32) = v28;
    long long v30 = a2[6];
    long long v32 = a2[3];
    long long v31 = a2[4];
    *(_OWORD *)(a1 + 80) = a2[5];
    *(_OWORD *)(a1 + 96) = v30;
    *(_OWORD *)(a1 + 48) = v32;
    *(_OWORD *)(a1 + 64) = v31;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)*((void *)a2 + 2);
  uint64_t v6 = *((void *)a2 + 3);
  uint64_t v7 = (void *)*((void *)a2 + 4);
  uint64_t v8 = *((void *)a2 + 5);
  char v9 = *((unsigned char *)a2 + 48);
  sub_24988247C(v5, v6, v7, v8, v9);
  uint64_t v10 = *(void **)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  long long v12 = *(void **)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  char v14 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_2498826E4(v10, v11, v12, v13, v14);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  uint64_t v15 = (_OWORD *)(a1 + 64);
  uint64_t v16 = a2 + 4;
  uint64_t v17 = *((void *)a2 + 12);
  uint64_t v18 = v17 & 0xFE;
  if ((~*(_DWORD *)(a1 + 96) & 0xFELL) != 0)
  {
    if (v18 == 254)
    {
      sub_2499C5438(a1 + 64);
      long long v38 = a2[5];
      long long v37 = a2[6];
      *uint64_t v15 = *v16;
      *(_OWORD *)(a1 + 80) = v38;
      *(_OWORD *)(a1 + 96) = v37;
      return a1;
    }
    char v44 = (void *)*((void *)a2 + 8);
    uint64_t v45 = *((void *)a2 + 9);
    uint64_t v46 = (void *)*((void *)a2 + 10);
    uint64_t v47 = *((void *)a2 + 11);
    sub_24988247C(v44, v45, v46, v47, *((void *)a2 + 12));
    char v48 = *(void **)(a1 + 64);
    uint64_t v49 = *(void *)(a1 + 72);
    uint64_t v50 = *(void **)(a1 + 80);
    uint64_t v51 = *(void *)(a1 + 88);
    *(void *)(a1 + 64) = v44;
    *(void *)(a1 + 72) = v45;
    *(void *)(a1 + 80) = v46;
    *(void *)(a1 + 88) = v47;
    char v52 = *(unsigned char *)(a1 + 96);
    *(unsigned char *)(a1 + 96) = v17;
    sub_2498826E4(v48, v49, v50, v51, v52);
LABEL_15:
    *(void *)(a1 + 104) = *((void *)a2 + 13);
    return a1;
  }
  if (v18 != 254)
  {
LABEL_10:
    char v33 = (void *)*((void *)a2 + 8);
    uint64_t v34 = *((void *)a2 + 9);
    uint64_t v35 = (void *)*((void *)a2 + 10);
    uint64_t v36 = *((void *)a2 + 11);
    sub_24988247C(v33, v34, v35, v36, v17);
    *(void *)(a1 + 64) = v33;
    *(void *)(a1 + 72) = v34;
    *(void *)(a1 + 80) = v35;
    *(void *)(a1 + 88) = v36;
    *(unsigned char *)(a1 + 96) = v17;
    goto LABEL_15;
  }
  long long v19 = *v16;
  long long v20 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v20;
  *uint64_t v15 = v19;
  return a1;
}

uint64_t sub_249A75898(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4B68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s20PopoverConfigurationVwta(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 8)) {
    goto LABEL_8;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (!v4)
  {
    sub_249A75898(a1);
LABEL_8:
    long long v15 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v15;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    long long v16 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v16;
    long long v17 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v17;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void **)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void **)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v10;
  char v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v5;
  sub_2498826E4(v6, v7, v8, v9, v11);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  int v12 = *(_DWORD *)(a1 + 96);
  if ((~(_BYTE)v12 & 0xFE) != 0)
  {
    uint64_t v13 = *(void *)(a2 + 96);
    if ((~*(_DWORD *)(a2 + 96) & 0xFELL) != 0)
    {
      long long v19 = *(void **)(a1 + 64);
      uint64_t v20 = *(void *)(a1 + 72);
      uint64_t v21 = *(void **)(a1 + 80);
      uint64_t v22 = *(void *)(a1 + 88);
      long long v23 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v23;
      *(unsigned char *)(a1 + 96) = v13;
      sub_2498826E4(v19, v20, v21, v22, v12);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      return a1;
    }
    sub_2499C5438(a1 + 64);
  }
  long long v14 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v14;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  return a1;
}

uint64_t _s20PopoverConfigurationVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 112)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s20PopoverConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.PopoverConfiguration()
{
  return &type metadata for Instrument.PopoverConfiguration;
}

void _s15PopoverLocationOwxx(uint64_t a1)
{
  if (*(void *)(a1 + 8) >= 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    sub_2498826E4(*(void **)(a1 + 16), *(void *)(a1 + 24), *(void **)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
    uint64_t v2 = *(void *)(a1 + 96);
    if ((~*(_DWORD *)(a1 + 96) & 0xFELL) != 0)
    {
      unint64_t v3 = *(void **)(a1 + 64);
      uint64_t v4 = *(void *)(a1 + 72);
      char v5 = *(void **)(a1 + 80);
      uint64_t v6 = *(void *)(a1 + 88);
      sub_2498826E4(v3, v4, v5, v6, v2);
    }
  }
}

uint64_t _s15PopoverLocationOwcp(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    long long v12 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v12;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    long long v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    long long v14 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v14;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    char v5 = *(void **)(a2 + 16);
    uint64_t v6 = *(void *)(a2 + 24);
    uint64_t v7 = *(void **)(a2 + 32);
    uint64_t v8 = *(void *)(a2 + 40);
    char v9 = *(unsigned char *)(a2 + 48);
    swift_bridgeObjectRetain();
    sub_24988247C(v5, v6, v7, v8, v9);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    *(unsigned char *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    uint64_t v10 = *(void *)(a2 + 96);
    if ((~*(_DWORD *)(a2 + 96) & 0xFELL) != 0)
    {
      long long v15 = *(void **)(a2 + 64);
      uint64_t v16 = *(void *)(a2 + 72);
      long long v17 = *(void **)(a2 + 80);
      uint64_t v18 = *(void *)(a2 + 88);
      sub_24988247C(v15, v16, v17, v18, *(void *)(a2 + 96));
      *(void *)(a1 + 64) = v15;
      *(void *)(a1 + 72) = v16;
      *(void *)(a1 + 80) = v17;
      *(void *)(a1 + 88) = v18;
      *(unsigned char *)(a1 + 96) = v10;
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
    }
    else
    {
      long long v11 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v11;
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    }
  }
  return a1;
}

uint64_t _s15PopoverLocationOwca(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      uint64_t v21 = (void *)*((void *)a2 + 2);
      uint64_t v22 = *((void *)a2 + 3);
      long long v23 = (void *)*((void *)a2 + 4);
      uint64_t v24 = *((void *)a2 + 5);
      char v25 = *((unsigned char *)a2 + 48);
      swift_bridgeObjectRetain();
      sub_24988247C(v21, v22, v23, v24, v25);
      *(void *)(a1 + 16) = v21;
      *(void *)(a1 + 24) = v22;
      *(void *)(a1 + 32) = v23;
      *(void *)(a1 + 40) = v24;
      *(unsigned char *)(a1 + 48) = v25;
      *(void *)(a1 + 56) = *((void *)a2 + 7);
      uint64_t v17 = *((void *)a2 + 12);
      if ((~*((_DWORD *)a2 + 24) & 0xFELL) == 0)
      {
        long long v26 = a2[4];
        long long v27 = a2[6];
        *(_OWORD *)(a1 + 80) = a2[5];
        *(_OWORD *)(a1 + 96) = v27;
        *(_OWORD *)(a1 + 64) = v26;
        return a1;
      }
      goto LABEL_12;
    }
LABEL_11:
    long long v28 = *a2;
    long long v29 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v29;
    *(_OWORD *)a1 = v28;
    long long v30 = a2[3];
    long long v31 = a2[4];
    long long v32 = a2[6];
    *(_OWORD *)(a1 + 80) = a2[5];
    *(_OWORD *)(a1 + 96) = v32;
    *(_OWORD *)(a1 + 48) = v30;
    *(_OWORD *)(a1 + 64) = v31;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    sub_2498826E4(*(void **)(a1 + 16), *(void *)(a1 + 24), *(void **)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
    if ((~*(_DWORD *)(a1 + 96) & 0xFELL) != 0) {
      sub_2498826E4(*(void **)(a1 + 64), *(void *)(a1 + 72), *(void **)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96));
    }
    goto LABEL_11;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v5 = (void *)*((void *)a2 + 2);
  uint64_t v6 = *((void *)a2 + 3);
  uint64_t v7 = (void *)*((void *)a2 + 4);
  uint64_t v8 = *((void *)a2 + 5);
  char v9 = *((unsigned char *)a2 + 48);
  sub_24988247C(v5, v6, v7, v8, v9);
  uint64_t v10 = *(void **)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  long long v12 = *(void **)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  char v14 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_2498826E4(v10, v11, v12, v13, v14);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  long long v15 = (_OWORD *)(a1 + 64);
  uint64_t v16 = a2 + 4;
  uint64_t v17 = *((void *)a2 + 12);
  uint64_t v18 = v17 & 0xFE;
  if ((~*(_DWORD *)(a1 + 96) & 0xFELL) != 0)
  {
    if (v18 == 254)
    {
      sub_2499C5438(a1 + 64);
      long long v38 = a2[5];
      long long v37 = a2[6];
      *long long v15 = *v16;
      *(_OWORD *)(a1 + 80) = v38;
      *(_OWORD *)(a1 + 96) = v37;
      return a1;
    }
    long long v39 = (void *)*((void *)a2 + 8);
    uint64_t v40 = *((void *)a2 + 9);
    long long v41 = (void *)*((void *)a2 + 10);
    uint64_t v42 = *((void *)a2 + 11);
    sub_24988247C(v39, v40, v41, v42, *((void *)a2 + 12));
    long long v43 = *(void **)(a1 + 64);
    uint64_t v44 = *(void *)(a1 + 72);
    uint64_t v45 = *(void **)(a1 + 80);
    uint64_t v46 = *(void *)(a1 + 88);
    *(void *)(a1 + 64) = v39;
    *(void *)(a1 + 72) = v40;
    *(void *)(a1 + 80) = v41;
    *(void *)(a1 + 88) = v42;
    char v47 = *(unsigned char *)(a1 + 96);
    *(unsigned char *)(a1 + 96) = v17;
    sub_2498826E4(v43, v44, v45, v46, v47);
LABEL_16:
    *(void *)(a1 + 104) = *((void *)a2 + 13);
    return a1;
  }
  if (v18 != 254)
  {
LABEL_12:
    char v33 = (void *)*((void *)a2 + 8);
    uint64_t v34 = *((void *)a2 + 9);
    uint64_t v35 = (void *)*((void *)a2 + 10);
    uint64_t v36 = *((void *)a2 + 11);
    sub_24988247C(v33, v34, v35, v36, v17);
    *(void *)(a1 + 64) = v33;
    *(void *)(a1 + 72) = v34;
    *(void *)(a1 + 80) = v35;
    *(void *)(a1 + 88) = v36;
    *(unsigned char *)(a1 + 96) = v17;
    goto LABEL_16;
  }
  long long v19 = *v16;
  long long v20 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v20;
  *long long v15 = v19;
  return a1;
}

uint64_t _s15PopoverLocationOwta(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
LABEL_9:
    long long v15 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v15;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    long long v16 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v16;
    long long v17 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v17;
    return a1;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    sub_2498826E4(*(void **)(a1 + 16), *(void *)(a1 + 24), *(void **)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
    if ((~*(_DWORD *)(a1 + 96) & 0xFELL) != 0) {
      sub_2498826E4(*(void **)(a1 + 64), *(void *)(a1 + 72), *(void **)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96));
    }
    goto LABEL_9;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void **)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void **)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v10;
  char v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v5;
  sub_2498826E4(v6, v7, v8, v9, v11);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  int v12 = *(_DWORD *)(a1 + 96);
  if ((~(_BYTE)v12 & 0xFE) != 0)
  {
    uint64_t v13 = *(void *)(a2 + 96);
    if ((~*(_DWORD *)(a2 + 96) & 0xFELL) != 0)
    {
      long long v19 = *(void **)(a1 + 64);
      uint64_t v20 = *(void *)(a1 + 72);
      uint64_t v21 = *(void **)(a1 + 80);
      uint64_t v22 = *(void *)(a1 + 88);
      long long v23 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v23;
      *(unsigned char *)(a1 + 96) = v13;
      sub_2498826E4(v19, v20, v21, v22, v12);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      return a1;
    }
    sub_2499C5438(a1 + 64);
  }
  long long v14 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v14;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  return a1;
}

uint64_t _s15PopoverLocationOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 112)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t _s15PopoverLocationOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

double sub_249A760CC(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 104) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.PopoverLocation()
{
  return &type metadata for Instrument.PopoverLocation;
}

void _s15PopoverLocationO18LocalConfigurationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_2498826E4(*(void **)(a1 + 16), *(void *)(a1 + 24), *(void **)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
  uint64_t v2 = *(void *)(a1 + 96);
  if ((~*(_DWORD *)(a1 + 96) & 0xFELL) != 0)
  {
    unint64_t v3 = *(void **)(a1 + 64);
    uint64_t v4 = *(void *)(a1 + 72);
    char v5 = *(void **)(a1 + 80);
    uint64_t v6 = *(void *)(a1 + 88);
    sub_2498826E4(v3, v4, v5, v6, v2);
  }
}

uint64_t _s15PopoverLocationO18LocalConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  char v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void **)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  sub_24988247C(v5, v6, v7, v8, v9);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 96);
  if ((~*(_DWORD *)(a2 + 96) & 0xFELL) != 0)
  {
    int v12 = *(void **)(a2 + 64);
    uint64_t v13 = *(void *)(a2 + 72);
    long long v14 = *(void **)(a2 + 80);
    uint64_t v15 = *(void *)(a2 + 88);
    sub_24988247C(v12, v13, v14, v15, *(void *)(a2 + 96));
    *(void *)(a1 + 64) = v12;
    *(void *)(a1 + 72) = v13;
    *(void *)(a1 + 80) = v14;
    *(void *)(a1 + 88) = v15;
    *(unsigned char *)(a1 + 96) = v10;
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  }
  return a1;
}

uint64_t _s15PopoverLocationO18LocalConfigurationVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void **)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  char v8 = *(unsigned char *)(a2 + 48);
  sub_24988247C(v4, v5, v6, v7, v8);
  char v9 = *(void **)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  long long v11 = *(void **)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  char v13 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v8;
  sub_2498826E4(v9, v10, v11, v12, v13);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  long long v14 = (_OWORD *)(a1 + 64);
  uint64_t v15 = (_OWORD *)(a2 + 64);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = v16 & 0xFE;
  if ((~*(_DWORD *)(a1 + 96) & 0xFELL) != 0)
  {
    if (v17 == 254)
    {
      sub_2499C5438(a1 + 64);
      long long v21 = *(_OWORD *)(a2 + 80);
      long long v20 = *(_OWORD *)(a2 + 96);
      *long long v14 = *v15;
      *(_OWORD *)(a1 + 80) = v21;
      *(_OWORD *)(a1 + 96) = v20;
      return a1;
    }
    long long v26 = *(void **)(a2 + 64);
    uint64_t v27 = *(void *)(a2 + 72);
    long long v28 = *(void **)(a2 + 80);
    uint64_t v29 = *(void *)(a2 + 88);
    sub_24988247C(v26, v27, v28, v29, *(void *)(a2 + 96));
    long long v30 = *(void **)(a1 + 64);
    uint64_t v31 = *(void *)(a1 + 72);
    long long v32 = *(void **)(a1 + 80);
    uint64_t v33 = *(void *)(a1 + 88);
    *(void *)(a1 + 64) = v26;
    *(void *)(a1 + 72) = v27;
    *(void *)(a1 + 80) = v28;
    *(void *)(a1 + 88) = v29;
    char v34 = *(unsigned char *)(a1 + 96);
    *(unsigned char *)(a1 + 96) = v16;
    sub_2498826E4(v30, v31, v32, v33, v34);
LABEL_8:
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    return a1;
  }
  if (v17 != 254)
  {
    uint64_t v22 = *(void **)(a2 + 64);
    uint64_t v23 = *(void *)(a2 + 72);
    uint64_t v24 = *(void **)(a2 + 80);
    uint64_t v25 = *(void *)(a2 + 88);
    sub_24988247C(v22, v23, v24, v25, *(void *)(a2 + 96));
    *(void *)(a1 + 64) = v22;
    *(void *)(a1 + 72) = v23;
    *(void *)(a1 + 80) = v24;
    *(void *)(a1 + 88) = v25;
    *(unsigned char *)(a1 + 96) = v16;
    goto LABEL_8;
  }
  long long v18 = *v15;
  long long v19 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v19;
  *long long v14 = v18;
  return a1;
}

uint64_t _s15PopoverLocationO18LocalConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void **)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(void **)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v10;
  char v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v5;
  sub_2498826E4(v6, v7, v8, v9, v11);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  int v12 = *(_DWORD *)(a1 + 96);
  if ((~(_BYTE)v12 & 0xFE) != 0)
  {
    uint64_t v13 = *(void *)(a2 + 96);
    if ((~*(_DWORD *)(a2 + 96) & 0xFELL) != 0)
    {
      uint64_t v15 = *(void **)(a1 + 64);
      uint64_t v16 = *(void *)(a1 + 72);
      uint64_t v17 = *(void **)(a1 + 80);
      uint64_t v18 = *(void *)(a1 + 88);
      long long v19 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v19;
      *(unsigned char *)(a1 + 96) = v13;
      sub_2498826E4(v15, v16, v17, v18, v12);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      return a1;
    }
    sub_2499C5438(a1 + 64);
  }
  long long v14 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v14;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  return a1;
}

ValueMetadata *type metadata accessor for Instrument.PopoverLocation.LocalConfiguration()
{
  return &type metadata for Instrument.PopoverLocation.LocalConfiguration;
}

unsigned char *_s15PopoverLocationO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A76590);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s15PopoverLocationO10CodingKeysOMa()
{
  return &_s15PopoverLocationO10CodingKeysON;
}

ValueMetadata *_s15PopoverLocationO23LocalRendererCodingKeysOMa()
{
  return &_s15PopoverLocationO23LocalRendererCodingKeysON;
}

ValueMetadata *_s15PopoverLocationO16RemoteCodingKeysOMa()
{
  return &_s15PopoverLocationO16RemoteCodingKeysON;
}

unsigned char *_s15PopoverLocationO18LocalConfigurationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *double result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A766B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s15PopoverLocationO18LocalConfigurationV10CodingKeysOMa()
{
  return &_s15PopoverLocationO18LocalConfigurationV10CodingKeysON;
}

unsigned char *_s15PopoverLocationO23LocalRendererCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *double result = a2;
        return result;
      case 2:
        *(_WORD *)double result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)double result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *double result = 0;
      break;
    case 2:
      *(_WORD *)double result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x249A7678CLL);
    case 4:
      *(_DWORD *)double result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s20PopoverConfigurationV10CodingKeysOMa()
{
  return &_s20PopoverConfigurationV10CodingKeysON;
}

unint64_t sub_249A767C8()
{
  unint64_t result = qword_2696E4B70;
  if (!qword_2696E4B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4B70);
  }
  return result;
}

unint64_t sub_249A76820()
{
  unint64_t result = qword_2696E4B78;
  if (!qword_2696E4B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4B78);
  }
  return result;
}

unint64_t sub_249A76878()
{
  unint64_t result = qword_2696E4B80;
  if (!qword_2696E4B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4B80);
  }
  return result;
}

unint64_t sub_249A768D0()
{
  unint64_t result = qword_2696E4B88;
  if (!qword_2696E4B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4B88);
  }
  return result;
}

unint64_t sub_249A76928()
{
  unint64_t result = qword_2696E4B90;
  if (!qword_2696E4B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4B90);
  }
  return result;
}

unint64_t sub_249A76980()
{
  unint64_t result = qword_2696E4B98;
  if (!qword_2696E4B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4B98);
  }
  return result;
}

unint64_t sub_249A769D8()
{
  unint64_t result = qword_2696E4BA0;
  if (!qword_2696E4BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4BA0);
  }
  return result;
}

unint64_t sub_249A76A30()
{
  unint64_t result = qword_2696E4BA8;
  if (!qword_2696E4BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4BA8);
  }
  return result;
}

unint64_t sub_249A76A88()
{
  unint64_t result = qword_2696E4BB0;
  if (!qword_2696E4BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4BB0);
  }
  return result;
}

unint64_t sub_249A76AE0()
{
  unint64_t result = qword_2696E4BB8;
  if (!qword_2696E4BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4BB8);
  }
  return result;
}

unint64_t sub_249A76B38()
{
  unint64_t result = qword_2696E4BC0;
  if (!qword_2696E4BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4BC0);
  }
  return result;
}

unint64_t sub_249A76B90()
{
  unint64_t result = qword_2696E4BC8;
  if (!qword_2696E4BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4BC8);
  }
  return result;
}

unint64_t sub_249A76BE8()
{
  unint64_t result = qword_2696E4BD0;
  if (!qword_2696E4BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4BD0);
  }
  return result;
}

unint64_t sub_249A76C40()
{
  unint64_t result = qword_2696E4BD8;
  if (!qword_2696E4BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4BD8);
  }
  return result;
}

uint64_t sub_249A76C94(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x614E6D6165727473 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74754265736F6C63 && a2 == 0xEB000000006E6F74 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249B15CE0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_249A76E0C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65526C61636F6CLL && a2 == 0xED00007265726564;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746F6D6572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_249A76F1C()
{
  sub_2498826E4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t static TaggedValue<>.< infix(_:_:)()
{
  return sub_249AED008() & 1;
}

uint64_t TaggedValue<>.init()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
}

uint64_t TaggedValue.subscript.getter()
{
  return swift_getAtKeyPath();
}

uint64_t _s14CarPlayAssetUI11TaggedValueVyACyxq_Gq_cfC_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1);
}

uint64_t TaggedValue.rawValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2);
}

uint64_t sub_249A77040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  TaggedValue.init(rawValue:)(a1, a2, *(void *)(a2 + 24));
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);

  return v5(a3, 0, 1, a2);
}

uint64_t Optional.init()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 1, 1, a1);
}

uint64_t sub_249A770EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return Optional.init()(*(void *)(a1 + 16), a2);
}

uint64_t sub_249A770F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s14CarPlayAssetUI10EmptyArrayO7defaultSayxGvgZ_0();
  *a1 = result;
  return result;
}

uint64_t sub_249A77120@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_249AECE38();
  *a1 = result;
  return result;
}

uint64_t sub_249A77154(uint64_t a1, uint64_t a2)
{
  return TaggedValue<>.init()(a1, *(void *)(a1 + 24), *(void *)(a2 - 8));
}

uint64_t TaggedValue.description.getter(uint64_t a1)
{
  __n128 v1 = MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, __n128))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  return sub_249AED128();
}

uint64_t TaggedValue.playgroundDescription.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  a2[3] = v3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a2);
  uint64_t v5 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v5(boxed_opaque_existential_0, v2, v3);
}

uint64_t TaggedValue<>.init(BOOLeanLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_249A773E8(a1, a2, a3, MEMORY[0x263F8E268], a4);
}

uint64_t sub_249A772B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return TaggedValue<>.init(BOOLeanLiteral:)(a1, *(void *)(a2 + 24), *(void *)(a3 - 8), a4);
}

uint64_t TaggedValue<>.init(extendedGraphemeClusterLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_249A773E8(a1, a2, a3, MEMORY[0x263F8E478], a4);
}

uint64_t sub_249A772E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return TaggedValue<>.init(extendedGraphemeClusterLiteral:)(a1, *(void *)(a2 + 24), *(void *)(a3 - 8), a4);
}

uint64_t TaggedValue<>.init(floatLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_249A773E8(a1, a2, a3, MEMORY[0x263F8E1E0], a4);
}

uint64_t sub_249A77318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return TaggedValue<>.init(floatLiteral:)(a1, *(void *)(a2 + 24), *(void *)(a3 - 8), a4);
}

uint64_t TaggedValue<>.init(integerLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_249A773E8(a1, a2, a3, MEMORY[0x263F8E280], a4);
}

uint64_t sub_249A7734C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return TaggedValue<>.init(integerLiteral:)(a1, *(void *)(a2 + 24), *(void *)(a3 - 8), a4);
}

uint64_t TaggedValue<>.init(stringLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_249A773E8(a1, a2, a3, MEMORY[0x263F8E250], a4);
}

uint64_t sub_249A77380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return TaggedValue<>.init(stringLiteral:)(a1, *(void *)(a2 + 24), *(void *)(a3 - 8), a4);
}

uint64_t TaggedValue<>.init(stringInterpolation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_249A773E8(a1, a2, a3, MEMORY[0x263F8E438], a4);
}

uint64_t sub_249A773B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return TaggedValue<>.init(stringInterpolation:)(a1, *(void *)(a2 + 24), *(void *)(a3 - 8), a4);
}

uint64_t TaggedValue<>.init(unicodeScalarLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_249A773E8(a1, a2, a3, MEMORY[0x263F8E450], a4);
}

uint64_t sub_249A773E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void (*a4)(char *, uint64_t, uint64_t)@<X6>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v20 - v12;
  uint64_t v14 = *(void *)(a2 - 8);
  __n128 v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v13, a1, AssociatedTypeWitness, v16);
  a4(v13, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a5, v18, a2);
}

uint64_t sub_249A77594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return TaggedValue<>.init(unicodeScalarLiteral:)(a1, *(void *)(a2 + 24), *(void *)(a3 - 8), a4);
}

uint64_t sub_249A775A0()
{
  return static TaggedValue<>.< infix(_:_:)();
}

uint64_t TaggedValue<>.init<A>(codingKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v31 = a6;
  uint64_t v32 = a5;
  uint64_t v33 = a2;
  char v34 = a7;
  uint64_t v10 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_249AED8D8();
  uint64_t v13 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v16 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v17);
  long long v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v21 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v29 - v22;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, a1, a4, v21);
  sub_249AEDD18();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, a4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v30);
    uint64_t v24 = type metadata accessor for TaggedValue();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v34, 1, 1, v24);
  }
  else
  {
    long long v26 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v26(v23, v15, a3);
    v26(v19, v23, a3);
    uint64_t v27 = v34;
    v26(v34, v19, a3);
    uint64_t v28 = type metadata accessor for TaggedValue();
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
  }
}

uint64_t type metadata accessor for TaggedValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t TaggedValue<>.codingKey.getter(uint64_t a1)
{
  return MEMORY[0x270F9F238](*(void *)(a1 + 24));
}

uint64_t sub_249A77904(uint64_t a1)
{
  return TaggedValue<>.codingKey.getter(a1);
}

uint64_t sub_249A7790C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  return TaggedValue<>.init<A>(codingKey:)(a1, *(void *)(a4 + 16), *(void *)(a4 + 24), a2, *(void *)(a5 - 8), a3, a6);
}

uint64_t sub_249A77924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 - 8);
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t TaggedValue<>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v17 = a3;
  uint64_t v19 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  __n128 v21 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v15 - v8;
  uint64_t v10 = type metadata accessor for TaggedValue();
  uint64_t v15 = *(void *)(v10 - 8);
  uint64_t v16 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v18 = (char *)&v15 - v11;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249AEE418();
  if (v3)
  {
    sub_249882C34((uint64_t)a1, (uint64_t)v20);
    uint64_t v12 = v21;
    sub_249AED5B8();

    uint64_t v13 = v18;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v18, v12, a2);
  }
  else
  {
    __swift_project_boxed_opaque_existential_2Tm(v20, v20[3]);
    sub_249AEE128();
    uint64_t v13 = v18;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v18, v9, a2);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v20);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v17, v13, v16);
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

void TaggedValue<>.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249AEE458();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_249AEE178();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v2);
  if (v1)
  {
    sub_249AECF08();
  }
}

uint64_t sub_249A77D18@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return TaggedValue<>.init(from:)(a1, *(void *)(a2 + 24), a3);
}

void sub_249A77D3C(void *a1)
{
}

uint64_t sub_249A77D58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v4);
}

uint64_t sub_249A77DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v6);
}

uint64_t sub_249A77E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v6);
}

uint64_t TaggedValue<>.id.getter()
{
  return sub_249AEDAA8();
}

uint64_t sub_249A77EBC()
{
  return TaggedValue<>.id.getter();
}

uint64_t UUID.init(stringLiteral:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDE8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249AEB7C8();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_249AEB808();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  }
  __break(1u);
  return result;
}

uint64_t sub_249A77FD8()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_249A77FFC()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A78044()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_249A78068()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_249A7808C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_249A780B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A780F8()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_249A7811C()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A78164()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_249A78188()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_249A781AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A781F4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_249A78218()
{
  return sub_2498EC32C(&qword_2696E4BE0);
}

uint64_t sub_249A7824C()
{
  return MEMORY[0x263F8D388];
}

uint64_t sub_249A7825C()
{
  return sub_2498EC32C(qword_2696E4BE8);
}

uint64_t sub_249A78290()
{
  return MEMORY[0x263F8D398];
}

uint64_t sub_249A7829C()
{
  return MEMORY[0x263F8D390];
}

uint64_t sub_249A782A8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDE8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249AEB7C8();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a1 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, a1);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a2, v6, a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_249A783B0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_249A78440(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_249A784F8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 24) - 8) + 8))();
}

uint64_t sub_249A78524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_249A78574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_249A785C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_249A78614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_249A78664(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_249A787C0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x249A789D8);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t dispatch thunk of Initializable.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_249A78A18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_249AEBDD8();
  uint64_t v4 = v3 - 8;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4C88);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  unsigned int v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4C90);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  unsigned int v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v1 + 40);
  uint64_t v16 = (char *)v6 + *(int *)(v4 + 28);
  uint64_t v17 = *MEMORY[0x263F19860];
  uint64_t v18 = sub_249AEC108();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v16, v17, v18);
  *uint64_t v6 = v15;
  v6[1] = v15;
  uint64_t v19 = sub_249A78D14();
  sub_2498D5FC4((uint64_t)v6, (uint64_t)v10);
  *(void *)&v10[*(int *)(v8 + 44)] = v19;
  sub_2498D6028((uint64_t)v6);
  uint64_t v20 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PlatterView() + 32));
  uint64_t v21 = *v20;
  uint64_t v22 = v20[1];
  uint64_t v23 = v20[2];
  sub_2498D6084((uint64_t)v10, (uint64_t)v14, &qword_2696E4C88);
  uint64_t v24 = &v14[*(int *)(v12 + 44)];
  *(void *)uint64_t v24 = v21;
  *((void *)v24 + 1) = v22;
  *((void *)v24 + 2) = v23;
  swift_retain();
  sub_2498D60E8((uint64_t)v10, &qword_2696E4C88);
  uint64_t v25 = sub_249AECC28();
  uint64_t v27 = v26;
  uint64_t v28 = *(void *)v1;
  uint64_t v29 = *(void *)(v1 + 8);
  LOBYTE(v17) = *(unsigned char *)(v1 + 16);
  sub_249A7942C(*(void *)v1, v29, v17);
  sub_2499A72F0(v28, v29, v17);
  uint64_t v31 = v30;
  sub_2499AAE94(v28, v29, v17);
  if (v31)
  {
    double v32 = *(double *)(v1 + 40);
    id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15768]), sel_init);
    char v34 = (void *)sub_249AED0A8();
    swift_bridgeObjectRelease();
    objc_msgSend(v33, sel_setIdentifier_, v34);

    objc_msgSend(v33, sel_setCornerRadius_, v32);
  }
  else
  {
    id v33 = 0;
  }
  sub_2498D6084((uint64_t)v14, a1, &qword_2696E4C90);
  uint64_t v35 = (void *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E4C98) + 36));
  *uint64_t v35 = v33;
  v35[1] = v25;
  v35[2] = v27;
  return sub_2498D60E8((uint64_t)v14, &qword_2696E4C90);
}

uint64_t sub_249A78D14()
{
  uint64_t v1 = sub_249AECBE8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_249AEC838();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v0 + 24);
  char v10 = *(unsigned char *)(v0 + 32);
  sub_2499AAF0C(v9, v10);
  char v11 = sub_2499A6208(v9, v10);
  sub_2499AAF18(v9, v10);
  if (v11)
  {
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F1B388], v5);
    v14[1] = MEMORY[0x24C5ADA90](v8, 0.17254902, 0.17254902, 0.180392157, 1.0);
  }
  else
  {
    uint64_t v12 = type metadata accessor for PlatterView();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + *(int *)(v12 + 28), v1);
  }
  return sub_249AEBBF8();
}

uint64_t EnvironmentValues.opaquePlatterOverride.getter()
{
  sub_249A78F58();
  sub_249AEBFF8();
  return v1;
}

unint64_t sub_249A78F58()
{
  unint64_t result = qword_2696E4C70;
  if (!qword_2696E4C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4C70);
  }
  return result;
}

uint64_t sub_249A78FAC@<X0>(unsigned char *a1@<X8>)
{
  sub_249A78F58();
  uint64_t result = sub_249AEBFF8();
  *a1 = v3;
  return result;
}

uint64_t sub_249A78FFC()
{
  return sub_249AEC008();
}

uint64_t EnvironmentValues.opaquePlatterOverride.setter()
{
  return sub_249AEC008();
}

uint64_t (*EnvironmentValues.opaquePlatterOverride.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_249A78F58();
  sub_249AEBFF8();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_249A790F8;
}

uint64_t sub_249A790F8(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_249AEC008();
}

uint64_t PlatterShadowConfiguration.color.getter()
{
  return swift_retain();
}

uint64_t PlatterShadowConfiguration.color.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*PlatterShadowConfiguration.color.modify())()
{
  return nullsub_1;
}

double PlatterShadowConfiguration.radius.getter()
{
  return *(double *)(v0 + 8);
}

void PlatterShadowConfiguration.radius.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*PlatterShadowConfiguration.radius.modify())()
{
  return nullsub_1;
}

double PlatterShadowConfiguration.y.getter()
{
  return *(double *)(v0 + 16);
}

void PlatterShadowConfiguration.y.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*PlatterShadowConfiguration.y.modify())()
{
  return nullsub_1;
}

uint64_t PlatterShadowConfiguration.init(color:radius:y:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  *(void *)a2 = result;
  *(double *)(a2 + 8) = a3;
  *(double *)(a2 + 16) = a4;
  return result;
}

double static PlatterShadowConfiguration.centerConsoleDefault.getter@<D0>(uint64_t a1@<X8>)
{
  sub_249AEC888();
  uint64_t v2 = sub_249AEC8E8();
  swift_release();
  *(void *)a1 = v2;
  double result = 16.0;
  *(_OWORD *)(a1 + 8) = xmmword_249B0AE60;
  return result;
}

uint64_t sub_249A79248@<X0>(unsigned char *a1@<X8>)
{
  sub_249A78F58();
  uint64_t result = sub_249AEBFF8();
  *a1 = v3;
  return result;
}

uint64_t sub_249A79298()
{
  return sub_249AEC008();
}

ValueMetadata *type metadata accessor for PlatterShadowConfiguration()
{
  return &type metadata for PlatterShadowConfiguration;
}

unint64_t sub_249A792F8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    char v9 = *(unsigned char *)(a2 + 16);
    sub_249A7942C(*(void *)a2, v8, v9);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    uint64_t v10 = *(void *)(a2 + 24);
    LOBYTE(v8) = *(unsigned char *)(a2 + 32);
    sub_2499AAF0C(v10, v8);
    *(void *)(a1 + 24) = v10;
    *(unsigned char *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    uint64_t v11 = *(int *)(a3 + 28);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = a2 + v11;
    uint64_t v14 = sub_249AECBE8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = *(int *)(a3 + 32);
    uint64_t v16 = a1 + v15;
    uint64_t v17 = a2 + v15;
    *(void *)uint64_t v16 = *(void *)v17;
    *(_OWORD *)(v16 + 8) = *(_OWORD *)(v17 + 8);
  }
  swift_retain();
  return a1;
}

uint64_t sub_249A7942C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_249A7943C(uint64_t a1, uint64_t a2)
{
  sub_2499AAE94(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  sub_2499AAF18(*(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_249AECBE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_release();
}

uint64_t sub_249A794DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_249A7942C(*(void *)a2, v7, v8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  uint64_t v9 = *(void *)(a2 + 24);
  LOBYTE(v7) = *(unsigned char *)(a2 + 32);
  sub_2499AAF0C(v9, v7);
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_249AECBE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)v16;
  *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
  swift_retain();
  return a1;
}

uint64_t sub_249A795C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_249A7942C(*(void *)a2, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  char v11 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  sub_2499AAE94(v9, v10, v11);
  uint64_t v12 = *(void *)(a2 + 24);
  LOBYTE(v7) = *(unsigned char *)(a2 + 32);
  sub_2499AAF0C(v12, v7);
  uint64_t v13 = *(void *)(a1 + 24);
  char v14 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = v12;
  *(unsigned char *)(a1 + 32) = v7;
  sub_2499AAF18(v13, v14);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_249AECBE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = *(int *)(a3 + 32);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  swift_retain();
  swift_release();
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  return a1;
}

uint64_t sub_249A796D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_249AECBE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  return a1;
}

uint64_t sub_249A797A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v6;
  sub_2499AAE94(v7, v8, v9);
  char v10 = *(unsigned char *)(a2 + 32);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v10;
  sub_2499AAF18(v11, v12);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_249AECBE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = *(int *)(a3 + 32);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)(a1 + v17) = *(void *)v19;
  swift_release();
  *(_OWORD *)(v18 + 8) = *(_OWORD *)(v19 + 8);
  return a1;
}

uint64_t sub_249A7988C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249A798A0);
}

uint64_t sub_249A798A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_249AECBE8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    char v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t sub_249A79970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249A79984);
}

uint64_t sub_249A79984(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_249AECBE8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 28);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = a2;
  }
  return result;
}

uint64_t type metadata accessor for PlatterView()
{
  uint64_t result = qword_2696E4C78;
  if (!qword_2696E4C78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_249A79A90()
{
  uint64_t result = sub_249AECBE8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for OpaquePlatterOverrideKey()
{
  return &type metadata for OpaquePlatterOverrideKey;
}

uint64_t sub_249A79B58()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249A79B74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v21[1] = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4CE8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4CF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4CF8);
  __n128 v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v2;
  if (*v2)
  {
    uint64_t v17 = v2[1];
    uint64_t v16 = v2[2];
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v14, a1, v4, v12);
    uint64_t v18 = &v14[*(int *)(v11 + 36)];
    *(void *)uint64_t v18 = v15;
    *((void *)v18 + 1) = v17;
    *((void *)v18 + 2) = 0;
    *((void *)v18 + 3) = v16;
    sub_2498D6084((uint64_t)v14, (uint64_t)v10, &qword_2696E4CF8);
    swift_storeEnumTagMultiPayload();
    sub_249A7A1D4();
    sub_2498D0A3C(&qword_2696E4D08, &qword_2696E4CE8);
    swift_retain();
    sub_249AEC248();
    return sub_2498D60E8((uint64_t)v14, &qword_2696E4CF8);
  }
  else
  {
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
    v20(v7, a1, v4, v12);
    ((void (*)(char *, char *, uint64_t))v20)(v10, v7, v4);
    swift_storeEnumTagMultiPayload();
    sub_249A7A1D4();
    sub_2498D0A3C(&qword_2696E4D08, &qword_2696E4CE8);
    sub_249AEC248();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ConditionalShadowModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t destroy for ConditionalShadowModifier()
{
  return swift_release();
}

void *_s14CarPlayAssetUI26PlatterShadowConfigurationVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for ConditionalShadowModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for ConditionalShadowModifier()
{
  return &type metadata for ConditionalShadowModifier;
}

unint64_t sub_249A79F50()
{
  unint64_t result = qword_2696E4CA0;
  if (!qword_2696E4CA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E4C98);
    sub_249A79FF0();
    sub_2498D0A3C(&qword_2696E4CD8, &qword_2696E4CE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4CA0);
  }
  return result;
}

unint64_t sub_249A79FF0()
{
  unint64_t result = qword_2696E4CA8;
  if (!qword_2696E4CA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E4C90);
    sub_249A7A06C();
    sub_249A7A164();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4CA8);
  }
  return result;
}

unint64_t sub_249A7A06C()
{
  unint64_t result = qword_2696E4CB0;
  if (!qword_2696E4CB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E4C88);
    sub_249A7A10C();
    sub_2498D0A3C(&qword_2696E4CC0, &qword_2696E4CC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4CB0);
  }
  return result;
}

unint64_t sub_249A7A10C()
{
  unint64_t result = qword_2696E4CB8;
  if (!qword_2696E4CB8)
  {
    sub_249AEBDD8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4CB8);
  }
  return result;
}

unint64_t sub_249A7A164()
{
  unint64_t result = qword_2696E4CD0;
  if (!qword_2696E4CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4CD0);
  }
  return result;
}

uint64_t sub_249A7A1B8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_249A7A1D4()
{
  unint64_t result = qword_2696E4D00;
  if (!qword_2696E4D00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E4CF8);
    sub_2498D0A3C(&qword_2696E4D08, &qword_2696E4CE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4D00);
  }
  return result;
}

unint64_t sub_249A7A278()
{
  unint64_t result = qword_2696E4D10;
  if (!qword_2696E4D10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E4D18);
    sub_249A7A1D4();
    sub_2498D0A3C(&qword_2696E4D08, &qword_2696E4CE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4D10);
  }
  return result;
}

double SystemUILayout.ContentArea.frame.getter()
{
  return *(double *)v0;
}

void SystemUILayout.ContentArea.frame.setter(double a1, double a2, double a3, double a4)
{
  *uint64_t v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  _OWORD v4[3] = a4;
}

uint64_t (*SystemUILayout.ContentArea.frame.modify())()
{
  return nullsub_1;
}

CarPlayAssetUI::SystemUILayout::ContentArea __swiftcall SystemUILayout.ContentArea.init(frame:)(CarPlayAssetUI::SystemUILayout::ContentArea frame)
{
  *unint64_t v1 = frame;
  return frame;
}

uint64_t sub_249A7A368()
{
  return 0x656D617266;
}

uint64_t sub_249A7A37C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656D617266 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249A7A40C(uint64_t a1)
{
  unint64_t v2 = sub_249A7A604();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A7A448(uint64_t a1)
{
  unint64_t v2 = sub_249A7A604();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SystemUILayout.ContentArea.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4D20);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[0] = *(_OWORD *)v1;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A7A604();
  sub_249AEE468();
  v10[1] = v10[0];
  uint64_t v11 = v7;
  uint64_t v12 = v8;
  type metadata accessor for CGRect(0);
  sub_249A7A7E8(&qword_2696DF690);
  sub_249AEDF08();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_249A7A604()
{
  unint64_t result = qword_2696E4D28;
  if (!qword_2696E4D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4D28);
  }
  return result;
}

uint64_t SystemUILayout.ContentArea.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4D30);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A7A604();
  sub_249AEE428();
  if (!v2)
  {
    type metadata accessor for CGRect(0);
    sub_249A7A7E8(&qword_2696DF6D8);
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v9 = v11[1];
    *a2 = v11[0];
    a2[1] = v9;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_249A7A7E8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CGRect(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249A7A82C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return SystemUILayout.ContentArea.init(from:)(a1, a2);
}

uint64_t sub_249A7A844(void *a1)
{
  return SystemUILayout.ContentArea.encode(to:)(a1);
}

__n128 SystemUILayout.primaryContentArea.getter@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

__n128 SystemUILayout.primaryContentArea.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *uint64_t v1 = *(_OWORD *)a1;
  v1[1] = v3;
  return result;
}

uint64_t (*SystemUILayout.primaryContentArea.modify())()
{
  return nullsub_1;
}

__n128 SystemUILayout.secondaryContentArea.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 64);
  __n128 result = *(__n128 *)(v1 + 32);
  long long v4 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

__n128 SystemUILayout.secondaryContentArea.setter(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 32);
  __n128 result = *(__n128 *)a1;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 48) = v4;
  *(unsigned char *)(v1 + 64) = v2;
  return result;
}

uint64_t (*SystemUILayout.secondaryContentArea.modify())()
{
  return nullsub_1;
}

uint64_t SystemUILayout.hasDualStatusBar.getter()
{
  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t SystemUILayout.hasDualStatusBar.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 65) = result;
  return result;
}

uint64_t (*SystemUILayout.hasDualStatusBar.modify())()
{
  return nullsub_1;
}

uint64_t SystemUILayout.hasPhysicalControlBars.getter()
{
  return *(unsigned __int8 *)(v0 + 66);
}

uint64_t SystemUILayout.hasPhysicalControlBars.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 66) = result;
  return result;
}

uint64_t (*SystemUILayout.hasPhysicalControlBars.modify())()
{
  return nullsub_1;
}

void __swiftcall SystemUILayout.init(primaryContentArea:secondaryContentArea:hasDualStatusBar:hasPhysicalControlBars:)(CarPlayAssetUI::SystemUILayout *__return_ptr retstr, CarPlayAssetUI::SystemUILayout::ContentArea primaryContentArea, CarPlayAssetUI::SystemUILayout::ContentArea_optional *secondaryContentArea, Swift::Bool hasDualStatusBar, Swift::Bool hasPhysicalControlBars)
{
  char v6 = *(unsigned char *)(hasDualStatusBar + 32);
  CGSize size = secondaryContentArea->value.frame.size;
  retstr->primaryContentArea.frame.origin = secondaryContentArea->value.frame.origin;
  retstr->primaryContentArea.frame.CGSize size = size;
  CGSize v8 = *(CGSize *)(hasDualStatusBar + 16);
  retstr->secondaryContentArea.value.frame.origin = *(CGPoint *)hasDualStatusBar;
  retstr->secondaryContentArea.value.frame.CGSize size = v8;
  retstr->secondaryContentArea.is_nil = v6;
  retstr->hasDualStatusBar = hasPhysicalControlBars;
  retstr->hasPhysicalControlBars = v5;
}

unint64_t sub_249A7A960(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_249A7A9F8()
{
  return sub_249A7A960(*v0);
}

uint64_t sub_249A7AA00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A7B574(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A7AA28(uint64_t a1)
{
  unint64_t v2 = sub_249A7ACE4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A7AA64(uint64_t a1)
{
  unint64_t v2 = sub_249A7ACE4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SystemUILayout.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4D38);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v18 = *v1;
  uint64_t v8 = *((void *)v1 + 2);
  uint64_t v9 = *((void *)v1 + 3);
  uint64_t v10 = *((void *)v1 + 4);
  uint64_t v16 = *((void *)v1 + 5);
  uint64_t v17 = v10;
  uint64_t v11 = *((void *)v1 + 6);
  uint64_t v14 = *((void *)v1 + 7);
  uint64_t v15 = v11;
  int v23 = *((unsigned __int8 *)v1 + 64);
  v13[3] = *((unsigned __int8 *)v1 + 65);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A7ACE4();
  sub_249AEE468();
  long long v19 = v18;
  uint64_t v20 = v8;
  uint64_t v21 = v9;
  char v24 = 0;
  sub_249A7AD38();
  sub_249AEDF08();
  if (!v2)
  {
    *(void *)&long long v19 = v17;
    *((void *)&v19 + 1) = v16;
    uint64_t v20 = v15;
    uint64_t v21 = v14;
    char v22 = v23;
    char v24 = 1;
    sub_249AEDEA8();
    LOBYTE(v19) = 2;
    sub_249AEDEC8();
    LOBYTE(v19) = 3;
    sub_249AEDEC8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_249A7ACE4()
{
  unint64_t result = qword_2696E4D40;
  if (!qword_2696E4D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4D40);
  }
  return result;
}

unint64_t sub_249A7AD38()
{
  unint64_t result = qword_2696E4D48;
  if (!qword_2696E4D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4D48);
  }
  return result;
}

uint64_t SystemUILayout.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4D50);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A7ACE4();
  sub_249AEE428();
  if (!v2)
  {
    char v30 = 0;
    sub_249A7B014();
    sub_249AEDE08();
    uint64_t v9 = v24;
    uint64_t v10 = v25;
    uint64_t v11 = v26;
    uint64_t v12 = v27;
    char v30 = 1;
    sub_249AEDDA8();
    uint64_t v22 = v24;
    uint64_t v23 = v25;
    uint64_t v13 = v27;
    uint64_t v21 = v26;
    int v14 = v28;
    LOBYTE(v24) = 2;
    HIDWORD(v19) = sub_249AEDDC8();
    int v29 = v14;
    uint64_t v20 = v13;
    LOBYTE(v24) = 3;
    char v16 = sub_249AEDDC8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v10;
    *(void *)(a2 + 16) = v11;
    *(void *)(a2 + 24) = v12;
    uint64_t v17 = v23;
    *(void *)(a2 + 32) = v22;
    *(void *)(a2 + 40) = v17;
    uint64_t v18 = v20;
    *(void *)(a2 + 48) = v21;
    *(void *)(a2 + 56) = v18;
    *(unsigned char *)(a2 + 64) = v29;
    *(unsigned char *)(a2 + 65) = BYTE4(v19) & 1;
    *(unsigned char *)(a2 + 66) = v16 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

unint64_t sub_249A7B014()
{
  unint64_t result = qword_2696E4D58;
  if (!qword_2696E4D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4D58);
  }
  return result;
}

uint64_t sub_249A7B068@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SystemUILayout.init(from:)(a1, a2);
}

uint64_t sub_249A7B080(void *a1)
{
  return SystemUILayout.encode(to:)(a1);
}

__n128 __swift_memcpy67_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 63) = *(_DWORD *)(a2 + 63);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SystemUILayout(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 67)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 65);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemUILayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 66) = 0;
    *(_WORD *)(result + 64) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 67) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 67) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 65) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemUILayout()
{
  return &type metadata for SystemUILayout;
}

ValueMetadata *type metadata accessor for SystemUILayout.ContentArea()
{
  return &type metadata for SystemUILayout.ContentArea;
}

unsigned char *storeEnumTagSinglePayload for SystemUILayout.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A7B258);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemUILayout.CodingKeys()
{
  return &type metadata for SystemUILayout.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SystemUILayout.ContentArea.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x249A7B32CLL);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemUILayout.ContentArea.CodingKeys()
{
  return &type metadata for SystemUILayout.ContentArea.CodingKeys;
}

unint64_t sub_249A7B368()
{
  unint64_t result = qword_2696E4D60;
  if (!qword_2696E4D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4D60);
  }
  return result;
}

unint64_t sub_249A7B3C0()
{
  unint64_t result = qword_2696E4D68;
  if (!qword_2696E4D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4D68);
  }
  return result;
}

unint64_t sub_249A7B418()
{
  unint64_t result = qword_2696E4D70;
  if (!qword_2696E4D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4D70);
  }
  return result;
}

unint64_t sub_249A7B470()
{
  unint64_t result = qword_2696E4D78;
  if (!qword_2696E4D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4D78);
  }
  return result;
}

unint64_t sub_249A7B4C8()
{
  unint64_t result = qword_2696E4D80;
  if (!qword_2696E4D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4D80);
  }
  return result;
}

unint64_t sub_249A7B520()
{
  unint64_t result = qword_2696E4D88[0];
  if (!qword_2696E4D88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2696E4D88);
  }
  return result;
}

uint64_t sub_249A7B574(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x8000000249B17330 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000249B17350 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000249B17370 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000249B17390)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

double CGSize.minSide.getter(double a1, double a2)
{
  double v2 = fabs(a2);
  double result = fabs(a1);
  if (result >= v2) {
    return v2;
  }
  return result;
}

__C::CGRect __swiftcall CGRect.rounded()()
{
  CGFloat v4 = v3;
  CGFloat v5 = v2;
  CGFloat v6 = v1;
  CGFloat v7 = v0;
  double v8 = round(CGRectGetMinX(*(CGRect *)&v0));
  v15.origin.double x = v7;
  v15.origin.CGFloat y = v6;
  v15.size.CGFloat width = v5;
  v15.size.CGFloat height = v4;
  double v9 = round(CGRectGetMinY(v15));
  v16.origin.double x = v7;
  v16.origin.CGFloat y = v6;
  v16.size.CGFloat width = v5;
  v16.size.CGFloat height = v4;
  double v10 = round(CGRectGetWidth(v16));
  v17.origin.double x = v7;
  v17.origin.CGFloat y = v6;
  v17.size.CGFloat width = v5;
  v17.size.CGFloat height = v4;
  double v11 = round(CGRectGetHeight(v17));
  double v12 = v8;
  double v13 = v9;
  double v14 = v10;
  result.size.CGFloat height = v11;
  result.size.CGFloat width = v14;
  result.origin.CGFloat y = v13;
  result.origin.double x = v12;
  return result;
}

double CGRect.inset(from:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  v20.origin.double x = a5;
  v20.origin.CGFloat y = a6;
  v20.size.CGFloat width = a7;
  v20.size.CGFloat height = a8;
  double MinY = CGRectGetMinY(v20);
  v21.origin.double x = a1;
  v21.origin.CGFloat y = a2;
  v21.size.CGFloat width = a3;
  v21.size.CGFloat height = a4;
  double v19 = MinY - CGRectGetMinY(v21);
  v22.origin.double x = a5;
  v22.origin.CGFloat y = a6;
  v22.size.CGFloat width = a7;
  v22.size.CGFloat height = a8;
  CGRectGetMinX(v22);
  v23.origin.double x = a1;
  v23.origin.CGFloat y = a2;
  v23.size.CGFloat width = a3;
  v23.size.CGFloat height = a4;
  CGRectGetMinX(v23);
  v24.origin.double x = a1;
  v24.origin.CGFloat y = a2;
  v24.size.CGFloat width = a3;
  v24.size.CGFloat height = a4;
  CGRectGetMaxY(v24);
  v25.origin.double x = a5;
  v25.origin.CGFloat y = a6;
  v25.size.CGFloat width = a7;
  v25.size.CGFloat height = a8;
  CGRectGetMaxY(v25);
  v26.origin.double x = a1;
  v26.origin.CGFloat y = a2;
  v26.size.CGFloat width = a3;
  v26.size.CGFloat height = a4;
  CGRectGetMaxX(v26);
  v27.origin.double x = a5;
  v27.origin.CGFloat y = a6;
  v27.size.CGFloat width = a7;
  v27.size.CGFloat height = a8;
  CGRectGetMaxX(v27);
  return v19;
}

CGFloat CGRect.inset(by:)(double a1, double a2, double a3, double a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  v15.origin.double x = a5;
  v15.origin.CGFloat y = a6;
  v15.size.CGFloat width = a7;
  v15.size.CGFloat height = a8;
  CGFloat v13 = CGRectGetMinX(v15) + a2;
  v16.origin.double x = a5;
  v16.origin.CGFloat y = a6;
  v16.size.CGFloat width = a7;
  v16.size.CGFloat height = a8;
  CGRectGetMinY(v16);
  v17.origin.double x = a5;
  v17.origin.CGFloat y = a6;
  v17.size.CGFloat width = a7;
  v17.size.CGFloat height = a8;
  CGRectGetWidth(v17);
  v18.origin.double x = a5;
  v18.origin.CGFloat y = a6;
  v18.size.CGFloat width = a7;
  v18.size.CGFloat height = a8;
  CGRectGetHeight(v18);
  return v13;
}

__C::CGRect __swiftcall CGRect.init(size:)(CGSize size)
{
  double height = size.height;
  double width = size.width;
  double v3 = 0.0;
  double v4 = 0.0;
  result.size.double height = height;
  result.size.double width = width;
  result.origin.CGFloat y = v4;
  result.origin.double x = v3;
  return result;
}

__C::CGRect __swiftcall CGSize.centered(in:)(__C::CGRect in)
{
  double v3 = v2;
  double v4 = v1;
  CGFloat height = in.size.height;
  CGFloat width = in.size.width;
  CGFloat y = in.origin.y;
  CGFloat x = in.origin.x;
  double MinX = CGRectGetMinX((CGRect)in);
  v16.origin.CGFloat x = x;
  v16.origin.CGFloat y = y;
  v16.size.CGFloat width = width;
  v16.size.CGFloat height = height;
  double v10 = MinX + (CGRectGetWidth(v16) - v4) * 0.5;
  v17.origin.CGFloat x = x;
  v17.origin.CGFloat y = y;
  v17.size.CGFloat width = width;
  v17.size.CGFloat height = height;
  double MinY = CGRectGetMinY(v17);
  v18.origin.CGFloat x = x;
  v18.origin.CGFloat y = y;
  v18.size.CGFloat width = width;
  v18.size.CGFloat height = height;
  double v12 = MinY + (CGRectGetHeight(v18) - v3) * 0.5;
  double v13 = v10;
  double v14 = v4;
  double v15 = v3;
  result.size.CGFloat height = v15;
  result.size.CGFloat width = v14;
  result.origin.CGFloat y = v12;
  result.origin.CGFloat x = v13;
  return result;
}

__C::CGRect __swiftcall CGSize.centeredX(in:)(__C::CGRect in)
{
  double v3 = v2;
  double v4 = v1;
  CGFloat height = in.size.height;
  CGFloat width = in.size.width;
  CGFloat y = in.origin.y;
  CGFloat x = in.origin.x;
  double MinX = CGRectGetMinX((CGRect)in);
  v15.origin.CGFloat x = x;
  v15.origin.CGFloat y = y;
  v15.size.CGFloat width = width;
  v15.size.CGFloat height = height;
  double v10 = MinX + (CGRectGetWidth(v15) - v4) * 0.5;
  v16.origin.CGFloat x = x;
  v16.origin.CGFloat y = y;
  v16.size.CGFloat width = width;
  v16.size.CGFloat height = height;
  double MinY = CGRectGetMinY(v16);
  double v12 = v10;
  double v13 = v4;
  double v14 = v3;
  result.size.CGFloat height = v14;
  result.size.CGFloat width = v13;
  result.origin.CGFloat y = MinY;
  result.origin.CGFloat x = v12;
  return result;
}

double CGRect.center.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double MidX = CGRectGetMidX(*(CGRect *)&a1);
  v10.origin.CGFloat x = a1;
  v10.origin.CGFloat y = a2;
  v10.size.CGFloat width = a3;
  v10.size.CGFloat height = a4;
  CGRectGetMidY(v10);
  return MidX;
}

uint64_t WrapView.makeUIView(context:)()
{
  return sub_249A7C0D0();
}

uint64_t sub_249A7BBA8()
{
  return sub_249A7C0D0();
}

uint64_t sub_249A7BBC4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_249A7BDFC(a1, a2, a3, a4, a5, a6, a7, a8, MEMORY[0x263F19AF0]);
}

uint64_t sub_249A7BC08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F01780](a1, a2, a3, WitnessTable);
}

uint64_t sub_249A7BC84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F01718](a1, a2, a3, WitnessTable);
}

void sub_249A7BD00()
{
}

void *WrapView.init(_:updater:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  return sub_249A7BF98(a1, a2, a3, a4, a5, (uint64_t)sub_249A7C0BC, a6);
}

uint64_t WrapView.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_249A7C028(a1, a2, a3, (uint64_t)nullsub_1, a4);
}

uint64_t WrapViewController.init(_:updater:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t WrapViewController.makeUIViewController(context:)()
{
  return sub_249A7C0D0();
}

uint64_t WrapViewController.updateUIViewController(_:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_249A7BDC8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_249A7BDFC(a1, a2, a3, a4, a5, a6, a7, a8, MEMORY[0x263F1A3E8]);
}

uint64_t sub_249A7BDFC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, void))
{
  return a9(a1, a2 & 1);
}

uint64_t sub_249A7BE40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F02710](a1, a2, a3, WitnessTable);
}

uint64_t sub_249A7BEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F026D8](a1, a2, a3, WitnessTable);
}

void sub_249A7BF38()
{
}

void *WrapViewController.init(_:updater:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  return sub_249A7BF98(a1, a2, a3, a4, a5, (uint64_t)sub_249A7C0BC, a6);
}

void *sub_249A7BF98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, void *a7@<X8>)
{
  __C::CGRect result = (void *)swift_allocObject();
  result[2] = a5;
  result[3] = a3;
  result[4] = a4;
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a6;
  a7[3] = result;
  return result;
}

uint64_t WrapViewController.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_249A7C028(a1, a2, a3, (uint64_t)nullsub_1, a4);
}

uint64_t sub_249A7C028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, void *a5@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a3;
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a4;
  a5[3] = result;
  return result;
}

uint64_t sub_249A7C084()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_249A7C0C0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_249A7C0D0()
{
  return (*v0)();
}

uint64_t sub_249A7C0F8()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_249A7C120()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_249A7C130()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A7C14C()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for WrapView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_249A7C18C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_249A7C1D8(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_249A7C238(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t type metadata accessor for WrapViewController()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *PowermeterDataIdentifiers.init(powerDataIdentifier:powerMaxDataIdentifier:powerMinDataIdentifier:powerMarkerAvailableMaxDataIdentifier:powerMarkerAvailableMinDataIdentifier:uiSceneStateDataIdentifier:)@<X0>(unsigned char *result@<X0>, char *a2@<X1>, char *a3@<X2>, char *a4@<X3>, char *a5@<X4>, char *a6@<X5>, unsigned char *a7@<X8>)
{
  char v7 = *a2;
  char v8 = *a3;
  char v9 = *a4;
  char v10 = *a5;
  char v11 = *a6;
  *a7 = *result;
  a7[1] = v7;
  a7[2] = v8;
  a7[3] = v9;
  a7[4] = v10;
  a7[5] = v11;
  return result;
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.assets.getter()
{
  return MEMORY[0x263F8EE78];
}

void static DigiBarRadialStyle.LineCap.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

CarPlayAssetUI::DigiBarRadialStyle::LineCap_optional __swiftcall DigiBarRadialStyle.LineCap.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  *double v1 = v2;
  return (CarPlayAssetUI::DigiBarRadialStyle::LineCap_optional)rawValue;
}

uint64_t DigiBarRadialStyle.LineCap.rawValue.getter()
{
  return *v0;
}

CarPlayAssetUI::DigiBarRadialStyle::LineCap_optional sub_249A7C320(Swift::Int *a1)
{
  return DigiBarRadialStyle.LineCap.init(rawValue:)(*a1);
}

uint64_t sub_249A7C328()
{
  return sub_249AED3B8();
}

uint64_t sub_249A7C388()
{
  return sub_249AED358();
}

__n128 DigiBarRadialStyle.angleConfiguration.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(unsigned char *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 24);
  *(__n128 *)(a1 + 24) = result;
  return result;
}

__n128 DigiBarRadialStyle.angleConfiguration.setter(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)a1;
  *(unsigned char *)(v1 + 16) = v2;
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v1 + 24) = result;
  return result;
}

uint64_t (*DigiBarRadialStyle.angleConfiguration.modify())()
{
  return nullsub_1;
}

float DigiBarRadialStyle.trackWidth.getter()
{
  return *(float *)(v0 + 40);
}

void DigiBarRadialStyle.trackWidth.setter(float a1)
{
  *(float *)(v1 + 40) = a1;
}

uint64_t (*DigiBarRadialStyle.trackWidth.modify())()
{
  return nullsub_1;
}

float DigiBarRadialStyle.trackInset.getter()
{
  return *(float *)(v0 + 44);
}

void DigiBarRadialStyle.trackInset.setter(float a1)
{
  *(float *)(v1 + 44) = a1;
}

uint64_t (*DigiBarRadialStyle.trackInset.modify())()
{
  return nullsub_1;
}

float DigiBarRadialStyle.platterInset.getter()
{
  return *(float *)(v0 + 48);
}

void DigiBarRadialStyle.platterInset.setter(float a1)
{
  *(float *)(v1 + 48) = a1;
}

uint64_t (*DigiBarRadialStyle.platterInset.modify())()
{
  return nullsub_1;
}

void DigiBarRadialStyle.trackLineCap.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 52);
}

unsigned char *DigiBarRadialStyle.trackLineCap.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 52) = *result;
  return result;
}

uint64_t (*DigiBarRadialStyle.trackLineCap.modify())()
{
  return nullsub_1;
}

uint64_t DigiBarRadialStyle.init(angleConfiguration:trackWidth:trackInset:trackLineCap:platterInset:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>, float a4@<S0>, float a5@<S1>, float a6@<S2>)
{
  char v6 = *(unsigned char *)(result + 16);
  char v7 = *a2;
  *(_OWORD *)a3 = *(_OWORD *)result;
  *(unsigned char *)(a3 + 16) = v6;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)(result + 24);
  *(float *)(a3 + 40) = a4;
  *(float *)(a3 + 44) = a5;
  *(float *)(a3 + 48) = a6;
  *(unsigned char *)(a3 + 52) = v7;
  return result;
}

uint64_t DigiBarRadialStyle.hash(into:)()
{
  return sub_249AEE348();
}

unint64_t sub_249A7C5DC()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6469576B63617274;
      break;
    case 2:
      unint64_t result = 0x736E496B63617274;
      break;
    case 3:
      unint64_t result = 0x4972657474616C70;
      break;
    case 4:
      unint64_t result = 0x6E694C6B63617274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_249A7C6A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A87B2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A7C6D0(uint64_t a1)
{
  unint64_t v2 = sub_249A84568();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A7C70C(uint64_t a1)
{
  unint64_t v2 = sub_249A84568();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DigiBarRadialStyle.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4F00);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v9 = v1[1];
  char v10 = *((unsigned char *)v1 + 16);
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  int v15 = *((unsigned __int8 *)v1 + 52);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A84568();
  sub_249AEE468();
  uint64_t v17 = v8;
  uint64_t v18 = v9;
  char v19 = v10;
  uint64_t v20 = v11;
  uint64_t v21 = v12;
  char v16 = 0;
  sub_2498D0674();
  sub_249AEDF08();
  if (!v2)
  {
    char v13 = v15;
    LOBYTE(v17) = 1;
    sub_249AEDED8();
    LOBYTE(v17) = 2;
    sub_249AEDED8();
    LOBYTE(v17) = 3;
    sub_249AEDED8();
    LOBYTE(v17) = v13;
    char v16 = 4;
    sub_2498D02FC();
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DigiBarRadialStyle.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t DigiBarRadialStyle.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4F10);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A84568();
  sub_249AEE428();
  if (!v2)
  {
    HIBYTE(v22) = 0;
    sub_2498D07EC();
    sub_249AEDE08();
    uint64_t v9 = v23;
    uint64_t v10 = v24;
    char v11 = v25;
    uint64_t v12 = v26;
    uint64_t v13 = v27;
    LOBYTE(v23) = 1;
    sub_249AEDDD8();
    int v15 = v14;
    LOBYTE(v23) = 2;
    sub_249AEDDD8();
    int v17 = v16;
    LOBYTE(v23) = 3;
    sub_249AEDDD8();
    int v20 = v19;
    HIBYTE(v22) = 4;
    sub_2498D0350();
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v21 = v23;
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v10;
    *(unsigned char *)(a2 + 16) = v11;
    *(void *)(a2 + 24) = v12;
    *(void *)(a2 + 32) = v13;
    *(_DWORD *)(a2 + 40) = v15;
    *(_DWORD *)(a2 + 44) = v17;
    *(_DWORD *)(a2 + 48) = v20;
    *(unsigned char *)(a2 + 52) = v21;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_249A7CD00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DigiBarRadialStyle.init(from:)(a1, a2);
}

uint64_t sub_249A7CD18(void *a1)
{
  return DigiBarRadialStyle.encode(to:)(a1);
}

uint64_t sub_249A7CD38()
{
  return sub_249AEE388();
}

float DigiBarLinearStyle.trackWidth.getter()
{
  return *(float *)v0;
}

void DigiBarLinearStyle.trackWidth.setter(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*DigiBarLinearStyle.trackWidth.modify())()
{
  return nullsub_1;
}

float DigiBarLinearStyle.leftInset.getter()
{
  return *(float *)(v0 + 4);
}

void DigiBarLinearStyle.leftInset.setter(float a1)
{
  *(float *)(v1 + 4) = a1;
}

uint64_t (*DigiBarLinearStyle.leftInset.modify())()
{
  return nullsub_1;
}

float DigiBarLinearStyle.rightInset.getter()
{
  return *(float *)(v0 + 8);
}

void DigiBarLinearStyle.rightInset.setter(float a1)
{
  *(float *)(v1 + 8) = a1;
}

uint64_t (*DigiBarLinearStyle.rightInset.modify())()
{
  return nullsub_1;
}

float DigiBarLinearStyle.centerOffset.getter()
{
  return *(float *)(v0 + 12);
}

void DigiBarLinearStyle.centerOffset.setter(float a1)
{
  *(float *)(v1 + 12) = a1;
}

uint64_t (*DigiBarLinearStyle.centerOffset.modify())()
{
  return nullsub_1;
}

uint64_t DigiBarLinearStyle.isRTL.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t DigiBarLinearStyle.isRTL.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*DigiBarLinearStyle.isRTL.modify())()
{
  return nullsub_1;
}

void __swiftcall DigiBarLinearStyle.init(trackWidth:leftInset:rightInset:centerOffset:isRTL:)(CarPlayAssetUI::DigiBarLinearStyle *__return_ptr retstr, Swift::Float trackWidth, Swift::Float leftInset, Swift::Float rightInset, Swift::Float centerOffset, Swift::Bool isRTL)
{
  retstr->trackWidth = trackWidth;
  retstr->leftInset = leftInset;
  retstr->rightInset = rightInset;
  retstr->centerOffset = centerOffset;
  retstr->isRTL = isRTL;
}

uint64_t DigiBarLinearStyle.hash(into:)()
{
  return sub_249AEE358();
}

uint64_t sub_249A7CF98()
{
  uint64_t result = 0x6469576B63617274;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65736E497466656CLL;
      break;
    case 2:
      uint64_t result = 0x736E497468676972;
      break;
    case 3:
      uint64_t result = 0x664F7265746E6563;
      break;
    case 4:
      uint64_t result = 0x4C54527369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_249A7D050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A87D88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A7D078(uint64_t a1)
{
  unint64_t v2 = sub_249A845BC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A7D0B4(uint64_t a1)
{
  unint64_t v2 = sub_249A845BC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DigiBarLinearStyle.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4F18);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A845BC();
  sub_249AEE468();
  char v13 = 0;
  sub_249AEDED8();
  if (!v1)
  {
    char v12 = 1;
    sub_249AEDED8();
    char v11 = 2;
    sub_249AEDED8();
    char v10 = 3;
    sub_249AEDED8();
    char v9 = 4;
    sub_249AEDEC8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DigiBarLinearStyle.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t DigiBarLinearStyle.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4F28);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A845BC();
  sub_249AEE428();
  if (!v2)
  {
    char v24 = 0;
    sub_249AEDDD8();
    int v10 = v9;
    char v23 = 1;
    sub_249AEDDD8();
    int v12 = v11;
    char v22 = 2;
    sub_249AEDDD8();
    int v14 = v13;
    char v21 = 3;
    sub_249AEDDD8();
    int v17 = v16;
    char v20 = 4;
    char v18 = sub_249AEDDC8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_DWORD *)a2 = v10;
    *(_DWORD *)(a2 + 4) = v12;
    *(_DWORD *)(a2 + 8) = v14;
    *(_DWORD *)(a2 + 12) = v17;
    *(unsigned char *)(a2 + 16) = v18 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_249A7D5B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DigiBarLinearStyle.init(from:)(a1, a2);
}

uint64_t sub_249A7D5CC(void *a1)
{
  return DigiBarLinearStyle.encode(to:)(a1);
}

uint64_t sub_249A7D5EC()
{
  return sub_249AEE388();
}

void PowermeterDataIdentifiers.powerDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *PowermeterDataIdentifiers.powerDataIdentifier.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*PowermeterDataIdentifiers.powerDataIdentifier.modify())()
{
  return nullsub_1;
}

void PowermeterDataIdentifiers.powerMaxDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *PowermeterDataIdentifiers.powerMaxDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*PowermeterDataIdentifiers.powerMaxDataIdentifier.modify())()
{
  return nullsub_1;
}

void PowermeterDataIdentifiers.powerMinDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 2);
}

unsigned char *PowermeterDataIdentifiers.powerMinDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 2) = *result;
  return result;
}

uint64_t (*PowermeterDataIdentifiers.powerMinDataIdentifier.modify())()
{
  return nullsub_1;
}

void PowermeterDataIdentifiers.powerMarkerAvailableMaxDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 3);
}

unsigned char *PowermeterDataIdentifiers.powerMarkerAvailableMaxDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 3) = *result;
  return result;
}

uint64_t (*PowermeterDataIdentifiers.powerMarkerAvailableMaxDataIdentifier.modify())()
{
  return nullsub_1;
}

void PowermeterDataIdentifiers.powerMarkerAvailableMinDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 4);
}

unsigned char *PowermeterDataIdentifiers.powerMarkerAvailableMinDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 4) = *result;
  return result;
}

uint64_t (*PowermeterDataIdentifiers.powerMarkerAvailableMinDataIdentifier.modify())()
{
  return nullsub_1;
}

void PowermeterDataIdentifiers.uiSceneStateDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 5);
}

unsigned char *PowermeterDataIdentifiers.uiSceneStateDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 5) = *result;
  return result;
}

uint64_t (*PowermeterDataIdentifiers.uiSceneStateDataIdentifier.modify())()
{
  return nullsub_1;
}

double static PowermeterDataIdentifiers.default.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 640165136;
  *(_DWORD *)a1 = 640165136;
  *(_WORD *)(a1 + 4) = 14375;
  return result;
}

uint64_t PowermeterDataIdentifiers.hash(into:)()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

unint64_t sub_249A7D960(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD000000000000025;
      break;
    case 4:
      unint64_t result = 0xD000000000000025;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_249A7DA1C()
{
  return sub_249A7D960(*v0);
}

uint64_t sub_249A7DA24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A87FD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A7DA4C(uint64_t a1)
{
  unint64_t v2 = sub_249A84610();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A7DA88(uint64_t a1)
{
  unint64_t v2 = sub_249A84610();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PowermeterDataIdentifiers.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4F30);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v9 = v1[1];
  int v18 = v1[2];
  int v19 = v9;
  int v10 = v1[3];
  int v16 = v1[4];
  int v17 = v10;
  int v15 = v1[5];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A84610();
  sub_249AEE468();
  char v31 = v8;
  char v30 = 0;
  sub_24989C934();
  sub_249AEDF08();
  if (!v2)
  {
    char v11 = v17;
    char v12 = v18;
    char v29 = v19;
    char v28 = 1;
    sub_249AEDF08();
    char v27 = v12;
    char v26 = 2;
    sub_249AEDF08();
    char v25 = v11;
    char v24 = 3;
    sub_249AEDF08();
    char v23 = v16;
    char v22 = 4;
    sub_249AEDF08();
    char v21 = v15;
    char v20 = 5;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PowermeterDataIdentifiers.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t PowermeterDataIdentifiers.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4F40);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A84610();
  sub_249AEE428();
  if (!v2)
  {
    char v31 = 0;
    sub_24989C988();
    sub_249AEDE08();
    int v9 = v32;
    char v29 = 1;
    sub_249AEDE08();
    int v20 = v9;
    int v10 = v30;
    char v27 = 2;
    sub_249AEDE08();
    int v19 = v10;
    int v11 = v28;
    char v25 = 3;
    sub_249AEDE08();
    int v18 = v11;
    int v12 = v26;
    char v23 = 4;
    sub_249AEDE08();
    int v17 = v12;
    char v13 = v24;
    char v22 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0F10);
    sub_249A8485C((unint64_t *)&qword_2696E0F18, &qword_2696E0F10);
    sub_249AEDDA8();
    if (v21 == 57) {
      char v15 = 56;
    }
    else {
      char v15 = v21;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v20;
    a2[1] = v19;
    a2[2] = v18;
    a2[3] = v17;
    a2[4] = v13;
    a2[5] = v15;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_249A7E0D8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return PowermeterDataIdentifiers.init(from:)(a1, a2);
}

uint64_t sub_249A7E0F0(void *a1)
{
  return PowermeterDataIdentifiers.encode(to:)(a1);
}

uint64_t sub_249A7E108()
{
  return sub_249AEE388();
}

uint64_t sub_249A7E160()
{
  return sub_249AEE388();
}

double sub_249A7E1B0@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 640165136;
  *(_DWORD *)a1 = 640165136;
  *(_WORD *)(a1 + 4) = 14375;
  return result;
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.Style.hash(into:)()
{
  if (((*(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(char *)(v0 + 52) << 32)) & 0x8000000000000000) != 0)
  {
    sub_249AEE348();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    return sub_249AEE358();
  }
  else
  {
    sub_249AEE348();
    sub_249AEE378();
    sub_249AEE378();
    sub_249AEE358();
    sub_2498ACC00();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    return sub_249AEE348();
  }
}

uint64_t sub_249A7E318(uint64_t a1)
{
  unint64_t v2 = sub_249A84664();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A7E354(uint64_t a1)
{
  unint64_t v2 = sub_249A84664();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_249A7E390(uint64_t a1)
{
  unint64_t v2 = sub_249A846B8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A7E3CC(uint64_t a1)
{
  unint64_t v2 = sub_249A846B8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_249A7E408(uint64_t a1)
{
  unint64_t v2 = sub_249A8470C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A7E444(uint64_t a1)
{
  unint64_t v2 = sub_249A8470C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.Style.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4F48);
  uint64_t v26 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  MEMORY[0x270FA5388](v3);
  char v25 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4F50);
  uint64_t v28 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4F58);
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  MEMORY[0x270FA5388](v8);
  int v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v1 + 8);
  uint64_t v12 = *(void *)(v1 + 16);
  unint64_t v30 = *(void *)v1;
  uint64_t v31 = v12;
  uint64_t v13 = *(void *)(v1 + 24);
  uint64_t v14 = *(void *)(v1 + 32);
  uint64_t v15 = *(void *)(v1 + 40);
  unint64_t v16 = *(unsigned int *)(v1 + 48) | (unint64_t)((uint64_t)*(char *)(v1 + 52) << 32);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A84664();
  sub_249AEE468();
  if ((v16 & 0x8000000000000000) != 0)
  {
    unsigned int v20 = v30;
    unint64_t v21 = HIDWORD(v30);
    LOBYTE(v34) = 1;
    sub_249A846B8();
    char v22 = v25;
    uint64_t v23 = v33;
    sub_249AEDE48();
    unint64_t v34 = __PAIR64__(v21, v20);
    uint64_t v35 = v11;
    char v36 = v31 & 1;
    sub_249A6DD84();
    uint64_t v24 = v27;
    sub_249AEDF08();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v10, v23);
  }
  else
  {
    LOBYTE(v34) = 0;
    sub_249A8470C();
    uint64_t v17 = v33;
    sub_249AEDE48();
    unint64_t v34 = v30;
    uint64_t v35 = v11;
    char v36 = v31 & 1;
    uint64_t v37 = v13;
    uint64_t v38 = v14;
    uint64_t v39 = v15;
    int v40 = v16;
    char v41 = BYTE4(v16);
    sub_249A6DE2C();
    uint64_t v18 = v29;
    sub_249AEDF08();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v10, v17);
  }
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.Style.hashValue.getter()
{
  unint64_t v1 = *(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(char *)(v0 + 52) << 32);
  sub_249AEE338();
  sub_249AEE348();
  if ((v1 & 0x8000000000000000) != 0)
  {
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE358();
  }
  else
  {
    sub_249AEE378();
    sub_249AEE378();
    sub_249AEE358();
    sub_2498ACC00();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE348();
  }
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.Style.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4F78);
  uint64_t v35 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4F80);
  uint64_t v34 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4F88);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v37 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v12);
  sub_249A84664();
  uint64_t v13 = v44;
  sub_249AEE428();
  if (!v13)
  {
    uint64_t v32 = v5;
    uint64_t v44 = v9;
    uint64_t v14 = v36;
    uint64_t v15 = sub_249AEDE18();
    uint64_t v16 = v8;
    if (*(void *)(v15 + 16) == 1)
    {
      uint64_t v17 = v11;
      if (*(unsigned char *)(v15 + 32))
      {
        LOBYTE(v38) = 1;
        sub_249A846B8();
        uint64_t v18 = v4;
        int v19 = v17;
        sub_249AEDD38();
        sub_249A6DED4();
        uint64_t v25 = v33;
        sub_249AEDE08();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v25);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v16);
        uint64_t v26 = 0;
        long long v27 = v38;
        unsigned int v28 = v39;
        long long v29 = 0uLL;
        unint64_t v30 = 0x8000000000;
      }
      else
      {
        LOBYTE(v38) = 0;
        sub_249A8470C();
        sub_249AEDD38();
        sub_249A6DF28();
        uint64_t v31 = v32;
        sub_249AEDE08();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v31);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v16);
        long long v27 = v38;
        unsigned int v28 = v39;
        long long v29 = v40;
        uint64_t v26 = v41;
        unint64_t v30 = v42 | ((unint64_t)v43 << 32);
      }
      *(_OWORD *)uint64_t v14 = v27;
      *(void *)(v14 + 16) = v28;
      *(_OWORD *)(v14 + 24) = v29;
      *(void *)(v14 + 40) = v26;
      *(_DWORD *)(v14 + 48) = v30;
      *(unsigned char *)(v14 + 52) = BYTE4(v30);
    }
    else
    {
      uint64_t v20 = v8;
      uint64_t v21 = sub_249AEDB08();
      swift_allocError();
      uint64_t v23 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBD0);
      *uint64_t v23 = &type metadata for Instrument.GaugeStyle.DigiBarConfiguration.Style;
      sub_249AEDD48();
      sub_249AEDAE8();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v20);
    }
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v37);
}

uint64_t sub_249A7EED4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.GaugeStyle.DigiBarConfiguration.Style.init(from:)(a1, a2);
}

uint64_t sub_249A7EEEC(void *a1)
{
  return Instrument.GaugeStyle.DigiBarConfiguration.Style.encode(to:)(a1);
}

uint64_t sub_249A7EF0C()
{
  unint64_t v1 = *(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(char *)(v0 + 52) << 32);
  sub_249AEE338();
  sub_249AEE348();
  if ((v1 & 0x8000000000000000) != 0)
  {
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE358();
  }
  else
  {
    sub_249AEE378();
    sub_249AEE378();
    sub_249AEE358();
    sub_2498ACC00();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE348();
  }
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.colorsConfiguration.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  swift_bridgeObjectRetain();

  return sub_2498FC674(v3);
}

__n128 Instrument.GaugeStyle.DigiBarConfiguration.colorsConfiguration.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  uint64_t v3 = v1->n128_i64[1];
  swift_bridgeObjectRelease();
  sub_249882B2C(v3);
  __n128 result = v5;
  *unint64_t v1 = v5;
  v1[1].n128_u64[0] = v2;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DigiBarConfiguration.colorsConfiguration.modify())()
{
  return nullsub_1;
}

__n128 Instrument.GaugeStyle.DigiBarConfiguration.style.getter@<Q0>(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 72);
  char v3 = *(unsigned char *)(v1 + 76);
  long long v4 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 16) = v4;
  __n128 result = *(__n128 *)(v1 + 56);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 48) = v2;
  return result;
}

__n128 Instrument.GaugeStyle.DigiBarConfiguration.style.setter(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 48);
  char v3 = *(unsigned char *)(a1 + 52);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 56) = result;
  *(unsigned char *)(v1 + 76) = v3;
  *(_DWORD *)(v1 + 72) = v2;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DigiBarConfiguration.style.modify())()
{
  return nullsub_1;
}

float Instrument.GaugeStyle.DigiBarConfiguration.trackLimitGap.getter()
{
  return *(float *)(v0 + 80);
}

void Instrument.GaugeStyle.DigiBarConfiguration.trackLimitGap.setter(float a1)
{
  *(float *)(v1 + 80) = a1;
}

uint64_t (*Instrument.GaugeStyle.DigiBarConfiguration.trackLimitGap.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.redlineConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 96);
  uint64_t v4 = *(void *)(v1 + 104);
  uint64_t v5 = *(void *)(v1 + 112);
  uint64_t v6 = *(void *)(v1 + 120);
  uint64_t v7 = *(void *)(v1 + 128);
  uint64_t v8 = *(void *)(v1 + 136);
  uint64_t v9 = *(void *)(v1 + 144);
  char v10 = *(unsigned char *)(v1 + 156);
  int v11 = *(_DWORD *)(v1 + 152);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 68) = v10;
  *(_DWORD *)(a1 + 64) = v11;
  return sub_2498FC674(v2);
}

__n128 Instrument.GaugeStyle.DigiBarConfiguration.redlineConfiguration.setter(long long *a1)
{
  long long v9 = a1[1];
  long long v10 = *a1;
  __n128 v8 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  uint64_t v3 = *((void *)a1 + 7);
  int v4 = *((_DWORD *)a1 + 16);
  char v5 = *((unsigned char *)a1 + 68);
  uint64_t v6 = v1 + 152;
  sub_249882B2C(*(void *)(v6 - 64));
  *(_OWORD *)(v6 - 64) = v10;
  *(_OWORD *)(v6 - 48) = v9;
  __n128 result = v8;
  *(__n128 *)(v6 - 32) = v8;
  *(void *)(v6 - 16) = v2;
  *(void *)(v6 - 8) = v3;
  *(unsigned char *)(v6 + 4) = v5;
  *(_DWORD *)uint64_t v6 = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DigiBarConfiguration.redlineConfiguration.modify())()
{
  return nullsub_1;
}

float Instrument.GaugeStyle.DigiBarConfiguration.minDotThreshold.getter()
{
  return *(float *)(v0 + 160);
}

void Instrument.GaugeStyle.DigiBarConfiguration.minDotThreshold.setter(float a1)
{
  *(float *)(v1 + 160) = a1;
}

uint64_t (*Instrument.GaugeStyle.DigiBarConfiguration.minDotThreshold.modify())()
{
  return nullsub_1;
}

__n128 Instrument.GaugeStyle.DigiBarConfiguration.init(colorsConfiguration:style:trackLimitGap:redlineConfiguration:minDotThreshold:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, float a5@<S0>, float a6@<S1>)
{
  *(_OWORD *)a4 = *(_OWORD *)a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a4 + 24) = *(_OWORD *)a2;
  int v7 = *(_DWORD *)(a2 + 48);
  char v8 = *(unsigned char *)(a2 + 52);
  int v9 = *(_DWORD *)(a3 + 64);
  char v10 = *(unsigned char *)(a3 + 68);
  *(void *)(a4 + 16) = *(void *)(a1 + 16);
  *(_OWORD *)(a4 + 40) = v6;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a4 + 76) = v8;
  *(_DWORD *)(a4 + 72) = v7;
  *(float *)(a4 + 80) = a5;
  long long v11 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a4 + 88) = *(_OWORD *)a3;
  *(_OWORD *)(a4 + 104) = v11;
  __n128 result = *(__n128 *)(a3 + 32);
  long long v13 = *(_OWORD *)(a3 + 48);
  *(__n128 *)(a4 + 120) = result;
  *(_OWORD *)(a4 + 136) = v13;
  *(unsigned char *)(a4 + 156) = v10;
  *(_DWORD *)(a4 + 152) = v9;
  *(float *)(a4 + 160) = a6;
  return result;
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  unint64_t v6 = *(unsigned int *)(v1 + 72) | (unint64_t)((uint64_t)*(char *)(v1 + 76) << 32);
  uint64_t v9 = *(void *)(v1 + 88);
  if (!*(void *)v1)
  {
    sub_249AEE358();
    sub_2498FC674(v4);
    if (v4) {
      goto LABEL_3;
    }
LABEL_6:
    sub_249AEE358();
    swift_bridgeObjectRelease();
    uint64_t v7 = 0;
    goto LABEL_7;
  }
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_2498FC674(v4);
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v3);
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_6;
  }
LABEL_3:
  sub_249AEE358();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v4);
  if (!v5)
  {
    sub_249AEE358();
    sub_249882B2C(v4);
    swift_bridgeObjectRelease();
    sub_249882B2C(v4);
    if ((v6 & 0x8000000000000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_10;
  }
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v5);
  swift_bridgeObjectRelease();
  sub_249882B2C(v4);
  swift_bridgeObjectRelease();
  uint64_t v7 = v4;
LABEL_7:
  sub_249882B2C(v7);
  if ((v6 & 0x8000000000000000) == 0)
  {
LABEL_8:
    sub_249AEE348();
    sub_249AEE378();
    sub_249AEE378();
    sub_249AEE358();
    sub_2498ACC00();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE348();
    goto LABEL_11;
  }
LABEL_10:
  sub_249AEE348();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE358();
LABEL_11:
  sub_249AEE368();
  sub_249AEE358();
  if (v9) {
    DigiBarRedlineConfiguration.hash(into:)(a1);
  }
  return sub_249AEE368();
}

unint64_t sub_249A7F704(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C797473;
      break;
    case 2:
      unint64_t result = 0x6D694C6B63617274;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x6854746F446E696DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_249A7F7CC()
{
  return sub_249A7F704(*v0);
}

uint64_t sub_249A7F7D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A88210(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A7F7FC(uint64_t a1)
{
  unint64_t v2 = sub_249A84760();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A7F838(uint64_t a1)
{
  unint64_t v2 = sub_249A84760();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4F90);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v35 = *v1;
  uint64_t v8 = *((void *)v1 + 2);
  uint64_t v7 = *((void *)v1 + 3);
  uint64_t v33 = *((void *)v1 + 4);
  uint64_t v34 = v7;
  uint64_t v9 = *((void *)v1 + 5);
  uint64_t v31 = *((void *)v1 + 6);
  uint64_t v32 = v9;
  uint64_t v10 = *((void *)v1 + 7);
  uint64_t v29 = *((void *)v1 + 8);
  uint64_t v30 = v10;
  uint64_t v28 = *((unsigned __int8 *)v1 + 76);
  uint64_t v27 = *((unsigned int *)v1 + 18);
  uint64_t v26 = *((void *)v1 + 11);
  uint64_t v25 = *((void *)v1 + 12);
  uint64_t v18 = *((void *)v1 + 13);
  uint64_t v23 = *((void *)v1 + 14);
  uint64_t v22 = *((void *)v1 + 15);
  uint64_t v21 = *((void *)v1 + 16);
  uint64_t v20 = *((void *)v1 + 17);
  uint64_t v19 = *((void *)v1 + 18);
  uint64_t v17 = *((unsigned __int8 *)v1 + 156);
  uint64_t v24 = *((unsigned int *)v1 + 38);
  int v11 = *((_DWORD *)v1 + 40);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A84760();
  sub_249AEE468();
  long long v37 = v35;
  uint64_t v38 = v8;
  char v46 = 0;
  sub_2499BBF68();
  uint64_t v12 = v36;
  sub_249AEDF08();
  if (!v12)
  {
    uint64_t v13 = v24;
    uint64_t v14 = v25;
    uint64_t v15 = v26;
    *(void *)&long long v37 = v34;
    *((void *)&v37 + 1) = v33;
    uint64_t v38 = v32;
    uint64_t v39 = v31;
    uint64_t v40 = v30;
    uint64_t v41 = v29;
    BYTE4(v42) = (v27 | (unint64_t)(v28 << 32)) >> 32;
    LODWORD(v42) = v27;
    char v46 = 1;
    sub_2499CD108();
    sub_249AEDF08();
    LOBYTE(v37) = 2;
    sub_249AEDED8();
    *(void *)&long long v37 = v15;
    *((void *)&v37 + 1) = v14;
    uint64_t v38 = v18;
    uint64_t v39 = v23;
    uint64_t v40 = v22;
    uint64_t v41 = v21;
    uint64_t v42 = v20;
    uint64_t v43 = v19;
    int v44 = v13;
    char v45 = (v13 | (unint64_t)(v17 << 32)) >> 32;
    char v46 = 3;
    sub_249A847B4();
    sub_249AEDEA8();
    LODWORD(v37) = v11;
    char v46 = 4;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.hashValue.getter()
{
  sub_249AEE338();
  Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)((uint64_t)v1);
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4FA8);
  unint64_t v5 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A84760();
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    return sub_249882B2C(0);
  }
  else
  {
    unint64_t v43 = v5;
    LOBYTE(v45) = 0;
    sub_2499BBF10();
    sub_249AEDE08();
    long long v9 = v55;
    uint64_t v41 = v56;
    LOBYTE(v45) = 1;
    sub_2499CD1B0();
    sub_249AEDE08();
    long long v42 = v9;
    uint64_t v35 = *((void *)&v55 + 1);
    uint64_t v36 = v55;
    uint64_t v33 = v57;
    uint64_t v34 = v56;
    uint64_t v31 = v59;
    uint64_t v32 = v58;
    unint64_t v30 = BYTE4(v60);
    uint64_t v10 = v60;
    LOBYTE(v55) = 2;
    sub_249AEDDD8();
    int v12 = v11;
    uint64_t v29 = v10;
    LOBYTE(v45) = 3;
    sub_249A84808();
    sub_249AEDDA8();
    uint64_t v27 = a2;
    long long v28 = v55;
    uint64_t v39 = v58;
    uint64_t v40 = v57;
    uint64_t v13 = v60;
    uint64_t v37 = v56;
    uint64_t v38 = v59;
    uint64_t v14 = v61;
    unint64_t v15 = v62 | ((unint64_t)BYTE4(v62) << 32);
    char v78 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3860);
    sub_249A8485C((unint64_t *)&qword_2696E3868, &qword_2696E3860);
    sub_249AEDDA8();
    unint64_t v16 = v29 | (v30 << 32);
    if (v77) {
      float v17 = 0.0;
    }
    else {
      float v17 = v76;
    }
    (*(void (**)(char *, uint64_t))(v43 + 8))(v7, v44);
    long long v45 = v42;
    *(void *)&long long v46 = v41;
    *((void *)&v46 + 1) = v36;
    *(void *)&long long v47 = v35;
    *((void *)&v47 + 1) = v34;
    *(void *)&long long v48 = v33;
    *((void *)&v48 + 1) = v32;
    *(void *)&long long v49 = v31;
    unint64_t v30 = v16;
    BYTE12(v49) = BYTE4(v16);
    DWORD2(v49) = v16;
    *(_DWORD *)uint64_t v50 = v12;
    long long v18 = v28;
    *(_OWORD *)&v50[8] = v28;
    uint64_t v19 = v37;
    *(void *)&v50[24] = v37;
    *(void *)&long long v51 = v40;
    *((void *)&v51 + 1) = v39;
    *(void *)&long long v52 = v38;
    *((void *)&v52 + 1) = v13;
    *(void *)&long long v53 = v14;
    unint64_t v43 = HIDWORD(v15);
    uint64_t v44 = HIDWORD(v16);
    BYTE12(v53) = BYTE4(v15);
    DWORD2(v53) = v15;
    float v54 = v17;
    long long v20 = *(_OWORD *)v50;
    uint64_t v21 = v27;
    *(_OWORD *)(v27 + 64) = v49;
    *(_OWORD *)(v21 + 80) = v20;
    long long v22 = v48;
    *(_OWORD *)(v21 + 32) = v47;
    *(_OWORD *)(v21 + 48) = v22;
    long long v23 = v53;
    *(_OWORD *)(v21 + 128) = v52;
    *(_OWORD *)(v21 + 144) = v23;
    long long v24 = v51;
    *(_OWORD *)(v21 + 96) = *(_OWORD *)&v50[16];
    *(_OWORD *)(v21 + 112) = v24;
    long long v25 = v46;
    *(_OWORD *)uint64_t v21 = v45;
    *(_OWORD *)(v21 + 16) = v25;
    *(float *)(v21 + 160) = v54;
    sub_249A33A00((uint64_t)&v45);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    long long v55 = v42;
    uint64_t v56 = v41;
    uint64_t v57 = v36;
    uint64_t v58 = v35;
    uint64_t v59 = v34;
    uint64_t v60 = v33;
    uint64_t v61 = v32;
    uint64_t v62 = v31;
    char v64 = v44;
    int v63 = v30;
    int v65 = v12;
    long long v66 = v18;
    uint64_t v67 = v19;
    uint64_t v68 = v40;
    uint64_t v69 = v39;
    uint64_t v70 = v38;
    uint64_t v71 = v13;
    uint64_t v72 = v14;
    char v74 = v43;
    int v73 = v15;
    float v75 = v17;
    return sub_249A33AAC((uint64_t)&v55);
  }
}

uint64_t sub_249A801F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.GaugeStyle.DigiBarConfiguration.init(from:)(a1, a2);
}

uint64_t sub_249A8020C(void *a1)
{
  return Instrument.GaugeStyle.DigiBarConfiguration.encode(to:)(a1);
}

uint64_t sub_249A80224()
{
  sub_249AEE338();
  Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)((uint64_t)v1);
  return sub_249AEE388();
}

uint64_t sub_249A80268()
{
  sub_249AEE338();
  Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)((uint64_t)v1);
  return sub_249AEE388();
}

__n128 DigiBarMaskConfiguration.style.getter@<Q0>(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 48);
  char v3 = *(unsigned char *)(v1 + 52);
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  __n128 result = *(__n128 *)(v1 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 48) = v2;
  return result;
}

__n128 DigiBarMaskConfiguration.style.setter(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 48);
  char v3 = *(unsigned char *)(a1 + 52);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v4;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 32) = result;
  *(unsigned char *)(v1 + 52) = v3;
  *(_DWORD *)(v1 + 48) = v2;
  return result;
}

uint64_t (*DigiBarMaskConfiguration.style.modify())()
{
  return nullsub_1;
}

float DigiBarMaskConfiguration.widthExtension.getter()
{
  return *(float *)(v0 + 56);
}

void DigiBarMaskConfiguration.widthExtension.setter(float a1)
{
  *(float *)(v1 + 56) = a1;
}

uint64_t (*DigiBarMaskConfiguration.widthExtension.modify())()
{
  return nullsub_1;
}

uint64_t DigiBarMaskConfiguration.init(style:widthExtension:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  int v3 = *(_DWORD *)(result + 48);
  char v4 = *(unsigned char *)(result + 52);
  long long v5 = *(_OWORD *)(result + 16);
  *(_OWORD *)a2 = *(_OWORD *)result;
  *(_OWORD *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(result + 32);
  *(unsigned char *)(a2 + 52) = v4;
  *(_DWORD *)(a2 + 48) = v3;
  *(float *)(a2 + 56) = a3;
  return result;
}

uint64_t DigiBarMaskConfiguration.assets.getter()
{
  return MEMORY[0x263F8EE78];
}

uint64_t DigiBarMaskConfiguration.hash(into:)()
{
  if (((*(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(char *)(v0 + 52) << 32)) & 0x8000000000000000) != 0)
  {
    sub_249AEE348();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE358();
  }
  else
  {
    sub_249AEE348();
    sub_249AEE378();
    sub_249AEE378();
    sub_249AEE358();
    sub_2498ACC00();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE348();
  }
  return sub_249AEE368();
}

uint64_t sub_249A804DC()
{
  if (*v0) {
    return 0x7478456874646977;
  }
  else {
    return 0x656C797473;
  }
}

uint64_t sub_249A80520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A88468(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A80548(uint64_t a1)
{
  unint64_t v2 = sub_249A84B24();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A80584(uint64_t a1)
{
  unint64_t v2 = sub_249A84B24();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DigiBarMaskConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4FB8);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = *v1;
  long long v12 = v1[1];
  long long v13 = v6;
  uint64_t v8 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  uint64_t v14 = *((unsigned int *)v1 + 12);
  char v9 = *((unsigned char *)v1 + 52);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A84B24();
  sub_249AEE468();
  long long v18 = v13;
  long long v19 = v12;
  uint64_t v20 = v8;
  uint64_t v21 = v7;
  char v23 = v9;
  int v22 = v14;
  char v17 = 0;
  sub_2499CD108();
  uint64_t v10 = v15;
  sub_249AEDF08();
  if (!v10)
  {
    LOBYTE(v18) = 1;
    sub_249AEDED8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v5, v3);
}

uint64_t DigiBarMaskConfiguration.hashValue.getter()
{
  unint64_t v1 = *(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(char *)(v0 + 52) << 32);
  sub_249AEE338();
  sub_249AEE348();
  if ((v1 & 0x8000000000000000) != 0)
  {
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE358();
  }
  else
  {
    sub_249AEE378();
    sub_249AEE378();
    sub_249AEE358();
    sub_2498ACC00();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE348();
  }
  sub_249AEE368();
  return sub_249AEE388();
}

uint64_t DigiBarMaskConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4FC8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A84B24();
  sub_249AEE428();
  if (!v2)
  {
    char v23 = 0;
    sub_2499CD1B0();
    sub_249AEDE08();
    uint64_t v21 = v25;
    uint64_t v22 = v24;
    uint64_t v19 = v27;
    uint64_t v20 = v26;
    uint64_t v17 = v29;
    uint64_t v18 = v28;
    uint64_t v9 = v31;
    uint64_t v10 = v30;
    LOBYTE(v24) = 1;
    sub_249AEDDD8();
    int v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = v21;
    *(void *)a2 = v22;
    *(void *)(a2 + 8) = v13;
    uint64_t v14 = v19;
    *(void *)(a2 + 16) = v20;
    *(void *)(a2 + 24) = v14;
    uint64_t v15 = v17;
    *(void *)(a2 + 32) = v18;
    *(void *)(a2 + 40) = v15;
    *(_DWORD *)(a2 + 48) = v10;
    *(unsigned char *)(a2 + 52) = (v10 | (unint64_t)(v9 << 32)) >> 32;
    *(_DWORD *)(a2 + 56) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_249A80B50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DigiBarMaskConfiguration.init(from:)(a1, a2);
}

uint64_t sub_249A80B68(void *a1)
{
  return DigiBarMaskConfiguration.encode(to:)(a1);
}

uint64_t sub_249A80B84()
{
  if (((*(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(char *)(v0 + 52) << 32)) & 0x8000000000000000) != 0)
  {
    sub_249AEE348();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE358();
  }
  else
  {
    sub_249AEE348();
    sub_249AEE378();
    sub_249AEE378();
    sub_249AEE358();
    sub_2498ACC00();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE348();
  }
  return sub_249AEE368();
}

uint64_t sub_249A80CE8()
{
  unint64_t v1 = *(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(char *)(v0 + 52) << 32);
  sub_249AEE338();
  sub_249AEE348();
  if ((v1 & 0x8000000000000000) != 0)
  {
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE358();
  }
  else
  {
    sub_249AEE378();
    sub_249AEE378();
    sub_249AEE358();
    sub_2498ACC00();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE348();
  }
  sub_249AEE368();
  return sub_249AEE388();
}

uint64_t sub_249A80E98(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 48);
  char v3 = *(unsigned char *)(a1 + 52);
  float v4 = *(float *)(a1 + 56);
  int v5 = *(_DWORD *)(a2 + 48);
  char v6 = *(unsigned char *)(a2 + 52);
  float v7 = *(float *)(a2 + 56);
  long long v8 = *(_OWORD *)(a1 + 16);
  v14[0] = *(_OWORD *)a1;
  v14[1] = v8;
  void v14[2] = *(_OWORD *)(a1 + 32);
  char v16 = v3;
  int v15 = v2;
  long long v9 = *(_OWORD *)(a2 + 16);
  v11[0] = *(_OWORD *)a2;
  v11[1] = v9;
  _OWORD v11[2] = *(_OWORD *)(a2 + 32);
  char v13 = v6;
  int v12 = v5;
  return _s14CarPlayAssetUI10InstrumentV10GaugeStyleO20DigiBarConfigurationV0G0O2eeoiySbAI_AItFZ_0((uint64_t *)v14, (uint64_t *)v11) & (v4 == v7);
}

uint64_t DigiBarRedlineConfiguration.colorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DigiBarRedlineConfiguration.colorIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = a1;
  return result;
}

uint64_t (*DigiBarRedlineConfiguration.colorIDs.modify())()
{
  return nullsub_1;
}

uint64_t DigiBarRedlineConfiguration.crossedColorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DigiBarRedlineConfiguration.crossedColorIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*DigiBarRedlineConfiguration.crossedColorIDs.modify())()
{
  return nullsub_1;
}

__n128 DigiBarRedlineConfiguration.style.getter@<Q0>(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 64);
  char v3 = *(unsigned char *)(v1 + 68);
  long long v4 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = v4;
  __n128 result = *(__n128 *)(v1 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 48) = v2;
  return result;
}

__n128 DigiBarRedlineConfiguration.style.setter(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 48);
  char v3 = *(unsigned char *)(a1 + 52);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v4;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 48) = result;
  *(unsigned char *)(v1 + 68) = v3;
  *(_DWORD *)(v1 + 64) = v2;
  return result;
}

uint64_t (*DigiBarRedlineConfiguration.style.modify())()
{
  return nullsub_1;
}

__n128 DigiBarRedlineConfiguration.init(colorIDs:crossedColorIDs:style:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 48);
  char v5 = *(unsigned char *)(a3 + 52);
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  long long v6 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a4 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(a4 + 32) = v6;
  __n128 result = *(__n128 *)(a3 + 32);
  *(__n128 *)(a4 + 48) = result;
  *(unsigned char *)(a4 + 68) = v5;
  *(_DWORD *)(a4 + 64) = v4;
  return result;
}

uint64_t DigiBarRedlineConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v5 = *(void *)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  unint64_t v6 = *(unsigned int *)(v2 + 64) | (unint64_t)((uint64_t)*(char *)(v2 + 68) << 32);
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v5);
  swift_bridgeObjectRelease();
  if (v4)
  {
    sub_249AEE358();
    swift_bridgeObjectRetain();
    sub_24988A2D4(a1, v4);
    swift_bridgeObjectRelease();
    if ((v6 & 0x8000000000000000) == 0)
    {
LABEL_3:
      sub_249AEE348();
      sub_249AEE378();
      sub_249AEE378();
      sub_249AEE358();
      sub_2498ACC00();
      sub_249AEE368();
      sub_249AEE368();
      sub_249AEE368();
      return sub_249AEE348();
    }
  }
  else
  {
    sub_249AEE358();
    if ((v6 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
  }
  sub_249AEE348();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  return sub_249AEE358();
}

uint64_t sub_249A811F8()
{
  uint64_t v1 = 0x43646573736F7263;
  if (*v0 != 1) {
    uint64_t v1 = 0x656C797473;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x734449726F6C6F63;
  }
}

uint64_t sub_249A8125C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A88578(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A81284(uint64_t a1)
{
  unint64_t v2 = sub_249A84B78();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A812C0(uint64_t a1)
{
  unint64_t v2 = sub_249A84B78();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DigiBarRedlineConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4FD0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  float v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v23 = v1[2];
  uint64_t v24 = v8;
  uint64_t v10 = v1[3];
  uint64_t v21 = v1[4];
  uint64_t v22 = v10;
  uint64_t v11 = v1[5];
  uint64_t v19 = v1[6];
  uint64_t v20 = v11;
  uint64_t v12 = v1[7];
  uint64_t v17 = *((unsigned __int8 *)v1 + 68);
  uint64_t v18 = v12;
  uint64_t v16 = *((unsigned int *)v1 + 16);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A84B78();
  sub_249AEE468();
  uint64_t v25 = v9;
  char v33 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00D8);
  sub_24994507C((unint64_t *)&qword_2696E00E0, (void (*)(void))sub_24988E104);
  sub_249AEDF08();
  if (!v2)
  {
    uint64_t v14 = v22;
    uint64_t v13 = v23;
    uint64_t v25 = v24;
    char v33 = 1;
    sub_249AEDEA8();
    uint64_t v25 = v13;
    uint64_t v26 = v14;
    uint64_t v27 = v21;
    uint64_t v28 = v20;
    uint64_t v29 = v19;
    uint64_t v30 = v18;
    char v32 = (v16 | (unint64_t)(v17 << 32)) >> 32;
    int v31 = v16;
    char v33 = 2;
    sub_2499CD108();
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DigiBarRedlineConfiguration.hashValue.getter()
{
  uint64_t v2 = *(void *)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  unint64_t v3 = *(unsigned int *)(v0 + 64) | (unint64_t)((uint64_t)*(char *)(v0 + 68) << 32);
  sub_249AEE338();
  swift_bridgeObjectRetain();
  sub_24988A2D4((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_249AEE358();
    if ((v3 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_5:
    sub_249AEE348();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE358();
    return sub_249AEE388();
  }
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_24988A2D4((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  if ((v3 & 0x8000000000000000) != 0) {
    goto LABEL_5;
  }
LABEL_3:
  sub_249AEE348();
  sub_249AEE378();
  sub_249AEE378();
  sub_249AEE358();
  sub_2498ACC00();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE348();
  return sub_249AEE388();
}

uint64_t DigiBarRedlineConfiguration.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4FE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A84B78();
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    uint64_t v19 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00D8);
    char v25 = 0;
    sub_24994507C((unint64_t *)&qword_2696E00F8, (void (*)(void))sub_24988E268);
    sub_249AEDE08();
    uint64_t v10 = v20;
    char v25 = 1;
    swift_bridgeObjectRetain();
    sub_249AEDDA8();
    uint64_t v11 = v20;
    char v25 = 2;
    sub_2499CD1B0();
    swift_bridgeObjectRetain();
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    int v12 = v23;
    char v13 = v24;
    long long v14 = v20;
    long long v15 = v21;
    long long v16 = v22;
    uint64_t v17 = v19;
    *uint64_t v19 = v10;
    v17[1] = v11;
    *((_OWORD *)v17 + 1) = v14;
    *((_OWORD *)v17 + 2) = v15;
    *((_OWORD *)v17 + 3) = v16;
    *((unsigned char *)v17 + 68) = v13;
    *((_DWORD *)v17 + 16) = v12;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_249A81A54@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return DigiBarRedlineConfiguration.init(from:)(a1, a2);
}

uint64_t sub_249A81A6C(void *a1)
{
  return DigiBarRedlineConfiguration.encode(to:)(a1);
}

uint64_t sub_249A81A8C()
{
  uint64_t v2 = *(void *)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  unint64_t v3 = *(unsigned int *)(v0 + 64) | (unint64_t)((uint64_t)*(char *)(v0 + 68) << 32);
  sub_249AEE338();
  swift_bridgeObjectRetain();
  sub_24988A2D4((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_249AEE358();
    if ((v3 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_5:
    sub_249AEE348();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE358();
    return sub_249AEE388();
  }
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_24988A2D4((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  if ((v3 & 0x8000000000000000) != 0) {
    goto LABEL_5;
  }
LABEL_3:
  sub_249AEE348();
  sub_249AEE378();
  sub_249AEE378();
  sub_249AEE358();
  sub_2498ACC00();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE348();
  return sub_249AEE388();
}

uint64_t DigiBandGradientProgressConfiguration.colorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DigiBandGradientProgressConfiguration.colorIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*DigiBandGradientProgressConfiguration.colorIDs.modify())()
{
  return nullsub_1;
}

float DigiBandGradientProgressConfiguration.style.getter@<S0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 24);
  float result = *(float *)(v1 + 56);
  char v4 = *(unsigned char *)(v1 + 60);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 8);
  *(unsigned char *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 32);
  *(void *)(a1 + 40) = *(void *)(v1 + 48);
  *(float *)(a1 + 48) = result;
  *(unsigned char *)(a1 + 52) = v4;
  return result;
}

float DigiBandGradientProgressConfiguration.style.setter(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 16);
  float result = *(float *)(a1 + 48);
  char v4 = *(unsigned char *)(a1 + 52);
  *(_OWORD *)(v1 + 8) = *(_OWORD *)a1;
  *(unsigned char *)(v1 + 24) = v2;
  *(_OWORD *)(v1 + 32) = *(_OWORD *)(a1 + 24);
  *(void *)(v1 + 48) = *(void *)(a1 + 40);
  *(float *)(v1 + 56) = result;
  *(unsigned char *)(v1 + 60) = v4;
  return result;
}

uint64_t (*DigiBandGradientProgressConfiguration.style.modify())()
{
  return nullsub_1;
}

float DigiBandGradientProgressConfiguration.init(colorIDs:style:)@<S0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *(unsigned char *)(a2 + 16);
  float result = *(float *)(a2 + 48);
  char v5 = *(unsigned char *)(a2 + 52);
  *(void *)a3 = a1;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a2;
  *(unsigned char *)(a3 + 24) = v3;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)(a2 + 24);
  *(void *)(a3 + 48) = *(void *)(a2 + 40);
  *(float *)(a3 + 56) = result;
  *(unsigned char *)(a3 + 60) = v5;
  return result;
}

uint64_t DigiBandGradientProgressConfiguration.hash(into:)(uint64_t a1)
{
  char v2 = v1;
  uint64_t v4 = *v2;
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v4);
  swift_bridgeObjectRelease();
  sub_249AEE378();
  sub_249AEE378();
  sub_249AEE358();
  sub_2498ACC00();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  return sub_249AEE348();
}

BOOL static DigiBandGradientProgressConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v19 = *(void *)(a1 + 8);
  char v2 = *(unsigned char *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 32);
  int v4 = *(_DWORD *)(a1 + 56);
  char v5 = *(unsigned char *)(a1 + 60);
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  char v8 = *(unsigned char *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  int v12 = *(_DWORD *)(a2 + 56);
  char v13 = *(unsigned char *)(a2 + 60);
  if (sub_2499FEF30(*(void *)a1, *(void *)a2))
  {
    v27[0] = v19;
    v27[1] = v18;
    char v28 = v2;
    uint64_t v29 = v17;
    uint64_t v30 = v16;
    uint64_t v31 = v3;
    int v32 = v4;
    char v33 = v5;
    v20[0] = v6;
    v20[1] = v7;
    char v21 = v8;
    uint64_t v22 = v9;
    uint64_t v23 = v10;
    uint64_t v24 = v11;
    int v25 = v12;
    char v26 = v13;
    return _s14CarPlayAssetUI18DigiBarRadialStyleV2eeoiySbAC_ACtFZ_0((uint64_t)v27, (uint64_t)v20);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_249A81F70()
{
  if (*v0) {
    return 0x656C797473;
  }
  else {
    return 0x734449726F6C6F63;
  }
}

uint64_t sub_249A81FA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A886EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A81FD0(uint64_t a1)
{
  unint64_t v2 = sub_249A84BCC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A8200C(uint64_t a1)
{
  unint64_t v2 = sub_249A84BCC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DigiBandGradientProgressConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4FE8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v10 = v1[2];
  int v25 = *((unsigned __int8 *)v1 + 24);
  uint64_t v11 = v1[4];
  uint64_t v12 = v1[5];
  uint64_t v13 = v1[6];
  int v14 = *((_DWORD *)v1 + 14);
  HIDWORD(v16) = *((unsigned __int8 *)v1 + 60);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A84BCC();
  sub_249AEE468();
  uint64_t v17 = v8;
  char v26 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00D8);
  sub_24994507C((unint64_t *)&qword_2696E00E0, (void (*)(void))sub_24988E104);
  sub_249AEDF08();
  if (!v2)
  {
    uint64_t v17 = v9;
    uint64_t v18 = v10;
    char v19 = v25;
    uint64_t v20 = v11;
    uint64_t v21 = v12;
    uint64_t v22 = v13;
    int v23 = v14;
    char v24 = BYTE4(v16);
    char v26 = 1;
    sub_249A6DE2C();
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DigiBandGradientProgressConfiguration.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_249AEE338();
  sub_24988A2D4((uint64_t)v3, v1);
  sub_249AEE378();
  sub_249AEE378();
  sub_249AEE358();
  sub_2498ACC00();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE348();
  return sub_249AEE388();
}

uint64_t DigiBandGradientProgressConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E4FF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A84BCC();
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00D8);
  char v23 = 0;
  sub_24994507C((unint64_t *)&qword_2696E00F8, (void (*)(void))sub_24988E268);
  sub_249AEDE08();
  uint64_t v9 = v17;
  char v23 = 1;
  sub_249A6DF28();
  swift_bridgeObjectRetain();
  sub_249AEDE08();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v10 = v18;
  int v11 = v21;
  char v12 = v22;
  uint64_t v13 = v20;
  long long v14 = v17;
  long long v15 = v19;
  *(void *)a2 = v9;
  *(_OWORD *)(a2 + 8) = v14;
  *(unsigned char *)(a2 + 24) = v10;
  *(_OWORD *)(a2 + 32) = v15;
  *(void *)(a2 + 48) = v13;
  *(_DWORD *)(a2 + 56) = v11;
  *(unsigned char *)(a2 + 60) = v12;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_249A825D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DigiBandGradientProgressConfiguration.init(from:)(a1, a2);
}

uint64_t sub_249A825F0(void *a1)
{
  return DigiBandGradientProgressConfiguration.encode(to:)(a1);
}

uint64_t sub_249A8260C(uint64_t a1)
{
  sub_24988A2D4(a1, *v1);
  sub_249AEE378();
  sub_249AEE378();
  sub_249AEE358();
  sub_2498ACC00();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  return sub_249AEE348();
}

uint64_t sub_249A826CC()
{
  uint64_t v1 = *v0;
  sub_249AEE338();
  sub_24988A2D4((uint64_t)v3, v1);
  sub_249AEE378();
  sub_249AEE378();
  sub_249AEE358();
  sub_2498ACC00();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE348();
  return sub_249AEE388();
}

BOOL sub_249A827C8(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v19 = *(void *)(a1 + 8);
  char v2 = *(unsigned char *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 32);
  int v4 = *(_DWORD *)(a1 + 56);
  char v5 = *(unsigned char *)(a1 + 60);
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  char v8 = *(unsigned char *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  int v12 = *(_DWORD *)(a2 + 56);
  char v13 = *(unsigned char *)(a2 + 60);
  if (sub_2499FEF30(*(void *)a1, *(void *)a2))
  {
    v27[0] = v19;
    v27[1] = v18;
    char v28 = v2;
    uint64_t v29 = v17;
    uint64_t v30 = v16;
    uint64_t v31 = v3;
    int v32 = v4;
    char v33 = v5;
    v20[0] = v6;
    v20[1] = v7;
    char v21 = v8;
    uint64_t v22 = v9;
    uint64_t v23 = v10;
    uint64_t v24 = v11;
    int v25 = v12;
    char v26 = v13;
    return _s14CarPlayAssetUI18DigiBarRadialStyleV2eeoiySbAC_ACtFZ_0((uint64_t)v27, (uint64_t)v20);
  }
  else
  {
    return 0;
  }
}

double sub_249A828C8()
{
  if (qword_2696DD818 != -1) {
    swift_once();
  }
  xmmword_2696E4E90 = xmmword_2696E4A20;
  qword_2696E4EA0 = byte_2696E4A30;
  double result = dbl_2696E4A38[0];
  *(_OWORD *)algn_2696E4EA8 = *(_OWORD *)dbl_2696E4A38;
  qword_2696E4EB8 = 0x40C0000041F00000;
  byte_2696E4EC4 = 0;
  dword_2696E4EC0 = 0;
  return result;
}

double static Instrument.GaugeStyle.DigiBarConfiguration.Style.default.getter@<D0>(uint64_t a1@<X8>)
{
  if (qword_2696DD820 != -1) {
    swift_once();
  }
  int v2 = dword_2696E4EC0;
  char v3 = byte_2696E4EC4;
  long long v4 = *(_OWORD *)&qword_2696E4EA0;
  *(_OWORD *)a1 = xmmword_2696E4E90;
  *(_OWORD *)(a1 + 16) = v4;
  double result = dbl_2696E4EB0;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)&dbl_2696E4EB0;
  *(unsigned char *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 48) = v2;
  return result;
}

double sub_249A829C0@<D0>(uint64_t a1@<X8>)
{
  if (qword_2696DD820 != -1) {
    swift_once();
  }
  int v2 = dword_2696E4EC0;
  char v3 = byte_2696E4EC4;
  long long v4 = *(_OWORD *)&qword_2696E4EA0;
  *(_OWORD *)a1 = xmmword_2696E4E90;
  *(_OWORD *)(a1 + 16) = v4;
  double result = dbl_2696E4EB0;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)&dbl_2696E4EB0;
  *(unsigned char *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 48) = v2;
  return result;
}

double sub_249A82A38()
{
  if (qword_2696DD818 != -1) {
    swift_once();
  }
  xmmword_2696E4EC8 = xmmword_2696E4A20;
  byte_2696E4ED8 = byte_2696E4A30;
  unk_2696E4EE0 = *(_OWORD *)dbl_2696E4A38;
  double result = 8192.00201;
  qword_2696E4EF0 = 0x40C0000041F00000;
  dword_2696E4EF8 = 0;
  byte_2696E4EFC = 0;
  return result;
}

float static DigiBarRadialStyle.default.getter@<S0>(uint64_t a1@<X8>)
{
  if (qword_2696DD828 != -1) {
    swift_once();
  }
  char v2 = byte_2696E4ED8;
  float result = *(float *)&dword_2696E4EF8;
  char v4 = byte_2696E4EFC;
  *(_OWORD *)a1 = xmmword_2696E4EC8;
  *(unsigned char *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 24) = unk_2696E4EE0;
  *(void *)(a1 + 40) = qword_2696E4EF0;
  *(float *)(a1 + 48) = result;
  *(unsigned char *)(a1 + 52) = v4;
  return result;
}

float sub_249A82B40@<S0>(uint64_t a1@<X8>)
{
  if (qword_2696DD828 != -1) {
    swift_once();
  }
  char v2 = byte_2696E4ED8;
  float result = *(float *)&dword_2696E4EF8;
  char v4 = byte_2696E4EFC;
  *(_OWORD *)a1 = xmmword_2696E4EC8;
  *(unsigned char *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 24) = unk_2696E4EE0;
  *(void *)(a1 + 40) = qword_2696E4EF0;
  *(float *)(a1 + 48) = result;
  *(unsigned char *)(a1 + 52) = v4;
  return result;
}

CarPlayAssetUI::DigiBarCruiseControlConfiguration::BarType_optional __swiftcall DigiBarCruiseControlConfiguration.BarType.init(rawValue:)(Swift::Int rawValue)
{
  unsigned int v2 = 0x2010003u >> (8 * rawValue);
  if ((unint64_t)rawValue >= 4) {
    LOBYTE(v2) = 3;
  }
  *uint64_t v1 = v2;
  return (CarPlayAssetUI::DigiBarCruiseControlConfiguration::BarType_optional)rawValue;
}

uint64_t DigiBarCruiseControlConfiguration.BarType.rawValue.getter()
{
  return *v0 + 1;
}

CarPlayAssetUI::DigiBarCruiseControlConfiguration::BarType_optional sub_249A82BF8(Swift::Int *a1)
{
  return DigiBarCruiseControlConfiguration.BarType.init(rawValue:)(*a1);
}

uint64_t sub_249A82C00()
{
  return sub_249AED3B8();
}

uint64_t sub_249A82C60()
{
  return sub_249AED358();
}

uint64_t DigiBarCruiseControlConfiguration.cruiseControlBarConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = v1[7];
  long long v3 = v1[9];
  long long v24 = v1[8];
  long long v25 = v3;
  long long v4 = v1[3];
  long long v5 = v1[5];
  long long v20 = v1[4];
  long long v6 = v20;
  long long v21 = v5;
  long long v7 = v1[5];
  long long v8 = v1[7];
  long long v22 = v1[6];
  long long v9 = v22;
  long long v23 = v8;
  long long v10 = v1[1];
  v17[0] = *v1;
  v17[1] = v10;
  long long v11 = v1[3];
  long long v13 = *v1;
  long long v12 = v1[1];
  long long v18 = v1[2];
  long long v14 = v18;
  long long v19 = v11;
  long long v15 = v1[9];
  *(_OWORD *)(a1 + 128) = v24;
  *(_OWORD *)(a1 + 144) = v15;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v2;
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v12;
  int v26 = *((_DWORD *)v1 + 40);
  *(_DWORD *)(a1 + 160) = *((_DWORD *)v1 + 40);
  *(_OWORD *)(a1 + 32) = v14;
  *(_OWORD *)(a1 + 48) = v4;
  return sub_249A33A00((uint64_t)v17);
}

__n128 DigiBarCruiseControlConfiguration.cruiseControlBarConfiguration.setter(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 144);
  v13[8] = *(_OWORD *)(v1 + 128);
  v13[9] = v3;
  int v14 = *(_DWORD *)(v1 + 160);
  long long v4 = *(_OWORD *)(v1 + 80);
  _DWORD v13[4] = *(_OWORD *)(v1 + 64);
  v13[5] = v4;
  long long v5 = *(_OWORD *)(v1 + 112);
  v13[6] = *(_OWORD *)(v1 + 96);
  v13[7] = v5;
  long long v6 = *(_OWORD *)(v1 + 16);
  v13[0] = *(_OWORD *)v1;
  v13[1] = v6;
  long long v7 = *(_OWORD *)(v1 + 48);
  void v13[2] = *(_OWORD *)(v1 + 32);
  v13[3] = v7;
  sub_249A33AAC((uint64_t)v13);
  long long v8 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v1 + 128) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v1 + 144) = v8;
  *(_DWORD *)(v1 + 160) = *(_DWORD *)(a1 + 160);
  long long v9 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 80) = v9;
  long long v10 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 112) = v10;
  long long v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v11;
  __n128 result = *(__n128 *)(a1 + 48);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)(a1 + 32);
  *(__n128 *)(v1 + 48) = result;
  return result;
}

uint64_t (*DigiBarCruiseControlConfiguration.cruiseControlBarConfiguration.modify())()
{
  return nullsub_1;
}

uint64_t DigiBarCruiseControlConfiguration.trackConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  int v19 = *(_DWORD *)(v1 + 328);
  long long v2 = *(_OWORD *)(v1 + 216);
  long long v3 = *(_OWORD *)(v1 + 248);
  v14[4] = *(_OWORD *)(v1 + 232);
  v14[5] = v3;
  long long v4 = *(_OWORD *)(v1 + 184);
  v14[0] = *(_OWORD *)(v1 + 168);
  v14[1] = v4;
  void v14[2] = *(_OWORD *)(v1 + 200);
  _OWORD v14[3] = v2;
  long long v5 = *(_OWORD *)(v1 + 280);
  long long v6 = *(_OWORD *)(v1 + 312);
  long long v17 = *(_OWORD *)(v1 + 296);
  long long v18 = v6;
  long long v7 = *(_OWORD *)(v1 + 280);
  long long v15 = *(_OWORD *)(v1 + 264);
  long long v8 = v15;
  long long v16 = v7;
  long long v9 = *(_OWORD *)(v1 + 312);
  *(_OWORD *)(a1 + 128) = v17;
  *(_OWORD *)(a1 + 144) = v9;
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(v1 + 328);
  long long v10 = *(_OWORD *)(v1 + 248);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 232);
  *(_OWORD *)(a1 + 80) = v10;
  long long v11 = *(_OWORD *)(v1 + 216);
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 112) = v5;
  long long v12 = *(_OWORD *)(v1 + 184);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 168);
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 200);
  *(_OWORD *)(a1 + 48) = v11;
  return sub_249A33A00((uint64_t)v14);
}

__n128 DigiBarCruiseControlConfiguration.trackConfiguration.setter(uint64_t a1)
{
  int v15 = *(_DWORD *)(v1 + 328);
  long long v3 = *(_OWORD *)(v1 + 216);
  long long v4 = *(_OWORD *)(v1 + 248);
  v14[4] = *(_OWORD *)(v1 + 232);
  v14[5] = v4;
  long long v5 = *(_OWORD *)(v1 + 184);
  v14[0] = *(_OWORD *)(v1 + 168);
  v14[1] = v5;
  void v14[2] = *(_OWORD *)(v1 + 200);
  _OWORD v14[3] = v3;
  long long v6 = *(_OWORD *)(v1 + 312);
  v14[8] = *(_OWORD *)(v1 + 296);
  v14[9] = v6;
  long long v7 = *(_OWORD *)(v1 + 280);
  _OWORD v14[6] = *(_OWORD *)(v1 + 264);
  v14[7] = v7;
  sub_249A33AAC((uint64_t)v14);
  long long v8 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v1 + 296) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v1 + 312) = v8;
  long long v9 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 216) = *(_OWORD *)(a1 + 48);
  long long v10 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 232) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 248) = v10;
  long long v11 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 264) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 280) = v11;
  __n128 result = *(__n128 *)a1;
  long long v13 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 168) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 184) = v13;
  *(_DWORD *)(v1 + 328) = *(_DWORD *)(a1 + 160);
  *(_OWORD *)(v1 + 200) = v9;
  return result;
}

uint64_t (*DigiBarCruiseControlConfiguration.trackConfiguration.modify())()
{
  return nullsub_1;
}

void DigiBarCruiseControlConfiguration.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 332);
}

unsigned char *DigiBarCruiseControlConfiguration.type.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 332) = *result;
  return result;
}

uint64_t (*DigiBarCruiseControlConfiguration.type.modify())()
{
  return nullsub_1;
}

void *DigiBarCruiseControlConfiguration.init(cruiseControlBarConfiguration:trackConfiguration:type:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, unsigned char *a4@<X8>)
{
  long long v5 = *(_OWORD *)(a1 + 144);
  unsigned char v18[8] = *(_OWORD *)(a1 + 128);
  v18[9] = v5;
  long long v6 = *(_OWORD *)(a1 + 80);
  void v18[4] = *(_OWORD *)(a1 + 64);
  v18[5] = v6;
  long long v7 = *(_OWORD *)(a1 + 112);
  v18[6] = *(_OWORD *)(a1 + 96);
  v18[7] = v7;
  long long v8 = *(_OWORD *)(a1 + 16);
  v18[0] = *(_OWORD *)a1;
  v18[1] = v8;
  long long v9 = *(_OWORD *)(a1 + 48);
  uint64_t v18[2] = *(_OWORD *)(a1 + 32);
  v18[3] = v9;
  long long v10 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)((char *)&v18[18] + 8) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)((char *)&v18[19] + 8) = v10;
  long long v11 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)((char *)&v18[16] + 8) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)((char *)&v18[17] + 8) = v11;
  long long v12 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)((char *)&v18[13] + 8) = *(_OWORD *)(a2 + 48);
  long long v13 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)((char *)&v18[14] + 8) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)((char *)&v18[15] + 8) = v13;
  long long v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)((char *)&v18[10] + 8) = *(_OWORD *)a2;
  *(_OWORD *)((char *)&v18[11] + 8) = v14;
  int v15 = *(_DWORD *)(a2 + 160);
  LODWORD(v18[10]) = *(_DWORD *)(a1 + 160);
  DWORD2(v18[20]) = v15;
  *(_OWORD *)((char *)&v18[12] + 8) = v12;
  char v16 = *a3;
  __n128 result = memcpy(a4, v18, 0x14CuLL);
  a4[332] = v16;
  return result;
}

uint64_t DigiBarCruiseControlConfiguration.assets.getter()
{
  return MEMORY[0x263F8EE78];
}

uint64_t DigiBarCruiseControlConfiguration.hash(into:)(uint64_t a1)
{
  return sub_249AEE348();
}

unint64_t sub_249A830B0()
{
  unint64_t v1 = 0xD000000000000012;
  if (*v0 != 1) {
    unint64_t v1 = 1701869940;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD00000000000001DLL;
  }
}

uint64_t sub_249A83108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A887D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A83130(uint64_t a1)
{
  unint64_t v2 = sub_249A84C20();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A8316C(uint64_t a1)
{
  unint64_t v2 = sub_249A84C20();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DigiBarCruiseControlConfiguration.encode(to:)(void *a1)
{
  long long v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E5000);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v35 = *((unsigned __int8 *)v3 + 332);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A84C20();
  sub_249AEE468();
  long long v9 = v3[9];
  long long v32 = v3[8];
  long long v33 = v9;
  int v34 = *((_DWORD *)v3 + 40);
  long long v10 = v3[5];
  long long v28 = v3[4];
  long long v29 = v10;
  long long v11 = v3[7];
  long long v30 = v3[6];
  long long v31 = v11;
  long long v12 = v3[1];
  long long v24 = *v3;
  long long v13 = v3[2];
  long long v27 = v3[3];
  long long v25 = v12;
  long long v26 = v13;
  char v23 = 0;
  sub_249A336C0();
  sub_249AEDF08();
  if (!v2)
  {
    char v14 = v35;
    long long v15 = *(long long *)((char *)v3 + 312);
    long long v32 = *(long long *)((char *)v3 + 296);
    long long v33 = v15;
    int v34 = *((_DWORD *)v3 + 82);
    long long v16 = *(long long *)((char *)v3 + 216);
    long long v17 = *(long long *)((char *)v3 + 248);
    long long v28 = *(long long *)((char *)v3 + 232);
    long long v29 = v17;
    long long v18 = *(long long *)((char *)v3 + 280);
    long long v30 = *(long long *)((char *)v3 + 264);
    long long v31 = v18;
    long long v19 = *(long long *)((char *)v3 + 184);
    long long v24 = *(long long *)((char *)v3 + 168);
    long long v20 = *(long long *)((char *)v3 + 200);
    long long v27 = v16;
    long long v25 = v19;
    long long v26 = v20;
    char v23 = 1;
    sub_249AEDF08();
    LOBYTE(v24) = v14;
    char v23 = 2;
    sub_249A84C74();
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t DigiBarCruiseControlConfiguration.hashValue.getter()
{
  sub_249AEE338();
  Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)((uint64_t)v1);
  Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)((uint64_t)v1);
  sub_249AEE348();
  return sub_249AEE388();
}

void *DigiBarCruiseControlConfiguration.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E5018);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  long long v66 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v9);
  sub_249A84C20();
  sub_249AEE428();
  if (v2) {
    return (void *)__swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v66);
  }
  long long v12 = a2;
  uint64_t v13 = v6;
  char v53 = 0;
  sub_249A337C0();
  sub_249AEDE08();
  long long v50 = v62;
  long long v51 = v63;
  long long v46 = v58;
  long long v47 = v59;
  long long v49 = v61;
  long long v48 = v60;
  long long v42 = v54;
  long long v43 = v55;
  long long v45 = v57;
  long long v44 = v56;
  v65[8] = v62;
  v65[9] = v63;
  v65[4] = v58;
  v65[5] = v59;
  v65[7] = v61;
  v65[6] = v60;
  v65[0] = v54;
  v65[1] = v55;
  int v52 = v64;
  LODWORD(v65[10]) = v64;
  v65[3] = v57;
  v65[2] = v56;
  char v30 = 1;
  sub_249A33A00((uint64_t)&v42);
  sub_249AEDE08();
  long long v27 = v39;
  long long v28 = v40;
  long long v23 = v35;
  long long v24 = v36;
  long long v25 = v37;
  long long v26 = v38;
  long long v19 = v31;
  long long v20 = v32;
  long long v21 = v33;
  long long v22 = v34;
  *(_OWORD *)((char *)&v65[18] + 8) = v39;
  *(_OWORD *)((char *)&v65[19] + 8) = v40;
  *(_OWORD *)((char *)&v65[16] + 8) = v37;
  *(_OWORD *)((char *)&v65[17] + 8) = v38;
  *(_OWORD *)((char *)&v65[13] + 8) = v34;
  *(_OWORD *)((char *)&v65[14] + 8) = v35;
  *(_OWORD *)((char *)&v65[15] + 8) = v36;
  *(_OWORD *)((char *)&v65[10] + 8) = v31;
  *(_OWORD *)((char *)&v65[11] + 8) = v32;
  int v29 = v41;
  DWORD2(v65[20]) = v41;
  *(_OWORD *)((char *)&v65[12] + 8) = v33;
  char v17 = 2;
  sub_249A33A00((uint64_t)&v19);
  sub_249A84CC8();
  sub_249AEDE08();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v5);
  v14[8] = v50;
  v14[9] = v51;
  v14[4] = v46;
  v14[5] = v47;
  _OWORD v14[6] = v48;
  v14[7] = v49;
  v14[0] = v42;
  v14[1] = v43;
  void v14[2] = v44;
  _OWORD v14[3] = v45;
  *(_OWORD *)((char *)&v14[18] + 8) = v27;
  *(_OWORD *)((char *)&v14[19] + 8) = v28;
  *(_OWORD *)((char *)&v14[16] + 8) = v25;
  *(_OWORD *)((char *)&v14[17] + 8) = v26;
  *(_OWORD *)((char *)&v14[13] + 8) = v22;
  *(_OWORD *)((char *)&v14[14] + 8) = v23;
  *(_OWORD *)((char *)&v14[15] + 8) = v24;
  *(_OWORD *)((char *)&v14[10] + 8) = v19;
  *(_OWORD *)((char *)&v14[11] + 8) = v20;
  char v10 = v18;
  LODWORD(v14[10]) = v52;
  DWORD2(v14[20]) = v29;
  *(_OWORD *)((char *)&v14[12] + 8) = v21;
  BYTE12(v14[20]) = v18;
  sub_249A84D1C(v14);
  sub_249A33AAC((uint64_t)&v19);
  sub_249A33AAC((uint64_t)&v42);
  memcpy(v12, v14, 0x14DuLL);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v66);
  memcpy(v15, v65, sizeof(v15));
  char v16 = v10;
  return sub_249A84E40(v15);
}

void *sub_249A83984@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return DigiBarCruiseControlConfiguration.init(from:)(a1, a2);
}

uint64_t sub_249A8399C(void *a1)
{
  return DigiBarCruiseControlConfiguration.encode(to:)(a1);
}

uint64_t sub_249A839B4()
{
  sub_249AEE338();
  Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)((uint64_t)v1);
  Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)((uint64_t)v1);
  sub_249AEE348();
  return sub_249AEE388();
}

uint64_t sub_249A83A1C(uint64_t a1)
{
  return sub_249AEE348();
}

uint64_t sub_249A83A68()
{
  sub_249AEE338();
  Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)((uint64_t)v1);
  Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)((uint64_t)v1);
  sub_249AEE348();
  return sub_249AEE388();
}

BOOL _s14CarPlayAssetUI18DigiBarRadialStyleV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64((float64x2_t)vextq_s8(*(int8x16_t *)a1, *(int8x16_t *)a1, 8uLL), (float64x2_t)vextq_s8(*(int8x16_t *)a2, *(int8x16_t *)a2, 8uLL)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 24), *(float64x2_t *)(a2 + 24)))), 0xFuLL))) & 1) != 0&& *(float *)(a1 + 40) == *(float *)(a2 + 40)&& *(float *)(a1 + 44) == *(float *)(a2 + 44)&& *(float *)(a1 + 48) == *(float *)(a2 + 48)&& ((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) == 0)
  {
    return *(unsigned __int8 *)(a1 + 52) == *(unsigned __int8 *)(a2 + 52);
  }
  return result;
}

uint64_t _s14CarPlayAssetUI18DigiBarLinearStyleV2eeoiySbAC_ACtFZ_0(float32x4_t *a1, float32x4_t *a2)
{
  if (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(*a1, *a2)), 0xFuLL)))) {
    return (a2[1].u8[0] ^ a1[1].u8[0] ^ 1) & 1;
  }
  else {
    return 0;
  }
}

BOOL _s14CarPlayAssetUI10InstrumentV10GaugeStyleO20DigiBarConfigurationV0G0O2eeoiySbAI_AItFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  unint64_t v5 = *((unsigned int *)a1 + 12) | (unint64_t)((uint64_t)*((char *)a1 + 52) << 32);
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v8 = a2[2];
  unint64_t v9 = *((unsigned int *)a2 + 12) | (unint64_t)((uint64_t)*((char *)a2 + 52) << 32);
  if ((v5 & 0x8000000000000000) == 0)
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      long long v10 = *(_OWORD *)(a2 + 3);
      uint64_t v11 = a2[5];
      uint64_t v12 = a1[5];
      v23[0] = *a1;
      v23[1] = v2;
      char v24 = v4 & 1;
      long long v25 = *(_OWORD *)(a1 + 3);
      uint64_t v26 = v12;
      int v27 = v5;
      char v28 = BYTE4(v5);
      v17[0] = v7;
      v17[1] = v6;
      char v18 = v8 & 1;
      long long v19 = v10;
      uint64_t v20 = v11;
      int v21 = v9;
      char v22 = BYTE4(v9);
      return _s14CarPlayAssetUI18DigiBarRadialStyleV2eeoiySbAC_ACtFZ_0((uint64_t)v23, (uint64_t)v17);
    }
    return 0;
  }
  if ((v9 & 0x8000000000000000) == 0) {
    return 0;
  }
  uint64_t v14 = a2[1];
  BOOL v15 = *(float *)&v3 == *(float *)&v7;
  if (*((float *)&v3 + 1) != *((float *)&v7 + 1)) {
    BOOL v15 = 0;
  }
  if (*(float *)&v2 != *(float *)&v14) {
    BOOL v15 = 0;
  }
  if (*((float *)&v2 + 1) != *((float *)&v14 + 1)) {
    BOOL v15 = 0;
  }
  return v15 & (((a2[2] & 1) == 0) ^ v4);
}

BOOL _s14CarPlayAssetUI27DigiBarRedlineConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = *(void *)(a1 + 16);
  uint64_t v36 = *(void *)(a1 + 8);
  uint64_t v33 = *(void *)(a1 + 32);
  uint64_t v34 = *(void *)(a1 + 24);
  uint64_t v31 = *(void *)(a1 + 48);
  uint64_t v32 = *(void *)(a1 + 40);
  uint64_t v29 = *(void *)(a1 + 56);
  uint64_t v30 = *(unsigned __int8 *)(a1 + 68);
  uint64_t v2 = *(unsigned int *)(a1 + 64);
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v10 = *(unsigned __int8 *)(a2 + 68);
  uint64_t v11 = *(unsigned int *)(a2 + 64);
  if ((sub_2499FEF30(*(void *)a1, *(void *)a2) & 1) == 0) {
    return 0;
  }
  uint64_t v23 = v11;
  uint64_t v24 = v10;
  uint64_t v25 = v2;
  uint64_t v26 = v9;
  uint64_t v27 = v6;
  uint64_t v28 = v4;
  if (v36)
  {
    if (v3)
    {
      uint64_t v12 = v8;
      uint64_t v13 = v35;
      uint64_t v14 = v33;
      uint64_t v15 = v32;
      uint64_t v16 = v31;
      uint64_t v17 = v30;
      uint64_t v18 = v7;
      swift_bridgeObjectRetain();
      uint64_t v19 = swift_bridgeObjectRetain();
      char v22 = sub_2499FEF30(v19, v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_5;
      }
    }
    return 0;
  }
  uint64_t v18 = v7;
  uint64_t v12 = v8;
  uint64_t v13 = v35;
  uint64_t v14 = v33;
  uint64_t v15 = v32;
  uint64_t v16 = v31;
  uint64_t v17 = v30;
  if (v3) {
    return 0;
  }
LABEL_5:
  v40[0] = v13;
  v40[1] = v34;
  _OWORD v40[2] = v14;
  v40[3] = v15;
  v40[4] = v16;
  v40[5] = v29;
  int v41 = v25;
  char v42 = (v25 | (unint64_t)(v17 << 32)) >> 32;
  v37[0] = v28;
  v37[1] = v5;
  v37[2] = v27;
  v37[3] = v18;
  v37[4] = v12;
  v37[5] = v26;
  char v39 = (v23 | (unint64_t)(v24 << 32)) >> 32;
  int v38 = v23;
  return _s14CarPlayAssetUI10InstrumentV10GaugeStyleO20DigiBarConfigurationV0G0O2eeoiySbAI_AItFZ_0(v40, v37);
}

BOOL _s14CarPlayAssetUI10InstrumentV10GaugeStyleO20DigiBarConfigurationV2eeoiySbAG_AGtFZ_0(long long *a1, long long *a2)
{
  uint64_t v69 = *((void *)a1 + 4);
  uint64_t v70 = *((void *)a1 + 3);
  uint64_t v67 = *((void *)a1 + 6);
  uint64_t v68 = *((void *)a1 + 5);
  uint64_t v65 = *((void *)a1 + 8);
  uint64_t v66 = *((void *)a1 + 7);
  uint64_t v64 = *((unsigned __int8 *)a1 + 76);
  uint64_t v63 = *((unsigned int *)a1 + 18);
  float v2 = *((float *)a1 + 20);
  uint64_t v47 = *((void *)a1 + 12);
  uint64_t v48 = *((void *)a1 + 13);
  uint64_t v49 = *((void *)a1 + 14);
  uint64_t v50 = *((void *)a1 + 15);
  uint64_t v51 = *((void *)a1 + 16);
  uint64_t v52 = *((void *)a1 + 17);
  uint64_t v53 = *((void *)a1 + 18);
  uint64_t v54 = *((void *)a1 + 11);
  uint64_t v46 = *((unsigned __int8 *)a1 + 156);
  uint64_t v45 = *((unsigned int *)a1 + 38);
  float v3 = *((float *)a1 + 40);
  uint64_t v4 = *((void *)a2 + 2);
  uint64_t v61 = *((void *)a2 + 4);
  uint64_t v62 = *((void *)a2 + 3);
  uint64_t v59 = *((void *)a2 + 6);
  uint64_t v60 = *((void *)a2 + 5);
  uint64_t v57 = *((void *)a2 + 8);
  uint64_t v58 = *((void *)a2 + 7);
  uint64_t v56 = *((unsigned __int8 *)a2 + 76);
  uint64_t v55 = *((unsigned int *)a2 + 18);
  float v5 = *((float *)a2 + 20);
  long long v6 = *a1;
  uint64_t v8 = *((void *)a2 + 11);
  uint64_t v7 = *((void *)a2 + 12);
  uint64_t v82 = *((void *)a1 + 2);
  uint64_t v73 = v4;
  uint64_t v10 = *((void *)a2 + 13);
  uint64_t v9 = *((void *)a2 + 14);
  float v11 = *((float *)a2 + 40);
  long long v81 = v6;
  uint64_t v12 = *((void *)a2 + 15);
  uint64_t v13 = *((void *)a2 + 16);
  uint64_t v14 = *((void *)a2 + 17);
  uint64_t v15 = *((void *)a2 + 18);
  uint64_t v16 = *((unsigned __int8 *)a2 + 156);
  uint64_t v17 = *((unsigned int *)a2 + 38);
  long long v72 = *a2;
  if ((_s14CarPlayAssetUI10InstrumentV10GaugeStyleO26DigiBarColorsConfigurationV2eeoiySbAG_AGtFZ_0(&v81, (uint64_t *)&v72) & 1) == 0)return 0; {
  uint64_t v37 = v17;
  }
  uint64_t v38 = v16;
  uint64_t v39 = v10;
  uint64_t v40 = v8;
  uint64_t v41 = v9;
  uint64_t v42 = v13;
  uint64_t v43 = v14;
  uint64_t v44 = v15;
  *(void *)&long long v81 = v70;
  *((void *)&v81 + 1) = v69;
  uint64_t v82 = v68;
  uint64_t v83 = v67;
  uint64_t v84 = v66;
  uint64_t v85 = v65;
  LODWORD(v86) = v63;
  BYTE4(v86) = (v63 | (unint64_t)(v64 << 32)) >> 32;
  *(void *)&long long v72 = v62;
  *((void *)&v72 + 1) = v61;
  uint64_t v73 = v60;
  uint64_t v74 = v59;
  uint64_t v75 = v58;
  uint64_t v76 = v57;
  BYTE4(v77) = (v55 | (unint64_t)(v56 << 32)) >> 32;
  LODWORD(v77) = v55;
  BOOL v18 = _s14CarPlayAssetUI10InstrumentV10GaugeStyleO20DigiBarConfigurationV0G0O2eeoiySbAI_AItFZ_0((uint64_t *)&v81, (uint64_t *)&v72);
  BOOL result = 0;
  if (v18 && v2 == v5)
  {
    uint64_t v20 = v17 | (v16 << 32);
    uint64_t v21 = v54;
    if (v54)
    {
      uint64_t v22 = v47;
      uint64_t v23 = v48;
      *(void *)&long long v81 = v54;
      *((void *)&v81 + 1) = v47;
      uint64_t v25 = v49;
      uint64_t v24 = v50;
      uint64_t v82 = v48;
      uint64_t v83 = v49;
      uint64_t v27 = v51;
      uint64_t v26 = v52;
      uint64_t v84 = v50;
      uint64_t v85 = v51;
      uint64_t v28 = v53;
      uint64_t v86 = v52;
      uint64_t v87 = v53;
      int v88 = v45;
      char v89 = (v45 | (unint64_t)(v46 << 32)) >> 32;
      if (v40)
      {
        *(void *)&long long v72 = v40;
        *((void *)&v72 + 1) = v7;
        uint64_t v73 = v39;
        uint64_t v74 = v41;
        uint64_t v75 = v12;
        uint64_t v76 = v42;
        uint64_t v77 = v43;
        uint64_t v78 = v44;
        int v79 = v37;
        char v80 = (v37 | (unint64_t)(v38 << 32)) >> 32;
        sub_2498FC674(v54);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        BOOL v71 = _s14CarPlayAssetUI27DigiBarRedlineConfigurationV2eeoiySbAC_ACtFZ_0((uint64_t)&v81, (uint64_t)&v72);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_249882B2C(v54);
        if (!v71) {
          return 0;
        }
        return v3 == v11;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v36 = v39;
      uint64_t v35 = 0;
      uint64_t v34 = v12;
      uint64_t v33 = v41;
      uint64_t v31 = v7;
      uint64_t v32 = v42;
      uint64_t v29 = v43;
      uint64_t v30 = v44;
      uint64_t v21 = v54;
    }
    else
    {
      uint64_t v26 = v52;
      uint64_t v28 = v53;
      uint64_t v24 = v50;
      uint64_t v27 = v51;
      uint64_t v23 = v48;
      uint64_t v25 = v49;
      uint64_t v22 = v47;
      uint64_t v29 = v43;
      uint64_t v30 = v44;
      uint64_t v31 = v7;
      uint64_t v32 = v42;
      uint64_t v34 = v12;
      uint64_t v33 = v41;
      uint64_t v36 = v39;
      uint64_t v35 = v40;
      if (!v40) {
        return v3 == v11;
      }
    }
    *(void *)&long long v81 = v21;
    *((void *)&v81 + 1) = v22;
    uint64_t v82 = v23;
    uint64_t v83 = v25;
    uint64_t v84 = v24;
    uint64_t v85 = v27;
    uint64_t v86 = v26;
    uint64_t v87 = v28;
    int v88 = v45;
    char v89 = (v45 | (unint64_t)(v46 << 32)) >> 32;
    uint64_t v90 = v35;
    uint64_t v91 = v31;
    uint64_t v92 = v36;
    uint64_t v93 = v33;
    uint64_t v94 = v34;
    uint64_t v95 = v32;
    uint64_t v96 = v29;
    uint64_t v97 = v30;
    int v98 = v20;
    char v99 = BYTE4(v20);
    sub_2498FC674(v35);
    sub_249A889C0((uint64_t *)&v81);
    return 0;
  }
  return result;
}

uint64_t _s14CarPlayAssetUI25PowermeterDataIdentifiersV2eeoiySbAC_ACtFZ_0()
{
  unint64_t v0 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == InstrumentDataIdentifier.rawValue.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v4 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = 0;
    if ((v4 & 1) == 0) {
      return v5 & 1;
    }
  }
  unint64_t v6 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v8 = v7;
  if (v6 == InstrumentDataIdentifier.rawValue.getter() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = 0;
    if ((v10 & 1) == 0) {
      return v5 & 1;
    }
  }
  unint64_t v11 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v13 = v12;
  if (v11 == InstrumentDataIdentifier.rawValue.getter() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = 0;
    if ((v15 & 1) == 0) {
      return v5 & 1;
    }
  }
  unint64_t v16 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v18 = v17;
  if (v16 == InstrumentDataIdentifier.rawValue.getter() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v20 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = 0;
    if ((v20 & 1) == 0) {
      return v5 & 1;
    }
  }
  unint64_t v21 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v23 = v22;
  if (v21 == InstrumentDataIdentifier.rawValue.getter() && v23 == v24)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v25 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = 0;
    if ((v25 & 1) == 0) {
      return v5 & 1;
    }
  }
  unint64_t v26 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v28 = v27;
  if (v26 == InstrumentDataIdentifier.rawValue.getter() && v28 == v29) {
    char v5 = 1;
  }
  else {
    char v5 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_249A84568()
{
  unint64_t result = qword_2696E4F08;
  if (!qword_2696E4F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4F08);
  }
  return result;
}

unint64_t sub_249A845BC()
{
  unint64_t result = qword_2696E4F20;
  if (!qword_2696E4F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4F20);
  }
  return result;
}

unint64_t sub_249A84610()
{
  unint64_t result = qword_2696E4F38;
  if (!qword_2696E4F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4F38);
  }
  return result;
}

unint64_t sub_249A84664()
{
  unint64_t result = qword_2696E4F60;
  if (!qword_2696E4F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4F60);
  }
  return result;
}

unint64_t sub_249A846B8()
{
  unint64_t result = qword_2696E4F68;
  if (!qword_2696E4F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4F68);
  }
  return result;
}

unint64_t sub_249A8470C()
{
  unint64_t result = qword_2696E4F70;
  if (!qword_2696E4F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4F70);
  }
  return result;
}

unint64_t sub_249A84760()
{
  unint64_t result = qword_2696E4F98;
  if (!qword_2696E4F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4F98);
  }
  return result;
}

unint64_t sub_249A847B4()
{
  unint64_t result = qword_2696E4FA0;
  if (!qword_2696E4FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4FA0);
  }
  return result;
}

unint64_t sub_249A84808()
{
  unint64_t result = qword_2696E4FB0;
  if (!qword_2696E4FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4FB0);
  }
  return result;
}

uint64_t sub_249A8485C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s14CarPlayAssetUI33DigiBarCruiseControlConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a1 + 144);
  long long v46 = *(_OWORD *)(a1 + 128);
  long long v47 = v4;
  int v48 = *(_DWORD *)(a1 + 160);
  long long v5 = *(_OWORD *)(a1 + 80);
  long long v42 = *(_OWORD *)(a1 + 64);
  long long v43 = v5;
  long long v6 = *(_OWORD *)(a1 + 112);
  long long v44 = *(_OWORD *)(a1 + 96);
  long long v45 = v6;
  long long v7 = *(_OWORD *)(a1 + 16);
  long long v38 = *(_OWORD *)a1;
  long long v39 = v7;
  long long v8 = *(_OWORD *)(a1 + 48);
  long long v40 = *(_OWORD *)(a1 + 32);
  long long v41 = v8;
  int v9 = *(unsigned __int8 *)(a1 + 332);
  long long v10 = *(_OWORD *)(a2 + 144);
  long long v35 = *(_OWORD *)(a2 + 128);
  long long v36 = v10;
  int v37 = *(_DWORD *)(a2 + 160);
  long long v11 = *(_OWORD *)(a2 + 80);
  long long v31 = *(_OWORD *)(a2 + 64);
  long long v32 = v11;
  long long v12 = *(_OWORD *)(a2 + 112);
  long long v33 = *(_OWORD *)(a2 + 96);
  long long v34 = v12;
  long long v13 = *(_OWORD *)(a2 + 16);
  long long v27 = *(_OWORD *)a2;
  long long v28 = v13;
  long long v14 = *(_OWORD *)(a2 + 48);
  long long v29 = *(_OWORD *)(a2 + 32);
  long long v30 = v14;
  int v15 = *(unsigned __int8 *)(a2 + 332);
  if (!_s14CarPlayAssetUI10InstrumentV10GaugeStyleO20DigiBarConfigurationV2eeoiySbAG_AGtFZ_0(&v38, &v27)) {
    return 0;
  }
  int v48 = *(_DWORD *)(a1 + 328);
  long long v16 = *(_OWORD *)(a1 + 216);
  long long v17 = *(_OWORD *)(a1 + 248);
  long long v42 = *(_OWORD *)(a1 + 232);
  long long v43 = v17;
  long long v18 = *(_OWORD *)(a1 + 184);
  long long v38 = *(_OWORD *)(a1 + 168);
  long long v39 = v18;
  long long v40 = *(_OWORD *)(a1 + 200);
  long long v41 = v16;
  long long v19 = *(_OWORD *)(a1 + 312);
  long long v46 = *(_OWORD *)(a1 + 296);
  long long v47 = v19;
  long long v20 = *(_OWORD *)(a1 + 280);
  long long v44 = *(_OWORD *)(a1 + 264);
  long long v45 = v20;
  long long v21 = *(_OWORD *)(a2 + 312);
  long long v35 = *(_OWORD *)(a2 + 296);
  long long v36 = v21;
  int v37 = *(_DWORD *)(a2 + 328);
  long long v22 = *(_OWORD *)(a2 + 216);
  long long v23 = *(_OWORD *)(a2 + 248);
  long long v31 = *(_OWORD *)(a2 + 232);
  long long v32 = v23;
  long long v24 = *(_OWORD *)(a2 + 280);
  long long v33 = *(_OWORD *)(a2 + 264);
  long long v34 = v24;
  long long v25 = *(_OWORD *)(a2 + 184);
  long long v27 = *(_OWORD *)(a2 + 168);
  long long v28 = v25;
  long long v29 = *(_OWORD *)(a2 + 200);
  long long v30 = v22;
  return _s14CarPlayAssetUI10InstrumentV10GaugeStyleO20DigiBarConfigurationV2eeoiySbAG_AGtFZ_0(&v38, &v27) & (v9 == v15);
}

BOOL _s14CarPlayAssetUI24DigiBarMaskConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  unint64_t v5 = *((unsigned int *)a1 + 12) | (unint64_t)((uint64_t)*((char *)a1 + 52) << 32);
  float v6 = *((float *)a1 + 14);
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v9 = a2[2];
  unint64_t v10 = *((unsigned int *)a2 + 12) | (unint64_t)((uint64_t)*((char *)a2 + 52) << 32);
  float v11 = *((float *)a2 + 14);
  if ((v5 & 0x8000000000000000) != 0)
  {
    if ((v10 & 0x8000000000000000) != 0)
    {
      BOOL v16 = *(float *)&v3 == *(float *)&v8 && *((float *)&v3 + 1) == *((float *)&v8 + 1);
      BOOL v17 = v16 && *(float *)&v2 == *(float *)&v7;
      BOOL v18 = v17 && *((float *)&v2 + 1) == *((float *)&v7 + 1);
      if (v18 && ((v9 ^ v4) & 1) == 0) {
        return v6 == v11;
      }
    }
  }
  else if ((v10 & 0x8000000000000000) == 0)
  {
    long long v12 = *(_OWORD *)(a2 + 3);
    uint64_t v13 = a2[5];
    uint64_t v14 = a1[5];
    v25[0] = *a1;
    v25[1] = v2;
    char v26 = v4 & 1;
    long long v27 = *(_OWORD *)(a1 + 3);
    uint64_t v28 = v14;
    int v29 = v5;
    char v30 = BYTE4(v5);
    v19[0] = v8;
    v19[1] = v7;
    char v20 = v9 & 1;
    long long v21 = v12;
    uint64_t v22 = v13;
    int v23 = v10;
    char v24 = BYTE4(v10);
    if (_s14CarPlayAssetUI18DigiBarRadialStyleV2eeoiySbAC_ACtFZ_0((uint64_t)v25, (uint64_t)v19)) {
      return v6 == v11;
    }
  }
  return 0;
}

unint64_t sub_249A84B24()
{
  unint64_t result = qword_2696E4FC0;
  if (!qword_2696E4FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4FC0);
  }
  return result;
}

unint64_t sub_249A84B78()
{
  unint64_t result = qword_2696E4FD8;
  if (!qword_2696E4FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4FD8);
  }
  return result;
}

unint64_t sub_249A84BCC()
{
  unint64_t result = qword_2696E4FF0;
  if (!qword_2696E4FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E4FF0);
  }
  return result;
}

unint64_t sub_249A84C20()
{
  unint64_t result = qword_2696E5008;
  if (!qword_2696E5008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5008);
  }
  return result;
}

unint64_t sub_249A84C74()
{
  unint64_t result = qword_2696E5010;
  if (!qword_2696E5010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5010);
  }
  return result;
}

unint64_t sub_249A84CC8()
{
  unint64_t result = qword_2696E5020;
  if (!qword_2696E5020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5020);
  }
  return result;
}

void *sub_249A84D1C(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v5 = a1[11];
  uint64_t v4 = a1[22];
  uint64_t v6 = a1[32];
  swift_bridgeObjectRetain();
  sub_2498FC674(v2);
  sub_2498FC674(v5);
  swift_bridgeObjectRetain();
  sub_2498FC674(v4);
  sub_2498FC674(v6);
  return a1;
}

void *sub_249A84E40(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v5 = a1[11];
  uint64_t v4 = a1[22];
  uint64_t v6 = a1[32];
  swift_bridgeObjectRelease();
  sub_249882B2C(v2);
  sub_249882B2C(v5);
  swift_bridgeObjectRelease();
  sub_249882B2C(v4);
  sub_249882B2C(v6);
  return a1;
}

unint64_t sub_249A84F68()
{
  unint64_t result = qword_2696E5028;
  if (!qword_2696E5028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5028);
  }
  return result;
}

unint64_t sub_249A84FC8()
{
  unint64_t result = qword_2696E5030;
  if (!qword_2696E5030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5030);
  }
  return result;
}

unint64_t sub_249A85020()
{
  unint64_t result = qword_2696E5038;
  if (!qword_2696E5038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5038);
  }
  return result;
}

unint64_t sub_249A85078()
{
  unint64_t result = qword_2696E5040;
  if (!qword_2696E5040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5040);
  }
  return result;
}

unint64_t sub_249A850D8()
{
  unint64_t result = qword_2696E5048;
  if (!qword_2696E5048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5048);
  }
  return result;
}

unint64_t sub_249A85130()
{
  unint64_t result = qword_2696E5050;
  if (!qword_2696E5050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5050);
  }
  return result;
}

unint64_t sub_249A85188()
{
  unint64_t result = qword_2696E5058;
  if (!qword_2696E5058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5058);
  }
  return result;
}

unint64_t sub_249A851E0()
{
  unint64_t result = qword_2696E5060;
  if (!qword_2696E5060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5060);
  }
  return result;
}

unint64_t sub_249A85238()
{
  unint64_t result = qword_2696E5068;
  if (!qword_2696E5068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5068);
  }
  return result;
}

unint64_t sub_249A852A0()
{
  unint64_t result = qword_2696E5070;
  if (!qword_2696E5070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5070);
  }
  return result;
}

unint64_t sub_249A852F8()
{
  unint64_t result = qword_2696E5078;
  if (!qword_2696E5078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5078);
  }
  return result;
}

uint64_t sub_249A8534C@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 5);
  return result;
}

unsigned char *sub_249A85358(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 5) = *result;
  return result;
}

float sub_249A85364@<S0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  float result = *(float *)(a1 + 160);
  *a2 = result;
  return result;
}

float sub_249A85370(float *a1, uint64_t a2)
{
  float result = *a1;
  *(float *)(a2 + 160) = *a1;
  return result;
}

__n128 __swift_memcpy53_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 45) = *(void *)(a2 + 45);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DigiBarRadialStyle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 53)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DigiBarRadialStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 53) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 53) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DigiBarRadialStyle()
{
  return &type metadata for DigiBarRadialStyle;
}

ValueMetadata *type metadata accessor for DigiBarRadialStyle.LineCap()
{
  return &type metadata for DigiBarRadialStyle.LineCap;
}

__n128 __swift_memcpy17_4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DigiBarLinearStyle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DigiBarLinearStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DigiBarLinearStyle()
{
  return &type metadata for DigiBarLinearStyle;
}

uint64_t __swift_memcpy6_1(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)__n128 result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PowermeterDataIdentifiers(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC8 && a1[6]) {
    return (*(_DWORD *)a1 + 200);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 0x39;
  int v5 = v3 - 57;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PowermeterDataIdentifiers(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC7)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)__n128 result = a2 - 200;
    if (a3 >= 0xC8) {
      *(unsigned char *)(result + 6) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC8) {
      *(unsigned char *)(result + 6) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 56;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PowermeterDataIdentifiers()
{
  return &type metadata for PowermeterDataIdentifiers;
}

uint64_t _s14descr26FD9EE19O20DigiBarConfigurationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = *(void *)(a1 + 88);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s14descr26FD9EE19O20DigiBarConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  int v5 = (_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *v5;
  }
  uint64_t v7 = *(void *)(a2 + 88);
  long long v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 69) = *(void *)(a2 + 69);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = v7;
    *(void *)(a1 + 96) = v9;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(void *)(a1 + 149) = *(void *)(a2 + 149);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v10;
    *(void *)(a1 + 149) = *(void *)(a2 + 149);
    long long v11 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v11;
  }
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  return a1;
}

uint64_t _s14descr26FD9EE19O20DigiBarConfigurationVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_2499BC150(a1 + 8);
  }
  else if (v4)
  {
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
LABEL_8:
  long long v5 = *(_OWORD *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 40);
  long long v7 = *(_OWORD *)(a2 + 56);
  long long v8 = (_OWORD *)(a1 + 88);
  uint64_t v9 = *(void *)(a1 + 88);
  *(void *)(a1 + 69) = *(void *)(a2 + 69);
  *(_OWORD *)(a1 + 40) = v6;
  *(_OWORD *)(a1 + 56) = v7;
  *(_OWORD *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  long long v11 = (_OWORD *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 88);
  if (v9)
  {
    if (v10)
    {
      *(void *)(a1 + 88) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      long long v12 = *(_OWORD *)(a2 + 104);
      long long v13 = *(_OWORD *)(a2 + 120);
      long long v14 = *(_OWORD *)(a2 + 136);
      *(void *)(a1 + 149) = *(void *)(a2 + 149);
      *(_OWORD *)(a1 + 136) = v14;
      *(_OWORD *)(a1 + 120) = v13;
      *(_OWORD *)(a1 + 104) = v12;
    }
    else
    {
      sub_249A34E9C(a1 + 88);
      *long long v8 = *v11;
      long long v19 = *(_OWORD *)(a2 + 120);
      long long v18 = *(_OWORD *)(a2 + 136);
      long long v20 = *(_OWORD *)(a2 + 104);
      *(void *)(a1 + 149) = *(void *)(a2 + 149);
      *(_OWORD *)(a1 + 120) = v19;
      *(_OWORD *)(a1 + 136) = v18;
      *(_OWORD *)(a1 + 104) = v20;
    }
  }
  else if (v10)
  {
    *(void *)(a1 + 88) = v10;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    long long v15 = *(_OWORD *)(a2 + 104);
    long long v16 = *(_OWORD *)(a2 + 120);
    long long v17 = *(_OWORD *)(a2 + 136);
    *(void *)(a1 + 149) = *(void *)(a2 + 149);
    *(_OWORD *)(a1 + 136) = v17;
    *(_OWORD *)(a1 + 120) = v16;
    *(_OWORD *)(a1 + 104) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *long long v8 = *v11;
    long long v21 = *(_OWORD *)(a2 + 104);
    long long v22 = *(_OWORD *)(a2 + 120);
    long long v23 = *(_OWORD *)(a2 + 136);
    *(void *)(a1 + 149) = *(void *)(a2 + 149);
    *(_OWORD *)(a1 + 120) = v22;
    *(_OWORD *)(a1 + 136) = v23;
    *(_OWORD *)(a1 + 104) = v21;
  }
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  return a1;
}

__n128 __swift_memcpy164_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(_DWORD *)(a1 + 160) = *((_DWORD *)a2 + 40);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t _s14descr26FD9EE19O20DigiBarConfigurationVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_2499BC150(a1 + 8);
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
LABEL_6:
  uint64_t v5 = *(void *)(a2 + 88);
  uint64_t v6 = *(void *)(a1 + 88);
  long long v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 69) = *(void *)(a2 + 69);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  if (!v6)
  {
LABEL_10:
    long long v8 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v8;
    *(void *)(a1 + 149) = *(void *)(a2 + 149);
    long long v9 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v9;
    goto LABEL_11;
  }
  if (!v5)
  {
    sub_249A34E9C(a1 + 88);
    goto LABEL_10;
  }
  *(void *)(a1 + 88) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 149) = *(void *)(a2 + 149);
LABEL_11:
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  return a1;
}

uint64_t _s14descr26FD9EE19O20DigiBarConfigurationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 164)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 40) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t _s14descr26FD9EE19O20DigiBarConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 160) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 164) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = 0;
      *(void *)(result + 40) = 2 * -a2;
      *(void *)(result + 48) = 0;
      *(void *)(result + 56) = 0;
      *(void *)(result + 64) = 0;
      *(void *)(result + 69) = 0;
      return result;
    }
    *(unsigned char *)(result + 164) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.DigiBarConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.DigiBarConfiguration;
}

uint64_t _s14descr26FD9EE19O20DigiBarConfigurationV5StyleOwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 53)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 16) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t _s14descr26FD9EE19O20DigiBarConfigurationV5StyleOwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 53) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 2 * -a2;
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = 0;
      *(void *)(result + 40) = 0;
      *(void *)(result + 45) = 0;
      return result;
    }
    *(unsigned char *)(result + 53) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_249A85C08(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 52) >> 7;
}

uint64_t sub_249A85C14(uint64_t a1)
{
  unsigned int v2 = *(_DWORD *)(a1 + 48);
  uint64_t result = a1 + 48;
  unint64_t v3 = v2 | ((unint64_t)*(unsigned __int8 *)(result + 4) << 32);
  *(_DWORD *)uint64_t result = v2;
  *(unsigned char *)(result + 4) = BYTE4(v3) & 0x7F;
  return result;
}

uint64_t sub_249A85C30(uint64_t a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 48);
  uint64_t result = a1 + 48;
  unint64_t v4 = (a2 << 39) | ((unint64_t)(*(unsigned char *)(result + 4) & 3) << 32);
  *(void *)(result - 32) &= 1uLL;
  *(_DWORD *)uint64_t result = v3;
  *(unsigned char *)(result + 4) = BYTE4(v4);
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.DigiBarConfiguration.Style()
{
  return &type metadata for Instrument.GaugeStyle.DigiBarConfiguration.Style;
}

__n128 __swift_memcpy60_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 44) = *(_OWORD *)(a2 + 44);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DigiBarMaskConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 60)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 16) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for DigiBarMaskConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 60) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 2 * -a2;
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = 0;
      *(void *)(result + 40) = 0;
      *(void *)(result + 45) = 0;
      return result;
    }
    *(unsigned char *)(result + 60) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DigiBarMaskConfiguration()
{
  return &type metadata for DigiBarMaskConfiguration;
}

uint64_t initializeWithCopy for DigiBarRedlineConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 61) = *(void *)(a2 + 61);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DigiBarRedlineConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 61) = *(void *)(a2 + 61);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy69_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 61) = *(void *)(a2 + 61);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for DigiBarRedlineConfiguration(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 61) = *(void *)(a2 + 61);
  return a1;
}

uint64_t getEnumTagSinglePayload for DigiBarRedlineConfiguration(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 69)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DigiBarRedlineConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 68) = 0;
    *(_DWORD *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 69) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 69) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DigiBarRedlineConfiguration()
{
  return &type metadata for DigiBarRedlineConfiguration;
}

uint64_t initializeWithCopy for DigiBandGradientProgressConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 53) = *(void *)(a2 + 53);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DigiBandGradientProgressConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  return a1;
}

__n128 __swift_memcpy61_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 45) = *(_OWORD *)(a2 + 45);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DigiBandGradientProgressConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  return a1;
}

uint64_t getEnumTagSinglePayload for DigiBandGradientProgressConfiguration(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 61)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DigiBandGradientProgressConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 60) = 0;
    *(_DWORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 61) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 61) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DigiBandGradientProgressConfiguration()
{
  return &type metadata for DigiBandGradientProgressConfiguration;
}

uint64_t destroy for DigiBarCruiseControlConfiguration(void *a1)
{
  swift_bridgeObjectRelease();
  if (a1[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[11])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[22])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = a1[32];
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DigiBarCruiseControlConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  long long v5 = (_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *v5;
  }
  uint64_t v7 = *(void *)(a2 + 88);
  long long v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 69) = *(void *)(a2 + 69);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = v7;
    *(void *)(a1 + 96) = v9;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(void *)(a1 + 149) = *(void *)(a2 + 149);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v10;
    *(void *)(a1 + 149) = *(void *)(a2 + 149);
    long long v11 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v11;
  }
  uint64_t v12 = *(void *)(a2 + 176);
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 184);
    *(void *)(a1 + 176) = v12;
    *(void *)(a1 + 184) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  }
  long long v14 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v14;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(void *)(a1 + 237) = *(void *)(a2 + 237);
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  uint64_t v15 = *(void *)(a2 + 256);
  if (v15)
  {
    uint64_t v16 = *(void *)(a2 + 264);
    *(void *)(a1 + 256) = v15;
    *(void *)(a1 + 264) = v16;
    long long v17 = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 288) = v17;
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
    *(void *)(a1 + 317) = *(void *)(a2 + 317);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v18 = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 304) = v18;
    *(void *)(a1 + 317) = *(void *)(a2 + 317);
    long long v19 = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 272) = v19;
  }
  *(_DWORD *)(a1 + 328) = *(_DWORD *)(a2 + 328);
  *(unsigned char *)(a1 + 332) = *(unsigned char *)(a2 + 332);
  return a1;
}

uint64_t assignWithCopy for DigiBarCruiseControlConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_2499BC150(a1 + 8);
  }
  else if (v4)
  {
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
LABEL_8:
  long long v5 = *(_OWORD *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 40);
  long long v7 = *(_OWORD *)(a2 + 56);
  long long v8 = (_OWORD *)(a1 + 88);
  uint64_t v9 = *(void *)(a1 + 88);
  *(void *)(a1 + 69) = *(void *)(a2 + 69);
  *(_OWORD *)(a1 + 40) = v6;
  *(_OWORD *)(a1 + 56) = v7;
  *(_OWORD *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  long long v11 = (_OWORD *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 88);
  if (v9)
  {
    if (v10)
    {
      *(void *)(a1 + 88) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      long long v12 = *(_OWORD *)(a2 + 104);
      long long v13 = *(_OWORD *)(a2 + 120);
      long long v14 = *(_OWORD *)(a2 + 136);
      *(void *)(a1 + 149) = *(void *)(a2 + 149);
      *(_OWORD *)(a1 + 136) = v14;
      *(_OWORD *)(a1 + 120) = v13;
      *(_OWORD *)(a1 + 104) = v12;
    }
    else
    {
      sub_249A34E9C(a1 + 88);
      *long long v8 = *v11;
      long long v19 = *(_OWORD *)(a2 + 120);
      long long v18 = *(_OWORD *)(a2 + 136);
      long long v20 = *(_OWORD *)(a2 + 104);
      *(void *)(a1 + 149) = *(void *)(a2 + 149);
      *(_OWORD *)(a1 + 120) = v19;
      *(_OWORD *)(a1 + 136) = v18;
      *(_OWORD *)(a1 + 104) = v20;
    }
  }
  else if (v10)
  {
    *(void *)(a1 + 88) = v10;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    long long v15 = *(_OWORD *)(a2 + 104);
    long long v16 = *(_OWORD *)(a2 + 120);
    long long v17 = *(_OWORD *)(a2 + 136);
    *(void *)(a1 + 149) = *(void *)(a2 + 149);
    *(_OWORD *)(a1 + 136) = v17;
    *(_OWORD *)(a1 + 120) = v16;
    *(_OWORD *)(a1 + 104) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *long long v8 = *v11;
    long long v21 = *(_OWORD *)(a2 + 104);
    long long v22 = *(_OWORD *)(a2 + 120);
    long long v23 = *(_OWORD *)(a2 + 136);
    *(void *)(a1 + 149) = *(void *)(a2 + 149);
    *(_OWORD *)(a1 + 120) = v22;
    *(_OWORD *)(a1 + 136) = v23;
    *(_OWORD *)(a1 + 104) = v21;
  }
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(a2 + 176);
  if (*(void *)(a1 + 176))
  {
    if (v24)
    {
      *(void *)(a1 + 176) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    sub_2499BC150(a1 + 176);
  }
  else if (v24)
  {
    *(void *)(a1 + 176) = v24;
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
LABEL_22:
  long long v25 = *(_OWORD *)(a2 + 192);
  long long v26 = *(_OWORD *)(a2 + 208);
  long long v27 = *(_OWORD *)(a2 + 224);
  *(void *)(a1 + 237) = *(void *)(a2 + 237);
  *(_OWORD *)(a1 + 208) = v26;
  *(_OWORD *)(a1 + 224) = v27;
  *(_OWORD *)(a1 + 192) = v25;
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  uint64_t v28 = (_OWORD *)(a1 + 256);
  int v29 = (_OWORD *)(a2 + 256);
  uint64_t v30 = *(void *)(a2 + 256);
  if (*(void *)(a1 + 256))
  {
    if (v30)
    {
      *(void *)(a1 + 256) = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      long long v31 = *(_OWORD *)(a2 + 272);
      long long v32 = *(_OWORD *)(a2 + 288);
      long long v33 = *(_OWORD *)(a2 + 304);
      *(void *)(a1 + 317) = *(void *)(a2 + 317);
      *(_OWORD *)(a1 + 288) = v32;
      *(_OWORD *)(a1 + 304) = v33;
      *(_OWORD *)(a1 + 272) = v31;
    }
    else
    {
      sub_249A34E9C(a1 + 256);
      *uint64_t v28 = *v29;
      long long v38 = *(_OWORD *)(a2 + 288);
      long long v37 = *(_OWORD *)(a2 + 304);
      long long v39 = *(_OWORD *)(a2 + 272);
      *(void *)(a1 + 317) = *(void *)(a2 + 317);
      *(_OWORD *)(a1 + 288) = v38;
      *(_OWORD *)(a1 + 304) = v37;
      *(_OWORD *)(a1 + 272) = v39;
    }
  }
  else if (v30)
  {
    *(void *)(a1 + 256) = v30;
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    long long v34 = *(_OWORD *)(a2 + 272);
    long long v35 = *(_OWORD *)(a2 + 288);
    long long v36 = *(_OWORD *)(a2 + 304);
    *(void *)(a1 + 317) = *(void *)(a2 + 317);
    *(_OWORD *)(a1 + 288) = v35;
    *(_OWORD *)(a1 + 304) = v36;
    *(_OWORD *)(a1 + 272) = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v28 = *v29;
    long long v40 = *(_OWORD *)(a2 + 272);
    long long v41 = *(_OWORD *)(a2 + 288);
    long long v42 = *(_OWORD *)(a2 + 304);
    *(void *)(a1 + 317) = *(void *)(a2 + 317);
    *(_OWORD *)(a1 + 288) = v41;
    *(_OWORD *)(a1 + 304) = v42;
    *(_OWORD *)(a1 + 272) = v40;
  }
  *(_DWORD *)(a1 + 328) = *(_DWORD *)(a2 + 328);
  *(unsigned char *)(a1 + 332) = *(unsigned char *)(a2 + 332);
  return a1;
}

void *__swift_memcpy333_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x14DuLL);
}

uint64_t assignWithTake for DigiBarCruiseControlConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_2499BC150(a1 + 8);
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
LABEL_6:
  uint64_t v5 = *(void *)(a2 + 88);
  uint64_t v6 = *(void *)(a1 + 88);
  long long v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 69) = *(void *)(a2 + 69);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  if (v6)
  {
    if (v5)
    {
      *(void *)(a1 + 88) = v5;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(void *)(a1 + 149) = *(void *)(a2 + 149);
      goto LABEL_11;
    }
    sub_249A34E9C(a1 + 88);
  }
  long long v8 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v8;
  *(void *)(a1 + 149) = *(void *)(a2 + 149);
  long long v9 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v9;
LABEL_11:
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 176);
  if (*(void *)(a1 + 176))
  {
    if (v10)
    {
      *(void *)(a1 + 176) = v10;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_2499BC150(a1 + 176);
  }
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
LABEL_16:
  long long v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(void *)(a1 + 237) = *(void *)(a2 + 237);
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  if (!*(void *)(a1 + 256))
  {
LABEL_20:
    long long v14 = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 304) = v14;
    *(void *)(a1 + 317) = *(void *)(a2 + 317);
    long long v15 = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 272) = v15;
    goto LABEL_21;
  }
  uint64_t v12 = *(void *)(a2 + 256);
  if (!v12)
  {
    sub_249A34E9C(a1 + 256);
    goto LABEL_20;
  }
  *(void *)(a1 + 256) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRelease();
  long long v13 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v13;
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(void *)(a1 + 317) = *(void *)(a2 + 317);
LABEL_21:
  *(_DWORD *)(a1 + 328) = *(_DWORD *)(a2 + 328);
  *(unsigned char *)(a1 + 332) = *(unsigned char *)(a2 + 332);
  return a1;
}

uint64_t getEnumTagSinglePayload for DigiBarCruiseControlConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 333)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 40) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for DigiBarCruiseControlConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 332) = 0;
    *(_DWORD *)(result + 328) = 0;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 333) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = 0;
      *(void *)(result + 40) = 2 * -a2;
      *(void *)(result + 48) = 0;
      *(void *)(result + 56) = 0;
      *(void *)(result + 64) = 0;
      *(void *)(result + 69) = 0;
      return result;
    }
    *(unsigned char *)(result + 333) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DigiBarCruiseControlConfiguration()
{
  return &type metadata for DigiBarCruiseControlConfiguration;
}

ValueMetadata *type metadata accessor for DigiBarCruiseControlConfiguration.BarType()
{
  return &type metadata for DigiBarCruiseControlConfiguration.BarType;
}

ValueMetadata *type metadata accessor for DigiBarCruiseControlConfiguration.CodingKeys()
{
  return &type metadata for DigiBarCruiseControlConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for DigiBandGradientProgressConfiguration.CodingKeys()
{
  return &type metadata for DigiBandGradientProgressConfiguration.CodingKeys;
}

unsigned char *_s14CarPlayAssetUI18DigiBarRadialStyleV7LineCapOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A86B70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DigiBarRedlineConfiguration.CodingKeys()
{
  return &type metadata for DigiBarRedlineConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for DigiBarMaskConfiguration.CodingKeys()
{
  return &type metadata for DigiBarMaskConfiguration.CodingKeys;
}

ValueMetadata *_s14descr26FD9EE19O20DigiBarConfigurationV10CodingKeysOMa()
{
  return &_s14descr26FD9EE19O20DigiBarConfigurationV10CodingKeysON;
}

unsigned char *_s14CarPlayAssetUI37DigiBandGradientProgressConfigurationV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A86C9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr26FD9EE19O20DigiBarConfigurationV5StyleO10CodingKeysOMa()
{
  return &_s14descr26FD9EE19O20DigiBarConfigurationV5StyleO10CodingKeysON;
}

ValueMetadata *_s14descr26FD9EE19O20DigiBarConfigurationV5StyleO16RadialCodingKeysOMa()
{
  return &_s14descr26FD9EE19O20DigiBarConfigurationV5StyleO16RadialCodingKeysON;
}

unsigned char *_s14descr26FD9EE19O20DigiBarConfigurationV5StyleO16RadialCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x249A86D84);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s14descr26FD9EE19O20DigiBarConfigurationV5StyleO16LinearCodingKeysOMa()
{
  return &_s14descr26FD9EE19O20DigiBarConfigurationV5StyleO16LinearCodingKeysON;
}

unsigned char *storeEnumTagSinglePayload for PowermeterDataIdentifiers.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A86E88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PowermeterDataIdentifiers.CodingKeys()
{
  return &type metadata for PowermeterDataIdentifiers.CodingKeys;
}

ValueMetadata *type metadata accessor for DigiBarLinearStyle.CodingKeys()
{
  return &type metadata for DigiBarLinearStyle.CodingKeys;
}

unsigned char *_s14descr26FD9EE19O20DigiBarConfigurationV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A86F9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DigiBarRadialStyle.CodingKeys()
{
  return &type metadata for DigiBarRadialStyle.CodingKeys;
}

unint64_t sub_249A86FD8()
{
  unint64_t result = qword_2696E5080;
  if (!qword_2696E5080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5080);
  }
  return result;
}

unint64_t sub_249A87030()
{
  unint64_t result = qword_2696E5088;
  if (!qword_2696E5088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5088);
  }
  return result;
}

unint64_t sub_249A87088()
{
  unint64_t result = qword_2696E5090;
  if (!qword_2696E5090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5090);
  }
  return result;
}

unint64_t sub_249A870E0()
{
  unint64_t result = qword_2696E5098;
  if (!qword_2696E5098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5098);
  }
  return result;
}

unint64_t sub_249A87138()
{
  unint64_t result = qword_2696E50A0;
  if (!qword_2696E50A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E50A0);
  }
  return result;
}

unint64_t sub_249A87190()
{
  unint64_t result = qword_2696E50A8;
  if (!qword_2696E50A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E50A8);
  }
  return result;
}

unint64_t sub_249A871E8()
{
  unint64_t result = qword_2696E50B0;
  if (!qword_2696E50B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E50B0);
  }
  return result;
}

unint64_t sub_249A87240()
{
  unint64_t result = qword_2696E50B8;
  if (!qword_2696E50B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E50B8);
  }
  return result;
}

unint64_t sub_249A87298()
{
  unint64_t result = qword_2696E50C0;
  if (!qword_2696E50C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E50C0);
  }
  return result;
}

unint64_t sub_249A872F0()
{
  unint64_t result = qword_2696E50C8;
  if (!qword_2696E50C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E50C8);
  }
  return result;
}

unint64_t sub_249A87348()
{
  unint64_t result = qword_2696E50D0;
  if (!qword_2696E50D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E50D0);
  }
  return result;
}

unint64_t sub_249A873A0()
{
  unint64_t result = qword_2696E50D8;
  if (!qword_2696E50D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E50D8);
  }
  return result;
}

unint64_t sub_249A873F8()
{
  unint64_t result = qword_2696E50E0;
  if (!qword_2696E50E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E50E0);
  }
  return result;
}

unint64_t sub_249A87450()
{
  unint64_t result = qword_2696E50E8;
  if (!qword_2696E50E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E50E8);
  }
  return result;
}

unint64_t sub_249A874A8()
{
  unint64_t result = qword_2696E50F0;
  if (!qword_2696E50F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E50F0);
  }
  return result;
}

unint64_t sub_249A87500()
{
  unint64_t result = qword_2696E50F8;
  if (!qword_2696E50F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E50F8);
  }
  return result;
}

unint64_t sub_249A87558()
{
  unint64_t result = qword_2696E5100;
  if (!qword_2696E5100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5100);
  }
  return result;
}

unint64_t sub_249A875B0()
{
  unint64_t result = qword_2696E5108;
  if (!qword_2696E5108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5108);
  }
  return result;
}

unint64_t sub_249A87608()
{
  unint64_t result = qword_2696E5110;
  if (!qword_2696E5110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5110);
  }
  return result;
}

unint64_t sub_249A87660()
{
  unint64_t result = qword_2696E5118;
  if (!qword_2696E5118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5118);
  }
  return result;
}

unint64_t sub_249A876B8()
{
  unint64_t result = qword_2696E5120;
  if (!qword_2696E5120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5120);
  }
  return result;
}

unint64_t sub_249A87710()
{
  unint64_t result = qword_2696E5128;
  if (!qword_2696E5128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5128);
  }
  return result;
}

unint64_t sub_249A87768()
{
  unint64_t result = qword_2696E5130;
  if (!qword_2696E5130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5130);
  }
  return result;
}

unint64_t sub_249A877C0()
{
  unint64_t result = qword_2696E5138;
  if (!qword_2696E5138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5138);
  }
  return result;
}

unint64_t sub_249A87818()
{
  unint64_t result = qword_2696E5140;
  if (!qword_2696E5140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5140);
  }
  return result;
}

unint64_t sub_249A87870()
{
  unint64_t result = qword_2696E5148;
  if (!qword_2696E5148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5148);
  }
  return result;
}

unint64_t sub_249A878C8()
{
  unint64_t result = qword_2696E5150;
  if (!qword_2696E5150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5150);
  }
  return result;
}

unint64_t sub_249A87920()
{
  unint64_t result = qword_2696E5158;
  if (!qword_2696E5158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5158);
  }
  return result;
}

unint64_t sub_249A87978()
{
  unint64_t result = qword_2696E5160;
  if (!qword_2696E5160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5160);
  }
  return result;
}

unint64_t sub_249A879D0()
{
  unint64_t result = qword_2696E5168;
  if (!qword_2696E5168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5168);
  }
  return result;
}

unint64_t sub_249A87A28()
{
  unint64_t result = qword_2696E5170;
  if (!qword_2696E5170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5170);
  }
  return result;
}

unint64_t sub_249A87A80()
{
  unint64_t result = qword_2696E5178;
  if (!qword_2696E5178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5178);
  }
  return result;
}

unint64_t sub_249A87AD8()
{
  unint64_t result = qword_2696E5180;
  if (!qword_2696E5180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5180);
  }
  return result;
}

uint64_t sub_249A87B2C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x8000000249B15140 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6469576B63617274 && a2 == 0xEA00000000006874 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E496B63617274 && a2 == 0xEA00000000007465 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4972657474616C70 && a2 == 0xEC0000007465736ELL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E694C6B63617274 && a2 == 0xEC00000070614365)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_249A87D88(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6469576B63617274 && a2 == 0xEA00000000006874;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65736E497466656CLL && a2 == 0xE900000000000074 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E497468676972 && a2 == 0xEA00000000007465 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x664F7265746E6563 && a2 == 0xEC00000074657366 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4C54527369 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_249A87FD4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x8000000249B173B0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000249B173D0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000249B173F0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x8000000249B17410 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x8000000249B17440 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000249B15E50)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_249A88210(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x8000000249B17470 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D694C6B63617274 && a2 == 0xED00007061477469 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000249B17490 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6854746F446E696DLL && a2 == 0xEF646C6F68736572)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_249A88468(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C797473 && a2 == 0xE500000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7478456874646977 && a2 == 0xEE006E6F69736E65)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_249A88578(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x734449726F6C6F63 && a2 == 0xE800000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x43646573736F7263 && a2 == 0xEF734449726F6C6FLL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_249A886EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x734449726F6C6F63 && a2 == 0xE800000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_249A887D8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001DLL && a2 == 0x8000000249B174B0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249B174D0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_249A88918()
{
  unint64_t result = qword_2696E5188;
  if (!qword_2696E5188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5188);
  }
  return result;
}

unint64_t sub_249A8896C()
{
  unint64_t result = qword_2696E5190;
  if (!qword_2696E5190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5190);
  }
  return result;
}

uint64_t *sub_249A889C0(uint64_t *a1)
{
  uint64_t v2 = a1[9];
  sub_249882B2C(*a1);
  sub_249882B2C(v2);
  return a1;
}

uint64_t DigiBarMaskConfiguration.restoreAssets(from:)()
{
  return Instrument.GaugeStyle.DigiBarConfiguration.restoreAssets(from:)();
}

uint64_t DigiBarCruiseControlConfiguration.restoreAssets(from:)()
{
  return Instrument.GaugeStyle.DigiBarConfiguration.restoreAssets(from:)();
}

void static VehicleUnitDataIdentifier.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 49;
}

void sub_249A88AB4(unsigned char *a1@<X8>)
{
  *a1 = 49;
}

void static VehicleSpeedMaxDataIdentifier.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 48;
}

void sub_249A88ACC(unsigned char *a1@<X8>)
{
  *a1 = 48;
}

void static ShowSecondarySpeedDataIdentifier.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 51;
}

void sub_249A88AE4(unsigned char *a1@<X8>)
{
  *a1 = 51;
}

void SpeedometerDataIdentifiers.dataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *SpeedometerDataIdentifiers.dataIdentifier.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*SpeedometerDataIdentifiers.dataIdentifier.modify())()
{
  return nullsub_1;
}

void SpeedometerDataIdentifiers.unitDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *SpeedometerDataIdentifiers.unitDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*SpeedometerDataIdentifiers.unitDataIdentifier.modify())()
{
  return nullsub_1;
}

void SpeedometerDataIdentifiers.vehicleSpeedMaxDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 2);
}

unsigned char *SpeedometerDataIdentifiers.vehicleSpeedMaxDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 2) = *result;
  return result;
}

uint64_t (*SpeedometerDataIdentifiers.vehicleSpeedMaxDataIdentifier.modify())()
{
  return nullsub_1;
}

void SpeedometerDataIdentifiers.showSecondarySpeedDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 3);
}

unsigned char *SpeedometerDataIdentifiers.showSecondarySpeedDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 3) = *result;
  return result;
}

uint64_t (*SpeedometerDataIdentifiers.showSecondarySpeedDataIdentifier.modify())()
{
  return nullsub_1;
}

void SpeedometerDataIdentifiers.uiSceneStateDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 4);
}

unsigned char *SpeedometerDataIdentifiers.uiSceneStateDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 4) = *result;
  return result;
}

uint64_t (*SpeedometerDataIdentifiers.uiSceneStateDataIdentifier.modify())()
{
  return nullsub_1;
}

double SpeedometerDataIdentifiers.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 858796335;
  *(_DWORD *)a1 = 858796335;
  *(unsigned char *)(a1 + 4) = 56;
  return result;
}

uint64_t SpeedometerDataIdentifiers.hash(into:)()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

unint64_t sub_249A88D58(char a1)
{
  unint64_t result = 0x6E65644961746164;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000020;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_249A88E20()
{
  return sub_249A88D58(*v0);
}

uint64_t sub_249A88E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A89864(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A88E50(uint64_t a1)
{
  unint64_t v2 = sub_249A89554();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A88E8C(uint64_t a1)
{
  unint64_t v2 = sub_249A89554();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SpeedometerDataIdentifiers.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E5198);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  long long v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v9 = v1[1];
  int v18 = v1[2];
  int v19 = v9;
  int v10 = v1[3];
  int v16 = v1[4];
  int v17 = v10;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A89554();
  sub_249AEE468();
  char v29 = v8;
  char v28 = 0;
  sub_24989C934();
  sub_249AEDF08();
  if (!v2)
  {
    char v11 = v17;
    char v12 = v18;
    char v13 = v16;
    char v27 = v19;
    char v26 = 1;
    sub_249AEDF08();
    char v25 = v12;
    char v24 = 2;
    sub_249AEDF08();
    char v23 = v11;
    char v22 = 3;
    sub_249AEDF08();
    char v21 = v13;
    char v20 = 4;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t SpeedometerDataIdentifiers.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t SpeedometerDataIdentifiers.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E51A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A89554();
  sub_249AEE428();
  if (!v2)
  {
    char v25 = 0;
    sub_24989C988();
    sub_249AEDE08();
    int v9 = v26;
    char v23 = 1;
    sub_249AEDE08();
    int v16 = v9;
    int v10 = v24;
    char v21 = 2;
    sub_249AEDE08();
    HIDWORD(v15) = v10;
    char v11 = v22;
    char v19 = 3;
    sub_249AEDE08();
    char v12 = v20;
    char v18 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0F10);
    sub_249974950();
    sub_249AEDDA8();
    if (v17 == 57) {
      char v14 = 56;
    }
    else {
      char v14 = v17;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v16;
    a2[1] = BYTE4(v15);
    a2[2] = v11;
    a2[3] = v12;
    a2[4] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_249A8951C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SpeedometerDataIdentifiers.init(from:)(a1, a2);
}

uint64_t sub_249A89534(void *a1)
{
  return SpeedometerDataIdentifiers.encode(to:)(a1);
}

unint64_t sub_249A89554()
{
  unint64_t result = qword_2696E51A0;
  if (!qword_2696E51A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E51A0);
  }
  return result;
}

unint64_t sub_249A895AC()
{
  unint64_t result = qword_2696E51B0;
  if (!qword_2696E51B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E51B0);
  }
  return result;
}

uint64_t sub_249A89600@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 4);
  return result;
}

unsigned char *sub_249A8960C(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 4) = *result;
  return result;
}

ValueMetadata *type metadata accessor for VehicleUnitDataIdentifier()
{
  return &type metadata for VehicleUnitDataIdentifier;
}

ValueMetadata *type metadata accessor for VehicleSpeedMaxDataIdentifier()
{
  return &type metadata for VehicleSpeedMaxDataIdentifier;
}

ValueMetadata *type metadata accessor for ShowSecondarySpeedDataIdentifier()
{
  return &type metadata for ShowSecondarySpeedDataIdentifier;
}

ValueMetadata *type metadata accessor for SpeedometerDataIdentifiers()
{
  return &type metadata for SpeedometerDataIdentifiers;
}

unsigned char *storeEnumTagSinglePayload for SpeedometerDataIdentifiers.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A89724);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SpeedometerDataIdentifiers.CodingKeys()
{
  return &type metadata for SpeedometerDataIdentifiers.CodingKeys;
}

unint64_t sub_249A89760()
{
  unint64_t result = qword_2696E51B8;
  if (!qword_2696E51B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E51B8);
  }
  return result;
}

unint64_t sub_249A897B8()
{
  unint64_t result = qword_2696E51C0;
  if (!qword_2696E51C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E51C0);
  }
  return result;
}

unint64_t sub_249A89810()
{
  unint64_t result = qword_2696E51C8;
  if (!qword_2696E51C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E51C8);
  }
  return result;
}

uint64_t sub_249A89864(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249B14580 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000249B174F0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x8000000249B17510 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000249B15E50)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

__n128 NotificationView.init(model:)@<Q0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  long long v19 = a1[1];
  long long v20 = *a1;
  uint64_t v4 = *((void *)a1 + 4);
  uint64_t v5 = *((void *)a1 + 5);
  char v6 = *((unsigned char *)a1 + 48);
  uint64_t v7 = *((void *)a1 + 7);
  uint64_t v8 = *((void *)a1 + 8);
  char v17 = *((unsigned char *)a1 + 73);
  char v18 = *((unsigned char *)a1 + 72);
  long long v16 = a1[5];
  uint64_t v15 = *((void *)a1 + 12);
  *a2 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF8);
  swift_storeEnumTagMultiPayload();
  int v9 = (int *)type metadata accessor for NotificationView(0);
  int v10 = (uint64_t *)((char *)a2 + v9[5]);
  *int v10 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  char v11 = (uint64_t *)((char *)a2 + v9[6]);
  *char v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF0);
  swift_storeEnumTagMultiPayload();
  char v12 = (uint64_t *)((char *)a2 + v9[7]);
  *char v12 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  char v13 = (char *)a2 + v9[8];
  *(_OWORD *)char v13 = v20;
  *((_OWORD *)v13 + 1) = v19;
  *((void *)v13 + 4) = v4;
  *((void *)v13 + 5) = v5;
  v13[48] = v6;
  *((void *)v13 + 7) = v7;
  *((void *)v13 + 8) = v8;
  v13[72] = v18;
  v13[73] = v17;
  *((_OWORD *)v13 + 5) = v16;
  *((void *)v13 + 12) = v15;
  __n128 result = *(__n128 *)((char *)a1 + 104);
  *(__n128 *)(v13 + 104) = result;
  return result;
}

uint64_t sub_249A89C10()
{
  return sub_249AEBFF8();
}

uint64_t sub_249A89C50(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UserInteractiveConfiguration(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_249A9B520(a1, (uint64_t)&v9 - v6, type metadata accessor for UserInteractiveConfiguration);
  sub_249A9B520((uint64_t)v7, (uint64_t)v4, type metadata accessor for UserInteractiveConfiguration);
  sub_249A54538();
  sub_249AEC008();
  return sub_249A9B284((uint64_t)v7, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t sub_249A89D58()
{
  return sub_249AEBFF8();
}

uint64_t sub_249A89D98()
{
  return sub_249AEBFF8();
}

uint64_t sub_249A89DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249A89DF8(a1, a2, a3, a4, (void (*)(uint64_t))sub_249A547BC);
}

uint64_t sub_249A89DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v7 = type metadata accessor for BannerConfiguration(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  char v12 = (char *)&v15 - v11;
  sub_249A9B520(a1, (uint64_t)&v15 - v11, type metadata accessor for BannerConfiguration);
  uint64_t v13 = sub_249A9B520((uint64_t)v12, (uint64_t)v9, type metadata accessor for BannerConfiguration);
  a5(v13);
  sub_249AEC008();
  return sub_249A9B284((uint64_t)v12, type metadata accessor for BannerConfiguration);
}

uint64_t sub_249A89F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249A89DF8(a1, a2, a3, a4, (void (*)(uint64_t))sub_249A547BC);
}

uint64_t type metadata accessor for NotificationView(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696E51E8);
}

uint64_t sub_249A89F68()
{
  return sub_249AEBFF8();
}

uint64_t sub_249A89FA8()
{
  return sub_249AEBFF8();
}

uint64_t sub_249A89FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249A89DF8(a1, a2, a3, a4, (void (*)(uint64_t))sub_249A54A10);
}

uint64_t sub_249A8A008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249A89DF8(a1, a2, a3, a4, (void (*)(uint64_t))sub_249A54A10);
}

uint64_t sub_249A8A03C()
{
  return sub_249AEBFF8();
}

uint64_t NotificationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E51D0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249A8A160((uint64_t)v5);
  uint64_t v6 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NotificationView(0) + 32));
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  sub_2498D6084((uint64_t)v5, a1, &qword_2696E51D0);
  uint64_t v9 = (void *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E51D8) + 52));
  *uint64_t v9 = v8;
  v9[1] = v7;
  swift_bridgeObjectRetain();
  return sub_2498D60E8((uint64_t)v5, &qword_2696E51D0);
}

uint64_t sub_249A8A160@<X0>(uint64_t a1@<X8>)
{
  uint64_t v196 = a1;
  uint64_t v180 = type metadata accessor for NoticeView(0);
  MEMORY[0x270FA5388](v180);
  long long v191 = (uint64_t *)((char *)&v170 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E54D0);
  MEMORY[0x270FA5388](v176);
  uint64_t v175 = (uint64_t)&v170 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = (char *)type metadata accessor for BannerConfiguration(0);
  MEMORY[0x270FA5388](v190);
  uint64_t v189 = (uint64_t)&v170 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v184 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_2696E54D8);
  MEMORY[0x270FA5388](v184);
  uint64_t v177 = (char *)&v170 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E54E0);
  MEMORY[0x270FA5388](v182);
  uint64_t v183 = (uint64_t)&v170 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E54E8);
  MEMORY[0x270FA5388](v194);
  unint64_t v185 = (char *)&v170 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = type metadata accessor for BannerView(0);
  MEMORY[0x270FA5388](v198);
  uint64_t v197 = (uint64_t)&v170 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E54F0);
  MEMORY[0x270FA5388](v192);
  uint64_t v195 = (uint64_t)&v170 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E54F8);
  MEMORY[0x270FA5388](v186);
  uint64_t v187 = (uint64_t)&v170 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E5500);
  MEMORY[0x270FA5388](v193);
  uint64_t v188 = (uint64_t)&v170 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E5508);
  MEMORY[0x270FA5388](v178);
  uint64_t v179 = (uint64_t)&v170 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = type metadata accessor for UserInteractiveView(0);
  MEMORY[0x270FA5388](v181);
  char v14 = (char *)&v170 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF9E8);
  MEMORY[0x270FA5388](v15 - 8);
  char v17 = (char *)&v170 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E5510);
  MEMORY[0x270FA5388](v18);
  long long v20 = (char *)&v170 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  char v23 = (char *)&v170 - v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E5518);
  MEMORY[0x270FA5388](v24);
  unsigned __int8 v26 = (char *)&v170 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = v1 + *(int *)(type metadata accessor for NotificationView(0) + 32);
  uint64_t v29 = *(void *)(v27 + 56);
  uint64_t v28 = *(void *)(v27 + 64);
  unsigned int v30 = *(unsigned __int8 *)(v27 + 72);
  if (v30 <= 1)
  {
    unint64_t v184 = v20;
    unint64_t v185 = v23;
    uint64_t v190 = v26;
    long long v191 = (uint64_t *)v17;
    uint64_t v189 = v18;
    uint64_t v174 = v24;
    if (!v30)
    {
      uint64_t v31 = v197;
      uint64_t v32 = v28;
      uint64_t v33 = v29;
      sub_2499A7518(v197);
      uint64_t v34 = *(void *)v27;
      uint64_t v35 = *(void *)(v27 + 8);
      uint64_t v36 = *(void *)(v27 + 16);
      uint64_t v37 = *(void *)(v27 + 24);
      uint64_t v39 = *(void *)(v27 + 32);
      uint64_t v38 = *(void *)(v27 + 40);
      char v40 = *(unsigned char *)(v27 + 73);
      uint64_t v41 = *(void *)(v27 + 80);
      uint64_t v189 = *(void *)(v27 + 88);
      uint64_t v42 = v189;
      uint64_t v190 = (char *)v41;
      uint64_t v44 = *(void *)(v27 + 96);
      uint64_t v43 = *(void *)(v27 + 104);
      long long v191 = *(uint64_t **)(v27 + 112);
      uint64_t v45 = (uint64_t)v191;
      uint64_t v46 = v31;
      uint64_t v47 = v31 + *(int *)(v198 + 20);
      *(void *)uint64_t v47 = v34;
      *(void *)(v47 + 8) = v35;
      *(void *)(v47 + 16) = v36;
      *(void *)(v47 + 24) = v37;
      *(void *)(v47 + 32) = v39;
      *(void *)(v47 + 40) = v38;
      LOBYTE(v31) = *(unsigned char *)(v27 + 48);
      *(unsigned char *)(v47 + 48) = v31;
      *(void *)(v47 + 56) = v33;
      *(void *)(v47 + 64) = v32;
      *(unsigned char *)(v47 + 72) = 0;
      *(unsigned char *)(v47 + 73) = v40;
      *(void *)(v47 + 80) = v41;
      *(void *)(v47 + 88) = v42;
      *(void *)(v47 + 96) = v44;
      *(void *)(v47 + 104) = v43;
      *(void *)(v47 + 112) = v45;
      sub_249A9B520(v46, v187, type metadata accessor for BannerView);
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_2499ACFC4(v36, v37, v39, v38, v31);
      sub_249A28280(v33, v32, 0);
      sub_249A28294((uint64_t)v190, v189);
      sub_249A9BCB4();
      sub_249A9B7D0(&qword_2696E5520, (void (*)(uint64_t))type metadata accessor for BannerView);
      swift_retain();
      uint64_t v48 = v188;
      sub_249AEC248();
      uint64_t v49 = &qword_2696E5500;
      sub_2498D6084(v48, v195, &qword_2696E5500);
LABEL_6:
      swift_storeEnumTagMultiPayload();
      sub_249A9BC08();
      sub_249A9BE38();
      sub_249AEC248();
      sub_2498D60E8(v48, v49);
      return sub_249A9B284(v197, type metadata accessor for BannerView);
    }
    char v73 = *(unsigned char *)(v27 + 73);
    uint64_t v173 = v28;
    uint64_t v172 = v29;
    if (v73)
    {
      swift_bridgeObjectRelease();
      uint64_t v74 = v181;
      uint64_t v75 = (uint64_t)v14;
    }
    else
    {
      char v98 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      uint64_t v74 = v181;
      uint64_t v75 = (uint64_t)v14;
      if ((v98 & 1) == 0)
      {
        sub_2499A77B4((uint64_t)v14);
        uint64_t v154 = *(void *)v27;
        uint64_t v155 = *(void *)(v27 + 8);
        uint64_t v156 = (uint64_t)v14;
        uint64_t v157 = *(void *)(v27 + 16);
        uint64_t v158 = *(void *)(v27 + 24);
        uint64_t v159 = *(void *)(v27 + 32);
        uint64_t v160 = *(void *)(v27 + 40);
        uint64_t v162 = *(void *)(v27 + 88);
        long long v191 = *(uint64_t **)(v27 + 80);
        uint64_t v161 = (uint64_t)v191;
        uint64_t v163 = *(void *)(v27 + 104);
        unint64_t v185 = *(char **)(v27 + 96);
        uint64_t v164 = v185;
        uint64_t v197 = *(void *)(v27 + 112);
        uint64_t v165 = v197;
        uint64_t v166 = v156 + *(int *)(v74 + 20);
        uint64_t v171 = v156;
        *(void *)uint64_t v166 = v154;
        *(void *)(v166 + 8) = v155;
        *(void *)(v166 + 16) = v157;
        *(void *)(v166 + 24) = v158;
        *(void *)(v166 + 32) = v159;
        *(void *)(v166 + 40) = v160;
        char v167 = *(unsigned char *)(v27 + 48);
        *(unsigned char *)(v166 + 48) = v167;
        uint64_t v168 = v172;
        uint64_t v169 = v173;
        *(void *)(v166 + 56) = v172;
        *(void *)(v166 + 64) = v169;
        *(_WORD *)(v166 + 72) = 1;
        *(void *)(v166 + 80) = v161;
        *(void *)(v166 + 88) = v162;
        *(void *)(v166 + 96) = v164;
        *(void *)(v166 + 104) = v163;
        *(void *)(v166 + 112) = v165;
        sub_249A9B520(v156, v179, type metadata accessor for UserInteractiveView);
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        sub_2499ACFC4(v157, v158, v159, v160, v167);
        sub_249A28280(v168, v169, 1);
        sub_249A28294((uint64_t)v191, v162);
        sub_249A9B384(&qword_2696E5548, &qword_2696E5510, (void (*)(void))sub_249A9BD8C);
        sub_249A9B7D0(&qword_2696E5558, (void (*)(uint64_t))type metadata accessor for UserInteractiveView);
        swift_retain();
        uint64_t v124 = (uint64_t)v190;
        sub_249AEC248();
        sub_249A9B284(v171, type metadata accessor for UserInteractiveView);
        uint64_t v120 = v187;
        uint64_t v121 = v188;
LABEL_20:
        unint64_t v152 = &qword_2696E5518;
        sub_2498D6084(v124, v120, &qword_2696E5518);
        swift_storeEnumTagMultiPayload();
        sub_249A9BCB4();
        sub_249A9B7D0(&qword_2696E5520, (void (*)(uint64_t))type metadata accessor for BannerView);
        sub_249AEC248();
        sub_2498D6084(v121, v195, &qword_2696E5500);
        swift_storeEnumTagMultiPayload();
        sub_249A9BC08();
        sub_249A9BE38();
        sub_249AEC248();
        sub_2498D60E8(v121, &qword_2696E5500);
        uint64_t v153 = v124;
        return sub_2498D60E8(v153, v152);
      }
    }
    sub_2499A77B4(v75);
    uint64_t v100 = *(void *)v27;
    uint64_t v99 = *(void *)(v27 + 8);
    uint64_t v101 = *(void *)(v27 + 16);
    uint64_t v102 = *(void *)(v27 + 24);
    char v103 = v73;
    uint64_t v104 = *(void *)(v27 + 32);
    uint64_t v105 = *(void *)(v27 + 40);
    uint64_t v106 = *(void *)(v27 + 80);
    uint64_t v107 = *(void *)(v27 + 88);
    uint64_t v108 = *(void *)(v27 + 104);
    uint64_t v183 = *(void *)(v27 + 96);
    uint64_t v109 = v183;
    uint64_t v197 = *(void *)(v27 + 112);
    uint64_t v110 = v197;
    uint64_t v111 = v75 + *(int *)(v74 + 20);
    *(void *)uint64_t v111 = v100;
    *(void *)(v111 + 8) = v99;
    *(void *)(v111 + 16) = v101;
    *(void *)(v111 + 24) = v102;
    *(void *)(v111 + 32) = v104;
    *(void *)(v111 + 40) = v105;
    char v112 = *(unsigned char *)(v27 + 48);
    *(unsigned char *)(v111 + 48) = v112;
    uint64_t v113 = v172;
    uint64_t v114 = v173;
    *(void *)(v111 + 56) = v172;
    *(void *)(v111 + 64) = v114;
    *(unsigned char *)(v111 + 72) = 1;
    *(unsigned char *)(v111 + 73) = v103;
    *(void *)(v111 + 80) = v106;
    *(void *)(v111 + 88) = v107;
    *(void *)(v111 + 96) = v109;
    *(void *)(v111 + 104) = v108;
    *(void *)(v111 + 112) = v110;
    swift_bridgeObjectRetain();
    sub_2499ACFC4(v101, v102, v104, v105, v112);
    sub_249A28280(v113, v114, 1);
    sub_249A28294(v106, v107);
    swift_retain();
    uint64_t v115 = sub_249AECC28();
    sub_249900530(0.0, 1, INFINITY, 0, 0.0, 1, 0.0, 1, (uint64_t)v191, INFINITY, 0, 0.0, 1, v115, v116);
    sub_249A9B284(v75, type metadata accessor for UserInteractiveView);
    LOBYTE(v114) = sub_249AEC4F8();
    char v117 = sub_249AEC508();
    char v118 = sub_249AEC528();
    sub_249AEC528();
    if (sub_249AEC528() != v114) {
      char v118 = sub_249AEC528();
    }
    sub_249AEC528();
    char v119 = sub_249AEC528();
    uint64_t v120 = v187;
    uint64_t v121 = v188;
    uint64_t v122 = (uint64_t)v185;
    uint64_t v123 = v189;
    uint64_t v124 = (uint64_t)v190;
    if (v119 != v117) {
      char v118 = sub_249AEC528();
    }
    uint64_t v125 = (uint64_t)v191;
    sub_249AEBAB8();
    uint64_t v127 = v126;
    uint64_t v129 = v128;
    uint64_t v131 = v130;
    uint64_t v133 = v132;
    uint64_t v134 = (uint64_t)v184;
    sub_2498D6084(v125, (uint64_t)v184, &qword_2696DF9E8);
    uint64_t v135 = v134 + *(int *)(v123 + 36);
    *(unsigned char *)uint64_t v135 = v118;
    *(void *)(v135 + 8) = v127;
    *(void *)(v135 + 16) = v129;
    *(void *)(v135 + 24) = v131;
    *(void *)(v135 + 32) = v133;
    *(unsigned char *)(v135 + 40) = 0;
    sub_2498D60E8(v125, &qword_2696DF9E8);
    sub_249882788(v134, v122, &qword_2696E5510);
    sub_2498D6084(v122, v179, &qword_2696E5510);
    swift_storeEnumTagMultiPayload();
    sub_249A9B384(&qword_2696E5548, &qword_2696E5510, (void (*)(void))sub_249A9BD8C);
    sub_249A9B7D0(&qword_2696E5558, (void (*)(uint64_t))type metadata accessor for UserInteractiveView);
    sub_249AEC248();
    sub_2498D60E8(v122, &qword_2696E5510);
    goto LABEL_20;
  }
  uint64_t v51 = v189;
  uint64_t v50 = (uint64_t)v190;
  uint64_t v52 = v191;
  if (v30 == 2)
  {
    uint64_t v53 = v197;
    uint64_t v54 = *(void *)(v27 + 64);
    uint64_t v55 = *(void *)(v27 + 56);
    sub_2499A7518(v197);
    uint64_t v56 = *(void *)v27;
    uint64_t v57 = *(void *)(v27 + 8);
    uint64_t v58 = *(void *)(v27 + 16);
    uint64_t v59 = *(void *)(v27 + 24);
    uint64_t v60 = *(void *)(v27 + 32);
    uint64_t v61 = *(void *)(v27 + 40);
    char v62 = *(unsigned char *)(v27 + 73);
    uint64_t v63 = *(void *)(v27 + 80);
    uint64_t v64 = *(void *)(v27 + 88);
    uint64_t v65 = *(void *)(v27 + 104);
    uint64_t v189 = *(void *)(v27 + 96);
    uint64_t v66 = v189;
    uint64_t v190 = (char *)v64;
    long long v191 = *(uint64_t **)(v27 + 112);
    uint64_t v67 = (uint64_t)v191;
    uint64_t v68 = v53;
    uint64_t v69 = v53 + *(int *)(v198 + 20);
    *(void *)uint64_t v69 = v56;
    *(void *)(v69 + 8) = v57;
    *(void *)(v69 + 16) = v58;
    *(void *)(v69 + 24) = v59;
    *(void *)(v69 + 32) = v60;
    *(void *)(v69 + 40) = v61;
    char v70 = *(unsigned char *)(v27 + 48);
    *(unsigned char *)(v69 + 48) = v70;
    *(void *)(v69 + 56) = v55;
    *(void *)(v69 + 64) = v54;
    *(unsigned char *)(v69 + 72) = 2;
    *(unsigned char *)(v69 + 73) = v62;
    *(void *)(v69 + 80) = v63;
    *(void *)(v69 + 88) = v64;
    uint64_t v71 = v63;
    *(void *)(v69 + 96) = v66;
    *(void *)(v69 + 104) = v65;
    *(void *)(v69 + 112) = v67;
    sub_249A9B520(v68, v183, type metadata accessor for BannerView);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_2499ACFC4(v58, v59, v60, v61, v70);
    sub_249A28280(v55, v54, 2);
    sub_249A28294(v71, (uint64_t)v190);
    sub_249A9B7D0(&qword_2696E5520, (void (*)(uint64_t))type metadata accessor for BannerView);
    sub_249A9BB2C();
    swift_retain();
    uint64_t v48 = (uint64_t)v185;
    sub_249AEC248();
    uint64_t v49 = &qword_2696E54E8;
    sub_2498D6084(v48, v195, &qword_2696E54E8);
    goto LABEL_6;
  }
  sub_2499A7518(v189);
  int v76 = *(unsigned __int8 *)(v51 + *(int *)(v50 + 24));
  sub_249A9B284(v51, type metadata accessor for BannerConfiguration);
  if (v76 == 1)
  {
    uint64_t v77 = v197;
    sub_2499A7518(v197);
    uint64_t v78 = *(void *)v27;
    uint64_t v79 = *(void *)(v27 + 8);
    uint64_t v81 = *(void *)(v27 + 16);
    uint64_t v80 = *(void *)(v27 + 24);
    uint64_t v82 = *(void *)(v27 + 32);
    uint64_t v83 = *(void *)(v27 + 40);
    uint64_t v84 = *(void *)(v27 + 56);
    uint64_t v187 = *(void *)(v27 + 64);
    uint64_t v85 = v187;
    uint64_t v188 = v84;
    char v86 = *(unsigned char *)(v27 + 73);
    uint64_t v87 = *(void *)(v27 + 80);
    uint64_t v88 = *(void *)(v27 + 88);
    uint64_t v89 = *(void *)(v27 + 104);
    uint64_t v189 = *(void *)(v27 + 96);
    uint64_t v90 = v189;
    uint64_t v190 = (char *)v87;
    long long v191 = *(uint64_t **)(v27 + 112);
    uint64_t v91 = (uint64_t)v191;
    uint64_t v92 = v77;
    uint64_t v93 = v77 + *(int *)(v198 + 20);
    char v94 = *(unsigned char *)(v27 + 48);
    char v95 = *(unsigned char *)(v27 + 72);
    *(void *)uint64_t v93 = v78;
    *(void *)(v93 + 8) = v79;
    *(void *)(v93 + 16) = v81;
    *(void *)(v93 + 24) = v80;
    uint64_t v96 = v80;
    *(void *)(v93 + 32) = v82;
    *(void *)(v93 + 40) = v83;
    *(unsigned char *)(v93 + 48) = v94;
    *(void *)(v93 + 56) = v84;
    *(void *)(v93 + 64) = v85;
    *(unsigned char *)(v93 + 72) = v95;
    *(unsigned char *)(v93 + 73) = v86;
    *(void *)(v93 + 80) = v87;
    *(void *)(v93 + 88) = v88;
    *(void *)(v93 + 96) = v90;
    *(void *)(v93 + 104) = v89;
    *(void *)(v93 + 112) = v91;
    sub_249A9B520(v92, v175, type metadata accessor for BannerView);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_2499ACFC4(v81, v96, v82, v83, v94);
    sub_249A28280(v188, v187, v95);
    sub_249A28294((uint64_t)v190, v88);
    sub_249A9B7D0(&qword_2696E5520, (void (*)(uint64_t))type metadata accessor for BannerView);
    sub_249A9B7D0(&qword_2696E5528, (void (*)(uint64_t))type metadata accessor for NoticeView);
    swift_retain();
    uint64_t v97 = (uint64_t)v177;
    sub_249AEC248();
    sub_249A9B284(v197, type metadata accessor for BannerView);
  }
  else
  {
    uint64_t v136 = *(void *)(v27 + 8);
    uint64_t v186 = *(void *)v27;
    uint64_t v172 = v136;
    uint64_t v137 = *(void *)(v27 + 16);
    uint64_t v179 = *(void *)(v27 + 24);
    uint64_t v174 = *(void *)(v27 + 32);
    uint64_t v138 = v174;
    uint64_t v181 = *(void *)(v27 + 40);
    uint64_t v139 = *(void *)(v27 + 56);
    uint64_t v178 = *(void *)(v27 + 64);
    uint64_t v140 = v178;
    LODWORD(v190) = *(unsigned __int8 *)(v27 + 73);
    uint64_t v141 = *(void *)(v27 + 88);
    uint64_t v197 = *(void *)(v27 + 80);
    uint64_t v142 = *(void *)(v27 + 104);
    uint64_t v188 = *(void *)(v27 + 96);
    uint64_t v189 = v142;
    uint64_t v187 = *(void *)(v27 + 112);
    unsigned __int8 v143 = *(unsigned char *)(v27 + 48);
    LODWORD(v173) = v143;
    char v144 = *(unsigned char *)(v27 + 72);
    uint64_t v145 = (uint64_t)v52;
    *uint64_t v52 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CE8);
    swift_storeEnumTagMultiPayload();
    uint64_t v146 = (char *)v52 + *(int *)(v180 + 20);
    *(void *)uint64_t v146 = v186;
    *((void *)v146 + 1) = v136;
    uint64_t v147 = v179;
    *((void *)v146 + 2) = v137;
    *((void *)v146 + 3) = v147;
    *((void *)v146 + 4) = v138;
    uint64_t v148 = v181;
    *((void *)v146 + 5) = v181;
    v146[48] = v143;
    *((void *)v146 + 7) = v139;
    *((void *)v146 + 8) = v140;
    v146[72] = v144;
    v146[73] = (char)v190;
    *((void *)v146 + 10) = v197;
    *((void *)v146 + 11) = v141;
    uint64_t v149 = v189;
    *((void *)v146 + 12) = v188;
    *((void *)v146 + 13) = v149;
    *((void *)v146 + 14) = v187;
    sub_249A9B520(v145, v175, type metadata accessor for NoticeView);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_2499ACFC4(v137, v147, v174, v148, v173);
    sub_249A28280(v139, v178, v144);
    sub_249A28294(v197, v141);
    sub_249A9B7D0(&qword_2696E5520, (void (*)(uint64_t))type metadata accessor for BannerView);
    sub_249A9B7D0(&qword_2696E5528, (void (*)(uint64_t))type metadata accessor for NoticeView);
    swift_retain();
    BOOL v150 = v177;
    sub_249AEC248();
    sub_249A9B284(v145, type metadata accessor for NoticeView);
    uint64_t v97 = (uint64_t)v150;
  }
  uint64_t v151 = (uint64_t)v185;
  unint64_t v152 = &qword_2696E54D8;
  sub_2498D6084(v97, v183, &qword_2696E54D8);
  swift_storeEnumTagMultiPayload();
  sub_249A9B7D0(&qword_2696E5520, (void (*)(uint64_t))type metadata accessor for BannerView);
  sub_249A9BB2C();
  sub_249AEC248();
  sub_2498D6084(v151, v195, &qword_2696E54E8);
  swift_storeEnumTagMultiPayload();
  sub_249A9BC08();
  sub_249A9BE38();
  sub_249AEC248();
  sub_2498D60E8(v151, &qword_2696E54E8);
  uint64_t v153 = v97;
  return sub_2498D60E8(v153, v152);
}

uint64_t sub_249A8B5A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E51D0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249A8A160((uint64_t)v7);
  uint64_t v8 = (uint64_t *)(v2 + *(int *)(a1 + 32));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  sub_2498D6084((uint64_t)v7, a2, &qword_2696E51D0);
  uint64_t v11 = (void *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E51D8) + 52));
  *uint64_t v11 = v10;
  v11[1] = v9;
  swift_bridgeObjectRetain();
  return sub_2498D60E8((uint64_t)v7, &qword_2696E51D0);
}

uint64_t sub_249A8B67C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v2 = sub_249AECBE8();
  uint64_t v52 = *(void *)(v2 - 8);
  uint64_t v53 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PlatterView();
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v50 = (uint64_t)&v48 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E5318);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v48 = (uint64_t)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E5320);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF9C8) - 8;
  MEMORY[0x270FA5388](v51);
  uint64_t v49 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF9D0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v54 = (uint64_t)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249A8BB10();
  long long v20 = (int *)type metadata accessor for BannerConfiguration(0);
  uint64_t v21 = *(void *)(v1 + v20[5]);
  sub_249AECBD8();
  uint64_t v22 = (uint64_t *)(v1 + v20[12]);
  uint64_t v23 = *v22;
  uint64_t v24 = v22[1];
  uint64_t v25 = v22[2];
  *(void *)uint64_t v8 = swift_getKeyPath();
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  *((void *)v8 + 3) = swift_getKeyPath();
  v8[32] = 0;
  *((void *)v8 + 5) = v21;
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(&v8[*(int *)(v6 + 36)], v4, v53);
  unsigned __int8 v26 = &v8[*(int *)(v6 + 40)];
  *(void *)unsigned __int8 v26 = v23;
  *((void *)v26 + 1) = v24;
  *((void *)v26 + 2) = v25;
  uint64_t v27 = v50;
  sub_249A9B5B0((uint64_t)v8, v50, (uint64_t (*)(void))type metadata accessor for PlatterView);
  swift_retain();
  uint64_t v28 = sub_249AECC28();
  uint64_t v30 = v29;
  uint64_t v31 = (uint64_t)&v16[*(int *)(v14 + 44)];
  sub_249A9B520(v27, v31, (uint64_t (*)(void))type metadata accessor for PlatterView);
  uint64_t v32 = (uint64_t *)(v31 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E3980) + 36));
  *uint64_t v32 = v28;
  v32[1] = v30;
  uint64_t v33 = v48;
  uint64_t v34 = (uint64_t)v49;
  sub_2498D6084(v48, (uint64_t)v16, &qword_2696E5318);
  sub_249A9B284(v27, (uint64_t (*)(void))type metadata accessor for PlatterView);
  sub_2498D60E8(v33, &qword_2696E5318);
  LOBYTE(v24) = *(unsigned char *)(v1 + v20[11]);
  sub_2498D6084((uint64_t)v16, v34, &qword_2696E5320);
  *(unsigned char *)(v34 + *(int *)(v51 + 44)) = v24;
  sub_2498D60E8((uint64_t)v16, &qword_2696E5320);
  double v35 = 0.0;
  double v36 = 0.0;
  uint64_t v37 = v1 + v20[10];
  char v38 = *(unsigned char *)(v37 + 16);
  uint64_t v39 = v1 + v20[9];
  char v40 = *(unsigned char *)(v39 + 16);
  if ((v38 & 1) == 0)
  {
    double v36 = *(double *)v37;
    double v35 = *(double *)(v37 + 8);
  }
  if (*(unsigned char *)(v39 + 16)) {
    double v41 = 0.0;
  }
  else {
    double v41 = *(double *)v39;
  }
  if (*(unsigned char *)(v39 + 16)) {
    double v42 = 0.0;
  }
  else {
    double v42 = *(double *)(v39 + 8);
  }
  uint64_t v43 = sub_249AECC28();
  double v47 = v42;
  uint64_t v44 = v54;
  sub_2499005A8(v36, v38, 0.0, 1, v41, v40, v35, v38, v54, v47, v40, 0.0, 1, v43, v45);
  sub_2498D60E8(v34, &qword_2696DF9C8);
  return sub_249882788(v44, v55, &qword_2696DF9D0);
}

uint64_t sub_249A8BB10()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E5328);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E5330);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E5338);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v0 + *(int *)(type metadata accessor for BannerView(0) + 20) + 88);
  uint64_t v11 = *(void *)(v0 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 36));
  if (v10)
  {
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = 0;
    v9[16] = 0;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E5358);
    sub_249A94FEC(v0, (uint64_t)&v9[*(int *)(v12 + 44)]);
    sub_2498D6084((uint64_t)v9, (uint64_t)v6, &qword_2696E5338);
    swift_storeEnumTagMultiPayload();
    sub_2498D0A3C(&qword_2696E5348, &qword_2696E5338);
    sub_2498D0A3C(&qword_2696E5350, &qword_2696E5328);
    sub_249AEC248();
    uint64_t v13 = (uint64_t)v9;
    uint64_t v14 = &qword_2696E5338;
  }
  else
  {
    *(void *)uint64_t v3 = v11;
    *((void *)v3 + 1) = 0;
    unsigned char v3[16] = 0;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E5340);
    sub_249A942DC(v0, (uint64_t)&v3[*(int *)(v15 + 44)]);
    sub_2498D6084((uint64_t)v3, (uint64_t)v6, &qword_2696E5328);
    swift_storeEnumTagMultiPayload();
    sub_2498D0A3C(&qword_2696E5348, &qword_2696E5338);
    sub_2498D0A3C(&qword_2696E5350, &qword_2696E5328);
    sub_249AEC248();
    uint64_t v13 = (uint64_t)v3;
    uint64_t v14 = &qword_2696E5328;
  }
  return sub_2498D60E8(v13, v14);
}

uint64_t View.pushToBase(_:)(char a1, uint64_t a2, uint64_t a3)
{
  char v4 = a1;
  return MEMORY[0x24C5AD930](&v4, a2, &type metadata for PushToBaseModifier, a3);
}

uint64_t sub_249A8BE14()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for NotificationView(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v52 = *a2;
    *a1 = *a2;
    a1 = (void *)(v52 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *v3;
    long long v210 = v3;
    long long v211 = a1;
    long long v209 = v6;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = v3[1];
      uint64_t v8 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
      uint64_t v9 = v8[6];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)v3 + v9;
      uint64_t v12 = sub_249AEC9B8();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_retain();
      v13(v10, v11, v12);
      uint64_t v14 = v8[7];
      uint64_t v15 = (char *)v211 + v14;
      uint64_t v16 = (char *)v210 + v14;
      long long v17 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v17;
      v15[32] = v16[32];
      uint64_t v18 = v8[8];
      uint64_t v19 = (_OWORD *)((char *)v211 + v18);
      long long v20 = (_OWORD *)((char *)v210 + v18);
      long long v21 = v20[1];
      *uint64_t v19 = *v20;
      v19[1] = v21;
      *(void *)((char *)v211 + v8[9]) = *(void *)((char *)v210 + v8[9]);
      uint64_t v22 = (int *)type metadata accessor for BannerConfiguration(0);
      *(void *)((char *)v211 + v22[5]) = *(void *)((char *)v210 + v22[5]);
      *((unsigned char *)v211 + v22[6]) = *((unsigned char *)v210 + v22[6]);
      uint64_t v23 = v22[7];
      uint64_t v24 = (char *)v211 + v23;
      uint64_t v25 = (char *)v210 + v23;
      *(void *)uint64_t v24 = *(void *)((char *)v210 + v23);
      *(_OWORD *)(v24 + 8) = *(_OWORD *)((char *)v210 + v23 + 8);
      v24[24] = *((unsigned char *)v210 + v23 + 24);
      uint64_t v26 = type metadata accessor for NotificationSymbolConfiguration(0);
      uint64_t v27 = *(int *)(v26 + 24);
      uint64_t v28 = &v24[v27];
      uint64_t v29 = &v25[v27];
      swift_retain();
      v13(v28, v29, v12);
      uint64_t v30 = *(int *)(v26 + 28);
      uint64_t v31 = &v24[v30];
      uint64_t v32 = &v25[v30];
      long long v33 = *((_OWORD *)v32 + 1);
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
      *((_OWORD *)v31 + 1) = v33;
      uint64_t v34 = v22[8];
      double v35 = (char *)v211 + v34;
      double v36 = (char *)v210 + v34;
      uint64_t v37 = *(void *)((char *)v210 + v34 + 8);
      *(void *)double v35 = *(void *)((char *)v210 + v34);
      *((void *)v35 + 1) = v37;
      long long v38 = *(_OWORD *)((char *)v210 + v34 + 40);
      *(_OWORD *)(v35 + 40) = v38;
      uint64_t v39 = v38;
      char v40 = **(void (***)(char *, char *, uint64_t))(v38 - 8);
      swift_retain();
      swift_retain();
      a1 = v211;
      v40(v35 + 16, v36 + 16, v39);
      long long v41 = *((_OWORD *)v36 + 5);
      *((_OWORD *)v35 + 5) = v41;
      (**(void (***)(uint64_t, uint64_t))(v41 - 8))((uint64_t)(v35 + 56), (uint64_t)(v36 + 56));
      long long v42 = *((_OWORD *)v36 + 7);
      *((_OWORD *)v35 + 6) = *((_OWORD *)v36 + 6);
      *((_OWORD *)v35 + 7) = v42;
      v35[128] = v36[128];
      *((void *)v35 + 17) = *((void *)v36 + 17);
      uint64_t v6 = v209;
      uint64_t v3 = v210;
      uint64_t v43 = v22[9];
      uint64_t v44 = (char *)v211 + v43;
      uint64_t v45 = (char *)v210 + v43;
      v44[16] = v45[16];
      *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
      uint64_t v46 = v22[10];
      double v47 = (char *)v211 + v46;
      uint64_t v48 = (char *)v210 + v46;
      *(_OWORD *)double v47 = *(_OWORD *)v48;
      v47[16] = v48[16];
      *((unsigned char *)v211 + v22[11]) = *((unsigned char *)v210 + v22[11]);
      uint64_t v49 = v22[12];
      uint64_t v50 = (char *)v211 + v49;
      uint64_t v51 = (char *)v210 + v49;
      *(void *)uint64_t v50 = *(void *)v51;
      *(_OWORD *)(v50 + 8) = *(_OWORD *)(v51 + 8);
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    uint64_t v53 = v6[5];
    uint64_t v54 = (void *)((char *)a1 + v53);
    uint64_t v55 = (void *)((char *)v3 + v53);
    int v56 = swift_getEnumCaseMultiPayload();
    void *v54 = *v55;
    if (v56 == 1)
    {
      v54[1] = v55[1];
      uint64_t v57 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
      uint64_t v58 = v57[6];
      uint64_t v59 = (char *)v54 + v58;
      uint64_t v60 = (char *)v55 + v58;
      uint64_t v61 = sub_249AEC9B8();
      uint64_t v203 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
      swift_retain();
      v203(v59, v60, v61);
      uint64_t v62 = v57[7];
      uint64_t v63 = (char *)v54 + v62;
      uint64_t v64 = (char *)v55 + v62;
      long long v65 = *((_OWORD *)v64 + 1);
      *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
      *((_OWORD *)v63 + 1) = v65;
      v63[32] = v64[32];
      uint64_t v66 = v57[8];
      uint64_t v67 = (_OWORD *)((char *)v54 + v66);
      uint64_t v68 = (_OWORD *)((char *)v55 + v66);
      long long v69 = v68[1];
      *uint64_t v67 = *v68;
      v67[1] = v69;
      *(void *)((char *)v54 + v57[9]) = *(void *)((char *)v55 + v57[9]);
      char v70 = (int *)type metadata accessor for BannerConfiguration(0);
      *(void *)((char *)v54 + v70[5]) = *(void *)((char *)v55 + v70[5]);
      *((unsigned char *)v54 + v70[6]) = *((unsigned char *)v55 + v70[6]);
      uint64_t v71 = v70[7];
      long long v72 = (char *)v54 + v71;
      char v73 = (char *)v55 + v71;
      *(void *)long long v72 = *(void *)((char *)v55 + v71);
      *(_OWORD *)(v72 + 8) = *(_OWORD *)((char *)v55 + v71 + 8);
      v72[24] = *((unsigned char *)v55 + v71 + 24);
      uint64_t v74 = type metadata accessor for NotificationSymbolConfiguration(0);
      uint64_t v75 = *(int *)(v74 + 24);
      int v76 = &v72[v75];
      uint64_t v77 = &v73[v75];
      swift_retain();
      v203(v76, v77, v61);
      uint64_t v78 = *(int *)(v74 + 28);
      uint64_t v79 = &v72[v78];
      uint64_t v80 = &v73[v78];
      long long v81 = *((_OWORD *)v80 + 1);
      *(_OWORD *)uint64_t v79 = *(_OWORD *)v80;
      *((_OWORD *)v79 + 1) = v81;
      uint64_t v82 = v70[8];
      uint64_t v83 = (char *)v54 + v82;
      uint64_t v84 = (char *)v55 + v82;
      uint64_t v85 = *(void *)((char *)v55 + v82 + 8);
      *(void *)uint64_t v83 = *(void *)((char *)v55 + v82);
      *((void *)v83 + 1) = v85;
      uint64_t v204 = (uint64_t)v54 + v82 + 16;
      uint64_t v86 = (uint64_t)v55 + v82 + 16;
      long long v87 = *(_OWORD *)((char *)v55 + v82 + 40);
      *(_OWORD *)(v83 + 40) = v87;
      uint64_t v88 = v87;
      uint64_t v89 = **(void (***)(uint64_t, uint64_t, uint64_t))(v87 - 8);
      swift_retain();
      swift_retain();
      uint64_t v90 = v86;
      a1 = v211;
      v89(v204, v90, v88);
      long long v91 = *((_OWORD *)v84 + 5);
      *((_OWORD *)v83 + 5) = v91;
      (**(void (***)(uint64_t, uint64_t))(v91 - 8))((uint64_t)(v83 + 56), (uint64_t)(v84 + 56));
      long long v92 = *((_OWORD *)v84 + 7);
      *((_OWORD *)v83 + 6) = *((_OWORD *)v84 + 6);
      *((_OWORD *)v83 + 7) = v92;
      v83[128] = v84[128];
      *((void *)v83 + 17) = *((void *)v84 + 17);
      uint64_t v6 = v209;
      uint64_t v3 = v210;
      uint64_t v93 = v70[9];
      char v94 = (char *)v54 + v93;
      char v95 = (char *)v55 + v93;
      v94[16] = v95[16];
      *(_OWORD *)char v94 = *(_OWORD *)v95;
      uint64_t v96 = v70[10];
      uint64_t v97 = (char *)v54 + v96;
      char v98 = (char *)v55 + v96;
      *(_OWORD *)uint64_t v97 = *(_OWORD *)v98;
      v97[16] = v98[16];
      *((unsigned char *)v54 + v70[11]) = *((unsigned char *)v55 + v70[11]);
      uint64_t v99 = v70[12];
      uint64_t v100 = (char *)v54 + v99;
      uint64_t v101 = (char *)v55 + v99;
      *(void *)uint64_t v100 = *(void *)v101;
      *(_OWORD *)(v100 + 8) = *(_OWORD *)(v101 + 8);
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    uint64_t v102 = v6[6];
    char v103 = (char *)a1 + v102;
    uint64_t v104 = (char *)v3 + v102;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v105 = *((_OWORD *)v104 + 1);
      *(_OWORD *)char v103 = *(_OWORD *)v104;
      *((_OWORD *)v103 + 1) = v105;
      uint64_t v205 = *((void *)v104 + 5);
      *((void *)v103 + 4) = *((void *)v104 + 4);
      *((void *)v103 + 5) = v205;
      *((_OWORD *)v103 + 3) = *((_OWORD *)v104 + 3);
      v103[64] = v104[64];
      *((void *)v103 + 9) = *((void *)v104 + 9);
      uint64_t v106 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
      uint64_t v107 = v106[7];
      uint64_t v108 = &v103[v107];
      uint64_t v109 = &v104[v107];
      *(void *)uint64_t v108 = *(void *)&v104[v107];
      v108[24] = v104[v107 + 24];
      *(_OWORD *)(v108 + 8) = *(_OWORD *)&v104[v107 + 8];
      uint64_t v110 = type metadata accessor for NotificationSymbolConfiguration(0);
      uint64_t v111 = *(int *)(v110 + 24);
      char v199 = &v109[v111];
      BOOL v201 = &v108[v111];
      uint64_t v112 = sub_249AEC9B8();
      uint64_t v113 = *(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      v113(v201, v199, v112);
      uint64_t v114 = *(int *)(v110 + 28);
      uint64_t v115 = &v108[v114];
      uint64_t v116 = &v109[v114];
      long long v117 = *((_OWORD *)v116 + 1);
      *(_OWORD *)uint64_t v115 = *(_OWORD *)v116;
      *((_OWORD *)v115 + 1) = v117;
      uint64_t v118 = v106[8];
      char v119 = &v103[v118];
      uint64_t v120 = &v104[v118];
      uint64_t v121 = *(void *)&v104[v118 + 8];
      *(void *)char v119 = *(void *)&v104[v118];
      *((void *)v119 + 1) = v121;
      uint64_t v206 = (uint64_t)&v103[v118 + 16];
      uint64_t v122 = (uint64_t)&v104[v118 + 16];
      long long v123 = *(_OWORD *)&v104[v118 + 40];
      *(_OWORD *)(v119 + 40) = v123;
      uint64_t v124 = v123;
      uint64_t v125 = **(void (***)(uint64_t, uint64_t, uint64_t))(v123 - 8);
      swift_retain();
      swift_retain();
      v125(v206, v122, v124);
      long long v126 = *((_OWORD *)v120 + 5);
      *((_OWORD *)v119 + 5) = v126;
      (**(void (***)(uint64_t, uint64_t))(v126 - 8))((uint64_t)(v119 + 56), (uint64_t)(v120 + 56));
      long long v127 = *((_OWORD *)v120 + 7);
      *((_OWORD *)v119 + 6) = *((_OWORD *)v120 + 6);
      *((_OWORD *)v119 + 7) = v127;
      v119[128] = v120[128];
      *((void *)v119 + 17) = *((void *)v120 + 17);
      a1 = v211;
      uint64_t v128 = v106[9];
      uint64_t v129 = &v103[v128];
      uint64_t v130 = &v104[v128];
      v129[16] = v130[16];
      *(_OWORD *)uint64_t v129 = *(_OWORD *)v130;
      uint64_t v131 = v106[10];
      uint64_t v132 = &v103[v131];
      uint64_t v133 = &v104[v131];
      *(_OWORD *)uint64_t v132 = *(_OWORD *)v133;
      v132[16] = v133[16];
      v103[v106[11]] = v104[v106[11]];
      uint64_t v134 = v106[12];
      uint64_t v135 = &v103[v134];
      uint64_t v136 = &v104[v134];
      uint64_t v137 = sub_249AECBE8();
      uint64_t v138 = v135;
      uint64_t v139 = v136;
      uint64_t v6 = v209;
      uint64_t v3 = v210;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(v138, v139, v137);
      uint64_t v140 = v106[13];
      uint64_t v141 = &v103[v140];
      uint64_t v142 = &v104[v140];
      *(void *)uint64_t v141 = *(void *)v142;
      *(_OWORD *)(v141 + 8) = *(_OWORD *)(v142 + 8);
    }
    else
    {
      *(void *)char v103 = *(void *)v104;
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    uint64_t v143 = v6[7];
    char v144 = (char *)a1 + v143;
    uint64_t v145 = (char *)v3 + v143;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v146 = *((_OWORD *)v145 + 1);
      *(_OWORD *)char v144 = *(_OWORD *)v145;
      *((_OWORD *)v144 + 1) = v146;
      uint64_t v207 = *((void *)v145 + 5);
      *((void *)v144 + 4) = *((void *)v145 + 4);
      *((void *)v144 + 5) = v207;
      *((_OWORD *)v144 + 3) = *((_OWORD *)v145 + 3);
      v144[64] = v145[64];
      *((void *)v144 + 9) = *((void *)v145 + 9);
      uint64_t v147 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
      uint64_t v148 = v147[7];
      uint64_t v149 = &v144[v148];
      BOOL v150 = &v145[v148];
      *(void *)uint64_t v149 = *(void *)&v145[v148];
      v149[24] = v145[v148 + 24];
      *(_OWORD *)(v149 + 8) = *(_OWORD *)&v145[v148 + 8];
      uint64_t v151 = type metadata accessor for NotificationSymbolConfiguration(0);
      uint64_t v152 = *(int *)(v151 + 24);
      uint64_t v200 = &v150[v152];
      uint64_t v202 = &v149[v152];
      uint64_t v153 = sub_249AEC9B8();
      uint64_t v154 = *(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      v154(v202, v200, v153);
      uint64_t v155 = *(int *)(v151 + 28);
      uint64_t v156 = &v149[v155];
      uint64_t v157 = &v150[v155];
      long long v158 = *((_OWORD *)v157 + 1);
      *(_OWORD *)uint64_t v156 = *(_OWORD *)v157;
      *((_OWORD *)v156 + 1) = v158;
      uint64_t v159 = v147[8];
      uint64_t v160 = &v144[v159];
      uint64_t v161 = &v145[v159];
      uint64_t v162 = *(void *)&v145[v159 + 8];
      *(void *)uint64_t v160 = *(void *)&v145[v159];
      *((void *)v160 + 1) = v162;
      uint64_t v208 = (uint64_t)&v144[v159 + 16];
      uint64_t v163 = (uint64_t)&v145[v159 + 16];
      long long v164 = *(_OWORD *)&v145[v159 + 40];
      *(_OWORD *)(v160 + 40) = v164;
      uint64_t v165 = v164;
      uint64_t v166 = **(void (***)(uint64_t, uint64_t, uint64_t))(v164 - 8);
      swift_retain();
      swift_retain();
      v166(v208, v163, v165);
      long long v167 = *((_OWORD *)v161 + 5);
      *((_OWORD *)v160 + 5) = v167;
      (**(void (***)(uint64_t, uint64_t))(v167 - 8))((uint64_t)(v160 + 56), (uint64_t)(v161 + 56));
      long long v168 = *((_OWORD *)v161 + 7);
      *((_OWORD *)v160 + 6) = *((_OWORD *)v161 + 6);
      *((_OWORD *)v160 + 7) = v168;
      v160[128] = v161[128];
      *((void *)v160 + 17) = *((void *)v161 + 17);
      a1 = v211;
      uint64_t v169 = v147[9];
      uint64_t v170 = &v144[v169];
      uint64_t v171 = &v145[v169];
      v170[16] = v171[16];
      *(_OWORD *)uint64_t v170 = *(_OWORD *)v171;
      uint64_t v172 = v147[10];
      uint64_t v173 = &v144[v172];
      uint64_t v174 = &v145[v172];
      *(_OWORD *)uint64_t v173 = *(_OWORD *)v174;
      v173[16] = v174[16];
      v144[v147[11]] = v145[v147[11]];
      uint64_t v175 = v147[12];
      uint64_t v176 = &v144[v175];
      uint64_t v177 = &v145[v175];
      uint64_t v178 = sub_249AECBE8();
      uint64_t v179 = v176;
      uint64_t v180 = v177;
      uint64_t v6 = v209;
      uint64_t v3 = v210;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 16))(v179, v180, v178);
      uint64_t v181 = v147[13];
      uint64_t v182 = &v144[v181];
      uint64_t v183 = &v145[v181];
      *(void *)uint64_t v182 = *(void *)v183;
      *(_OWORD *)(v182 + 8) = *(_OWORD *)(v183 + 8);
    }
    else
    {
      *(void *)char v144 = *(void *)v145;
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    uint64_t v184 = v6[8];
    unint64_t v185 = (char *)a1 + v184;
    uint64_t v186 = (char *)v3 + v184;
    uint64_t v187 = *(void *)((char *)v3 + v184 + 8);
    *(void *)unint64_t v185 = *(void *)((char *)v3 + v184);
    *((void *)v185 + 1) = v187;
    uint64_t v188 = *(void *)((char *)v3 + v184 + 16);
    uint64_t v189 = *((void *)v186 + 3);
    uint64_t v190 = *((void *)v186 + 4);
    uint64_t v191 = *((void *)v186 + 5);
    char v192 = v186[48];
    swift_bridgeObjectRetain();
    sub_2499ACFC4(v188, v189, v190, v191, v192);
    *((void *)v185 + 2) = v188;
    *((void *)v185 + 3) = v189;
    *((void *)v185 + 4) = v190;
    *((void *)v185 + 5) = v191;
    v185[48] = v192;
    int v193 = v186[72];
    if (v193 == 255)
    {
      *(_OWORD *)(v185 + 56) = *(_OWORD *)(v186 + 56);
      v185[72] = v186[72];
    }
    else
    {
      uint64_t v194 = *((void *)v186 + 7);
      uint64_t v195 = *((void *)v186 + 8);
      sub_2499AD02C(v194, v195, v186[72]);
      *((void *)v185 + 7) = v194;
      *((void *)v185 + 8) = v195;
      v185[72] = v193;
    }
    v185[73] = v186[73];
    uint64_t v196 = *((void *)v186 + 11);
    if (v196)
    {
      *((void *)v185 + 10) = *((void *)v186 + 10);
      *((void *)v185 + 11) = v196;
      *((void *)v185 + 12) = *((void *)v186 + 12);
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      *((_OWORD *)v185 + 5) = *((_OWORD *)v186 + 5);
      *((void *)v185 + 12) = *((void *)v186 + 12);
    }
    uint64_t v197 = *((void *)v186 + 14);
    *((void *)v185 + 13) = *((void *)v186 + 13);
    *((void *)v185 + 14) = v197;
  }
  swift_retain();
  return a1;
}

uint64_t destroy for NotificationView(uint64_t a1, int *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = a1 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 24);
    uint64_t v6 = sub_249AEC9B8();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    v7(v5, v6);
    uint64_t v8 = type metadata accessor for BannerConfiguration(0);
    uint64_t v9 = a1 + *(int *)(v8 + 28);
    swift_release();
    uint64_t v10 = type metadata accessor for NotificationSymbolConfiguration(0);
    v7(v9 + *(int *)(v10 + 24), v6);
    uint64_t v11 = a1 + *(int *)(v8 + 32);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm(v11 + 16);
    __swift_destroy_boxed_opaque_existential_2Tm(v11 + 56);
    swift_release();
  }
  uint64_t v12 = a1 + a2[5];
  int v13 = swift_getEnumCaseMultiPayload();
  swift_release();
  if (v13 == 1)
  {
    uint64_t v14 = v12 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 24);
    uint64_t v15 = sub_249AEC9B8();
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
    v16(v14, v15);
    uint64_t v17 = type metadata accessor for BannerConfiguration(0);
    uint64_t v18 = v12 + *(int *)(v17 + 28);
    swift_release();
    uint64_t v19 = type metadata accessor for NotificationSymbolConfiguration(0);
    v16(v18 + *(int *)(v19 + 24), v15);
    uint64_t v20 = v12 + *(int *)(v17 + 32);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm(v20 + 16);
    __swift_destroy_boxed_opaque_existential_2Tm(v20 + 56);
    swift_release();
  }
  uint64_t v21 = a1 + a2[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    swift_release();
    uint64_t v22 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    uint64_t v23 = v21 + v22[7];
    swift_release();
    uint64_t v24 = v23 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 24);
    uint64_t v25 = sub_249AEC9B8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
    uint64_t v26 = v21 + v22[8];
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm(v26 + 16);
    __swift_destroy_boxed_opaque_existential_2Tm(v26 + 56);
    uint64_t v27 = v21 + v22[12];
    uint64_t v28 = sub_249AECBE8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  }
  swift_release();
  uint64_t v29 = a1 + a2[7];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    swift_release();
    uint64_t v30 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    uint64_t v31 = v29 + v30[7];
    swift_release();
    uint64_t v32 = v31 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 24);
    uint64_t v33 = sub_249AEC9B8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
    uint64_t v34 = v29 + v30[8];
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm(v34 + 16);
    __swift_destroy_boxed_opaque_existential_2Tm(v34 + 56);
    uint64_t v35 = v29 + v30[12];
    uint64_t v36 = sub_249AECBE8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
  }
  swift_release();
  uint64_t v37 = a1 + a2[8];
  swift_bridgeObjectRelease();
  sub_249934D7C(*(void *)(v37 + 16), *(void *)(v37 + 24), *(void *)(v37 + 32), *(void *)(v37 + 40), *(unsigned char *)(v37 + 48));
  int v38 = *(unsigned __int8 *)(v37 + 72);
  if (v38 != 255) {
    sub_249934DE4(*(void *)(v37 + 56), *(void *)(v37 + 64), v38);
  }
  if (*(void *)(v37 + 88))
  {
    swift_bridgeObjectRelease();
    swift_release();
  }

  return swift_release();
}

void *initializeWithCopy for NotificationView(void *a1, void *a2, int *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  uint64_t v208 = a2;
  long long v209 = a1;
  uint64_t v207 = a3;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = a2[1];
    uint64_t v7 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
    uint64_t v8 = v7[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_249AEC9B8();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v13 = v7[7];
    uint64_t v14 = (char *)v209 + v13;
    uint64_t v15 = (char *)v208 + v13;
    long long v16 = *((_OWORD *)v15 + 1);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v16;
    unsigned char v14[32] = v15[32];
    uint64_t v17 = v7[8];
    uint64_t v18 = (_OWORD *)((char *)v209 + v17);
    uint64_t v19 = (_OWORD *)((char *)v208 + v17);
    long long v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    *(void *)((char *)v209 + v7[9]) = *(void *)((char *)v208 + v7[9]);
    uint64_t v21 = (int *)type metadata accessor for BannerConfiguration(0);
    *(void *)((char *)v209 + v21[5]) = *(void *)((char *)v208 + v21[5]);
    *((unsigned char *)v209 + v21[6]) = *((unsigned char *)v208 + v21[6]);
    uint64_t v22 = v21[7];
    uint64_t v23 = (char *)v209 + v22;
    uint64_t v24 = (char *)v208 + v22;
    *(void *)uint64_t v23 = *(void *)((char *)v208 + v22);
    *(_OWORD *)(v23 + 8) = *(_OWORD *)((char *)v208 + v22 + 8);
    v23[24] = *((unsigned char *)v208 + v22 + 24);
    uint64_t v25 = type metadata accessor for NotificationSymbolConfiguration(0);
    uint64_t v26 = *(int *)(v25 + 24);
    uint64_t v27 = &v23[v26];
    uint64_t v28 = &v24[v26];
    swift_retain();
    v12(v27, v28, v11);
    uint64_t v29 = *(int *)(v25 + 28);
    uint64_t v30 = &v23[v29];
    uint64_t v31 = &v24[v29];
    long long v32 = *((_OWORD *)v31 + 1);
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v32;
    uint64_t v33 = v21[8];
    uint64_t v34 = (char *)v209 + v33;
    uint64_t v35 = (char *)v208 + v33;
    uint64_t v36 = *(void *)((char *)v208 + v33 + 8);
    *(void *)uint64_t v34 = *(void *)((char *)v208 + v33);
    *((void *)v34 + 1) = v36;
    long long v37 = *(_OWORD *)((char *)v208 + v33 + 40);
    *(_OWORD *)(v34 + 40) = v37;
    uint64_t v38 = v37;
    uint64_t v39 = **(void (***)(char *, char *, uint64_t))(v37 - 8);
    swift_retain();
    swift_retain();
    a1 = v209;
    v39(v34 + 16, v35 + 16, v38);
    long long v40 = *((_OWORD *)v35 + 5);
    *((_OWORD *)v34 + 5) = v40;
    (**(void (***)(uint64_t, uint64_t))(v40 - 8))((uint64_t)(v34 + 56), (uint64_t)(v35 + 56));
    long long v41 = *((_OWORD *)v35 + 7);
    *((_OWORD *)v34 + 6) = *((_OWORD *)v35 + 6);
    *((_OWORD *)v34 + 7) = v41;
    v34[128] = v35[128];
    *((void *)v34 + 17) = *((void *)v35 + 17);
    a3 = v207;
    a2 = v208;
    uint64_t v42 = v21[9];
    uint64_t v43 = (char *)v209 + v42;
    uint64_t v44 = (char *)v208 + v42;
    v43[16] = v44[16];
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
    uint64_t v45 = v21[10];
    uint64_t v46 = (char *)v209 + v45;
    double v47 = (char *)v208 + v45;
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
    v46[16] = v47[16];
    *((unsigned char *)v209 + v21[11]) = *((unsigned char *)v208 + v21[11]);
    uint64_t v48 = v21[12];
    uint64_t v49 = (char *)v209 + v48;
    uint64_t v50 = (char *)v208 + v48;
    *(void *)uint64_t v49 = *(void *)v50;
    *(_OWORD *)(v49 + 8) = *(_OWORD *)(v50 + 8);
  }
  swift_retain();
  swift_storeEnumTagMultiPayload();
  uint64_t v51 = a3[5];
  uint64_t v52 = (void *)((char *)a1 + v51);
  uint64_t v53 = (void *)((char *)a2 + v51);
  int v54 = swift_getEnumCaseMultiPayload();
  *uint64_t v52 = *v53;
  if (v54 == 1)
  {
    v52[1] = v53[1];
    uint64_t v55 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
    uint64_t v56 = v55[6];
    uint64_t v57 = (char *)v52 + v56;
    uint64_t v58 = (char *)v53 + v56;
    uint64_t v59 = sub_249AEC9B8();
    BOOL v201 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
    swift_retain();
    v201(v57, v58, v59);
    uint64_t v60 = v55[7];
    uint64_t v61 = (char *)v52 + v60;
    uint64_t v62 = (char *)v53 + v60;
    long long v63 = *((_OWORD *)v62 + 1);
    *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
    *((_OWORD *)v61 + 1) = v63;
    v61[32] = v62[32];
    uint64_t v64 = v55[8];
    long long v65 = (_OWORD *)((char *)v52 + v64);
    uint64_t v66 = (_OWORD *)((char *)v53 + v64);
    long long v67 = v66[1];
    _OWORD *v65 = *v66;
    v65[1] = v67;
    *(void *)((char *)v52 + v55[9]) = *(void *)((char *)v53 + v55[9]);
    uint64_t v68 = (int *)type metadata accessor for BannerConfiguration(0);
    *(void *)((char *)v52 + v68[5]) = *(void *)((char *)v53 + v68[5]);
    *((unsigned char *)v52 + v68[6]) = *((unsigned char *)v53 + v68[6]);
    uint64_t v69 = v68[7];
    char v70 = (char *)v52 + v69;
    uint64_t v71 = (char *)v53 + v69;
    *(void *)char v70 = *(void *)((char *)v53 + v69);
    *(_OWORD *)(v70 + 8) = *(_OWORD *)((char *)v53 + v69 + 8);
    v70[24] = *((unsigned char *)v53 + v69 + 24);
    uint64_t v72 = type metadata accessor for NotificationSymbolConfiguration(0);
    uint64_t v73 = *(int *)(v72 + 24);
    uint64_t v74 = &v70[v73];
    uint64_t v75 = &v71[v73];
    swift_retain();
    v201(v74, v75, v59);
    uint64_t v76 = *(int *)(v72 + 28);
    uint64_t v77 = &v70[v76];
    uint64_t v78 = &v71[v76];
    long long v79 = *((_OWORD *)v78 + 1);
    *(_OWORD *)uint64_t v77 = *(_OWORD *)v78;
    *((_OWORD *)v77 + 1) = v79;
    uint64_t v80 = v68[8];
    long long v81 = (char *)v52 + v80;
    uint64_t v82 = (char *)v53 + v80;
    uint64_t v83 = *(void *)((char *)v53 + v80 + 8);
    *(void *)long long v81 = *(void *)((char *)v53 + v80);
    *((void *)v81 + 1) = v83;
    uint64_t v202 = (uint64_t)v52 + v80 + 16;
    uint64_t v84 = (uint64_t)v53 + v80 + 16;
    long long v85 = *(_OWORD *)((char *)v53 + v80 + 40);
    *(_OWORD *)(v81 + 40) = v85;
    uint64_t v86 = v85;
    long long v87 = **(void (***)(uint64_t, uint64_t, uint64_t))(v85 - 8);
    swift_retain();
    swift_retain();
    uint64_t v88 = v84;
    a1 = v209;
    v87(v202, v88, v86);
    long long v89 = *((_OWORD *)v82 + 5);
    *((_OWORD *)v81 + 5) = v89;
    (**(void (***)(uint64_t, uint64_t))(v89 - 8))((uint64_t)(v81 + 56), (uint64_t)(v82 + 56));
    long long v90 = *((_OWORD *)v82 + 7);
    *((_OWORD *)v81 + 6) = *((_OWORD *)v82 + 6);
    *((_OWORD *)v81 + 7) = v90;
    v81[128] = v82[128];
    *((void *)v81 + 17) = *((void *)v82 + 17);
    a3 = v207;
    a2 = v208;
    uint64_t v91 = v68[9];
    long long v92 = (char *)v52 + v91;
    uint64_t v93 = (char *)v53 + v91;
    v92[16] = v93[16];
    *(_OWORD *)long long v92 = *(_OWORD *)v93;
    uint64_t v94 = v68[10];
    char v95 = (char *)v52 + v94;
    uint64_t v96 = (char *)v53 + v94;
    *(_OWORD *)char v95 = *(_OWORD *)v96;
    v95[16] = v96[16];
    *((unsigned char *)v52 + v68[11]) = *((unsigned char *)v53 + v68[11]);
    uint64_t v97 = v68[12];
    char v98 = (char *)v52 + v97;
    uint64_t v99 = (char *)v53 + v97;
    *(void *)char v98 = *(void *)v99;
    *(_OWORD *)(v98 + 8) = *(_OWORD *)(v99 + 8);
  }
  swift_retain();
  swift_storeEnumTagMultiPayload();
  uint64_t v100 = a3[6];
  uint64_t v101 = (char *)a1 + v100;
  uint64_t v102 = (char *)a2 + v100;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v103 = *((_OWORD *)v102 + 1);
    *(_OWORD *)uint64_t v101 = *(_OWORD *)v102;
    *((_OWORD *)v101 + 1) = v103;
    uint64_t v203 = *((void *)v102 + 5);
    *((void *)v101 + 4) = *((void *)v102 + 4);
    *((void *)v101 + 5) = v203;
    *((_OWORD *)v101 + 3) = *((_OWORD *)v102 + 3);
    v101[64] = v102[64];
    *((void *)v101 + 9) = *((void *)v102 + 9);
    uint64_t v104 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    uint64_t v105 = v104[7];
    uint64_t v106 = &v101[v105];
    uint64_t v107 = &v102[v105];
    *(void *)uint64_t v106 = *(void *)&v102[v105];
    v106[24] = v102[v105 + 24];
    *(_OWORD *)(v106 + 8) = *(_OWORD *)&v102[v105 + 8];
    uint64_t v108 = type metadata accessor for NotificationSymbolConfiguration(0);
    uint64_t v109 = *(int *)(v108 + 24);
    uint64_t v197 = &v107[v109];
    char v199 = &v106[v109];
    uint64_t v110 = sub_249AEC9B8();
    uint64_t v111 = *(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    v111(v199, v197, v110);
    uint64_t v112 = *(int *)(v108 + 28);
    uint64_t v113 = &v106[v112];
    uint64_t v114 = &v107[v112];
    long long v115 = *((_OWORD *)v114 + 1);
    *(_OWORD *)uint64_t v113 = *(_OWORD *)v114;
    *((_OWORD *)v113 + 1) = v115;
    uint64_t v116 = v104[8];
    long long v117 = &v101[v116];
    uint64_t v118 = &v102[v116];
    uint64_t v119 = *(void *)&v102[v116 + 8];
    *(void *)long long v117 = *(void *)&v102[v116];
    *((void *)v117 + 1) = v119;
    uint64_t v204 = (uint64_t)&v101[v116 + 16];
    uint64_t v120 = (uint64_t)&v102[v116 + 16];
    long long v121 = *(_OWORD *)&v102[v116 + 40];
    *(_OWORD *)(v117 + 40) = v121;
    uint64_t v122 = v121;
    long long v123 = **(void (***)(uint64_t, uint64_t, uint64_t))(v121 - 8);
    swift_retain();
    swift_retain();
    v123(v204, v120, v122);
    long long v124 = *((_OWORD *)v118 + 5);
    *((_OWORD *)v117 + 5) = v124;
    (**(void (***)(uint64_t, uint64_t))(v124 - 8))((uint64_t)(v117 + 56), (uint64_t)(v118 + 56));
    long long v125 = *((_OWORD *)v118 + 7);
    *((_OWORD *)v117 + 6) = *((_OWORD *)v118 + 6);
    *((_OWORD *)v117 + 7) = v125;
    v117[128] = v118[128];
    *((void *)v117 + 17) = *((void *)v118 + 17);
    a1 = v209;
    uint64_t v126 = v104[9];
    long long v127 = &v101[v126];
    uint64_t v128 = &v102[v126];
    v127[16] = v128[16];
    *(_OWORD *)long long v127 = *(_OWORD *)v128;
    uint64_t v129 = v104[10];
    uint64_t v130 = &v101[v129];
    uint64_t v131 = &v102[v129];
    *(_OWORD *)uint64_t v130 = *(_OWORD *)v131;
    v130[16] = v131[16];
    v101[v104[11]] = v102[v104[11]];
    uint64_t v132 = v104[12];
    uint64_t v133 = &v101[v132];
    uint64_t v134 = &v102[v132];
    uint64_t v135 = sub_249AECBE8();
    uint64_t v136 = v133;
    uint64_t v137 = v134;
    a3 = v207;
    a2 = v208;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 16))(v136, v137, v135);
    uint64_t v138 = v104[13];
    uint64_t v139 = &v101[v138];
    uint64_t v140 = &v102[v138];
    *(void *)uint64_t v139 = *(void *)v140;
    *(_OWORD *)(v139 + 8) = *(_OWORD *)(v140 + 8);
  }
  else
  {
    *(void *)uint64_t v101 = *(void *)v102;
  }
  swift_retain();
  swift_storeEnumTagMultiPayload();
  uint64_t v141 = a3[7];
  uint64_t v142 = (char *)a1 + v141;
  uint64_t v143 = (char *)a2 + v141;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v144 = *((_OWORD *)v143 + 1);
    *(_OWORD *)uint64_t v142 = *(_OWORD *)v143;
    *((_OWORD *)v142 + 1) = v144;
    uint64_t v205 = *((void *)v143 + 5);
    *((void *)v142 + 4) = *((void *)v143 + 4);
    *((void *)v142 + 5) = v205;
    *((_OWORD *)v142 + 3) = *((_OWORD *)v143 + 3);
    v142[64] = v143[64];
    *((void *)v142 + 9) = *((void *)v143 + 9);
    uint64_t v145 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    uint64_t v146 = v145[7];
    uint64_t v147 = &v142[v146];
    uint64_t v148 = &v143[v146];
    *(void *)uint64_t v147 = *(void *)&v143[v146];
    v147[24] = v143[v146 + 24];
    *(_OWORD *)(v147 + 8) = *(_OWORD *)&v143[v146 + 8];
    uint64_t v149 = type metadata accessor for NotificationSymbolConfiguration(0);
    uint64_t v150 = *(int *)(v149 + 24);
    uint64_t v198 = &v148[v150];
    uint64_t v200 = &v147[v150];
    uint64_t v151 = sub_249AEC9B8();
    uint64_t v152 = *(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    v152(v200, v198, v151);
    uint64_t v153 = *(int *)(v149 + 28);
    uint64_t v154 = &v147[v153];
    uint64_t v155 = &v148[v153];
    long long v156 = *((_OWORD *)v155 + 1);
    *(_OWORD *)uint64_t v154 = *(_OWORD *)v155;
    *((_OWORD *)v154 + 1) = v156;
    uint64_t v157 = v145[8];
    long long v158 = &v142[v157];
    uint64_t v159 = &v143[v157];
    uint64_t v160 = *(void *)&v143[v157 + 8];
    *(void *)long long v158 = *(void *)&v143[v157];
    *((void *)v158 + 1) = v160;
    uint64_t v206 = (uint64_t)&v142[v157 + 16];
    uint64_t v161 = (uint64_t)&v143[v157 + 16];
    long long v162 = *(_OWORD *)&v143[v157 + 40];
    *(_OWORD *)(v158 + 40) = v162;
    uint64_t v163 = v162;
    long long v164 = **(void (***)(uint64_t, uint64_t, uint64_t))(v162 - 8);
    swift_retain();
    swift_retain();
    v164(v206, v161, v163);
    long long v165 = *((_OWORD *)v159 + 5);
    *((_OWORD *)v158 + 5) = v165;
    (**(void (***)(uint64_t, uint64_t))(v165 - 8))((uint64_t)(v158 + 56), (uint64_t)(v159 + 56));
    long long v166 = *((_OWORD *)v159 + 7);
    *((_OWORD *)v158 + 6) = *((_OWORD *)v159 + 6);
    *((_OWORD *)v158 + 7) = v166;
    v158[128] = v159[128];
    *((void *)v158 + 17) = *((void *)v159 + 17);
    a1 = v209;
    uint64_t v167 = v145[9];
    long long v168 = &v142[v167];
    uint64_t v169 = &v143[v167];
    v168[16] = v169[16];
    *(_OWORD *)long long v168 = *(_OWORD *)v169;
    uint64_t v170 = v145[10];
    uint64_t v171 = &v142[v170];
    uint64_t v172 = &v143[v170];
    *(_OWORD *)uint64_t v171 = *(_OWORD *)v172;
    v171[16] = v172[16];
    v142[v145[11]] = v143[v145[11]];
    uint64_t v173 = v145[12];
    uint64_t v174 = &v142[v173];
    uint64_t v175 = &v143[v173];
    uint64_t v176 = sub_249AECBE8();
    uint64_t v177 = v174;
    uint64_t v178 = v175;
    a3 = v207;
    a2 = v208;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v177, v178, v176);
    uint64_t v179 = v145[13];
    uint64_t v180 = &v142[v179];
    uint64_t v181 = &v143[v179];
    *(void *)uint64_t v180 = *(void *)v181;
    *(_OWORD *)(v180 + 8) = *(_OWORD *)(v181 + 8);
  }
  else
  {
    *(void *)uint64_t v142 = *(void *)v143;
  }
  swift_retain();
  swift_storeEnumTagMultiPayload();
  uint64_t v182 = a3[8];
  uint64_t v183 = (char *)a1 + v182;
  uint64_t v184 = (char *)a2 + v182;
  uint64_t v185 = *(void *)((char *)a2 + v182 + 8);
  *(void *)uint64_t v183 = *(void *)((char *)a2 + v182);
  *((void *)v183 + 1) = v185;
  uint64_t v186 = *(void *)((char *)a2 + v182 + 16);
  uint64_t v187 = *((void *)v184 + 3);
  uint64_t v188 = *((void *)v184 + 4);
  uint64_t v189 = *((void *)v184 + 5);
  char v190 = v184[48];
  swift_bridgeObjectRetain();
  sub_2499ACFC4(v186, v187, v188, v189, v190);
  *((void *)v183 + 2) = v186;
  *((void *)v183 + 3) = v187;
  *((void *)v183 + 4) = v188;
  *((void *)v183 + 5) = v189;
  v183[48] = v190;
  int v191 = v184[72];
  if (v191 == 255)
  {
    *(_OWORD *)(v183 + 56) = *(_OWORD *)(v184 + 56);
    v183[72] = v184[72];
  }
  else
  {
    uint64_t v192 = *((void *)v184 + 7);
    uint64_t v193 = *((void *)v184 + 8);
    sub_2499AD02C(v192, v193, v184[72]);
    *((void *)v183 + 7) = v192;
    *((void *)v183 + 8) = v193;
    v183[72] = v191;
  }
  v183[73] = v184[73];
  uint64_t v194 = *((void *)v184 + 11);
  if (v194)
  {
    *((void *)v183 + 10) = *((void *)v184 + 10);
    *((void *)v183 + 11) = v194;
    *((void *)v183 + 12) = *((void *)v184 + 12);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    *((_OWORD *)v183 + 5) = *((_OWORD *)v184 + 5);
    *((void *)v183 + 12) = *((void *)v184 + 12);
  }
  uint64_t v195 = *((void *)v184 + 14);
  *((void *)v183 + 13) = *((void *)v184 + 13);
  *((void *)v183 + 14) = v195;
  swift_retain();
  return a1;
}

void *assignWithCopy for NotificationView(uint64_t a1, void *a2, int *a3)
{
  char v4 = a2;
  uint64_t v5 = (void *)a1;
  if ((void *)a1 != a2)
  {
    sub_2498D60E8(a1, &qword_2696E1CF8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *uint64_t v5 = *v4;
    long long v227 = v4;
    long long v228 = v5;
    long long v226 = a3;
    if (EnumCaseMultiPayload == 1)
    {
      v5[1] = v4[1];
      uint64_t v7 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
      uint64_t v8 = v7[6];
      uint64_t v9 = (char *)v5 + v8;
      uint64_t v10 = (char *)v4 + v8;
      uint64_t v11 = sub_249AEC9B8();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_retain();
      v12(v9, v10, v11);
      uint64_t v13 = v7[7];
      uint64_t v14 = (char *)v228 + v13;
      uint64_t v15 = (char *)v4 + v13;
      long long v16 = *(_OWORD *)v15;
      long long v17 = *((_OWORD *)v15 + 1);
      unsigned char v14[32] = v15[32];
      *(_OWORD *)uint64_t v14 = v16;
      *((_OWORD *)v14 + 1) = v17;
      uint64_t v18 = v7[8];
      uint64_t v19 = (_OWORD *)((char *)v228 + v18);
      long long v20 = (_OWORD *)((char *)v4 + v18);
      long long v21 = v20[1];
      *uint64_t v19 = *v20;
      v19[1] = v21;
      *(void *)((char *)v228 + v7[9]) = *(void *)((char *)v4 + v7[9]);
      uint64_t v22 = (int *)type metadata accessor for BannerConfiguration(0);
      *(void *)((char *)v228 + v22[5]) = *(void *)((char *)v4 + v22[5]);
      *((unsigned char *)v228 + v22[6]) = *((unsigned char *)v4 + v22[6]);
      uint64_t v23 = v22[7];
      uint64_t v24 = (char *)v228 + v23;
      uint64_t v25 = (char *)v4 + v23;
      *(void *)uint64_t v24 = *(void *)((char *)v4 + v23);
      long long v26 = *(_OWORD *)((char *)v4 + v23 + 8);
      v24[24] = *((unsigned char *)v4 + v23 + 24);
      *(_OWORD *)(v24 + 8) = v26;
      uint64_t v27 = type metadata accessor for NotificationSymbolConfiguration(0);
      uint64_t v28 = *(int *)(v27 + 24);
      uint64_t v29 = &v24[v28];
      uint64_t v30 = &v25[v28];
      swift_retain();
      v12(v29, v30, v11);
      uint64_t v31 = *(int *)(v27 + 28);
      long long v32 = &v24[v31];
      uint64_t v33 = &v25[v31];
      long long v34 = *((_OWORD *)v33 + 1);
      *(_OWORD *)long long v32 = *(_OWORD *)v33;
      *((_OWORD *)v32 + 1) = v34;
      uint64_t v35 = v22[8];
      uint64_t v36 = (char *)v228 + v35;
      long long v37 = (char *)v4 + v35;
      *(void *)uint64_t v36 = *(void *)((char *)v227 + v35);
      *((void *)v36 + 1) = *(void *)((char *)v227 + v35 + 8);
      uint64_t v38 = *(void *)((char *)v227 + v35 + 40);
      *((void *)v36 + 5) = v38;
      *((void *)v36 + 6) = *(void *)((char *)v227 + v35 + 48);
      uint64_t v39 = **(void (***)(char *, char *, uint64_t))(v38 - 8);
      swift_retain();
      swift_retain();
      uint64_t v5 = v228;
      uint64_t v40 = v38;
      a3 = v226;
      v39(v36 + 16, v37 + 16, v40);
      uint64_t v41 = *((void *)v37 + 10);
      *((void *)v36 + 10) = v41;
      *((void *)v36 + 11) = *((void *)v37 + 11);
      (**(void (***)(uint64_t, uint64_t))(v41 - 8))((uint64_t)(v36 + 56), (uint64_t)(v37 + 56));
      *((void *)v36 + 12) = *((void *)v37 + 12);
      *((void *)v36 + 13) = *((void *)v37 + 13);
      *((void *)v36 + 14) = *((void *)v37 + 14);
      *((void *)v36 + 15) = *((void *)v37 + 15);
      v36[128] = v37[128];
      uint64_t v42 = *((void *)v37 + 17);
      char v4 = v227;
      *((void *)v36 + 17) = v42;
      uint64_t v43 = v22[9];
      uint64_t v44 = (char *)v228 + v43;
      uint64_t v45 = (char *)v227 + v43;
      char v46 = v45[16];
      *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
      v44[16] = v46;
      uint64_t v47 = v22[10];
      uint64_t v48 = (char *)v228 + v47;
      uint64_t v49 = (char *)v227 + v47;
      char v50 = v49[16];
      *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
      v48[16] = v50;
      *((unsigned char *)v228 + v22[11]) = *((unsigned char *)v227 + v22[11]);
      uint64_t v51 = v22[12];
      uint64_t v52 = (void *)((char *)v228 + v51);
      uint64_t v53 = (void *)((char *)v227 + v51);
      *uint64_t v52 = *v53;
      v52[1] = v53[1];
      v52[2] = v53[2];
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    uint64_t v54 = a3[5];
    uint64_t v55 = (void *)((char *)v5 + v54);
    uint64_t v56 = (void *)((char *)v4 + v54);
    sub_2498D60E8((uint64_t)v5 + v54, &qword_2696E1CF8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF8);
    int v57 = swift_getEnumCaseMultiPayload();
    *uint64_t v55 = *v56;
    if (v57 == 1)
    {
      v55[1] = v56[1];
      uint64_t v58 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
      uint64_t v59 = v58[6];
      uint64_t v60 = (char *)v55 + v59;
      uint64_t v61 = (char *)v56 + v59;
      uint64_t v62 = sub_249AEC9B8();
      long long v222 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16);
      swift_retain();
      v222(v60, v61, v62);
      uint64_t v63 = v58[7];
      uint64_t v64 = (char *)v55 + v63;
      long long v65 = (char *)v56 + v63;
      long long v66 = *(_OWORD *)v65;
      long long v67 = *((_OWORD *)v65 + 1);
      v64[32] = v65[32];
      *(_OWORD *)uint64_t v64 = v66;
      *((_OWORD *)v64 + 1) = v67;
      uint64_t v68 = v58[8];
      uint64_t v69 = (_OWORD *)((char *)v55 + v68);
      char v70 = (_OWORD *)((char *)v56 + v68);
      long long v71 = v70[1];
      *uint64_t v69 = *v70;
      v69[1] = v71;
      *(void *)((char *)v55 + v58[9]) = *(void *)((char *)v56 + v58[9]);
      uint64_t v72 = (int *)type metadata accessor for BannerConfiguration(0);
      *(void *)((char *)v55 + v72[5]) = *(void *)((char *)v56 + v72[5]);
      *((unsigned char *)v55 + v72[6]) = *((unsigned char *)v56 + v72[6]);
      uint64_t v73 = v72[7];
      uint64_t v74 = (char *)v55 + v73;
      uint64_t v75 = (char *)v56 + v73;
      *(void *)uint64_t v74 = *(void *)((char *)v56 + v73);
      long long v76 = *(_OWORD *)((char *)v56 + v73 + 8);
      v74[24] = *((unsigned char *)v56 + v73 + 24);
      *(_OWORD *)(v74 + 8) = v76;
      uint64_t v77 = type metadata accessor for NotificationSymbolConfiguration(0);
      uint64_t v78 = *(int *)(v77 + 24);
      long long v79 = &v74[v78];
      uint64_t v80 = &v75[v78];
      swift_retain();
      v222(v79, v80, v62);
      uint64_t v81 = *(int *)(v77 + 28);
      uint64_t v82 = &v74[v81];
      uint64_t v83 = &v75[v81];
      long long v84 = *((_OWORD *)v83 + 1);
      *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
      *((_OWORD *)v82 + 1) = v84;
      uint64_t v85 = v72[8];
      uint64_t v86 = (char *)v55 + v85;
      long long v87 = (char *)v56 + v85;
      *(void *)uint64_t v86 = *(void *)((char *)v56 + v85);
      *((void *)v86 + 1) = *(void *)((char *)v56 + v85 + 8);
      uint64_t v223 = (uint64_t)v55 + v85 + 16;
      uint64_t v88 = (uint64_t)v56 + v85 + 16;
      uint64_t v89 = *(void *)((char *)v56 + v85 + 40);
      *((void *)v86 + 5) = v89;
      *((void *)v86 + 6) = *(void *)((char *)v56 + v85 + 48);
      long long v90 = **(void (***)(uint64_t, uint64_t, uint64_t))(v89 - 8);
      swift_retain();
      swift_retain();
      uint64_t v91 = v88;
      uint64_t v5 = v228;
      uint64_t v92 = v89;
      a3 = v226;
      v90(v223, v91, v92);
      uint64_t v93 = *((void *)v87 + 10);
      *((void *)v86 + 10) = v93;
      *((void *)v86 + 11) = *((void *)v87 + 11);
      (**(void (***)(uint64_t, uint64_t))(v93 - 8))((uint64_t)(v86 + 56), (uint64_t)(v87 + 56));
      *((void *)v86 + 12) = *((void *)v87 + 12);
      *((void *)v86 + 13) = *((void *)v87 + 13);
      *((void *)v86 + 14) = *((void *)v87 + 14);
      *((void *)v86 + 15) = *((void *)v87 + 15);
      v86[128] = v87[128];
      uint64_t v94 = *((void *)v87 + 17);
      char v4 = v227;
      *((void *)v86 + 17) = v94;
      uint64_t v95 = v72[9];
      uint64_t v96 = (char *)v55 + v95;
      uint64_t v97 = (char *)v56 + v95;
      char v98 = v97[16];
      *(_OWORD *)uint64_t v96 = *(_OWORD *)v97;
      v96[16] = v98;
      uint64_t v99 = v72[10];
      uint64_t v100 = (char *)v55 + v99;
      uint64_t v101 = (char *)v56 + v99;
      char v102 = v101[16];
      *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
      v100[16] = v102;
      *((unsigned char *)v55 + v72[11]) = *((unsigned char *)v56 + v72[11]);
      uint64_t v103 = v72[12];
      uint64_t v104 = (void *)((char *)v55 + v103);
      uint64_t v105 = (void *)((char *)v56 + v103);
      *uint64_t v104 = *v105;
      v104[1] = v105[1];
      v104[2] = v105[2];
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    uint64_t v106 = a3[6];
    uint64_t v107 = (char *)v5 + v106;
    uint64_t v108 = (char *)v4 + v106;
    sub_2498D60E8((uint64_t)v5 + v106, &qword_2696E1CF0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v107 = *(void *)v108;
      *((void *)v107 + 1) = *((void *)v108 + 1);
      *((void *)v107 + 2) = *((void *)v108 + 2);
      *((void *)v107 + 3) = *((void *)v108 + 3);
      *((void *)v107 + 4) = *((void *)v108 + 4);
      *((void *)v107 + 5) = *((void *)v108 + 5);
      *((void *)v107 + 6) = *((void *)v108 + 6);
      *((void *)v107 + 7) = *((void *)v108 + 7);
      v107[64] = v108[64];
      *((void *)v107 + 9) = *((void *)v108 + 9);
      uint64_t v109 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
      uint64_t v110 = v109[7];
      uint64_t v111 = &v107[v110];
      uint64_t v112 = &v108[v110];
      *(void *)uint64_t v111 = *(void *)&v108[v110];
      long long v113 = *(_OWORD *)&v108[v110 + 8];
      v111[24] = v108[v110 + 24];
      *(_OWORD *)(v111 + 8) = v113;
      uint64_t v114 = type metadata accessor for NotificationSymbolConfiguration(0);
      uint64_t v115 = *(int *)(v114 + 24);
      long long v218 = &v112[v115];
      long long v220 = &v111[v115];
      uint64_t v116 = sub_249AEC9B8();
      long long v117 = *(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      v117(v220, v218, v116);
      uint64_t v118 = *(int *)(v114 + 28);
      uint64_t v119 = &v111[v118];
      uint64_t v120 = &v112[v118];
      long long v121 = *((_OWORD *)v120 + 1);
      *(_OWORD *)uint64_t v119 = *(_OWORD *)v120;
      *((_OWORD *)v119 + 1) = v121;
      uint64_t v122 = v109[8];
      long long v123 = &v107[v122];
      long long v124 = &v108[v122];
      *(void *)long long v123 = *(void *)&v108[v122];
      *((void *)v123 + 1) = *(void *)&v108[v122 + 8];
      uint64_t v224 = (uint64_t)&v107[v122 + 16];
      uint64_t v125 = (uint64_t)&v108[v122 + 16];
      uint64_t v126 = *(void *)&v108[v122 + 40];
      *((void *)v123 + 5) = v126;
      *((void *)v123 + 6) = *(void *)&v108[v122 + 48];
      long long v127 = **(void (***)(uint64_t, uint64_t, uint64_t))(v126 - 8);
      swift_retain();
      swift_retain();
      v127(v224, v125, v126);
      uint64_t v128 = *((void *)v124 + 10);
      *((void *)v123 + 10) = v128;
      *((void *)v123 + 11) = *((void *)v124 + 11);
      (**(void (***)(uint64_t, uint64_t))(v128 - 8))((uint64_t)(v123 + 56), (uint64_t)(v124 + 56));
      *((void *)v123 + 12) = *((void *)v124 + 12);
      *((void *)v123 + 13) = *((void *)v124 + 13);
      *((void *)v123 + 14) = *((void *)v124 + 14);
      *((void *)v123 + 15) = *((void *)v124 + 15);
      v123[128] = v124[128];
      uint64_t v129 = *((void *)v124 + 17);
      a3 = v226;
      *((void *)v123 + 17) = v129;
      uint64_t v5 = v228;
      uint64_t v130 = v109[9];
      uint64_t v131 = &v107[v130];
      uint64_t v132 = &v108[v130];
      char v133 = v132[16];
      *(_OWORD *)uint64_t v131 = *(_OWORD *)v132;
      v131[16] = v133;
      uint64_t v134 = v109[10];
      uint64_t v135 = &v107[v134];
      uint64_t v136 = &v108[v134];
      char v137 = v136[16];
      *(_OWORD *)uint64_t v135 = *(_OWORD *)v136;
      v135[16] = v137;
      v107[v109[11]] = v108[v109[11]];
      uint64_t v138 = v109[12];
      uint64_t v139 = &v107[v138];
      uint64_t v140 = &v108[v138];
      uint64_t v141 = sub_249AECBE8();
      uint64_t v142 = v140;
      char v4 = v227;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 16))(v139, v142, v141);
      uint64_t v143 = v109[13];
      long long v144 = &v107[v143];
      uint64_t v145 = &v108[v143];
      *(void *)long long v144 = *(void *)v145;
      *((void *)v144 + 1) = *((void *)v145 + 1);
      *((void *)v144 + 2) = *((void *)v145 + 2);
    }
    else
    {
      *(void *)uint64_t v107 = *(void *)v108;
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    uint64_t v146 = a3[7];
    uint64_t v147 = (char *)v5 + v146;
    uint64_t v148 = (char *)v4 + v146;
    sub_2498D60E8((uint64_t)v5 + v146, &qword_2696E1CF0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v147 = *(void *)v148;
      *((void *)v147 + 1) = *((void *)v148 + 1);
      *((void *)v147 + 2) = *((void *)v148 + 2);
      *((void *)v147 + 3) = *((void *)v148 + 3);
      *((void *)v147 + 4) = *((void *)v148 + 4);
      *((void *)v147 + 5) = *((void *)v148 + 5);
      *((void *)v147 + 6) = *((void *)v148 + 6);
      *((void *)v147 + 7) = *((void *)v148 + 7);
      v147[64] = v148[64];
      *((void *)v147 + 9) = *((void *)v148 + 9);
      uint64_t v149 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
      uint64_t v150 = v149[7];
      uint64_t v151 = &v147[v150];
      uint64_t v152 = &v148[v150];
      *(void *)uint64_t v151 = *(void *)&v148[v150];
      long long v153 = *(_OWORD *)&v148[v150 + 8];
      v151[24] = v148[v150 + 24];
      *(_OWORD *)(v151 + 8) = v153;
      uint64_t v154 = type metadata accessor for NotificationSymbolConfiguration(0);
      uint64_t v155 = *(int *)(v154 + 24);
      long long v219 = &v152[v155];
      long long v221 = &v151[v155];
      uint64_t v156 = sub_249AEC9B8();
      uint64_t v157 = *(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      v157(v221, v219, v156);
      uint64_t v158 = *(int *)(v154 + 28);
      uint64_t v159 = &v151[v158];
      uint64_t v160 = &v152[v158];
      long long v161 = *((_OWORD *)v160 + 1);
      *(_OWORD *)uint64_t v159 = *(_OWORD *)v160;
      *((_OWORD *)v159 + 1) = v161;
      uint64_t v162 = v149[8];
      uint64_t v163 = &v147[v162];
      long long v164 = &v148[v162];
      *(void *)uint64_t v163 = *(void *)&v148[v162];
      *((void *)v163 + 1) = *(void *)&v148[v162 + 8];
      uint64_t v225 = (uint64_t)&v147[v162 + 16];
      uint64_t v165 = (uint64_t)&v148[v162 + 16];
      uint64_t v166 = *(void *)&v148[v162 + 40];
      *((void *)v163 + 5) = v166;
      *((void *)v163 + 6) = *(void *)&v148[v162 + 48];
      uint64_t v167 = **(void (***)(uint64_t, uint64_t, uint64_t))(v166 - 8);
      swift_retain();
      swift_retain();
      v167(v225, v165, v166);
      uint64_t v168 = *((void *)v164 + 10);
      *((void *)v163 + 10) = v168;
      *((void *)v163 + 11) = *((void *)v164 + 11);
      (**(void (***)(uint64_t, uint64_t))(v168 - 8))((uint64_t)(v163 + 56), (uint64_t)(v164 + 56));
      *((void *)v163 + 12) = *((void *)v164 + 12);
      *((void *)v163 + 13) = *((void *)v164 + 13);
      *((void *)v163 + 14) = *((void *)v164 + 14);
      *((void *)v163 + 15) = *((void *)v164 + 15);
      v163[128] = v164[128];
      uint64_t v169 = *((void *)v164 + 17);
      a3 = v226;
      *((void *)v163 + 17) = v169;
      uint64_t v5 = v228;
      uint64_t v170 = v149[9];
      uint64_t v171 = &v147[v170];
      uint64_t v172 = &v148[v170];
      char v173 = v172[16];
      *(_OWORD *)uint64_t v171 = *(_OWORD *)v172;
      v171[16] = v173;
      uint64_t v174 = v149[10];
      uint64_t v175 = &v147[v174];
      uint64_t v176 = &v148[v174];
      char v177 = v176[16];
      *(_OWORD *)uint64_t v175 = *(_OWORD *)v176;
      v175[16] = v177;
      v147[v149[11]] = v148[v149[11]];
      uint64_t v178 = v149[12];
      uint64_t v179 = &v147[v178];
      uint64_t v180 = &v148[v178];
      uint64_t v181 = sub_249AECBE8();
      uint64_t v182 = v180;
      char v4 = v227;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 16))(v179, v182, v181);
      uint64_t v183 = v149[13];
      uint64_t v184 = &v147[v183];
      uint64_t v185 = &v148[v183];
      *(void *)uint64_t v184 = *(void *)v185;
      *((void *)v184 + 1) = *((void *)v185 + 1);
      *((void *)v184 + 2) = *((void *)v185 + 2);
    }
    else
    {
      *(void *)uint64_t v147 = *(void *)v148;
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v186 = a3[8];
  uint64_t v187 = (char *)v5 + v186;
  uint64_t v188 = (char *)v4 + v186;
  *(void *)uint64_t v187 = *(void *)((char *)v4 + v186);
  *((void *)v187 + 1) = *(void *)((char *)v4 + v186 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v189 = *((void *)v188 + 2);
  uint64_t v190 = *((void *)v188 + 3);
  uint64_t v191 = *((void *)v188 + 4);
  uint64_t v192 = *((void *)v188 + 5);
  char v193 = v188[48];
  sub_2499ACFC4(v189, v190, v191, v192, v193);
  uint64_t v194 = *((void *)v187 + 2);
  uint64_t v195 = *((void *)v187 + 3);
  uint64_t v196 = *((void *)v187 + 4);
  uint64_t v197 = *((void *)v187 + 5);
  *((void *)v187 + 2) = v189;
  *((void *)v187 + 3) = v190;
  *((void *)v187 + 4) = v191;
  *((void *)v187 + 5) = v192;
  char v198 = v187[48];
  v187[48] = v193;
  sub_249934D7C(v194, v195, v196, v197, v198);
  char v199 = (long long *)(v187 + 56);
  uint64_t v200 = (long long *)(v188 + 56);
  int v201 = v188[72];
  if (v187[72] == 255)
  {
    if (v201 == 255)
    {
      long long v210 = *v200;
      v187[72] = v188[72];
      *char v199 = v210;
    }
    else
    {
      uint64_t v207 = *((void *)v188 + 7);
      uint64_t v208 = *((void *)v188 + 8);
      sub_2499AD02C(v207, v208, v188[72]);
      *((void *)v187 + 7) = v207;
      *((void *)v187 + 8) = v208;
      v187[72] = v201;
    }
  }
  else if (v201 == 255)
  {
    sub_249A2879C((uint64_t)(v187 + 56));
    char v209 = v188[72];
    *char v199 = *v200;
    v187[72] = v209;
  }
  else
  {
    uint64_t v202 = *((void *)v188 + 7);
    uint64_t v203 = *((void *)v188 + 8);
    sub_2499AD02C(v202, v203, v188[72]);
    uint64_t v204 = *((void *)v187 + 7);
    uint64_t v205 = *((void *)v187 + 8);
    *((void *)v187 + 7) = v202;
    *((void *)v187 + 8) = v203;
    char v206 = v187[72];
    v187[72] = v201;
    sub_249934DE4(v204, v205, v206);
  }
  v187[73] = v188[73];
  long long v211 = v187 + 80;
  long long v212 = v188 + 80;
  uint64_t v213 = *((void *)v188 + 11);
  if (*((void *)v187 + 11))
  {
    if (v213)
    {
      *((void *)v187 + 10) = *((void *)v188 + 10);
      *((void *)v187 + 11) = *((void *)v188 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v187 + 12) = *((void *)v188 + 12);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249A287D0((uint64_t)(v187 + 80));
      uint64_t v214 = *((void *)v188 + 12);
      *long long v211 = *v212;
      *((void *)v187 + 12) = v214;
    }
  }
  else if (v213)
  {
    *((void *)v187 + 10) = *((void *)v188 + 10);
    *((void *)v187 + 11) = *((void *)v188 + 11);
    *((void *)v187 + 12) = *((void *)v188 + 12);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    long long v215 = *v212;
    *((void *)v187 + 12) = *((void *)v188 + 12);
    *long long v211 = v215;
  }
  uint64_t v216 = *((void *)v188 + 14);
  *((void *)v187 + 13) = *((void *)v188 + 13);
  *((void *)v187 + 14) = v216;
  swift_retain();
  swift_release();
  return v5;
}

_OWORD *initializeWithTake for NotificationView(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v7 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
    uint64_t v8 = v7[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_249AEC9B8();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
    v12(v9, v10, v11);
    uint64_t v13 = v7[7];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    long long v16 = *((_OWORD *)v15 + 1);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v16;
    unsigned char v14[32] = v15[32];
    uint64_t v17 = v7[8];
    uint64_t v18 = (_OWORD *)((char *)a1 + v17);
    uint64_t v19 = (_OWORD *)((char *)a2 + v17);
    long long v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    *(void *)((char *)a1 + v7[9]) = *(void *)((char *)a2 + v7[9]);
    long long v21 = (int *)type metadata accessor for BannerConfiguration(0);
    *(void *)((char *)a1 + v21[5]) = *(void *)((char *)a2 + v21[5]);
    *((unsigned char *)a1 + v21[6]) = *((unsigned char *)a2 + v21[6]);
    uint64_t v22 = v21[7];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    *(void *)uint64_t v23 = *(void *)((char *)a2 + v22);
    *(_OWORD *)(v23 + 8) = *(_OWORD *)((char *)a2 + v22 + 8);
    v23[24] = *((unsigned char *)a2 + v22 + 24);
    uint64_t v25 = type metadata accessor for NotificationSymbolConfiguration(0);
    v12(&v23[*(int *)(v25 + 24)], &v24[*(int *)(v25 + 24)], v11);
    uint64_t v26 = *(int *)(v25 + 28);
    uint64_t v27 = &v23[v26];
    uint64_t v28 = &v24[v26];
    long long v29 = *((_OWORD *)v28 + 1);
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    *((_OWORD *)v27 + 1) = v29;
    uint64_t v30 = v21[8];
    uint64_t v31 = (_OWORD *)((char *)a1 + v30);
    long long v32 = (_OWORD *)((char *)a2 + v30);
    long long v33 = v32[3];
    v31[2] = v32[2];
    v31[3] = v33;
    long long v34 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v34;
    long long v35 = v32[8];
    long long v36 = v32[6];
    v31[7] = v32[7];
    v31[8] = v35;
    long long v37 = v32[5];
    v31[4] = v32[4];
    v31[5] = v37;
    v31[6] = v36;
    uint64_t v38 = v21[9];
    uint64_t v39 = (char *)a1 + v38;
    uint64_t v40 = (char *)a2 + v38;
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    v39[16] = v40[16];
    uint64_t v41 = v21[10];
    uint64_t v42 = (char *)a1 + v41;
    uint64_t v43 = (char *)a2 + v41;
    *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
    v42[16] = v43[16];
    *((unsigned char *)a1 + v21[11]) = *((unsigned char *)a2 + v21[11]);
    uint64_t v44 = v21[12];
    uint64_t v45 = (char *)a1 + v44;
    char v46 = (char *)a2 + v44;
    *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
    *((void *)v45 + 2) = *((void *)v46 + 2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v47 = a3[5];
  uint64_t v48 = (_OWORD *)((char *)a1 + v47);
  uint64_t v49 = (_OWORD *)((char *)a2 + v47);
  uint64_t v179 = a3;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _OWORD *v48 = *v49;
    char v50 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
    uint64_t v51 = v50[6];
    uint64_t v52 = (char *)v48 + v51;
    uint64_t v53 = (char *)v49 + v51;
    uint64_t v54 = sub_249AEC9B8();
    uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32);
    v55(v52, v53, v54);
    uint64_t v56 = v50[7];
    int v57 = (char *)v48 + v56;
    uint64_t v58 = (char *)v49 + v56;
    long long v59 = *((_OWORD *)v58 + 1);
    *(_OWORD *)int v57 = *(_OWORD *)v58;
    *((_OWORD *)v57 + 1) = v59;
    v57[32] = v58[32];
    uint64_t v60 = v50[8];
    uint64_t v61 = (_OWORD *)((char *)v48 + v60);
    uint64_t v62 = (_OWORD *)((char *)v49 + v60);
    long long v63 = v62[1];
    *uint64_t v61 = *v62;
    v61[1] = v63;
    *(void *)((char *)v48 + v50[9]) = *(void *)((char *)v49 + v50[9]);
    uint64_t v64 = (int *)type metadata accessor for BannerConfiguration(0);
    *(void *)((char *)v48 + v64[5]) = *(void *)((char *)v49 + v64[5]);
    *((unsigned char *)v48 + v64[6]) = *((unsigned char *)v49 + v64[6]);
    uint64_t v65 = v64[7];
    long long v66 = (char *)v48 + v65;
    long long v67 = (char *)v49 + v65;
    *(void *)long long v66 = *(void *)((char *)v49 + v65);
    *(_OWORD *)(v66 + 8) = *(_OWORD *)((char *)v49 + v65 + 8);
    v66[24] = *((unsigned char *)v49 + v65 + 24);
    uint64_t v68 = type metadata accessor for NotificationSymbolConfiguration(0);
    v55(&v66[*(int *)(v68 + 24)], &v67[*(int *)(v68 + 24)], v54);
    uint64_t v69 = *(int *)(v68 + 28);
    char v70 = &v66[v69];
    a3 = v179;
    long long v71 = &v67[v69];
    long long v72 = *((_OWORD *)v71 + 1);
    *(_OWORD *)char v70 = *(_OWORD *)v71;
    *((_OWORD *)v70 + 1) = v72;
    uint64_t v73 = v64[8];
    uint64_t v74 = (_OWORD *)((char *)v48 + v73);
    uint64_t v75 = (_OWORD *)((char *)v49 + v73);
    long long v76 = v75[3];
    uint64_t v74[2] = v75[2];
    v74[3] = v76;
    long long v77 = v75[1];
    *uint64_t v74 = *v75;
    v74[1] = v77;
    long long v78 = v75[8];
    long long v79 = v75[6];
    v74[7] = v75[7];
    v74[8] = v78;
    long long v80 = v75[5];
    v74[4] = v75[4];
    v74[5] = v80;
    void v74[6] = v79;
    uint64_t v81 = v64[9];
    uint64_t v82 = (char *)v48 + v81;
    uint64_t v83 = (char *)v49 + v81;
    *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
    v82[16] = v83[16];
    uint64_t v84 = v64[10];
    uint64_t v85 = (char *)v48 + v84;
    uint64_t v86 = (char *)v49 + v84;
    *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
    v85[16] = v86[16];
    *((unsigned char *)v48 + v64[11]) = *((unsigned char *)v49 + v64[11]);
    uint64_t v87 = v64[12];
    uint64_t v88 = (char *)v48 + v87;
    uint64_t v89 = (char *)v49 + v87;
    *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
    *((void *)v88 + 2) = *((void *)v89 + 2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v48, v49, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v90 = a3[6];
  uint64_t v91 = (char *)a1 + v90;
  uint64_t v92 = (char *)a2 + v90;
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF0);
  uint64_t v178 = v93;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v94 = *((_OWORD *)v92 + 1);
    *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
    *((_OWORD *)v91 + 1) = v94;
    long long v95 = *((_OWORD *)v92 + 3);
    *((_OWORD *)v91 + 2) = *((_OWORD *)v92 + 2);
    *((_OWORD *)v91 + 3) = v95;
    v91[64] = v92[64];
    *((void *)v91 + 9) = *((void *)v92 + 9);
    uint64_t v96 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    uint64_t v97 = v96[7];
    char v98 = &v91[v97];
    uint64_t v99 = &v92[v97];
    *(void *)char v98 = *(void *)&v92[v97];
    v98[24] = v92[v97 + 24];
    *(_OWORD *)(v98 + 8) = *(_OWORD *)&v92[v97 + 8];
    uint64_t v100 = type metadata accessor for NotificationSymbolConfiguration(0);
    uint64_t v101 = *(int *)(v100 + 24);
    char v102 = &v98[v101];
    uint64_t v103 = &v99[v101];
    uint64_t v104 = sub_249AEC9B8();
    uint64_t v105 = v103;
    a3 = v179;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v102, v105, v104);
    uint64_t v106 = *(int *)(v100 + 28);
    uint64_t v107 = &v98[v106];
    uint64_t v93 = v178;
    uint64_t v108 = &v99[v106];
    long long v109 = *((_OWORD *)v108 + 1);
    *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
    *((_OWORD *)v107 + 1) = v109;
    uint64_t v110 = v96[8];
    uint64_t v111 = &v91[v110];
    uint64_t v112 = &v92[v110];
    long long v113 = *((_OWORD *)v112 + 3);
    *((_OWORD *)v111 + 2) = *((_OWORD *)v112 + 2);
    *((_OWORD *)v111 + 3) = v113;
    long long v114 = *((_OWORD *)v112 + 1);
    *(_OWORD *)uint64_t v111 = *(_OWORD *)v112;
    *((_OWORD *)v111 + 1) = v114;
    long long v115 = *((_OWORD *)v112 + 8);
    long long v116 = *((_OWORD *)v112 + 6);
    *((_OWORD *)v111 + 7) = *((_OWORD *)v112 + 7);
    *((_OWORD *)v111 + 8) = v115;
    long long v117 = *((_OWORD *)v112 + 5);
    *((_OWORD *)v111 + 4) = *((_OWORD *)v112 + 4);
    *((_OWORD *)v111 + 5) = v117;
    *((_OWORD *)v111 + 6) = v116;
    uint64_t v118 = v96[9];
    uint64_t v119 = &v91[v118];
    uint64_t v120 = &v92[v118];
    *(_OWORD *)uint64_t v119 = *(_OWORD *)v120;
    v119[16] = v120[16];
    uint64_t v121 = v96[10];
    uint64_t v122 = &v91[v121];
    long long v123 = &v92[v121];
    *(_OWORD *)uint64_t v122 = *(_OWORD *)v123;
    v122[16] = v123[16];
    v91[v96[11]] = v92[v96[11]];
    uint64_t v124 = v96[12];
    uint64_t v125 = &v91[v124];
    uint64_t v126 = &v92[v124];
    uint64_t v127 = sub_249AECBE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 32))(v125, v126, v127);
    uint64_t v128 = v96[13];
    uint64_t v129 = &v91[v128];
    uint64_t v130 = &v92[v128];
    *(_OWORD *)uint64_t v129 = *(_OWORD *)v130;
    *((void *)v129 + 2) = *((void *)v130 + 2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
  }
  uint64_t v131 = a3[7];
  uint64_t v132 = (char *)a1 + v131;
  char v133 = (char *)a2 + v131;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v134 = *((_OWORD *)v133 + 1);
    *(_OWORD *)uint64_t v132 = *(_OWORD *)v133;
    *((_OWORD *)v132 + 1) = v134;
    long long v135 = *((_OWORD *)v133 + 3);
    *((_OWORD *)v132 + 2) = *((_OWORD *)v133 + 2);
    *((_OWORD *)v132 + 3) = v135;
    v132[64] = v133[64];
    *((void *)v132 + 9) = *((void *)v133 + 9);
    uint64_t v136 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    uint64_t v137 = v136[7];
    uint64_t v138 = &v132[v137];
    uint64_t v139 = &v133[v137];
    *(void *)uint64_t v138 = *(void *)&v133[v137];
    v138[24] = v133[v137 + 24];
    *(_OWORD *)(v138 + 8) = *(_OWORD *)&v133[v137 + 8];
    uint64_t v140 = type metadata accessor for NotificationSymbolConfiguration(0);
    uint64_t v141 = *(int *)(v140 + 24);
    uint64_t v142 = &v138[v141];
    uint64_t v143 = &v139[v141];
    uint64_t v144 = sub_249AEC9B8();
    uint64_t v145 = v143;
    a3 = v179;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 32))(v142, v145, v144);
    uint64_t v146 = *(int *)(v140 + 28);
    uint64_t v147 = &v138[v146];
    uint64_t v148 = &v139[v146];
    long long v149 = *((_OWORD *)v148 + 1);
    *(_OWORD *)uint64_t v147 = *(_OWORD *)v148;
    *((_OWORD *)v147 + 1) = v149;
    uint64_t v150 = v136[8];
    uint64_t v151 = &v132[v150];
    uint64_t v152 = &v133[v150];
    long long v153 = *((_OWORD *)v152 + 3);
    *((_OWORD *)v151 + 2) = *((_OWORD *)v152 + 2);
    *((_OWORD *)v151 + 3) = v153;
    long long v154 = *((_OWORD *)v152 + 1);
    *(_OWORD *)uint64_t v151 = *(_OWORD *)v152;
    *((_OWORD *)v151 + 1) = v154;
    long long v155 = *((_OWORD *)v152 + 8);
    long long v156 = *((_OWORD *)v152 + 6);
    *((_OWORD *)v151 + 7) = *((_OWORD *)v152 + 7);
    *((_OWORD *)v151 + 8) = v155;
    long long v157 = *((_OWORD *)v152 + 5);
    *((_OWORD *)v151 + 4) = *((_OWORD *)v152 + 4);
    *((_OWORD *)v151 + 5) = v157;
    *((_OWORD *)v151 + 6) = v156;
    uint64_t v158 = v136[9];
    uint64_t v159 = &v132[v158];
    uint64_t v160 = &v133[v158];
    *(_OWORD *)uint64_t v159 = *(_OWORD *)v160;
    v159[16] = v160[16];
    uint64_t v161 = v136[10];
    uint64_t v162 = &v132[v161];
    uint64_t v163 = &v133[v161];
    *(_OWORD *)uint64_t v162 = *(_OWORD *)v163;
    v162[16] = v163[16];
    v132[v136[11]] = v133[v136[11]];
    uint64_t v164 = v136[12];
    uint64_t v165 = &v132[v164];
    uint64_t v166 = &v133[v164];
    uint64_t v167 = sub_249AECBE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 32))(v165, v166, v167);
    uint64_t v168 = v136[13];
    uint64_t v169 = &v132[v168];
    uint64_t v170 = &v133[v168];
    *(_OWORD *)uint64_t v169 = *(_OWORD *)v170;
    *((void *)v169 + 2) = *((void *)v170 + 2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v132, v133, *(void *)(*(void *)(v93 - 8) + 64));
  }
  uint64_t v171 = a3[8];
  uint64_t v172 = (char *)a1 + v171;
  char v173 = (char *)a2 + v171;
  long long v174 = *((_OWORD *)v173 + 5);
  *((_OWORD *)v172 + 4) = *((_OWORD *)v173 + 4);
  *((_OWORD *)v172 + 5) = v174;
  *((_OWORD *)v172 + 6) = *((_OWORD *)v173 + 6);
  *((void *)v172 + 14) = *((void *)v173 + 14);
  long long v175 = *((_OWORD *)v173 + 1);
  *(_OWORD *)uint64_t v172 = *(_OWORD *)v173;
  *((_OWORD *)v172 + 1) = v175;
  long long v176 = *((_OWORD *)v173 + 3);
  *((_OWORD *)v172 + 2) = *((_OWORD *)v173 + 2);
  *((_OWORD *)v172 + 3) = v176;
  return a1;
}

_OWORD *assignWithTake for NotificationView(uint64_t a1, _OWORD *a2, int *a3)
{
  uint64_t v5 = (_OWORD *)a1;
  if ((_OWORD *)a1 != a2)
  {
    sub_2498D60E8(a1, &qword_2696E1CF8);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF8);
    uint64_t v190 = a3;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v5 = *a2;
      uint64_t v7 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
      uint64_t v8 = v7[6];
      uint64_t v9 = (char *)v5 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_249AEC9B8();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
      v12(v9, v10, v11);
      uint64_t v13 = v7[7];
      uint64_t v14 = (char *)v5 + v13;
      uint64_t v15 = (char *)a2 + v13;
      long long v16 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v16;
      unsigned char v14[32] = v15[32];
      uint64_t v17 = v7[8];
      uint64_t v18 = (_OWORD *)((char *)v5 + v17);
      uint64_t v19 = (_OWORD *)((char *)a2 + v17);
      long long v20 = v19[1];
      *uint64_t v18 = *v19;
      v18[1] = v20;
      *(void *)((char *)v5 + v7[9]) = *(void *)((char *)a2 + v7[9]);
      long long v21 = (int *)type metadata accessor for BannerConfiguration(0);
      *(void *)((char *)v5 + v21[5]) = *(void *)((char *)a2 + v21[5]);
      *((unsigned char *)v5 + v21[6]) = *((unsigned char *)a2 + v21[6]);
      uint64_t v22 = v21[7];
      uint64_t v23 = (char *)v5 + v22;
      uint64_t v24 = (char *)a2 + v22;
      *(void *)uint64_t v23 = *(void *)((char *)a2 + v22);
      *(_OWORD *)(v23 + 8) = *(_OWORD *)((char *)a2 + v22 + 8);
      v23[24] = *((unsigned char *)a2 + v22 + 24);
      uint64_t v25 = type metadata accessor for NotificationSymbolConfiguration(0);
      v12(&v23[*(int *)(v25 + 24)], &v24[*(int *)(v25 + 24)], v11);
      uint64_t v26 = *(int *)(v25 + 28);
      uint64_t v27 = &v23[v26];
      uint64_t v28 = &v24[v26];
      long long v29 = *((_OWORD *)v28 + 1);
      *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v29;
      uint64_t v30 = v21[8];
      uint64_t v31 = (_OWORD *)((char *)v5 + v30);
      long long v32 = (_OWORD *)((char *)a2 + v30);
      long long v33 = v32[3];
      v31[2] = v32[2];
      v31[3] = v33;
      long long v34 = v32[1];
      *uint64_t v31 = *v32;
      v31[1] = v34;
      long long v35 = v32[8];
      long long v36 = v32[6];
      v31[7] = v32[7];
      v31[8] = v35;
      long long v37 = v32[5];
      v31[4] = v32[4];
      v31[5] = v37;
      v31[6] = v36;
      uint64_t v38 = v21[9];
      uint64_t v39 = (char *)v5 + v38;
      uint64_t v40 = (char *)a2 + v38;
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      v39[16] = v40[16];
      uint64_t v41 = v21[10];
      uint64_t v42 = (char *)v5 + v41;
      uint64_t v43 = (char *)a2 + v41;
      *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
      v42[16] = v43[16];
      *((unsigned char *)v5 + v21[11]) = *((unsigned char *)a2 + v21[11]);
      uint64_t v44 = v21[12];
      uint64_t v45 = (char *)v5 + v44;
      char v46 = (char *)a2 + v44;
      *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
      *((void *)v45 + 2) = *((void *)v46 + 2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v47 = a3[5];
    uint64_t v48 = (_OWORD *)((char *)v5 + v47);
    uint64_t v49 = (_OWORD *)((char *)a2 + v47);
    sub_2498D60E8((uint64_t)v5 + v47, &qword_2696E1CF8);
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      _OWORD *v48 = *v49;
      uint64_t v51 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
      uint64_t v52 = v51[6];
      uint64_t v53 = (char *)v48 + v52;
      uint64_t v54 = (char *)v49 + v52;
      uint64_t v55 = sub_249AEC9B8();
      uint64_t v188 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32);
      v188(v53, v54, v55);
      uint64_t v56 = v51[7];
      int v57 = (char *)v48 + v56;
      uint64_t v58 = (char *)v49 + v56;
      long long v59 = *((_OWORD *)v58 + 1);
      *(_OWORD *)int v57 = *(_OWORD *)v58;
      *((_OWORD *)v57 + 1) = v59;
      v57[32] = v58[32];
      uint64_t v60 = v51[8];
      uint64_t v61 = (_OWORD *)((char *)v48 + v60);
      uint64_t v62 = (_OWORD *)((char *)v49 + v60);
      long long v63 = v62[1];
      *uint64_t v61 = *v62;
      v61[1] = v63;
      *(void *)((char *)v48 + v51[9]) = *(void *)((char *)v49 + v51[9]);
      uint64_t v64 = (int *)type metadata accessor for BannerConfiguration(0);
      *(void *)((char *)v48 + v64[5]) = *(void *)((char *)v49 + v64[5]);
      *((unsigned char *)v48 + v64[6]) = *((unsigned char *)v49 + v64[6]);
      uint64_t v65 = v64[7];
      long long v66 = (char *)v48 + v65;
      long long v67 = (char *)v49 + v65;
      *(void *)long long v66 = *(void *)((char *)v49 + v65);
      *(_OWORD *)(v66 + 8) = *(_OWORD *)((char *)v49 + v65 + 8);
      v66[24] = *((unsigned char *)v49 + v65 + 24);
      uint64_t v68 = type metadata accessor for NotificationSymbolConfiguration(0);
      v188(&v66[*(int *)(v68 + 24)], &v67[*(int *)(v68 + 24)], v55);
      uint64_t v69 = *(int *)(v68 + 28);
      char v70 = &v66[v69];
      long long v71 = &v67[v69];
      a3 = v190;
      long long v72 = *((_OWORD *)v71 + 1);
      *(_OWORD *)char v70 = *(_OWORD *)v71;
      *((_OWORD *)v70 + 1) = v72;
      uint64_t v73 = v64[8];
      uint64_t v74 = (_OWORD *)((char *)v48 + v73);
      uint64_t v75 = (_OWORD *)((char *)v49 + v73);
      long long v76 = v75[3];
      uint64_t v74[2] = v75[2];
      v74[3] = v76;
      long long v77 = v75[1];
      *uint64_t v74 = *v75;
      v74[1] = v77;
      long long v78 = v75[8];
      long long v79 = v75[6];
      v74[7] = v75[7];
      v74[8] = v78;
      long long v80 = v75[5];
      v74[4] = v75[4];
      v74[5] = v80;
      void v74[6] = v79;
      uint64_t v81 = v64[9];
      uint64_t v82 = (char *)v48 + v81;
      uint64_t v83 = (char *)v49 + v81;
      *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
      v82[16] = v83[16];
      uint64_t v84 = v64[10];
      uint64_t v85 = (char *)v48 + v84;
      uint64_t v86 = (char *)v49 + v84;
      *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
      v85[16] = v86[16];
      *((unsigned char *)v48 + v64[11]) = *((unsigned char *)v49 + v64[11]);
      uint64_t v87 = v64[12];
      uint64_t v88 = (char *)v48 + v87;
      uint64_t v89 = (char *)v49 + v87;
      *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
      *((void *)v88 + 2) = *((void *)v89 + 2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    uint64_t v90 = a3[6];
    uint64_t v91 = (char *)v5 + v90;
    uint64_t v92 = (char *)a2 + v90;
    sub_2498D60E8((uint64_t)v5 + v90, &qword_2696E1CF0);
    uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF0);
    uint64_t v189 = v5;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v94 = *((_OWORD *)v92 + 1);
      *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
      *((_OWORD *)v91 + 1) = v94;
      long long v95 = *((_OWORD *)v92 + 3);
      *((_OWORD *)v91 + 2) = *((_OWORD *)v92 + 2);
      *((_OWORD *)v91 + 3) = v95;
      v91[64] = v92[64];
      *((void *)v91 + 9) = *((void *)v92 + 9);
      uint64_t v96 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
      uint64_t v97 = v96[7];
      char v98 = &v91[v97];
      uint64_t v99 = &v92[v97];
      *(void *)char v98 = *(void *)&v92[v97];
      v98[24] = v92[v97 + 24];
      *(_OWORD *)(v98 + 8) = *(_OWORD *)&v92[v97 + 8];
      uint64_t v100 = type metadata accessor for NotificationSymbolConfiguration(0);
      uint64_t v101 = *(int *)(v100 + 24);
      char v102 = &v98[v101];
      uint64_t v103 = &v99[v101];
      uint64_t v104 = sub_249AEC9B8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v102, v103, v104);
      uint64_t v105 = *(int *)(v100 + 28);
      uint64_t v106 = &v98[v105];
      uint64_t v107 = &v99[v105];
      uint64_t v5 = v189;
      a3 = v190;
      long long v108 = *((_OWORD *)v107 + 1);
      *(_OWORD *)uint64_t v106 = *(_OWORD *)v107;
      *((_OWORD *)v106 + 1) = v108;
      uint64_t v109 = v96[8];
      uint64_t v110 = &v91[v109];
      uint64_t v111 = &v92[v109];
      long long v112 = *((_OWORD *)v111 + 3);
      *((_OWORD *)v110 + 2) = *((_OWORD *)v111 + 2);
      *((_OWORD *)v110 + 3) = v112;
      long long v113 = *((_OWORD *)v111 + 1);
      *(_OWORD *)uint64_t v110 = *(_OWORD *)v111;
      *((_OWORD *)v110 + 1) = v113;
      long long v114 = *((_OWORD *)v111 + 8);
      long long v115 = *((_OWORD *)v111 + 6);
      *((_OWORD *)v110 + 7) = *((_OWORD *)v111 + 7);
      *((_OWORD *)v110 + 8) = v114;
      long long v116 = *((_OWORD *)v111 + 5);
      *((_OWORD *)v110 + 4) = *((_OWORD *)v111 + 4);
      *((_OWORD *)v110 + 5) = v116;
      *((_OWORD *)v110 + 6) = v115;
      uint64_t v117 = v96[9];
      uint64_t v118 = &v91[v117];
      uint64_t v119 = &v92[v117];
      *(_OWORD *)uint64_t v118 = *(_OWORD *)v119;
      v118[16] = v119[16];
      uint64_t v120 = v96[10];
      uint64_t v121 = &v91[v120];
      uint64_t v122 = &v92[v120];
      *(_OWORD *)uint64_t v121 = *(_OWORD *)v122;
      v121[16] = v122[16];
      v91[v96[11]] = v92[v96[11]];
      uint64_t v123 = v96[12];
      uint64_t v124 = &v91[v123];
      uint64_t v125 = &v92[v123];
      uint64_t v126 = sub_249AECBE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 32))(v124, v125, v126);
      uint64_t v127 = v96[13];
      uint64_t v128 = &v91[v127];
      uint64_t v129 = &v92[v127];
      *(_OWORD *)uint64_t v128 = *(_OWORD *)v129;
      *((void *)v128 + 2) = *((void *)v129 + 2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
    }
    uint64_t v130 = a3[7];
    uint64_t v131 = (char *)v5 + v130;
    uint64_t v132 = (char *)a2 + v130;
    sub_2498D60E8((uint64_t)v5 + v130, &qword_2696E1CF0);
    uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v134 = *((_OWORD *)v132 + 1);
      *(_OWORD *)uint64_t v131 = *(_OWORD *)v132;
      *((_OWORD *)v131 + 1) = v134;
      long long v135 = *((_OWORD *)v132 + 3);
      *((_OWORD *)v131 + 2) = *((_OWORD *)v132 + 2);
      *((_OWORD *)v131 + 3) = v135;
      v131[64] = v132[64];
      *((void *)v131 + 9) = *((void *)v132 + 9);
      uint64_t v136 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
      uint64_t v137 = v136[7];
      uint64_t v138 = &v131[v137];
      uint64_t v139 = &v132[v137];
      *(void *)uint64_t v138 = *(void *)&v132[v137];
      v138[24] = v132[v137 + 24];
      *(_OWORD *)(v138 + 8) = *(_OWORD *)&v132[v137 + 8];
      uint64_t v140 = type metadata accessor for NotificationSymbolConfiguration(0);
      uint64_t v141 = *(int *)(v140 + 24);
      uint64_t v142 = &v138[v141];
      uint64_t v143 = &v139[v141];
      uint64_t v144 = sub_249AEC9B8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 32))(v142, v143, v144);
      uint64_t v145 = *(int *)(v140 + 28);
      uint64_t v146 = &v138[v145];
      uint64_t v147 = &v139[v145];
      uint64_t v5 = v189;
      a3 = v190;
      long long v148 = *((_OWORD *)v147 + 1);
      *(_OWORD *)uint64_t v146 = *(_OWORD *)v147;
      *((_OWORD *)v146 + 1) = v148;
      uint64_t v149 = v136[8];
      uint64_t v150 = &v131[v149];
      uint64_t v151 = &v132[v149];
      long long v152 = *((_OWORD *)v151 + 3);
      *((_OWORD *)v150 + 2) = *((_OWORD *)v151 + 2);
      *((_OWORD *)v150 + 3) = v152;
      long long v153 = *((_OWORD *)v151 + 1);
      *(_OWORD *)uint64_t v150 = *(_OWORD *)v151;
      *((_OWORD *)v150 + 1) = v153;
      long long v154 = *((_OWORD *)v151 + 8);
      long long v155 = *((_OWORD *)v151 + 6);
      *((_OWORD *)v150 + 7) = *((_OWORD *)v151 + 7);
      *((_OWORD *)v150 + 8) = v154;
      long long v156 = *((_OWORD *)v151 + 5);
      *((_OWORD *)v150 + 4) = *((_OWORD *)v151 + 4);
      *((_OWORD *)v150 + 5) = v156;
      *((_OWORD *)v150 + 6) = v155;
      uint64_t v157 = v136[9];
      uint64_t v158 = &v131[v157];
      uint64_t v159 = &v132[v157];
      *(_OWORD *)uint64_t v158 = *(_OWORD *)v159;
      v158[16] = v159[16];
      uint64_t v160 = v136[10];
      uint64_t v161 = &v131[v160];
      uint64_t v162 = &v132[v160];
      *(_OWORD *)uint64_t v161 = *(_OWORD *)v162;
      v161[16] = v162[16];
      v131[v136[11]] = v132[v136[11]];
      uint64_t v163 = v136[12];
      uint64_t v164 = &v131[v163];
      uint64_t v165 = &v132[v163];
      uint64_t v166 = sub_249AECBE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 32))(v164, v165, v166);
      uint64_t v167 = v136[13];
      uint64_t v168 = &v131[v167];
      uint64_t v169 = &v132[v167];
      *(_OWORD *)uint64_t v168 = *(_OWORD *)v169;
      *((void *)v168 + 2) = *((void *)v169 + 2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v131, v132, *(void *)(*(void *)(v133 - 8) + 64));
    }
  }
  uint64_t v170 = a3[8];
  uint64_t v171 = (char *)v5 + v170;
  uint64_t v172 = (char *)a2 + v170;
  uint64_t v173 = *(void *)((char *)a2 + v170 + 8);
  *(void *)uint64_t v171 = *(void *)((char *)a2 + v170);
  *((void *)v171 + 1) = v173;
  swift_bridgeObjectRelease();
  char v174 = v172[48];
  uint64_t v175 = *((void *)v171 + 2);
  uint64_t v176 = *((void *)v171 + 3);
  uint64_t v177 = *((void *)v171 + 4);
  uint64_t v178 = *((void *)v171 + 5);
  long long v179 = *((_OWORD *)v172 + 2);
  *((_OWORD *)v171 + 1) = *((_OWORD *)v172 + 1);
  *((_OWORD *)v171 + 2) = v179;
  char v180 = v171[48];
  v171[48] = v174;
  sub_249934D7C(v175, v176, v177, v178, v180);
  uint64_t v181 = v172 + 56;
  int v182 = v171[72];
  if (v182 != 255)
  {
    int v183 = v172[72];
    if (v183 != 255)
    {
      uint64_t v184 = *((void *)v171 + 7);
      uint64_t v185 = *((void *)v171 + 8);
      *(_OWORD *)(v171 + 56) = *v181;
      v171[72] = v183;
      sub_249934DE4(v184, v185, v182);
      goto LABEL_19;
    }
    sub_249A2879C((uint64_t)(v171 + 56));
  }
  *(_OWORD *)(v171 + 56) = *v181;
  v171[72] = v172[72];
LABEL_19:
  v171[73] = v172[73];
  if (!*((void *)v171 + 11))
  {
LABEL_23:
    *((_OWORD *)v171 + 5) = *((_OWORD *)v172 + 5);
    *((void *)v171 + 12) = *((void *)v172 + 12);
    goto LABEL_24;
  }
  uint64_t v186 = *((void *)v172 + 11);
  if (!v186)
  {
    sub_249A287D0((uint64_t)(v171 + 80));
    goto LABEL_23;
  }
  *((void *)v171 + 10) = *((void *)v172 + 10);
  *((void *)v171 + 11) = v186;
  swift_bridgeObjectRelease();
  *((void *)v171 + 12) = *((void *)v172 + 12);
  swift_release();
LABEL_24:
  *(_OWORD *)(v171 + 104) = *(_OWORD *)(v172 + 104);
  swift_release();
  return v5;
}

uint64_t getEnumTagSinglePayload for NotificationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249A8FE34);
}

uint64_t sub_249A8FE34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E51E0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2C00);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249A8FF68);
}

uint64_t sub_249A8FF68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E51E0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2C00);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_249A90084()
{
  sub_249A9D6F4(319, &qword_2696E51F8, (void (*)(uint64_t))type metadata accessor for BannerConfiguration);
  if (v0 <= 0x3F)
  {
    sub_249A9D6F4(319, &qword_2696E2DA0, (void (*)(uint64_t))type metadata accessor for UserInteractiveConfiguration);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_249A90190()
{
  return sub_2498D0A3C(&qword_2696E5200, &qword_2696E51D8);
}

uint64_t sub_249A901CC()
{
  return swift_getWitnessTable();
}

unint64_t sub_249A90230()
{
  unint64_t result = qword_2696E5208;
  if (!qword_2696E5208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5208);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PushToBaseModifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PushToBaseModifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A903F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PushToBaseModifier()
{
  return &type metadata for PushToBaseModifier;
}

void *sub_249A90428(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v38 = *a2;
    *a1 = *a2;
    a1 = (void *)(v38 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CE8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      BOOL v7 = (int *)type metadata accessor for NoticeConfiguration(0);
      uint64_t v8 = v7[5];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      *(void *)uint64_t v9 = *(void *)((char *)a2 + v8);
      v9[24] = *((unsigned char *)a2 + v8 + 24);
      *(_OWORD *)(v9 + 8) = *(_OWORD *)((char *)a2 + v8 + 8);
      uint64_t v11 = type metadata accessor for NotificationSymbolConfiguration(0);
      uint64_t v12 = *(int *)(v11 + 24);
      uint64_t v54 = &v10[v12];
      uint64_t v55 = &v9[v12];
      uint64_t v13 = sub_249AEC9B8();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      uint64_t v57 = v6;
      swift_retain();
      v14(v55, v54, v13);
      uint64_t v15 = *(int *)(v11 + 28);
      long long v16 = &v9[v15];
      uint64_t v17 = &v10[v15];
      long long v18 = *((_OWORD *)v17 + 1);
      *(_OWORD *)long long v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v18;
      uint64_t v19 = v7[6];
      long long v20 = (char *)a1 + v19;
      long long v21 = (char *)a2 + v19;
      uint64_t v22 = *(void *)((char *)a2 + v19 + 8);
      *(void *)long long v20 = *(void *)((char *)a2 + v19);
      *((void *)v20 + 1) = v22;
      uint64_t v56 = (uint64_t)a1 + v19 + 16;
      uint64_t v23 = (uint64_t)a2 + v19 + 16;
      long long v24 = *(_OWORD *)((char *)a2 + v19 + 40);
      *(_OWORD *)(v20 + 40) = v24;
      uint64_t v25 = v24;
      uint64_t v26 = **(void (***)(uint64_t, uint64_t, uint64_t))(v24 - 8);
      swift_retain();
      swift_retain();
      v26(v56, v23, v25);
      long long v27 = *((_OWORD *)v21 + 5);
      *((_OWORD *)v20 + 5) = v27;
      (**(void (***)(uint64_t, uint64_t))(v27 - 8))((uint64_t)(v20 + 56), (uint64_t)(v21 + 56));
      long long v28 = *((_OWORD *)v21 + 7);
      *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
      *((_OWORD *)v20 + 7) = v28;
      v20[128] = v21[128];
      *((void *)v20 + 17) = *((void *)v21 + 17);
      uint64_t v6 = v57;
      uint64_t v29 = v7[7];
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      v30[16] = v31[16];
      *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
      uint64_t v32 = v7[8];
      long long v33 = (char *)a1 + v32;
      long long v34 = (char *)a2 + v32;
      *(_OWORD *)long long v33 = *(_OWORD *)v34;
      v33[16] = v34[16];
      *((unsigned char *)a1 + v7[9]) = *((unsigned char *)a2 + v7[9]);
      uint64_t v35 = v7[10];
      long long v36 = (char *)a1 + v35;
      long long v37 = (char *)a2 + v35;
      *(void *)long long v36 = *(void *)v37;
      *(_OWORD *)(v36 + 8) = *(_OWORD *)(v37 + 8);
    }
    else
    {
      *a1 = *a2;
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    uint64_t v39 = *(int *)(v6 + 20);
    uint64_t v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    uint64_t v42 = *(void *)((char *)a2 + v39 + 8);
    *(void *)uint64_t v40 = *(void *)((char *)a2 + v39);
    *((void *)v40 + 1) = v42;
    uint64_t v43 = *(void *)((char *)a2 + v39 + 16);
    uint64_t v44 = *((void *)v41 + 3);
    uint64_t v45 = *((void *)v41 + 4);
    uint64_t v46 = *((void *)v41 + 5);
    char v47 = v41[48];
    swift_bridgeObjectRetain();
    sub_2499ACFC4(v43, v44, v45, v46, v47);
    *((void *)v40 + 2) = v43;
    *((void *)v40 + 3) = v44;
    *((void *)v40 + 4) = v45;
    *((void *)v40 + 5) = v46;
    v40[48] = v47;
    int v48 = v41[72];
    if (v48 == 255)
    {
      *(_OWORD *)(v40 + 56) = *(_OWORD *)(v41 + 56);
      v40[72] = v41[72];
    }
    else
    {
      uint64_t v49 = *((void *)v41 + 7);
      uint64_t v50 = *((void *)v41 + 8);
      sub_2499AD02C(v49, v50, v41[72]);
      *((void *)v40 + 7) = v49;
      *((void *)v40 + 8) = v50;
      v40[72] = v48;
    }
    v40[73] = v41[73];
    uint64_t v51 = *((void *)v41 + 11);
    if (v51)
    {
      *((void *)v40 + 10) = *((void *)v41 + 10);
      *((void *)v40 + 11) = v51;
      *((void *)v40 + 12) = *((void *)v41 + 12);
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      *((_OWORD *)v40 + 5) = *((_OWORD *)v41 + 5);
      *((void *)v40 + 12) = *((void *)v41 + 12);
    }
    uint64_t v52 = *((void *)v41 + 14);
    *((void *)v40 + 13) = *((void *)v41 + 13);
    *((void *)v40 + 14) = v52;
  }
  swift_retain();
  return a1;
}

uint64_t sub_249A907F4(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CE8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for NoticeConfiguration(0);
    uint64_t v5 = a1 + *(int *)(v4 + 20);
    swift_release();
    uint64_t v6 = v5 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 24);
    uint64_t v7 = sub_249AEC9B8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    uint64_t v8 = a1 + *(int *)(v4 + 24);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm(v8 + 16);
    __swift_destroy_boxed_opaque_existential_2Tm(v8 + 56);
  }
  swift_release();
  uint64_t v9 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  sub_249934D7C(*(void *)(v9 + 16), *(void *)(v9 + 24), *(void *)(v9 + 32), *(void *)(v9 + 40), *(unsigned char *)(v9 + 48));
  int v10 = *(unsigned __int8 *)(v9 + 72);
  if (v10 != 255) {
    sub_249934DE4(*(void *)(v9 + 56), *(void *)(v9 + 64), v10);
  }
  if (*(void *)(v9 + 88))
  {
    swift_bridgeObjectRelease();
    swift_release();
  }

  return swift_release();
}

void *sub_249A9093C(void *a1, void *a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CE8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = (int *)type metadata accessor for NoticeConfiguration(0);
    uint64_t v7 = v6[5];
    uint64_t v55 = a3;
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    *(void *)uint64_t v8 = *(void *)((char *)a2 + v7);
    v8[24] = *((unsigned char *)a2 + v7 + 24);
    *(_OWORD *)(v8 + 8) = *(_OWORD *)((char *)a2 + v7 + 8);
    uint64_t v10 = type metadata accessor for NotificationSymbolConfiguration(0);
    uint64_t v11 = *(int *)(v10 + 24);
    uint64_t v52 = &v9[v11];
    uint64_t v53 = &v8[v11];
    uint64_t v12 = sub_249AEC9B8();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    v13(v53, v52, v12);
    uint64_t v14 = *(int *)(v10 + 28);
    uint64_t v15 = &v8[v14];
    long long v16 = &v9[v14];
    long long v17 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v17;
    uint64_t v18 = v6[6];
    uint64_t v19 = (char *)a1 + v18;
    long long v20 = (char *)a2 + v18;
    uint64_t v21 = *(void *)((char *)a2 + v18 + 8);
    *(void *)uint64_t v19 = *(void *)((char *)a2 + v18);
    *((void *)v19 + 1) = v21;
    uint64_t v54 = (uint64_t)a1 + v18 + 16;
    uint64_t v22 = (uint64_t)a2 + v18 + 16;
    long long v23 = *(_OWORD *)((char *)a2 + v18 + 40);
    *(_OWORD *)(v19 + 40) = v23;
    uint64_t v24 = v23;
    uint64_t v25 = **(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8);
    swift_retain();
    swift_retain();
    v25(v54, v22, v24);
    long long v26 = *((_OWORD *)v20 + 5);
    *((_OWORD *)v19 + 5) = v26;
    (**(void (***)(uint64_t, uint64_t))(v26 - 8))((uint64_t)(v19 + 56), (uint64_t)(v20 + 56));
    long long v27 = *((_OWORD *)v20 + 7);
    *((_OWORD *)v19 + 6) = *((_OWORD *)v20 + 6);
    *((_OWORD *)v19 + 7) = v27;
    v19[128] = v20[128];
    *((void *)v19 + 17) = *((void *)v20 + 17);
    a3 = v55;
    uint64_t v28 = v6[7];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    v29[16] = v30[16];
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    uint64_t v31 = v6[8];
    uint64_t v32 = (char *)a1 + v31;
    long long v33 = (char *)a2 + v31;
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    v32[16] = v33[16];
    *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
    uint64_t v34 = v6[10];
    uint64_t v35 = (char *)a1 + v34;
    long long v36 = (char *)a2 + v34;
    *(void *)uint64_t v35 = *(void *)v36;
    *(_OWORD *)(v35 + 8) = *(_OWORD *)(v36 + 8);
  }
  else
  {
    *a1 = *a2;
  }
  swift_retain();
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = *(int *)(a3 + 20);
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  uint64_t v40 = *(void *)((char *)a2 + v37 + 8);
  *(void *)uint64_t v38 = *(void *)((char *)a2 + v37);
  *((void *)v38 + 1) = v40;
  uint64_t v41 = *(void *)((char *)a2 + v37 + 16);
  uint64_t v42 = *((void *)v39 + 3);
  uint64_t v43 = *((void *)v39 + 4);
  uint64_t v44 = *((void *)v39 + 5);
  char v45 = v39[48];
  swift_bridgeObjectRetain();
  sub_2499ACFC4(v41, v42, v43, v44, v45);
  *((void *)v38 + 2) = v41;
  *((void *)v38 + 3) = v42;
  *((void *)v38 + 4) = v43;
  *((void *)v38 + 5) = v44;
  v38[48] = v45;
  int v46 = v39[72];
  if (v46 == 255)
  {
    *(_OWORD *)(v38 + 56) = *(_OWORD *)(v39 + 56);
    v38[72] = v39[72];
  }
  else
  {
    uint64_t v47 = *((void *)v39 + 7);
    uint64_t v48 = *((void *)v39 + 8);
    sub_2499AD02C(v47, v48, v39[72]);
    *((void *)v38 + 7) = v47;
    *((void *)v38 + 8) = v48;
    v38[72] = v46;
  }
  v38[73] = v39[73];
  uint64_t v49 = *((void *)v39 + 11);
  if (v49)
  {
    *((void *)v38 + 10) = *((void *)v39 + 10);
    *((void *)v38 + 11) = v49;
    *((void *)v38 + 12) = *((void *)v39 + 12);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    *((_OWORD *)v38 + 5) = *((_OWORD *)v39 + 5);
    *((void *)v38 + 12) = *((void *)v39 + 12);
  }
  uint64_t v50 = *((void *)v39 + 14);
  *((void *)v38 + 13) = *((void *)v39 + 13);
  *((void *)v38 + 14) = v50;
  swift_retain();
  return a1;
}

void *sub_249A90CB8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2498D60E8((uint64_t)a1, &qword_2696E1CE8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CE8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v72 = a3;
      uint64_t v73 = (int *)type metadata accessor for NoticeConfiguration(0);
      uint64_t v6 = v73[5];
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      *(void *)uint64_t v7 = *(void *)((char *)a2 + v6);
      long long v9 = *(_OWORD *)((char *)a2 + v6 + 8);
      v7[24] = *((unsigned char *)a2 + v6 + 24);
      *(_OWORD *)(v7 + 8) = v9;
      uint64_t v10 = type metadata accessor for NotificationSymbolConfiguration(0);
      uint64_t v11 = *(int *)(v10 + 24);
      long long v71 = &v7[v11];
      uint64_t v12 = &v8[v11];
      uint64_t v13 = sub_249AEC9B8();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_retain();
      v14(v71, v12, v13);
      uint64_t v15 = *(int *)(v10 + 28);
      long long v16 = &v7[v15];
      long long v17 = &v8[v15];
      long long v18 = *((_OWORD *)v17 + 1);
      *(_OWORD *)long long v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v18;
      uint64_t v19 = v73[6];
      long long v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      *(void *)long long v20 = *(void *)((char *)a2 + v19);
      *((void *)v20 + 1) = *(void *)((char *)a2 + v19 + 8);
      uint64_t v22 = (uint64_t)a1 + v19 + 16;
      uint64_t v23 = (uint64_t)a2 + v19 + 16;
      uint64_t v24 = *(void *)((char *)a2 + v19 + 40);
      *((void *)v20 + 5) = v24;
      *((void *)v20 + 6) = *(void *)((char *)a2 + v19 + 48);
      uint64_t v25 = **(void (***)(uint64_t, uint64_t, uint64_t))(v24 - 8);
      swift_retain();
      swift_retain();
      v25(v22, v23, v24);
      uint64_t v26 = *((void *)v21 + 10);
      *((void *)v20 + 10) = v26;
      *((void *)v20 + 11) = *((void *)v21 + 11);
      (**(void (***)(uint64_t, uint64_t))(v26 - 8))((uint64_t)(v20 + 56), (uint64_t)(v21 + 56));
      *((void *)v20 + 12) = *((void *)v21 + 12);
      *((void *)v20 + 13) = *((void *)v21 + 13);
      *((void *)v20 + 14) = *((void *)v21 + 14);
      *((void *)v20 + 15) = *((void *)v21 + 15);
      v20[128] = v21[128];
      uint64_t v27 = *((void *)v21 + 17);
      a3 = v72;
      *((void *)v20 + 17) = v27;
      uint64_t v28 = v73[7];
      uint64_t v29 = (char *)a1 + v28;
      uint64_t v30 = (char *)a2 + v28;
      char v31 = v30[16];
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
      v29[16] = v31;
      uint64_t v32 = v73[8];
      long long v33 = (char *)a1 + v32;
      uint64_t v34 = (char *)a2 + v32;
      char v35 = v34[16];
      *(_OWORD *)long long v33 = *(_OWORD *)v34;
      v33[16] = v35;
      *((unsigned char *)a1 + v73[9]) = *((unsigned char *)a2 + v73[9]);
      uint64_t v36 = v73[10];
      uint64_t v37 = (void *)((char *)a1 + v36);
      uint64_t v38 = (void *)((char *)a2 + v36);
      *uint64_t v37 = *v38;
      v37[1] = v38[1];
      v37[2] = v38[2];
    }
    else
    {
      *a1 = *a2;
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v39 = *(int *)(a3 + 20);
  uint64_t v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  *(void *)uint64_t v40 = *(void *)((char *)a2 + v39);
  *((void *)v40 + 1) = *(void *)((char *)a2 + v39 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = *((void *)v41 + 2);
  uint64_t v43 = *((void *)v41 + 3);
  uint64_t v44 = *((void *)v41 + 4);
  uint64_t v45 = *((void *)v41 + 5);
  char v46 = v41[48];
  sub_2499ACFC4(v42, v43, v44, v45, v46);
  uint64_t v47 = *((void *)v40 + 2);
  uint64_t v48 = *((void *)v40 + 3);
  uint64_t v49 = *((void *)v40 + 4);
  uint64_t v50 = *((void *)v40 + 5);
  *((void *)v40 + 2) = v42;
  *((void *)v40 + 3) = v43;
  *((void *)v40 + 4) = v44;
  *((void *)v40 + 5) = v45;
  char v51 = v40[48];
  v40[48] = v46;
  sub_249934D7C(v47, v48, v49, v50, v51);
  uint64_t v52 = (long long *)(v40 + 56);
  uint64_t v53 = (long long *)(v41 + 56);
  int v54 = v41[72];
  if (v40[72] == 255)
  {
    if (v54 == 255)
    {
      long long v63 = *v53;
      v40[72] = v41[72];
      *uint64_t v52 = v63;
    }
    else
    {
      uint64_t v60 = *((void *)v41 + 7);
      uint64_t v61 = *((void *)v41 + 8);
      sub_2499AD02C(v60, v61, v41[72]);
      *((void *)v40 + 7) = v60;
      *((void *)v40 + 8) = v61;
      v40[72] = v54;
    }
  }
  else if (v54 == 255)
  {
    sub_249A2879C((uint64_t)(v40 + 56));
    char v62 = v41[72];
    *uint64_t v52 = *v53;
    v40[72] = v62;
  }
  else
  {
    uint64_t v55 = *((void *)v41 + 7);
    uint64_t v56 = *((void *)v41 + 8);
    sub_2499AD02C(v55, v56, v41[72]);
    uint64_t v57 = *((void *)v40 + 7);
    uint64_t v58 = *((void *)v40 + 8);
    *((void *)v40 + 7) = v55;
    *((void *)v40 + 8) = v56;
    char v59 = v40[72];
    v40[72] = v54;
    sub_249934DE4(v57, v58, v59);
  }
  v40[73] = v41[73];
  uint64_t v64 = v40 + 80;
  uint64_t v65 = v41 + 80;
  uint64_t v66 = *((void *)v41 + 11);
  if (*((void *)v40 + 11))
  {
    if (v66)
    {
      *((void *)v40 + 10) = *((void *)v41 + 10);
      *((void *)v40 + 11) = *((void *)v41 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v40 + 12) = *((void *)v41 + 12);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249A287D0((uint64_t)(v40 + 80));
      uint64_t v67 = *((void *)v41 + 12);
      *uint64_t v64 = *v65;
      *((void *)v40 + 12) = v67;
    }
  }
  else if (v66)
  {
    *((void *)v40 + 10) = *((void *)v41 + 10);
    *((void *)v40 + 11) = *((void *)v41 + 11);
    *((void *)v40 + 12) = *((void *)v41 + 12);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    long long v68 = *v65;
    *((void *)v40 + 12) = *((void *)v41 + 12);
    *uint64_t v64 = v68;
  }
  uint64_t v69 = *((void *)v41 + 14);
  *((void *)v40 + 13) = *((void *)v41 + 13);
  *((void *)v40 + 14) = v69;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_249A91178(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CE8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v7 = (int *)type metadata accessor for NoticeConfiguration(0);
    uint64_t v8 = v7[5];
    long long v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(void *)long long v9 = *(void *)((char *)a2 + v8);
    v9[24] = *((unsigned char *)a2 + v8 + 24);
    *(_OWORD *)(v9 + 8) = *(_OWORD *)((char *)a2 + v8 + 8);
    uint64_t v11 = type metadata accessor for NotificationSymbolConfiguration(0);
    uint64_t v12 = *(int *)(v11 + 24);
    uint64_t v13 = &v9[v12];
    uint64_t v14 = &v10[v12];
    uint64_t v15 = sub_249AEC9B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    uint64_t v16 = *(int *)(v11 + 28);
    long long v17 = &v9[v16];
    long long v18 = &v10[v16];
    long long v19 = *((_OWORD *)v18 + 1);
    *(_OWORD *)long long v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v19;
    uint64_t v20 = v7[6];
    uint64_t v21 = (_OWORD *)((char *)a1 + v20);
    uint64_t v22 = (_OWORD *)((char *)a2 + v20);
    long long v23 = v22[3];
    void v21[2] = v22[2];
    v21[3] = v23;
    long long v24 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v24;
    long long v25 = v22[8];
    long long v26 = v22[6];
    v21[7] = v22[7];
    v21[8] = v25;
    long long v27 = v22[5];
    v21[4] = v22[4];
    v21[5] = v27;
    v21[6] = v26;
    uint64_t v28 = v7[7];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    v29[16] = v30[16];
    uint64_t v31 = v7[8];
    uint64_t v32 = (char *)a1 + v31;
    long long v33 = (char *)a2 + v31;
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    v32[16] = v33[16];
    *((unsigned char *)a1 + v7[9]) = *((unsigned char *)a2 + v7[9]);
    uint64_t v34 = v7[10];
    char v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    *(_OWORD *)char v35 = *(_OWORD *)v36;
    *((void *)v35 + 2) = *((void *)v36 + 2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v37 = *(int *)(a3 + 20);
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  long long v40 = *((_OWORD *)v39 + 5);
  *((_OWORD *)v38 + 4) = *((_OWORD *)v39 + 4);
  *((_OWORD *)v38 + 5) = v40;
  *((_OWORD *)v38 + 6) = *((_OWORD *)v39 + 6);
  *((void *)v38 + 14) = *((void *)v39 + 14);
  long long v41 = *((_OWORD *)v39 + 1);
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  *((_OWORD *)v38 + 1) = v41;
  long long v42 = *((_OWORD *)v39 + 3);
  *((_OWORD *)v38 + 2) = *((_OWORD *)v39 + 2);
  *((_OWORD *)v38 + 3) = v42;
  return a1;
}

void *sub_249A91384(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2498D60E8((uint64_t)a1, &qword_2696E1CE8);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CE8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v7 = (int *)type metadata accessor for NoticeConfiguration(0);
      uint64_t v8 = v7[5];
      long long v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      *(void *)long long v9 = *(void *)((char *)a2 + v8);
      v9[24] = *((unsigned char *)a2 + v8 + 24);
      *(_OWORD *)(v9 + 8) = *(_OWORD *)((char *)a2 + v8 + 8);
      uint64_t v11 = type metadata accessor for NotificationSymbolConfiguration(0);
      uint64_t v12 = *(int *)(v11 + 24);
      uint64_t v13 = &v9[v12];
      uint64_t v14 = &v10[v12];
      uint64_t v15 = sub_249AEC9B8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      uint64_t v16 = *(int *)(v11 + 28);
      long long v17 = &v9[v16];
      long long v18 = &v10[v16];
      long long v19 = *((_OWORD *)v18 + 1);
      *(_OWORD *)long long v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v19;
      uint64_t v20 = v7[6];
      uint64_t v21 = (_OWORD *)((char *)a1 + v20);
      uint64_t v22 = (_OWORD *)((char *)a2 + v20);
      long long v23 = v22[3];
      void v21[2] = v22[2];
      v21[3] = v23;
      long long v24 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v24;
      long long v25 = v22[8];
      long long v26 = v22[6];
      v21[7] = v22[7];
      v21[8] = v25;
      long long v27 = v22[5];
      v21[4] = v22[4];
      v21[5] = v27;
      v21[6] = v26;
      uint64_t v28 = v7[7];
      uint64_t v29 = (char *)a1 + v28;
      uint64_t v30 = (char *)a2 + v28;
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
      v29[16] = v30[16];
      uint64_t v31 = v7[8];
      uint64_t v32 = (char *)a1 + v31;
      long long v33 = (char *)a2 + v31;
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      v32[16] = v33[16];
      *((unsigned char *)a1 + v7[9]) = *((unsigned char *)a2 + v7[9]);
      uint64_t v34 = v7[10];
      char v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      *(_OWORD *)char v35 = *(_OWORD *)v36;
      *((void *)v35 + 2) = *((void *)v36 + 2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v37 = *(int *)(a3 + 20);
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  uint64_t v40 = *(void *)((char *)a2 + v37 + 8);
  *(void *)uint64_t v38 = *(void *)((char *)a2 + v37);
  *((void *)v38 + 1) = v40;
  swift_bridgeObjectRelease();
  char v41 = v39[48];
  uint64_t v42 = *((void *)v38 + 2);
  uint64_t v43 = *((void *)v38 + 3);
  uint64_t v44 = *((void *)v38 + 4);
  uint64_t v45 = *((void *)v38 + 5);
  long long v46 = *((_OWORD *)v39 + 2);
  *((_OWORD *)v38 + 1) = *((_OWORD *)v39 + 1);
  *((_OWORD *)v38 + 2) = v46;
  char v47 = v38[48];
  v38[48] = v41;
  sub_249934D7C(v42, v43, v44, v45, v47);
  uint64_t v48 = v39 + 56;
  int v49 = v38[72];
  if (v49 != 255)
  {
    int v50 = v39[72];
    if (v50 != 255)
    {
      uint64_t v51 = *((void *)v38 + 7);
      uint64_t v52 = *((void *)v38 + 8);
      *(_OWORD *)(v38 + 56) = *v48;
      v38[72] = v50;
      sub_249934DE4(v51, v52, v49);
      goto LABEL_10;
    }
    sub_249A2879C((uint64_t)(v38 + 56));
  }
  *(_OWORD *)(v38 + 56) = *v48;
  v38[72] = v39[72];
LABEL_10:
  v38[73] = v39[73];
  if (!*((void *)v38 + 11))
  {
LABEL_14:
    *((_OWORD *)v38 + 5) = *((_OWORD *)v39 + 5);
    *((void *)v38 + 12) = *((void *)v39 + 12);
    goto LABEL_15;
  }
  uint64_t v53 = *((void *)v39 + 11);
  if (!v53)
  {
    sub_249A287D0((uint64_t)(v38 + 80));
    goto LABEL_14;
  }
  *((void *)v38 + 10) = *((void *)v39 + 10);
  *((void *)v38 + 11) = v53;
  swift_bridgeObjectRelease();
  *((void *)v38 + 12) = *((void *)v39 + 12);
  swift_release();
LABEL_15:
  *(_OWORD *)(v38 + 104) = *(_OWORD *)(v39 + 104);
  swift_release();
  return a1;
}

uint64_t sub_249A91668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249A9167C);
}

uint64_t sub_249A9167C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E5210);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_249A91744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249A91758);
}

uint64_t sub_249A91758(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E5210);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for NoticeView(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696E5218);
}

void sub_249A9183C()
{
  sub_249A9D6F4(319, &qword_2696E5228, (void (*)(uint64_t))type metadata accessor for NoticeConfiguration);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_249A918EC(void *a1, void *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v6 = a1;
    a1[1] = a2[1];
    uint64_t v7 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
    uint64_t v8 = v7[6];
    uint64_t v9 = (char *)v6 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_249AEC9B8();
    uint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    v66(v9, v10, v11);
    uint64_t v12 = v7[7];
    uint64_t v13 = (char *)v6 + v12;
    uint64_t v14 = (char *)a2 + v12;
    long long v15 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v15;
    unsigned char v13[32] = v14[32];
    uint64_t v16 = v7[8];
    long long v17 = (_OWORD *)((char *)v6 + v16);
    long long v18 = (_OWORD *)((char *)a2 + v16);
    long long v19 = v18[1];
    *long long v17 = *v18;
    v17[1] = v19;
    *(void *)((char *)v6 + v7[9]) = *(void *)((char *)a2 + v7[9]);
    uint64_t v20 = (int *)type metadata accessor for BannerConfiguration(0);
    *(void *)((char *)v6 + v20[5]) = *(void *)((char *)a2 + v20[5]);
    *((unsigned char *)v6 + v20[6]) = *((unsigned char *)a2 + v20[6]);
    uint64_t v21 = v20[7];
    uint64_t v22 = (char *)v6 + v21;
    long long v23 = (char *)a2 + v21;
    *(void *)uint64_t v22 = *(void *)((char *)a2 + v21);
    *(_OWORD *)(v22 + 8) = *(_OWORD *)((char *)a2 + v21 + 8);
    v22[24] = *((unsigned char *)a2 + v21 + 24);
    uint64_t v24 = type metadata accessor for NotificationSymbolConfiguration(0);
    uint64_t v25 = *(int *)(v24 + 24);
    long long v26 = &v22[v25];
    long long v27 = &v23[v25];
    swift_retain();
    v66(v26, v27, v11);
    uint64_t v28 = *(int *)(v24 + 28);
    uint64_t v29 = &v22[v28];
    uint64_t v30 = &v23[v28];
    long long v31 = *((_OWORD *)v30 + 1);
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    *((_OWORD *)v29 + 1) = v31;
    uint64_t v32 = v20[8];
    long long v33 = (char *)v6 + v32;
    uint64_t v34 = (char *)a2 + v32;
    uint64_t v35 = *(void *)((char *)a2 + v32 + 8);
    *(void *)long long v33 = *(void *)((char *)a2 + v32);
    *((void *)v33 + 1) = v35;
    uint64_t v67 = (uint64_t)v6 + v32 + 16;
    uint64_t v36 = (uint64_t)a2 + v32 + 16;
    long long v37 = *(_OWORD *)((char *)a2 + v32 + 40);
    *(_OWORD *)(v33 + 40) = v37;
    uint64_t v38 = v37;
    uint64_t v39 = **(void (***)(uint64_t, uint64_t, uint64_t))(v37 - 8);
    swift_retain();
    swift_retain();
    v39(v67, v36, v38);
    long long v40 = *((_OWORD *)v34 + 5);
    *((_OWORD *)v33 + 5) = v40;
    (**(void (***)(uint64_t, uint64_t))(v40 - 8))((uint64_t)(v33 + 56), (uint64_t)(v34 + 56));
    long long v41 = *((_OWORD *)v34 + 7);
    *((_OWORD *)v33 + 6) = *((_OWORD *)v34 + 6);
    *((_OWORD *)v33 + 7) = v41;
    v33[128] = v34[128];
    *((void *)v33 + 17) = *((void *)v34 + 17);
    uint64_t v42 = v20[9];
    uint64_t v43 = (char *)v6 + v42;
    uint64_t v44 = (char *)a2 + v42;
    v43[16] = v44[16];
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
    uint64_t v45 = v20[10];
    long long v46 = (char *)v6 + v45;
    char v47 = (char *)a2 + v45;
    *(_OWORD *)long long v46 = *(_OWORD *)v47;
    v46[16] = v47[16];
    *((unsigned char *)v6 + v20[11]) = *((unsigned char *)a2 + v20[11]);
    uint64_t v48 = v20[12];
    int v49 = (char *)v6 + v48;
    int v50 = (char *)a2 + v48;
    *(void *)int v49 = *(void *)v50;
    *(_OWORD *)(v49 + 8) = *(_OWORD *)(v50 + 8);
    uint64_t v51 = *(int *)(a3 + 20);
    uint64_t v52 = (char *)v6 + v51;
    uint64_t v53 = (char *)a2 + v51;
    uint64_t v54 = *(void *)((char *)a2 + v51);
    uint64_t v55 = *((void *)v53 + 1);
    *(void *)uint64_t v52 = v54;
    *((void *)v52 + 1) = v55;
    uint64_t v56 = *((void *)v53 + 2);
    uint64_t v57 = *((void *)v53 + 3);
    uint64_t v58 = *((void *)v53 + 4);
    uint64_t v59 = *((void *)v53 + 5);
    LOBYTE(v36) = v53[48];
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2499ACFC4(v56, v57, v58, v59, v36);
    *((void *)v52 + 2) = v56;
    *((void *)v52 + 3) = v57;
    *((void *)v52 + 4) = v58;
    *((void *)v52 + 5) = v59;
    v52[48] = v36;
    int v60 = v53[72];
    if (v60 == 255)
    {
      *(_OWORD *)(v52 + 56) = *(_OWORD *)(v53 + 56);
      v52[72] = v53[72];
    }
    else
    {
      uint64_t v61 = *((void *)v53 + 7);
      uint64_t v62 = *((void *)v53 + 8);
      sub_2499AD02C(v61, v62, v53[72]);
      *((void *)v52 + 7) = v61;
      *((void *)v52 + 8) = v62;
      v52[72] = v60;
    }
    v52[73] = v53[73];
    uint64_t v63 = *((void *)v53 + 11);
    if (v63)
    {
      *((void *)v52 + 10) = *((void *)v53 + 10);
      *((void *)v52 + 11) = v63;
      *((void *)v52 + 12) = *((void *)v53 + 12);
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      *((_OWORD *)v52 + 5) = *((_OWORD *)v53 + 5);
      *((void *)v52 + 12) = *((void *)v53 + 12);
    }
    uint64_t v64 = *((void *)v53 + 14);
    *((void *)v52 + 13) = *((void *)v53 + 13);
    *((void *)v52 + 14) = v64;
  }
  swift_retain();
  return v6;
}

uint64_t sub_249A91D04(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 24);
  uint64_t v5 = sub_249AEC9B8();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = type metadata accessor for BannerConfiguration(0);
  uint64_t v8 = a1 + *(int *)(v7 + 28);
  swift_release();
  uint64_t v9 = type metadata accessor for NotificationSymbolConfiguration(0);
  v6(v8 + *(int *)(v9 + 24), v5);
  uint64_t v10 = a1 + *(int *)(v7 + 32);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm(v10 + 16);
  __swift_destroy_boxed_opaque_existential_2Tm(v10 + 56);
  swift_release();
  uint64_t v11 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  sub_249934D7C(*(void *)(v11 + 16), *(void *)(v11 + 24), *(void *)(v11 + 32), *(void *)(v11 + 40), *(unsigned char *)(v11 + 48));
  int v12 = *(unsigned __int8 *)(v11 + 72);
  if (v12 != 255) {
    sub_249934DE4(*(void *)(v11 + 56), *(void *)(v11 + 64), v12);
  }
  if (*(void *)(v11 + 88))
  {
    swift_bridgeObjectRelease();
    swift_release();
  }

  return swift_release();
}

void *sub_249A91E60(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_249AEC9B8();
  uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  v65(v8, v9, v10);
  uint64_t v11 = v6[7];
  int v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)int v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  v12[32] = v13[32];
  uint64_t v15 = v6[8];
  uint64_t v16 = (_OWORD *)((char *)a1 + v15);
  long long v17 = (_OWORD *)((char *)a2 + v15);
  long long v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  long long v19 = (int *)type metadata accessor for BannerConfiguration(0);
  *(void *)((char *)a1 + v19[5]) = *(void *)((char *)a2 + v19[5]);
  *((unsigned char *)a1 + v19[6]) = *((unsigned char *)a2 + v19[6]);
  uint64_t v20 = v19[7];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  *(void *)uint64_t v21 = *(void *)((char *)a2 + v20);
  *(_OWORD *)(v21 + 8) = *(_OWORD *)((char *)a2 + v20 + 8);
  v21[24] = *((unsigned char *)a2 + v20 + 24);
  uint64_t v23 = type metadata accessor for NotificationSymbolConfiguration(0);
  uint64_t v24 = *(int *)(v23 + 24);
  uint64_t v25 = &v21[v24];
  long long v26 = &v22[v24];
  swift_retain();
  v65(v25, v26, v10);
  uint64_t v27 = *(int *)(v23 + 28);
  uint64_t v28 = &v21[v27];
  uint64_t v29 = &v22[v27];
  long long v30 = *((_OWORD *)v29 + 1);
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  *((_OWORD *)v28 + 1) = v30;
  uint64_t v31 = v19[8];
  uint64_t v32 = (char *)a1 + v31;
  long long v33 = (char *)a2 + v31;
  uint64_t v34 = *(void *)((char *)a2 + v31 + 8);
  *(void *)uint64_t v32 = *(void *)((char *)a2 + v31);
  *((void *)v32 + 1) = v34;
  uint64_t v66 = (uint64_t)a1 + v31 + 16;
  uint64_t v35 = (uint64_t)a2 + v31 + 16;
  long long v36 = *(_OWORD *)((char *)a2 + v31 + 40);
  *(_OWORD *)(v32 + 40) = v36;
  uint64_t v37 = v36;
  uint64_t v38 = **(void (***)(uint64_t, uint64_t, uint64_t))(v36 - 8);
  swift_retain();
  swift_retain();
  v38(v66, v35, v37);
  long long v39 = *((_OWORD *)v33 + 5);
  *((_OWORD *)v32 + 5) = v39;
  (**(void (***)(uint64_t, uint64_t))(v39 - 8))((uint64_t)(v32 + 56), (uint64_t)(v33 + 56));
  long long v40 = *((_OWORD *)v33 + 7);
  *((_OWORD *)v32 + 6) = *((_OWORD *)v33 + 6);
  *((_OWORD *)v32 + 7) = v40;
  v32[128] = v33[128];
  *((void *)v32 + 17) = *((void *)v33 + 17);
  uint64_t v41 = v19[9];
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = (char *)a2 + v41;
  v42[16] = v43[16];
  *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
  uint64_t v44 = v19[10];
  uint64_t v45 = (char *)a1 + v44;
  long long v46 = (char *)a2 + v44;
  *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
  v45[16] = v46[16];
  *((unsigned char *)a1 + v19[11]) = *((unsigned char *)a2 + v19[11]);
  uint64_t v47 = v19[12];
  uint64_t v48 = (char *)a1 + v47;
  int v49 = (char *)a2 + v47;
  *(void *)uint64_t v48 = *(void *)v49;
  *(_OWORD *)(v48 + 8) = *(_OWORD *)(v49 + 8);
  uint64_t v50 = *(int *)(a3 + 20);
  uint64_t v51 = (char *)a1 + v50;
  uint64_t v52 = (char *)a2 + v50;
  uint64_t v53 = *(void *)((char *)a2 + v50);
  uint64_t v54 = *((void *)v52 + 1);
  *(void *)uint64_t v51 = v53;
  *((void *)v51 + 1) = v54;
  uint64_t v55 = *((void *)v52 + 2);
  uint64_t v56 = *((void *)v52 + 3);
  uint64_t v57 = *((void *)v52 + 4);
  uint64_t v58 = *((void *)v52 + 5);
  LOBYTE(v35) = v52[48];
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2499ACFC4(v55, v56, v57, v58, v35);
  *((void *)v51 + 2) = v55;
  *((void *)v51 + 3) = v56;
  *((void *)v51 + 4) = v57;
  *((void *)v51 + 5) = v58;
  v51[48] = v35;
  int v59 = v52[72];
  if (v59 == 255)
  {
    *(_OWORD *)(v51 + 56) = *(_OWORD *)(v52 + 56);
    v51[72] = v52[72];
  }
  else
  {
    uint64_t v60 = *((void *)v52 + 7);
    uint64_t v61 = *((void *)v52 + 8);
    sub_2499AD02C(v60, v61, v52[72]);
    *((void *)v51 + 7) = v60;
    *((void *)v51 + 8) = v61;
    v51[72] = v59;
  }
  v51[73] = v52[73];
  uint64_t v62 = *((void *)v52 + 11);
  if (v62)
  {
    *((void *)v51 + 10) = *((void *)v52 + 10);
    *((void *)v51 + 11) = v62;
    *((void *)v51 + 12) = *((void *)v52 + 12);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    *((_OWORD *)v51 + 5) = *((_OWORD *)v52 + 5);
    *((void *)v51 + 12) = *((void *)v52 + 12);
  }
  uint64_t v63 = *((void *)v52 + 14);
  *((void *)v51 + 13) = *((void *)v52 + 13);
  *((void *)v51 + 14) = v63;
  swift_retain();
  return a1;
}

void *sub_249A92228(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  uint64_t v6 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_249AEC9B8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  uint64_t v12 = v6[7];
  uint64_t v13 = (char *)a1 + v12;
  long long v14 = (char *)a2 + v12;
  long long v15 = *(_OWORD *)v14;
  long long v16 = *((_OWORD *)v14 + 1);
  unsigned char v13[32] = v14[32];
  *(_OWORD *)uint64_t v13 = v15;
  *((_OWORD *)v13 + 1) = v16;
  uint64_t v17 = v6[8];
  long long v18 = (void *)((char *)a1 + v17);
  long long v19 = (void *)((char *)a2 + v17);
  *long long v18 = *v19;
  v18[1] = v19[1];
  uint64_t v18[2] = v19[2];
  v18[3] = v19[3];
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  uint64_t v20 = (int *)type metadata accessor for BannerConfiguration(0);
  *(void *)((char *)a1 + v20[5]) = *(void *)((char *)a2 + v20[5]);
  *((unsigned char *)a1 + v20[6]) = *((unsigned char *)a2 + v20[6]);
  uint64_t v21 = v20[7];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  swift_retain();
  swift_release();
  long long v24 = *(_OWORD *)(v23 + 8);
  v22[24] = v23[24];
  *(_OWORD *)(v22 + 8) = v24;
  uint64_t v25 = type metadata accessor for NotificationSymbolConfiguration(0);
  v11(&v22[*(int *)(v25 + 24)], &v23[*(int *)(v25 + 24)], v10);
  uint64_t v26 = *(int *)(v25 + 28);
  uint64_t v27 = &v22[v26];
  uint64_t v28 = &v23[v26];
  *(void *)uint64_t v27 = *(void *)v28;
  *((void *)v27 + 1) = *((void *)v28 + 1);
  *((void *)v27 + 2) = *((void *)v28 + 2);
  *((void *)v27 + 3) = *((void *)v28 + 3);
  uint64_t v29 = v20[8];
  long long v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  *(void *)((char *)a1 + v29) = *(void *)((char *)a2 + v29);
  swift_retain();
  swift_release();
  *((void *)v30 + 1) = *((void *)v31 + 1);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v30 + 2, (uint64_t *)v31 + 2);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v30 + 7, (uint64_t *)v31 + 7);
  *((void *)v30 + 12) = *((void *)v31 + 12);
  *((void *)v30 + 13) = *((void *)v31 + 13);
  *((void *)v30 + 14) = *((void *)v31 + 14);
  *((void *)v30 + 15) = *((void *)v31 + 15);
  v30[128] = v31[128];
  *((void *)v30 + 17) = *((void *)v31 + 17);
  uint64_t v32 = v20[9];
  long long v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  long long v35 = *(_OWORD *)v34;
  v33[16] = v34[16];
  *(_OWORD *)long long v33 = v35;
  uint64_t v36 = v20[10];
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  long long v39 = *(_OWORD *)v38;
  v37[16] = v38[16];
  *(_OWORD *)uint64_t v37 = v39;
  *((unsigned char *)a1 + v20[11]) = *((unsigned char *)a2 + v20[11]);
  uint64_t v40 = v20[12];
  uint64_t v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  *(void *)((char *)a1 + v40) = *(void *)((char *)a2 + v40);
  swift_retain();
  swift_release();
  *((void *)v41 + 1) = *((void *)v42 + 1);
  *((void *)v41 + 2) = *((void *)v42 + 2);
  uint64_t v43 = *(int *)(a3 + 20);
  uint64_t v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  *(void *)uint64_t v44 = *(void *)((char *)a2 + v43);
  *((void *)v44 + 1) = *(void *)((char *)a2 + v43 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v46 = *((void *)v45 + 2);
  uint64_t v47 = *((void *)v45 + 3);
  uint64_t v48 = *((void *)v45 + 4);
  uint64_t v49 = *((void *)v45 + 5);
  LOBYTE(v42) = v45[48];
  sub_2499ACFC4(v46, v47, v48, v49, (char)v42);
  uint64_t v50 = *((void *)v44 + 2);
  uint64_t v51 = *((void *)v44 + 3);
  uint64_t v52 = *((void *)v44 + 4);
  uint64_t v53 = *((void *)v44 + 5);
  *((void *)v44 + 2) = v46;
  *((void *)v44 + 3) = v47;
  *((void *)v44 + 4) = v48;
  *((void *)v44 + 5) = v49;
  char v54 = v44[48];
  v44[48] = (char)v42;
  sub_249934D7C(v50, v51, v52, v53, v54);
  uint64_t v55 = (long long *)(v44 + 56);
  uint64_t v56 = (long long *)(v45 + 56);
  int v57 = v45[72];
  if (v44[72] == 255)
  {
    if (v57 == 255)
    {
      long long v66 = *v56;
      v44[72] = v45[72];
      *uint64_t v55 = v66;
    }
    else
    {
      uint64_t v63 = *((void *)v45 + 7);
      uint64_t v64 = *((void *)v45 + 8);
      sub_2499AD02C(v63, v64, v45[72]);
      *((void *)v44 + 7) = v63;
      *((void *)v44 + 8) = v64;
      v44[72] = v57;
    }
  }
  else if (v57 == 255)
  {
    sub_249A2879C((uint64_t)(v44 + 56));
    char v65 = v45[72];
    *uint64_t v55 = *v56;
    v44[72] = v65;
  }
  else
  {
    uint64_t v58 = *((void *)v45 + 7);
    uint64_t v59 = *((void *)v45 + 8);
    sub_2499AD02C(v58, v59, v45[72]);
    uint64_t v60 = *((void *)v44 + 7);
    uint64_t v61 = *((void *)v44 + 8);
    *((void *)v44 + 7) = v58;
    *((void *)v44 + 8) = v59;
    char v62 = v44[72];
    v44[72] = v57;
    sub_249934DE4(v60, v61, v62);
  }
  v44[73] = v45[73];
  uint64_t v67 = v44 + 80;
  long long v68 = v45 + 80;
  uint64_t v69 = *((void *)v45 + 11);
  if (*((void *)v44 + 11))
  {
    if (v69)
    {
      *((void *)v44 + 10) = *((void *)v45 + 10);
      *((void *)v44 + 11) = *((void *)v45 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v44 + 12) = *((void *)v45 + 12);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249A287D0((uint64_t)(v44 + 80));
      uint64_t v70 = *((void *)v45 + 12);
      *uint64_t v67 = *v68;
      *((void *)v44 + 12) = v70;
    }
  }
  else if (v69)
  {
    *((void *)v44 + 10) = *((void *)v45 + 10);
    *((void *)v44 + 11) = *((void *)v45 + 11);
    *((void *)v44 + 12) = *((void *)v45 + 12);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    long long v71 = *v68;
    *((void *)v44 + 12) = *((void *)v45 + 12);
    *uint64_t v67 = v71;
  }
  uint64_t v72 = *((void *)v45 + 14);
  *((void *)v44 + 13) = *((void *)v45 + 13);
  *((void *)v44 + 14) = v72;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_249A926BC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_249AEC9B8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = v6[7];
  uint64_t v13 = (char *)a1 + v12;
  long long v14 = (char *)a2 + v12;
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  unsigned char v13[32] = v14[32];
  uint64_t v16 = v6[8];
  uint64_t v17 = (_OWORD *)((char *)a1 + v16);
  long long v18 = (_OWORD *)((char *)a2 + v16);
  long long v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  uint64_t v20 = (int *)type metadata accessor for BannerConfiguration(0);
  *(void *)((char *)a1 + v20[5]) = *(void *)((char *)a2 + v20[5]);
  *((unsigned char *)a1 + v20[6]) = *((unsigned char *)a2 + v20[6]);
  uint64_t v21 = v20[7];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  *(void *)uint64_t v22 = *(void *)((char *)a2 + v21);
  *(_OWORD *)(v22 + 8) = *(_OWORD *)((char *)a2 + v21 + 8);
  v22[24] = *((unsigned char *)a2 + v21 + 24);
  uint64_t v24 = type metadata accessor for NotificationSymbolConfiguration(0);
  v11(&v22[*(int *)(v24 + 24)], &v23[*(int *)(v24 + 24)], v10);
  uint64_t v25 = *(int *)(v24 + 28);
  uint64_t v26 = &v22[v25];
  uint64_t v27 = &v23[v25];
  long long v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
  uint64_t v29 = v20[8];
  long long v30 = (_OWORD *)((char *)a1 + v29);
  uint64_t v31 = (_OWORD *)((char *)a2 + v29);
  long long v32 = v31[3];
  v30[2] = v31[2];
  v30[3] = v32;
  long long v33 = v31[1];
  *long long v30 = *v31;
  v30[1] = v33;
  long long v34 = v31[8];
  long long v35 = v31[6];
  v30[7] = v31[7];
  v30[8] = v34;
  long long v36 = v31[5];
  v30[4] = v31[4];
  v30[5] = v36;
  _OWORD v30[6] = v35;
  uint64_t v37 = v20[9];
  uint64_t v38 = (char *)a1 + v37;
  long long v39 = (char *)a2 + v37;
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  v38[16] = v39[16];
  uint64_t v40 = v20[10];
  uint64_t v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  v41[16] = v42[16];
  *((unsigned char *)a1 + v20[11]) = *((unsigned char *)a2 + v20[11]);
  uint64_t v43 = v20[12];
  uint64_t v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  *((void *)v44 + 2) = *((void *)v45 + 2);
  uint64_t v46 = *(int *)(a3 + 20);
  uint64_t v47 = (char *)a1 + v46;
  uint64_t v48 = (char *)a2 + v46;
  long long v49 = *((_OWORD *)v48 + 5);
  *((_OWORD *)v47 + 4) = *((_OWORD *)v48 + 4);
  *((_OWORD *)v47 + 5) = v49;
  *((_OWORD *)v47 + 6) = *((_OWORD *)v48 + 6);
  *((void *)v47 + 14) = *((void *)v48 + 14);
  long long v50 = *((_OWORD *)v48 + 1);
  *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
  *((_OWORD *)v47 + 1) = v50;
  long long v51 = *((_OWORD *)v48 + 3);
  *((_OWORD *)v47 + 2) = *((_OWORD *)v48 + 2);
  *((_OWORD *)v47 + 3) = v51;
  return a1;
}

void *sub_249A928F0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  uint64_t v6 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_249AEC9B8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  uint64_t v12 = v6[7];
  uint64_t v13 = (char *)a1 + v12;
  long long v14 = (char *)a2 + v12;
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  unsigned char v13[32] = v14[32];
  uint64_t v16 = v6[8];
  uint64_t v17 = (_OWORD *)((char *)a1 + v16);
  long long v18 = (_OWORD *)((char *)a2 + v16);
  long long v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  uint64_t v20 = (int *)type metadata accessor for BannerConfiguration(0);
  *(void *)((char *)a1 + v20[5]) = *(void *)((char *)a2 + v20[5]);
  *((unsigned char *)a1 + v20[6]) = *((unsigned char *)a2 + v20[6]);
  uint64_t v21 = v20[7];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  swift_release();
  *(_OWORD *)(v22 + 8) = *(_OWORD *)(v23 + 8);
  v22[24] = v23[24];
  uint64_t v24 = type metadata accessor for NotificationSymbolConfiguration(0);
  v11(&v22[*(int *)(v24 + 24)], &v23[*(int *)(v24 + 24)], v10);
  uint64_t v25 = *(int *)(v24 + 28);
  uint64_t v26 = &v22[v25];
  uint64_t v27 = &v23[v25];
  long long v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
  uint64_t v29 = v20[8];
  long long v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  *(void *)((char *)a1 + v29) = *(void *)((char *)a2 + v29);
  swift_release();
  *((void *)v30 + 1) = *((void *)v31 + 1);
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)(v30 + 16));
  long long v32 = *((_OWORD *)v31 + 2);
  *((_OWORD *)v30 + 1) = *((_OWORD *)v31 + 1);
  *((_OWORD *)v30 + 2) = v32;
  *((void *)v30 + 6) = *((void *)v31 + 6);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)(v30 + 56));
  *(_OWORD *)(v30 + 56) = *(_OWORD *)(v31 + 56);
  *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
  *((void *)v30 + 11) = *((void *)v31 + 11);
  *((_OWORD *)v30 + 6) = *((_OWORD *)v31 + 6);
  *((void *)v30 + 14) = *((void *)v31 + 14);
  *((void *)v30 + 15) = *((void *)v31 + 15);
  v30[128] = v31[128];
  *((void *)v30 + 17) = *((void *)v31 + 17);
  uint64_t v33 = v20[9];
  long long v34 = (char *)a1 + v33;
  long long v35 = (char *)a2 + v33;
  v34[16] = v35[16];
  *(_OWORD *)long long v34 = *(_OWORD *)v35;
  uint64_t v36 = v20[10];
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  v37[16] = v38[16];
  *((unsigned char *)a1 + v20[11]) = *((unsigned char *)a2 + v20[11]);
  uint64_t v39 = v20[12];
  uint64_t v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  *(void *)((char *)a1 + v39) = *(void *)((char *)a2 + v39);
  swift_release();
  *(_OWORD *)(v40 + 8) = *(_OWORD *)(v41 + 8);
  uint64_t v42 = *(int *)(a3 + 20);
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  uint64_t v45 = *(void *)((char *)a2 + v42 + 8);
  *(void *)uint64_t v43 = *(void *)((char *)a2 + v42);
  *((void *)v43 + 1) = v45;
  swift_bridgeObjectRelease();
  char v46 = v44[48];
  uint64_t v47 = *((void *)v43 + 2);
  uint64_t v48 = *((void *)v43 + 3);
  uint64_t v49 = *((void *)v43 + 4);
  uint64_t v50 = *((void *)v43 + 5);
  long long v51 = *((_OWORD *)v44 + 2);
  *((_OWORD *)v43 + 1) = *((_OWORD *)v44 + 1);
  *((_OWORD *)v43 + 2) = v51;
  char v52 = v43[48];
  v43[48] = v46;
  sub_249934D7C(v47, v48, v49, v50, v52);
  uint64_t v53 = v44 + 56;
  int v54 = v43[72];
  if (v54 != 255)
  {
    int v55 = v44[72];
    if (v55 != 255)
    {
      uint64_t v56 = *((void *)v43 + 7);
      uint64_t v57 = *((void *)v43 + 8);
      *(_OWORD *)(v43 + 56) = *v53;
      v43[72] = v55;
      sub_249934DE4(v56, v57, v54);
      goto LABEL_6;
    }
    sub_249A2879C((uint64_t)(v43 + 56));
  }
  *(_OWORD *)(v43 + 56) = *v53;
  v43[72] = v44[72];
LABEL_6:
  v43[73] = v44[73];
  if (!*((void *)v43 + 11))
  {
LABEL_10:
    *((_OWORD *)v43 + 5) = *((_OWORD *)v44 + 5);
    *((void *)v43 + 12) = *((void *)v44 + 12);
    goto LABEL_11;
  }
  uint64_t v58 = *((void *)v44 + 11);
  if (!v58)
  {
    sub_249A287D0((uint64_t)(v43 + 80));
    goto LABEL_10;
  }
  *((void *)v43 + 10) = *((void *)v44 + 10);
  *((void *)v43 + 11) = v58;
  swift_bridgeObjectRelease();
  *((void *)v43 + 12) = *((void *)v44 + 12);
  swift_release();
LABEL_11:
  *(_OWORD *)(v43 + 104) = *(_OWORD *)(v44 + 104);
  swift_release();
  return a1;
}

uint64_t sub_249A92C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249A92C70);
}

uint64_t sub_249A92C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_23Tm(a1, a2, a3, type metadata accessor for BannerConfiguration);
}

uint64_t sub_249A92C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249A92C9C);
}

uint64_t sub_249A92C9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_24Tm(a1, a2, a3, a4, type metadata accessor for BannerConfiguration);
}

uint64_t type metadata accessor for BannerView(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696E5230);
}

uint64_t sub_249A92CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249A92CEC(a1, a2, a3, type metadata accessor for BannerConfiguration);
}

uint64_t sub_249A92CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_249A92D84(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v54 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v54 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    long long v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    uint64_t v60 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v60;
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(void *)(a1 + 72) = a2[9];
    uint64_t v7 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    uint64_t v8 = v7[7];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    *(void *)uint64_t v9 = *(uint64_t *)((char *)a2 + v8);
    v9[24] = *((unsigned char *)a2 + v8 + 24);
    *(_OWORD *)(v9 + 8) = *(_OWORD *)((char *)a2 + v8 + 8);
    uint64_t v11 = type metadata accessor for NotificationSymbolConfiguration(0);
    uint64_t v12 = *(int *)(v11 + 24);
    uint64_t v58 = v10 + v12;
    uint64_t v59 = &v9[v12];
    uint64_t v13 = sub_249AEC9B8();
    long long v14 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    v14(v59, v58, v13);
    uint64_t v15 = *(int *)(v11 + 28);
    uint64_t v16 = &v9[v15];
    uint64_t v17 = (_OWORD *)(v10 + v15);
    long long v18 = v17[1];
    *(_OWORD *)uint64_t v16 = *v17;
    *((_OWORD *)v16 + 1) = v18;
    uint64_t v19 = v7[8];
    uint64_t v20 = (char *)v4 + v19;
    uint64_t v21 = (uint64_t)a2 + v19;
    uint64_t v22 = *(uint64_t *)((char *)a2 + v19 + 8);
    *(void *)uint64_t v20 = *(uint64_t *)((char *)a2 + v19);
    *((void *)v20 + 1) = v22;
    uint64_t v61 = (uint64_t)v4 + v19 + 16;
    uint64_t v23 = (uint64_t)a2 + v19 + 16;
    long long v24 = *(_OWORD *)((char *)a2 + v19 + 40);
    *(_OWORD *)(v20 + 40) = v24;
    uint64_t v25 = v24;
    uint64_t v26 = **(void (***)(uint64_t, uint64_t, uint64_t))(v24 - 8);
    swift_retain();
    swift_retain();
    v26(v61, v23, v25);
    long long v27 = *(_OWORD *)(v21 + 80);
    *((_OWORD *)v20 + 5) = v27;
    (**(void (***)(uint64_t, uint64_t))(v27 - 8))((uint64_t)(v20 + 56), v21 + 56);
    long long v28 = *(_OWORD *)(v21 + 112);
    *((_OWORD *)v20 + 6) = *(_OWORD *)(v21 + 96);
    *((_OWORD *)v20 + 7) = v28;
    v20[128] = *(unsigned char *)(v21 + 128);
    *((void *)v20 + 17) = *(void *)(v21 + 136);
    uint64_t v29 = v7[9];
    long long v30 = (char *)v4 + v29;
    uint64_t v31 = (uint64_t)a2 + v29;
    v30[16] = *(unsigned char *)(v31 + 16);
    *(_OWORD *)long long v30 = *(_OWORD *)v31;
    uint64_t v32 = v7[10];
    uint64_t v33 = (char *)v4 + v32;
    uint64_t v34 = (uint64_t)a2 + v32;
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    v33[16] = *(unsigned char *)(v34 + 16);
    *((unsigned char *)v4 + v7[11]) = *((unsigned char *)a2 + v7[11]);
    uint64_t v35 = v7[12];
    uint64_t v36 = (char *)v4 + v35;
    uint64_t v37 = (uint64_t)a2 + v35;
    uint64_t v38 = sub_249AECBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    uint64_t v39 = v7[13];
    uint64_t v40 = (char *)v4 + v39;
    uint64_t v41 = (uint64_t)a2 + v39;
    *(void *)uint64_t v40 = *(void *)v41;
    *(_OWORD *)(v40 + 8) = *(_OWORD *)(v41 + 8);
    uint64_t v42 = *(int *)(a3 + 20);
    uint64_t v43 = (char *)v4 + v42;
    uint64_t v44 = (uint64_t)a2 + v42;
    uint64_t v45 = *(uint64_t *)((char *)a2 + v42);
    uint64_t v46 = *(void *)(v44 + 8);
    *(void *)uint64_t v43 = v45;
    *((void *)v43 + 1) = v46;
    uint64_t v47 = *(void *)(v44 + 16);
    uint64_t v48 = *(void *)(v44 + 24);
    uint64_t v49 = *(void *)(v44 + 32);
    uint64_t v50 = *(void *)(v44 + 40);
    LOBYTE(v25) = *(unsigned char *)(v44 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2499ACFC4(v47, v48, v49, v50, v25);
    *((void *)v43 + 2) = v47;
    *((void *)v43 + 3) = v48;
    *((void *)v43 + 4) = v49;
    *((void *)v43 + 5) = v50;
    v43[48] = v25;
    int v51 = *(unsigned __int8 *)(v44 + 72);
    if (v51 == 255)
    {
      *(_OWORD *)(v43 + 56) = *(_OWORD *)(v44 + 56);
      v43[72] = *(unsigned char *)(v44 + 72);
    }
    else
    {
      uint64_t v52 = *(void *)(v44 + 56);
      uint64_t v53 = *(void *)(v44 + 64);
      sub_2499AD02C(v52, v53, *(unsigned char *)(v44 + 72));
      *((void *)v43 + 7) = v52;
      *((void *)v43 + 8) = v53;
      v43[72] = v51;
    }
    v43[73] = *(unsigned char *)(v44 + 73);
    uint64_t v55 = *(void *)(v44 + 88);
    if (v55)
    {
      *((void *)v43 + 10) = *(void *)(v44 + 80);
      *((void *)v43 + 11) = v55;
      *((void *)v43 + 12) = *(void *)(v44 + 96);
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      *((_OWORD *)v43 + 5) = *(_OWORD *)(v44 + 80);
      *((void *)v43 + 12) = *(void *)(v44 + 96);
    }
    uint64_t v56 = *(void *)(v44 + 112);
    *((void *)v43 + 13) = *(void *)(v44 + 104);
    *((void *)v43 + 14) = v56;
  }
  swift_retain();
  return v4;
}

uint64_t sub_249A93180(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
  uint64_t v5 = a1 + v4[7];
  swift_release();
  uint64_t v6 = v5 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 24);
  uint64_t v7 = sub_249AEC9B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + v4[8];
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm(v8 + 16);
  __swift_destroy_boxed_opaque_existential_2Tm(v8 + 56);
  uint64_t v9 = a1 + v4[12];
  uint64_t v10 = sub_249AECBE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();
  uint64_t v11 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  sub_249934D7C(*(void *)(v11 + 16), *(void *)(v11 + 24), *(void *)(v11 + 32), *(void *)(v11 + 40), *(unsigned char *)(v11 + 48));
  int v12 = *(unsigned __int8 *)(v11 + 72);
  if (v12 != 255) {
    sub_249934DE4(*(void *)(v11 + 56), *(void *)(v11 + 64), v12);
  }
  if (*(void *)(v11 + 88))
  {
    swift_bridgeObjectRelease();
    swift_release();
  }

  return swift_release();
}