uint64_t sub_25187C978(uint64_t *a1, __int16 a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  void *v71;
  void *v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  void *v81;
  char v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  void (*v103)(char *, uint64_t);
  char *v104;
  void (*v106)(char *, uint64_t);
  char *v107;
  void (*v108)(char *, uint64_t);
  char v109;
  char v110;
  uint64_t v111;
  void (*v112)(char *, uint64_t);
  uint64_t v113;
  char v114;
  void (*v115)(char *, uint64_t);
  uint64_t v116;
  uint64_t (*v117)(char *, uint64_t);
  char *v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  unint64_t v135;
  char *v136;
  void *v137;
  void *v138;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  void *v147;
  char v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(char *, uint64_t);
  void (*v161)(char *, uint64_t);
  uint64_t v162;
  char v163;
  void (*v164)(char *, uint64_t);
  uint64_t v165;
  char v166;
  void (*v167)(char *, uint64_t);
  uint64_t v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  char *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t (*v195)(char *, uint64_t, uint64_t);
  char *v196;
  uint64_t v197;
  void *v198;
  long long v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  char *v205;
  long long v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  char *v212;
  uint64_t v213;

  v198 = a5;
  v192 = a4;
  v197 = a3;
  v191 = sub_25192C1E0();
  v193 = *(void *)(v191 - 8);
  MEMORY[0x270FA5388](v191);
  v190 = (char *)&v171 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E80);
  MEMORY[0x270FA5388](v8 - 8);
  v183 = (uint64_t)&v171 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = sub_25192C0B0();
  v188 = *(void *)(v213 - 8);
  v10 = MEMORY[0x270FA5388](v213);
  v196 = (char *)&v171 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x270FA5388](v10);
  v195 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v171 - v13);
  v14 = MEMORY[0x270FA5388](v12);
  v179 = (char *)&v171 - v15;
  v16 = MEMORY[0x270FA5388](v14);
  v180 = (uint64_t)&v171 - v17;
  v18 = MEMORY[0x270FA5388](v16);
  v175 = (char *)&v171 - v19;
  v20 = MEMORY[0x270FA5388](v18);
  v176 = (char *)&v171 - v21;
  v22 = MEMORY[0x270FA5388](v20);
  v184 = (char *)&v171 - v23;
  MEMORY[0x270FA5388](v22);
  v187 = (char *)&v171 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B54468);
  v26 = MEMORY[0x270FA5388](v25 - 8);
  v177 = (char *)&v171 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x270FA5388](v26);
  v182 = (uint64_t)&v171 - v29;
  MEMORY[0x270FA5388](v28);
  v31 = (char *)&v171 - v30;
  v186 = sub_25192C780();
  v185 = *(void *)(v186 - 8);
  v32 = MEMORY[0x270FA5388](v186);
  v189 = (char *)&v171 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x270FA5388](v32);
  v194 = (char *)&v171 - v35;
  v36 = MEMORY[0x270FA5388](v34);
  v38 = (char *)&v171 - v37;
  v39 = MEMORY[0x270FA5388](v36);
  v178 = (uint64_t)&v171 - v40;
  v41 = MEMORY[0x270FA5388](v39);
  v174 = (uint64_t)&v171 - v42;
  MEMORY[0x270FA5388](v41);
  v44 = (char *)&v171 - v43;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E88);
  v46 = MEMORY[0x270FA5388](v45 - 8);
  v48 = (char *)&v171 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = MEMORY[0x270FA5388](v46);
  v51 = (char *)&v171 - v50;
  MEMORY[0x270FA5388](v49);
  v53 = (char *)&v171 - v52;
  v54 = sub_25192BD10();
  v55 = MEMORY[0x270FA5388](v54);
  v56 = MEMORY[0x270FA5388](v55);
  result = MEMORY[0x270FA5388](v56);
  v62 = (char *)&v171 - v61;
  v181 = *a1;
  v63 = *((unsigned __int8 *)a1 + 32) >> 1;
  if (v63 != 49)
  {
    if (v63 != 44 || (v181 & 1) == 0) {
      return result;
    }
    v172 = v60;
    v181 = v59;
    v171 = v58;
    v173 = result;
    LOWORD(v206) = a2;
    LOWORD(v199) = 24073;
    if ((_s14HomeAppIntents10DeviceTypeO2eeoiySbAC_ACtFZ_0((unsigned __int16 *)&v206, (unsigned __int16 *)&v199) & 1) != 0
      || (LOWORD(v206) = a2,
          LOWORD(v199) = 24087,
          (_s14HomeAppIntents10DeviceTypeO2eeoiySbAC_ACtFZ_0((unsigned __int16 *)&v206, (unsigned __int16 *)&v199) & 1) != 0))
    {
      sub_25192C220();
      v64 = v181;
      v65 = v173;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v181 + 48))(v53, 1, v173) == 1) {
        return sub_2517E16E0((uint64_t)v53, &qword_269B53E88);
      }
      (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v62, v53, v65);
      v85 = sub_25192C170();
      if (*(void *)(v85 + 16))
      {
        v86 = sub_251823860((uint64_t)v62);
        v87 = v185;
        if (v88)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v185 + 16))(v31, *(void *)(v85 + 56) + *(void *)(v185 + 72) * v86, v186);
          v89 = 0;
        }
        else
        {
          v89 = 1;
        }
      }
      else
      {
        v89 = 1;
        v87 = v185;
      }
      v111 = v186;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56))(v31, v89, 1, v186);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v31, 1, v111) == 1)
      {
        (*(void (**)(char *, uint64_t))(v181 + 8))(v62, v173);
        return sub_2517E16E0((uint64_t)v31, &qword_269B54468);
      }
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v44, v31, v111);
      sub_25192C240();
      (*(void (**)(char *, void, uint64_t))(v188 + 104))(v184, *MEMORY[0x263F48238], v213);
      sub_251878988(&qword_269B55C68, MEMORY[0x263F482B8]);
      sub_25192D360();
      sub_25192D360();
      if (v206 == v199)
      {
        swift_bridgeObjectRelease_n();
        v112 = *(void (**)(char *, uint64_t))(v188 + 8);
        v113 = v213;
        v112(v184, v213);
        v112(v187, v113);
      }
      else
      {
        v114 = sub_25192D810();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v115 = *(void (**)(char *, uint64_t))(v188 + 8);
        v116 = v213;
        v115(v184, v213);
        v115(v187, v116);
        if ((v114 & 1) == 0)
        {
LABEL_58:
          (*(void (**)(char *, uint64_t))(v87 + 8))(v44, v186);
          v117 = *(uint64_t (**)(char *, uint64_t))(v181 + 8);
          v118 = v62;
          return v117(v118, v173);
        }
      }
      v206 = 1uLL;
      v207 = 0;
      v208 = 0;
      LOBYTE(v209) = 88;
      sub_25187C548((uint64_t)&v206, (uint64_t)v44, v198, v192);
      goto LABEL_58;
    }
    LOWORD(v206) = a2;
    LOWORD(v199) = 24089;
    if (_s14HomeAppIntents10DeviceTypeO2eeoiySbAC_ACtFZ_0((unsigned __int16 *)&v206, (unsigned __int16 *)&v199))
    {
      v196 = v48;
      sub_25192C430();
      v90 = v181;
      v91 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v181 + 48);
      v92 = v173;
      v93 = v91(v51, 1, v173);
      v94 = v185;
      if (v93 == 1)
      {
        sub_2517E16E0((uint64_t)v51, &qword_269B53E88);
        goto LABEL_86;
      }
      v195 = v91;
      v119 = v172;
      (*(void (**)(uint64_t, char *, uint64_t))(v90 + 32))(v172, v51, v92);
      v120 = sub_25192C190();
      if (*(void *)(v120 + 16) && (v121 = sub_251823860(v119), (v122 & 1) != 0))
      {
        v123 = v121;
        v124 = *(void *)(v120 + 56);
        v125 = sub_25192C970();
        v126 = *(void *)(v125 - 8);
        v127 = v183;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v126 + 16))(v183, v124 + *(void *)(v126 + 72) * v123, v125);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v126 + 56))(v127, 0, 1, v125);
        v94 = v185;
      }
      else
      {
        v125 = sub_25192C970();
        v127 = v183;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v183, 1, 1, v125);
      }
      swift_bridgeObjectRelease();
      sub_25192C970();
      v129 = *(void *)(v125 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))(v127, 1, v125) == 1)
      {
        sub_2517E16E0(v127, &qword_269B53E80);
        v130 = v182;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v182, 1, 1, v186);
      }
      else
      {
        v130 = v182;
        sub_25192C8E0();
        (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v127, v125);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(v130, 1, v186) != 1)
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 32))(v174, v130, v186);
          sub_25192C240();
          (*(void (**)(char *, void, uint64_t))(v188 + 104))(v175, *MEMORY[0x263F48148], v213);
          sub_251878988(&qword_269B55C68, MEMORY[0x263F482B8]);
          sub_25192D360();
          sub_25192D360();
          if (v206 == v199)
          {
            swift_bridgeObjectRelease_n();
            v161 = *(void (**)(char *, uint64_t))(v188 + 8);
            v162 = v213;
            v161(v175, v213);
            v161(v176, v162);
          }
          else
          {
            v166 = sub_25192D810();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v167 = *(void (**)(char *, uint64_t))(v188 + 8);
            v168 = v213;
            v167(v175, v213);
            v167(v176, v168);
            if ((v166 & 1) == 0)
            {
              v94 = v185;
              (*(void (**)(uint64_t, uint64_t))(v185 + 8))(v174, v186);
              v92 = v173;
              (*(void (**)(uint64_t, uint64_t))(v181 + 8))(v172, v173);
              goto LABEL_85;
            }
          }
          v206 = 1uLL;
          v207 = 0;
          v208 = 0;
          LOBYTE(v209) = 88;
          v169 = v174;
          sub_25187C548((uint64_t)&v206, v174, v198, v192);
          (*(void (**)(uint64_t, uint64_t))(v185 + 8))(v169, v186);
          v117 = *(uint64_t (**)(char *, uint64_t))(v181 + 8);
          v170 = &v202;
LABEL_106:
          v118 = (char *)*(v170 - 32);
          return v117(v118, v173);
        }
      }
      v92 = v173;
      (*(void (**)(uint64_t, uint64_t))(v181 + 8))(v172, v173);
      sub_2517E16E0(v130, &qword_269B54468);
LABEL_85:
      v91 = v195;
LABEL_86:
      v151 = (uint64_t)v196;
      sub_25192C220();
      if (v91((char *)v151, 1, v92) == 1) {
        return sub_2517E16E0(v151, &qword_269B53E88);
      }
      v152 = v171;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v181 + 32))(v171, v151, v92);
      v153 = sub_25192C170();
      if (*(void *)(v153 + 16))
      {
        v154 = sub_251823860(v152);
        v155 = v213;
        if (v156)
        {
          v157 = (uint64_t)v177;
          (*(void (**)(char *, unint64_t, uint64_t))(v94 + 16))(v177, *(void *)(v153 + 56) + *(void *)(v94 + 72) * v154, v186);
          v158 = 0;
          goto LABEL_94;
        }
        v158 = 1;
      }
      else
      {
        v158 = 1;
        v155 = v213;
      }
      v157 = (uint64_t)v177;
LABEL_94:
      v159 = v186;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v157, v158, 1, v186);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(v157, 1, v159) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v181 + 8))(v171, v173);
        return sub_2517E16E0(v157, &qword_269B54468);
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 32))(v178, v157, v159);
      sub_25192C240();
      (*(void (**)(char *, void, uint64_t))(v188 + 104))(v179, *MEMORY[0x263F48148], v155);
      sub_251878988(&qword_269B55C68, MEMORY[0x263F482B8]);
      sub_25192D360();
      sub_25192D360();
      if (v206 == v199)
      {
        swift_bridgeObjectRelease_n();
        v160 = *(void (**)(char *, uint64_t))(v188 + 8);
        v160(v179, v155);
        v160((char *)v180, v155);
      }
      else
      {
        v163 = sub_25192D810();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v164 = *(void (**)(char *, uint64_t))(v188 + 8);
        v164(v179, v155);
        v164((char *)v180, v155);
        if ((v163 & 1) == 0)
        {
          (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v178, v186);
          goto LABEL_105;
        }
      }
      v206 = 1uLL;
      v207 = 0;
      v208 = 0;
      LOBYTE(v209) = 88;
      v165 = v178;
      sub_25187C548((uint64_t)&v206, v178, v198, v192);
      (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v165, v186);
LABEL_105:
      v117 = *(uint64_t (**)(char *, uint64_t))(v181 + 8);
      v170 = &v201;
      goto LABEL_106;
    }
    LOWORD(v206) = a2;
    LOWORD(v199) = 9;
    if ((_s14HomeAppIntents10DeviceTypeO2eeoiySbAC_ACtFZ_0((unsigned __int16 *)&v206, (unsigned __int16 *)&v199) & 1) == 0)
    {
      LOWORD(v206) = a2;
      LOWORD(v199) = 23;
      if ((_s14HomeAppIntents10DeviceTypeO2eeoiySbAC_ACtFZ_0((unsigned __int16 *)&v206, (unsigned __int16 *)&v199) & 1) == 0)
      {
        LOWORD(v206) = a2;
        LOWORD(v199) = 25;
        result = _s14HomeAppIntents10DeviceTypeO2eeoiySbAC_ACtFZ_0((unsigned __int16 *)&v206, (unsigned __int16 *)&v199);
        if ((result & 1) == 0) {
          return result;
        }
      }
    }
    v95 = sub_25192C510();
    v96 = *(void *)(v95 + 16);
    if (!v96)
    {
      swift_bridgeObjectRelease();
      v100 = v186;
      v128 = v185;
      goto LABEL_68;
    }
    v97 = *(char **)(v185 + 16);
    v98 = (*(unsigned __int8 *)(v185 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v185 + 80);
    v178 = v95;
    v99 = v95 + v98;
    LODWORD(v183) = *MEMORY[0x263F48230];
    v182 = v188 + 104;
    v188 += 8;
    v181 = v185 + 8;
    v180 = *(void *)(v185 + 72);
    v100 = v186;
    v101 = v213;
    v102 = v196;
    v187 = (char *)(v185 + 16);
    v184 = v97;
    ((void (*)(char *, unint64_t, uint64_t))v97)(v38, v95 + v98, v186);
    while (1)
    {
      v104 = (char *)v195;
      sub_25192C240();
      (*(void (**)(char *, void, uint64_t))v182)(v102, v183, v101);
      sub_251878988(&qword_269B55C68, MEMORY[0x263F482B8]);
      sub_25192D360();
      sub_25192D360();
      if ((void)v206 == (void)v199 && *((void *)&v206 + 1) == *((void *)&v199 + 1))
      {
        swift_bridgeObjectRelease_n();
        v108 = *(void (**)(char *, uint64_t))v188;
        (*(void (**)(char *, uint64_t))v188)(v102, v101);
        v108(v104, v101);
        v107 = v194;
        ((void (*)(char *, char *, uint64_t))v184)(v194, v38, v100);
      }
      else
      {
        LODWORD(v179) = sub_25192D810();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v106 = *(void (**)(char *, uint64_t))v188;
        (*(void (**)(char *, uint64_t))v188)(v102, v101);
        v106(v104, v101);
        v107 = v194;
        ((void (*)(char *, char *, uint64_t))v184)(v194, v38, v100);
        if ((v179 & 1) == 0)
        {
          v103 = *(void (**)(char *, uint64_t))v181;
LABEL_38:
          v100 = v186;
          v101 = v213;
          v102 = v196;
          v103(v107, v186);
          v103(v38, v100);
          goto LABEL_39;
        }
      }
      v109 = sub_25192C730();
      v103 = *(void (**)(char *, uint64_t))v181;
      if (v109 == 2) {
        goto LABEL_38;
      }
      v110 = v109;
      v100 = v186;
      v103(v107, v186);
      v103(v38, v100);
      v101 = v213;
      v102 = v196;
      if (v110) {
        return swift_bridgeObjectRelease();
      }
LABEL_39:
      v99 += v180;
      if (!--v96)
      {
        swift_bridgeObjectRelease();
        v128 = v185;
LABEL_68:
        v131 = sub_25192C510();
        v132 = *(void *)(v131 + 16);
        if (v132)
        {
          v134 = *(char **)(v128 + 16);
          v133 = v128 + 16;
          v184 = v134;
          v135 = (*(unsigned __int8 *)(v133 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 64);
          v180 = v131;
          v136 = (char *)(v131 + v135);
          v183 = v193 + 16;
          v182 = *(void *)(v133 + 56);
          v185 = v133;
          do
          {
            v141 = (uint64_t)v189;
            ((void (*)(char *, char *, uint64_t))v184)(v189, v136, v100);
            v142 = v190;
            (*(void (**)(char *, uint64_t, uint64_t))v183)(v190, v192, v191);
            DeviceEntity.init(staticService:snapshot:)(v141, v142, (uint64_t *)&v199);
            v213 = v199;
            if ((void)v199)
            {
              v143 = v200;
              *(void *)&v206 = v213;
              *((void *)&v206 + 1) = *((void *)&v199 + 1);
              v207 = v200;
              v208 = v201;
              v209 = v202;
              v210 = v203;
              v211 = v204;
              v212 = v205;
              v144 = *v198;
              v145 = *(void *)(*v198 + 16);
              v194 = v205;
              v195 = (uint64_t (*)(char *, uint64_t, uint64_t))v204;
              v196 = v203;
              v197 = v202;
              v193 = *((void *)&v199 + 1);
              if (v145)
              {
                sub_25192BA80();
                sub_25192BA80();
                v181 = (uint64_t)v143;
                sub_25192BA80();
                sub_25192BA80();
                sub_25192BA80();
                sub_25192BA80();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v146 = sub_2518236E4(&v206);
                v147 = (void *)MEMORY[0x263F8EE78];
                if (v148)
                {
                  v147 = *(void **)(*(void *)(v144 + 56) + 8 * v146);
                  swift_bridgeObjectRetain();
                }
                sub_25187F5AC(v213);
              }
              else
              {
                v147 = (void *)MEMORY[0x263F8EE78];
              }
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                v147 = sub_2518469A0(0, v147[2] + 1, 1, v147);
              }
              v150 = v147[2];
              v149 = v147[3];
              v188 = v132;
              v187 = v136;
              if (v150 >= v149 >> 1) {
                v147 = sub_2518469A0((void *)(v149 > 1), v150 + 1, 1, v147);
              }
              v147[2] = v150 + 1;
              v137 = &v147[5 * v150];
              v137[4] = 1;
              v137[5] = 0;
              v137[6] = 0;
              v137[7] = 0;
              *((unsigned char *)v137 + 64) = 88;
              sub_25192BA80();
              sub_25192BA80();
              sub_25192BA80();
              sub_25192BA80();
              sub_25192BA80();
              sub_25192BA80();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v138 = v198;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(void *)&v199 = *v138;
              *v138 = 0x8000000000000000;
              sub_251828FAC((uint64_t)v147, &v206, isUniquelyReferenced_nonNull_native);
              *v138 = v199;
              swift_bridgeObjectRelease();
              v140 = v213;
              sub_25187F5AC(v213);
              sub_25187F5AC(v140);
              v100 = v186;
              v132 = v188;
              v136 = v187;
            }
            v136 += v182;
            --v132;
          }
          while (v132);
        }
        return swift_bridgeObjectRelease();
      }
      ((void (*)(char *, unint64_t, uint64_t))v184)(v38, v99, v100);
    }
  }
  LOWORD(v206) = a2;
  LOWORD(v199) = 25;
  result = _s14HomeAppIntents10DeviceTypeO2eeoiySbAC_ACtFZ_0((unsigned __int16 *)&v206, (unsigned __int16 *)&v199);
  if (result)
  {
    v66 = sub_25192C510();
    v67 = *(void *)(v66 + 16);
    if (v67)
    {
      v184 = *(char **)(v185 + 16);
      v68 = (*(unsigned __int8 *)(v185 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v185 + 80);
      v179 = (char *)v66;
      v69 = (char *)(v66 + v68);
      v183 = *(void *)(v185 + 72);
      v182 = v193 + 16;
      v70 = v186;
      v185 += 16;
      do
      {
        v75 = (uint64_t)v189;
        ((void (*)(char *, char *, uint64_t))v184)(v189, v69, v70);
        v76 = v190;
        (*(void (**)(char *, uint64_t, uint64_t))v182)(v190, v192, v191);
        DeviceEntity.init(staticService:snapshot:)(v75, v76, (uint64_t *)&v199);
        v213 = v199;
        if ((void)v199)
        {
          v77 = v200;
          *(void *)&v206 = v213;
          *((void *)&v206 + 1) = *((void *)&v199 + 1);
          v207 = v200;
          v208 = v201;
          v209 = v202;
          v210 = v203;
          v211 = v204;
          v212 = v205;
          v78 = *v198;
          v79 = *(void *)(*v198 + 16);
          v194 = v205;
          v195 = (uint64_t (*)(char *, uint64_t, uint64_t))v204;
          v196 = v203;
          v197 = v202;
          v193 = *((void *)&v199 + 1);
          if (v79)
          {
            sub_25192BA80();
            sub_25192BA80();
            v180 = (uint64_t)v77;
            sub_25192BA80();
            sub_25192BA80();
            sub_25192BA80();
            sub_25192BA80();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v80 = sub_2518236E4(&v206);
            v81 = (void *)MEMORY[0x263F8EE78];
            if (v82)
            {
              v81 = *(void **)(*(void *)(v78 + 56) + 8 * v80);
              swift_bridgeObjectRetain();
            }
            sub_25187F5AC(v213);
          }
          else
          {
            v81 = (void *)MEMORY[0x263F8EE78];
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v81 = sub_2518469A0(0, v81[2] + 1, 1, v81);
          }
          v84 = v81[2];
          v83 = v81[3];
          v188 = v67;
          v187 = v69;
          if (v84 >= v83 >> 1) {
            v81 = sub_2518469A0((void *)(v83 > 1), v84 + 1, 1, v81);
          }
          v81[2] = v84 + 1;
          v71 = &v81[5 * v84];
          v71[4] = v181;
          v71[5] = 0;
          v71[6] = 0;
          v71[7] = 0;
          *((unsigned char *)v71 + 64) = 98;
          sub_25192BA80();
          sub_25192BA80();
          sub_25192BA80();
          sub_25192BA80();
          sub_25192BA80();
          sub_25192BA80();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v72 = v198;
          v73 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&v199 = *v72;
          *v72 = 0x8000000000000000;
          sub_251828FAC((uint64_t)v81, &v206, v73);
          *v72 = v199;
          swift_bridgeObjectRelease();
          v74 = v213;
          sub_25187F5AC(v213);
          sub_25187F5AC(v74);
          v70 = v186;
          v67 = v188;
          v69 = v187;
        }
        v69 += v183;
        --v67;
      }
      while (v67);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25187E77C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v55 = a1;
  uint64_t v56 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v57 = v8;
  uint64_t v58 = 0;
  uint64_t v59 = v11 & v9;
  uint64_t v60 = a2;
  uint64_t v61 = a3;
  swift_bridgeObjectRetain();
  sub_25192BA80();
  sub_25187F298((uint64_t)&v50);
  if (!(void)v50) {
    goto LABEL_27;
  }
  long long v62 = v50;
  long long v63 = v51;
  long long v64 = v52;
  long long v65 = v53;
  uint64_t v12 = v54;
  v13 = (void *)*a5;
  unint64_t v15 = sub_2518236E4(&v62);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v19 = v14;
  if (v13[3] >= v18)
  {
    if (a4)
    {
      v22 = (void *)*a5;
      if (v14) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_2518335F8();
      v22 = (void *)*a5;
      if (v19) {
        goto LABEL_12;
      }
    }
LABEL_14:
    v22[(v15 >> 6) + 8] |= 1 << v15;
    v24 = (long long *)(v22[6] + (v15 << 6));
    long long v25 = v62;
    long long v26 = v63;
    long long v27 = v65;
    v24[2] = v64;
    v24[3] = v27;
    long long *v24 = v25;
    v24[1] = v26;
    *(void *)(v22[7] + 8 * v15) = v12;
    uint64_t v28 = v22[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v22[2] = v30;
LABEL_16:
    sub_25187F298((uint64_t)&v50);
    while ((void)v50)
    {
      long long v62 = v50;
      long long v63 = v51;
      long long v64 = v52;
      long long v65 = v53;
      uint64_t v32 = v54;
      v33 = (void *)*a5;
      unint64_t v35 = sub_2518236E4(&v62);
      uint64_t v36 = v33[2];
      BOOL v37 = (v34 & 1) == 0;
      uint64_t v38 = v36 + v37;
      if (__OFADD__(v36, v37)) {
        goto LABEL_28;
      }
      char v39 = v34;
      if (v33[3] < v38)
      {
        sub_2518322A0(v38, 1);
        unint64_t v40 = sub_2518236E4(&v62);
        if ((v39 & 1) != (v41 & 1)) {
          goto LABEL_30;
        }
        unint64_t v35 = v40;
      }
      v42 = (void *)*a5;
      if (v39)
      {
        sub_2517E46D8((uint64_t)&v62);
        uint64_t v31 = v42[7];
        swift_bridgeObjectRelease();
        *(void *)(v31 + 8 * v35) = v32;
      }
      else
      {
        v42[(v35 >> 6) + 8] |= 1 << v35;
        v43 = (long long *)(v42[6] + (v35 << 6));
        long long v44 = v62;
        long long v45 = v63;
        long long v46 = v65;
        v43[2] = v64;
        v43[3] = v46;
        long long *v43 = v44;
        v43[1] = v45;
        *(void *)(v42[7] + 8 * v35) = v32;
        uint64_t v47 = v42[2];
        BOOL v29 = __OFADD__(v47, 1);
        uint64_t v48 = v47 + 1;
        if (v29) {
          goto LABEL_29;
        }
        v42[2] = v48;
      }
      sub_25187F298((uint64_t)&v50);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_2517F6D90();
    return swift_release();
  }
  sub_2518322A0(v18, a4 & 1);
  unint64_t v20 = sub_2518236E4(&v62);
  if ((v19 & 1) == (v21 & 1))
  {
    unint64_t v15 = v20;
    v22 = (void *)*a5;
    if ((v19 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:
    sub_2517E46D8((uint64_t)&v62);
    uint64_t v23 = v22[7];
    swift_bridgeObjectRelease();
    *(void *)(v23 + 8 * v15) = v12;
    goto LABEL_16;
  }
LABEL_30:
  uint64_t result = sub_25192D850();
  __break(1u);
  return result;
}

uint64_t sub_25187EA90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B54500);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55D08);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = *v1;
  uint64_t v13 = v1[1];
  uint64_t v15 = v1[2];
  int64_t v14 = v1[3];
  int64_t v16 = v14;
  unint64_t v17 = v1[4];
  BOOL v37 = v5;
  if (v17)
  {
    char v39 = v9;
    int64_t v40 = v14;
    uint64_t v38 = v15;
    uint64_t v18 = v13;
    uint64_t v19 = (v17 - 1) & v17;
    unint64_t v20 = __clz(__rbit64(v17)) | (v14 << 6);
LABEL_3:
    uint64_t v21 = *(void *)(v12 + 48);
    uint64_t v22 = sub_25192C780();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v11, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v20, v22);
    *(void *)&v11[*(int *)(v2 + 48)] = *(void *)(*(void *)(v12 + 56) + 8 * v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
    swift_bridgeObjectRetain();
    uint64_t v13 = v18;
    uint64_t v15 = v38;
    uint64_t v9 = v39;
    goto LABEL_25;
  }
  int64_t v23 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
LABEL_23:
    int64_t v16 = v10;
    goto LABEL_24;
  }
  int64_t v24 = (unint64_t)(v15 + 64) >> 6;
  if (v23 < v24)
  {
    unint64_t v25 = *(void *)(v13 + 8 * v23);
    if (v25)
    {
LABEL_7:
      uint64_t v38 = v15;
      char v39 = v9;
      uint64_t v18 = v13;
      uint64_t v19 = (v25 - 1) & v25;
      unint64_t v20 = __clz(__rbit64(v25)) + (v23 << 6);
      int64_t v40 = v23;
      goto LABEL_3;
    }
    int64_t v26 = v14 + 2;
    int64_t v16 = v14 + 1;
    if (v14 + 2 < v24)
    {
      unint64_t v25 = *(void *)(v13 + 8 * v26);
      if (v25)
      {
LABEL_10:
        int64_t v23 = v26;
        goto LABEL_7;
      }
      int64_t v16 = v14 + 2;
      if (v14 + 3 < v24)
      {
        unint64_t v25 = *(void *)(v13 + 8 * (v14 + 3));
        if (v25)
        {
          int64_t v23 = v14 + 3;
          goto LABEL_7;
        }
        int64_t v26 = v14 + 4;
        int64_t v16 = v14 + 3;
        if (v14 + 4 < v24)
        {
          unint64_t v25 = *(void *)(v13 + 8 * v26);
          if (v25) {
            goto LABEL_10;
          }
          int64_t v23 = v14 + 5;
          int64_t v16 = v14 + 4;
          if (v14 + 5 < v24)
          {
            unint64_t v25 = *(void *)(v13 + 8 * v23);
            if (v25) {
              goto LABEL_7;
            }
            int64_t v10 = v24 - 1;
            uint64_t v27 = v14 + 6;
            while (v24 != v27)
            {
              unint64_t v25 = *(void *)(v13 + 8 * v27++);
              if (v25)
              {
                int64_t v23 = v27 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  int64_t v40 = v16;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v11, 1, 1, v2);
  uint64_t v19 = 0;
LABEL_25:
  uint64_t *v1 = v12;
  v1[1] = v13;
  int64_t v28 = v40;
  v1[2] = v15;
  v1[3] = v28;
  v1[4] = v19;
  BOOL v29 = (void (*)(uint64_t))v1[5];
  sub_2517F7AB8((uint64_t)v11, (uint64_t)v9, &qword_269B55D08);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B54508);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v41, 1, 1, v30);
  }
  else
  {
    uint64_t v32 = (uint64_t)v9;
    uint64_t v33 = (uint64_t)v37;
    sub_2517F7AB8(v32, (uint64_t)v37, &qword_269B54500);
    uint64_t v34 = v41;
    v29(v33);
    sub_2517E16E0(v33, &qword_269B54500);
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B54508);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
  }
}

uint64_t sub_25187EE90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55C80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55D10);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  int64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v14 = *v1;
  uint64_t v15 = v1[1];
  uint64_t v17 = v1[2];
  int64_t v16 = v1[3];
  int64_t v18 = v16;
  unint64_t v19 = v1[4];
  BOOL v37 = v6;
  uint64_t v40 = v17;
  if (v19)
  {
    uint64_t v38 = a1;
    uint64_t v39 = v15;
    uint64_t v20 = (v19 - 1) & v19;
    unint64_t v21 = __clz(__rbit64(v19)) | (v16 << 6);
LABEL_3:
    uint64_t v22 = *(void *)(v14 + 48);
    uint64_t v23 = v14;
    uint64_t v24 = sub_25192CAF0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v13, v22 + *(void *)(*(void *)(v24 - 8) + 72) * v21, v24);
    uint64_t v25 = *(void *)(v23 + 56);
    uint64_t v26 = type metadata accessor for RequiredCharacteristicValue();
    sub_2518400F4(v25 + *(void *)(*(void *)(v26 - 8) + 72) * v21, (uint64_t)&v13[*(int *)(v3 + 48)]);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
    a1 = v38;
    uint64_t v15 = v39;
    goto LABEL_23;
  }
  int64_t v27 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v28 = (unint64_t)(v17 + 64) >> 6;
  if (v27 < v28)
  {
    unint64_t v29 = *(void *)(v15 + 8 * v27);
    if (v29)
    {
LABEL_7:
      uint64_t v38 = a1;
      uint64_t v39 = v15;
      uint64_t v20 = (v29 - 1) & v29;
      unint64_t v21 = __clz(__rbit64(v29)) + (v27 << 6);
      int64_t v18 = v27;
      goto LABEL_3;
    }
    int64_t v30 = v16 + 2;
    int64_t v18 = v16 + 1;
    if (v16 + 2 < v28)
    {
      unint64_t v29 = *(void *)(v15 + 8 * v30);
      if (v29)
      {
LABEL_10:
        int64_t v27 = v30;
        goto LABEL_7;
      }
      int64_t v18 = v16 + 2;
      if (v16 + 3 < v28)
      {
        unint64_t v29 = *(void *)(v15 + 8 * (v16 + 3));
        if (v29)
        {
          int64_t v27 = v16 + 3;
          goto LABEL_7;
        }
        int64_t v30 = v16 + 4;
        int64_t v18 = v16 + 3;
        if (v16 + 4 < v28)
        {
          unint64_t v29 = *(void *)(v15 + 8 * v30);
          if (v29) {
            goto LABEL_10;
          }
          int64_t v27 = v16 + 5;
          int64_t v18 = v16 + 4;
          if (v16 + 5 < v28)
          {
            unint64_t v29 = *(void *)(v15 + 8 * v27);
            if (v29) {
              goto LABEL_7;
            }
            int64_t v18 = v28 - 1;
            int64_t v31 = v16 + 6;
            while (v28 != v31)
            {
              unint64_t v29 = *(void *)(v15 + 8 * v31++);
              if (v29)
              {
                int64_t v27 = v31 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v23 = v14;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v13, 1, 1, v3);
  uint64_t v20 = 0;
LABEL_23:
  uint64_t *v1 = v23;
  v1[1] = v15;
  v1[2] = v40;
  v1[3] = v18;
  v1[4] = v20;
  uint64_t v32 = (void (*)(uint64_t))v1[5];
  sub_2517F7AB8((uint64_t)v13, (uint64_t)v10, &qword_269B55D10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B54A90);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(a1, 1, 1, v33);
  }
  else
  {
    uint64_t v34 = (uint64_t)v10;
    uint64_t v35 = (uint64_t)v37;
    sub_2517F7AB8(v34, (uint64_t)v37, &qword_269B55C80);
    v32(v35);
    sub_2517E16E0(v35, &qword_269B55C80);
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B54A90);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(a1, 0, 1, v36);
  }
}

uint64_t sub_25187F298@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  int64_t v4 = v1[3];
  unint64_t v3 = v1[4];
  int64_t v5 = v4;
  if (!v3)
  {
    int64_t v19 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      return result;
    }
    int64_t v20 = (unint64_t)(v1[2] + 64) >> 6;
    if (v19 < v20)
    {
      uint64_t v21 = v1[1];
      unint64_t v22 = *(void *)(v21 + 8 * v19);
      if (v22)
      {
LABEL_9:
        uint64_t v6 = (v22 - 1) & v22;
        unint64_t v7 = __clz(__rbit64(v22)) + (v19 << 6);
        int64_t v5 = v19;
        goto LABEL_3;
      }
      int64_t v23 = v4 + 2;
      int64_t v5 = v4 + 1;
      if (v4 + 2 < v20)
      {
        unint64_t v22 = *(void *)(v21 + 8 * v23);
        if (v22)
        {
LABEL_12:
          int64_t v19 = v23;
          goto LABEL_9;
        }
        int64_t v5 = v4 + 2;
        if (v4 + 3 < v20)
        {
          unint64_t v22 = *(void *)(v21 + 8 * (v4 + 3));
          if (v22)
          {
            int64_t v19 = v4 + 3;
            goto LABEL_9;
          }
          int64_t v23 = v4 + 4;
          int64_t v5 = v4 + 3;
          if (v4 + 4 < v20)
          {
            unint64_t v22 = *(void *)(v21 + 8 * v23);
            if (v22) {
              goto LABEL_12;
            }
            int64_t v19 = v4 + 5;
            int64_t v5 = v4 + 4;
            if (v4 + 5 < v20)
            {
              unint64_t v22 = *(void *)(v21 + 8 * v19);
              if (v22) {
                goto LABEL_9;
              }
              int64_t v5 = v20 - 1;
              int64_t v24 = v4 + 6;
              while (v20 != v24)
              {
                unint64_t v22 = *(void *)(v21 + 8 * v24++);
                if (v22)
                {
                  int64_t v19 = v24 - 1;
                  goto LABEL_9;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v5;
    v1[4] = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(void *)(a1 + 64) = 0;
    return result;
  }
  uint64_t v6 = (v3 - 1) & v3;
  unint64_t v7 = __clz(__rbit64(v3)) | (v4 << 6);
LABEL_3:
  uint64_t v8 = (uint64_t *)(*(void *)(v2 + 48) + (v7 << 6));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  uint64_t v11 = v8[2];
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[4];
  uint64_t v14 = v8[5];
  uint64_t v15 = v8[6];
  uint64_t v16 = v8[7];
  uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v7);
  v1[3] = v5;
  v1[4] = v6;
  uint64_t v25 = (void (*)(void *))v1[5];
  v26[0] = v9;
  v26[1] = v10;
  v26[2] = v11;
  v26[3] = v12;
  v26[4] = v13;
  v26[5] = v14;
  v26[6] = v15;
  v26[7] = v16;
  v26[8] = v17;
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25(v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_25187F4FC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v7 = a1[6];
  uint64_t v8 = a1[7];
  uint64_t v9 = a1[8];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  a2[4] = v5;
  a2[5] = v6;
  a2[6] = v7;
  a2[7] = v8;
  a2[8] = v9;
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_25187F5AC(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_25187F64C(__int16 *a1)
{
  uint64_t v2 = sub_25192C0B0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v50 - v7;
  uint64_t v9 = sub_25192C780();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  long long v65 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  long long v62 = (char *)&v50 - v13;
  __int16 v14 = *a1;
  LOWORD(v67[0]) = v14;
  LOWORD(v66[0]) = 9;
  if ((_s14HomeAppIntents10DeviceTypeO2eeoiySbAC_ACtFZ_0((unsigned __int16 *)v67, (unsigned __int16 *)v66) & 1) == 0)
  {
    LOWORD(v67[0]) = v14;
    LOWORD(v66[0]) = 23;
    if ((_s14HomeAppIntents10DeviceTypeO2eeoiySbAC_ACtFZ_0((unsigned __int16 *)v67, (unsigned __int16 *)v66) & 1) == 0)
    {
      LOWORD(v67[0]) = v14;
      LOWORD(v66[0]) = 25;
      if ((_s14HomeAppIntents10DeviceTypeO2eeoiySbAC_ACtFZ_0((unsigned __int16 *)v67, (unsigned __int16 *)v66) & 1) == 0)
      {
        uint64_t v49 = MEMORY[0x263F8EE78];
        return sub_2518203CC(v49);
      }
    }
  }
  uint64_t v15 = sub_25192C510();
  uint64_t v16 = (void *)sub_2518203CC(MEMORY[0x263F8EE78]);
  uint64_t v17 = *(void *)(v15 + 16);
  if (!v17)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    return (unint64_t)v16;
  }
  int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
  uint64_t v18 = v10 + 16;
  long long v63 = v19;
  uint64_t v20 = v3;
  unint64_t v21 = v15 + ((*(unsigned __int8 *)(v18 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 64));
  uint64_t v61 = *(void *)(v18 + 56);
  unsigned int v60 = *MEMORY[0x263F48230];
  uint64_t v58 = (void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v59 = (void (**)(char *, void, uint64_t))(v20 + 104);
  unsigned int v55 = *MEMORY[0x263F48AC0];
  uint64_t v64 = v18;
  uint64_t v50 = v15;
  swift_bridgeObjectRetain();
  uint64_t v57 = (void (**)(uint64_t, uint64_t))(v18 - 8);
  uint64_t v56 = (v18 - 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  long long v54 = xmmword_25192F930;
  unint64_t v22 = v62;
  long long v52 = v8;
  uint64_t v53 = v2;
  long long v51 = v6;
  while (1)
  {
    v63(v22, v21, v9);
    sub_25192C240();
    (*v59)(v6, v60, v2);
    sub_251878988(&qword_269B55C68, MEMORY[0x263F482B8]);
    sub_25192D360();
    sub_25192D360();
    if (v67[0] == v66[0] && v67[1] == v66[1])
    {
      swift_bridgeObjectRelease_n();
      int64_t v28 = *v58;
      (*v58)(v6, v2);
      v28(v8, v2);
    }
    else
    {
      char v26 = sub_25192D810();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v27 = *v58;
      (*v58)(v6, v2);
      v27(v8, v2);
      if ((v26 & 1) == 0)
      {
        int64_t v24 = *v57;
        goto LABEL_8;
      }
    }
    uint64_t v29 = (uint64_t)v65;
    uint64_t v30 = v9;
    v63(v65, (unint64_t)v62, v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
    uint64_t v31 = sub_25192CAF0();
    uint64_t v32 = *(void *)(v31 - 8);
    unint64_t v33 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = v54;
    (*(void (**)(unint64_t, void, uint64_t))(v32 + 104))(v34 + v33, v55, v31);
    uint64_t v35 = sub_2517F6740(v34);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v67[0] = v16;
    unint64_t v38 = sub_251823934(v29);
    uint64_t v39 = v16[2];
    BOOL v40 = (v37 & 1) == 0;
    uint64_t v41 = v39 + v40;
    if (__OFADD__(v39, v40)) {
      break;
    }
    char v42 = v37;
    if (v16[3] >= v41)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v16 = (void *)v67[0];
        if ((v37 & 1) == 0) {
          goto LABEL_23;
        }
      }
      else
      {
        sub_251833360();
        uint64_t v16 = (void *)v67[0];
        if ((v42 & 1) == 0) {
          goto LABEL_23;
        }
      }
    }
    else
    {
      sub_251831E7C(v41, isUniquelyReferenced_nonNull_native);
      unint64_t v43 = sub_251823934((uint64_t)v65);
      if ((v42 & 1) != (v44 & 1)) {
        goto LABEL_34;
      }
      unint64_t v38 = v43;
      uint64_t v16 = (void *)v67[0];
      if ((v42 & 1) == 0)
      {
LABEL_23:
        v16[(v38 >> 6) + 8] |= 1 << v38;
        v63((char *)(v16[6] + v38 * v61), (unint64_t)v65, v30);
        *(void *)(v16[7] + 8 * v38) = v35;
        uint64_t v45 = v16[2];
        BOOL v46 = __OFADD__(v45, 1);
        uint64_t v47 = v45 + 1;
        if (v46) {
          goto LABEL_33;
        }
        v16[2] = v47;
        goto LABEL_7;
      }
    }
    uint64_t v23 = v16[7];
    swift_bridgeObjectRelease();
    *(void *)(v23 + 8 * v38) = v35;
LABEL_7:
    swift_bridgeObjectRelease();
    int64_t v24 = *v57;
    uint64_t v9 = v30;
    (*v57)((uint64_t)v65, v30);
    uint64_t v6 = v51;
    uint64_t v8 = v52;
    uint64_t v2 = v53;
LABEL_8:
    unint64_t v22 = v62;
    v24((uint64_t)v62, v9);
    v21 += v61;
    if (!--v17)
    {
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  unint64_t result = sub_25192D850();
  __break(1u);
  return result;
}

uint64_t sub_25187FCF0(uint64_t a1)
{
  uint64_t v3 = sub_25192CF70();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v7)
  {
    uint64_t v33 = v1;
    uint64_t v50 = MEMORY[0x263F8EE78];
    sub_2518C3658(0, v7, 0);
    uint64_t v8 = v50;
    uint64_t v9 = (unsigned __int8 *)(a1 + 32);
    unsigned int v46 = *MEMORY[0x263F48F48];
    unsigned int v48 = *MEMORY[0x263F48F90];
    unsigned int v10 = *MEMORY[0x263F48F50];
    unsigned int v44 = *MEMORY[0x263F48F40];
    unsigned int v45 = v10;
    unsigned int v11 = *MEMORY[0x263F48F60];
    unsigned int v42 = *MEMORY[0x263F48F80];
    unsigned int v43 = v11;
    unsigned int v12 = *MEMORY[0x263F48F88];
    unsigned int v40 = *MEMORY[0x263F48F78];
    unsigned int v41 = v12;
    unsigned int v13 = *MEMORY[0x263F48F70];
    unsigned int v38 = *MEMORY[0x263F48F68];
    unsigned int v39 = v13;
    unsigned int v14 = *MEMORY[0x263F48F58];
    unsigned int v36 = *MEMORY[0x263F48FB0];
    unsigned int v37 = v14;
    unsigned int v47 = *MEMORY[0x263F48FB8];
    unsigned int v35 = *MEMORY[0x263F48FA0];
    uint64_t v49 = v4 + 32;
    unsigned int v34 = *MEMORY[0x263F48FA8];
    do
    {
      int v15 = *v9++;
      switch(v15)
      {
        case 1:
          uint64_t v17 = sub_25192CF50();
          (*(void (**)(char *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v6, v35, v17);
          goto LABEL_7;
        case 2:
          uint64_t v18 = sub_25192CF50();
          (*(void (**)(char *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v6, v36, v18);
          goto LABEL_7;
        case 3:
          uint64_t v20 = sub_25192CF40();
          (*(void (**)(char *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v6, v37, v20);
          goto LABEL_18;
        case 4:
          uint64_t v21 = sub_25192CF40();
          (*(void (**)(char *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v6, v39, v21);
          goto LABEL_18;
        case 5:
          uint64_t v22 = sub_25192CF40();
          (*(void (**)(char *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v6, v38, v22);
          goto LABEL_18;
        case 6:
          uint64_t v23 = sub_25192CF40();
          (*(void (**)(char *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v6, v40, v23);
          goto LABEL_18;
        case 7:
          uint64_t v24 = sub_25192CF40();
          (*(void (**)(char *, void, uint64_t))(*(void *)(v24 - 8) + 104))(v6, v41, v24);
          goto LABEL_18;
        case 8:
          uint64_t v25 = sub_25192CF40();
          (*(void (**)(char *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v6, v42, v25);
          goto LABEL_18;
        case 9:
          uint64_t v26 = sub_25192CF40();
          (*(void (**)(char *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v6, v43, v26);
          goto LABEL_18;
        case 10:
          uint64_t v27 = sub_25192CF40();
          (*(void (**)(char *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v6, v44, v27);
          goto LABEL_18;
        case 11:
          uint64_t v28 = sub_25192CF40();
          (*(void (**)(char *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v6, v45, v28);
          goto LABEL_18;
        case 12:
          uint64_t v29 = sub_25192CF40();
          (*(void (**)(char *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v6, v46, v29);
LABEL_18:
          uint64_t v19 = v48;
          break;
        default:
          uint64_t v16 = sub_25192CF50();
          (*(void (**)(char *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v6, v34, v16);
LABEL_7:
          uint64_t v19 = v47;
          break;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 104))(v6, v19, v3);
      uint64_t v50 = v8;
      unint64_t v31 = *(void *)(v8 + 16);
      unint64_t v30 = *(void *)(v8 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_2518C3658(v30 > 1, v31 + 1, 1);
        uint64_t v8 = v50;
      }
      *(void *)(v8 + 16) = v31 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v31, v6, v3);
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_251880284(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_2518C37A4(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = *(void *)(sub_25192BFE0() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      int v7 = sub_25192BFB0();
      unint64_t v9 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      if (v9 >= v8 >> 1) {
        sub_2518C37A4(v8 > 1, v9 + 1, 1);
      }
      *(void *)(v11 + 16) = v9 + 1;
      *(_DWORD *)(v11 + 4 * v9 + 32) = v7;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2518803B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251880598(a1, a2);
  if (!v2)
  {
    if (*(void *)(v4 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CF0);
      uint64_t v5 = sub_25192D0F0();
      uint64_t v6 = *(void *)(v5 - 8);
      unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_25192F930;
      sub_25192D0D0();
      (*(void (**)(unint64_t, void, uint64_t))(v6 + 104))(v3 + v7, *MEMORY[0x263F491A8], v5);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for HomeAppIntentError();
      sub_25188302C((unint64_t *)&qword_269B54420, (void (*)(uint64_t))type metadata accessor for HomeAppIntentError);
      swift_allocError();
      unsigned int v10 = v9;
      sub_2518DD374(&v11);
      *unsigned int v10 = v11;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
  }
  return v3;
}

uint64_t sub_251880598(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B545D0);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25192CEF0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v2;
  uint64_t v13 = v2[1];
  unsigned int v14 = (void *)v2[2];
  unint64_t v15 = v2[3];
  char v16 = *((unsigned char *)v2 + 32);
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v31 = MEMORY[0x263F8EE78];
  if ((v16 & 0xFE) == 0x60)
  {
    unint64_t v26 = v15;
    uint64_t v27 = v14;
    uint64_t v28 = v12;
    sub_25192C840();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_2517E16E0((uint64_t)v7, &qword_269B545D0);
      type metadata accessor for HomeAppIntentError();
      sub_25188302C((unint64_t *)&qword_269B54420, (void (*)(uint64_t))type metadata accessor for HomeAppIntentError);
      swift_allocError();
      *uint64_t v18 = 45;
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
    }
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    char v19 = v28;
    if (v28 == 1)
    {
      uint64_t v20 = v29;
      uint64_t v21 = sub_2518823C8(v13, a1, a2);
      uint64_t v22 = v20;
      if (v20)
      {
LABEL_10:
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        return swift_bridgeObjectRelease();
      }
      sub_2517F07C4(v21);
      uint64_t v23 = sub_251880894(v27, v26, v16 & 1, a2);
      sub_2517F07C4(v23);
      char v19 = v28;
    }
    else
    {
      uint64_t v22 = v29;
    }
    char v30 = v19;
    unint64_t v24 = sub_251880E50(a1, a2);
    if (v22) {
      goto LABEL_10;
    }
    sub_2517F07C4(v24);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v31;
  }
  return result;
}

uint64_t sub_251880894(void *a1, unint64_t a2, char a3, uint64_t a4)
{
  uint64_t v35 = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B545C8);
  MEMORY[0x270FA5388](v9 - 8);
  char v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25192C070();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1 && (a3 & 1) != 0) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v34 = v4;
  sub_25192CE00();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_2517E16E0((uint64_t)v11, &qword_269B545C8);
    type metadata accessor for HomeAppIntentError();
    sub_25188302C((unint64_t *)&qword_269B54420, (void (*)(uint64_t))type metadata accessor for HomeAppIntentError);
    swift_allocError();
    *char v16 = 45;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return (uint64_t)a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  if (a1)
  {
    uint64_t v33 = v15;
    int64_t v17 = a1[2];
    uint64_t v18 = MEMORY[0x263F8EE78];
    if (!v17)
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CF8);
      uint64_t v23 = *(void *)(sub_25192C120() - 8);
      unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      a1 = (void *)swift_allocObject();
      *((_OWORD *)a1 + 1) = xmmword_25192F930;
      sub_251881610(v18, v35, (uint64_t)a1 + v24);
      swift_bridgeObjectRelease();
      if (v5)
      {
        a1[2] = 0;
        swift_release();
      }
      (*(void (**)(char *, uint64_t))(v13 + 8))(v33, v12);
      return (uint64_t)a1;
    }
    uint64_t v32 = v13;
    uint64_t v36 = MEMORY[0x263F8EE78];
    sub_2518C37A4(0, v17, 0);
    unint64_t v19 = a1[4];
    if ((v19 & 0x8000000000000000) == 0 && !HIDWORD(v19))
    {
      uint64_t v18 = v36;
      unint64_t v21 = *(void *)(v36 + 16);
      unint64_t v20 = *(void *)(v36 + 24);
      int64_t v22 = v21 + 1;
      if (v21 >= v20 >> 1) {
        goto LABEL_35;
      }
      while (1)
      {
        *(void *)(v18 + 16) = v22;
        unint64_t v20 = v18 + 4 * v21;
        *(_DWORD *)(v20 + 32) = v19;
        int64_t v22 = v17 - 1;
        if (v17 == 1) {
          break;
        }
        unint64_t v19 = v21 + 9;
        a1 += 5;
        while (v22)
        {
          unint64_t v21 = *a1;
          if ((*a1 & 0x8000000000000000) != 0 || HIDWORD(v21)) {
            goto LABEL_36;
          }
          uint64_t v36 = v18;
          unint64_t v20 = *(void *)(v18 + 24);
          int64_t v17 = v19 - 7;
          if (v19 - 8 >= v20 >> 1)
          {
            sub_2518C37A4(v20 > 1, v19 - 7, 1);
            uint64_t v18 = v36;
          }
          *(void *)(v18 + 16) = v17;
          *(_DWORD *)(v18 + 4 * v19++) = v21;
          ++a1;
          if (!--v22) {
            goto LABEL_12;
          }
        }
        __break(1u);
LABEL_35:
        sub_2518C37A4(v20 > 1, v22, 1);
        uint64_t v18 = v36;
      }
LABEL_12:
      uint64_t v13 = v32;
      goto LABEL_13;
    }
  }
  else
  {
    if (a3)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      return MEMORY[0x263F8EE78];
    }
    if ((a2 & 0x8000000000000000) == 0 && !HIDWORD(a2))
    {
      uint64_t v25 = sub_25192C020();
      uint64_t v26 = sub_251880284(v25);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CF8);
      uint64_t v27 = *(void *)(sub_25192C120() - 8);
      uint64_t v28 = v15;
      unint64_t v29 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      a1 = (void *)swift_allocObject();
      *((_OWORD *)a1 + 1) = xmmword_25192F930;
      sub_251881610(v26, v35, (uint64_t)a1 + v29);
      swift_bridgeObjectRelease();
      if (v5)
      {
        a1[2] = 0;
        swift_release();
      }
      (*(void (**)(char *, uint64_t))(v13 + 8))(v28, v12);
      return (uint64_t)a1;
    }
  }
LABEL_36:
  uint64_t result = sub_25192D690();
  __break(1u);
  return result;
}

unint64_t sub_251880E50(uint64_t a1, uint64_t a2)
{
  uint64_t v62 = a2;
  uint64_t v64 = a1;
  uint64_t v3 = sub_25192C120();
  uint64_t v68 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  v70 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  v67 = (char *)&v52 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55D38);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7 - 8);
  char v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v52 - v12;
  uint64_t v63 = sub_25192BD10();
  uint64_t v60 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v61 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_25192C890();
  uint64_t v59 = *(char **)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  int64_t v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_25192CEA0();
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  int64_t v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v23 = *v2;
  int v24 = 1 << *v2;
  if ((v24 & 0x7F98) != 0)
  {
    unint64_t v25 = type metadata accessor for HomeAppIntentError();
    sub_25188302C((unint64_t *)&qword_269B54420, (void (*)(uint64_t))type metadata accessor for HomeAppIntentError);
    swift_allocError();
    uint64_t v27 = v26;
    char v71 = v23;
    unint64_t v28 = RobotVacuumCleanerRunState.rawValue.getter();
    *(unsigned char *)uint64_t v27 = 45;
    *(void *)(v27 + 8) = v28;
    *(void *)(v27 + 16) = v29;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  else
  {
    uint64_t v56 = v20;
    uint64_t v58 = v19;
    long long v65 = v13;
    uint64_t v66 = v3;
    if ((v24 & 0x65) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B55D40);
      uint64_t v30 = *(void *)(v8 + 72);
      uint64_t v55 = *(unsigned __int8 *)(v8 + 80);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_25192DEA0;
      uint64_t v57 = v31;
      uint64_t v32 = *MEMORY[0x263F48E78];
      uint64_t v56 = *(void *)(v56 + 104);
      ((void (*)(char *, uint64_t, uint64_t))v56)(v22, v32, v58);
      long long v54 = (void (*)(char *, uint64_t, uint64_t))*((void *)v59 + 2);
      v54(v17, v64, v15);
      uint64_t v53 = v15;
      uint64_t v59 = v17;
      uint64_t v33 = v61;
      uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
      v34(v61, v62, v63);
      sub_25192C110();
      uint64_t v69 = v30;
      uint64_t v35 = *MEMORY[0x263F48E58];
      uint64_t v36 = sub_25192CE90();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 104))(v22, v35, v36);
      ((void (*)(char *, void, uint64_t))v56)(v22, *MEMORY[0x263F48EA0], v58);
      v54(v59, v64, v53);
      uint64_t v13 = v65;
      v34(v33, v62, v63);
      unsigned int v37 = v55;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B55D40);
      unsigned int v37 = *(unsigned __int8 *)(v8 + 80);
      uint64_t v69 = *(void *)(v8 + 72);
      uint64_t v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_25192F930;
      uint64_t v57 = v49;
      uint64_t v50 = *MEMORY[0x263F48E60];
      uint64_t v51 = sub_25192CE90();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 104))(v22, v50, v51);
      (*(void (**)(char *, void, uint64_t))(v56 + 104))(v22, *MEMORY[0x263F48EA0], v58);
      (*((void (**)(char *, uint64_t, uint64_t))v59 + 2))(v17, v64, v15);
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v61, v62, v63);
    }
    sub_25192C110();
    uint64_t v38 = *(void *)(v57 + 16);
    uint64_t v39 = v66;
    if (v38)
    {
      uint64_t v40 = v57 + ((v37 + 32) & ~(unint64_t)v37);
      unsigned int v41 = (unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
      unsigned int v42 = (void (**)(char *, char *, uint64_t))(v68 + 32);
      swift_bridgeObjectRetain();
      unint64_t v25 = MEMORY[0x263F8EE78];
      do
      {
        sub_2517E079C(v40, (uint64_t)v13, &qword_269B55D38);
        sub_251883074((uint64_t)v13, (uint64_t)v11);
        if ((*v41)(v11, 1, v39) == 1)
        {
          sub_2517E16E0((uint64_t)v11, &qword_269B55D38);
        }
        else
        {
          unsigned int v43 = *v42;
          unsigned int v44 = v67;
          (*v42)(v67, v11, v39);
          v43(v70, v44, v39);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v25 = sub_251846FBC(0, *(void *)(v25 + 16) + 1, 1, v25);
          }
          unint64_t v46 = *(void *)(v25 + 16);
          unint64_t v45 = *(void *)(v25 + 24);
          if (v46 >= v45 >> 1) {
            unint64_t v25 = sub_251846FBC(v45 > 1, v46 + 1, 1, v25);
          }
          *(void *)(v25 + 16) = v46 + 1;
          unint64_t v47 = v25
              + ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))
              + *(void *)(v68 + 72) * v46;
          uint64_t v39 = v66;
          v43((char *)v47, v70, v66);
          uint64_t v13 = v65;
        }
        v40 += v69;
        --v38;
      }
      while (v38);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x263F8EE78];
    }
  }
  return v25;
}

uint64_t sub_251881610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v74 = a1;
  uint64_t v60 = a2;
  uint64_t v64 = a3;
  uint64_t v4 = sub_25192BFA0();
  uint64_t v62 = *(void *)(v4 - 8);
  uint64_t v63 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v61 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v59 = (char *)&v51 - v7;
  uint64_t v58 = sub_25192BD10();
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  v70 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_25192CEB0();
  uint64_t v69 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  char v71 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_25192CEF0();
  uint64_t v68 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  v67 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25192CEA0();
  uint64_t v65 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (uint64_t *)((char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55D18);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  int64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v51 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B545C8);
  MEMORY[0x270FA5388](v20 - 8);
  int64_t v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_25192C070();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25192CE00();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_2517E16E0((uint64_t)v22, &qword_269B545C8);
    type metadata accessor for HomeAppIntentError();
    sub_25188302C((unint64_t *)&qword_269B54420, (void (*)(uint64_t))type metadata accessor for HomeAppIntentError);
    swift_allocError();
    *uint64_t v27 = 45;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  else
  {
    uint64_t v53 = v11;
    long long v54 = v17;
    uint64_t v29 = v72;
    uint64_t v56 = v19;
    uint64_t v55 = v3;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v22, v23);
    uint64_t v30 = sub_25192C030();
    uint64_t v31 = sub_251880284(v30);
    swift_bridgeObjectRelease();
    uint64_t v32 = sub_2517F288C(v31);
    swift_bridgeObjectRelease();
    uint64_t v33 = v74;
    LOBYTE(v31) = sub_251882F10(v74, v32);
    swift_bridgeObjectRelease();
    if (v31)
    {
      uint64_t v51 = v26;
      uint64_t v73 = v23;
      uint64_t v52 = v24;
      uint64_t *v13 = v33;
      uint64_t v34 = *MEMORY[0x263F48E40];
      uint64_t v35 = sub_25192CE70();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(v13, v34, v35);
      (*(void (**)(uint64_t *, void, uint64_t))(v65 + 104))(v13, *MEMORY[0x263F48E88], v53);
      (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v67, v55, v29);
      swift_bridgeObjectRetain();
      uint64_t v36 = (uint64_t)v56;
      sub_25192CE80();
      uint64_t v37 = (uint64_t)v54;
      sub_2517E079C(v36, (uint64_t)v54, &qword_269B55D18);
      uint64_t v38 = v69;
      uint64_t v39 = v66;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v37, 1, v66) == 1)
      {
        sub_2517E16E0(v37, &qword_269B55D18);
        type metadata accessor for HomeAppIntentError();
        sub_25188302C((unint64_t *)&qword_269B54420, (void (*)(uint64_t))type metadata accessor for HomeAppIntentError);
        swift_allocError();
        *uint64_t v40 = 45;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        uint64_t v41 = v36;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v71, v37, v39);
        (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v70, v60, v58);
        unsigned int v43 = v59;
        sub_25192CE30();
        uint64_t v74 = sub_25192BF90();
        unsigned int v44 = *(void (**)(char *, uint64_t))(v62 + 8);
        unint64_t v45 = v43;
        uint64_t v46 = v38;
        uint64_t v47 = v63;
        v44(v45, v63);
        unsigned int v48 = v61;
        sub_25192CE30();
        sub_25192BF80();
        v44(v48, v47);
        v75[3] = v39;
        v75[4] = sub_25188302C(&qword_269B55D20, MEMORY[0x263F48F18]);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v75);
        uint64_t v50 = v71;
        (*(void (**)(uint64_t *, char *, uint64_t))(v46 + 16))(boxed_opaque_existential_1, v71, v39);
        sub_25192C100();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v50, v39);
        uint64_t v41 = (uint64_t)v56;
      }
      sub_2517E16E0(v41, &qword_269B55D18);
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v51, v73);
    }
    else
    {
      type metadata accessor for HomeAppIntentError();
      sub_25188302C((unint64_t *)&qword_269B54420, (void (*)(uint64_t))type metadata accessor for HomeAppIntentError);
      swift_allocError();
      unsigned char *v42 = 45;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    }
  }
}

uint64_t sub_251881F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25192CF70();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v37 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v37 - v12;
  if (*(void *)(a1 + 16) < *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v15 = *(void *)(a2 + 56);
  uint64_t v49 = a2 + 56;
  uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
  uint64_t v40 = ~v16;
  if (-v16 < 64) {
    uint64_t v17 = ~(-1 << -(char)v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v41 = (unint64_t)(63 - v16) >> 6;
  uint64_t v46 = v5 + 32;
  uint64_t v50 = a1 + 56;
  uint64_t v51 = v5 + 16;
  uint64_t v52 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v44 = a2;
  uint64_t v38 = v13;
  uint64_t v39 = v5;
  int64_t v47 = 0;
  unint64_t v48 = v18;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v42 = (v18 - 1) & v18;
  int64_t v43 = v20;
  for (unint64_t i = __clz(__rbit64(v18)) | (v20 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v24 << 6))
  {
    uint64_t v26 = *(void *)(v5 + 72);
    uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v27(v13, *(void *)(a2 + 48) + v26 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v11, v13, v4);
    uint64_t v28 = *(void *)(a1 + 16);
    uint64_t v45 = (unint64_t)v52 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v29 = v11;
    if (!v28
      || (sub_25188302C(&qword_269B53E78, MEMORY[0x263F48FC0]),
          uint64_t v30 = sub_25192D200(),
          uint64_t v31 = -1 << *(unsigned char *)(a1 + 32),
          unint64_t v32 = v30 & ~v31,
          ((*(void *)(v50 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) == 0))
    {
      (*v52)(v11, v4);
LABEL_30:
      uint64_t v14 = 0;
      goto LABEL_31;
    }
    uint64_t v33 = a1;
    uint64_t v34 = ~v31;
    while (1)
    {
      v27(v8, *(void *)(v33 + 48) + v32 * v26, v4);
      sub_25188302C(&qword_269B55D30, MEMORY[0x263F48FC0]);
      char v35 = sub_25192D230();
      uint64_t v36 = *v52;
      (*v52)(v8, v4);
      if (v35) {
        break;
      }
      unint64_t v32 = (v32 + 1) & v34;
      if (((*(void *)(v50 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
      {
        v36(v29, v4);
        goto LABEL_30;
      }
    }
    uint64_t v11 = v29;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v36)(v29, v4);
    unint64_t v18 = v42;
    int64_t v20 = v43;
    a2 = v44;
    a1 = v33;
    uint64_t v13 = v38;
    uint64_t v5 = v39;
    int64_t v47 = v43;
    unint64_t v48 = v42;
    if (v42) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v22 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v22 >= v41) {
      goto LABEL_34;
    }
    unint64_t v23 = *(void *)(v49 + 8 * v22);
    int64_t v24 = v20 + 1;
    if (!v23)
    {
      int64_t v24 = v20 + 2;
      if (v20 + 2 >= v41) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v49 + 8 * v24);
      if (!v23)
      {
        int64_t v24 = v20 + 3;
        if (v20 + 3 >= v41) {
          goto LABEL_34;
        }
        unint64_t v23 = *(void *)(v49 + 8 * v24);
        if (!v23) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v42 = (v23 - 1) & v23;
    int64_t v43 = v24;
  }
  uint64_t v25 = v20 + 4;
  if (v20 + 4 >= v41)
  {
LABEL_34:
    uint64_t v14 = 1;
LABEL_31:
    sub_2517F6D90();
    return v14;
  }
  unint64_t v23 = *(void *)(v49 + 8 * v25);
  if (v23)
  {
    int64_t v24 = v20 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v24 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v24 >= v41) {
      goto LABEL_34;
    }
    unint64_t v23 = *(void *)(v49 + 8 * v24);
    ++v25;
    if (v23) {
      goto LABEL_21;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2518823C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v93 = a3;
  uint64_t v103 = a1;
  uint64_t v4 = sub_25192C890();
  uint64_t v99 = *(void *)(v4 - 8);
  uint64_t v100 = v4;
  MEMORY[0x270FA5388](v4);
  v101 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25192C0E0();
  uint64_t v94 = *(void *)(v6 - 8);
  uint64_t v95 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  v92 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  v91 = (char *)&v83 - v9;
  uint64_t v90 = sub_25192BD10();
  uint64_t v89 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  v97 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_25192CEE0();
  uint64_t v104 = *(void *)(v102 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v102);
  uint64_t v13 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  v96 = (char *)&v83 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55D28);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  unint64_t v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  int64_t v20 = (char *)&v83 - v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B545D0);
  MEMORY[0x270FA5388](v21 - 8);
  unint64_t v23 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_25192CEF0();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = a2;
  sub_25192C840();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    sub_2517E16E0((uint64_t)v23, &qword_269B545D0);
    return MEMORY[0x263F8EE78];
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v27, v23, v24);
  uint64_t v28 = sub_25192CE20();
  if (!v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    return MEMORY[0x263F8EE78];
  }
  uint64_t v29 = v28;
  v86 = v18;
  uint64_t v87 = v24;
  uint64_t v30 = v105;
  uint64_t v31 = sub_25187FCF0(v103);
  unint64_t v107 = sub_2517F26F0(v31);
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(v29 + 16);
  uint64_t v105 = v30;
  v88 = v20;
  if (v32)
  {
    v84 = v27;
    uint64_t v85 = v25;
    v106 = *(NSObject **)(v104 + 16);
    unint64_t v33 = v29 + ((*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80));
    uint64_t v34 = (void (**)(char *, uint64_t))(v104 + 8);
    uint64_t v35 = *(void *)(v104 + 72);
    uint64_t v83 = v29;
    swift_bridgeObjectRetain();
    uint64_t v36 = v102;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v106)(v13, v33, v36);
      uint64_t v37 = sub_25192CED0();
      char v38 = sub_251881F3C(v37, v107);
      swift_bridgeObjectRelease();
      if (v38) {
        break;
      }
      (*v34)(v13, v36);
      v33 += v35;
      if (!--v32)
      {
        swift_bridgeObjectRelease();
        uint64_t v39 = 1;
        int64_t v20 = v88;
        uint64_t v25 = v85;
        uint64_t v27 = v84;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    int64_t v20 = v88;
    (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v88, v13, v36);
    uint64_t v39 = 0;
    uint64_t v25 = v85;
    uint64_t v27 = v84;
  }
  else
  {
    uint64_t v39 = 1;
    uint64_t v36 = v102;
  }
LABEL_12:
  uint64_t v40 = v104;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v104 + 56))(v20, v39, 1, v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v41 = (uint64_t)v86;
  sub_2517E079C((uint64_t)v20, (uint64_t)v86, &qword_269B55D28);
  uint64_t v42 = v40;
  int v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v41, 1, v36);
  uint64_t v44 = v99;
  uint64_t v45 = v100;
  uint64_t v46 = v101;
  if (v43 == 1)
  {
    sub_2517E16E0(v41, &qword_269B55D28);
    if (qword_269B53418 != -1) {
      swift_once();
    }
    uint64_t v47 = sub_25192D1D0();
    __swift_project_value_buffer(v47, (uint64_t)qword_269B5A090);
    uint64_t v48 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v46, v98, v45);
    swift_bridgeObjectRetain_n();
    uint64_t v49 = sub_25192D1B0();
    os_log_type_t v50 = sub_25192D4F0();
    int v51 = v50;
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v52 = v44;
      uint64_t v53 = swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      LODWORD(v107) = v51;
      uint64_t v104 = v54;
      v108[0] = v54;
      *(_DWORD *)uint64_t v53 = 136315394;
      v106 = v49;
      uint64_t v55 = v101;
      uint64_t v56 = sub_25192C860();
      uint64_t v109 = sub_2517F0D04(v56, v57, v108);
      uint64_t v85 = v25;
      sub_25192D580();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v55, v48);
      *(_WORD *)(v53 + 12) = 2080;
      uint64_t v58 = swift_bridgeObjectRetain();
      uint64_t v59 = MEMORY[0x2533A6BA0](v58, &type metadata for RobotVacuumCleanerCleanMode);
      uint64_t v60 = v27;
      unint64_t v62 = v61;
      swift_bridgeObjectRelease();
      uint64_t v63 = v59;
      int64_t v20 = v88;
      uint64_t v109 = sub_2517F0D04(v63, v62, v108);
      uint64_t v25 = v85;
      sub_25192D580();
      swift_bridgeObjectRelease_n();
      uint64_t v27 = v60;
      swift_bridgeObjectRelease();
      os_log_t v64 = v106;
      _os_log_impl(&dword_2517D6000, v106, (os_log_type_t)v107, "Failed to find clean mode on %s to match clean modes: %s", (uint8_t *)v53, 0x16u);
      uint64_t v65 = v104;
      swift_arrayDestroy();
      MEMORY[0x2533A75D0](v65, -1, -1);
      MEMORY[0x2533A75D0](v53, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v48);

      swift_bridgeObjectRelease_n();
    }
    uint64_t v81 = v87;
    sub_2517E16E0((uint64_t)v20, &qword_269B55D28);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v81);
    return MEMORY[0x263F8EE78];
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v96, v41, v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CF8);
  uint64_t v66 = *(void *)(sub_25192C120() - 8);
  unint64_t v67 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  uint64_t v68 = swift_allocObject();
  *(_OWORD *)(v68 + 16) = xmmword_25192F930;
  unint64_t v107 = v68 + v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v97, v93, v90);
  uint64_t v69 = v91;
  sub_25192C830();
  v106 = sub_25192C0D0();
  v70 = *(void (**)(char *, uint64_t))(v94 + 8);
  char v71 = v69;
  uint64_t v72 = v95;
  v70(v71, v95);
  uint64_t v73 = v92;
  sub_25192C830();
  sub_25192C0C0();
  v70(v73, v72);
  uint64_t v74 = v25;
  uint64_t v75 = sub_25192CEB0();
  v108[3] = v75;
  v108[4] = sub_25188302C(&qword_269B55D20, MEMORY[0x263F48F18]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v108);
  uint64_t v77 = v104;
  v78 = v27;
  v79 = boxed_opaque_existential_1;
  v80 = v96;
  uint64_t *boxed_opaque_existential_1 = sub_25192CEC0();
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v75 - 8) + 104))(v79, *MEMORY[0x263F48E50], v75);
  sub_25192C100();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v80, v102);
  sub_2517E16E0((uint64_t)v88, &qword_269B55D28);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v78, v87);
  return v68;
}

uint64_t sub_251882F10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    if (!*(void *)(a2 + 16)) {
      return 0;
    }
    uint64_t v4 = a1 + 32;
    uint64_t v5 = *(unsigned int *)(a1 + 32);
    uint64_t v6 = a2 + 56;
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = MEMORY[0x2533A70B0](v7, v5, 4);
    uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v10 = v8 & ~v9;
    if (((*(void *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      return 0;
    }
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(a2 + 48);
    uint64_t v13 = 1;
    unsigned int v14 = v5;
    while (1)
    {
      while (*(_DWORD *)(v12 + 4 * v10) != v14)
      {
        unint64_t v10 = (v10 + 1) & v11;
        if (((*(void *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
          return 0;
        }
      }
      if (v13 == v2) {
        break;
      }
      uint64_t v15 = v13 + 1;
      unsigned int v14 = *(_DWORD *)(v4 + 4 * v13);
      uint64_t v16 = MEMORY[0x2533A70B0](v7, v14, 4);
      uint64_t result = 0;
      unint64_t v10 = v16 & v11;
      uint64_t v18 = *(void *)(v6 + (((v16 & (unint64_t)v11) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (v16 & v11);
      uint64_t v13 = v15;
      if ((v18 & 1) == 0) {
        return result;
      }
    }
  }
  return 1;
}

uint64_t sub_25188302C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251883074(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55D38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t AnnotationEntityProvider.init(annotationType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251883CBC(a1, a2, type metadata accessor for AnnotationEntityProvider.AnnotationType);
}

uint64_t type metadata accessor for AnnotationEntityProvider.AnnotationType(uint64_t a1)
{
  return sub_2517DE790(a1, (uint64_t *)&unk_269B55D70);
}

uint64_t AnnotationEntityProvider.entitiesInRect(rect:)()
{
  uint64_t v1 = type metadata accessor for SceneEntity();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CategoryEntity();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for HomeEntity();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AnnotationEntityProvider.AnnotationType(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (uint64_t *)((char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_251883D24(v0, (uint64_t)v12, type metadata accessor for AnnotationEntityProvider.AnnotationType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_251883CBC((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CategoryEntity);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B55D48);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_25192F930;
      *(void *)(inited + 56) = v4;
      *(void *)(inited + 64) = sub_251885B10(&qword_269B55D58, (void (*)(uint64_t))type metadata accessor for CategoryEntity);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
      sub_251883D24((uint64_t)v6, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for CategoryEntity);
      uint64_t v15 = sub_2518836A4(inited);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B55D50);
      swift_arrayDestroy();
      sub_251883D8C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CategoryEntity);
      break;
    case 2u:
      sub_251883CBC((uint64_t)v12, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SceneEntity);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B55D48);
      uint64_t v18 = swift_initStackObject();
      *(_OWORD *)(v18 + 16) = xmmword_25192F930;
      *(void *)(v18 + 56) = v1;
      *(void *)(v18 + 64) = sub_251885B10(qword_269B53C70, (void (*)(uint64_t))type metadata accessor for SceneEntity);
      uint64_t v19 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v18 + 32));
      sub_251883D24((uint64_t)v3, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for SceneEntity);
      uint64_t v15 = sub_2518836A4(v18);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B55D50);
      swift_arrayDestroy();
      sub_251883D8C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SceneEntity);
      break;
    case 3u:
      uint64_t v20 = sub_251883934(*v12);
      goto LABEL_7;
    case 4u:
      uint64_t v20 = sub_251883B38(*v12);
LABEL_7:
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      uint64_t v15 = sub_2518836A4(v21);
      swift_bridgeObjectRelease();
      break;
    default:
      sub_251883CBC((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for HomeEntity);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B55D48);
      uint64_t v13 = swift_initStackObject();
      *(_OWORD *)(v13 + 16) = xmmword_25192F930;
      *(void *)(v13 + 56) = v7;
      *(void *)(v13 + 64) = sub_251885B10(&qword_269B542F8, (void (*)(uint64_t))type metadata accessor for HomeEntity);
      unsigned int v14 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v13 + 32));
      sub_251883D24((uint64_t)v9, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for HomeEntity);
      uint64_t v15 = sub_2518836A4(v13);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B55D50);
      swift_arrayDestroy();
      sub_251883D8C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for HomeEntity);
      break;
  }
  return v15;
}

uint64_t sub_2518836A4(uint64_t a1)
{
  uint64_t v2 = sub_25192B610();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_25192B720();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    sub_25192BA60();
    uint64_t v6 = a1 + 32;
    v11[1] = a1;
    swift_bridgeObjectRetain();
    do
    {
      sub_251885A68(v6, (uint64_t)v12);
      uint64_t v7 = __swift_project_boxed_opaque_existential_1(v12, v12[3]);
      MEMORY[0x270FA5388](v7);
      (*(void (**)(char *))(v9 + 16))((char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
      sub_25192B710();
      sub_251883DEC();
      sub_25192BA50();
      uint64_t v10 = __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
      MEMORY[0x2533A6B80](v10);
      if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_25192D3D0();
      }
      sub_25192D410();
      sub_25192D3C0();
      v6 += 40;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_251883934(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RoomEntity();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_2518C37C4(0, v6, 0);
    uint64_t v7 = v17;
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_251883D24(v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for RoomEntity);
      uint64_t v17 = v7;
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_2518C37C4(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v17;
      }
      uint64_t v15 = v2;
      uint64_t v16 = sub_251885B10(&qword_269B54338, (void (*)(uint64_t))type metadata accessor for RoomEntity);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
      sub_251883D24((uint64_t)v5, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for RoomEntity);
      *(void *)(v7 + 16) = v11 + 1;
      sub_251885A50(&v14, v7 + 40 * v11 + 32);
      sub_251883D8C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for RoomEntity);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_251883B38(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_2518C37C4(0, v1, 0);
    uint64_t v2 = v22;
    uint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v5 = *(v4 - 2);
      uint64_t v6 = *(v4 - 1);
      uint64_t v7 = v4[1];
      uint64_t v15 = *v4;
      uint64_t v8 = v4[2];
      uint64_t v9 = v4[3];
      uint64_t v11 = v4[4];
      uint64_t v10 = v4[5];
      unint64_t v12 = *(void *)(v2 + 16);
      unint64_t v16 = *(void *)(v2 + 24);
      int64_t v17 = v1;
      uint64_t v22 = v2;
      uint64_t v18 = v5;
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v12 >= v16 >> 1)
      {
        sub_2518C37C4(v16 > 1, v12 + 1, 1);
        uint64_t v2 = v22;
      }
      uint64_t v20 = &type metadata for DeviceEntity;
      unint64_t v21 = sub_2517E4C50();
      uint64_t v13 = (void *)swift_allocObject();
      *(void *)&long long v19 = v13;
      v13[2] = v18;
      v13[3] = v6;
      v13[4] = v15;
      v13[5] = v7;
      v13[6] = v8;
      v13[7] = v9;
      v13[8] = v11;
      v13[9] = v10;
      *(void *)(v2 + 16) = v12 + 1;
      sub_251885A50(&v19, v2 + 40 * v12 + 32);
      v4 += 8;
      --v1;
    }
    while (v17 != 1);
  }
  return v2;
}

uint64_t sub_251883CBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251883D24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251883D8C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251883DEC()
{
  return sub_25192D5C0();
}

void *initializeBufferWithCopyOfBuffer for AnnotationEntityProvider(void *a1, void *a2)
{
  int v4 = *(_DWORD *)(*(void *)(type metadata accessor for AnnotationEntityProvider.AnnotationType(0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (void *)(v7 + ((v4 + 16) & ~(unint64_t)v4));
    sub_25192BA80();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = sub_25192BD10();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        uint64_t v9 = type metadata accessor for CategoryEntity();
        *((unsigned char *)a1 + *(int *)(v9 + 20)) = *((unsigned char *)a2 + *(int *)(v9 + 20));
        break;
      case 2u:
        *a1 = *a2;
        uint64_t v10 = (int *)type metadata accessor for SceneEntity();
        uint64_t v11 = v10[5];
        unint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_25192BD10();
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
        sub_25192BA80();
        v15(v12, v13, v14);
        *(void *)((char *)a1 + v10[6]) = *(void *)((char *)a2 + v10[6]);
        *(void *)((char *)a1 + v10[7]) = *(void *)((char *)a2 + v10[7]);
        sub_25192BA80();
        sub_25192BA80();
        break;
      case 3u:
      case 4u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v5 = sub_25192BD10();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
        uint64_t v6 = type metadata accessor for HomeEntity();
        *(void *)((char *)a1 + *(int *)(v6 + 20)) = *(void *)((char *)a2 + *(int *)(v6 + 20));
        sub_25192BA80();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for AnnotationEntityProvider(uint64_t a1)
{
  type metadata accessor for AnnotationEntityProvider.AnnotationType(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_25192BD10();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      type metadata accessor for HomeEntity();
      goto LABEL_10;
    case 1:
      uint64_t v4 = sub_25192BD10();
      uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      uint64_t result = v5(a1, v4);
      break;
    case 2:
      swift_release();
      uint64_t v6 = a1 + *(int *)(type metadata accessor for SceneEntity() + 20);
      uint64_t v7 = sub_25192BD10();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      swift_release();
LABEL_10:
      uint64_t result = swift_release();
      break;
    case 3:
    case 4:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for AnnotationEntityProvider(void *a1, void *a2)
{
  type metadata accessor for AnnotationEntityProvider.AnnotationType(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = sub_25192BD10();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for CategoryEntity();
      *((unsigned char *)a1 + *(int *)(v7 + 20)) = *((unsigned char *)a2 + *(int *)(v7 + 20));
      break;
    case 2u:
      *a1 = *a2;
      uint64_t v8 = (int *)type metadata accessor for SceneEntity();
      uint64_t v9 = v8[5];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_25192BD10();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      sub_25192BA80();
      v13(v10, v11, v12);
      *(void *)((char *)a1 + v8[6]) = *(void *)((char *)a2 + v8[6]);
      *(void *)((char *)a1 + v8[7]) = *(void *)((char *)a2 + v8[7]);
      sub_25192BA80();
      sub_25192BA80();
      break;
    case 3u:
    case 4u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v4 = sub_25192BD10();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = type metadata accessor for HomeEntity();
      *(void *)((char *)a1 + *(int *)(v5 + 20)) = *(void *)((char *)a2 + *(int *)(v5 + 20));
      sub_25192BA80();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for AnnotationEntityProvider(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_251883D8C((uint64_t)a1, type metadata accessor for AnnotationEntityProvider.AnnotationType);
    type metadata accessor for AnnotationEntityProvider.AnnotationType(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = sub_25192BD10();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = type metadata accessor for CategoryEntity();
        *((unsigned char *)a1 + *(int *)(v7 + 20)) = *((unsigned char *)a2 + *(int *)(v7 + 20));
        break;
      case 2u:
        *a1 = *a2;
        uint64_t v8 = (int *)type metadata accessor for SceneEntity();
        uint64_t v9 = v8[5];
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_25192BD10();
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
        sub_25192BA80();
        v13(v10, v11, v12);
        *(void *)((char *)a1 + v8[6]) = *(void *)((char *)a2 + v8[6]);
        *(void *)((char *)a1 + v8[7]) = *(void *)((char *)a2 + v8[7]);
        sub_25192BA80();
        sub_25192BA80();
        break;
      case 3u:
      case 4u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v4 = sub_25192BD10();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        uint64_t v5 = type metadata accessor for HomeEntity();
        *(void *)((char *)a1 + *(int *)(v5 + 20)) = *(void *)((char *)a2 + *(int *)(v5 + 20));
        sub_25192BA80();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for AnnotationEntityProvider(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for AnnotationEntityProvider.AnnotationType(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v8 = (int *)type metadata accessor for SceneEntity();
    uint64_t v9 = v8[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_25192BD10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    *(void *)((char *)a1 + v8[6]) = *(void *)((char *)a2 + v8[6]);
    *(void *)((char *)a1 + v8[7]) = *(void *)((char *)a2 + v8[7]);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v13 = sub_25192BD10();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
    uint64_t v14 = type metadata accessor for CategoryEntity();
    *((unsigned char *)a1 + *(int *)(v14 + 20)) = *((unsigned char *)a2 + *(int *)(v14 + 20));
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_25192BD10();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = type metadata accessor for HomeEntity();
    *(void *)((char *)a1 + *(int *)(v7 + 20)) = *(void *)((char *)a2 + *(int *)(v7 + 20));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for AnnotationEntityProvider(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_251883D8C((uint64_t)a1, type metadata accessor for AnnotationEntityProvider.AnnotationType);
    uint64_t v4 = type metadata accessor for AnnotationEntityProvider.AnnotationType(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v8 = (int *)type metadata accessor for SceneEntity();
      uint64_t v9 = v8[5];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_25192BD10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      *(void *)((char *)a1 + v8[6]) = *(void *)((char *)a2 + v8[6]);
      *(void *)((char *)a1 + v8[7]) = *(void *)((char *)a2 + v8[7]);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = sub_25192BD10();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
      uint64_t v14 = type metadata accessor for CategoryEntity();
      *((unsigned char *)a1 + *(int *)(v14 + 20)) = *((unsigned char *)a2 + *(int *)(v14 + 20));
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_25192BD10();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for HomeEntity();
      *(void *)((char *)a1 + *(int *)(v7 + 20)) = *(void *)((char *)a2 + *(int *)(v7 + 20));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AnnotationEntityProvider(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251884B48);
}

uint64_t sub_251884B48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnnotationEntityProvider.AnnotationType(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for AnnotationEntityProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251884BC8);
}

uint64_t sub_251884BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnnotationEntityProvider.AnnotationType(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for AnnotationEntityProvider(uint64_t a1)
{
  return sub_2517DE790(a1, (uint64_t *)&unk_269B55D60);
}

uint64_t sub_251884C58()
{
  uint64_t result = type metadata accessor for AnnotationEntityProvider.AnnotationType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for AnnotationEntityProvider.AnnotationType(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    sub_25192BA80();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = sub_25192BD10();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = type metadata accessor for CategoryEntity();
        *((unsigned char *)a1 + *(int *)(v10 + 20)) = *((unsigned char *)a2 + *(int *)(v10 + 20));
        break;
      case 2u:
        *a1 = *a2;
        uint64_t v11 = (int *)type metadata accessor for SceneEntity();
        uint64_t v12 = v11[5];
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = sub_25192BD10();
        unint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
        sub_25192BA80();
        v16(v13, v14, v15);
        *(void *)((char *)a1 + v11[6]) = *(void *)((char *)a2 + v11[6]);
        *(void *)((char *)a1 + v11[7]) = *(void *)((char *)a2 + v11[7]);
        sub_25192BA80();
        sub_25192BA80();
        break;
      case 3u:
      case 4u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = sub_25192BD10();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = type metadata accessor for HomeEntity();
        *(void *)((char *)a1 + *(int *)(v7 + 20)) = *(void *)((char *)a2 + *(int *)(v7 + 20));
        sub_25192BA80();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for AnnotationEntityProvider.AnnotationType(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_25192BD10();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      type metadata accessor for HomeEntity();
      goto LABEL_10;
    case 1:
      uint64_t v4 = sub_25192BD10();
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      uint64_t result = v5(a1, v4);
      break;
    case 2:
      swift_release();
      uint64_t v6 = a1 + *(int *)(type metadata accessor for SceneEntity() + 20);
      uint64_t v7 = sub_25192BD10();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      swift_release();
LABEL_10:
      uint64_t result = swift_release();
      break;
    case 3:
    case 4:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for AnnotationEntityProvider.AnnotationType(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = sub_25192BD10();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for CategoryEntity();
      *((unsigned char *)a1 + *(int *)(v7 + 20)) = *((unsigned char *)a2 + *(int *)(v7 + 20));
      break;
    case 2u:
      *a1 = *a2;
      uint64_t v8 = (int *)type metadata accessor for SceneEntity();
      uint64_t v9 = v8[5];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_25192BD10();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      sub_25192BA80();
      v13(v10, v11, v12);
      *(void *)((char *)a1 + v8[6]) = *(void *)((char *)a2 + v8[6]);
      *(void *)((char *)a1 + v8[7]) = *(void *)((char *)a2 + v8[7]);
      sub_25192BA80();
      sub_25192BA80();
      break;
    case 3u:
    case 4u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v4 = sub_25192BD10();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = type metadata accessor for HomeEntity();
      *(void *)((char *)a1 + *(int *)(v5 + 20)) = *(void *)((char *)a2 + *(int *)(v5 + 20));
      sub_25192BA80();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for AnnotationEntityProvider.AnnotationType(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_251883D8C((uint64_t)a1, type metadata accessor for AnnotationEntityProvider.AnnotationType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = sub_25192BD10();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = type metadata accessor for CategoryEntity();
        *((unsigned char *)a1 + *(int *)(v7 + 20)) = *((unsigned char *)a2 + *(int *)(v7 + 20));
        break;
      case 2u:
        *a1 = *a2;
        uint64_t v8 = (int *)type metadata accessor for SceneEntity();
        uint64_t v9 = v8[5];
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_25192BD10();
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
        sub_25192BA80();
        v13(v10, v11, v12);
        *(void *)((char *)a1 + v8[6]) = *(void *)((char *)a2 + v8[6]);
        *(void *)((char *)a1 + v8[7]) = *(void *)((char *)a2 + v8[7]);
        sub_25192BA80();
        sub_25192BA80();
        break;
      case 3u:
      case 4u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v4 = sub_25192BD10();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        uint64_t v5 = type metadata accessor for HomeEntity();
        *(void *)((char *)a1 + *(int *)(v5 + 20)) = *(void *)((char *)a2 + *(int *)(v5 + 20));
        sub_25192BA80();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for AnnotationEntityProvider.AnnotationType(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v9 = (int *)type metadata accessor for SceneEntity();
    uint64_t v10 = v9[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_25192BD10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    *(void *)((char *)a1 + v9[6]) = *(void *)((char *)a2 + v9[6]);
    *(void *)((char *)a1 + v9[7]) = *(void *)((char *)a2 + v9[7]);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v14 = sub_25192BD10();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
    uint64_t v15 = type metadata accessor for CategoryEntity();
    *((unsigned char *)a1 + *(int *)(v15 + 20)) = *((unsigned char *)a2 + *(int *)(v15 + 20));
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_25192BD10();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for HomeEntity();
    *(void *)((char *)a1 + *(int *)(v8 + 20)) = *(void *)((char *)a2 + *(int *)(v8 + 20));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for AnnotationEntityProvider.AnnotationType(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_251883D8C((uint64_t)a1, type metadata accessor for AnnotationEntityProvider.AnnotationType);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v9 = (int *)type metadata accessor for SceneEntity();
      uint64_t v10 = v9[5];
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_25192BD10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      *(void *)((char *)a1 + v9[6]) = *(void *)((char *)a2 + v9[6]);
      *(void *)((char *)a1 + v9[7]) = *(void *)((char *)a2 + v9[7]);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = sub_25192BD10();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
      uint64_t v15 = type metadata accessor for CategoryEntity();
      *((unsigned char *)a1 + *(int *)(v15 + 20)) = *((unsigned char *)a2 + *(int *)(v15 + 20));
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_25192BD10();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = type metadata accessor for HomeEntity();
      *(void *)((char *)a1 + *(int *)(v8 + 20)) = *(void *)((char *)a2 + *(int *)(v8 + 20));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_251885940()
{
  uint64_t result = type metadata accessor for HomeEntity();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for CategoryEntity();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for SceneEntity();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_251885A50(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_251885A68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_251885B10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251885B58()
{
  unint64_t result = qword_269B55D90;
  if (!qword_269B55D90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B55D88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55D90);
  }
  return result;
}

uint64_t sub_251885BB4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_251885C24(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_25192CAF0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_25188C1D4(&qword_269B53DD8, MEMORY[0x263F48AD0]),
        uint64_t v7 = sub_25192D200(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_25188C1D4(&qword_269B53DE0, MEMORY[0x263F48AD0]);
      char v15 = sub_25192D230();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_251885E38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_25192CA70();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_25188C1D4(&qword_269B55DB0, MEMORY[0x263F487F0]),
        uint64_t v7 = sub_25192D200(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_25188C1D4(&qword_269B55DB8, MEMORY[0x263F487F0]);
      char v15 = sub_25192D230();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

BOOL sub_25188604C(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_25192D8D0();
  sub_25192D8E0();
  uint64_t v4 = sub_25192D920();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_25188613C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_25192C780();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_25188C1D4(&qword_269B54938, MEMORY[0x263F48408]),
        uint64_t v7 = sub_25192D200(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_25188C1D4(&qword_269B54940, MEMORY[0x263F48408]);
      char v15 = sub_25192D230();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_251886350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_25192D8D0();
    sub_25192D300();
    uint64_t v6 = sub_25192D920();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_25192D810() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          unint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_25192D810() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_251886488(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a2;
  uint64_t v25 = sub_25192BE00();
  uint64_t v3 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55DA8);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(int *)(v7 + 56);
  uint64_t v11 = &v9[v10];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = sub_25192BD10();
  uint64_t v14 = *(void *)(v13 - 8);
  unint64_t v15 = *(void (**)(char *, uint64_t))(v14 + 16);
  uint64_t v27 = v13;
  v15(v9, a1);
  uint64_t v16 = sub_25192C1E0();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v11, v12, v16);
  sub_25192C130();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v16);
  uint64_t v18 = sub_25192BDF0();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v25);
  type metadata accessor for SceneEntity();
  sub_25192B740();
  if (v18 == v28 && v20 == v29) {
    char v22 = 1;
  }
  else {
    char v22 = sub_25192D810();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v27);
  return v22 & 1;
}

unint64_t sub_251886720(char a1)
{
  unint64_t result = 0x6D614E746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E65696C63;
      break;
    case 2:
      unint64_t result = 0x6D617473656D6974;
      break;
    case 3:
      unint64_t result = 0x65536E6F69746361;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD000000000000030;
      break;
    case 6:
      unint64_t result = 0xD000000000000026;
      break;
    case 7:
      unint64_t result = 0xD000000000000030;
      break;
    case 8:
      unint64_t result = 0xD000000000000035;
      break;
    case 9:
    case 10:
      unint64_t result = 0xD000000000000024;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_251886888(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2518868A0()
{
  return sub_25192D8E0();
}

unint64_t sub_2518868D0()
{
  return sub_251886720(*v0);
}

uint64_t sub_2518868D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25188D724(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251886900()
{
  return 0;
}

void sub_25188690C(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_251886918(uint64_t a1)
{
  unint64_t v2 = sub_25188CD54();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251886954(uint64_t a1)
{
  unint64_t v2 = sub_25188CD54();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251886990(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55E60);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25188CD54();
  sub_25192D940();
  v8[15] = 0;
  sub_25192D790();
  if (!v1)
  {
    v8[14] = 1;
    sub_25192D780();
    v8[13] = 2;
    sub_25192D7B0();
    v8[12] = 3;
    sub_25192D760();
    v8[11] = 4;
    sub_25192D7A0();
    v8[10] = 5;
    sub_25192D7A0();
    v8[9] = 6;
    sub_25192D7A0();
    v8[8] = 7;
    sub_25192D7A0();
    v8[7] = 8;
    sub_25192D7A0();
    v8[6] = 9;
    sub_25192D7A0();
    v8[5] = 10;
    sub_25192D7A0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_251886C5C()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_251886C94()
{
  return sub_25192C7A0();
}

uint64_t sub_251886CAC(void *a1)
{
  return sub_251886990(a1);
}

void sub_251886CC4(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_251886CD0(uint64_t a1)
{
  unint64_t v2 = sub_25188CB98();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251886D0C(uint64_t a1)
{
  unint64_t v2 = sub_25188CB98();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251886D48(void *a1)
{
  return sub_2518877C8(a1, &qword_269B55E10, (void (*)(void))sub_25188CB98);
}

uint64_t sub_251886D84(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55E40);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25188CCAC();
  sub_25192D940();
  char v15 = 0;
  sub_25192D790();
  if (!v2)
  {
    char v14 = 1;
    sub_25192D780();
    char v13 = 2;
    sub_25192D7B0();
    char v12 = 3;
    sub_25192D7A0();
    uint64_t v11 = *(void *)(v3 + 48);
    v10[15] = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B55E20);
    sub_25188CBEC();
    sub_25192D7D0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_251886F84()
{
  unint64_t result = 0x6D614E746E657665;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x746E65696C63;
      break;
    case 2:
      unint64_t result = 0x6D617473656D6974;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x7954656369766564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25188703C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25188DB6C(a1, a2);
  *a3 = result;
  return result;
}

void sub_251887064(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_251887070(uint64_t a1)
{
  unint64_t v2 = sub_25188CCAC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2518870AC(uint64_t a1)
{
  unint64_t v2 = sub_25188CCAC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2518870E8(void *a1)
{
  return sub_251886D84(a1);
}

unint64_t sub_251887100(char a1)
{
  unint64_t result = 0x6D614E746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E65696C63;
      break;
    case 2:
      unint64_t result = 0x6D617473656D6974;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x7954656369766564;
      break;
    case 5:
      unint64_t result = 0x7475626972747461;
      break;
    case 6:
      unint64_t result = 0x74756F656D6974;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251887200()
{
  return sub_251887100(*v0);
}

uint64_t sub_251887208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25188DDA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251887230(uint64_t a1)
{
  unint64_t v2 = sub_25188CC58();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25188726C(uint64_t a1)
{
  unint64_t v2 = sub_25188CC58();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2518872A8(void *a1)
{
  return sub_2518877C8(a1, &qword_269B55E30, (void (*)(void))sub_25188CC58);
}

uint64_t sub_2518872E4@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v65 = sub_25192CAF0();
  uint64_t v7 = *(void *)(v65 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v65);
  uint64_t v10 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  os_log_t v64 = (char *)v44 - v11;
  int v49 = *a1;
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t v69 = MEMORY[0x263F8EE78];
  uint64_t v48 = *(void *)(a2 + 16);
  if (v48)
  {
    uint64_t v45 = a3;
    uint64_t v46 = v3;
    uint64_t v47 = a2 + 32;
    uint64_t v62 = v7 + 32;
    uint64_t v63 = v7 + 16;
    uint64_t v61 = v7 + 8;
    v44[1] = a2;
    swift_bridgeObjectRetain();
    uint64_t v13 = 0;
LABEL_4:
    char v14 = (uint64_t *)(v47 + (v13 << 6));
    uint64_t v15 = v14[1];
    uint64_t v17 = v14[2];
    uint64_t v16 = v14[3];
    uint64_t v18 = v14[4];
    uint64_t v19 = v14[5];
    uint64_t v20 = v14[6];
    uint64_t v21 = v14[7];
    uint64_t v57 = *v14;
    uint64_t v58 = v13 + 1;
    char v68 = v49;
    sub_25192BA80();
    uint64_t v56 = v15;
    sub_25192BA80();
    sub_25192BA80();
    uint64_t v54 = v16;
    sub_25192BA80();
    uint64_t v53 = v18;
    sub_25192BA80();
    uint64_t v52 = v19;
    sub_25192BA80();
    uint64_t v51 = v20;
    swift_bridgeObjectRetain();
    uint64_t v50 = v21;
    swift_bridgeObjectRetain();
    uint64_t v55 = v17;
    sub_25192B740();
    v67[0] = v67[1];
    uint64_t v22 = sub_2518DDDC8(v67);
    uint64_t v23 = *(void *)(v22 + 56);
    uint64_t v59 = v22 + 56;
    uint64_t v24 = 1 << *(unsigned char *)(v22 + 32);
    if (v24 < 64) {
      uint64_t v25 = ~(-1 << v24);
    }
    else {
      uint64_t v25 = -1;
    }
    unint64_t v26 = v25 & v23;
    int64_t v60 = (unint64_t)(v24 + 63) >> 6;
    uint64_t v66 = v22;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v28 = 0;
    uint64_t v29 = (void *)MEMORY[0x263F8EE78];
    if (v26)
    {
LABEL_8:
      unint64_t v30 = __clz(__rbit64(v26));
      v26 &= v26 - 1;
      unint64_t v31 = v30 | (v28 << 6);
      goto LABEL_27;
    }
    while (1)
    {
      int64_t v32 = v28 + 1;
      if (__OFADD__(v28, 1))
      {
        __break(1u);
LABEL_36:
        __break(1u);
        return result;
      }
      if (v32 >= v60) {
        goto LABEL_3;
      }
      unint64_t v33 = *(void *)(v59 + 8 * v32);
      ++v28;
      if (!v33)
      {
        int64_t v28 = v32 + 1;
        if (v32 + 1 >= v60) {
          goto LABEL_3;
        }
        unint64_t v33 = *(void *)(v59 + 8 * v28);
        if (!v33)
        {
          int64_t v28 = v32 + 2;
          if (v32 + 2 >= v60) {
            goto LABEL_3;
          }
          unint64_t v33 = *(void *)(v59 + 8 * v28);
          if (!v33)
          {
            int64_t v28 = v32 + 3;
            if (v32 + 3 >= v60) {
              goto LABEL_3;
            }
            unint64_t v33 = *(void *)(v59 + 8 * v28);
            if (!v33)
            {
              int64_t v28 = v32 + 4;
              if (v32 + 4 >= v60) {
                goto LABEL_3;
              }
              unint64_t v33 = *(void *)(v59 + 8 * v28);
              if (!v33)
              {
                int64_t v34 = v32 + 5;
                if (v34 >= v60)
                {
LABEL_3:
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  sub_2517F07F0((uint64_t)v29);
                  uint64_t v13 = v58;
                  if (v58 != v48) {
                    goto LABEL_4;
                  }
                  swift_bridgeObjectRelease();
                  uint64_t v12 = v69;
                  a3 = v45;
                  break;
                }
                unint64_t v33 = *(void *)(v59 + 8 * v34);
                if (!v33)
                {
                  while (1)
                  {
                    int64_t v28 = v34 + 1;
                    if (__OFADD__(v34, 1)) {
                      goto LABEL_36;
                    }
                    if (v28 >= v60) {
                      goto LABEL_3;
                    }
                    unint64_t v33 = *(void *)(v59 + 8 * v28);
                    ++v34;
                    if (v33) {
                      goto LABEL_26;
                    }
                  }
                }
                int64_t v28 = v34;
              }
            }
          }
        }
      }
LABEL_26:
      unint64_t v26 = (v33 - 1) & v33;
      unint64_t v31 = __clz(__rbit64(v33)) + (v28 << 6);
LABEL_27:
      uint64_t v35 = v65;
      uint64_t v36 = v64;
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v64, *(void *)(v66 + 48) + *(void *)(v7 + 72) * v31, v65);
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v36, v35);
      uint64_t v37 = sub_25192CAE0();
      uint64_t v39 = v38;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v35);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_25184685C(0, v29[2] + 1, 1, v29);
        uint64_t v29 = (void *)result;
      }
      unint64_t v41 = v29[2];
      unint64_t v40 = v29[3];
      if (v41 >= v40 >> 1)
      {
        uint64_t result = (uint64_t)sub_25184685C((void *)(v40 > 1), v41 + 1, 1, v29);
        uint64_t v29 = (void *)result;
      }
      v29[2] = v41 + 1;
      uint64_t v42 = &v29[2 * v41];
      v42[4] = v37;
      v42[5] = v39;
      if (v26) {
        goto LABEL_8;
      }
    }
  }
  uint64_t v43 = sub_2517F25AC(v12);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v43;
  return result;
}

uint64_t sub_2518877C8(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_25192D940();
  LOBYTE(v15) = 0;
  uint64_t v11 = v13;
  sub_25192D790();
  if (!v11)
  {
    LOBYTE(v15) = 1;
    sub_25192D780();
    LOBYTE(v15) = 2;
    sub_25192D7B0();
    LOBYTE(v15) = 3;
    sub_25192D7A0();
    uint64_t v15 = *(void *)(v5 + 48);
    char v14 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B55E20);
    sub_25188CBEC();
    sub_25192D7D0();
    uint64_t v15 = *(void *)(v5 + 56);
    char v14 = 5;
    sub_25192D7D0();
    LOBYTE(v15) = 6;
    sub_25192D770();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_251887A44()
{
  return sub_25192D920();
}

uint64_t sub_251887A8C()
{
  return sub_25192D920();
}

uint64_t sub_251887AD0(uint64_t a1)
{
  unint64_t v2 = sub_25188CD00();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251887B0C(uint64_t a1)
{
  unint64_t v2 = sub_25188CD00();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251887B48(void *a1)
{
  return sub_2518877C8(a1, &qword_269B55E50, (void (*)(void))sub_25188CD00);
}

uint64_t sub_251887B84(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  *(unsigned char *)(v8 + 236) = a8;
  *(void *)(v8 + 48) = a6;
  *(void *)(v8 + 56) = a7;
  *(void *)(v8 + 32) = a4;
  *(void *)(v8 + 40) = a5;
  *(unsigned char *)(v8 + 233) = a2;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B55DC8);
  *(void *)(v8 + 64) = swift_task_alloc();
  *(void *)(v8 + 72) = swift_task_alloc();
  *(void *)(v8 + 80) = swift_task_alloc();
  uint64_t v9 = sub_25192BE00();
  *(void *)(v8 + 88) = v9;
  *(void *)(v8 + 96) = *(void *)(v9 - 8);
  *(void *)(v8 + 104) = swift_task_alloc();
  uint64_t v10 = sub_25192BCB0();
  *(void *)(v8 + 112) = v10;
  *(void *)(v8 + 120) = *(void *)(v10 - 8);
  *(void *)(v8 + 128) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54478);
  *(void *)(v8 + 136) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54408);
  *(void *)(v8 + 144) = swift_task_alloc();
  uint64_t v11 = sub_25192BD10();
  *(void *)(v8 + 152) = v11;
  *(void *)(v8 + 160) = *(void *)(v11 - 8);
  *(void *)(v8 + 168) = swift_task_alloc();
  uint64_t v12 = sub_25192C1E0();
  *(void *)(v8 + 176) = v12;
  *(void *)(v8 + 184) = *(void *)(v12 - 8);
  *(void *)(v8 + 192) = swift_task_alloc();
  sub_25192BEB0();
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v8 + 200) = v13;
  void *v13 = v8;
  v13[1] = sub_251887E54;
  return MEMORY[0x270F3A2E0](0);
}

uint64_t sub_251887E54(uint64_t a1)
{
  *(void *)(*(void *)v1 + 208) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251887F54, 0, 0);
}

uint64_t sub_251887F54()
{
  (*(void (**)(void, void, void))(v0[20] + 16))(v0[21], v0[5], v0[19]);
  sub_25192D460();
  v0[27] = sub_25192D450();
  uint64_t v2 = sub_25192D440();
  return MEMORY[0x270FA2498](sub_251888004, v2, v1);
}

uint64_t sub_251888004()
{
  uint64_t v1 = *(void **)(v0 + 208);
  swift_release();
  *(void *)(v0 + 224) = sub_25192BE50();

  return MEMORY[0x270FA2498](sub_251888078, 0, 0);
}

uint64_t sub_251888078()
{
  uint64_t v85 = v0;
  if (*(void *)(v0[28] + 16) && (unint64_t v1 = sub_251823860(v0[21]), (v2 & 1) != 0))
  {
    (*(void (**)(void, unint64_t, void))(v0[23] + 16))(v0[18], *(void *)(v0[28] + 56) + *(void *)(v0[23] + 72) * v1, v0[22]);
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v3 = 1;
  }
  uint64_t v5 = v0[22];
  uint64_t v4 = v0[23];
  uint64_t v7 = v0[20];
  uint64_t v6 = v0[21];
  uint64_t v9 = v0[18];
  uint64_t v8 = v0[19];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, v3, 1, v5);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v10(v6, v8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v9, 1, v5) == 1)
  {
    uint64_t v12 = v0[18];
    uint64_t v11 = v0[19];
    uint64_t v14 = v0[5];
    uint64_t v13 = v0[6];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2517E16E0(v13, &qword_269B54478);
    v10(v14, v11);
    sub_2517E16E0(v12, &qword_269B54408);
    uint64_t v72 = 0;
    unint64_t v74 = 0;
    unint64_t v78 = 0;
    uint64_t v79 = 0;
    uint64_t v71 = 0;
    uint64_t v80 = 0;
    uint64_t v81 = 0;
    uint64_t v77 = 0;
    char v76 = 0;
    uint64_t v15 = 0;
    goto LABEL_37;
  }
  uint64_t v16 = v0[17];
  uint64_t v17 = v0[6];
  (*(void (**)(void, void, void))(v0[23] + 32))(v0[24], v0[18], v0[22]);
  sub_25188C16C(v17, v16);
  uint64_t v18 = sub_25192B8E0();
  uint64_t v19 = *(void *)(v18 - 8);
  int v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18);
  uint64_t v21 = v0[17];
  v70 = v10;
  if (v20 == 1)
  {
    sub_2517E16E0(v21, &qword_269B54478);
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = sub_25192B8D0();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v18);
  }
  uint64_t v71 = v22;
  BOOL v23 = v20 == 1;
  uint64_t v25 = v0[15];
  uint64_t v24 = v0[16];
  uint64_t v27 = v0[13];
  uint64_t v26 = v0[14];
  uint64_t v28 = v0[11];
  uint64_t v29 = v0[12];
  uint64_t v30 = v0[3];
  *((unsigned char *)v0 + 232) = v23;
  sub_25192BCA0();
  sub_25192BC80();
  uint64_t v15 = v31;
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  sub_25192C130();
  LOBYTE(v24) = sub_25192BDB0();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
  *((unsigned char *)v0 + 240) = v24 & 1;
  uint64_t v32 = *(void *)(v30 + 16);
  uint64_t v33 = MEMORY[0x263F8EE78];
  if (v32)
  {
    uint64_t v73 = (_WORD *)v0 + 117;
    uint64_t v75 = v0;
    uint64_t v34 = swift_bridgeObjectRetain() + 48;
    uint64_t v35 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25192B740();
      unsigned int v36 = (unsigned __int16)*v73;
      unsigned int v37 = v36 >> 14;
      if (v36 >> 14)
      {
        int v38 = (v36 >> 8) & 0x3F;
        if (v37 == 1)
        {
          uint64_t v39 = v75[9];
          LOBYTE(v84) = v38;
          sub_251893B78(v39);
          uint64_t v40 = sub_25192C0B0();
          uint64_t v41 = *(void *)(v40 - 8);
          int v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40);
          uint64_t v43 = v75[9];
          if (v42 != 1) {
            goto LABEL_21;
          }
        }
        else
        {
          uint64_t v46 = v75[8];
          LOBYTE(v84) = v38;
          sub_251893B78(v46);
          uint64_t v40 = sub_25192C0B0();
          uint64_t v41 = *(void *)(v40 - 8);
          int v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v46, 1, v40);
          uint64_t v43 = v75[8];
          if (v47 != 1)
          {
LABEL_21:
            uint64_t v48 = sub_25192C0A0();
            uint64_t v50 = v49;
            (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v43, v40);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v35 = sub_25184685C(0, v35[2] + 1, 1, v35);
            }
            unint64_t v52 = v35[2];
            unint64_t v51 = v35[3];
            if (v52 >= v51 >> 1) {
              uint64_t v35 = sub_25184685C((void *)(v51 > 1), v52 + 1, 1, v35);
            }
            v35[2] = v52 + 1;
            uint64_t v53 = &v35[2 * v52];
            v53[4] = v48;
            v53[5] = v50;
            goto LABEL_13;
          }
        }
      }
      else
      {
        uint64_t v44 = v75[10];
        LOBYTE(v84) = *v73;
        sub_251893B78(v44);
        uint64_t v40 = sub_25192C0B0();
        uint64_t v41 = *(void *)(v40 - 8);
        int v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v44, 1, v40);
        uint64_t v43 = v75[10];
        if (v45 != 1) {
          goto LABEL_21;
        }
      }
      sub_2517E16E0(v43, &qword_269B55DC8);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_13:
      v34 += 64;
      if (!--v32)
      {
        uint64_t v0 = v75;
        swift_bridgeObjectRelease();
        uint64_t v33 = MEMORY[0x263F8EE78];
        goto LABEL_28;
      }
    }
  }
  uint64_t v35 = (void *)MEMORY[0x263F8EE78];
LABEL_28:
  uint64_t v54 = v0[4];
  uint64_t v82 = v33;
  uint64_t v55 = *(void *)(v54 + 16);
  if (v55)
  {
    uint64_t v56 = (unsigned __int8 *)(v54 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v57 = v0[3];
      unsigned __int8 v58 = *v56++;
      unsigned __int8 v83 = v58;
      sub_2518872E4(&v83, v57, &v84);
      sub_2517EF664(v84);
      --v55;
    }
    while (v55);
    uint64_t v81 = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v59 = v82;
  }
  else
  {
    uint64_t v81 = v35;
    swift_bridgeObjectRelease();
    uint64_t v59 = MEMORY[0x263F8EE78];
  }
  uint64_t v72 = v59;
  uint64_t v61 = v0[23];
  uint64_t v60 = v0[24];
  uint64_t v62 = v0[22];
  uint64_t v63 = v0[19];
  uint64_t v64 = v0[5];
  int v65 = *((unsigned __int8 *)v0 + 233);
  sub_2517E16E0(v0[6], &qword_269B54478);
  v70(v64, v63);
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
  swift_bridgeObjectRelease();
  uint64_t v80 = *((unsigned __int8 *)v0 + 232);
  uint64_t v79 = *((unsigned __int8 *)v0 + 240);
  if (v65) {
    unint64_t v66 = 0x800000025194B810;
  }
  else {
    unint64_t v66 = 0x800000025194B7E0;
  }
  uint64_t v77 = v0[7];
  unint64_t v78 = v66;
  char v76 = *((unsigned char *)v0 + 236) & 1;
  unint64_t v74 = 0xD000000000000026;
LABEL_37:
  uint64_t v67 = v0[2];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)uint64_t v67 = v74;
  *(void *)(v67 + 8) = v78;
  *(void *)(v67 + 16) = v71;
  *(void *)(v67 + 24) = v80;
  *(void *)(v67 + 32) = v15;
  *(void *)(v67 + 40) = v79;
  *(void *)(v67 + 48) = v81;
  *(void *)(v67 + 56) = v72;
  *(void *)(v67 + 64) = v77;
  *(unsigned char *)(v67 + 72) = v76;
  char v68 = (uint64_t (*)(void))v0[1];
  return v68();
}

uint64_t sub_251888920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(unsigned char *)(v7 + 233) = a7;
  *(void *)(v7 + 48) = a5;
  *(void *)(v7 + 56) = a6;
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a4;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B55DC8);
  *(void *)(v7 + 64) = swift_task_alloc();
  *(void *)(v7 + 72) = swift_task_alloc();
  *(void *)(v7 + 80) = swift_task_alloc();
  uint64_t v8 = sub_25192BE00();
  *(void *)(v7 + 88) = v8;
  *(void *)(v7 + 96) = *(void *)(v8 - 8);
  *(void *)(v7 + 104) = swift_task_alloc();
  uint64_t v9 = sub_25192BCB0();
  *(void *)(v7 + 112) = v9;
  *(void *)(v7 + 120) = *(void *)(v9 - 8);
  *(void *)(v7 + 128) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54478);
  *(void *)(v7 + 136) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54408);
  *(void *)(v7 + 144) = swift_task_alloc();
  uint64_t v10 = sub_25192BD10();
  *(void *)(v7 + 152) = v10;
  *(void *)(v7 + 160) = *(void *)(v10 - 8);
  *(void *)(v7 + 168) = swift_task_alloc();
  uint64_t v11 = sub_25192C1E0();
  *(void *)(v7 + 176) = v11;
  *(void *)(v7 + 184) = *(void *)(v11 - 8);
  *(void *)(v7 + 192) = swift_task_alloc();
  sub_25192BEB0();
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v7 + 200) = v12;
  *uint64_t v12 = v7;
  v12[1] = sub_251888BEC;
  return MEMORY[0x270F3A2E0](0);
}

uint64_t sub_251888BEC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 208) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251888CEC, 0, 0);
}

uint64_t sub_251888CEC()
{
  (*(void (**)(void, void, void))(v0[20] + 16))(v0[21], v0[5], v0[19]);
  sub_25192D460();
  v0[27] = sub_25192D450();
  uint64_t v2 = sub_25192D440();
  return MEMORY[0x270FA2498](sub_251888D9C, v2, v1);
}

uint64_t sub_251888D9C()
{
  uint64_t v1 = *(void **)(v0 + 208);
  swift_release();
  *(void *)(v0 + 224) = sub_25192BE50();

  return MEMORY[0x270FA2498](sub_251888E10, 0, 0);
}

uint64_t sub_251888E10()
{
  uint64_t v86 = v0;
  uint64_t v1 = v0;
  if (*(void *)(v0[28] + 16) && (unint64_t v2 = sub_251823860(v0[21]), (v3 & 1) != 0))
  {
    (*(void (**)(void, unint64_t, void))(v0[23] + 16))(v0[18], *(void *)(v0[28] + 56) + *(void *)(v0[23] + 72) * v2, v0[22]);
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = 1;
  }
  uint64_t v5 = v0[22];
  uint64_t v6 = v1[23];
  uint64_t v8 = v1[20];
  uint64_t v7 = v1[21];
  uint64_t v10 = v1[18];
  uint64_t v9 = v1[19];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v6 + 56))(v10, v4, 1, v1[22]);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v11(v7, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v10, 1, v5) == 1)
  {
    uint64_t v13 = v1[18];
    uint64_t v12 = v1[19];
    uint64_t v15 = v1[5];
    uint64_t v14 = v1[6];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2517E16E0(v14, &qword_269B54478);
    v11(v15, v12);
    sub_2517E16E0(v13, &qword_269B54408);
    unint64_t v75 = 0;
    unint64_t v76 = 0;
    uint64_t v71 = 0;
    uint64_t v80 = 0;
    uint64_t v81 = 0;
    uint64_t v78 = 0;
    uint64_t v79 = 0;
    uint64_t v73 = 0;
    char v77 = 0;
    uint64_t v16 = 0;
    goto LABEL_34;
  }
  uint64_t v17 = v1[17];
  uint64_t v18 = v1[6];
  (*(void (**)(void, void, void))(v1[23] + 32))(v1[24], v1[18], v1[22]);
  sub_25188C16C(v18, v17);
  uint64_t v19 = sub_25192B8E0();
  uint64_t v20 = *(void *)(v19 - 8);
  int v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19);
  uint64_t v22 = v1[17];
  v70 = v11;
  if (v21 == 1)
  {
    sub_2517E16E0(v22, &qword_269B54478);
    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v23 = sub_25192B8D0();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v19);
  }
  uint64_t v71 = v23;
  uint64_t v25 = v1[15];
  uint64_t v24 = v1[16];
  uint64_t v27 = v1[13];
  uint64_t v26 = v1[14];
  uint64_t v82 = v1;
  uint64_t v28 = v1[12];
  uint64_t v29 = v82[11];
  uint64_t v30 = v82[3];
  *((unsigned char *)v82 + 232) = v21 == 1;
  sub_25192BCA0();
  sub_25192BC80();
  uint64_t v16 = v31;
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  sub_25192C130();
  LOBYTE(v24) = sub_25192BDB0();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
  uint64_t v1 = v82;
  *((unsigned char *)v82 + 240) = v24 & 1;
  uint64_t v32 = *(void *)(v30 + 16);
  uint64_t v33 = MEMORY[0x263F8EE78];
  if (v32)
  {
    uint64_t v34 = swift_bridgeObjectRetain() + 48;
    uint64_t v35 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25192B740();
      unsigned int v36 = *((unsigned __int16 *)v82 + 117);
      unsigned int v37 = v36 >> 14;
      if (v36 >> 14)
      {
        int v38 = (v36 >> 8) & 0x3F;
        if (v37 == 1)
        {
          uint64_t v39 = v82[9];
          LOBYTE(v85) = v38;
          sub_251893B78(v39);
          uint64_t v40 = sub_25192C0B0();
          uint64_t v41 = *(void *)(v40 - 8);
          uint64_t v42 = v39;
          uint64_t v1 = v82;
          int v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v42, 1, v40);
          uint64_t v44 = v82[9];
          if (v43 != 1) {
            goto LABEL_21;
          }
        }
        else
        {
          uint64_t v48 = v82[8];
          LOBYTE(v85) = v38;
          sub_251893B78(v48);
          uint64_t v40 = sub_25192C0B0();
          uint64_t v41 = *(void *)(v40 - 8);
          uint64_t v49 = v48;
          uint64_t v1 = v82;
          int v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v49, 1, v40);
          uint64_t v44 = v82[8];
          if (v50 != 1)
          {
LABEL_21:
            uint64_t v51 = sub_25192C0A0();
            uint64_t v72 = v52;
            uint64_t v74 = v51;
            (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v44, v40);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v35 = sub_25184685C(0, v35[2] + 1, 1, v35);
            }
            unint64_t v54 = v35[2];
            unint64_t v53 = v35[3];
            if (v54 >= v53 >> 1) {
              uint64_t v35 = sub_25184685C((void *)(v53 > 1), v54 + 1, 1, v35);
            }
            v35[2] = v54 + 1;
            uint64_t v55 = &v35[2 * v54];
            v55[4] = v74;
            v55[5] = v72;
            goto LABEL_13;
          }
        }
      }
      else
      {
        uint64_t v45 = v82[10];
        LOBYTE(v85) = *((_WORD *)v82 + 117);
        sub_251893B78(v45);
        uint64_t v40 = sub_25192C0B0();
        uint64_t v41 = *(void *)(v40 - 8);
        uint64_t v46 = v45;
        uint64_t v1 = v82;
        int v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v46, 1, v40);
        uint64_t v44 = v82[10];
        if (v47 != 1) {
          goto LABEL_21;
        }
      }
      sub_2517E16E0(v44, &qword_269B55DC8);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_13:
      v34 += 64;
      if (!--v32)
      {
        swift_bridgeObjectRelease();
        uint64_t v33 = MEMORY[0x263F8EE78];
        goto LABEL_28;
      }
    }
  }
  uint64_t v35 = (void *)MEMORY[0x263F8EE78];
LABEL_28:
  uint64_t v56 = v1[4];
  uint64_t v83 = v33;
  uint64_t v57 = *(void *)(v56 + 16);
  if (v57)
  {
    unsigned __int8 v58 = (unsigned __int8 *)(v56 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v59 = v1[3];
      unsigned __int8 v60 = *v58++;
      unsigned __int8 v84 = v60;
      sub_2518872E4(&v84, v59, &v85);
      sub_2517EF664(v85);
      --v57;
    }
    while (v57);
    uint64_t v80 = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v61 = v83;
  }
  else
  {
    uint64_t v80 = v35;
    swift_bridgeObjectRelease();
    uint64_t v61 = MEMORY[0x263F8EE78];
  }
  uint64_t v73 = v61;
  uint64_t v63 = v1[23];
  uint64_t v62 = v1[24];
  uint64_t v64 = v1[22];
  uint64_t v65 = v1[19];
  uint64_t v66 = v1[5];
  sub_2517E16E0(v1[6], &qword_269B54478);
  v70(v66, v65);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
  swift_bridgeObjectRelease();
  uint64_t v81 = *((unsigned __int8 *)v1 + 232);
  uint64_t v79 = *((unsigned __int8 *)v1 + 240);
  uint64_t v78 = v1[7];
  char v77 = *((unsigned char *)v1 + 233) & 1;
  unint64_t v75 = 0xD000000000000024;
  unint64_t v76 = 0x800000025194B7B0;
LABEL_34:
  uint64_t v67 = v1[2];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)uint64_t v67 = v75;
  *(void *)(v67 + 8) = v76;
  *(void *)(v67 + 16) = v71;
  *(void *)(v67 + 24) = v81;
  *(void *)(v67 + 32) = v16;
  *(void *)(v67 + 40) = v79;
  *(void *)(v67 + 48) = v80;
  *(void *)(v67 + 56) = v73;
  *(void *)(v67 + 64) = v78;
  *(unsigned char *)(v67 + 72) = v77;
  char v68 = (uint64_t (*)(void))v1[1];
  return v68();
}

uint64_t sub_2518896CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B55DC8);
  v4[6] = swift_task_alloc();
  v4[7] = swift_task_alloc();
  v4[8] = swift_task_alloc();
  uint64_t v5 = sub_25192BE00();
  v4[9] = v5;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  uint64_t v6 = sub_25192BCB0();
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54478);
  v4[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54408);
  v4[16] = swift_task_alloc();
  uint64_t v7 = sub_25192BD10();
  v4[17] = v7;
  v4[18] = *(void *)(v7 - 8);
  v4[19] = swift_task_alloc();
  uint64_t v8 = sub_25192C1E0();
  v4[20] = v8;
  v4[21] = *(void *)(v8 - 8);
  v4[22] = swift_task_alloc();
  sub_25192BEB0();
  uint64_t v9 = (void *)swift_task_alloc();
  v4[23] = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_251889990;
  return MEMORY[0x270F3A2E0](0);
}

uint64_t sub_251889990(uint64_t a1)
{
  *(void *)(*(void *)v1 + 192) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251889A90, 0, 0);
}

uint64_t sub_251889A90()
{
  (*(void (**)(void, void, void))(v0[18] + 16))(v0[19], v0[4], v0[17]);
  sub_25192D460();
  v0[25] = sub_25192D450();
  uint64_t v2 = sub_25192D440();
  return MEMORY[0x270FA2498](sub_251889B40, v2, v1);
}

uint64_t sub_251889B40()
{
  uint64_t v1 = *(void **)(v0 + 192);
  swift_release();
  *(void *)(v0 + 208) = sub_25192BE50();

  return MEMORY[0x270FA2498](sub_251889BB4, 0, 0);
}

uint64_t sub_251889BB4()
{
  if (*(void *)(v0[26] + 16) && (unint64_t v1 = sub_251823860(v0[19]), (v2 & 1) != 0))
  {
    (*(void (**)(void, unint64_t, void))(v0[21] + 16))(v0[16], *(void *)(v0[26] + 56) + *(void *)(v0[21] + 72) * v1, v0[20]);
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v3 = 1;
  }
  uint64_t v5 = v0[20];
  uint64_t v4 = v0[21];
  uint64_t v7 = v0[18];
  uint64_t v6 = v0[19];
  uint64_t v9 = v0[16];
  uint64_t v8 = v0[17];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, v3, 1, v5);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v10(v6, v8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v9, 1, v5) == 1)
  {
    uint64_t v12 = v0[16];
    uint64_t v11 = v0[17];
    uint64_t v14 = v0[4];
    uint64_t v13 = v0[5];
    swift_bridgeObjectRelease();
    sub_2517E16E0(v13, &qword_269B54478);
    v10(v14, v11);
    sub_2517E16E0(v12, &qword_269B54408);
    unint64_t v66 = 0;
    unint64_t v67 = 0;
    uint64_t v60 = 0;
    BOOL v69 = 0;
    unint64_t v68 = 0;
    uint64_t v65 = 0;
    unint64_t v15 = 0;
    goto LABEL_29;
  }
  uint64_t v16 = v0[15];
  uint64_t v17 = v0[5];
  (*(void (**)(void, void, void))(v0[21] + 32))(v0[22], v0[16], v0[20]);
  sub_25188C16C(v17, v16);
  uint64_t v18 = sub_25192B8E0();
  uint64_t v19 = *(void *)(v18 - 8);
  int v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18);
  uint64_t v21 = v0[15];
  int v58 = v20;
  uint64_t v59 = v10;
  if (v20 == 1)
  {
    sub_2517E16E0(v21, &qword_269B54478);
    uint64_t v60 = 0;
  }
  else
  {
    uint64_t v60 = sub_25192B8D0();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v18);
  }
  uint64_t v23 = v0[13];
  uint64_t v22 = v0[14];
  uint64_t v25 = v0[11];
  uint64_t v24 = v0[12];
  uint64_t v26 = v0[9];
  uint64_t v27 = v0[10];
  uint64_t v28 = v0[3];
  sub_25192BCA0();
  sub_25192BC80();
  unint64_t v15 = v29;
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
  sub_25192C130();
  char v57 = sub_25192BDB0();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
  uint64_t v30 = *(void *)(v28 + 16);
  if (v30)
  {
    uint64_t v63 = (unsigned __int16 *)(v0 + 27);
    uint64_t v64 = v0;
    uint64_t v31 = swift_bridgeObjectRetain() + 48;
    uint64_t v65 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25192B740();
      int v32 = *v63 >> 14;
      if (v32)
      {
        if (v32 == 1)
        {
          uint64_t v33 = v64[7];
          sub_251893B78(v33);
          uint64_t v34 = sub_25192C0B0();
          uint64_t v35 = *(void *)(v34 - 8);
          int v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34);
          uint64_t v37 = v64[7];
          if (v36 != 1) {
            goto LABEL_21;
          }
        }
        else
        {
          uint64_t v40 = v64[6];
          sub_251893B78(v40);
          uint64_t v34 = sub_25192C0B0();
          uint64_t v35 = *(void *)(v34 - 8);
          int v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v40, 1, v34);
          uint64_t v37 = v64[6];
          if (v41 != 1)
          {
LABEL_21:
            uint64_t v42 = sub_25192C0A0();
            uint64_t v61 = v43;
            uint64_t v62 = v42;
            (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v37, v34);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v44 = v65;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v44 = sub_25184685C(0, v65[2] + 1, 1, v65);
            }
            unint64_t v46 = v44[2];
            unint64_t v45 = v44[3];
            if (v46 >= v45 >> 1) {
              uint64_t v44 = sub_25184685C((void *)(v45 > 1), v46 + 1, 1, v44);
            }
            void v44[2] = v46 + 1;
            uint64_t v65 = v44;
            int v47 = &v44[2 * v46];
            v47[4] = v62;
            v47[5] = v61;
            goto LABEL_13;
          }
        }
      }
      else
      {
        uint64_t v38 = v64[8];
        sub_251893B78(v38);
        uint64_t v34 = sub_25192C0B0();
        uint64_t v35 = *(void *)(v34 - 8);
        int v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v38, 1, v34);
        uint64_t v37 = v64[8];
        if (v39 != 1) {
          goto LABEL_21;
        }
      }
      sub_2517E16E0(v37, &qword_269B55DC8);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_13:
      v31 += 64;
      if (!--v30)
      {
        uint64_t v48 = v64;
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
    }
  }
  uint64_t v65 = (void *)MEMORY[0x263F8EE78];
  uint64_t v48 = v0;
LABEL_28:
  BOOL v69 = v58 == 1;
  uint64_t v50 = v48[21];
  uint64_t v49 = v48[22];
  uint64_t v51 = v48[20];
  uint64_t v52 = v48[17];
  uint64_t v53 = v48[4];
  sub_2517E16E0(v48[5], &qword_269B54478);
  v59(v53, v52);
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
  swift_bridgeObjectRelease();
  unint64_t v67 = 0x800000025194B780;
  unint64_t v68 = v57 & 1;
  uint64_t v0 = v48;
  unint64_t v66 = 0xD000000000000022;
LABEL_29:
  unint64_t v54 = (unint64_t *)v0[2];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *unint64_t v54 = v66;
  v54[1] = v67;
  v54[2] = v60;
  v54[3] = v69;
  v54[4] = v15;
  v54[5] = v68;
  v54[6] = (unint64_t)v65;
  uint64_t v55 = (uint64_t (*)(void))v0[1];
  return v55();
}

uint64_t sub_25188A340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(unsigned char *)(v7 + 233) = a7;
  *(void *)(v7 + 48) = a5;
  *(void *)(v7 + 56) = a6;
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a4;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B55DC8);
  *(void *)(v7 + 64) = swift_task_alloc();
  *(void *)(v7 + 72) = swift_task_alloc();
  *(void *)(v7 + 80) = swift_task_alloc();
  uint64_t v8 = sub_25192BE00();
  *(void *)(v7 + 88) = v8;
  *(void *)(v7 + 96) = *(void *)(v8 - 8);
  *(void *)(v7 + 104) = swift_task_alloc();
  uint64_t v9 = sub_25192BCB0();
  *(void *)(v7 + 112) = v9;
  *(void *)(v7 + 120) = *(void *)(v9 - 8);
  *(void *)(v7 + 128) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54478);
  *(void *)(v7 + 136) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54408);
  *(void *)(v7 + 144) = swift_task_alloc();
  uint64_t v10 = sub_25192BD10();
  *(void *)(v7 + 152) = v10;
  *(void *)(v7 + 160) = *(void *)(v10 - 8);
  *(void *)(v7 + 168) = swift_task_alloc();
  uint64_t v11 = sub_25192C1E0();
  *(void *)(v7 + 176) = v11;
  *(void *)(v7 + 184) = *(void *)(v11 - 8);
  *(void *)(v7 + 192) = swift_task_alloc();
  sub_25192BEB0();
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v7 + 200) = v12;
  *uint64_t v12 = v7;
  v12[1] = sub_25188A60C;
  return MEMORY[0x270F3A2E0](0);
}

uint64_t sub_25188A60C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 208) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25188A70C, 0, 0);
}

uint64_t sub_25188A70C()
{
  (*(void (**)(void, void, void))(v0[20] + 16))(v0[21], v0[5], v0[19]);
  sub_25192D460();
  v0[27] = sub_25192D450();
  uint64_t v2 = sub_25192D440();
  return MEMORY[0x270FA2498](sub_25188A7BC, v2, v1);
}

uint64_t sub_25188A7BC()
{
  uint64_t v1 = *(void **)(v0 + 208);
  swift_release();
  *(void *)(v0 + 224) = sub_25192BE50();

  return MEMORY[0x270FA2498](sub_25188A830, 0, 0);
}

uint64_t sub_25188A830()
{
  uint64_t v86 = v0;
  uint64_t v1 = v0;
  if (*(void *)(v0[28] + 16) && (unint64_t v2 = sub_251823860(v0[21]), (v3 & 1) != 0))
  {
    (*(void (**)(void, unint64_t, void))(v0[23] + 16))(v0[18], *(void *)(v0[28] + 56) + *(void *)(v0[23] + 72) * v2, v0[22]);
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = 1;
  }
  uint64_t v5 = v0[22];
  uint64_t v6 = v1[23];
  uint64_t v8 = v1[20];
  uint64_t v7 = v1[21];
  uint64_t v10 = v1[18];
  uint64_t v9 = v1[19];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v6 + 56))(v10, v4, 1, v1[22]);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v11(v7, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v10, 1, v5) == 1)
  {
    uint64_t v13 = v1[18];
    uint64_t v12 = v1[19];
    uint64_t v15 = v1[5];
    uint64_t v14 = v1[6];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2517E16E0(v14, &qword_269B54478);
    v11(v15, v12);
    sub_2517E16E0(v13, &qword_269B54408);
    unint64_t v75 = 0;
    unint64_t v76 = 0;
    uint64_t v71 = 0;
    uint64_t v80 = 0;
    uint64_t v81 = 0;
    uint64_t v78 = 0;
    uint64_t v79 = 0;
    uint64_t v73 = 0;
    char v77 = 0;
    uint64_t v16 = 0;
    goto LABEL_34;
  }
  uint64_t v17 = v1[17];
  uint64_t v18 = v1[6];
  (*(void (**)(void, void, void))(v1[23] + 32))(v1[24], v1[18], v1[22]);
  sub_25188C16C(v18, v17);
  uint64_t v19 = sub_25192B8E0();
  uint64_t v20 = *(void *)(v19 - 8);
  int v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19);
  uint64_t v22 = v1[17];
  uint64_t v70 = v11;
  if (v21 == 1)
  {
    sub_2517E16E0(v22, &qword_269B54478);
    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v23 = sub_25192B8D0();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v19);
  }
  uint64_t v71 = v23;
  uint64_t v25 = v1[15];
  uint64_t v24 = v1[16];
  uint64_t v27 = v1[13];
  uint64_t v26 = v1[14];
  uint64_t v82 = v1;
  uint64_t v28 = v1[12];
  uint64_t v29 = v82[11];
  uint64_t v30 = v82[3];
  *((unsigned char *)v82 + 232) = v21 == 1;
  sub_25192BCA0();
  sub_25192BC80();
  uint64_t v16 = v31;
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  sub_25192C130();
  LOBYTE(v24) = sub_25192BDB0();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
  uint64_t v1 = v82;
  *((unsigned char *)v82 + 240) = v24 & 1;
  uint64_t v32 = *(void *)(v30 + 16);
  uint64_t v33 = MEMORY[0x263F8EE78];
  if (v32)
  {
    uint64_t v34 = swift_bridgeObjectRetain() + 48;
    uint64_t v35 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25192B740();
      unsigned int v36 = *((unsigned __int16 *)v82 + 117);
      unsigned int v37 = v36 >> 14;
      if (v36 >> 14)
      {
        int v38 = (v36 >> 8) & 0x3F;
        if (v37 == 1)
        {
          uint64_t v39 = v82[9];
          LOBYTE(v85) = v38;
          sub_251893B78(v39);
          uint64_t v40 = sub_25192C0B0();
          uint64_t v41 = *(void *)(v40 - 8);
          uint64_t v42 = v39;
          uint64_t v1 = v82;
          int v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v42, 1, v40);
          uint64_t v44 = v82[9];
          if (v43 != 1) {
            goto LABEL_21;
          }
        }
        else
        {
          uint64_t v48 = v82[8];
          LOBYTE(v85) = v38;
          sub_251893B78(v48);
          uint64_t v40 = sub_25192C0B0();
          uint64_t v41 = *(void *)(v40 - 8);
          uint64_t v49 = v48;
          uint64_t v1 = v82;
          int v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v49, 1, v40);
          uint64_t v44 = v82[8];
          if (v50 != 1)
          {
LABEL_21:
            uint64_t v51 = sub_25192C0A0();
            uint64_t v72 = v52;
            uint64_t v74 = v51;
            (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v44, v40);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v35 = sub_25184685C(0, v35[2] + 1, 1, v35);
            }
            unint64_t v54 = v35[2];
            unint64_t v53 = v35[3];
            if (v54 >= v53 >> 1) {
              uint64_t v35 = sub_25184685C((void *)(v53 > 1), v54 + 1, 1, v35);
            }
            v35[2] = v54 + 1;
            uint64_t v55 = &v35[2 * v54];
            v55[4] = v74;
            v55[5] = v72;
            goto LABEL_13;
          }
        }
      }
      else
      {
        uint64_t v45 = v82[10];
        LOBYTE(v85) = *((_WORD *)v82 + 117);
        sub_251893B78(v45);
        uint64_t v40 = sub_25192C0B0();
        uint64_t v41 = *(void *)(v40 - 8);
        uint64_t v46 = v45;
        uint64_t v1 = v82;
        int v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v46, 1, v40);
        uint64_t v44 = v82[10];
        if (v47 != 1) {
          goto LABEL_21;
        }
      }
      sub_2517E16E0(v44, &qword_269B55DC8);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_13:
      v34 += 64;
      if (!--v32)
      {
        swift_bridgeObjectRelease();
        uint64_t v33 = MEMORY[0x263F8EE78];
        goto LABEL_28;
      }
    }
  }
  uint64_t v35 = (void *)MEMORY[0x263F8EE78];
LABEL_28:
  uint64_t v56 = v1[4];
  uint64_t v83 = v33;
  uint64_t v57 = *(void *)(v56 + 16);
  if (v57)
  {
    int v58 = (unsigned __int8 *)(v56 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v59 = v1[3];
      unsigned __int8 v60 = *v58++;
      unsigned __int8 v84 = v60;
      sub_2518872E4(&v84, v59, &v85);
      sub_2517EF664(v85);
      --v57;
    }
    while (v57);
    uint64_t v80 = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v61 = v83;
  }
  else
  {
    uint64_t v80 = v35;
    swift_bridgeObjectRelease();
    uint64_t v61 = MEMORY[0x263F8EE78];
  }
  uint64_t v73 = v61;
  uint64_t v63 = v1[23];
  uint64_t v62 = v1[24];
  uint64_t v64 = v1[22];
  uint64_t v65 = v1[19];
  uint64_t v66 = v1[5];
  sub_2517E16E0(v1[6], &qword_269B54478);
  v70(v66, v65);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
  swift_bridgeObjectRelease();
  uint64_t v81 = *((unsigned __int8 *)v1 + 232);
  uint64_t v79 = *((unsigned __int8 *)v1 + 240);
  uint64_t v78 = v1[7];
  char v77 = *((unsigned char *)v1 + 233) & 1;
  unint64_t v75 = 0xD000000000000028;
  unint64_t v76 = 0x800000025194B750;
LABEL_34:
  uint64_t v67 = v1[2];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)uint64_t v67 = v75;
  *(void *)(v67 + 8) = v76;
  *(void *)(v67 + 16) = v71;
  *(void *)(v67 + 24) = v81;
  *(void *)(v67 + 32) = v16;
  *(void *)(v67 + 40) = v79;
  *(void *)(v67 + 48) = v80;
  *(void *)(v67 + 56) = v73;
  *(void *)(v67 + 64) = v78;
  *(unsigned char *)(v67 + 72) = v77;
  unint64_t v68 = (uint64_t (*)(void))v1[1];
  return v68();
}

uint64_t sub_25188B0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = sub_25192CA70();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  uint64_t v5 = sub_25192BE00();
  v3[8] = v5;
  v3[9] = *(void *)(v5 - 8);
  v3[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53478);
  v3[11] = swift_task_alloc();
  uint64_t v6 = sub_25192BCB0();
  v3[12] = v6;
  v3[13] = *(void *)(v6 - 8);
  v3[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54478);
  v3[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53EA8);
  v3[16] = swift_task_alloc();
  uint64_t v7 = sub_25192C9E0();
  v3[17] = v7;
  v3[18] = *(void *)(v7 - 8);
  v3[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B55DA0);
  v3[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54408);
  v3[21] = swift_task_alloc();
  uint64_t v8 = sub_25192C1E0();
  v3[22] = v8;
  v3[23] = *(void *)(v8 - 8);
  v3[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25188B410, 0, 0);
}

uint64_t sub_25188B410()
{
  sub_25192BEB0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB8);
  uint64_t v1 = sub_25192C1D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 72);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_25192DEA0;
  unint64_t v6 = v5 + v4;
  uint64_t v7 = *(void (**)(void))(v2 + 104);
  ((void (*)(unint64_t, void, uint64_t))v7)(v6, *MEMORY[0x263F48398], v1);
  *(void *)(v6 + v3) = 0;
  v7();
  uint64_t v8 = sub_2517F1A08(v5);
  *(void *)(v0 + 200) = v8;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_25188B5D8;
  return MEMORY[0x270F3A2E0](v8);
}

uint64_t sub_25188B5D8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 216) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_25188B6F8, 0, 0);
}

uint64_t sub_25188B6F8()
{
  sub_25192D460();
  *(void *)(v0 + 224) = sub_25192D450();
  uint64_t v2 = sub_25192D440();
  return MEMORY[0x270FA2498](sub_25188B78C, v2, v1);
}

uint64_t sub_25188B78C()
{
  uint64_t v1 = *(void **)(v0 + 216);
  swift_release();
  *(void *)(v0 + 232) = sub_25192BE50();

  return MEMORY[0x270FA2498](sub_25188B800, 0, 0);
}

uint64_t sub_25188B800()
{
  uint64_t v1 = v0[29];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[3];
  *(void *)(swift_task_alloc() + 16) = v3;
  sub_2518B2300((uint64_t (*)(char *))sub_25188C14C, v1, v2);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55DA8);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v2, 1, v4);
  uint64_t v6 = v0[22];
  uint64_t v7 = v0[23];
  uint64_t v9 = v0[20];
  uint64_t v8 = v0[21];
  if (v5 == 1)
  {
    sub_2517E16E0(v0[20], &qword_269B55DA0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v8, 1, 1, v6);
LABEL_4:
    uint64_t v12 = v0[21];
    uint64_t v13 = v0[3];
    sub_2517E16E0(v0[4], &qword_269B54478);
    sub_2517F6CE0(v13);
    uint64_t v14 = &qword_269B54408;
    uint64_t v15 = v12;
LABEL_5:
    sub_2517E16E0(v15, v14);
    swift_bridgeObjectRelease();
    unint64_t v86 = 0;
    unint64_t v88 = 0;
    uint64_t v93 = 0;
    uint64_t v94 = 0;
    BOOL v92 = 0;
    uint64_t v95 = 0;
    uint64_t v90 = 0;
    uint64_t v16 = 0;
    goto LABEL_6;
  }
  uint64_t v10 = *(void (**)(void, uint64_t, void))(v7 + 32);
  v10(v0[21], v9 + *(int *)(v4 + 48), v0[22]);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v8, 0, 1, v6);
  uint64_t v11 = sub_25192BD10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v9, v11);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1) {
    goto LABEL_4;
  }
  v10(v0[24], v0[21], v0[22]);
  uint64_t v20 = sub_25192C180();
  if (*(void *)(v20 + 16)
    && (uint64_t v21 = v0[3],
        uint64_t v22 = type metadata accessor for SceneEntity(),
        unint64_t v23 = sub_251823860(v21 + *(int *)(v22 + 20)),
        (v24 & 1) != 0))
  {
    (*(void (**)(void, unint64_t, void))(v0[18] + 16))(v0[16], *(void *)(v20 + 56) + *(void *)(v0[18] + 72) * v23, v0[17]);
    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v25 = 1;
  }
  uint64_t v26 = v0[17];
  uint64_t v27 = v0[18];
  uint64_t v28 = v0[16];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v28, v25, 1, v26);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v28, 1, v26) == 1)
  {
    uint64_t v30 = v0[23];
    uint64_t v29 = v0[24];
    uint64_t v31 = v0[22];
    uint64_t v32 = v0[16];
    uint64_t v33 = v0[3];
    sub_2517E16E0(v0[4], &qword_269B54478);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    sub_2517F6CE0(v33);
    uint64_t v14 = &qword_269B53EA8;
    uint64_t v15 = v32;
    goto LABEL_5;
  }
  uint64_t v34 = v0[15];
  uint64_t v35 = v0[4];
  (*(void (**)(void, void, void))(v0[18] + 32))(v0[19], v0[16], v0[17]);
  sub_25188C16C(v35, v34);
  uint64_t v36 = sub_25192B8E0();
  uint64_t v37 = *(void *)(v36 - 8);
  int v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v34, 1, v36);
  uint64_t v39 = v0[15];
  if (v38 == 1)
  {
    sub_2517E16E0(v0[15], &qword_269B54478);
    uint64_t v40 = 0;
  }
  else
  {
    uint64_t v40 = sub_25192B8D0();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v39, v36);
  }
  uint64_t v41 = v0[13];
  uint64_t v42 = v0[14];
  uint64_t v44 = v0[11];
  uint64_t v43 = v0[12];
  sub_25192BCA0();
  sub_25192BC80();
  uint64_t v16 = v45;
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v43);
  sub_25192C980();
  uint64_t v46 = sub_25192D4D0();
  uint64_t v47 = *(void *)(v46 - 8);
  int v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v44, 1, v46);
  uint64_t v49 = v0[11];
  uint64_t v94 = v40;
  if (v48 == 1)
  {
    sub_2517E16E0(v49, &qword_269B53478);
    uint64_t v93 = 0;
    uint64_t v95 = 0;
  }
  else
  {
    uint64_t v93 = sub_25192D4C0();
    uint64_t v95 = v50;
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v49, v46);
  }
  BOOL v92 = v38 == 1;
  uint64_t v89 = v0[23];
  uint64_t v91 = v0[22];
  uint64_t v51 = v0[19];
  uint64_t v82 = v0[24];
  uint64_t v83 = v0[18];
  uint64_t v52 = v0[9];
  uint64_t v53 = v0[10];
  uint64_t v55 = v0[7];
  uint64_t v54 = v0[8];
  uint64_t v57 = v0[5];
  uint64_t v56 = v0[6];
  uint64_t v81 = v0[4];
  uint64_t v84 = v0[17];
  uint64_t v85 = v0[3];
  swift_bridgeObjectRetain();
  sub_25192C130();
  char v87 = sub_25192BDB0();
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v53, v54);
  uint64_t v58 = sub_25192C990();
  uint64_t v59 = *(void (**)(uint64_t, void, uint64_t))(v56 + 104);
  v59(v55, *MEMORY[0x263F487A0], v57);
  char v80 = sub_251885E38(v55, v58);
  swift_bridgeObjectRelease();
  unsigned __int8 v60 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
  v60(v55, v57);
  uint64_t v61 = sub_25192C990();
  v59(v55, *MEMORY[0x263F487E8], v57);
  char v79 = sub_251885E38(v55, v61);
  swift_bridgeObjectRelease();
  v60(v55, v57);
  uint64_t v62 = sub_25192C990();
  v59(v55, *MEMORY[0x263F487A8], v57);
  char v78 = sub_251885E38(v55, v62);
  swift_bridgeObjectRelease();
  v60(v55, v57);
  uint64_t v63 = sub_25192C990();
  v59(v55, *MEMORY[0x263F487B8], v57);
  char v77 = sub_251885E38(v55, v63);
  swift_bridgeObjectRelease();
  v60(v55, v57);
  uint64_t v64 = sub_25192C990();
  v59(v55, *MEMORY[0x263F487D0], v57);
  char v76 = sub_251885E38(v55, v64);
  swift_bridgeObjectRelease();
  v60(v55, v57);
  uint64_t v65 = sub_25192C990();
  v59(v55, *MEMORY[0x263F487C8], v57);
  char v66 = sub_251885E38(v55, v65);
  swift_bridgeObjectRelease();
  sub_2517E16E0(v81, &qword_269B54478);
  v60(v55, v57);
  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v51, v84);
  (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v82, v91);
  sub_2517F6CE0(v85);
  swift_bridgeObjectRelease();
  uint64_t v67 = 256;
  if ((v80 & 1) == 0) {
    uint64_t v67 = 0;
  }
  unint64_t v68 = v67 & 0xFFFFFFFFFFFFFFFELL | v87 & 1;
  uint64_t v69 = 0x10000;
  if ((v79 & 1) == 0) {
    uint64_t v69 = 0;
  }
  uint64_t v70 = 0x1000000;
  if ((v78 & 1) == 0) {
    uint64_t v70 = 0;
  }
  unint64_t v71 = v68 | v69 | v70;
  uint64_t v72 = 0x100000000;
  if ((v77 & 1) == 0) {
    uint64_t v72 = 0;
  }
  uint64_t v73 = 0x10000000000;
  if ((v76 & 1) == 0) {
    uint64_t v73 = 0;
  }
  uint64_t v74 = v72 | v73;
  uint64_t v75 = 0x1000000000000;
  if ((v66 & 1) == 0) {
    uint64_t v75 = 0;
  }
  uint64_t v90 = v71 | v74 | v75;
  unint64_t v86 = 0xD000000000000022;
  unint64_t v88 = 0x800000025194B720;
LABEL_6:
  uint64_t v17 = v0[2];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)uint64_t v17 = v86;
  *(void *)(v17 + 8) = v88;
  *(void *)(v17 + 16) = v94;
  *(void *)(v17 + 24) = v92;
  *(void *)(v17 + 32) = v16;
  *(void *)(v17 + 40) = v93;
  *(void *)(v17 + 48) = v95;
  *(unsigned char *)(v17 + 62) = BYTE6(v90);
  *(_WORD *)(v17 + 60) = WORD2(v90);
  *(_DWORD *)(v17 + 56) = v90;
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_25188C14C(uint64_t a1)
{
  return sub_251886488(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_25188C16C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B54478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25188C1D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

ValueMetadata *type metadata accessor for GetSetAttributeValueEvent()
{
  return &type metadata for GetSetAttributeValueEvent;
}

ValueMetadata *type metadata accessor for ToggleAttributeEvent()
{
  return &type metadata for ToggleAttributeEvent;
}

uint64_t initializeWithCopy for GetDeviceInfoEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GetDeviceInfoEvent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for GetDeviceInfoEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GetDeviceInfoEvent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GetDeviceInfoEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GetDeviceInfoEvent()
{
  return &type metadata for GetDeviceInfoEvent;
}

uint64_t _s14HomeAppIntents25GetSetAttributeValueEventVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s14HomeAppIntents25GetSetAttributeValueEventVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  uint64_t v5 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14HomeAppIntents25GetSetAttributeValueEventVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v5;
  return a1;
}

uint64_t _s14HomeAppIntents25GetSetAttributeValueEventVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t _s14HomeAppIntents25GetSetAttributeValueEventVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 73)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25188C6AC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeltaAttributeValueEvent()
{
  return &type metadata for DeltaAttributeValueEvent;
}

uint64_t _s14HomeAppIntents18GetDeviceInfoEventVwxx_0()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ActivateSceneEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_WORD *)(a1 + 60) = *(_WORD *)(a2 + 60);
  *(unsigned char *)(a1 + 62) = *(unsigned char *)(a2 + 62);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActivateSceneEvent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(unsigned char *)(a1 + 59) = *(unsigned char *)(a2 + 59);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(unsigned char *)(a1 + 61) = *(unsigned char *)(a2 + 61);
  *(unsigned char *)(a1 + 62) = *(unsigned char *)(a2 + 62);
  return a1;
}

__n128 __swift_memcpy63_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 47) = *(_OWORD *)(a2 + 47);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ActivateSceneEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(unsigned char *)(a1 + 59) = *(unsigned char *)(a2 + 59);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(unsigned char *)(a1 + 61) = *(unsigned char *)(a2 + 61);
  *(unsigned char *)(a1 + 62) = *(unsigned char *)(a2 + 62);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivateSceneEvent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 63)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivateSceneEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 62) = 0;
    *(_WORD *)(result + 60) = 0;
    *(_DWORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 63) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 63) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivateSceneEvent()
{
  return &type metadata for ActivateSceneEvent;
}

unint64_t sub_25188C9E4()
{
  unint64_t result = qword_269B55DE8;
  if (!qword_269B55DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55DE8);
  }
  return result;
}

unint64_t sub_25188CA3C()
{
  unint64_t result = qword_269B55DF0;
  if (!qword_269B55DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55DF0);
  }
  return result;
}

unint64_t sub_25188CA94()
{
  unint64_t result = qword_269B55DF8;
  if (!qword_269B55DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55DF8);
  }
  return result;
}

unint64_t sub_25188CAEC()
{
  unint64_t result = qword_269B55E00;
  if (!qword_269B55E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55E00);
  }
  return result;
}

unint64_t sub_25188CB44()
{
  unint64_t result = qword_269B55E08;
  if (!qword_269B55E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55E08);
  }
  return result;
}

unint64_t sub_25188CB98()
{
  unint64_t result = qword_269B55E18;
  if (!qword_269B55E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55E18);
  }
  return result;
}

unint64_t sub_25188CBEC()
{
  unint64_t result = qword_269B55E28;
  if (!qword_269B55E28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B55E20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55E28);
  }
  return result;
}

unint64_t sub_25188CC58()
{
  unint64_t result = qword_269B55E38;
  if (!qword_269B55E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55E38);
  }
  return result;
}

unint64_t sub_25188CCAC()
{
  unint64_t result = qword_269B55E48;
  if (!qword_269B55E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55E48);
  }
  return result;
}

unint64_t sub_25188CD00()
{
  unint64_t result = qword_269B55E58;
  if (!qword_269B55E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55E58);
  }
  return result;
}

unint64_t sub_25188CD54()
{
  unint64_t result = qword_269B55E68;
  if (!qword_269B55E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55E68);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ActivateSceneEvent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ActivateSceneEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25188CF04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivateSceneEvent.CodingKeys()
{
  return &type metadata for ActivateSceneEvent.CodingKeys;
}

ValueMetadata *type metadata accessor for DeltaAttributeValueEvent.CodingKeys()
{
  return &type metadata for DeltaAttributeValueEvent.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for GetDeviceInfoEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25188D020);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GetDeviceInfoEvent.CodingKeys()
{
  return &type metadata for GetDeviceInfoEvent.CodingKeys;
}

ValueMetadata *type metadata accessor for ToggleAttributeEvent.CodingKeys()
{
  return &type metadata for ToggleAttributeEvent.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ShowEvent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14HomeAppIntents24DeltaAttributeValueEventV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25188D1C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GetSetAttributeValueEvent.CodingKeys()
{
  return &type metadata for GetSetAttributeValueEvent.CodingKeys;
}

unint64_t sub_25188D200()
{
  unint64_t result = qword_269B55E70;
  if (!qword_269B55E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55E70);
  }
  return result;
}

unint64_t sub_25188D258()
{
  unint64_t result = qword_269B55E78;
  if (!qword_269B55E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55E78);
  }
  return result;
}

unint64_t sub_25188D2B0()
{
  unint64_t result = qword_269B55E80;
  if (!qword_269B55E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55E80);
  }
  return result;
}

unint64_t sub_25188D308()
{
  unint64_t result = qword_269B55E88;
  if (!qword_269B55E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55E88);
  }
  return result;
}

unint64_t sub_25188D360()
{
  unint64_t result = qword_269B55E90;
  if (!qword_269B55E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55E90);
  }
  return result;
}

unint64_t sub_25188D3B8()
{
  unint64_t result = qword_269B55E98;
  if (!qword_269B55E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55E98);
  }
  return result;
}

unint64_t sub_25188D410()
{
  unint64_t result = qword_269B55EA0;
  if (!qword_269B55EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55EA0);
  }
  return result;
}

unint64_t sub_25188D468()
{
  unint64_t result = qword_269B55EA8;
  if (!qword_269B55EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55EA8);
  }
  return result;
}

unint64_t sub_25188D4C0()
{
  unint64_t result = qword_269B55EB0;
  if (!qword_269B55EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55EB0);
  }
  return result;
}

unint64_t sub_25188D518()
{
  unint64_t result = qword_269B55EB8;
  if (!qword_269B55EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55EB8);
  }
  return result;
}

unint64_t sub_25188D570()
{
  unint64_t result = qword_269B55EC0;
  if (!qword_269B55EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55EC0);
  }
  return result;
}

unint64_t sub_25188D5C8()
{
  unint64_t result = qword_269B55EC8;
  if (!qword_269B55EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55EC8);
  }
  return result;
}

unint64_t sub_25188D620()
{
  unint64_t result = qword_269B55ED0;
  if (!qword_269B55ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55ED0);
  }
  return result;
}

unint64_t sub_25188D678()
{
  unint64_t result = qword_269B55ED8;
  if (!qword_269B55ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55ED8);
  }
  return result;
}

unint64_t sub_25188D6D0()
{
  unint64_t result = qword_269B55EE0;
  if (!qword_269B55EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55EE0);
  }
  return result;
}

uint64_t sub_25188D724(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E746E657665 && a2 == 0xE900000000000065;
  if (v2 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65696C63 && a2 == 0xE600000000000000 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65536E6F69746361 && a2 == 0xED0000646E694B74 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000025194B840 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000030 && a2 == 0x800000025194B860 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x800000025194B8A0 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000030 && a2 == 0x800000025194B8D0 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000035 && a2 == 0x800000025194B910 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x800000025194B950 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x800000025194B980)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_25192D810();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_25188DB6C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E746E657665 && a2 == 0xE900000000000065;
  if (v2 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65696C63 && a2 == 0xE600000000000000 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000025194B840 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7954656369766564 && a2 == 0xEB00000000736570)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_25192D810();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_25188DDA4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E746E657665 && a2 == 0xE900000000000065;
  if (v2 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65696C63 && a2 == 0xE600000000000000 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000025194B840 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7954656369766564 && a2 == 0xEB00000000736570 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEE00736570795465 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74756F656D6974 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_25192D810();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_25188E0E0@<X0>(uint64_t a1@<X8>)
{
  if (sub_25192B9E0() || sub_25192B9E0() || sub_25192B9E0() || sub_25192B9E0() || sub_25192B9E0())
  {
    swift_getKeyPath();
    sub_2517F2264();
    sub_25192B890();
    swift_release();
    swift_release();
    uint64_t v2 = type metadata accessor for HomeEntity();
    int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
    uint64_t v4 = v2;
    uint64_t v5 = a1;
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v8 = type metadata accessor for HomeEntity();
    int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v4 = v8;
    uint64_t v5 = a1;
    uint64_t v6 = 1;
  }
  return v3(v5, v6, 1, v4);
}

uint64_t sub_25188E23C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  BOOL v7 = (char *)&v9 - v6;
  sub_25181DE98(a1, (uint64_t)&v9 - v6);
  sub_25181DE98((uint64_t)v7, (uint64_t)v5);
  sub_25192B810();
  return sub_2517E16E0((uint64_t)v7, &qword_269B53BB0);
}

uint64_t sub_25188E310(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  BOOL v7 = (char *)&v9 - v6;
  sub_25181DE98(a1, (uint64_t)&v9 - v6);
  sub_25181DE98((uint64_t)v7, (uint64_t)v5);
  sub_25192B810();
  return sub_2517E16E0((uint64_t)v7, &qword_269B53BB0);
}

uint64_t sub_25188E3E4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  BOOL v7 = (char *)&v9 - v6;
  sub_25181DE98(a1, (uint64_t)&v9 - v6);
  sub_25181DE98((uint64_t)v7, (uint64_t)v5);
  sub_25192B810();
  return sub_2517E16E0((uint64_t)v7, &qword_269B53BB0);
}

uint64_t sub_25188E4B8()
{
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192B800();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_25188E570(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  BOOL v7 = (char *)&v9 - v6;
  sub_25181DE98(a1, (uint64_t)&v9 - v6);
  sub_25181DE98((uint64_t)v7, (uint64_t)v5);
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192B810();
  sub_2517E16E0((uint64_t)v7, &qword_269B53BB0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_25188E6C0()
{
  return sub_25192D210();
}

uint64_t sub_25188E834(uint64_t a1, uint64_t *a2)
{
  v3[2] = a1;
  v3[3] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *a2;
  v3[4] = v5;
  v3[5] = v6;
  return MEMORY[0x270FA2498](sub_25188E8D0, 0, 0);
}

uint64_t sub_25188E8D0()
{
  sub_25188E0E0(v0[4]);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269B59F88 + dword_269B59F88);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[6] = (uint64_t)v1;
  void *v1 = v0;
  v1[1] = sub_25188E980;
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  return v5(v3, v2);
}

uint64_t sub_25188E980(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[7] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_2517E16E0(v4[4], &qword_269B53BB0);
    return MEMORY[0x270FA2498](sub_25188EAFC, 0, 0);
  }
  else
  {
    uint64_t v5 = (void *)v4[2];
    sub_2517E16E0(v4[4], &qword_269B53BB0);
    void *v5 = a1;
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v4[1];
    return v6();
  }
}

uint64_t sub_25188EAFC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25188EB60()
{
  return sub_25192D920();
}

uint64_t sub_25188EBA4()
{
  return sub_25192D920();
}

uint64_t sub_25188EBE0()
{
  return sub_25189218C() & 1;
}

uint64_t sub_25188EC2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a1;
  v3[3] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0);
  v3[4] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25188ECC0, 0, 0);
}

uint64_t sub_25188ECC0()
{
  uint64_t v1 = sub_25192B9E0();
  uint64_t v2 = v0[4];
  if (v1)
  {
    swift_getKeyPath();
    sub_2517F2264();
    sub_25192B890();
    swift_release();
    swift_release();
    uint64_t v3 = type metadata accessor for HomeEntity();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 0, 1, v3);
  }
  else
  {
    uint64_t v4 = type metadata accessor for HomeEntity();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  }
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269B54DD8 + dword_269B54DD8);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  void *v5 = v0;
  v5[1] = sub_25188EE2C;
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[2];
  return v9(v7, v6);
}

uint64_t sub_25188EE2C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(*v2 + 48) = v1;
  swift_task_dealloc();
  sub_2517E16E0(*(void *)(v4 + 32), &qword_269B53BB0);
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_25188EFA4, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v6(a1);
  }
}

uint64_t sub_25188EFA4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25188F008(uint64_t a1, uint64_t *a2)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = *a2;
  uint64_t v5 = *v2;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_2517EDA84;
  return sub_25188EC2C(v4, v7, v5);
}

uint64_t sub_25188F0A8(uint64_t a1, uint64_t a2)
{
  return sub_251890CC4(a1, a2, &qword_269B54398, &qword_269B55FC8);
}

uint64_t sub_25188F0BC()
{
  return sub_25192D210();
}

uint64_t sub_25188F12C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251890D58(a1, a2, a3, &qword_269B54398, &qword_269B55FC8);
}

uint64_t sub_25188F140()
{
  return sub_25192B9F0() & 1;
}

uint64_t sub_25188F188@<X0>(void *a1@<X8>)
{
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192B800();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_25188F244()
{
  return swift_release();
}

uint64_t sub_25188F2F8(_WORD *a1)
{
  *(void *)(v2 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0);
  *(void *)(v2 + 24) = swift_task_alloc();
  *(_WORD *)(v2 + 72) = *a1;
  return MEMORY[0x270FA2498](sub_25188F398, 0, 0);
}

uint64_t sub_25188F398()
{
  __int16 v1 = *(_WORD *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56020);
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 32) = v3;
  *(_OWORD *)(v3 + 16) = xmmword_25192F930;
  *(_WORD *)(v3 + 32) = v1;
  sub_25188F7DC(v2);
  uint64_t v4 = sub_25188F938();
  *(void *)(v0 + 40) = v4;
  uint64_t v5 = sub_25188FA34();
  *(void *)(v0 + 48) = v5;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B56D18 + dword_269B56D18);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_25188F4AC;
  uint64_t v7 = *(void *)(v0 + 24);
  return v9(v3, v7, v4, v5);
}

uint64_t sub_25188F4AC(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  sub_2517E16E0(*(void *)(v4 + 24), &qword_269B53BB0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_25188F690, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v6(a1);
  }
}

uint64_t sub_25188F690()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25188F6F4(uint64_t a1, _WORD *a2)
{
  *(void *)(v3 + 128) = a1;
  long long v5 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v5;
  *(_OWORD *)(v3 + 112) = v2[6];
  long long v6 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v6;
  long long v7 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v7;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 136) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_251893B70;
  return sub_25188F2F8(a2);
}

uint64_t sub_25188F7C0()
{
  return sub_2518901D8();
}

uint64_t sub_25188F7DC@<X0>(uint64_t a1@<X8>)
{
  if (sub_25192B9E0() || sub_25192B9E0() || sub_25192B9E0() || sub_25192B9E0() || sub_25192B9E0())
  {
    swift_getKeyPath();
    sub_2517F2264();
    sub_25192B890();
    swift_release();
    swift_release();
    uint64_t v2 = type metadata accessor for HomeEntity();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
    uint64_t v4 = v2;
    uint64_t v5 = a1;
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v8 = type metadata accessor for HomeEntity();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v4 = v8;
    uint64_t v5 = a1;
    uint64_t v6 = 1;
  }
  return v3(v5, v6, 1, v4);
}

uint64_t sub_25188F938()
{
  if (sub_25192B9E0() || sub_25192B9E0() || sub_25192B9E0() || (uint64_t result = sub_25192B9E0()) != 0)
  {
    swift_getKeyPath();
    sub_25189333C(&qword_269B56008, &qword_269B56010, (void (*)(void))sub_251800C54);
    sub_25192B890();
    swift_release();
    swift_release();
    return v1;
  }
  return result;
}

uint64_t sub_25188FA34()
{
  if (sub_25192B9E0() || sub_25192B9E0() || sub_25192B9E0() || sub_25192B9E0() || (uint64_t result = sub_25192B9E0()) != 0)
  {
    swift_getKeyPath();
    sub_25189333C(&qword_269B55FF8, &qword_269B56000, (void (*)(void))sub_251800B5C);
    sub_25192B890();
    swift_release();
    swift_release();
    return v1;
  }
  return result;
}

uint64_t sub_25188FB4C(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 112) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0);
  *(void *)(v3 + 32) = swift_task_alloc();
  *(void *)(v3 + 40) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25188FBF4, 0, 0);
}

uint64_t sub_25188FBF4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (*(unsigned char *)(v0 + 112))
  {
    sub_25188F7DC(*(void *)(v0 + 32));
    uint64_t v2 = sub_25188F938();
    *(void *)(v0 + 80) = v2;
    uint64_t v3 = sub_25188FA34();
    *(void *)(v0 + 88) = v3;
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B56D10 + dword_269B56D10);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_25188FF28;
    uint64_t v5 = *(void *)(v0 + 32);
  }
  else
  {
    sub_25188F7DC(*(void *)(v0 + 40));
    uint64_t v2 = sub_25188F938();
    *(void *)(v0 + 48) = v2;
    uint64_t v3 = sub_25188FA34();
    *(void *)(v0 + 56) = v3;
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B56D00 + dword_269B56D00);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_25188FD50;
    uint64_t v5 = *(void *)(v0 + 40);
  }
  return v8(v1, v5, v2, v3);
}

uint64_t sub_25188FD50(uint64_t a1)
{
  uint64_t v4 = *(void *)(*v2 + 40);
  uint64_t v5 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  sub_2517E16E0(v4, &qword_269B53BB0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_251890100, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v6(a1);
  }
}

uint64_t sub_25188FF28(uint64_t a1)
{
  uint64_t v4 = *(void *)(*v2 + 32);
  uint64_t v5 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  sub_2517E16E0(v4, &qword_269B53BB0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_25189016C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v6(a1);
  }
}

uint64_t sub_251890100()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25189016C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2518901D8()
{
  return sub_25192D210();
}

uint64_t sub_251890464(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 128) = a1;
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  long long v6 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v6;
  *(_OWORD *)(v3 + 112) = v2[6];
  long long v7 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v7;
  long long v8 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 136) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_251890534;
  return sub_25188FB4C(v4, v5);
}

uint64_t sub_251890534(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 128) = a1;
  }
  long long v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_251890644()
{
  return sub_25192D920();
}

uint64_t sub_251890684()
{
  return sub_25192D920();
}

uint64_t sub_2518906C0()
{
  return sub_251892260() & 1;
}

uint64_t SceneEntityFromNameResolver.resolve(from:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[3] = a2;
  v4[4] = a3;
  v4[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *v3;
  v4[5] = v5;
  v4[6] = v6;
  return MEMORY[0x270FA2498](sub_2518907C4, 0, 0);
}

uint64_t sub_2518907C4()
{
  sub_25192BA80();
  uint64_t v1 = sub_25192B9E0();
  swift_release();
  uint64_t v2 = v0[5];
  if (v1)
  {
    swift_getKeyPath();
    sub_2517F2264();
    sub_25192B890();
    swift_release();
    swift_release();
    uint64_t v3 = type metadata accessor for HomeEntity();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 0, 1, v3);
  }
  else
  {
    uint64_t v4 = type metadata accessor for HomeEntity();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  }
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269B53E40 + dword_269B53E40);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  void *v5 = v0;
  v5[1] = sub_251890948;
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[3];
  return v10(v8, v6, v7);
}

uint64_t sub_251890948(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 40);
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = v1;
  swift_task_dealloc();
  sub_2517E16E0(v4, &qword_269B53BB0);
  if (v1) {
    uint64_t v5 = sub_251890B98;
  }
  else {
    uint64_t v5 = sub_251890A84;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_251890A84()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = type metadata accessor for SceneEntity();
  uint64_t v4 = *(void *)(v3 - 8);
  if (v2)
  {
    sub_2518923CC(v1+ ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80)), v0[2], (uint64_t (*)(void))type metadata accessor for SceneEntity);
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v4 + 56))(v0[2], v5, 1, v3);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_251890B98()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251890C04(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_2517F8D08;
  return SceneEntityFromNameResolver.resolve(from:context:)(a1, v4, v5);
}

uint64_t sub_251890CB0(uint64_t a1, uint64_t a2)
{
  return sub_251890CC4(a1, a2, &qword_269B53B88, &qword_269B55EF0);
}

uint64_t sub_251890CC4(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  return sub_25192D920();
}

uint64_t sub_251890D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251890D58(a1, a2, a3, &qword_269B53B88, &qword_269B55EF0);
}

uint64_t sub_251890D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5)
{
  return sub_25192D920();
}

uint64_t SceneEntityFromSceneTypeResolver.resolve(from:context:)(uint64_t a1, unsigned char *a2)
{
  *(void *)(v3 + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0);
  uint64_t v5 = swift_task_alloc();
  *(unsigned char *)(v3 + 65) = *a2;
  uint64_t v6 = *v2;
  *(void *)(v3 + 24) = v5;
  *(void *)(v3 + 32) = v6;
  return MEMORY[0x270FA2498](sub_251890E74, 0, 0);
}

uint64_t sub_251890E74()
{
  *(unsigned char *)(v0 + 64) = *(unsigned char *)(v0 + 65);
  sub_25192BA80();
  uint64_t v1 = sub_25192B9E0();
  swift_release();
  uint64_t v2 = *(void *)(v0 + 24);
  if (v1)
  {
    swift_getKeyPath();
    sub_2517F2264();
    sub_25192B890();
    swift_release();
    swift_release();
    uint64_t v3 = type metadata accessor for HomeEntity();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 0, 1, v3);
  }
  else
  {
    uint64_t v4 = type metadata accessor for HomeEntity();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  }
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269B53E20 + dword_269B53E20);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v5;
  void *v5 = v0;
  v5[1] = sub_251891004;
  uint64_t v6 = *(void *)(v0 + 24);
  return v8(v0 + 64, v6);
}

uint64_t sub_251891004(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 24);
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = v1;
  swift_task_dealloc();
  sub_2517E16E0(v4, &qword_269B53BB0);
  if (v1) {
    uint64_t v5 = sub_251891250;
  }
  else {
    uint64_t v5 = sub_251891140;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_251891140()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = type metadata accessor for SceneEntity();
  uint64_t v4 = *(void *)(v3 - 8);
  if (v2)
  {
    sub_2518923CC(v1+ ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80)), v0[2], (uint64_t (*)(void))type metadata accessor for SceneEntity);
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v4 + 56))(v0[2], v5, 1, v3);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_251891250()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t _s14HomeAppIntents27SceneEntityFromNameResolverV4hash4intoys6HasherVz_tF_0()
{
  return sub_25192D210();
}

uint64_t static SceneEntityFromSceneTypeResolver.== infix(_:_:)()
{
  return sub_25192B9F0() & 1;
}

uint64_t _s14HomeAppIntents27SceneEntityFromNameResolverV9hashValueSivg_0()
{
  return sub_25192D920();
}

uint64_t sub_2518913F4(uint64_t a1, unsigned char *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_2517EDE20;
  return SceneEntityFromSceneTypeResolver.resolve(from:context:)(a1, a2);
}

uint64_t sub_25189149C()
{
  return sub_25192B9F0() & 1;
}

uint64_t ActivateSceneIntentHomeResolver.resolve(from:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E88);
  v3[7] = swift_task_alloc();
  uint64_t v4 = sub_25192BD10();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2518915D8, 0, 0);
}

uint64_t sub_2518915D8()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  sub_25192BCC0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2517E16E0(v0[7], &qword_269B53E88);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB8);
    uint64_t v4 = sub_25192C1D0();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = *(void *)(v5 + 72);
    unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_25192DEA0;
    unint64_t v9 = v8 + v7;
    uint64_t v10 = *(void (**)(void))(v5 + 104);
    ((void (*)(unint64_t, void, uint64_t))v10)(v9, *MEMORY[0x263F48398], v4);
    *(void *)(v9 + v6) = 0;
    v10();
    uint64_t v11 = sub_2517F1A08(v8);
    v0[16] = v11;
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v0[2] = v11;
    uint64_t v12 = (void *)swift_task_alloc();
    v0[17] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_251891C9C;
    uint64_t v14 = v0[5];
    uint64_t v13 = v0[6];
    return HomeEntityQuery.entities(matching:)(v14, v13);
  }
  else
  {
    uint64_t v17 = v0[9];
    uint64_t v16 = v0[10];
    uint64_t v18 = v0[8];
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 32))(v16, v0[7], v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB8);
    uint64_t v19 = sub_25192C1D0();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(void *)(v20 + 72);
    unint64_t v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_25192DEA0;
    unint64_t v24 = v23 + v22;
    uint64_t v25 = *(void (**)(void))(v20 + 104);
    ((void (*)(unint64_t, void, uint64_t))v25)(v24, *MEMORY[0x263F48398], v19);
    *(void *)(v24 + v21) = 0;
    v25();
    uint64_t v26 = sub_2517F1A08(v23);
    v0[11] = v26;
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v0[3] = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B54C78);
    unint64_t v27 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v28 = swift_allocObject();
    v0[12] = v28;
    *(_OWORD *)(v28 + 16) = xmmword_25192F930;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v17 + 16))(v28 + v27, v16, v18);
    uint64_t v29 = (void *)swift_task_alloc();
    v0[13] = v29;
    *uint64_t v29 = v0;
    v29[1] = sub_251891A00;
    return HomeEntityQuery.entities(for:)(v28);
  }
}

uint64_t sub_251891A00(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_251891EF4;
  }
  else {
    uint64_t v4 = sub_251891B58;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_251891B58()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = type metadata accessor for HomeEntity();
  uint64_t v4 = *(void *)(v3 - 8);
  if (v2)
  {
    sub_2518923CC(v1+ ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80)), v0[4], (uint64_t (*)(void))type metadata accessor for HomeEntity);
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  uint64_t v7 = v0[9];
  uint64_t v6 = v0[10];
  uint64_t v8 = v0[8];
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v4 + 56))(v0[4], v5, 1, v3);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_251891C9C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 144) = a1;
  *(void *)(v3 + 152) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_251891F7C;
  }
  else {
    uint64_t v4 = sub_251891DD0;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_251891DD0()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = type metadata accessor for HomeEntity();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v0[4];
  if (v2)
  {
    sub_2518923CC(v1+ ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80)), v0[4], (uint64_t (*)(void))type metadata accessor for HomeEntity);
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v5, v6, 1, v3);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_251891EF4()
{
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_251891F7C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static ActivateSceneIntentHomeResolver.== infix(_:_:)()
{
  return 1;
}

uint64_t ActivateSceneIntentHomeResolver.hashValue.getter()
{
  return sub_25192D920();
}

uint64_t sub_251892030(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_2517F8D08;
  return ActivateSceneIntentHomeResolver.resolve(from:context:)(a1, v4, v5);
}

uint64_t sub_2518920DC@<X0>(uint64_t *a1@<X8>)
{
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  uint64_t v2 = sub_25192B820();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_25189218C()
{
  if ((sub_25192B9F0() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B543A0);
  if ((sub_25192B9F0() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B543A8);
  if ((sub_25192B9F0() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B543B0);
  if ((sub_25192B9F0() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B543B8);
  return sub_25192B9F0() & 1;
}

uint64_t sub_251892260()
{
  if ((sub_25192B9F0() & 1) != 0
    && (sub_25192B9F0() & 1) != 0
    && (sub_25192B9F0() & 1) != 0
    && (__swift_instantiateConcreteTypeFromMangledName(&qword_269B543A0), (sub_25192B9F0() & 1) != 0)
    && (sub_25192B9F0() & 1) != 0
    && (sub_25192B9F0() & 1) != 0
    && (__swift_instantiateConcreteTypeFromMangledName(&qword_269B543A8), (sub_25192B9F0() & 1) != 0)
    && (sub_25192B9F0() & 1) != 0
    && (sub_25192B9F0() & 1) != 0
    && (__swift_instantiateConcreteTypeFromMangledName(&qword_269B543B0), (sub_25192B9F0() & 1) != 0)
    && (sub_25192B9F0() & 1) != 0
    && (sub_25192B9F0() & 1) != 0
    && (__swift_instantiateConcreteTypeFromMangledName(&qword_269B543B8), (sub_25192B9F0() & 1) != 0))
  {
    return sub_25192B9F0() & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_2518923CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_251892438()
{
  unint64_t result = qword_269B55F08;
  if (!qword_269B55F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55F08);
  }
  return result;
}

uint64_t sub_25189248C()
{
  return sub_25189333C((unint64_t *)&unk_269B55F10, &qword_269B55E20, (void (*)(void))sub_2517F7C18);
}

unint64_t sub_2518924E4()
{
  unint64_t result = qword_269B55F20;
  if (!qword_269B55F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55F20);
  }
  return result;
}

unint64_t sub_25189253C()
{
  unint64_t result = qword_269B55F28;
  if (!qword_269B55F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55F28);
  }
  return result;
}

unint64_t sub_251892598()
{
  unint64_t result = qword_269B55F38;
  if (!qword_269B55F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55F38);
  }
  return result;
}

unint64_t sub_2518925F0()
{
  unint64_t result = qword_269B55F40;
  if (!qword_269B55F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55F40);
  }
  return result;
}

unint64_t sub_251892648()
{
  unint64_t result = qword_269B55F48;
  if (!qword_269B55F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55F48);
  }
  return result;
}

uint64_t sub_25189269C()
{
  return sub_25189333C((unint64_t *)&qword_269B54388, &qword_269B54370, (void (*)(void))sub_251800AA0);
}

unint64_t sub_2518926F0()
{
  unint64_t result = qword_269B55F58;
  if (!qword_269B55F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55F58);
  }
  return result;
}

unint64_t sub_251892748()
{
  unint64_t result = qword_269B55F60;
  if (!qword_269B55F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55F60);
  }
  return result;
}

unint64_t sub_2518927A0()
{
  unint64_t result = qword_269B55F68;
  if (!qword_269B55F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55F68);
  }
  return result;
}

unint64_t sub_2518927F8()
{
  unint64_t result = qword_269B55F78;
  if (!qword_269B55F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55F78);
  }
  return result;
}

unint64_t sub_251892850()
{
  unint64_t result = qword_269B55F80;
  if (!qword_269B55F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55F80);
  }
  return result;
}

uint64_t sub_2518928A4()
{
  return sub_2518928EC(&qword_269B53C28, (void (*)(uint64_t))type metadata accessor for SceneEntity);
}

uint64_t sub_2518928EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251892938()
{
  unint64_t result = qword_269B55F90;
  if (!qword_269B55F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55F90);
  }
  return result;
}

unint64_t sub_251892990()
{
  unint64_t result = qword_269B55F98;
  if (!qword_269B55F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55F98);
  }
  return result;
}

unint64_t sub_2518929E8()
{
  unint64_t result = qword_269B55FA8;
  if (!qword_269B55FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55FA8);
  }
  return result;
}

unint64_t sub_251892A40()
{
  unint64_t result = qword_269B55FB0;
  if (!qword_269B55FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55FB0);
  }
  return result;
}

uint64_t sub_251892A94()
{
  return sub_2518928EC(&qword_269B53BC8, (void (*)(uint64_t))type metadata accessor for HomeEntity);
}

unint64_t sub_251892AE0()
{
  unint64_t result = qword_269B55FC0;
  if (!qword_269B55FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B55FC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SceneEntityFromNameResolver()
{
  return &type metadata for SceneEntityFromNameResolver;
}

ValueMetadata *type metadata accessor for SceneEntityFromSceneTypeResolver()
{
  return &type metadata for SceneEntityFromSceneTypeResolver;
}

ValueMetadata *type metadata accessor for ActivateSceneIntentHomeResolver()
{
  return &type metadata for ActivateSceneIntentHomeResolver;
}

ValueMetadata *type metadata accessor for ZoneEntityFromNameResolver()
{
  return &type metadata for ZoneEntityFromNameResolver;
}

uint64_t destroy for RoomEntityFromNameResolver()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for RoomEntityFromNameResolver(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  return a1;
}

void *assignWithCopy for RoomEntityFromNameResolver(void *a1, void *a2)
{
  *a1 = *a2;
  sub_25192BA80();
  swift_release();
  a1[1] = a2[1];
  sub_25192BA80();
  swift_release();
  a1[2] = a2[2];
  sub_25192BA80();
  swift_release();
  a1[3] = a2[3];
  sub_25192BA80();
  swift_release();
  a1[4] = a2[4];
  sub_25192BA80();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for RoomEntityFromNameResolver(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RoomEntityFromNameResolver(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RoomEntityFromNameResolver(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoomEntityFromNameResolver()
{
  return &type metadata for RoomEntityFromNameResolver;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

ValueMetadata *type metadata accessor for DeviceEntityFromInputTypeResolver()
{
  return &type metadata for DeviceEntityFromInputTypeResolver;
}

uint64_t _s14HomeAppIntents33DeviceEntityFromInputTypeResolverVwxx_0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void *_s14HomeAppIntents33DeviceEntityFromInputTypeResolverVwcp_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  return a1;
}

void *_s14HomeAppIntents33DeviceEntityFromInputTypeResolverVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  sub_25192BA80();
  swift_release();
  a1[1] = a2[1];
  sub_25192BA80();
  swift_release();
  a1[2] = a2[2];
  sub_25192BA80();
  swift_release();
  a1[3] = a2[3];
  sub_25192BA80();
  swift_release();
  a1[4] = a2[4];
  sub_25192BA80();
  swift_release();
  a1[5] = a2[5];
  sub_25192BA80();
  swift_release();
  a1[6] = a2[6];
  sub_25192BA80();
  swift_release();
  a1[7] = a2[7];
  sub_25192BA80();
  swift_release();
  a1[8] = a2[8];
  sub_25192BA80();
  swift_release();
  a1[9] = a2[9];
  sub_25192BA80();
  swift_release();
  a1[10] = a2[10];
  sub_25192BA80();
  swift_release();
  a1[11] = a2[11];
  sub_25192BA80();
  swift_release();
  a1[12] = a2[12];
  sub_25192BA80();
  swift_release();
  a1[13] = a2[13];
  sub_25192BA80();
  swift_release();
  return a1;
}

_OWORD *_s14HomeAppIntents33DeviceEntityFromInputTypeResolverVwta_0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  swift_release();
  a1[2] = a2[2];
  swift_release();
  swift_release();
  a1[3] = a2[3];
  swift_release();
  swift_release();
  a1[4] = a2[4];
  swift_release();
  swift_release();
  a1[5] = a2[5];
  swift_release();
  swift_release();
  a1[6] = a2[6];
  swift_release();
  return a1;
}

uint64_t _s14HomeAppIntents33DeviceEntityFromInputTypeResolverVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_251893274(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceEntityFromAccessoryTypeResolver()
{
  return &type metadata for DeviceEntityFromAccessoryTypeResolver;
}

uint64_t sub_2518932E0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25189333C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2518933A8@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_25192B800();
  *a1 = v3;
  return result;
}

uint64_t sub_2518933E4()
{
  return sub_25192B810();
}

uint64_t sub_251893420@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_25192B800();
  *a1 = v3;
  return result;
}

uint64_t sub_25189345C()
{
  return sub_25192B810();
}

uint64_t sub_251893498@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_25192B800();
  *a1 = v3;
  return result;
}

uint64_t sub_2518934D4()
{
  return sub_25192B810();
}

uint64_t sub_251893510@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_25192B800();
  *a1 = v3;
  return result;
}

uint64_t sub_25189354C()
{
  return sub_25192B810();
}

uint64_t sub_251893588@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_25192B800();
  *a1 = v3;
  return result;
}

uint64_t sub_2518935C4()
{
  return sub_25192B810();
}

uint64_t sub_251893600@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_25192B800();
  *a1 = v3;
  return result;
}

uint64_t sub_25189363C()
{
  return sub_25192B810();
}

uint64_t sub_251893678@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_25192B800();
  *a1 = v3;
  return result;
}

uint64_t sub_2518936B4()
{
  return sub_25192B810();
}

uint64_t sub_2518936F0@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_25192B800();
  *a1 = v3;
  return result;
}

uint64_t sub_25189372C()
{
  return sub_25192B810();
}

uint64_t sub_251893770()
{
  return sub_25192B800();
}

uint64_t sub_251893798()
{
  return sub_25192B800();
}

uint64_t sub_2518937C0()
{
  return sub_25192B800();
}

uint64_t sub_2518937E8()
{
  return sub_25192B800();
}

uint64_t sub_251893810@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54398);
  swift_getKeyPath();
  uint64_t v15 = sub_25192BA10();
  swift_getKeyPath();
  uint64_t v14 = sub_25192BA10();
  swift_getKeyPath();
  uint64_t v13 = sub_25192BA10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B543A0);
  swift_getKeyPath();
  uint64_t v12 = sub_25192BA10();
  swift_getKeyPath();
  uint64_t v11 = sub_25192BA10();
  swift_getKeyPath();
  uint64_t v2 = sub_25192BA10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B543A8);
  swift_getKeyPath();
  uint64_t v3 = sub_25192BA10();
  swift_getKeyPath();
  uint64_t v4 = sub_25192BA10();
  swift_getKeyPath();
  uint64_t v5 = sub_25192BA10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B543B0);
  swift_getKeyPath();
  uint64_t v6 = sub_25192BA10();
  swift_getKeyPath();
  uint64_t v7 = sub_25192BA10();
  swift_getKeyPath();
  uint64_t v8 = sub_25192BA10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B543B8);
  swift_getKeyPath();
  uint64_t v9 = sub_25192BA10();
  swift_getKeyPath();
  uint64_t result = sub_25192BA10();
  *a1 = v15;
  a1[1] = v14;
  a1[2] = v13;
  a1[3] = v12;
  a1[4] = v11;
  a1[5] = v2;
  a1[6] = v3;
  a1[7] = v4;
  a1[8] = v5;
  a1[9] = v6;
  a1[10] = v7;
  a1[11] = v8;
  a1[12] = v9;
  a1[13] = result;
  return result;
}

uint64_t sub_2518939F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25192B820();
  *a1 = result;
  return result;
}

uint64_t sub_251893A1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25192B820();
  *a1 = result;
  return result;
}

uint64_t sub_251893A4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25192B820();
  *a1 = result;
  return result;
}

uint64_t sub_251893A78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25192B820();
  *a1 = result;
  return result;
}

uint64_t sub_251893AA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25192B820();
  *a1 = result;
  return result;
}

uint64_t sub_251893AD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25192B820();
  *a1 = result;
  return result;
}

uint64_t sub_251893B04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25192B820();
  *a1 = result;
  return result;
}

uint64_t sub_251893B30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25192B820();
  *a1 = result;
  return result;
}

uint64_t sub_251893B78@<X0>(uint64_t a1@<X8>)
{
  switch(*v1)
  {
    case 0:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F48028];
      goto LABEL_32;
    case 1:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F48120];
      goto LABEL_32;
    case 4:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F48170];
      goto LABEL_32;
    case 5:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F48190];
      goto LABEL_32;
    case 6:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F480A0];
      goto LABEL_32;
    case 7:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F48200];
      goto LABEL_32;
    case 8:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F481F0];
      goto LABEL_32;
    case 9:
    case 0x17:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F48238];
      goto LABEL_32;
    case 0xA:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F48138];
      goto LABEL_32;
    case 0xB:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F48070];
      goto LABEL_32;
    case 0xC:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F481B0];
      goto LABEL_32;
    case 0xD:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F480C8];
      goto LABEL_32;
    case 0xE:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F47FE8];
      goto LABEL_32;
    case 0xF:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F482B0];
      goto LABEL_32;
    case 0x10:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F48050];
      goto LABEL_32;
    case 0x11:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F480B0];
      goto LABEL_32;
    case 0x12:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F48080];
      goto LABEL_32;
    case 0x13:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F48108];
      goto LABEL_32;
    case 0x14:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F48248];
      goto LABEL_32;
    case 0x16:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F480E0];
      goto LABEL_32;
    case 0x18:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F48060];
      goto LABEL_32;
    case 0x19:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F48148];
      goto LABEL_32;
    case 0x1A:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F48260];
      goto LABEL_32;
    case 0x1B:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F48008];
      goto LABEL_32;
    case 0x1C:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F48168];
      goto LABEL_32;
    case 0x1D:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F48018];
      goto LABEL_32;
    case 0x1E:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F48230];
      goto LABEL_32;
    case 0x1F:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F48270];
      goto LABEL_32;
    case 0x20:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F480F8];
LABEL_32:
      uint64_t v9 = *v3;
      uint64_t v10 = sub_25192C0B0();
      uint64_t v12 = *(void *)(v10 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 104))(a1, v9, v10);
      uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
      uint64_t v7 = a1;
      uint64_t v8 = 0;
      uint64_t v6 = v10;
      break;
    default:
      uint64_t v4 = sub_25192C0B0();
      uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
      uint64_t v6 = v4;
      uint64_t v7 = a1;
      uint64_t v8 = 1;
      break;
  }
  return v5(v7, v8, 1, v6);
}

uint64_t sub_251893E88(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B56030);
}

uint64_t static DeviceType.SingleDeviceType.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B530F8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25192BA40();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269B56030);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static DeviceType.SingleDeviceType.typeDisplayRepresentation.setter(uint64_t a1)
{
  if (qword_269B530F8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25192BA40();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269B56030);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static DeviceType.SingleDeviceType.typeDisplayRepresentation.modify())()
{
  if (qword_269B530F8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_25192BA40();
  __swift_project_value_buffer(v0, (uint64_t)qword_269B56030);
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_2518940F8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B563B0);
  uint64_t v0 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B549A0) - 8);
  uint64_t v1 = *(void *)(v0 + 72);
  unint64_t v2 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_251937EE0;
  uint64_t v4 = (unsigned char *)(v3 + v2);
  *uint64_t v4 = 0;
  sub_25192B910();
  v4[v1] = 1;
  sub_25192B910();
  v4[2 * v1] = 2;
  sub_25192B910();
  v4[3 * v1] = 3;
  sub_25192B910();
  v4[4 * v1] = 4;
  sub_25192B910();
  v4[5 * v1] = 5;
  sub_25192B910();
  v4[6 * v1] = 6;
  sub_25192B910();
  v4[7 * v1] = 7;
  sub_25192B910();
  v4[8 * v1] = 8;
  sub_25192B910();
  v4[9 * v1] = 9;
  sub_25192B910();
  v4[10 * v1] = 10;
  sub_25192B910();
  v4[11 * v1] = 11;
  sub_25192B910();
  v4[12 * v1] = 12;
  sub_25192B910();
  v4[13 * v1] = 13;
  sub_25192B910();
  v4[14 * v1] = 14;
  sub_25192B910();
  v4[15 * v1] = 15;
  sub_25192B910();
  v4[16 * v1] = 16;
  sub_25192B910();
  v4[17 * v1] = 17;
  sub_25192B910();
  v4[18 * v1] = 18;
  sub_25192B910();
  v4[19 * v1] = 19;
  sub_25192B910();
  v4[20 * v1] = 20;
  sub_25192B910();
  v4[21 * v1] = 21;
  sub_25192B910();
  v4[22 * v1] = 22;
  sub_25192B910();
  v4[23 * v1] = 23;
  sub_25192B910();
  v4[24 * v1] = 24;
  sub_25192B910();
  v4[25 * v1] = 25;
  sub_25192B910();
  v4[26 * v1] = 26;
  sub_25192B910();
  v4[27 * v1] = 27;
  sub_25192B910();
  v4[28 * v1] = 28;
  sub_25192B910();
  v4[29 * v1] = 29;
  sub_25192B910();
  v4[30 * v1] = 30;
  sub_25192B910();
  v4[31 * v1] = 31;
  sub_25192B910();
  v4[32 * v1] = 32;
  sub_25192B910();
  unint64_t result = sub_25182155C(v3);
  qword_269B56048 = result;
  return result;
}

uint64_t static DeviceType.SingleDeviceType.caseDisplayRepresentations.getter()
{
  if (qword_269B53100 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static DeviceType.SingleDeviceType.caseDisplayRepresentations.setter(uint64_t a1)
{
  if (qword_269B53100 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_269B56048 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static DeviceType.SingleDeviceType.caseDisplayRepresentations.modify())()
{
  if (qword_269B53100 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_25189498C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_25192C0B0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(a1, v4);
  if (result == *MEMORY[0x263F48028])
  {
    char v7 = 0;
  }
  else if (result == *MEMORY[0x263F48120])
  {
    char v7 = 1;
  }
  else if (result == *MEMORY[0x263F48090] {
         || result == *MEMORY[0x263F481C0]
  }
         || result == *MEMORY[0x263F481C8])
  {
    char v7 = 3;
  }
  else if (result == *MEMORY[0x263F48170])
  {
    char v7 = 4;
  }
  else if (result == *MEMORY[0x263F48190])
  {
    char v7 = 5;
  }
  else if (result == *MEMORY[0x263F480A0])
  {
    char v7 = 6;
  }
  else if (result == *MEMORY[0x263F48200])
  {
    char v7 = 7;
  }
  else
  {
    if (result == *MEMORY[0x263F481F0]) {
      goto LABEL_23;
    }
    if (result == *MEMORY[0x263F48238])
    {
      char v7 = 9;
      goto LABEL_70;
    }
    if (result == *MEMORY[0x263F48138])
    {
      char v7 = 10;
      goto LABEL_70;
    }
    if (result == *MEMORY[0x263F48070])
    {
      char v7 = 11;
      goto LABEL_70;
    }
    if (result == *MEMORY[0x263F481B0])
    {
      char v7 = 12;
      goto LABEL_70;
    }
    if (result == *MEMORY[0x263F480C8])
    {
      char v7 = 13;
      goto LABEL_70;
    }
    if (result == *MEMORY[0x263F48148])
    {
      char v7 = 25;
      goto LABEL_70;
    }
    if (result == *MEMORY[0x263F47FE8])
    {
      char v7 = 14;
      goto LABEL_70;
    }
    if (result == *MEMORY[0x263F48050])
    {
      char v7 = 16;
      goto LABEL_70;
    }
    if (result == *MEMORY[0x263F482B0])
    {
      char v7 = 15;
      goto LABEL_70;
    }
    if (result == *MEMORY[0x263F480B0])
    {
      char v7 = 17;
      goto LABEL_70;
    }
    if (result == *MEMORY[0x263F48080])
    {
      char v7 = 18;
      goto LABEL_70;
    }
    if (result == *MEMORY[0x263F48108])
    {
      char v7 = 19;
      goto LABEL_70;
    }
    if (result == *MEMORY[0x263F48248])
    {
      char v7 = 20;
      goto LABEL_70;
    }
    if (result == *MEMORY[0x263F480E0])
    {
      char v7 = 22;
      goto LABEL_70;
    }
    if (result == *MEMORY[0x263F48060])
    {
      char v7 = 24;
      goto LABEL_70;
    }
    if (result == *MEMORY[0x263F48260])
    {
      char v7 = 26;
      goto LABEL_70;
    }
    if (result == *MEMORY[0x263F48008])
    {
      char v7 = 27;
      goto LABEL_70;
    }
    if (result == *MEMORY[0x263F48168])
    {
      char v7 = 28;
      goto LABEL_70;
    }
    if (result == *MEMORY[0x263F48018])
    {
      char v7 = 29;
      goto LABEL_70;
    }
    if (result == *MEMORY[0x263F48230])
    {
      char v7 = 30;
      goto LABEL_70;
    }
    if (result == *MEMORY[0x263F480F0])
    {
LABEL_23:
      char v7 = 8;
    }
    else if (result == *MEMORY[0x263F48270])
    {
      char v7 = 31;
    }
    else if (result == *MEMORY[0x263F480F8])
    {
      char v7 = 32;
    }
    else
    {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
      char v7 = 33;
    }
  }
LABEL_70:
  *a2 = v7;
  return result;
}

HomeAppIntents::DeviceType::SingleDeviceType_optional __swiftcall DeviceType.SingleDeviceType.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_25192D820();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 15;
  switch(v3)
  {
    case 0:
      goto LABEL_17;
    case 1:
      char v5 = 1;
      goto LABEL_17;
    case 2:
      char v5 = 2;
      goto LABEL_17;
    case 3:
      char v5 = 3;
      goto LABEL_17;
    case 4:
      char v5 = 4;
      goto LABEL_17;
    case 5:
      char v5 = 5;
      goto LABEL_17;
    case 6:
      char v5 = 6;
      goto LABEL_17;
    case 7:
      char v5 = 7;
      goto LABEL_17;
    case 8:
      char v5 = 8;
      goto LABEL_17;
    case 9:
      char v5 = 9;
      goto LABEL_17;
    case 10:
      char v5 = 10;
      goto LABEL_17;
    case 11:
      char v5 = 11;
      goto LABEL_17;
    case 12:
      char v5 = 12;
      goto LABEL_17;
    case 13:
      char v5 = 13;
      goto LABEL_17;
    case 14:
      char v5 = 14;
LABEL_17:
      char v6 = v5;
      break;
    case 15:
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    case 22:
      char v6 = 22;
      break;
    case 23:
      char v6 = 23;
      break;
    case 24:
      char v6 = 24;
      break;
    case 25:
      char v6 = 25;
      break;
    case 26:
      char v6 = 26;
      break;
    case 27:
      char v6 = 27;
      break;
    case 28:
      char v6 = 28;
      break;
    case 29:
      char v6 = 29;
      break;
    case 30:
      char v6 = 30;
      break;
    case 31:
      char v6 = 31;
      break;
    case 32:
      char v6 = 32;
      break;
    default:
      char v6 = 33;
      break;
  }
  *unint64_t v2 = v6;
  return result;
}

void *static DeviceType.SingleDeviceType.allCases.getter()
{
  return &unk_270250E98;
}

uint64_t DeviceType.SingleDeviceType.rawValue.getter()
{
  uint64_t result = 0x6669727550726961;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0xD000000000000010;
      break;
    case 2:
      uint64_t result = 0x5654656C707061;
      break;
    case 3:
      uint64_t result = 0x6172656D6163;
      break;
    case 4:
      uint64_t result = 0xD000000000000013;
      break;
    case 5:
      uint64_t result = 0xD000000000000014;
      break;
    case 6:
      uint64_t result = 0x53746361746E6F63;
      break;
    case 7:
      uint64_t result = 1919905636;
      break;
    case 8:
      uint64_t result = 7233894;
      break;
    case 9:
      uint64_t result = 0x746563756166;
      break;
    case 0xA:
      uint64_t result = 0x6F44656761726167;
      break;
    case 0xB:
      uint64_t result = 0x6F43726574616568;
      break;
    case 0xC:
      uint64_t result = 0xD000000000000016;
      break;
    case 0xD:
      uint64_t result = 0x79746964696D7568;
      break;
    case 0xE:
      uint64_t result = 0x736E65536B61656CLL;
      break;
    case 0xF:
      uint64_t result = 0x6C7562746867696CLL;
      break;
    case 0x10:
      uint64_t v2 = 0x53746867696CLL;
      goto LABEL_27;
    case 0x11:
      uint64_t result = 1801678700;
      break;
    case 0x12:
      uint64_t result = 0x65536E6F69746F6DLL;
      break;
    case 0x13:
      uint64_t result = 0x636E61707563636FLL;
      break;
    case 0x14:
      uint64_t result = 0x74656C74756FLL;
      break;
    case 0x15:
      uint64_t result = 0xD000000000000012;
      break;
    case 0x16:
      uint64_t result = 0x7974697275636573;
      break;
    case 0x17:
      uint64_t result = 0x7265776F6873;
      break;
    case 0x18:
      uint64_t v2 = 0x53656B6F6D73;
LABEL_27:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6E65000000000000;
      break;
    case 0x19:
      uint64_t result = 0x656C6B6E69727073;
      break;
    case 0x1A:
      uint64_t result = 0x686374697773;
      break;
    case 0x1B:
      uint64_t result = 0x69736976656C6574;
      break;
    case 0x1C:
      uint64_t result = 0xD000000000000011;
      break;
    case 0x1D:
      uint64_t result = 0x74736F6D72656874;
      break;
    case 0x1E:
      uint64_t result = 0x65766C6176;
      break;
    case 0x1F:
      uint64_t result = 0x776F646E6977;
      break;
    case 0x20:
      uint64_t result = 0x6F43776F646E6977;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2518953E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2517DA930(*a1, *a2);
}

uint64_t sub_2518953EC()
{
  return sub_25192D920();
}

uint64_t sub_251895454()
{
  DeviceType.SingleDeviceType.rawValue.getter();
  sub_25192D300();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2518954B8()
{
  return sub_25192D920();
}

HomeAppIntents::DeviceType::SingleDeviceType_optional sub_25189551C(Swift::String *a1)
{
  return DeviceType.SingleDeviceType.init(rawValue:)(*a1);
}

uint64_t sub_251895528@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DeviceType.SingleDeviceType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_251895550()
{
  return sub_25192D380();
}

uint64_t sub_2518955B0()
{
  return sub_25192D370();
}

uint64_t sub_251895600@<X0>(uint64_t a1@<X8>)
{
  return sub_251869E80(&qword_269B530F8, (uint64_t)qword_269B56030, a1);
}

uint64_t sub_251895624(uint64_t a1)
{
  unint64_t v2 = sub_25189918C();
  return MEMORY[0x270EE0C40](a1, v2);
}

uint64_t sub_251895670()
{
  if (qword_269B53100 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2518956E8(uint64_t a1)
{
  unint64_t v2 = sub_2518996EC();
  return MEMORY[0x270EE1C28](a1, v2);
}

void sub_251895734(void *a1@<X8>)
{
  *a1 = &unk_270250E98;
}

uint64_t DeviceType.description.getter()
{
  if (*v0 >> 14)
  {
    sub_25192D620();
    sub_25192D310();
    sub_25192D680();
    sub_25192D310();
  }
  sub_25192D680();
  return 0;
}

uint64_t sub_251895918()
{
  unsigned int v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56020);
  uint64_t inited = swift_initStackObject();
  if ((v1 & 0xC000) == 0x8000)
  {
    *(_OWORD *)(inited + 16) = xmmword_25192DE90;
    *(_WORD *)(inited + 32) = v1;
    *(_WORD *)(inited + 34) = v1;
    *(_WORD *)(inited + 36) = (v1 >> 8) & 0x3F;
  }
  else
  {
    *(_OWORD *)(inited + 16) = xmmword_25192F930;
    *(_WORD *)(inited + 32) = v1;
  }
  uint64_t v3 = sub_2517F6A58(inited);
  swift_setDeallocating();
  return v3;
}

uint64_t static DeviceType.allIntentValueTypes.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B536E8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_25192DE90;
  unint64_t v1 = sub_251899090();
  *(void *)(v0 + 32) = &type metadata for DeviceType.SingleTypeCase;
  *(void *)(v0 + 40) = v1;
  unint64_t v2 = sub_2518990E4();
  *(void *)(v0 + 48) = &type metadata for DeviceType.ComponentTypeCase;
  *(void *)(v0 + 56) = v2;
  unint64_t v3 = sub_251899138();
  *(void *)(v0 + 64) = &type metadata for DeviceType.UserDefinedTypeCase;
  *(void *)(v0 + 72) = v3;
  return v0;
}

unint64_t DeviceType.asIntentValue.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_25192BC50();
  MEMORY[0x270FA5388](v3 - 8);
  char v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unsigned int v6 = *v1;
  if (v6 >> 14)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B56088);
    sub_25192BC30();
    unint64_t v7 = sub_25189918C();
    uint64_t v8 = MEMORY[0x2533A4F60](v5, v7);
    sub_25192BC30();
    uint64_t v9 = MEMORY[0x2533A4F60](v5, v7);
    if (v6 >> 14 == 1)
    {
      v13[13] = v6;
      sub_25192B750();
      v13[12] = BYTE1(v6) & 0x3F;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for DeviceType.ComponentTypeCase;
      unint64_t result = sub_2518990E4();
    }
    else
    {
      v13[15] = v6;
      sub_25192B750();
      v13[14] = BYTE1(v6) & 0x3F;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for DeviceType.UserDefinedTypeCase;
      unint64_t result = sub_251899138();
    }
    a1[4] = result;
    *a1 = v8;
    a1[1] = v9;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B56088);
    sub_25192BC30();
    unint64_t v11 = sub_25189918C();
    uint64_t v12 = MEMORY[0x2533A4F60](v5, v11);
    v13[11] = v6;
    sub_25192B750();
    a1[3] = (uint64_t)&type metadata for DeviceType.SingleTypeCase;
    unint64_t result = sub_251899090();
    a1[4] = result;
    *a1 = v12;
  }
  return result;
}

uint64_t static DeviceType.defaultResolverSpecification.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56098);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v4 = sub_2518991E0();
  sub_25192BAA0();
  sub_251899234();
  sub_25192BAA0();
  sub_251892648();
  sub_25192BAC0();
  v6[0] = v4;
  v6[1] = &type metadata for DeviceType.SingleTypeCase.Resolver;
  sub_25192BAB0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_251895DF8(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A538);
}

uint64_t sub_251895E1C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_251895E40, 0, 0);
}

uint64_t sub_251895E40()
{
  uint64_t v1 = *(_WORD **)(v0 + 16);
  sub_25192B740();
  _WORD *v1 = *(unsigned __int8 *)(v0 + 32);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251895EB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_25192BC50();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56088);
  sub_25192BC30();
  unint64_t v5 = sub_25189918C();
  uint64_t result = MEMORY[0x2533A4F60](v4, v5);
  *a1 = result;
  return result;
}

uint64_t sub_251895F68(uint64_t a1)
{
  unint64_t v2 = sub_25189B760();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_251895FB4()
{
  sub_25189B760();
  return sub_25192B600();
}

uint64_t sub_251896000@<X0>(uint64_t a1@<X8>)
{
  return sub_251869E80(&qword_269B53108, (uint64_t)qword_269B5A538, a1);
}

uint64_t sub_251896024(uint64_t a1)
{
  unint64_t v2 = sub_251899938();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_251896070()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B539B8);
  MEMORY[0x270FA5388](v0 - 8);
  unint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B539C0);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25192BC50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  if (qword_269B53108 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_25192BA40();
  __swift_project_value_buffer(v8, (uint64_t)qword_269B5A538);
  swift_beginAccess();
  sub_25192BA30();
  swift_endAccess();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  uint64_t v9 = sub_25192B920();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v2, 1, 1, v9);
  return sub_25192B940();
}

uint64_t sub_251896294(uint64_t a1)
{
  unint64_t v2 = sub_251899B84();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518962E0(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A550);
}

uint64_t sub_25189630C(uint64_t a1, _OWORD *a2)
{
  *(void *)(v2 + 16) = a1;
  *(_OWORD *)(v2 + 24) = *a2;
  return MEMORY[0x270FA2498](sub_251896334, 0, 0);
}

uint64_t sub_251896334()
{
  uint64_t v1 = *(_WORD **)(v0 + 16);
  sub_25192B740();
  __int16 v2 = *(unsigned __int8 *)(v0 + 40);
  sub_25192B740();
  _WORD *v1 = v2 | (*(unsigned __int8 *)(v0 + 41) << 8) | 0x4000;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_2518963D8(uint64_t a1)
{
  unint64_t v2 = sub_25189B70C();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_251896424()
{
  sub_25189B70C();
  return sub_25192B600();
}

uint64_t sub_251896470@<X0>(uint64_t a1@<X8>)
{
  return sub_251869E80(&qword_269B53110, (uint64_t)qword_269B5A550, a1);
}

uint64_t sub_251896494(uint64_t a1)
{
  unint64_t v2 = sub_251899D24();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518964E0(uint64_t a1, uint64_t a2)
{
  return sub_251896850(a1, a2, &qword_269B53110, (uint64_t)qword_269B5A550);
}

uint64_t sub_251896504(uint64_t a1)
{
  unint64_t v2 = sub_251899F70();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_251896550(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A568);
}

uint64_t sub_251896574(uint64_t a1, _OWORD *a2)
{
  *(void *)(v2 + 16) = a1;
  *(_OWORD *)(v2 + 24) = *a2;
  return MEMORY[0x270FA2498](sub_25189659C, 0, 0);
}

uint64_t sub_25189659C()
{
  uint64_t v1 = *(_WORD **)(v0 + 16);
  sub_25192B740();
  __int16 v2 = *(unsigned __int8 *)(v0 + 40);
  sub_25192B740();
  _WORD *v1 = v2 | (*(unsigned __int8 *)(v0 + 41) << 8) | 0x8000;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_25189663C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_25192BC50();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56088);
  sub_25192BC30();
  unint64_t v5 = sub_25189918C();
  uint64_t v6 = MEMORY[0x2533A4F60](v4, v5);
  sub_25192BC30();
  uint64_t result = MEMORY[0x2533A4F60](v4, v5);
  *a1 = v6;
  a1[1] = result;
  return result;
}

uint64_t sub_251896724(uint64_t a1)
{
  unint64_t v2 = sub_25189B6B8();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_251896770()
{
  sub_25189B6B8();
  return sub_25192B600();
}

uint64_t sub_2518967BC@<X0>(uint64_t a1@<X8>)
{
  return sub_251869E80(&qword_269B53118, (uint64_t)qword_269B5A568, a1);
}

uint64_t sub_2518967E0(uint64_t a1)
{
  unint64_t v2 = sub_25189A10C();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_25189682C(uint64_t a1, uint64_t a2)
{
  return sub_251896850(a1, a2, &qword_269B53118, (uint64_t)qword_269B5A568);
}

uint64_t sub_251896850(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B539B8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B539C0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25192BC50();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_25192BA40();
  __swift_project_value_buffer(v14, a4);
  swift_beginAccess();
  sub_25192BA30();
  swift_endAccess();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  uint64_t v15 = sub_25192B920();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
  return sub_25192B940();
}

uint64_t sub_251896A70(uint64_t a1)
{
  unint64_t v2 = sub_25189A35C();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_251896ABC()
{
  uint64_t v1 = 0x6E656E6F706D6F63;
  if (*v0 != 1) {
    uint64_t v1 = 0x6966654472657375;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7954656C676E6973;
  }
}

uint64_t sub_251896B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25189B174(a1, a2);
  *a3 = result;
  return result;
}

void sub_251896B5C(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_251896B68(uint64_t a1)
{
  unint64_t v2 = sub_251899288();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251896BA4(uint64_t a1)
{
  unint64_t v2 = sub_251899288();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251896BE0()
{
  if (*v0) {
    return 0x6E656E6F706D6F63;
  }
  else {
    return 0x657079546E69616DLL;
  }
}

uint64_t sub_251896C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25189B320(a1, a2);
  *a3 = result;
  return result;
}

void sub_251896C50(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_251896C5C(uint64_t a1)
{
  unint64_t v2 = sub_251899384();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251896C98(uint64_t a1)
{
  unint64_t v2 = sub_251899384();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251896CD4()
{
  return 12383;
}

uint64_t sub_251896CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_25192D810();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_251896D60(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_251896D6C(uint64_t a1)
{
  unint64_t v2 = sub_2518993D8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251896DA8(uint64_t a1)
{
  unint64_t v2 = sub_2518993D8();
  return MEMORY[0x270FA00B8](a1, v2);
}

BOOL sub_251896DE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_251896DFC()
{
  if (*v0) {
    return 0x6966654472657375;
  }
  else {
    return 0x6C616E696769726FLL;
  }
}

uint64_t sub_251896E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25189B438(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251896E74(uint64_t a1)
{
  unint64_t v2 = sub_2518992DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251896EB0(uint64_t a1)
{
  unint64_t v2 = sub_2518992DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DeviceType.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B560B0);
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v27 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B560B8);
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B560C0);
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B560C8);
  uint64_t v31 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251899288();
  sub_25192D940();
  if (!(v15 >> 14))
  {
    char v33 = 0;
    sub_2518993D8();
    sub_25192D750();
    char v32 = v15;
    sub_251899330();
    sub_25192D7D0();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v14, v12);
  }
  if (v15 >> 14 == 1)
  {
    char v38 = 1;
    sub_251899384();
    sub_25192D750();
    char v37 = v15;
    char v36 = 0;
    sub_251899330();
    uint64_t v16 = v26;
    uint64_t v17 = v30;
    sub_25192D7D0();
    if (!v17)
    {
      char v35 = BYTE1(v15) & 0x3F;
      char v34 = 1;
      sub_25192D7D0();
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v16);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v14, v12);
  }
  char v43 = 2;
  sub_2518992DC();
  uint64_t v19 = v27;
  uint64_t v20 = v12;
  sub_25192D750();
  char v42 = v15;
  char v41 = 0;
  sub_251899330();
  uint64_t v22 = v29;
  uint64_t v21 = v30;
  sub_25192D7D0();
  if (!v21)
  {
    char v40 = BYTE1(v15) & 0x3F;
    char v39 = 1;
    sub_25192D7D0();
  }
  (*(void (**)(char *, uint64_t))(v28 + 8))(v19, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v14, v20);
}

uint64_t DeviceType.init(from:)@<X0>(void *a1@<X0>, _WORD *a2@<X8>)
{
  char v32 = a2;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B560F8);
  uint64_t v37 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  char v38 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56100);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  uint64_t v36 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56108);
  uint64_t v34 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56110);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  char v39 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_251899288();
  uint64_t v16 = v40;
  sub_25192D930();
  if (v16) {
    goto LABEL_8;
  }
  uint64_t v17 = v38;
  uint64_t v40 = v12;
  uint64_t v18 = sub_25192D740();
  if (*(void *)(v18 + 16) != 1)
  {
    uint64_t v20 = sub_25192D660();
    swift_allocError();
    uint64_t v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B56118);
    void *v22 = &type metadata for DeviceType;
    sub_25192D720();
    sub_25192D650();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v14, v11);
LABEL_8:
    uint64_t v29 = (uint64_t)v39;
    return __swift_destroy_boxed_opaque_existential_0(v29);
  }
  if (*(unsigned char *)(v18 + 32))
  {
    if (*(unsigned char *)(v18 + 32) == 1)
    {
      char v47 = 1;
      sub_251899384();
      sub_25192D710();
      char v45 = 0;
      sub_25189942C();
      uint64_t v19 = v35;
      sub_25192D730();
      uint64_t v26 = v7;
      __int16 v27 = v46;
      char v43 = 1;
      sub_25192D730();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v19);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v14, v11);
      __int16 v28 = v27 | (v44 << 8) | 0x4000;
    }
    else
    {
      char v52 = 2;
      sub_2518992DC();
      sub_25192D710();
      char v50 = 0;
      sub_25189942C();
      uint64_t v24 = v17;
      uint64_t v25 = v33;
      sub_25192D730();
      __int16 v30 = v51;
      char v48 = 1;
      sub_25192D730();
      uint64_t v31 = v40;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v25);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v11);
      __int16 v28 = v30 | (v49 << 8) | 0x8000;
    }
    uint64_t v29 = (uint64_t)v39;
  }
  else
  {
    char v42 = 0;
    sub_2518993D8();
    sub_25192D710();
    sub_25189942C();
    sub_25192D730();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v8);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v14, v11);
    __int16 v28 = v41;
    uint64_t v29 = (uint64_t)v39;
  }
  *char v32 = v28;
  return __swift_destroy_boxed_opaque_existential_0(v29);
}

uint64_t sub_251897AC4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B536E8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_25192DE90;
  unint64_t v1 = sub_251899090();
  *(void *)(v0 + 32) = &type metadata for DeviceType.SingleTypeCase;
  *(void *)(v0 + 40) = v1;
  unint64_t v2 = sub_2518990E4();
  *(void *)(v0 + 48) = &type metadata for DeviceType.ComponentTypeCase;
  *(void *)(v0 + 56) = v2;
  unint64_t v3 = sub_251899138();
  *(void *)(v0 + 64) = &type metadata for DeviceType.UserDefinedTypeCase;
  *(void *)(v0 + 72) = v3;
  return v0;
}

uint64_t sub_251897B44@<X0>(void *a1@<X0>, _WORD *a2@<X8>)
{
  return DeviceType.init(from:)(a1, a2);
}

uint64_t sub_251897B5C(void *a1)
{
  return DeviceType.encode(to:)(a1);
}

uint64_t DeviceType.hash(into:)()
{
  if (*v0 >> 14)
  {
    sub_25192D8E0();
    DeviceType.SingleDeviceType.rawValue.getter();
    sub_25192D300();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25192D8E0();
  }
  DeviceType.SingleDeviceType.rawValue.getter();
  sub_25192D300();
  return swift_bridgeObjectRelease();
}

uint64_t DeviceType.hashValue.getter()
{
  return sub_25192D920();
}

uint64_t sub_251897CCC()
{
  return sub_25192D920();
}

uint64_t sub_251897D1C()
{
  return sub_25192D920();
}

uint64_t sub_251897D68(uint64_t a1, char a2)
{
  if (a2) {
    uint64_t v2 = 0x203A73656D616ELL;
  }
  else {
    uint64_t v2 = 0x203A736469;
  }
  uint64_t v4 = v2;
  MEMORY[0x2533A6BA0](a1, MEMORY[0x263F8D310]);
  sub_25192D310();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_251897DE0()
{
  return sub_251897D68(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_251897DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  int v6 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!v6) {
      return 0;
    }
  }
  else if (v6)
  {
    return 0;
  }
  return sub_251898B7C(v4, v5);
}

unint64_t sub_251897E1C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_25192BC50();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56380);
  swift_bridgeObjectRetain();
  sub_25192BC30();
  uint64_t v9 = MEMORY[0x2533A4FB0](v8);
  v12[1] = a1;
  sub_25192B750();
  if (a2)
  {
    uint64_t v10 = &type metadata for DeviceEntityResolverInputType.NamesCase;
    unint64_t result = sub_25189B610();
  }
  else
  {
    uint64_t v10 = &type metadata for DeviceEntityResolverInputType.IdsCase;
    unint64_t result = sub_25189B664();
  }
  a3[3] = (uint64_t)v10;
  a3[4] = result;
  *a3 = v9;
  return result;
}

uint64_t sub_251897F18()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56368);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  unint64_t v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v4 = sub_25189B568();
  sub_25192BAA0();
  sub_25189B5BC();
  sub_25192BAA0();
  sub_2518927A0();
  sub_25192BAC0();
  v6[0] = v4;
  v6[1] = &type metadata for DeviceEntityResolverInputType.IdsCase.Resolver;
  sub_25192BAB0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_25189808C(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A580);
}

uint64_t sub_2518980A4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518980C8, 0, 0);
}

uint64_t sub_2518980C8()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(unsigned char *)(v1 + 8) = 0;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_251898140(uint64_t a1)
{
  unint64_t v2 = sub_25189C05C();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_25189818C()
{
  sub_25189C05C();
  return sub_25192B600();
}

uint64_t sub_2518981D8()
{
  uint64_t v0 = qword_269B56050;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_251898210@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53120, (uint64_t)qword_269B5A580, a1);
}

uint64_t sub_251898234(uint64_t a1)
{
  unint64_t v2 = sub_25189BB34();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_251898284(uint64_t a1)
{
  unint64_t v2 = sub_25189B8E4();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518982D0(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A598);
}

uint64_t sub_2518982EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_25192BC50();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56380);
  sub_25192BC30();
  uint64_t result = MEMORY[0x2533A4FB0](v4);
  *a1 = result;
  return result;
}

uint64_t sub_25189838C(uint64_t a1)
{
  unint64_t v2 = sub_25189C008();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518983D8()
{
  sub_25189C008();
  return sub_25192B600();
}

uint64_t sub_251898424()
{
  uint64_t v0 = qword_269B56060;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_25189845C@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53128, (uint64_t)qword_269B5A598, a1);
}

uint64_t sub_251898480(uint64_t a1)
{
  unint64_t v2 = sub_25189BE8C();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518984CC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B539B8);
  MEMORY[0x270FA5388](v0 - 8);
  unint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B539C0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25192BC50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  sub_25192BC30();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  uint64_t v8 = sub_25192B920();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
  return sub_25192B940();
}

uint64_t sub_25189868C(uint64_t a1)
{
  unint64_t v2 = sub_25189BC3C();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518986D8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B536E8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_25192DEA0;
  unint64_t v1 = sub_25189B664();
  *(void *)(v0 + 32) = &type metadata for DeviceEntityResolverInputType.IdsCase;
  *(void *)(v0 + 40) = v1;
  unint64_t v2 = sub_25189B610();
  *(void *)(v0 + 48) = &type metadata for DeviceEntityResolverInputType.NamesCase;
  *(void *)(v0 + 56) = v2;
  return v0;
}

unint64_t sub_251898740@<X0>(uint64_t *a1@<X8>)
{
  return sub_251897E1C(*(void *)v1, *(unsigned char *)(v1 + 8), a1);
}

uint64_t sub_251898750(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a1 + 32);
    uint64_t v4 = (unsigned __int8 *)(a2 + 32);
    while (1)
    {
      unsigned int v7 = *v3++;
      uint64_t v6 = v7;
      unsigned int v9 = *v4++;
      uint64_t v8 = v9;
      unint64_t v10 = 0xE600000000000000;
      uint64_t v11 = 0x6D7575636176;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE300000000000000;
          uint64_t v11 = 7368557;
          break;
        case 2:
          uint64_t v11 = 0x61656C4370656564;
          unint64_t v10 = 0xE90000000000006ELL;
          break;
        case 3:
          unint64_t v10 = 0xE400000000000000;
          uint64_t v11 = 1869903201;
          break;
        case 4:
          unint64_t v10 = 0xE500000000000000;
          uint64_t v11 = 0x7465697571;
          break;
        case 5:
          unint64_t v10 = 0xE500000000000000;
          uint64_t v11 = 0x6B63697571;
          break;
        case 6:
          unint64_t v10 = 0xE800000000000000;
          uint64_t v11 = 0x6573696F4E776F6CLL;
          break;
        case 7:
          unint64_t v10 = 0xE900000000000079;
          uint64_t v11 = 0x6772656E45776F6CLL;
          break;
        case 8:
          unint64_t v10 = 0xE800000000000000;
          uint64_t v11 = 0x6E6F697461636176;
          break;
        case 9:
          unint64_t v10 = 0xE500000000000000;
          uint64_t v11 = 0x746867696ELL;
          break;
        case 10:
          unint64_t v10 = 0xE300000000000000;
          uint64_t v11 = 7954788;
          break;
        case 11:
          unint64_t v10 = 0xE300000000000000;
          uint64_t v11 = 7235949;
          break;
        case 12:
          unint64_t v10 = 0xE300000000000000;
          uint64_t v11 = 7889261;
          break;
        default:
          break;
      }
      unint64_t v12 = 0xE600000000000000;
      uint64_t v13 = 0x6D7575636176;
      switch(v8)
      {
        case 1:
          unint64_t v12 = 0xE300000000000000;
          if (v11 == 7368557) {
            goto LABEL_43;
          }
          goto LABEL_5;
        case 2:
          unint64_t v12 = 0xE90000000000006ELL;
          if (v11 != 0x61656C4370656564) {
            goto LABEL_5;
          }
          goto LABEL_43;
        case 3:
          unint64_t v12 = 0xE400000000000000;
          if (v11 != 1869903201) {
            goto LABEL_5;
          }
          goto LABEL_43;
        case 4:
          unint64_t v12 = 0xE500000000000000;
          uint64_t v14 = 1701410161;
          goto LABEL_37;
        case 5:
          unint64_t v12 = 0xE500000000000000;
          if (v11 != 0x6B63697571) {
            goto LABEL_5;
          }
          goto LABEL_43;
        case 6:
          unint64_t v12 = 0xE800000000000000;
          if (v11 != 0x6573696F4E776F6CLL) {
            goto LABEL_5;
          }
          goto LABEL_43;
        case 7:
          unint64_t v12 = 0xE900000000000079;
          if (v11 != 0x6772656E45776F6CLL) {
            goto LABEL_5;
          }
          goto LABEL_43;
        case 8:
          unint64_t v12 = 0xE800000000000000;
          if (v11 != 0x6E6F697461636176) {
            goto LABEL_5;
          }
          goto LABEL_43;
        case 9:
          unint64_t v12 = 0xE500000000000000;
          uint64_t v14 = 1751607662;
LABEL_37:
          if (v11 != (v14 & 0xFFFF0000FFFFFFFFLL | 0x7400000000)) {
            goto LABEL_5;
          }
          goto LABEL_43;
        case 10:
          unint64_t v12 = 0xE300000000000000;
          if (v11 != 7954788) {
            goto LABEL_5;
          }
          goto LABEL_43;
        case 11:
          unint64_t v12 = 0xE300000000000000;
          uint64_t v13 = 7235949;
          goto LABEL_42;
        case 12:
          unint64_t v12 = 0xE300000000000000;
          if (v11 != 7889261) {
            goto LABEL_5;
          }
          goto LABEL_43;
        default:
LABEL_42:
          if (v11 != v13) {
            goto LABEL_5;
          }
LABEL_43:
          if (v10 == v12)
          {
            swift_bridgeObjectRelease_n();
            if (!--v2) {
              return 1;
            }
          }
          else
          {
LABEL_5:
            char v5 = sub_25192D810();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v5 & 1) == 0) {
              return 0;
            }
            if (!--v2) {
              return 1;
            }
          }
          break;
      }
    }
  }
  return 1;
}

BOOL sub_251898B10(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  uint64_t v3 = a1 + 5;
  uint64_t v4 = a2 + 5;
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    uint64_t v8 = *v3++;
    uint64_t v7 = v8;
    uint64_t v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_251898B7C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_25192D810(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a1 + 7;
    for (unint64_t i = a2 + 7; ; i += 2)
    {
      BOOL v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_25192D810() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t _s14HomeAppIntents10DeviceTypeO2eeoiySbAC_ACtFZ_0(unsigned __int16 *a1, unsigned __int16 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  if (v2 >> 14)
  {
    if (v2 >> 14 == 1)
    {
      if (v3 >> 14)
      {
        if (v3 >> 14 == 1)
        {
          uint64_t v4 = DeviceType.SingleDeviceType.rawValue.getter();
          uint64_t v6 = v5;
          if (v4 != DeviceType.SingleDeviceType.rawValue.getter() || v6 != v7)
          {
            char v33 = sub_25192D810();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            char v25 = 0;
            if ((v33 & 1) == 0) {
              return v25 & 1;
            }
            goto LABEL_40;
          }
          goto LABEL_26;
        }
        goto LABEL_17;
      }
      goto LABEL_14;
    }
    if (v3 >> 14)
    {
      if (v3 >> 14 != 1)
      {
        uint64_t v20 = DeviceType.SingleDeviceType.rawValue.getter();
        uint64_t v22 = v21;
        if (v20 != DeviceType.SingleDeviceType.rawValue.getter() || v22 != v23)
        {
          char v34 = sub_25192D810();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v25 = 0;
          if ((v34 & 1) == 0) {
            return v25 & 1;
          }
          goto LABEL_40;
        }
        goto LABEL_26;
      }
LABEL_17:
      uint64_t v12 = DeviceType.SingleDeviceType.rawValue.getter();
      uint64_t v14 = v13;
      if (v12 == DeviceType.SingleDeviceType.rawValue.getter() && v14 == v15)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v26 = sub_25192D810();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v25 = 0;
        if ((v26 & 1) == 0) {
          return v25 & 1;
        }
      }
      uint64_t v27 = DeviceType.SingleDeviceType.rawValue.getter();
      uint64_t v29 = v28;
      if (v27 != DeviceType.SingleDeviceType.rawValue.getter() || v29 != v30)
      {
        char v32 = sub_25192D810();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v25 = 0;
        if ((v32 & 1) == 0) {
          return v25 & 1;
        }
        goto LABEL_40;
      }
      goto LABEL_26;
    }
    goto LABEL_21;
  }
  if (v3 >> 14)
  {
    if (v3 >> 14 == 1)
    {
LABEL_14:
      uint64_t v8 = DeviceType.SingleDeviceType.rawValue.getter();
      uint64_t v10 = v9;
      if (v8 != DeviceType.SingleDeviceType.rawValue.getter() || v10 != v11)
      {
        char v24 = sub_25192D810();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v25 = 0;
        if ((v24 & 1) == 0) {
          return v25 & 1;
        }
        goto LABEL_40;
      }
LABEL_26:
      swift_bridgeObjectRelease_n();
      goto LABEL_40;
    }
LABEL_21:
    uint64_t v16 = DeviceType.SingleDeviceType.rawValue.getter();
    uint64_t v18 = v17;
    if (v16 != DeviceType.SingleDeviceType.rawValue.getter() || v18 != v19)
    {
      char v31 = sub_25192D810();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v25 = 0;
      if ((v31 & 1) == 0) {
        return v25 & 1;
      }
      goto LABEL_40;
    }
    goto LABEL_26;
  }
LABEL_40:
  uint64_t v35 = DeviceType.SingleDeviceType.rawValue.getter();
  uint64_t v37 = v36;
  if (v35 == DeviceType.SingleDeviceType.rawValue.getter() && v37 == v38) {
    char v25 = 1;
  }
  else {
    char v25 = sub_25192D810();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v25 & 1;
}

unint64_t sub_251899090()
{
  unint64_t result = qword_269B56070;
  if (!qword_269B56070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56070);
  }
  return result;
}

unint64_t sub_2518990E4()
{
  unint64_t result = qword_269B56078;
  if (!qword_269B56078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56078);
  }
  return result;
}

unint64_t sub_251899138()
{
  unint64_t result = qword_269B56080;
  if (!qword_269B56080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56080);
  }
  return result;
}

unint64_t sub_25189918C()
{
  unint64_t result = qword_269B56090;
  if (!qword_269B56090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56090);
  }
  return result;
}

unint64_t sub_2518991E0()
{
  unint64_t result = qword_269B560A0;
  if (!qword_269B560A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B560A0);
  }
  return result;
}

unint64_t sub_251899234()
{
  unint64_t result = qword_269B560A8;
  if (!qword_269B560A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B560A8);
  }
  return result;
}

unint64_t sub_251899288()
{
  unint64_t result = qword_269B560D0;
  if (!qword_269B560D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B560D0);
  }
  return result;
}

unint64_t sub_2518992DC()
{
  unint64_t result = qword_269B560D8;
  if (!qword_269B560D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B560D8);
  }
  return result;
}

unint64_t sub_251899330()
{
  unint64_t result = qword_269B560E0;
  if (!qword_269B560E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B560E0);
  }
  return result;
}

unint64_t sub_251899384()
{
  unint64_t result = qword_269B560E8;
  if (!qword_269B560E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B560E8);
  }
  return result;
}

unint64_t sub_2518993D8()
{
  unint64_t result = qword_269B560F0;
  if (!qword_269B560F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B560F0);
  }
  return result;
}

unint64_t sub_25189942C()
{
  unint64_t result = qword_269B56120;
  if (!qword_269B56120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56120);
  }
  return result;
}

unint64_t sub_251899484()
{
  unint64_t result = qword_269B56128;
  if (!qword_269B56128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56128);
  }
  return result;
}

unint64_t sub_2518994DC()
{
  unint64_t result = qword_269B56130;
  if (!qword_269B56130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56130);
  }
  return result;
}

unint64_t sub_251899534()
{
  unint64_t result = qword_269B56138;
  if (!qword_269B56138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56138);
  }
  return result;
}

unint64_t sub_25189958C()
{
  unint64_t result = qword_269B56140;
  if (!qword_269B56140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56140);
  }
  return result;
}

unint64_t sub_2518995E4()
{
  unint64_t result = qword_269B56148;
  if (!qword_269B56148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56148);
  }
  return result;
}

unint64_t sub_25189963C()
{
  unint64_t result = qword_269B56150;
  if (!qword_269B56150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56150);
  }
  return result;
}

unint64_t sub_251899694()
{
  unint64_t result = qword_269B56158;
  if (!qword_269B56158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56158);
  }
  return result;
}

unint64_t sub_2518996EC()
{
  unint64_t result = qword_269B56160;
  if (!qword_269B56160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56160);
  }
  return result;
}

uint64_t sub_251899740()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_251899794()
{
  unint64_t result = qword_269B56168;
  if (!qword_269B56168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56168);
  }
  return result;
}

unint64_t sub_2518997EC()
{
  unint64_t result = qword_269B56170;
  if (!qword_269B56170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56170);
  }
  return result;
}

uint64_t sub_251899844()
{
  return sub_2517E2990(&qword_269B56178, &qword_269B56180);
}

unint64_t sub_251899884()
{
  unint64_t result = qword_269B56188;
  if (!qword_269B56188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56188);
  }
  return result;
}

unint64_t sub_2518998E0()
{
  unint64_t result = qword_269B56198;
  if (!qword_269B56198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56198);
  }
  return result;
}

unint64_t sub_251899938()
{
  unint64_t result = qword_269B561A0;
  if (!qword_269B561A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B561A0);
  }
  return result;
}

unint64_t sub_251899990()
{
  unint64_t result = qword_269B561A8;
  if (!qword_269B561A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B561A8);
  }
  return result;
}

unint64_t sub_2518999E8()
{
  unint64_t result = qword_269B561B0;
  if (!qword_269B561B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B561B0);
  }
  return result;
}

unint64_t sub_251899A40()
{
  unint64_t result = qword_269B561B8;
  if (!qword_269B561B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B561B8);
  }
  return result;
}

uint64_t sub_251899A94()
{
  return sub_2517E2990(&qword_269B561C0, &qword_269B561C8);
}

unint64_t sub_251899AD4()
{
  unint64_t result = qword_269B561D0;
  if (!qword_269B561D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B561D0);
  }
  return result;
}

unint64_t sub_251899B2C()
{
  unint64_t result = qword_269B561D8;
  if (!qword_269B561D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B561D8);
  }
  return result;
}

unint64_t sub_251899B84()
{
  unint64_t result = qword_269B561E0;
  if (!qword_269B561E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B561E0);
  }
  return result;
}

uint64_t sub_251899BD8()
{
  return sub_2517E2990(&qword_269B561E8, &qword_269B561F0);
}

unint64_t sub_251899C18()
{
  unint64_t result = qword_269B561F8;
  if (!qword_269B561F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B561F8);
  }
  return result;
}

unint64_t sub_251899C70()
{
  unint64_t result = qword_269B56200;
  if (!qword_269B56200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56200);
  }
  return result;
}

unint64_t sub_251899CCC()
{
  unint64_t result = qword_269B56210;
  if (!qword_269B56210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56210);
  }
  return result;
}

unint64_t sub_251899D24()
{
  unint64_t result = qword_269B56218;
  if (!qword_269B56218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56218);
  }
  return result;
}

unint64_t sub_251899D7C()
{
  unint64_t result = qword_269B56220;
  if (!qword_269B56220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56220);
  }
  return result;
}

unint64_t sub_251899DD4()
{
  unint64_t result = qword_269B56228;
  if (!qword_269B56228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56228);
  }
  return result;
}

unint64_t sub_251899E2C()
{
  unint64_t result = qword_269B56230;
  if (!qword_269B56230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56230);
  }
  return result;
}

uint64_t sub_251899E80()
{
  return sub_2517E2990(&qword_269B56238, &qword_269B56240);
}

unint64_t sub_251899EC0()
{
  unint64_t result = qword_269B56248;
  if (!qword_269B56248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56248);
  }
  return result;
}

unint64_t sub_251899F18()
{
  unint64_t result = qword_269B56250;
  if (!qword_269B56250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56250);
  }
  return result;
}

unint64_t sub_251899F70()
{
  unint64_t result = qword_269B56258;
  if (!qword_269B56258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56258);
  }
  return result;
}

uint64_t sub_251899FC4()
{
  return sub_2517E2990(&qword_269B56260, &qword_269B56268);
}

unint64_t sub_25189A004()
{
  unint64_t result = qword_269B56270;
  if (!qword_269B56270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56270);
  }
  return result;
}

unint64_t sub_25189A05C()
{
  unint64_t result = qword_269B56278;
  if (!qword_269B56278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56278);
  }
  return result;
}

unint64_t sub_25189A0B4()
{
  unint64_t result = qword_269B56288;
  if (!qword_269B56288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56288);
  }
  return result;
}

unint64_t sub_25189A10C()
{
  unint64_t result = qword_269B56290;
  if (!qword_269B56290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56290);
  }
  return result;
}

unint64_t sub_25189A164()
{
  unint64_t result = qword_269B56298;
  if (!qword_269B56298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56298);
  }
  return result;
}

unint64_t sub_25189A1BC()
{
  unint64_t result = qword_269B562A0;
  if (!qword_269B562A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B562A0);
  }
  return result;
}

unint64_t sub_25189A214()
{
  unint64_t result = qword_269B562A8;
  if (!qword_269B562A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B562A8);
  }
  return result;
}

uint64_t sub_25189A268()
{
  return sub_2517E2990(&qword_269B562B0, &qword_269B562B8);
}

unint64_t sub_25189A2A8()
{
  unint64_t result = qword_269B562C0;
  if (!qword_269B562C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B562C0);
  }
  return result;
}

unint64_t sub_25189A300()
{
  unint64_t result = qword_269B562C8;
  if (!qword_269B562C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B562C8);
  }
  return result;
}

unint64_t sub_25189A35C()
{
  unint64_t result = qword_269B562D0;
  if (!qword_269B562D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B562D0);
  }
  return result;
}

uint64_t sub_25189A3B0()
{
  return sub_2517E2990(&qword_269B562D8, &qword_269B562E0);
}

unint64_t sub_25189A3F0()
{
  unint64_t result = qword_269B562E8;
  if (!qword_269B562E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B562E8);
  }
  return result;
}

uint64_t sub_25189A444()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_25189A464()
{
  unint64_t result = qword_269B562F0;
  if (!qword_269B562F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B562F0);
  }
  return result;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DeviceType(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE) {
    goto LABEL_17;
  }
  if (a2 + 65522 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65522 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65522;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65522;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65522;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 4) & 0xC | (*a1 >> 14)) ^ 0xF;
  if (v6 >= 0xD) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for DeviceType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65522 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65522 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD)
  {
    unsigned int v6 = ((a2 - 14) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 14;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25189A640);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(_WORD *)unint64_t result = 16 * (-(__int16)a2 & 0xC) - ((_WORD)a2 << 14);
        break;
    }
  }
  return result;
}

uint64_t sub_25189A668(unsigned __int16 *a1)
{
  return *a1 >> 14;
}

_WORD *sub_25189A674(_WORD *result)
{
  *result &= 0x3FFFu;
  return result;
}

_WORD *sub_25189A684(_WORD *result, __int16 a2)
{
  *unint64_t result = *result & 0x3F3F | (a2 << 14);
  return result;
}

ValueMetadata *type metadata accessor for DeviceType()
{
  return &type metadata for DeviceType;
}

uint64_t getEnumTagSinglePayload for DeviceType.SingleDeviceType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE0) {
    goto LABEL_17;
  }
  if (a2 + 32 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 32) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 32;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 32;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 32;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x21;
  int v8 = v6 - 33;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DeviceType.SingleDeviceType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 32 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 32) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDF)
  {
    unsigned int v6 = ((a2 - 224) >> 8) + 1;
    *unint64_t result = a2 + 32;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25189A804);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 32;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceType.SingleDeviceType()
{
  return &type metadata for DeviceType.SingleDeviceType;
}

uint64_t sub_25189A83C()
{
  return sub_2517E2990(&qword_269B562F8, &qword_269B56300);
}

ValueMetadata *type metadata accessor for DeviceType.UserDefinedTypeCase.Resolver()
{
  return &type metadata for DeviceType.UserDefinedTypeCase.Resolver;
}

uint64_t initializeBufferWithCopyOfBuffer for DeviceEntityResolverInputType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for DeviceEntityResolverInputType()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for DeviceEntityResolverInputType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DeviceEntityResolverInputType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceEntityResolverInputType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceEntityResolverInputType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_25189A9D4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_25189A9DC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceEntityResolverInputType()
{
  return &type metadata for DeviceEntityResolverInputType;
}

unsigned char *storeEnumTagSinglePayload for DeviceType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25189AAC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceType.CodingKeys()
{
  return &type metadata for DeviceType.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DeviceType.SingleTypeCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25189AB98);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceType.SingleTypeCodingKeys()
{
  return &type metadata for DeviceType.SingleTypeCodingKeys;
}

ValueMetadata *type metadata accessor for DeviceType.ComponentTypeCodingKeys()
{
  return &type metadata for DeviceType.ComponentTypeCodingKeys;
}

unsigned char *_s14HomeAppIntents10DeviceTypeO23ComponentTypeCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25189ACB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceType.UserDefinedTypeCodingKeys()
{
  return &type metadata for DeviceType.UserDefinedTypeCodingKeys;
}

ValueMetadata *type metadata accessor for DeviceType.ComponentTypeCase.Resolver()
{
  return &type metadata for DeviceType.ComponentTypeCase.Resolver;
}

ValueMetadata *type metadata accessor for DeviceType.SingleTypeCase.Resolver()
{
  return &type metadata for DeviceType.SingleTypeCase.Resolver;
}

ValueMetadata *type metadata accessor for DeviceType.UserDefinedTypeCase()
{
  return &type metadata for DeviceType.UserDefinedTypeCase;
}

ValueMetadata *type metadata accessor for DeviceType.ComponentTypeCase()
{
  return &type metadata for DeviceType.ComponentTypeCase;
}

ValueMetadata *type metadata accessor for DeviceType.SingleTypeCase()
{
  return &type metadata for DeviceType.SingleTypeCase;
}

unint64_t sub_25189AD3C()
{
  unint64_t result = qword_269B56308;
  if (!qword_269B56308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56308);
  }
  return result;
}

unint64_t sub_25189AD94()
{
  unint64_t result = qword_269B56310;
  if (!qword_269B56310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56310);
  }
  return result;
}

unint64_t sub_25189ADEC()
{
  unint64_t result = qword_269B56318;
  if (!qword_269B56318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56318);
  }
  return result;
}

unint64_t sub_25189AE44()
{
  unint64_t result = qword_269B56320;
  if (!qword_269B56320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56320);
  }
  return result;
}

uint64_t sub_25189AE98()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_25189AEB8()
{
  unint64_t result = qword_269B56328;
  if (!qword_269B56328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56328);
  }
  return result;
}

unint64_t sub_25189AF10()
{
  unint64_t result = qword_269B56330;
  if (!qword_269B56330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56330);
  }
  return result;
}

unint64_t sub_25189AF68()
{
  unint64_t result = qword_269B56338;
  if (!qword_269B56338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56338);
  }
  return result;
}

unint64_t sub_25189AFC0()
{
  unint64_t result = qword_269B56340;
  if (!qword_269B56340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56340);
  }
  return result;
}

unint64_t sub_25189B018()
{
  unint64_t result = qword_269B56348;
  if (!qword_269B56348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56348);
  }
  return result;
}

unint64_t sub_25189B070()
{
  unint64_t result = qword_269B56350;
  if (!qword_269B56350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56350);
  }
  return result;
}

unint64_t sub_25189B0C8()
{
  unint64_t result = qword_269B56358;
  if (!qword_269B56358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56358);
  }
  return result;
}

unint64_t sub_25189B120()
{
  unint64_t result = qword_269B56360;
  if (!qword_269B56360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56360);
  }
  return result;
}

uint64_t sub_25189B174(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7954656C676E6973 && a2 == 0xEA00000000006570;
  if (v2 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656E6F706D6F63 && a2 == 0xED00006570795474 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6966654472657375 && a2 == 0xEF6570795464656ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_25192D810();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_25189B320(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657079546E69616DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656E6F706D6F63 && a2 == 0xED00006570795474)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25192D810();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25189B438(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C616E696769726FLL && a2 == 0xEC00000065707954;
  if (v2 || (sub_25192D810() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6966654472657375 && a2 == 0xEF6570795464656ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25192D810();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_25189B568()
{
  unint64_t result = qword_269B56370;
  if (!qword_269B56370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56370);
  }
  return result;
}

unint64_t sub_25189B5BC()
{
  unint64_t result = qword_269B56378;
  if (!qword_269B56378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56378);
  }
  return result;
}

unint64_t sub_25189B610()
{
  unint64_t result = qword_269B56388;
  if (!qword_269B56388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56388);
  }
  return result;
}

unint64_t sub_25189B664()
{
  unint64_t result = qword_269B56390;
  if (!qword_269B56390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56390);
  }
  return result;
}

unint64_t sub_25189B6B8()
{
  unint64_t result = qword_269B56398;
  if (!qword_269B56398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56398);
  }
  return result;
}

unint64_t sub_25189B70C()
{
  unint64_t result = qword_269B563A0;
  if (!qword_269B563A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B563A0);
  }
  return result;
}

unint64_t sub_25189B760()
{
  unint64_t result = qword_269B563A8;
  if (!qword_269B563A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B563A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceEntityResolverInputType.NamesCase()
{
  return &type metadata for DeviceEntityResolverInputType.NamesCase;
}

ValueMetadata *type metadata accessor for DeviceEntityResolverInputType.NamesCase.Resolver()
{
  return &type metadata for DeviceEntityResolverInputType.NamesCase.Resolver;
}

ValueMetadata *type metadata accessor for DeviceEntityResolverInputType.IdsCase()
{
  return &type metadata for DeviceEntityResolverInputType.IdsCase;
}

ValueMetadata *type metadata accessor for DeviceEntityResolverInputType.IdsCase.Resolver()
{
  return &type metadata for DeviceEntityResolverInputType.IdsCase.Resolver;
}

uint64_t sub_25189B7F4()
{
  return sub_2517E2990(&qword_269B563B8, &qword_269B563C0);
}

unint64_t sub_25189B834()
{
  unint64_t result = qword_269B563C8;
  if (!qword_269B563C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B563C8);
  }
  return result;
}

unint64_t sub_25189B88C()
{
  unint64_t result = qword_269B563D0;
  if (!qword_269B563D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B563D0);
  }
  return result;
}

unint64_t sub_25189B8E4()
{
  unint64_t result = qword_269B563D8;
  if (!qword_269B563D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B563D8);
  }
  return result;
}

unint64_t sub_25189B93C()
{
  unint64_t result = qword_269B563E0;
  if (!qword_269B563E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B563E0);
  }
  return result;
}

unint64_t sub_25189B994()
{
  unint64_t result = qword_269B563E8;
  if (!qword_269B563E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B563E8);
  }
  return result;
}

unint64_t sub_25189B9F0()
{
  unint64_t result = qword_269B563F0;
  if (!qword_269B563F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B563F0);
  }
  return result;
}

unint64_t sub_25189BA48()
{
  unint64_t result = qword_269B563F8;
  if (!qword_269B563F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B563F8);
  }
  return result;
}

unint64_t sub_25189BAA0()
{
  unint64_t result = qword_269B56400;
  if (!qword_269B56400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56400);
  }
  return result;
}

uint64_t sub_25189BAF4()
{
  return sub_2517E2990(&qword_269B56408, &qword_269B56410);
}

unint64_t sub_25189BB34()
{
  unint64_t result = qword_269B56418;
  if (!qword_269B56418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56418);
  }
  return result;
}

unint64_t sub_25189BB8C()
{
  unint64_t result = qword_269B56420;
  if (!qword_269B56420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56420);
  }
  return result;
}

unint64_t sub_25189BBE4()
{
  unint64_t result = qword_269B56428;
  if (!qword_269B56428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56428);
  }
  return result;
}

unint64_t sub_25189BC3C()
{
  unint64_t result = qword_269B56430;
  if (!qword_269B56430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56430);
  }
  return result;
}

unint64_t sub_25189BC94()
{
  unint64_t result = qword_269B56438;
  if (!qword_269B56438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56438);
  }
  return result;
}

unint64_t sub_25189BCEC()
{
  unint64_t result = qword_269B56440;
  if (!qword_269B56440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56440);
  }
  return result;
}

unint64_t sub_25189BD48()
{
  unint64_t result = qword_269B56448;
  if (!qword_269B56448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56448);
  }
  return result;
}

unint64_t sub_25189BDA0()
{
  unint64_t result = qword_269B56450;
  if (!qword_269B56450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56450);
  }
  return result;
}

unint64_t sub_25189BDF8()
{
  unint64_t result = qword_269B56458;
  if (!qword_269B56458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56458);
  }
  return result;
}

uint64_t sub_25189BE4C()
{
  return sub_2517E2990(&qword_269B56460, &qword_269B56468);
}

unint64_t sub_25189BE8C()
{
  unint64_t result = qword_269B56470;
  if (!qword_269B56470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56470);
  }
  return result;
}

uint64_t sub_25189BEE0()
{
  return sub_2517E2990(&qword_269B56478, &qword_269B56480);
}

uint64_t sub_25189BF1C()
{
  return sub_2517E2990(&qword_269B56488, &qword_269B56490);
}

unint64_t sub_25189BF5C()
{
  unint64_t result = qword_269B56498;
  if (!qword_269B56498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56498);
  }
  return result;
}

unint64_t sub_25189BFB4()
{
  unint64_t result = qword_269B564A8;
  if (!qword_269B564A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B564A8);
  }
  return result;
}

unint64_t sub_25189C008()
{
  unint64_t result = qword_269B564B8;
  if (!qword_269B564B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B564B8);
  }
  return result;
}

unint64_t sub_25189C05C()
{
  unint64_t result = qword_269B564C0;
  if (!qword_269B564C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B564C0);
  }
  return result;
}

uint64_t sub_25189C0BC(uint64_t (*a1)(char *), char a2, uint64_t a3)
{
  char v32 = a1;
  uint64_t v6 = sub_25192CAF0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  char v31 = (char *)&v27 - v11;
  uint64_t v12 = *(void *)(a3 + 56);
  uint64_t v27 = a3 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  uint64_t v30 = v7 + 16;
  int64_t v28 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v29 = v7 + 32;
  uint64_t v16 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v33 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  while (1)
  {
    if (v15)
    {
      unint64_t v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v20 = v19 | (v18 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v18 >= v28) {
      goto LABEL_27;
    }
    unint64_t v22 = *(void *)(v27 + 8 * v18);
    if (!v22) {
      break;
    }
LABEL_18:
    unint64_t v15 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_19:
    char v24 = v31;
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v31, *(void *)(v33 + 48) + *(void *)(v7 + 72) * v20, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v24, v6);
    char v25 = v32(v10);
    if (v3)
    {
      (*v16)(v10, v6);
      swift_release();
      return a2 & 1;
    }
    char v26 = v25;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v16)(v10, v6);
    if ((v26 & 1) == 0)
    {
      a2 = 0;
      goto LABEL_28;
    }
  }
  int64_t v23 = v18 + 1;
  if (v18 + 1 >= v28) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v27 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 2;
  if (v18 + 2 >= v28) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v27 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 3;
  if (v18 + 3 >= v28) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v27 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 4;
  if (v18 + 4 >= v28)
  {
LABEL_27:
    a2 = 1;
LABEL_28:
    swift_release();
    return a2 & 1;
  }
  unint64_t v22 = *(void *)(v27 + 8 * v23);
  if (v22)
  {
LABEL_17:
    int64_t v18 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v28) {
      goto LABEL_27;
    }
    unint64_t v22 = *(void *)(v27 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_18;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

unint64_t sub_25189C3C4()
{
  if (!*(unsigned char *)(v0 + 33)) {
    return sub_2518E0908();
  }
  if (*(unsigned char *)(v0 + 33) == 1)
  {
    unint64_t v2 = 0x203A726F727265;
    sub_25192D2F0();
  }
  else
  {
    sub_25192D620();
    swift_bridgeObjectRelease();
    unint64_t v2 = 0xD000000000000013;
    sub_25192D7F0();
  }
  sub_25192D310();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_25189C4C4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B539B8);
  MEMORY[0x270FA5388](v0 - 8);
  unint64_t v2 = &v11[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B539C0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_25192BC50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = sub_25192D2B0();
  MEMORY[0x270FA5388](v8 - 8);
  sub_25192D2A0();
  sub_25192D290();
  sub_25192B740();
  v11[14] = v11[15];
  sub_2517E4D4C();
  sub_25192D280();
  sub_25192D290();
  sub_25192BC40();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  uint64_t v9 = sub_25192B920();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v2, 1, 1, v9);
  return sub_25192B940();
}

uint64_t sub_25189C738(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A5B0);
}

uint64_t sub_25189C75C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2518A39F8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_25189C788()
{
  unint64_t result = qword_269B564F8;
  if (!qword_269B564F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B564F8);
  }
  return result;
}

unint64_t sub_25189C7E0()
{
  unint64_t result = qword_269B56500;
  if (!qword_269B56500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56500);
  }
  return result;
}

unint64_t sub_25189C838()
{
  unint64_t result = qword_269B56508;
  if (!qword_269B56508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56508);
  }
  return result;
}

uint64_t sub_25189C88C()
{
  return sub_2517E2990(&qword_269B56510, &qword_269B56518);
}

uint64_t sub_25189C8C8(uint64_t a1)
{
  unint64_t v2 = sub_2518A3CF0();
  return MEMORY[0x270EE09F0](a1, v2);
}

unint64_t sub_25189C918()
{
  unint64_t result = qword_269B56520;
  if (!qword_269B56520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56520);
  }
  return result;
}

unint64_t sub_25189C970()
{
  unint64_t result = qword_269B56528;
  if (!qword_269B56528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56528);
  }
  return result;
}

unint64_t sub_25189C9C8()
{
  unint64_t result = qword_269B56530;
  if (!qword_269B56530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56530);
  }
  return result;
}

unint64_t sub_25189CA20()
{
  unint64_t result = qword_269B56538;
  if (!qword_269B56538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56538);
  }
  return result;
}

uint64_t sub_25189CA74()
{
  return sub_2518A3E14((unint64_t *)&qword_269B53648, MEMORY[0x263F07508]);
}

uint64_t sub_25189CABC()
{
  sub_2518A3CF0();
  return sub_25192B600();
}

uint64_t sub_25189CB08@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53130, (uint64_t)qword_269B5A5B0, a1);
}

uint64_t sub_25189CB2C()
{
  return sub_2517E2990(&qword_269B56540, &qword_269B56548);
}

uint64_t sub_25189CB68(uint64_t a1)
{
  unint64_t v2 = sub_251808B28();
  return MEMORY[0x270EE0C68](a1, v2);
}

unint64_t sub_25189CBB8()
{
  unint64_t result = qword_269B56550;
  if (!qword_269B56550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56550);
  }
  return result;
}

uint64_t sub_25189CC0C()
{
  return sub_25189C4C4();
}

uint64_t sub_25189CC14(uint64_t a1)
{
  unint64_t v2 = sub_25189CA20();
  return MEMORY[0x270EE1D98](a1, v2);
}

unint64_t sub_25189CC64()
{
  unint64_t result = qword_269B56558;
  if (!qword_269B56558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56558);
  }
  return result;
}

uint64_t sub_25189CCB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v14 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B539B8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v13 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B539C0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v12 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25192BC50();
  uint64_t v5 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  v10[1] = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25192D2B0();
  MEMORY[0x270FA5388](v7 - 8);
  sub_25192D2A0();
  sub_25192D290();
  sub_25192B740();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25192D270();
  swift_bridgeObjectRelease();
  sub_25192D290();
  sub_25192BC40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v12, 1, 1, v11);
  uint64_t v8 = sub_25192B920();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v13, 1, 1, v8);
  return sub_25192B940();
}

uint64_t sub_25189CF8C(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A5C8);
}

uint64_t sub_25189CFB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2518A3B74();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_25189CFE4()
{
  unint64_t result = qword_269B56560;
  if (!qword_269B56560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56560);
  }
  return result;
}

unint64_t sub_25189D03C()
{
  unint64_t result = qword_269B56568;
  if (!qword_269B56568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56568);
  }
  return result;
}

unint64_t sub_25189D094()
{
  unint64_t result = qword_269B56570;
  if (!qword_269B56570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56570);
  }
  return result;
}

uint64_t sub_25189D0E8()
{
  return sub_2517E2990(&qword_269B56578, &qword_269B56580);
}

uint64_t sub_25189D124(uint64_t a1)
{
  unint64_t v2 = sub_2518A1090();
  return MEMORY[0x270EE09F0](a1, v2);
}

unint64_t sub_25189D174()
{
  unint64_t result = qword_269B56588;
  if (!qword_269B56588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56588);
  }
  return result;
}

unint64_t sub_25189D1CC()
{
  unint64_t result = qword_269B56590;
  if (!qword_269B56590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56590);
  }
  return result;
}

unint64_t sub_25189D228()
{
  unint64_t result = qword_269B56598;
  if (!qword_269B56598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56598);
  }
  return result;
}

uint64_t sub_25189D27C()
{
  sub_2518A1090();
  return sub_25192B600();
}

uint64_t sub_25189D2C8@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53138, (uint64_t)qword_269B5A5C8, a1);
}

uint64_t sub_25189D2EC()
{
  return sub_2517E2990(&qword_269B565A0, &qword_269B565A8);
}

uint64_t sub_25189D328(uint64_t a1)
{
  unint64_t v2 = sub_25189CC64();
  return MEMORY[0x270EE0C68](a1, v2);
}

unint64_t sub_25189D378()
{
  unint64_t result = qword_269B565B0;
  if (!qword_269B565B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B565B0);
  }
  return result;
}

uint64_t sub_25189D3CC@<X0>(uint64_t a1@<X8>)
{
  return sub_25189CCB8(a1);
}

uint64_t sub_25189D3D4(uint64_t a1)
{
  unint64_t v2 = sub_25189D228();
  return MEMORY[0x270EE1D98](a1, v2);
}

ValueMetadata *type metadata accessor for AttributeResult()
{
  return &type metadata for AttributeResult;
}

ValueMetadata *type metadata accessor for DeviceResult()
{
  return &type metadata for DeviceResult;
}

uint64_t sub_25189D440()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_25189D460()
{
  unint64_t result = qword_269B565B8;
  if (!qword_269B565B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B565B8);
  }
  return result;
}

uint64_t sub_25189D4B4@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v160 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E88);
  MEMORY[0x270FA5388](v7 - 8);
  v150 = (char *)v132 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25192CDA0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v132 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53DC8);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v153 = (uint64_t)v132 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_25192BD10();
  uint64_t v158 = *(void *)(v156 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v156);
  uint64_t v149 = (uint64_t)v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  v159 = (void *)((char *)v132 - v17);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B54408);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v147 = (uint64_t)v132 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  unint64_t v22 = (char *)v132 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B54468);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  v148 = (char *)v132 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)v132 - v26;
  uint64_t v166 = sub_25192C780();
  uint64_t v28 = *(void *)(v166 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v166);
  v146 = (char *)v132 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  v161 = (char *)v132 - v32;
  MEMORY[0x270FA5388](v31);
  v155 = (char *)v132 - v33;
  LODWORD(v165) = *a1;
  LOBYTE(v172) = v165;
  uint64_t v34 = *(void *)(a2 + 16);
  sub_2517E464C(a2);
  uint64_t v162 = v34;
  sub_25192B740();
  *(void *)&long long v164 = a2;
  sub_2517E46D8(a2);
  LOWORD(v167) = v168;
  uint64_t v35 = sub_2518DDDC8(&v167);
  if (!*(void *)(v35 + 16))
  {
    uint64_t result = swift_bridgeObjectRelease();
    *a4 = 0;
    a4[1] = 0;
    return result;
  }
  *(void *)&long long v152 = v10;
  sub_2517E079C(v160, (uint64_t)v22, &qword_269B54408);
  uint64_t v36 = sub_25192C1E0();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
  uint64_t v144 = v37 + 48;
  v143 = v38;
  int v39 = v38((uint64_t)v22, 1, v36);
  uint64_t v157 = v35;
  if (v39 == 1)
  {
    sub_2517E16E0((uint64_t)v22, &qword_269B54408);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v27, 1, 1, v166);
LABEL_12:
    swift_bridgeObjectRelease();
    sub_2517E16E0((uint64_t)v27, &qword_269B54468);
    LOBYTE(v167) = v165;
    long long v168 = 0u;
    unsigned long long v169 = 0u;
    LOWORD(v170) = 256;
    uint64_t result = sub_2518A3854((char *)&v167, &v168);
    *a4 = result;
    a4[1] = v56;
    return result;
  }
  v145 = a4;
  uint64_t v154 = v37;
  uint64_t v41 = sub_25192C170();
  char v42 = *(void (**)(uint64_t, uint64_t))(v154 + 8);
  v154 += 8;
  uint64_t v141 = v36;
  v139 = v42;
  v42((uint64_t)v22, v36);
  unsigned long long v43 = *(_OWORD *)(v164 + 16);
  long long v168 = *(_OWORD *)v164;
  unsigned long long v169 = v43;
  long long v44 = *(_OWORD *)(v164 + 48);
  long long v170 = *(_OWORD *)(v164 + 32);
  long long v171 = v44;
  char v45 = (void (*)(void, void, void))v159;
  sub_2518B17A0((uint64_t)v159);
  if (*(void *)(v41 + 16))
  {
    unint64_t v46 = sub_251823860((uint64_t)v45);
    uint64_t v47 = v166;
    uint64_t v48 = v158;
    if (v49)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v28 + 16))(v27, *(void *)(v41 + 56) + *(void *)(v28 + 72) * v46, v166);
      char v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
      v50(v27, 0, 1, v47);
    }
    else
    {
      char v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
      v50(v27, 1, 1, v166);
    }
    uint64_t v51 = v163;
  }
  else
  {
    char v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
    uint64_t v47 = v166;
    v50(v27, 1, 1, v166);
    uint64_t v51 = v163;
    uint64_t v48 = v158;
  }
  swift_bridgeObjectRelease();
  uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
  uint64_t v52 = v48 + 8;
  v140 = v53;
  v53((uint64_t)v159, v156);
  uint64_t v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  uint64_t v137 = v28 + 48;
  v138 = v54;
  unsigned int v55 = v54((uint64_t)v27, 1, v47);
  a4 = v145;
  if (v55 == 1) {
    goto LABEL_12;
  }
  v136 = v50;
  uint64_t v135 = v52;
  uint64_t v57 = *(uint64_t (**)(void))(v28 + 32);
  uint64_t v58 = v155;
  uint64_t v134 = v28 + 32;
  v133 = v57;
  uint64_t v59 = v57();
  MEMORY[0x270FA5388](v59);
  v132[-2] = v58;
  unsigned __int8 v60 = (void *)sub_2517EA714((void (*)(char *))sub_2518A3DD8, (uint64_t)&v132[-4], v157);
  uint64_t v61 = v60[2];
  uint64_t v142 = v28;
  uint64_t v163 = v51;
  if (v61)
  {
    uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v152 + 16);
    unint64_t v63 = (*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80);
    v159 = v60;
    uint64_t v64 = (char *)v60 + v63;
    uint64_t v65 = (void (**)(char *, uint64_t))(v152 + 8);
    uint64_t v66 = *(void *)(v152 + 72);
    while (1)
    {
      v62(v12, v64, v9);
      if (sub_25192CD90()) {
        break;
      }
      (*v65)(v12, v9);
      v64 += v66;
      if (!--v61)
      {
        uint64_t v67 = 1;
        uint64_t v58 = v155;
        uint64_t v68 = v152;
        uint64_t v69 = v153;
        goto LABEL_20;
      }
    }
    uint64_t v68 = v152;
    uint64_t v69 = v153;
    (*(void (**)(uint64_t, char *, uint64_t))(v152 + 32))(v153, v12, v9);
    uint64_t v67 = 0;
    uint64_t v58 = v155;
  }
  else
  {
    uint64_t v67 = 1;
    uint64_t v68 = v152;
    uint64_t v69 = v153;
  }
LABEL_20:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56))(v69, v67, 1, v9);
  swift_bridgeObjectRelease();
  int v70 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v69, 1, v9);
  char v71 = v165;
  if (v70 == 1)
  {
    sub_2517E16E0(v69, &qword_269B53DC8);
  }
  else
  {
    uint64_t v72 = (void *)sub_25192CD80();
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v9);
    if (v72)
    {
      swift_bridgeObjectRelease();
      unint64_t v167 = (unint64_t)v72;
      type metadata accessor for HMError(0);
      sub_2518A3E14(&qword_269B53948, type metadata accessor for HMError);
      sub_25192BC00();
      sub_251840EF8(v168, (char *)&v167);
      unint64_t v73 = v167;
      if (v167 == 18)
      {
        LOBYTE(v172) = v71;
        *(void *)&long long v168 = v72;
        sub_25192BC00();
        long long v168 = v167;
        unsigned long long v169 = 0uLL;
        LOWORD(v170) = 512;
        uint64_t v74 = (char *)&v172;
      }
      else
      {
        LOBYTE(v167) = v71;
        long long v168 = v73;
        unsigned long long v169 = 0uLL;
        LOWORD(v170) = 256;
        uint64_t v74 = (char *)&v167;
      }
      uint64_t v93 = sub_2518A3854(v74, &v168);
      uint64_t v95 = v94;

      goto LABEL_43;
    }
  }
  char v173 = v71;
  uint64_t v75 = v164;
  sub_2517E464C(v164);
  sub_25192B740();
  sub_2517E46D8(v75);
  __int16 v172 = v167;
  sub_2518E1CEC((unint64_t)&v173, &v172, (uint64_t)&v168);
  char v76 = v170;
  uint64_t v77 = v158;
  if (v170 <= 0xFDu)
  {
    unsigned long long v92 = v169;
    long long v164 = v168;
    swift_bridgeObjectRelease();
    LOBYTE(v167) = v71;
    long long v168 = v164;
    unsigned long long v169 = v92;
    LOBYTE(v170) = v76;
LABEL_42:
    BYTE1(v170) = 0;
    uint64_t v93 = sub_2518A3854((char *)&v167, &v168);
    uint64_t v95 = v103;
LABEL_43:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v142 + 8))(v58, v166);
LABEL_44:
    uint64_t v104 = v145;
    uint64_t *v145 = v93;
    v104[1] = v95;
    return result;
  }
  uint64_t v78 = sub_25192C210();
  uint64_t v79 = *(void *)(v78 + 16);
  if (v79)
  {
    v159 = *(void **)(v142 + 16);
    unint64_t v80 = (*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80);
    v132[1] = v78;
    unint64_t v81 = v78 + v80;
    uint64_t v153 = *(void *)(v142 + 72);
    uint64_t v82 = (void (**)(char *, uint64_t))(v142 + 8);
    uint64_t v83 = (void *)MEMORY[0x263F8EE78];
    uint64_t v84 = v161;
    do
    {
      uint64_t v87 = v166;
      ((void (*)(char *, unint64_t, uint64_t))v159)(v84, v81, v166);
      char v173 = v71;
      uint64_t v88 = v164;
      sub_2517E464C(v164);
      sub_25192B740();
      sub_2517E46D8(v88);
      __int16 v172 = v167;
      sub_2518E1CEC((unint64_t)&v173, &v172, (uint64_t)&v168);
      (*v82)(v84, v87);
      char v89 = v170;
      if (v170 <= 0xFDu)
      {
        long long v152 = v168;
        unsigned long long v151 = v169;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v83 = sub_2518469A0(0, v83[2] + 1, 1, v83);
        }
        unint64_t v91 = v83[2];
        unint64_t v90 = v83[3];
        if (v91 >= v90 >> 1) {
          uint64_t v83 = sub_2518469A0((void *)(v90 > 1), v91 + 1, 1, v83);
        }
        v83[2] = v91 + 1;
        uint64_t v85 = &v83[5 * v91];
        unsigned long long v86 = v151;
        *((_OWORD *)v85 + 2) = v152;
        *((_OWORD *)v85 + 3) = v86;
        *((unsigned char *)v85 + 64) = v89;
      }
      v81 += v153;
      --v79;
      char v71 = v165;
    }
    while (v79);
    swift_bridgeObjectRelease();
    uint64_t v58 = v155;
    uint64_t v77 = v158;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v83 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v96 = (uint64_t)v150;
  if (v83[2])
  {
    uint64_t v97 = v83[4];
    uint64_t v98 = v83[5];
    char v99 = v71;
    uint64_t v100 = v83[6];
    uint64_t v101 = v83[7];
    char v102 = *((unsigned char *)v83 + 64);
    sub_251808BD8(v97, v98, v100, v101, v102);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v167) = v99;
    *(void *)&long long v168 = v97;
    *((void *)&v168 + 1) = v98;
    *(void *)&unsigned long long v169 = v100;
    *((void *)&v169 + 1) = v101;
    LOBYTE(v170) = v102;
    goto LABEL_42;
  }
  swift_bridgeObjectRelease();
  sub_25192C230();
  uint64_t v105 = v156;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v96, 1, v156) == 1)
  {
    uint64_t v106 = sub_2517E16E0(v96, &qword_269B53E88);
    uint64_t v107 = v142;
    uint64_t v108 = v166;
    goto LABEL_56;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 32))(v149, v96, v105);
  uint64_t v109 = v147;
  sub_2517E079C(v160, v147, &qword_269B54408);
  uint64_t v110 = v141;
  int v111 = v143(v109, 1, v141);
  uint64_t v107 = v142;
  uint64_t v108 = v166;
  if (v111 == 1)
  {
    sub_2517E16E0(v109, &qword_269B54408);
    uint64_t v112 = (uint64_t)v148;
    v136(v148, 1, 1, v108);
LABEL_55:
    v140(v149, v156);
    uint64_t v106 = sub_2517E16E0(v112, &qword_269B54468);
    goto LABEL_56;
  }
  uint64_t v113 = sub_25192C170();
  v139(v109, v110);
  uint64_t v112 = (uint64_t)v148;
  if (*(void *)(v113 + 16))
  {
    unint64_t v114 = sub_251823860(v149);
    v115 = v146;
    if (v116)
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v107 + 16))(v112, *(void *)(v113 + 56) + *(void *)(v107 + 72) * v114, v108);
      uint64_t v117 = 0;
    }
    else
    {
      uint64_t v117 = 1;
    }
  }
  else
  {
    uint64_t v117 = 1;
    v115 = v146;
  }
  v136((char *)v112, v117, 1, v108);
  swift_bridgeObjectRelease();
  if (v138(v112, 1, v108) == 1) {
    goto LABEL_55;
  }
  ((void (*)(char *, uint64_t, uint64_t))v133)(v115, v112, v108);
  char v173 = v71;
  uint64_t v123 = v164;
  sub_2517E464C(v164);
  sub_25192B740();
  sub_2517E46D8(v123);
  __int16 v172 = v167;
  sub_2518E1CEC((unint64_t)&v173, &v172, (uint64_t)&v168);
  unsigned __int8 v124 = v170;
  if (v170 < 0xFEu)
  {
    char v125 = v71;
    uint64_t v126 = v108;
    uint64_t v127 = v107;
    unint64_t v128 = *((void *)&v169 + 1);
    unint64_t v129 = v169;
    long long v165 = v168;
    swift_bridgeObjectRelease();
    LOBYTE(v167) = v125;
    long long v168 = v165;
    unsigned long long v169 = __PAIR128__(v128, v129);
    LOWORD(v170) = v124;
    uint64_t v93 = sub_2518A3854((char *)&v167, &v168);
    uint64_t v95 = v130;
    v131 = *(void (**)(char *, uint64_t))(v127 + 8);
    v131(v115, v126);
    v140(v149, v156);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v131)(v58, v126);
    goto LABEL_44;
  }
  (*(void (**)(char *, uint64_t))(v107 + 8))(v115, v108);
  uint64_t v106 = ((uint64_t (*)(uint64_t, uint64_t))v140)(v149, v156);
LABEL_56:
  MEMORY[0x270FA5388](v106);
  v132[-2] = v58;
  char v118 = sub_25189C0BC((uint64_t (*)(char *))sub_2518A3DF4, (char)&v132[-4], v157);
  swift_bridgeObjectRelease();
  LOBYTE(v167) = v71;
  if (v118)
  {
    long long v168 = 1uLL;
    unsigned long long v169 = 0uLL;
  }
  else
  {
    long long v168 = 0u;
    unsigned long long v169 = 0u;
  }
  LOWORD(v170) = 256;
  uint64_t v119 = sub_2518A3854((char *)&v167, &v168);
  uint64_t v121 = v120;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v107 + 8))(v58, v108);
  v122 = v145;
  uint64_t *v145 = v119;
  v122[1] = v121;
  return result;
}

uint64_t sub_25189E61C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55C98);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25192C530();
  uint64_t v5 = sub_25192CDD0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_2517E16E0((uint64_t)v4, &qword_269B55C98);
    uint64_t v7 = sub_25192CDA0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 1, 1, v7);
  }
  else
  {
    sub_25192CDB0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    uint64_t v9 = sub_25192CDA0();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 0, 1, v9);
  }
}

BOOL sub_25189E7BC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55C98);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25192C530();
  uint64_t v3 = sub_25192CDD0();
  BOOL v4 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) != 1;
  sub_2517E16E0((uint64_t)v2, &qword_269B55C98);
  return v4;
}

uint64_t sub_25189E8A8@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v76 = a2;
  uint64_t v75 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56630);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v67 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_25192C1F0();
  uint64_t v68 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  unint64_t v63 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56638);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v65 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v69 = (uint64_t)&v62 - v12;
  uint64_t v66 = sub_25192BF70();
  uint64_t v72 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v74 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_25192BD10();
  uint64_t v14 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BE0);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B544F8);
  MEMORY[0x270FA5388](v20 - 8);
  unint64_t v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_25192C890();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  unint64_t v73 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v81 = *a1;
  sub_2517E079C(v76, (uint64_t)v19, &qword_269B53BE0);
  uint64_t v26 = sub_25192CCD0();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v19, 1, v26) == 1)
  {
    sub_2517E16E0((uint64_t)v19, &qword_269B53BE0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v22, 1, 1, v23);
LABEL_10:
    sub_2517E16E0((uint64_t)v22, &qword_269B544F8);
    uint64_t v38 = v75;
    char v39 = v81;
    goto LABEL_11;
  }
  uint64_t v70 = v24;
  uint64_t v76 = v23;
  uint64_t v28 = sub_25192CCB0();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v26);
  long long v29 = a3[1];
  long long v77 = *a3;
  long long v78 = v29;
  long long v30 = a3[3];
  long long v79 = a3[2];
  long long v80 = v30;
  sub_2518B17A0((uint64_t)v16);
  if (*(void *)(v28 + 16))
  {
    unint64_t v31 = sub_251823860((uint64_t)v16);
    uint64_t v32 = v72;
    uint64_t v33 = v76;
    uint64_t v34 = v70;
    if (v35)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v70 + 16))(v22, *(void *)(v28 + 56) + *(void *)(v70 + 72) * v31, v76);
      uint64_t v36 = 0;
    }
    else
    {
      uint64_t v36 = 1;
    }
    uint64_t v37 = v74;
  }
  else
  {
    uint64_t v36 = 1;
    uint64_t v32 = v72;
    uint64_t v37 = v74;
    uint64_t v33 = v76;
    uint64_t v34 = v70;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v22, v36, 1, v33);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v71);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v22, 1, v33) == 1) {
    goto LABEL_10;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v73, v22, v33);
  char v39 = v81;
  if (v81 == 41)
  {
    long long v44 = (unsigned int *)MEMORY[0x263F47F48];
    goto LABEL_17;
  }
  if (v81 == 45)
  {
    long long v44 = (unsigned int *)MEMORY[0x263F47F40];
LABEL_17:
    uint64_t v38 = v75;
    uint64_t v45 = (uint64_t)v67;
    uint64_t v46 = v68;
    uint64_t v47 = v66;
    uint64_t v48 = v65;
    (*(void (**)(char *, void, uint64_t))(v32 + 104))(v65, *v44, v66);
    uint64_t v49 = 0;
    goto LABEL_19;
  }
  uint64_t v49 = 1;
  uint64_t v38 = v75;
  uint64_t v45 = (uint64_t)v67;
  uint64_t v46 = v68;
  uint64_t v47 = v66;
  uint64_t v48 = v65;
LABEL_19:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v48, v49, 1, v47);
  uint64_t v50 = (uint64_t)v48;
  uint64_t v51 = v69;
  sub_2517F7AB8(v50, v69, &qword_269B56638);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v51, 1, v47) == 1)
  {
    (*(void (**)(char *, uint64_t))(v70 + 8))(v73, v76);
    sub_2517E16E0(v51, &qword_269B56638);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v37, v51, v47);
    uint64_t v52 = (uint64_t)v37;
    uint64_t v53 = sub_25192C880();
    if (*(void *)(v53 + 16))
    {
      unint64_t v54 = sub_2518246C0(v52);
      uint64_t v55 = v64;
      if (v56)
      {
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v46 + 16))(v45, *(void *)(v53 + 56) + *(void *)(v46 + 72) * v54, v64);
        uint64_t v57 = 0;
      }
      else
      {
        uint64_t v57 = 1;
      }
      char v39 = v81;
    }
    else
    {
      uint64_t v57 = 1;
      char v39 = v81;
      uint64_t v55 = v64;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v45, v57, 1, v55);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v45, 1, v55) == 1)
    {
      (*(void (**)(char *, uint64_t))(v32 + 8))(v74, v47);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v73, v76);
      sub_2517E16E0(v45, &qword_269B56630);
    }
    else
    {
      uint64_t v58 = v63;
      (*(void (**)(void))(v46 + 32))();
      sub_2518E29DC((uint64_t)&v77);
      if (v79 < 0xFEu)
      {
        char v82 = v39;
        LOWORD(v79) = v79;
        uint64_t v59 = sub_2518A3854(&v82, &v77);
        unsigned __int8 v60 = v58;
        uint64_t v41 = v59;
        uint64_t v43 = v61;
        (*(void (**)(char *, uint64_t))(v46 + 8))(v60, v55);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v74, v47);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v73, v76);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v46 + 8))(v58, v55);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v74, v47);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v73, v76);
    }
  }
LABEL_11:
  char v82 = v39;
  long long v77 = 0u;
  long long v78 = 0u;
  LOWORD(v79) = 256;
  uint64_t result = sub_2518A3854(&v82, &v77);
  uint64_t v41 = result;
  uint64_t v43 = v42;
LABEL_12:
  *uint64_t v38 = v41;
  v38[1] = v43;
  return result;
}

void sub_25189F1BC(unsigned __int8 *a1@<X0>, long long *a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v121 = a4;
  char v116 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55060);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25192CBE0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v106 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_25192CA50();
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v103 = (char *)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B54408);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v113 = (char *)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v115 = (uint64_t)&v102 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B54468);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v117 = (char *)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_25192C780();
  uint64_t v21 = *(void *)(v120 - 8);
  MEMORY[0x270FA5388](v120);
  uint64_t v107 = (char *)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_25192BD10();
  uint64_t v118 = *(void *)(v23 - 8);
  uint64_t v119 = v23;
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v108 = (uint64_t)&v102 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v114 = (uint64_t)&v102 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v109 = (uint64_t)&v102 - v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B54B98);
  uint64_t v30 = MEMORY[0x270FA5388](v29 - 8);
  uint64_t v32 = (char *)&v102 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v102 - v33;
  int v122 = *a1;
  sub_2517E464C((uint64_t)a2);
  sub_25192B740();
  sub_2517E46D8((uint64_t)a2);
  if ((unsigned __int16)v124 >> 14 == 1) {
    int v35 = BYTE1(v124) & 0x3F;
  }
  else {
    int v35 = v124;
  }
  uint64_t v112 = v11;
  uint64_t v111 = v12;
  uint64_t v110 = v10;
  if (v122 == 41)
  {
    if (v35 == 2)
    {
      uint64_t v36 = (unsigned int *)MEMORY[0x263F48778];
      goto LABEL_9;
    }
  }
  else if (v122 == 33)
  {
    uint64_t v36 = (unsigned int *)MEMORY[0x263F48770];
LABEL_9:
    uint64_t v37 = *v36;
    uint64_t v38 = sub_25192CA30();
    char v39 = a5;
    uint64_t v40 = *(void *)(v38 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 104))(v32, v37, v38);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v38);
    a5 = v39;
    goto LABEL_11;
  }
  uint64_t v38 = sub_25192CA30();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v32, 1, 1, v38);
LABEL_11:
  sub_2517F7AB8((uint64_t)v32, (uint64_t)v34, &qword_269B54B98);
  sub_25192CA30();
  int v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v34, 1, v38);
  sub_2517E16E0((uint64_t)v34, &qword_269B54B98);
  if (v41 == 1)
  {
    *a5 = 0;
    a5[1] = 0;
    return;
  }
  uint64_t v42 = v120;
  uint64_t v43 = v116;
  if (!v116)
  {
LABEL_20:
    uint64_t v55 = v115;
    sub_2517E079C(v121, v115, &qword_269B54408);
    uint64_t v56 = sub_25192C1E0();
    uint64_t v57 = *(void *)(v56 - 8);
    uint64_t v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
    int v59 = v58(v55, 1, v56);
    char v102 = a5;
    if (v59 == 1)
    {
      sub_2517E16E0(v55, &qword_269B54408);
      unsigned __int8 v60 = v117;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v117, 1, 1, v42);
      uint64_t v61 = (uint64_t)v60;
      uint64_t v62 = (uint64_t)v113;
    }
    else
    {
      char v116 = v58;
      uint64_t v63 = v21;
      uint64_t v64 = sub_25192C170();
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v55, v56);
      long long v65 = a2[1];
      long long v124 = *a2;
      long long v125 = v65;
      long long v66 = a2[3];
      long long v126 = a2[2];
      long long v127 = v66;
      uint64_t v67 = v114;
      sub_2518B17A0(v114);
      if (*(void *)(v64 + 16) && (unint64_t v68 = sub_251823860(v67), (v69 & 1) != 0))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v63 + 16))(v117, *(void *)(v64 + 56) + *(void *)(v63 + 72) * v68, v120);
        uint64_t v70 = 0;
      }
      else
      {
        uint64_t v70 = 1;
      }
      uint64_t v62 = (uint64_t)v113;
      uint64_t v61 = (uint64_t)v117;
      uint64_t v71 = v120;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v117, v70, 1, v120);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v114, v119);
      int v72 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v61, 1, v71);
      uint64_t v58 = v116;
      if (v72 != 1)
      {
        uint64_t v85 = v61;
        unsigned long long v86 = v107;
        (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v107, v85, v71);
        if (v122 == 33)
        {
          uint64_t v87 = v103;
          sub_25192C410();
          char v88 = sub_25192CA10();
          char v89 = v102;
          unint64_t v90 = v86;
          char v91 = v88;
          (*(void (**)(char *, uint64_t))(v104 + 8))(v87, v105);
          LOBYTE(v128) = 33;
          long long v124 = v91 & 1;
          long long v125 = 0uLL;
          LOWORD(v126) = 72;
          uint64_t v92 = sub_2518A3854((char *)&v128, &v124);
          uint64_t v94 = v93;
          (*(void (**)(char *, uint64_t))(v63 + 8))(v90, v71);
          goto LABEL_44;
        }
        (*(void (**)(char *, uint64_t))(v63 + 8))(v86, v71);
LABEL_28:
        unint64_t v73 = v102;
        sub_2517E079C(v121, v62, &qword_269B54408);
        if (v58(v62, 1, v56) == 1)
        {
          sub_2517E16E0(v62, &qword_269B54408);
          uint64_t v74 = (uint64_t)v110;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v111 + 56))(v110, 1, 1, v112);
LABEL_38:
          sub_2517E16E0(v74, &qword_269B55060);
LABEL_39:
          LOBYTE(v128) = v122;
          long long v124 = 0u;
          long long v125 = 0u;
          LOWORD(v126) = 256;
          *unint64_t v73 = sub_2518A3854((char *)&v128, &v124);
          v73[1] = v95;
          return;
        }
        uint64_t v75 = v73;
        uint64_t v76 = sub_25192C1A0();
        (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v62, v56);
        long long v77 = a2[1];
        long long v124 = *a2;
        long long v125 = v77;
        long long v78 = a2[3];
        long long v126 = a2[2];
        long long v127 = v78;
        uint64_t v79 = v108;
        sub_2518B17A0(v108);
        if (*(void *)(v76 + 16))
        {
          unint64_t v80 = sub_251823860(v79);
          uint64_t v81 = v112;
          uint64_t v82 = v111;
          uint64_t v74 = (uint64_t)v110;
          if (v83)
          {
            (*(void (**)(char *, unint64_t, uint64_t))(v111 + 16))(v110, *(void *)(v76 + 56) + *(void *)(v111 + 72) * v80, v112);
            uint64_t v84 = 0;
          }
          else
          {
            uint64_t v84 = 1;
          }
        }
        else
        {
          uint64_t v84 = 1;
          uint64_t v81 = v112;
          uint64_t v82 = v111;
          uint64_t v74 = (uint64_t)v110;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v74, v84, 1, v81);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v79, v119);
        unint64_t v73 = v75;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v74, 1, v81) == 1) {
          goto LABEL_38;
        }
        uint64_t v96 = v106;
        (*(void (**)(char *, uint64_t, uint64_t))(v82 + 32))(v106, v74, v81);
        char v97 = v122;
        LOBYTE(v128) = v122;
        sub_2518E3E84((unsigned __int8 *)&v128, (uint64_t)&v124);
        if (v126 >= 0xFEu)
        {
          (*(void (**)(char *, uint64_t))(v82 + 8))(v96, v81);
          goto LABEL_39;
        }
        LOBYTE(v128) = v97;
        LOWORD(v126) = v126;
        char v89 = v73;
        uint64_t v92 = sub_2518A3854((char *)&v128, &v124);
        uint64_t v94 = v98;
        (*(void (**)(char *, uint64_t))(v82 + 8))(v96, v81);
LABEL_44:
        *char v89 = v92;
        v89[1] = v94;
        return;
      }
    }
    sub_2517E16E0(v61, &qword_269B54468);
    goto LABEL_28;
  }
  long long v44 = a2[1];
  long long v124 = *a2;
  long long v125 = v44;
  long long v45 = a2[3];
  long long v126 = a2[2];
  long long v127 = v45;
  uint64_t v46 = v109;
  sub_2518B17A0(v109);
  if (!v43[2] || (unint64_t v47 = sub_251823860(v46), (v48 & 1) == 0))
  {
    (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v46, v119);
    goto LABEL_20;
  }
  uint64_t v49 = *(void **)(v43[7] + 8 * v47);
  id v50 = v49;
  (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v46, v119);
  *(void *)&long long v124 = v49;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54B40);
  type metadata accessor for HMError(0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v51 = a5;
  uint64_t v52 = v128;
  sub_2518A3E14(&qword_269B53948, type metadata accessor for HMError);
  sub_25192BC00();
  sub_251840EF8(v124, (char *)&v128);
  unint64_t v53 = v128;
  if (v128 == 18)
  {
    char v123 = v122;
    *(void *)&long long v124 = v52;
    sub_25192BC00();
    long long v124 = (unint64_t)v128;
    long long v125 = 0uLL;
    LOWORD(v126) = 512;
    unint64_t v54 = &v123;
  }
  else
  {
    LOBYTE(v128) = v122;
    long long v124 = v53;
    long long v125 = 0uLL;
    LOWORD(v126) = 256;
    unint64_t v54 = (char *)&v128;
  }
  uint64_t v99 = sub_2518A3854(v54, &v124);
  uint64_t v101 = v100;

  *uint64_t v51 = v99;
  v51[1] = v101;
}

uint64_t sub_25189FEB4(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_2518A10E4(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t v7 = &v3[2 * a1];
      uint64_t v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      v3[2] = v5;
      unsigned __int16 *v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_25192D6F0();
  __break(1u);
  return result;
}

unint64_t sub_25189FF94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_25192BC50();
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)v1;
  if (*(unsigned char *)(v1 + 33))
  {
    if (*(unsigned char *)(v1 + 33) == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B53D40);
      sub_25192BC30();
      unint64_t v7 = sub_2517F48F0();
      uint64_t v8 = MEMORY[0x2533A4F60](v5, v7);
      LOBYTE(v16) = v6;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Outcome.FailureCase;
      unint64_t result = sub_2518A0EEC();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B53D30);
      sub_25192BC30();
      uint64_t v8 = MEMORY[0x2533A4FE0](v5);
      uint64_t v16 = v6;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Outcome.FailureWithHomeKitErrorCodeCase;
      unint64_t result = sub_2518A0E98();
    }
  }
  else
  {
    uint64_t v11 = *(void *)(v1 + 16);
    uint64_t v10 = *(void *)(v1 + 24);
    uint64_t v12 = *(void *)(v1 + 8);
    char v13 = *(unsigned char *)(v1 + 32);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B565D0);
    sub_251808BD8(v6, v12, v11, v10, v13);
    sub_25192BC30();
    unint64_t v14 = sub_2518087B4();
    uint64_t v8 = MEMORY[0x2533A4F80](v5, v14);
    uint64_t v16 = v6;
    uint64_t v17 = v12;
    uint64_t v18 = v11;
    uint64_t v19 = v10;
    char v20 = v13;
    sub_25192B750();
    a1[3] = (uint64_t)&type metadata for Outcome.SuccessCase;
    unint64_t result = sub_2518A0F40();
  }
  a1[4] = result;
  *a1 = v8;
  return result;
}

uint64_t sub_2518A0150@<X0>(uint64_t a1@<X8>)
{
  uint64_t v13 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B565E0);
  uint64_t v11 = *(void *)(v1 - 8);
  uint64_t v12 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B565E8);
  uint64_t v4 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v7 = sub_2518A0F94();
  sub_25192BAA0();
  unint64_t v8 = sub_2518A0FE8();
  sub_25192BAA0();
  sub_2518A103C();
  sub_25192BAA0();
  sub_25189D460();
  sub_25192BAC0();
  unint64_t v18 = v7;
  uint64_t v19 = &type metadata for Outcome.SuccessCase.Resolver;
  sub_25192BAB0();
  uint64_t v16 = &type metadata for Outcome.SuccessCase.Resolver;
  uint64_t v17 = &type metadata for Outcome.FailureCase.Resolver;
  unint64_t v14 = v7;
  unint64_t v15 = v8;
  sub_25192BAB0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v3, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v10);
}

uint64_t sub_2518A03A8(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A5E0);
}

uint64_t sub_2518A03C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v3;
  return MEMORY[0x270FA2498](sub_2518A03EC, 0, 0);
}

uint64_t sub_2518A03EC()
{
  uint64_t v1 = *(void *)(v0 + 56);
  sub_25192B740();
  __int16 v2 = *(unsigned __int8 *)(v0 + 48);
  long long v3 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = v3;
  *(_WORD *)(v1 + 32) = v2;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_2518A0464@<X0>(uint64_t *a1@<X8>)
{
  return sub_2518A071C(&qword_269B565D0, (uint64_t (*)(uint64_t))sub_2518087B4, MEMORY[0x263EFB8A8], a1);
}

uint64_t sub_2518A0498(uint64_t a1)
{
  unint64_t v2 = sub_2518A4D94();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518A04E4()
{
  sub_2518A4D94();
  return sub_25192B600();
}

uint64_t sub_2518A0530()
{
  uint64_t v0 = qword_269B564C8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518A0568@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53140, (uint64_t)qword_269B5A5E0, a1);
}

uint64_t sub_2518A058C(uint64_t a1)
{
  unint64_t v2 = sub_2518A442C();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518A05DC(uint64_t a1)
{
  unint64_t v2 = sub_2518A41DC();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518A0628(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A5F8);
}

uint64_t sub_2518A0648(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518A066C, 0, 0);
}

uint64_t sub_2518A066C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(_WORD *)(v1 + 32) = 256;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518A06E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_2518A071C(&qword_269B53D40, (uint64_t (*)(uint64_t))sub_2517F48F0, MEMORY[0x263EFB8A0], a1);
}

uint64_t sub_2518A071C@<X0>(uint64_t *a1@<X2>, uint64_t (*a2)(uint64_t)@<X3>, uint64_t (*a3)(char *, uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_25192BC50();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v11 = sub_25192BC30();
  uint64_t v12 = a2(v11);
  uint64_t result = a3(v10, v12);
  *a4 = result;
  return result;
}

uint64_t sub_2518A07DC(uint64_t a1)
{
  unint64_t v2 = sub_2518A4D40();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518A0828()
{
  sub_2518A4D40();
  return sub_25192B600();
}

uint64_t sub_2518A0874()
{
  uint64_t v0 = qword_269B564D8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518A08AC@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53148, (uint64_t)qword_269B5A5F8, a1);
}

uint64_t sub_2518A08D0(uint64_t a1)
{
  unint64_t v2 = sub_2518A4784();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518A091C(uint64_t a1)
{
  unint64_t v2 = sub_2518A4534();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518A0968(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A610);
}

uint64_t sub_2518A098C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518A09B0, 0, 0);
}

uint64_t sub_2518A09B0()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(_WORD *)(v1 + 32) = 512;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518A0A2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_25192BC50();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53D30);
  sub_25192BC30();
  uint64_t result = MEMORY[0x2533A4FE0](v4);
  *a1 = result;
  return result;
}

uint64_t sub_2518A0ACC(uint64_t a1)
{
  unint64_t v2 = sub_2518A4CEC();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518A0B18()
{
  sub_2518A4CEC();
  return sub_25192B600();
}

uint64_t sub_2518A0B64()
{
  uint64_t v0 = qword_269B564E8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518A0B9C@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53150, (uint64_t)qword_269B5A610, a1);
}

uint64_t sub_2518A0BC0(uint64_t a1)
{
  unint64_t v2 = sub_2518A4ADC();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518A0C0C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B539B8);
  MEMORY[0x270FA5388](v0 - 8);
  unint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B539C0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25192BC50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  sub_25192BC30();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  uint64_t v8 = sub_25192B920();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
  return sub_25192B940();
}

uint64_t sub_2518A0DCC(uint64_t a1)
{
  unint64_t v2 = sub_2518A488C();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518A0E18()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B536E8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_25192DE90;
  unint64_t v1 = sub_2518A0F40();
  *(void *)(v0 + 32) = &type metadata for Outcome.SuccessCase;
  *(void *)(v0 + 40) = v1;
  unint64_t v2 = sub_2518A0EEC();
  *(void *)(v0 + 48) = &type metadata for Outcome.FailureCase;
  *(void *)(v0 + 56) = v2;
  unint64_t v3 = sub_2518A0E98();
  *(void *)(v0 + 64) = &type metadata for Outcome.FailureWithHomeKitErrorCodeCase;
  *(void *)(v0 + 72) = v3;
  return v0;
}

unint64_t sub_2518A0E98()
{
  unint64_t result = qword_269B565C0;
  if (!qword_269B565C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B565C0);
  }
  return result;
}

unint64_t sub_2518A0EEC()
{
  unint64_t result = qword_269B565C8;
  if (!qword_269B565C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B565C8);
  }
  return result;
}

unint64_t sub_2518A0F40()
{
  unint64_t result = qword_269B565D8;
  if (!qword_269B565D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B565D8);
  }
  return result;
}

unint64_t sub_2518A0F94()
{
  unint64_t result = qword_269B565F0;
  if (!qword_269B565F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B565F0);
  }
  return result;
}

unint64_t sub_2518A0FE8()
{
  unint64_t result = qword_269B565F8;
  if (!qword_269B565F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B565F8);
  }
  return result;
}

unint64_t sub_2518A103C()
{
  unint64_t result = qword_269B56600;
  if (!qword_269B56600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56600);
  }
  return result;
}

unint64_t sub_2518A1090()
{
  unint64_t result = qword_269B56608;
  if (!qword_269B56608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56608);
  }
  return result;
}

void *sub_2518A10E4(void *a1)
{
  return sub_251846464(0, a1[2], 0, a1);
}

uint64_t sub_2518A10F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[22] = a4;
  v5[23] = a5;
  v5[20] = a2;
  v5[21] = a3;
  v5[19] = a1;
  uint64_t v6 = sub_25192BD10();
  v5[24] = v6;
  v5[25] = *(void *)(v6 - 8);
  v5[26] = swift_task_alloc();
  uint64_t v7 = sub_25192BE00();
  v5[27] = v7;
  v5[28] = *(void *)(v7 - 8);
  v5[29] = swift_task_alloc();
  sub_25192BC50();
  v5[30] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54408);
  v5[31] = swift_task_alloc();
  v5[32] = swift_task_alloc();
  v5[33] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2518A1294, 0, 0);
}

uint64_t sub_2518A1294()
{
  uint64_t v1 = v0[33];
  unint64_t v2 = (int *)v0[22];
  uint64_t v3 = sub_25192C1E0();
  v0[34] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v0[35] = v4;
  uint64_t v6 = v4 + 56;
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v0[36] = v5;
  v0[37] = v6 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v5(v1, 1, 1, v3);
  uint64_t v10 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[38] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_2518A13F0;
  uint64_t v8 = v0[32];
  return v10(v8);
}

uint64_t sub_2518A13F0()
{
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_2518A1844;
  }
  else {
    unint64_t v2 = sub_2518A1504;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2518A1504()
{
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v3 = *(void *)(v0 + 168);
  sub_2517E16E0(v1, &qword_269B54408);
  sub_2517F7AB8(v2, v1, &qword_269B54408);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (_OWORD *)(v0 + 16);
    uint64_t v6 = (long long *)(*(void *)(v0 + 168) + 32);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B53AB8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B544E8);
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    do
    {
      uint64_t v8 = *(void *)(v0 + 264);
      uint64_t v9 = *(void *)(v0 + 240);
      uint64_t v10 = *(void *)(v0 + 160);
      long long v11 = v6[3];
      long long v13 = *v6;
      long long v12 = v6[1];
      *(_OWORD *)(v0 + 48) = v6[2];
      *(_OWORD *)(v0 + 64) = v11;
      _OWORD *v5 = v13;
      *(_OWORD *)(v0 + 32) = v12;
      uint64_t v14 = swift_task_alloc();
      *(void *)(v14 + 16) = v5;
      *(void *)(v14 + 24) = v8;
      sub_2517E464C((uint64_t)v5);
      unint64_t v15 = sub_2517EA5BC((void (*)(long long *__return_ptr, char *))sub_2518A4DE8, v14, v10);
      swift_task_dealloc();
      sub_2517E464C((uint64_t)v5);
      sub_25192BC30();
      unint64_t v16 = sub_2517E4C50();
      uint64_t v17 = MEMORY[0x2533A4F70](v9, v16);
      sub_25192BA80();
      sub_25192BC30();
      unint64_t v18 = sub_251808B28();
      uint64_t v19 = MEMORY[0x2533A4F70](v9, v18);
      long long v20 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v0 + 80) = *v5;
      *(_OWORD *)(v0 + 96) = v20;
      long long v21 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v0 + 128) = v21;
      sub_25192BA80();
      sub_25192BA80();
      sub_25192B750();
      swift_release();
      *(void *)(v0 + 144) = v15;
      sub_25192BA80();
      sub_25192BA80();
      sub_25192B750();
      swift_release_n();
      swift_release_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_251846464(0, v7[2] + 1, 1, v7);
      }
      unint64_t v23 = v7[2];
      unint64_t v22 = v7[3];
      if (v23 >= v22 >> 1) {
        uint64_t v7 = sub_251846464((void *)(v22 > 1), v23 + 1, 1, v7);
      }
      v7[2] = v23 + 1;
      uint64_t v24 = &v7[2 * v23];
      v24[4] = v17;
      v24[5] = v19;
      sub_2517E46D8((uint64_t)v5);
      v6 += 4;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
  }
  sub_2517E16E0(*(void *)(v0 + 264), &qword_269B54408);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void *))(v0 + 8);
  return v25(v7);
}

uint64_t sub_2518A1844()
{
  sub_25192BEB0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 320) = v1;
  void *v1 = v0;
  v1[1] = sub_2518A18E4;
  return MEMORY[0x270F3A2E0](0);
}

uint64_t sub_2518A18E4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 328) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2518A19E4, 0, 0);
}

uint64_t sub_2518A19E4()
{
  uint64_t v2 = v0[28];
  uint64_t v1 = v0[29];
  uint64_t v3 = v0[27];
  sub_25192C130();
  sub_25192BDD0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_25192D460();
  v0[42] = sub_25192D450();
  uint64_t v5 = sub_25192D440();
  return MEMORY[0x270FA2498](sub_2518A1AC0, v5, v4);
}

uint64_t sub_2518A1AC0()
{
  uint64_t v1 = *(void **)(v0 + 328);
  swift_release();
  *(void *)(v0 + 344) = sub_25192BE50();

  return MEMORY[0x270FA2498](sub_2518A1B34, 0, 0);
}

uint64_t sub_2518A1B34()
{
  if (*(void *)(*(void *)(v0 + 344) + 16) && (unint64_t v1 = sub_251823860(*(void *)(v0 + 208)), (v2 & 1) != 0))
  {
    (*(void (**)(void, unint64_t, void))(*(void *)(v0 + 280) + 16))(*(void *)(v0 + 248), *(void *)(*(void *)(v0 + 344) + 56) + *(void *)(*(void *)(v0 + 280) + 72) * v1, *(void *)(v0 + 272));
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v3 = 1;
  }
  uint64_t v4 = *(void *)(v0 + 312);
  uint64_t v6 = *(void *)(v0 + 200);
  uint64_t v5 = *(void *)(v0 + 208);
  uint64_t v7 = *(void *)(v0 + 192);
  (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 288))(*(void *)(v0 + 248), v3, 1, *(void *)(v0 + 272));
  swift_bridgeObjectRelease();
  MEMORY[0x2533A7430](v4);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  uint64_t v8 = *(void *)(v0 + 248);
  uint64_t v9 = *(void *)(v0 + 264);
  uint64_t v10 = *(void *)(v0 + 168);
  sub_2517E16E0(v9, &qword_269B54408);
  sub_2517F7AB8(v8, v9, &qword_269B54408);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    long long v12 = (_OWORD *)(v0 + 16);
    long long v13 = (long long *)(*(void *)(v0 + 168) + 32);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B53AB8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B544E8);
    swift_bridgeObjectRetain();
    uint64_t v14 = (void *)MEMORY[0x263F8EE78];
    do
    {
      uint64_t v15 = *(void *)(v0 + 264);
      uint64_t v16 = *(void *)(v0 + 240);
      uint64_t v17 = *(void *)(v0 + 160);
      long long v18 = v13[3];
      long long v20 = *v13;
      long long v19 = v13[1];
      *(_OWORD *)(v0 + 48) = v13[2];
      *(_OWORD *)(v0 + 64) = v18;
      *long long v12 = v20;
      *(_OWORD *)(v0 + 32) = v19;
      uint64_t v21 = swift_task_alloc();
      *(void *)(v21 + 16) = v12;
      *(void *)(v21 + 24) = v15;
      sub_2517E464C((uint64_t)v12);
      unint64_t v22 = sub_2517EA5BC((void (*)(long long *__return_ptr, char *))sub_2518A4DE8, v21, v17);
      swift_task_dealloc();
      sub_2517E464C((uint64_t)v12);
      sub_25192BC30();
      unint64_t v23 = sub_2517E4C50();
      uint64_t v24 = MEMORY[0x2533A4F70](v16, v23);
      sub_25192BA80();
      sub_25192BC30();
      unint64_t v25 = sub_251808B28();
      uint64_t v26 = MEMORY[0x2533A4F70](v16, v25);
      long long v27 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v0 + 80) = *v12;
      *(_OWORD *)(v0 + 96) = v27;
      long long v28 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v0 + 128) = v28;
      sub_25192BA80();
      sub_25192BA80();
      sub_25192B750();
      swift_release();
      *(void *)(v0 + 144) = v22;
      sub_25192BA80();
      sub_25192BA80();
      sub_25192B750();
      swift_release_n();
      swift_release_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v14 = sub_251846464(0, v14[2] + 1, 1, v14);
      }
      unint64_t v30 = v14[2];
      unint64_t v29 = v14[3];
      if (v30 >= v29 >> 1) {
        uint64_t v14 = sub_251846464((void *)(v29 > 1), v30 + 1, 1, v14);
      }
      v14[2] = v30 + 1;
      uint64_t v31 = &v14[2 * v30];
      v31[4] = v24;
      v31[5] = v26;
      sub_2517E46D8((uint64_t)v12);
      v13 += 4;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = (void *)MEMORY[0x263F8EE78];
  }
  sub_2517E16E0(*(void *)(v0 + 264), &qword_269B54408);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = *(uint64_t (**)(void *))(v0 + 8);
  return v32(v14);
}

uint64_t sub_2518A1F14(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v6 = *(void **)v4;
  int64_t v7 = *(void *)(*(void *)v4 + 16);
  if (v7 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    uint64_t v6 = sub_251846464(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  uint64_t v16 = &v6[2 * a1 + 4];
  swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v17 = v6[2];
  BOOL v18 = __OFSUB__(v17, a2);
  uint64_t v19 = v17 - a2;
  if (v18) {
    goto LABEL_28;
  }
  if (v19 < 0)
  {
LABEL_30:
    uint64_t result = sub_25192D6F0();
    __break(1u);
    return result;
  }
  long long v20 = (char *)(v16 + 2);
  uint64_t v21 = &v6[2 * a2 + 4];
  if (v16 + 2 != v21 || v20 >= (char *)&v21[2 * v19]) {
    memmove(v20, v21, 16 * v19);
  }
  uint64_t v22 = v6[2];
  BOOL v18 = __OFADD__(v22, v10);
  uint64_t v23 = v22 + v10;
  if (v18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  void v6[2] = v23;
LABEL_20:
  *uint64_t v16 = a3;
  v16[1] = a4;
  *(void *)uint64_t v4 = v6;
  sub_25192BA80();
  return sub_25192BA80();
}

uint64_t sub_2518A20B4(uint64_t a1)
{
  uint64_t v2 = sub_25192BC50();
  MEMORY[0x270FA5388](v2 - 8);
  long long v27 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v74 = (void *)MEMORY[0x263F8EE78];
  uint64_t v29 = *(void *)(a1 + 16);
  if (v29)
  {
    uint64_t v28 = a1 + 32;
    v26[0] = a1;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    v26[1] = 0x800000025194B1B0;
    while (1)
    {
      uint64_t v6 = v74;
      uint64_t v7 = v74[2];
      uint64_t v8 = *(void *)(v28 + 16 * v5 + 8);
      long long v33 = *(_OWORD *)(v28 + 16 * v5);
      if (v7) {
        break;
      }
      sub_25192BA80();
      sub_25192BA80();
      uint64_t v12 = 0;
LABEL_16:
      sub_25192BA80();
      sub_25192BA80();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_251846464(0, v6[2] + 1, 1, v6);
      }
      unint64_t v16 = v6[2];
      unint64_t v15 = v6[3];
      long long v17 = v33;
      if (v16 >= v15 >> 1)
      {
        BOOL v18 = sub_251846464((void *)(v15 > 1), v16 + 1, 1, v6);
        long long v17 = v33;
        uint64_t v6 = v18;
      }
      void v6[2] = v16 + 1;
      *(_OWORD *)&v6[2 * v16 + 4] = v17;
      sub_2518A3D98(v12);
      swift_release();
      swift_release();
      uint64_t v74 = v6;
LABEL_4:
      if (++v5 == v29)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v74;
      }
    }
    uint64_t v30 = v5;
    swift_bridgeObjectRetain_n();
    uint64_t v37 = v33;
    sub_25192BA80();
    uint64_t v31 = v8;
    sub_25192BA80();
    uint64_t v32 = v6;
    uint64_t v9 = v6 + 5;
    uint64_t v36 = v6 + 5;
    uint64_t v34 = v7;
    while (1)
    {
      uint64_t v38 = v7;
      uint64_t v10 = *(v9 - 1);
      uint64_t v11 = *v9;
      sub_25192BA80();
      uint64_t v48 = v11;
      sub_25192BA80();
      uint64_t v49 = v10;
      sub_25192B740();
      uint64_t v41 = *((void *)&v70 + 1);
      *(void *)&long long v43 = v70;
      uint64_t v39 = v71;
      long long v66 = v70;
      long long v67 = v71;
      long long v68 = v72;
      long long v69 = v73;
      sub_25192B740();
      unint64_t v47 = v58;
      *(void *)&long long v46 = v59;
      *(void *)&long long v44 = v60;
      uint64_t v42 = v61;
      uint64_t v40 = v62;
      unint64_t v50 = v58;
      uint64_t v51 = v59;
      uint64_t v52 = v60;
      uint64_t v53 = v61;
      uint64_t v54 = v62;
      uint64_t v55 = v63;
      uint64_t v56 = v64;
      uint64_t v57 = v65;
      LODWORD(v45) = _s14HomeAppIntents12DeviceEntityV2eeoiySbAC_ACtFZ_0((uint64_t)&v66, (uint64_t)&v50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      if (v45) {
        break;
      }
      swift_release();
      swift_release();
      v9 += 2;
      uint64_t v7 = v38 - 1;
      if (v38 == 1)
      {
        uint64_t v6 = v32;
        swift_bridgeObjectRelease_n();
        uint64_t v12 = 0;
LABEL_15:
        uint64_t v5 = v30;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRetain();
    sub_25192BA80();
    sub_25192BA80();
    unint64_t v13 = 0;
    uint64_t v14 = v36;
    while (1)
    {
      unint64_t v47 = v13;
      sub_25192BA80();
      sub_25192BA80();
      sub_25192B740();
      uint64_t v40 = *((void *)&v70 + 1);
      uint64_t v42 = v70;
      uint64_t v35 = *((void *)&v71 + 1);
      uint64_t v38 = v71;
      long long v66 = v70;
      long long v67 = v71;
      long long v68 = v72;
      long long v69 = v73;
      sub_25192B740();
      *(void *)&long long v46 = v58;
      *(void *)&long long v45 = v59;
      *(void *)&long long v43 = v60;
      uint64_t v41 = v61;
      uint64_t v39 = v62;
      uint64_t v36 = v63;
      unint64_t v50 = v58;
      uint64_t v51 = v59;
      uint64_t v52 = v60;
      uint64_t v53 = v61;
      uint64_t v54 = v62;
      uint64_t v55 = v63;
      uint64_t v56 = v64;
      uint64_t v57 = v65;
      LODWORD(v44) = _s14HomeAppIntents12DeviceEntityV2eeoiySbAC_ACtFZ_0((uint64_t)&v66, (uint64_t)&v50);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      if (v44) {
        break;
      }
      unint64_t v13 = v47 + 1;
      v14 += 2;
      if (v34 == v47 + 1)
      {
        swift_release();
        uint64_t v12 = v49;
        swift_release();
        uint64_t v6 = v32;
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v19 = v47;
    sub_25189FEB4(v47);
    swift_release();
    swift_release();
    sub_25192B740();
    long long v45 = v71;
    long long v46 = v70;
    long long v43 = v73;
    long long v44 = v72;
    sub_25192B740();
    sub_25192B740();
    sub_2517EF3B8(v66);
    unint64_t v20 = v58;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B53AB8);
    uint64_t v21 = v27;
    sub_25192BC30();
    unint64_t v22 = sub_2517E4C50();
    uint64_t v23 = MEMORY[0x2533A4F70](v21, v22);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B544E8);
    sub_25192BA80();
    sub_25192BC30();
    unint64_t v24 = sub_251808B28();
    uint64_t v25 = MEMORY[0x2533A4F70](v21, v24);
    long long v66 = v46;
    long long v67 = v45;
    long long v68 = v44;
    long long v69 = v43;
    sub_25192BA80();
    sub_25192BA80();
    sub_25192B750();
    swift_release();
    *(void *)&long long v66 = v20;
    sub_25192BA80();
    sub_25192BA80();
    sub_25192B750();
    swift_release_n();
    uint64_t result = swift_release_n();
    if (v74[2] >= v19)
    {
      sub_2518A1F14(v19, v19, v23, v25);
      swift_release();
      swift_release();
      swift_release_n();
      swift_release_n();
      swift_release();
      swift_release();
      uint64_t v5 = v30;
      goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2518A27C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 400) = a6;
  *(void *)(v6 + 176) = a4;
  *(void *)(v6 + 184) = a5;
  *(void *)(v6 + 160) = a2;
  *(void *)(v6 + 168) = a3;
  *(void *)(v6 + 152) = a1;
  sub_25192BC50();
  *(void *)(v6 + 192) = swift_task_alloc();
  uint64_t v7 = sub_25192BD10();
  *(void *)(v6 + 200) = v7;
  *(void *)(v6 + 208) = *(void *)(v7 - 8);
  *(void *)(v6 + 216) = swift_task_alloc();
  uint64_t v8 = sub_25192BE00();
  *(void *)(v6 + 224) = v8;
  *(void *)(v6 + 232) = *(void *)(v8 - 8);
  *(void *)(v6 + 240) = swift_task_alloc();
  uint64_t v9 = sub_25192CF30();
  *(void *)(v6 + 248) = v9;
  *(void *)(v6 + 256) = *(void *)(v9 - 8);
  *(void *)(v6 + 264) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54408);
  *(void *)(v6 + 272) = swift_task_alloc();
  *(void *)(v6 + 280) = swift_task_alloc();
  *(void *)(v6 + 288) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2518A29C0, 0, 0);
}

uint64_t sub_2518A29C0()
{
  uint64_t v1 = v0[36];
  uint64_t v2 = sub_25192C1E0();
  v0[37] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[38] = v3;
  uint64_t v5 = v3 + 56;
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v0[39] = v4;
  v0[40] = v5 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v4(v1, 1, 1, v2);
  v0[41] = sub_25192BEB0();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[42] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_2518A2AE4;
  return MEMORY[0x270F3A2E0](0);
}

uint64_t sub_2518A2AE4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 344) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2518A2BE4, 0, 0);
}

uint64_t sub_2518A2BE4()
{
  char v1 = *(unsigned char *)(v0 + 400);
  (*(void (**)(void, void, void))(*(void *)(v0 + 256) + 16))(*(void *)(v0 + 264), *(void *)(v0 + 176), *(void *)(v0 + 248));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 352) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2518A2CB4;
  uint64_t v3 = *(void *)(v0 + 280);
  uint64_t v4 = *(void *)(v0 + 264);
  uint64_t v5 = *(void *)(v0 + 184);
  return MEMORY[0x270F3A350](v3, v4, 0, 1, v5, v1 & 1);
}

uint64_t sub_2518A2CB4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 360) = v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)v2[43];
  (*(void (**)(void, void))(v2[32] + 8))(v2[33], v2[31]);

  if (v0) {
    uint64_t v4 = sub_2518A3180;
  }
  else {
    uint64_t v4 = sub_2518A2E34;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2518A2E34()
{
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 168);
  sub_2517E16E0(v1, &qword_269B54408);
  sub_2517F7AB8(v2, v1, &qword_269B54408);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (_OWORD *)(v0 + 16);
    uint64_t v6 = (long long *)(*(void *)(v0 + 168) + 32);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B53AB8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B544E8);
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    do
    {
      uint64_t v8 = *(void *)(v0 + 288);
      uint64_t v9 = *(void *)(v0 + 192);
      uint64_t v10 = *(void *)(v0 + 160);
      long long v11 = v6[3];
      long long v13 = *v6;
      long long v12 = v6[1];
      *(_OWORD *)(v0 + 48) = v6[2];
      *(_OWORD *)(v0 + 64) = v11;
      _OWORD *v5 = v13;
      *(_OWORD *)(v0 + 32) = v12;
      uint64_t v14 = swift_task_alloc();
      *(void *)(v14 + 16) = v5;
      *(void *)(v14 + 24) = v8;
      sub_2517E464C((uint64_t)v5);
      unint64_t v15 = sub_2517EA5BC((void (*)(long long *__return_ptr, char *))sub_251808B0C, v14, v10);
      swift_task_dealloc();
      sub_2517E464C((uint64_t)v5);
      sub_25192BC30();
      unint64_t v16 = sub_2517E4C50();
      uint64_t v17 = MEMORY[0x2533A4F70](v9, v16);
      sub_25192BA80();
      sub_25192BC30();
      unint64_t v18 = sub_251808B28();
      uint64_t v19 = MEMORY[0x2533A4F70](v9, v18);
      long long v20 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v0 + 80) = *v5;
      *(_OWORD *)(v0 + 96) = v20;
      long long v21 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v0 + 128) = v21;
      sub_25192BA80();
      sub_25192BA80();
      sub_25192B750();
      swift_release();
      *(void *)(v0 + 144) = v15;
      sub_25192BA80();
      sub_25192BA80();
      sub_25192B750();
      swift_release_n();
      swift_release_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_251846464(0, v7[2] + 1, 1, v7);
      }
      unint64_t v23 = v7[2];
      unint64_t v22 = v7[3];
      if (v23 >= v22 >> 1) {
        uint64_t v7 = sub_251846464((void *)(v22 > 1), v23 + 1, 1, v7);
      }
      v7[2] = v23 + 1;
      unint64_t v24 = &v7[2 * v23];
      v24[4] = v17;
      v24[5] = v19;
      sub_2517E46D8((uint64_t)v5);
      v6 += 4;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
  }
  sub_2517E16E0(*(void *)(v0 + 288), &qword_269B54408);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void *))(v0 + 8);
  return v25(v7);
}

uint64_t sub_2518A3180()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 368) = v1;
  void *v1 = v0;
  v1[1] = sub_2518A3218;
  return MEMORY[0x270F3A2E0](0);
}

uint64_t sub_2518A3218(uint64_t a1)
{
  *(void *)(*(void *)v1 + 376) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2518A3318, 0, 0);
}

uint64_t sub_2518A3318()
{
  uint64_t v2 = v0[29];
  uint64_t v1 = v0[30];
  uint64_t v3 = v0[28];
  sub_25192C130();
  sub_25192BDD0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_25192D460();
  v0[48] = sub_25192D450();
  uint64_t v5 = sub_25192D440();
  return MEMORY[0x270FA2498](sub_2518A33F4, v5, v4);
}

uint64_t sub_2518A33F4()
{
  uint64_t v1 = *(void **)(v0 + 376);
  swift_release();
  *(void *)(v0 + 392) = sub_25192BE50();

  return MEMORY[0x270FA2498](sub_2518A3468, 0, 0);
}

uint64_t sub_2518A3468()
{
  if (*(void *)(*(void *)(v0 + 392) + 16) && (unint64_t v1 = sub_251823860(*(void *)(v0 + 216)), (v2 & 1) != 0))
  {
    (*(void (**)(void, unint64_t, void))(*(void *)(v0 + 304) + 16))(*(void *)(v0 + 272), *(void *)(*(void *)(v0 + 392) + 56) + *(void *)(*(void *)(v0 + 304) + 72) * v1, *(void *)(v0 + 296));
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v3 = 1;
  }
  uint64_t v4 = *(void *)(v0 + 360);
  uint64_t v6 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 216);
  uint64_t v7 = *(void *)(v0 + 200);
  (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 312))(*(void *)(v0 + 272), v3, 1, *(void *)(v0 + 296));
  swift_bridgeObjectRelease();
  MEMORY[0x2533A7430](v4);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  uint64_t v8 = *(void *)(v0 + 272);
  uint64_t v9 = *(void *)(v0 + 288);
  uint64_t v10 = *(void *)(v0 + 168);
  sub_2517E16E0(v9, &qword_269B54408);
  sub_2517F7AB8(v8, v9, &qword_269B54408);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    long long v12 = (_OWORD *)(v0 + 16);
    long long v13 = (long long *)(*(void *)(v0 + 168) + 32);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B53AB8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B544E8);
    swift_bridgeObjectRetain();
    uint64_t v14 = (void *)MEMORY[0x263F8EE78];
    do
    {
      uint64_t v15 = *(void *)(v0 + 288);
      uint64_t v16 = *(void *)(v0 + 192);
      uint64_t v17 = *(void *)(v0 + 160);
      long long v18 = v13[3];
      long long v20 = *v13;
      long long v19 = v13[1];
      *(_OWORD *)(v0 + 48) = v13[2];
      *(_OWORD *)(v0 + 64) = v18;
      *long long v12 = v20;
      *(_OWORD *)(v0 + 32) = v19;
      uint64_t v21 = swift_task_alloc();
      *(void *)(v21 + 16) = v12;
      *(void *)(v21 + 24) = v15;
      sub_2517E464C((uint64_t)v12);
      unint64_t v22 = sub_2517EA5BC((void (*)(long long *__return_ptr, char *))sub_251808B0C, v21, v17);
      swift_task_dealloc();
      sub_2517E464C((uint64_t)v12);
      sub_25192BC30();
      unint64_t v23 = sub_2517E4C50();
      uint64_t v24 = MEMORY[0x2533A4F70](v16, v23);
      sub_25192BA80();
      sub_25192BC30();
      unint64_t v25 = sub_251808B28();
      uint64_t v26 = MEMORY[0x2533A4F70](v16, v25);
      long long v27 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v0 + 80) = *v12;
      *(_OWORD *)(v0 + 96) = v27;
      long long v28 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v0 + 128) = v28;
      sub_25192BA80();
      sub_25192BA80();
      sub_25192B750();
      swift_release();
      *(void *)(v0 + 144) = v22;
      sub_25192BA80();
      sub_25192BA80();
      sub_25192B750();
      swift_release_n();
      swift_release_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v14 = sub_251846464(0, v14[2] + 1, 1, v14);
      }
      unint64_t v30 = v14[2];
      unint64_t v29 = v14[3];
      if (v30 >= v29 >> 1) {
        uint64_t v14 = sub_251846464((void *)(v29 > 1), v30 + 1, 1, v14);
      }
      v14[2] = v30 + 1;
      uint64_t v31 = &v14[2 * v30];
      v31[4] = v24;
      v31[5] = v26;
      sub_2517E46D8((uint64_t)v12);
      v13 += 4;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = (void *)MEMORY[0x263F8EE78];
  }
  sub_2517E16E0(*(void *)(v0 + 288), &qword_269B54408);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = *(uint64_t (**)(void *))(v0 + 8);
  return v32(v14);
}

uint64_t sub_2518A3854(char *a1, long long *a2)
{
  uint64_t v4 = sub_25192BC50();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *a1;
  long long v15 = *a2;
  uint64_t v8 = *((void *)a2 + 2);
  uint64_t v9 = *((void *)a2 + 3);
  __int16 v10 = *((_WORD *)a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53AD0);
  sub_25192BC30();
  unint64_t v11 = sub_2517E4CA4();
  uint64_t v12 = MEMORY[0x2533A4F60](v6, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56618);
  sub_25192BA80();
  sub_25192BC30();
  unint64_t v13 = sub_2518A3D44();
  MEMORY[0x2533A4F80](v6, v13);
  LOBYTE(v16) = v7;
  sub_25192BA80();
  sub_25192BA80();
  sub_25192B750();
  swift_release();
  long long v16 = v15;
  uint64_t v17 = v8;
  uint64_t v18 = v9;
  __int16 v19 = v10;
  sub_25192BA80();
  sub_25192BA80();
  sub_25192B750();
  swift_release_n();
  swift_release_n();
  return v12;
}

uint64_t sub_2518A39F8()
{
  uint64_t v0 = sub_25192BC50();
  MEMORY[0x270FA5388](v0 - 8);
  char v2 = (char *)v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53AD0);
  sub_25192BC30();
  unint64_t v3 = sub_2517E4CA4();
  uint64_t v4 = MEMORY[0x2533A4F60](v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56618);
  sub_25192BA80();
  sub_25192BC30();
  unint64_t v5 = sub_2518A3D44();
  MEMORY[0x2533A4F80](v2, v5);
  LOBYTE(v7[0]) = 62;
  sub_25192BA80();
  sub_25192BA80();
  sub_25192B750();
  swift_release();
  memset(v7, 0, sizeof(v7));
  __int16 v8 = 256;
  sub_25192BA80();
  sub_25192BA80();
  sub_25192B750();
  swift_release_n();
  swift_release_n();
  return v4;
}

uint64_t sub_2518A3B74()
{
  uint64_t v0 = sub_25192BC50();
  MEMORY[0x270FA5388](v0 - 8);
  char v2 = (char *)v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53AB8);
  sub_25192BC30();
  unint64_t v3 = sub_2517E4C50();
  uint64_t v4 = MEMORY[0x2533A4F70](v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B544E8);
  sub_25192BA80();
  sub_25192BC30();
  unint64_t v5 = sub_251808B28();
  MEMORY[0x2533A4F70](v2, v5);
  sub_25192BA80();
  sub_25192BA80();
  sub_2518BC014((uint64_t *)v8);
  v7[0] = v8[0];
  v7[1] = v8[1];
  _OWORD v7[2] = v8[2];
  v7[3] = v8[3];
  sub_25192B750();
  swift_release();
  *(void *)&v8[0] = MEMORY[0x263F8EE78];
  sub_25192BA80();
  sub_25192BA80();
  sub_25192B750();
  swift_release_n();
  swift_release_n();
  return v4;
}

unint64_t sub_2518A3CF0()
{
  unint64_t result = qword_269B56610;
  if (!qword_269B56610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56610);
  }
  return result;
}

unint64_t sub_2518A3D44()
{
  unint64_t result = qword_269B56620;
  if (!qword_269B56620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56620);
  }
  return result;
}

uint64_t sub_2518A3D98(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_2518A3DD8@<X0>(uint64_t a1@<X8>)
{
  return sub_25189E61C(a1);
}

BOOL sub_2518A3DF4()
{
  return sub_25189E7BC();
}

uint64_t sub_2518A3E14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Outcome.FailureWithHomeKitErrorCodeCase()
{
  return &type metadata for Outcome.FailureWithHomeKitErrorCodeCase;
}

ValueMetadata *type metadata accessor for Outcome.FailureWithHomeKitErrorCodeCase.Resolver()
{
  return &type metadata for Outcome.FailureWithHomeKitErrorCodeCase.Resolver;
}

ValueMetadata *type metadata accessor for Outcome.FailureCase()
{
  return &type metadata for Outcome.FailureCase;
}

ValueMetadata *type metadata accessor for Outcome.FailureCase.Resolver()
{
  return &type metadata for Outcome.FailureCase.Resolver;
}

ValueMetadata *type metadata accessor for Outcome.SuccessCase()
{
  return &type metadata for Outcome.SuccessCase;
}

ValueMetadata *type metadata accessor for Outcome.SuccessCase.Resolver()
{
  return &type metadata for Outcome.SuccessCase.Resolver;
}

uint64_t destroy for Outcome(uint64_t a1)
{
  return sub_251808B7C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32), *(unsigned char *)(a1 + 33));
}

uint64_t initializeWithCopy for Outcome(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 33);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_2518168EC(*(void *)a2, v4, v5, v6, v8, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = v7;
  return a1;
}

uint64_t assignWithCopy for Outcome(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 33);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_2518168EC(*(void *)a2, v4, v5, v6, v8, v7);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v13 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  char v14 = *(unsigned char *)(a1 + 33);
  *(unsigned char *)(a1 + 33) = v7;
  sub_251808B7C(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Outcome(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 33);
  char v10 = *(unsigned char *)(a1 + 32);
  *(_WORD *)(a1 + 32) = v3;
  sub_251808B7C(v4, v6, v5, v7, v10, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Outcome(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 34)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 33);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Outcome(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 34) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 33) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2518A40CC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 33);
}

uint64_t sub_2518A40D4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 33) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Outcome()
{
  return &type metadata for Outcome;
}

uint64_t sub_2518A40EC()
{
  return sub_2517E2990(&qword_269B56648, &qword_269B56650);
}

unint64_t sub_2518A412C()
{
  unint64_t result = qword_269B56658;
  if (!qword_269B56658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56658);
  }
  return result;
}

unint64_t sub_2518A4184()
{
  unint64_t result = qword_269B56660;
  if (!qword_269B56660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56660);
  }
  return result;
}

unint64_t sub_2518A41DC()
{
  unint64_t result = qword_269B56668;
  if (!qword_269B56668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56668);
  }
  return result;
}

unint64_t sub_2518A4234()
{
  unint64_t result = qword_269B56670;
  if (!qword_269B56670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56670);
  }
  return result;
}

unint64_t sub_2518A428C()
{
  unint64_t result = qword_269B56678;
  if (!qword_269B56678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56678);
  }
  return result;
}

unint64_t sub_2518A42E8()
{
  unint64_t result = qword_269B56680;
  if (!qword_269B56680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56680);
  }
  return result;
}

unint64_t sub_2518A4340()
{
  unint64_t result = qword_269B56688;
  if (!qword_269B56688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56688);
  }
  return result;
}

unint64_t sub_2518A4398()
{
  unint64_t result = qword_269B56690;
  if (!qword_269B56690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56690);
  }
  return result;
}

uint64_t sub_2518A43EC()
{
  return sub_2517E2990(&qword_269B56698, &qword_269B566A0);
}

unint64_t sub_2518A442C()
{
  unint64_t result = qword_269B566A8;
  if (!qword_269B566A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B566A8);
  }
  return result;
}

unint64_t sub_2518A4484()
{
  unint64_t result = qword_269B566B0;
  if (!qword_269B566B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B566B0);
  }
  return result;
}

unint64_t sub_2518A44DC()
{
  unint64_t result = qword_269B566B8;
  if (!qword_269B566B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B566B8);
  }
  return result;
}

unint64_t sub_2518A4534()
{
  unint64_t result = qword_269B566C0;
  if (!qword_269B566C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B566C0);
  }
  return result;
}

unint64_t sub_2518A458C()
{
  unint64_t result = qword_269B566C8;
  if (!qword_269B566C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B566C8);
  }
  return result;
}

unint64_t sub_2518A45E4()
{
  unint64_t result = qword_269B566D0;
  if (!qword_269B566D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B566D0);
  }
  return result;
}

unint64_t sub_2518A4640()
{
  unint64_t result = qword_269B566D8;
  if (!qword_269B566D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B566D8);
  }
  return result;
}

unint64_t sub_2518A4698()
{
  unint64_t result = qword_269B566E0;
  if (!qword_269B566E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B566E0);
  }
  return result;
}

unint64_t sub_2518A46F0()
{
  unint64_t result = qword_269B566E8;
  if (!qword_269B566E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B566E8);
  }
  return result;
}

uint64_t sub_2518A4744()
{
  return sub_2517E2990(&qword_269B566F0, &qword_269B566F8);
}

unint64_t sub_2518A4784()
{
  unint64_t result = qword_269B56700;
  if (!qword_269B56700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56700);
  }
  return result;
}

unint64_t sub_2518A47DC()
{
  unint64_t result = qword_269B56708;
  if (!qword_269B56708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56708);
  }
  return result;
}

unint64_t sub_2518A4834()
{
  unint64_t result = qword_269B56710;
  if (!qword_269B56710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56710);
  }
  return result;
}

unint64_t sub_2518A488C()
{
  unint64_t result = qword_269B56718;
  if (!qword_269B56718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56718);
  }
  return result;
}

unint64_t sub_2518A48E4()
{
  unint64_t result = qword_269B56720;
  if (!qword_269B56720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56720);
  }
  return result;
}

unint64_t sub_2518A493C()
{
  unint64_t result = qword_269B56728;
  if (!qword_269B56728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56728);
  }
  return result;
}

unint64_t sub_2518A4998()
{
  unint64_t result = qword_269B56730;
  if (!qword_269B56730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56730);
  }
  return result;
}

unint64_t sub_2518A49F0()
{
  unint64_t result = qword_269B56738;
  if (!qword_269B56738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56738);
  }
  return result;
}

unint64_t sub_2518A4A48()
{
  unint64_t result = qword_269B56740;
  if (!qword_269B56740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56740);
  }
  return result;
}

uint64_t sub_2518A4A9C()
{
  return sub_2517E2990(&qword_269B56748, &qword_269B56750);
}

unint64_t sub_2518A4ADC()
{
  unint64_t result = qword_269B56758;
  if (!qword_269B56758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56758);
  }
  return result;
}

unint64_t sub_2518A4B34()
{
  unint64_t result = qword_269B56760;
  if (!qword_269B56760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56760);
  }
  return result;
}

unint64_t sub_2518A4B8C()
{
  unint64_t result = qword_269B56770;
  if (!qword_269B56770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56770);
  }
  return result;
}

unint64_t sub_2518A4BE4()
{
  unint64_t result = qword_269B56780;
  if (!qword_269B56780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56780);
  }
  return result;
}

uint64_t sub_2518A4C38()
{
  return sub_2517E2990(&qword_269B56790, &qword_269B56798);
}

uint64_t sub_2518A4C74()
{
  return sub_2517E2990(&qword_269B567A0, &qword_269B567A8);
}

uint64_t sub_2518A4CB0()
{
  return sub_2517E2990(&qword_269B567B0, &qword_269B567B8);
}

unint64_t sub_2518A4CEC()
{
  unint64_t result = qword_269B567C0;
  if (!qword_269B567C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B567C0);
  }
  return result;
}

unint64_t sub_2518A4D40()
{
  unint64_t result = qword_269B567C8;
  if (!qword_269B567C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B567C8);
  }
  return result;
}

unint64_t sub_2518A4D94()
{
  unint64_t result = qword_269B567D0;
  if (!qword_269B567D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B567D0);
  }
  return result;
}

uint64_t sub_2518A4DE8@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_251808B0C(a1, a2);
}

unint64_t sub_2518A4E04()
{
  unint64_t result = qword_269B567D8;
  if (!qword_269B567D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B567D8);
  }
  return result;
}

unint64_t sub_2518A4E5C()
{
  unint64_t result = qword_269B567E0;
  if (!qword_269B567E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B567E0);
  }
  return result;
}

uint64_t sub_2518A4EB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2518A4ECC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2518A4F1C()
{
  unint64_t result = qword_269B567E8;
  if (!qword_269B567E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B567E8);
  }
  return result;
}

uint64_t sub_2518A4F70()
{
  uint64_t v0 = sub_25192BC50();
  __swift_allocate_value_buffer(v0, qword_269B5A628);
  __swift_project_value_buffer(v0, (uint64_t)qword_269B5A628);
  return sub_25192BC30();
}

uint64_t sub_2518A4FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  v5[13] = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E10);
  v5[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2518A507C, 0, 0);
}

uint64_t sub_2518A507C()
{
  uint64_t v22 = v0;
  if (qword_269B53418 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_25192D1D0();
  __swift_project_value_buffer(v1, (uint64_t)qword_269B5A090);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  char v2 = sub_25192D1B0();
  os_log_type_t v3 = sub_25192D510();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v17 = *(void *)(v0 + 112);
    os_log_type_t v20 = v3;
    log = v2;
    uint64_t v4 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v21 = v19;
    *(_DWORD *)uint64_t v4 = 136315906;
    sub_25192B800();
    *(unsigned char *)(v0 + 121) = *(unsigned char *)(v0 + 122);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B56870);
    uint64_t v5 = sub_25192D560();
    *(void *)(v0 + 32) = sub_2517F0D04(v5, v6, &v21);
    sub_25192D580();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    *(_WORD *)(v4 + 12) = 2080;
    sub_25192B800();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B56878);
    uint64_t v7 = sub_25192D560();
    *(void *)(v0 + 16) = sub_2517F0D04(v7, v8, &v21);
    sub_25192D580();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    *(_WORD *)(v4 + 22) = 2080;
    sub_25192B800();
    *(void *)(v0 + 40) = *(void *)(v0 + 56);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B56880);
    uint64_t v9 = sub_25192D560();
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 24) = sub_2517F0D04(v9, v11, &v21);
    sub_25192D580();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    *(_WORD *)(v4 + 32) = 2080;
    sub_25192B800();
    uint64_t v12 = sub_25192D560();
    unint64_t v14 = v13;
    sub_2518A6558(v17);
    *(void *)(v0 + 48) = sub_2517F0D04(v12, v14, &v21);
    sub_25192D580();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_2517D6000, log, v20, "Show Navigation Intent perform() called - category: %s dashboardViewType: %s devicesEntities: %s roomEntity: %s", (uint8_t *)v4, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x2533A75D0](v19, -1, -1);
    MEMORY[0x2533A75D0](v4, -1, -1);
  }
  else
  {
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
  }
  sub_25192B700();
  swift_task_dealloc();
  long long v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_2518A554C@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B53158 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25192BC50();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269B5A628);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_2518A55F4(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v7 = v1[2];
  uint64_t v6 = v1[3];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = sub_2517EDE20;
  return sub_2518A4FDC(a1, v4, v5, v7, v6);
}

uint64_t sub_2518A56B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2518A5C68();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t sub_2518A56E0(uint64_t a1)
{
  unint64_t v2 = sub_2518A4F1C();
  return MEMORY[0x270EE0D28](a1, v2);
}

uint64_t destroy for ShowNavigationIntent()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for ShowNavigationIntent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  return a1;
}

void *assignWithCopy for ShowNavigationIntent(void *a1, void *a2)
{
  *a1 = *a2;
  sub_25192BA80();
  swift_release();
  a1[1] = a2[1];
  sub_25192BA80();
  swift_release();
  a1[2] = a2[2];
  sub_25192BA80();
  swift_release();
  a1[3] = a2[3];
  sub_25192BA80();
  swift_release();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_OWORD *assignWithTake for ShowNavigationIntent(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShowNavigationIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShowNavigationIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowNavigationIntent()
{
  return &type metadata for ShowNavigationIntent;
}

uint64_t sub_2518A594C@<X0>(uint64_t a1@<X8>)
{
  v7[1] = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56850);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56840);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v9 = sub_25192BA00();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54370);
  unint64_t v5 = sub_2518A64B0();
  sub_25192BAA0();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v8 = sub_25192BA00();
  sub_2518A6504();
  sub_25192BAA0();
  swift_release();
  uint64_t v8 = v10;
  sub_25185C370();
  sub_25192BAC0();
  v7[3] = &type metadata for ShowIntentDeviceEntityFromAccessoryTypeResolver;
  _OWORD v7[4] = v9;
  _OWORD v7[2] = v5;
  sub_25192BAB0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_release();
  return swift_release();
}

uint64_t sub_2518A5B80()
{
  return swift_release();
}

uint64_t sub_2518A5C68()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E10);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v42 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_25192B990();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v51 = v2;
  uint64_t v52 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v49 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B542E8);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B539C0);
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25192BC50();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B567F8);
  sub_25192BC30();
  long long v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v45 = v15 + 56;
  uint64_t v47 = v14;
  v44(v13, 1, 1, v14);
  char v55 = 8;
  uint64_t v16 = sub_25192B6D0();
  uint64_t v43 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  uint64_t v48 = v17 + 56;
  v18(v10, 1, 1, v16);
  uint64_t v34 = v8;
  v18(v8, 1, 1, v16);
  unsigned int v50 = *MEMORY[0x263EFBDC8];
  uint64_t v19 = v51;
  long long v46 = *(void (**)(char *))(v52 + 104);
  v52 += 104;
  v46(v49);
  sub_2518A63BC();
  uint64_t v41 = sub_25192B840();
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56808);
  sub_25192BC30();
  os_log_type_t v20 = v13;
  uint64_t v21 = v14;
  uint64_t v22 = v44;
  v44(v13, 1, 1, v21);
  char v54 = 3;
  uint64_t v23 = v10;
  uint64_t v24 = v43;
  uint64_t v35 = v18;
  v18(v10, 1, 1, v43);
  unint64_t v25 = v34;
  v18(v34, 1, 1, v24);
  uint64_t v26 = v19;
  long long v27 = v46;
  ((void (*)(char *, void, uint64_t))v46)(v49, v50, v26);
  sub_25185CC30();
  uint64_t v36 = v20;
  uint64_t v40 = sub_25192B840();
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56810);
  sub_25192BC30();
  v22(v20, 1, 1, v47);
  uint64_t v53 = 0;
  uint64_t v28 = v43;
  unint64_t v29 = v35;
  v35(v23, 1, 1, v43);
  v29(v25, 1, 1, v28);
  unint64_t v30 = v49;
  ((void (*)(char *, void, uint64_t))v27)(v49, v50, v51);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56818);
  uint64_t v38 = MEMORY[0x263EFBEF8];
  sub_2517E2990(&qword_269B56820, &qword_269B56818);
  sub_2517E4C50();
  uint64_t v31 = v36;
  uint64_t v39 = sub_25192B850();
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56828);
  sub_25192BC30();
  v44(v31, 1, 1, v47);
  uint64_t v32 = type metadata accessor for RoomEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v42, 1, 1, v32);
  v29(v23, 1, 1, v28);
  v29(v25, 1, 1, v28);
  ((void (*)(char *, void, uint64_t))v46)(v30, v50, v51);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56830);
  sub_2517E2990(&qword_269B56838, &qword_269B56830);
  sub_2518A6468(&qword_269B54338);
  sub_25192B850();
  return v41;
}

unint64_t sub_2518A63BC()
{
  unint64_t result = qword_269B56800;
  if (!qword_269B56800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56800);
  }
  return result;
}

unint64_t sub_2518A6414()
{
  unint64_t result = qword_269B56848;
  if (!qword_269B56848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56848);
  }
  return result;
}

uint64_t sub_2518A6468(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for RoomEntity();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2518A64B0()
{
  unint64_t result = qword_269B56858;
  if (!qword_269B56858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56858);
  }
  return result;
}

unint64_t sub_2518A6504()
{
  unint64_t result = qword_269B56860;
  if (!qword_269B56860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269B56860);
  }
  return result;
}

uint64_t sub_2518A6558(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2518A65BC()
{
  unint64_t result = qword_269B56888;
  if (!qword_269B56888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56888);
  }
  return result;
}

unint64_t sub_2518A6614()
{
  unint64_t result = qword_269B56890;
  if (!qword_269B56890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56890);
  }
  return result;
}

uint64_t sub_2518A6668()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2518A6684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2518A7098(a1, a2, a3, (void (*)(void))sub_2518A66B0);
}

unint64_t sub_2518A66B0()
{
  unint64_t result = qword_269B56898;
  if (!qword_269B56898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56898);
  }
  return result;
}

uint64_t sub_2518A6704()
{
  uint64_t v0 = sub_25192BC50();
  __swift_allocate_value_buffer(v0, qword_269B5A640);
  __swift_project_value_buffer(v0, (uint64_t)qword_269B5A640);
  return sub_25192BC30();
}

uint64_t sub_2518A6768@<X0>(uint64_t a1@<X8>)
{
  return sub_25186B744(&qword_269B53160, MEMORY[0x263F06D40], (uint64_t)qword_269B5A640, a1);
}

uint64_t sub_2518A67A0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_2518A67C0, 0, 0);
}

uint64_t sub_2518A67C0()
{
  if (qword_269B53418 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_25192D1D0();
  __swift_project_value_buffer(v1, (uint64_t)qword_269B5A090);
  uint64_t v2 = sub_25192D1B0();
  os_log_type_t v3 = sub_25192D510();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_2517D6000, v2, v3, "Show Scene Result Intent perform() called", v4, 2u);
    MEMORY[0x2533A75D0](v4, -1, -1);
  }

  sub_25192B700();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_2518A68E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2518A7490();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2518A690C(uint64_t a1)
{
  unint64_t v2 = sub_2518A66B0();
  return MEMORY[0x270EE0D28](a1, v2);
}

uint64_t sub_2518A6948()
{
  uint64_t v0 = sub_25192BA40();
  __swift_allocate_value_buffer(v0, qword_269B5A658);
  __swift_project_value_buffer(v0, (uint64_t)qword_269B5A658);
  return sub_25192BA20();
}

unint64_t sub_2518A69B0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56918);
  uint64_t v0 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B548D0) - 8);
  uint64_t v1 = *(void *)(v0 + 72);
  unint64_t v2 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_25192DE90;
  uint64_t v4 = (unsigned char *)(v3 + v2);
  *uint64_t v4 = 0;
  sub_25192B910();
  v4[v1] = 1;
  sub_25192B910();
  v4[2 * v1] = 2;
  sub_25192B910();
  unint64_t result = sub_251821598(v3);
  qword_269B5A670 = result;
  return result;
}

uint64_t sub_2518A6B04(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2517DA2AC(*a1, *a2);
}

unint64_t sub_2518A6B14()
{
  unint64_t result = qword_269B568A8;
  if (!qword_269B568A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B568A8);
  }
  return result;
}

uint64_t sub_2518A6B68()
{
  return sub_25192D920();
}

uint64_t sub_2518A6C0C()
{
  sub_25192D300();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2518A6C9C()
{
  return sub_25192D920();
}

uint64_t sub_2518A6D3C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2518A78D8();
  *a1 = result;
  return result;
}

void sub_2518A6D6C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEA00000000007373;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x73736563637573;
  if (v2 != 1)
  {
    uint64_t v5 = 0x64656C696166;
    unint64_t v4 = 0xE600000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6572676F72506E69;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_2518A6DD0()
{
  unint64_t result = qword_269B568B0;
  if (!qword_269B568B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B568B0);
  }
  return result;
}

unint64_t sub_2518A6E28()
{
  unint64_t result = qword_269B568B8;
  if (!qword_269B568B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B568B8);
  }
  return result;
}

unint64_t sub_2518A6E80()
{
  unint64_t result = qword_269B568C0;
  if (!qword_269B568C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B568C0);
  }
  return result;
}

unint64_t sub_2518A6ED8()
{
  unint64_t result = qword_269B568C8;
  if (!qword_269B568C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B568C8);
  }
  return result;
}

unint64_t sub_2518A6F30()
{
  unint64_t result = qword_269B568D0;
  if (!qword_269B568D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B568D0);
  }
  return result;
}

unint64_t sub_2518A6F88()
{
  unint64_t result = qword_269B568D8;
  if (!qword_269B568D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B568D8);
  }
  return result;
}

unint64_t sub_2518A6FE0()
{
  unint64_t result = qword_269B568E0;
  if (!qword_269B568E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B568E0);
  }
  return result;
}

uint64_t sub_2518A7034@<X0>(uint64_t a1@<X8>)
{
  return sub_25186B744(&qword_269B53168, MEMORY[0x263EFBE48], (uint64_t)qword_269B5A658, a1);
}

uint64_t sub_2518A706C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2518A7098(a1, a2, a3, (void (*)(void))sub_2518A70E0);
}

uint64_t sub_2518A7098(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2518A70E0()
{
  unint64_t result = qword_269B568E8;
  if (!qword_269B568E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B568E8);
  }
  return result;
}

uint64_t sub_2518A7134(uint64_t a1)
{
  unint64_t v2 = sub_2518A70E0();
  return MEMORY[0x270EE0C40](a1, v2);
}

unint64_t sub_2518A7184()
{
  unint64_t result = qword_269B568F0;
  if (!qword_269B568F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B568F0);
  }
  return result;
}

unint64_t sub_2518A71DC()
{
  unint64_t result = qword_269B568F8;
  if (!qword_269B568F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B568F8);
  }
  return result;
}

unint64_t sub_2518A7234()
{
  unint64_t result = qword_269B56900;
  if (!qword_269B56900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56900);
  }
  return result;
}

uint64_t sub_2518A7288()
{
  if (qword_269B53170 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_2518A72E4(uint64_t a1)
{
  unint64_t v2 = sub_2518A6FE0();
  return MEMORY[0x270EE1C28](a1, v2);
}

uint64_t sub_2518A7330()
{
  return sub_2517E2990(&qword_269B56908, &qword_269B56910);
}

void sub_2518A736C(void *a1@<X8>)
{
  *a1 = &unk_270250F98;
}

unsigned char *storeEnumTagSinglePayload for SceneActivationState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2518A7448);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SceneActivationState()
{
  return &type metadata for SceneActivationState;
}

ValueMetadata *type metadata accessor for ShowSceneResultIntent()
{
  return &type metadata for ShowSceneResultIntent;
}

uint64_t sub_2518A7490()
{
  uint64_t v0 = sub_25192B990();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B542E8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  unint64_t v30 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56920);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B539C0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_25192BC50();
  uint64_t v29 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56928);
  sub_25192BC30();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v27 = v16 + 56;
  uint64_t v28 = v17;
  v17(v14, 1, 1, v15);
  uint64_t v18 = sub_25192D240();
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  uint64_t v19 = sub_25192B6D0();
  os_log_type_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v8, 1, 1, v19);
  unsigned int v25 = *MEMORY[0x263EFBDC8];
  uint64_t v21 = *(void (**)(void))(v1 + 104);
  uint64_t v23 = v1 + 104;
  uint64_t v24 = (void (*)(char *, void, uint64_t))v21;
  v21(v3);
  uint64_t v26 = sub_25192B870();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56930);
  sub_25192BC30();
  v28(v14, 1, 1, v29);
  LOBYTE(v31) = 3;
  v20(v8, 1, 1, v19);
  v20(v30, 1, 1, v19);
  v24(v3, v25, v0);
  sub_2518A70E0();
  sub_25192B840();
  return v26;
}

uint64_t sub_2518A78D8()
{
  unint64_t v0 = sub_25192D700();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_2518A7924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25192D480();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_25192D470();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_2517E16E0(a1, &qword_269B54410);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25192D440();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56B58);
  return swift_task_create();
}

uint64_t IntentNavigationDestination.rawValue.getter()
{
  uint64_t result = 0x726577736E61;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6B6E694C70656564;
      break;
    case 2:
      uint64_t result = 0x656369746F6ELL;
      break;
    case 3:
      uint64_t result = 0x686372616573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2518A7B54()
{
  uint64_t v0 = sub_25192BC50();
  __swift_allocate_value_buffer(v0, qword_269B5A678);
  __swift_project_value_buffer(v0, (uint64_t)qword_269B5A678);
  return sub_25192BC30();
}

uint64_t sub_2518A7BAC()
{
  return sub_25192B800();
}

uint64_t sub_2518A7BD0(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A690);
}

unint64_t sub_2518A7BF4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56B70);
  uint64_t v0 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B548C0) - 8);
  uint64_t v1 = *(void *)(v0 + 72);
  unint64_t v2 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_25192DEA0;
  uint64_t v4 = (unsigned char *)(v3 + v2);
  *uint64_t v4 = 0;
  sub_25192B910();
  v4[v1] = 1;
  sub_25192B910();
  unint64_t result = sub_2518215C0(v3);
  qword_269B5A6A8 = result;
  return result;
}

uint64_t sub_2518A7D04(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2517DA2A8(*a1, *a2);
}

uint64_t sub_2518A7D10()
{
  return sub_25192D920();
}

uint64_t sub_2518A7D90()
{
  sub_25192D300();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2518A7DFC()
{
  return sub_25192D920();
}

uint64_t sub_2518A7E78@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_25192D700();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_2518A7ED8(unint64_t *a1@<X8>)
{
  unint64_t v2 = 6449010;
  if (*v1) {
    unint64_t v2 = 0xD000000000000010;
  }
  unint64_t v3 = 0x800000025194AAA0;
  if (!*v1) {
    unint64_t v3 = 0xE300000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2518A7F14@<X0>(uint64_t a1@<X8>)
{
  return sub_2518AA98C(&qword_269B53180, MEMORY[0x263EFBE48], (uint64_t)qword_269B5A690, a1);
}

uint64_t sub_2518A7F4C(uint64_t a1)
{
  unint64_t v2 = sub_2518AD088();
  return MEMORY[0x270EE0C40](a1, v2);
}

uint64_t sub_2518A7F98()
{
  if (qword_269B53188 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_2518A7FF4(uint64_t a1)
{
  unint64_t v2 = sub_2518AD008();
  return MEMORY[0x270EE1C28](a1, v2);
}

void sub_2518A8040(void *a1@<X8>)
{
  *a1 = &unk_270251010;
}

uint64_t sub_2518A8050(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x270FA2498](sub_2518A8070, 0, 0);
}

uint64_t sub_2518A8070()
{
  uint64_t v19 = v0;
  sub_25192B800();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 56);
  if (v1 == 4)
  {
    if (qword_269B53418 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_25192D1D0();
    __swift_project_value_buffer(v2, (uint64_t)qword_269B5A090);
    unint64_t v3 = sub_25192D1B0();
    os_log_type_t v4 = sub_25192D510();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_2517D6000, v3, v4, "Running ShowIntent with default destination", v5, 2u);
      MEMORY[0x2533A75D0](v5, -1, -1);
    }

    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 48) = v6;
    *uint64_t v6 = v0;
    uint64_t v7 = sub_2518A861C;
LABEL_18:
    v6[1] = v7;
    return sub_2518A874C();
  }
  else
  {
    if (qword_269B53418 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_25192D1D0();
    __swift_project_value_buffer(v8, (uint64_t)qword_269B5A090);
    uint64_t v9 = sub_25192D1B0();
    os_log_type_t v10 = sub_25192D510();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v18 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      unint64_t v13 = 0xE600000000000000;
      uint64_t v14 = 0x726577736E61;
      switch(v1)
      {
        case 1:
          unint64_t v13 = 0xE800000000000000;
          uint64_t v14 = 0x6B6E694C70656564;
          break;
        case 2:
          uint64_t v14 = 0x656369746F6ELL;
          break;
        case 3:
          uint64_t v14 = 0x686372616573;
          break;
        default:
          break;
      }
      *(void *)(v0 + 16) = sub_2517F0D04(v14, v13, &v18);
      sub_25192D580();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2517D6000, v9, v10, "Running ShowIntent for %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533A75D0](v12, -1, -1);
      MEMORY[0x2533A75D0](v11, -1, -1);
    }

    switch(v1)
    {
      case 0:
      case 3:
        sub_2518B030C();
        swift_allocError();
        *uint64_t v15 = 2;
        swift_willThrow();
        uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
        goto LABEL_22;
      case 1:
        uint64_t v6 = (void *)swift_task_alloc();
        *(void *)(v0 + 40) = v6;
        *uint64_t v6 = v0;
        uint64_t v7 = sub_2518A8488;
        goto LABEL_18;
      case 2:
        sub_25192B700();
        uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
LABEL_22:
        uint64_t result = v16();
        break;
      default:
        JUMPOUT(0);
    }
  }
  return result;
}

uint64_t sub_2518A8488()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_2518A85B8, 0, 0);
  }
}

uint64_t sub_2518A85B8()
{
  sub_25192B700();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2518A861C()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_2518B09A8, 0, 0);
  }
}

uint64_t sub_2518A874C()
{
  v1[12] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54410);
  v1[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54418);
  v1[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54408);
  v1[17] = swift_task_alloc();
  uint64_t v2 = sub_25192C1E0();
  v1[18] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[19] = v3;
  v1[20] = *(void *)(v3 + 64);
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  uint64_t v4 = sub_25192CA70();
  v1[23] = v4;
  v1[24] = *(void *)(v4 - 8);
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  uint64_t v5 = sub_25192BD10();
  v1[27] = v5;
  v1[28] = *(void *)(v5 - 8);
  v1[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E10);
  v1[30] = swift_task_alloc();
  uint64_t v6 = sub_25192CC70();
  v1[31] = v6;
  v1[32] = *(void *)(v6 - 8);
  v1[33] = swift_task_alloc();
  v1[34] = swift_task_alloc();
  uint64_t v7 = sub_25192CD60();
  v1[35] = v7;
  v1[36] = *(void *)(v7 - 8);
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56B28);
  v1[42] = swift_task_alloc();
  v1[43] = swift_task_alloc();
  v1[44] = swift_task_alloc();
  v1[45] = swift_task_alloc();
  v1[46] = swift_task_alloc();
  uint64_t v8 = sub_25192CC50();
  v1[47] = v8;
  v1[48] = *(void *)(v8 - 8);
  v1[49] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2518A8BA0, 0, 0);
}

uint64_t sub_2518A8BA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_allocBox();
  uint64_t v4 = v3;
  v0[50] = v2;
  v0[51] = v3;
  uint64_t v5 = sub_25192BC70();
  v0[52] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v0[53] = v6;
  uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v63(v4, 1, 1, v5);
  sub_25192B800();
  uint64_t v7 = v0[10];
  uint64_t v61 = v5;
  uint64_t v62 = v4;
  if (v7)
  {
    int64_t v8 = *(void *)(v7 + 16);
    if (v8)
    {
      uint64_t v64 = v1;
      uint64_t v65 = MEMORY[0x263F8EE78];
      sub_2518C3840(0, v8, 0);
      uint64_t v9 = v7 + 48;
      do
      {
        sub_25192BA80();
        sub_25192BA80();
        sub_25192BA80();
        sub_25192BA80();
        sub_25192BA80();
        sub_25192BA80();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_25192B740();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v10 = v64[7];
        uint64_t v11 = v64[8];
        unint64_t v13 = *(void *)(v65 + 16);
        unint64_t v12 = *(void *)(v65 + 24);
        if (v13 >= v12 >> 1) {
          sub_2518C3840(v12 > 1, v13 + 1, 1);
        }
        *(void *)(v65 + 16) = v13 + 1;
        uint64_t v14 = v65 + 16 * v13;
        *(void *)(v14 + 32) = v10;
        *(void *)(v14 + 40) = v11;
        v9 += 64;
        --v8;
      }
      while (v8);
      uint64_t v1 = v64;
      uint64_t v16 = v64[48];
      uint64_t v15 = v64[49];
      uint64_t v17 = v64[47];
      swift_bridgeObjectRelease();
      v64[11] = v65;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B55E20);
      sub_2517E2990(&qword_269B56B40, &qword_269B55E20);
      sub_25192D220();
      swift_release();
      v64[5] = 0;
      v64[6] = 0xE000000000000000;
      sub_25192D310();
      (*(void (**)(uint64_t, void, uint64_t))(v16 + 104))(v15, *MEMORY[0x263F48BE0], v17);
      sub_25192D680();
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
      sub_25192D310();
      swift_bridgeObjectRelease();
      sub_25192B800();
      if (*((unsigned char *)v64 + 466) != 2)
      {
        sub_25192D310();
        swift_bridgeObjectRelease();
        sub_25192D310();
        swift_bridgeObjectRelease();
      }
      uint64_t v18 = v64[34];
      uint64_t v19 = v64[31];
      uint64_t v20 = v64[32];
      (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v18, *MEMORY[0x263F48BF8], v19);
      sub_25192CC60();
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      sub_25192CD50();
      sub_25192CD40();
      uint64_t v31 = v64[46];
      uint64_t v32 = v64[40];
      goto LABEL_15;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = v1[30];
  sub_25192B800();
  uint64_t v22 = type metadata accessor for RoomEntity();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22))
  {
    sub_2517E16E0(v1[30], &qword_269B53E10);
    sub_25192B800();
    uint64_t v23 = (unsigned int *)MEMORY[0x263F487C8];
    switch(*((unsigned char *)v1 + 465))
    {
      case 1:
      case 5:
      case 7:
        goto LABEL_20;
      case 2:
        uint64_t v23 = (unsigned int *)MEMORY[0x263F487A0];
        goto LABEL_20;
      case 3:
        uint64_t v23 = (unsigned int *)MEMORY[0x263F487B8];
        goto LABEL_20;
      case 4:
        uint64_t v23 = (unsigned int *)MEMORY[0x263F487A8];
        goto LABEL_20;
      case 6:
        uint64_t v23 = (unsigned int *)MEMORY[0x263F487D0];
        goto LABEL_20;
      case 8:
        sub_25192B800();
        if (*((unsigned char *)v1 + 464) == 3) {
          goto LABEL_23;
        }
        uint64_t v56 = v4;
        uint64_t v58 = v1[32];
        uint64_t v57 = v1[33];
        uint64_t v59 = v1[31];
        (*(void (**)(uint64_t, void, uint64_t))(v58 + 104))(v57, *MEMORY[0x263F48C00], v59);
        sub_25192CC60();
        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v59);
        sub_25192CD50();
        sub_25192CD40();
        uint64_t v60 = v1[43];
        (*(void (**)(void, void))(v1[36] + 8))(v1[37], v1[35]);
        v63(v60, 0, 1, v5);
        uint64_t v43 = v60;
        uint64_t v44 = v56;
        goto LABEL_22;
      default:
        uint64_t v23 = (unsigned int *)MEMORY[0x263F487E8];
LABEL_20:
        uint64_t v33 = v1[34];
        uint64_t v34 = v1[31];
        uint64_t v35 = v1[32];
        uint64_t v37 = v1[25];
        uint64_t v36 = v1[26];
        uint64_t v38 = v1[23];
        uint64_t v39 = v1[24];
        (*(void (**)(uint64_t, void, uint64_t))(v39 + 104))(v37, *v23, v38);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v36, v37, v38);
        (*(void (**)(uint64_t, void, uint64_t))(v35 + 104))(v33, *MEMORY[0x263F48BF0], v34);
        sub_25192CC60();
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
        sub_25192CA60();
        sub_25192CD50();
        sub_25192CD40();
        uint64_t v31 = v1[44];
        uint64_t v40 = v1[26];
        uint64_t v41 = v1[23];
        uint64_t v42 = v1[24];
        (*(void (**)(void, void))(v1[36] + 8))(v1[38], v1[35]);
        (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
        goto LABEL_21;
    }
  }
  uint64_t v24 = v1[34];
  uint64_t v25 = v1[31];
  uint64_t v26 = v1[32];
  uint64_t v28 = v1[29];
  uint64_t v27 = v1[30];
  uint64_t v30 = v1[27];
  uint64_t v29 = v1[28];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v28, v27, v30);
  sub_2517E16E0(v27, &qword_269B53E10);
  sub_25192BCD0();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  (*(void (**)(uint64_t, void, uint64_t))(v26 + 104))(v24, *MEMORY[0x263F48BE8], v25);
  sub_25192CC60();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  sub_25192CD50();
  sub_25192CD40();
  uint64_t v31 = v1[45];
  uint64_t v32 = v1[39];
LABEL_15:
  (*(void (**)(uint64_t, void))(v1[36] + 8))(v32, v1[35]);
LABEL_21:
  v63(v31, 0, 1, v61);
  uint64_t v43 = v31;
  uint64_t v44 = v62;
LABEL_22:
  sub_2518B0598(v43, v44);
LABEL_23:
  v1[54] = *(void *)(v1[12] + 8);
  sub_25192B800();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB8);
  uint64_t v45 = sub_25192C1D0();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = *(void *)(v46 + 72);
  unint64_t v48 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_25192DEA0;
  unint64_t v50 = v49 + v48;
  uint64_t v51 = *(void (**)(unint64_t, void, uint64_t))(v46 + 104);
  v51(v50, *MEMORY[0x263F48398], v45);
  v51(v50 + v47, *MEMORY[0x263F483A0], v45);
  uint64_t v52 = sub_2517F1A08(v49);
  v1[55] = v52;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v53 = (void *)swift_task_alloc();
  v1[56] = v53;
  *uint64_t v53 = v1;
  v53[1] = sub_2518A9800;
  uint64_t v54 = v1[15];
  return sub_251819E74(v54, v52, 0);
}

uint64_t sub_2518A9800(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 120);
  *(void *)(*(void *)v1 + 456) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_2517E16E0(v2, &qword_269B53BB0);
  return MEMORY[0x270FA2498](sub_2518A9944, 0, 0);
}

uint64_t sub_2518A9944()
{
  uint64_t v62 = v0;
  uint64_t v1 = v0[57];
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BD8);
  uint64_t v4 = *(void *)(v3 - 8);
  if (v2)
  {
    sub_2517E079C(v1+ ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80)), v0[16], &qword_269B53BD8);
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  uint64_t v6 = v0[16];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v6, v5, 1, v3);
  swift_bridgeObjectRelease();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BD8);
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  uint64_t v9 = v0[18];
  uint64_t v10 = v0[19];
  uint64_t v11 = v0[17];
  if (v8 == 1)
  {
    sub_2517E16E0(v0[16], &qword_269B54418);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v11, 1, 1, v9);
LABEL_7:
    sub_2517E16E0(v0[17], &qword_269B54408);
    if (qword_269B53418 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[12];
    uint64_t v15 = sub_25192D1D0();
    __swift_project_value_buffer(v15, (uint64_t)qword_269B5A090);
    sub_251800F6C(v14);
    sub_251800F6C(v14);
    uint64_t v16 = sub_25192D1B0();
    os_log_type_t v17 = sub_25192D4F0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = v0[14];
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v61 = v20;
      *(_DWORD *)uint64_t v19 = 136315138;
      sub_25192B800();
      uint64_t v21 = type metadata accessor for HomeEntity();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v18, 1, v21))
      {
        sub_2517E16E0(v0[14], &qword_269B53BB0);
        unint64_t v22 = 0xE300000000000000;
        uint64_t v23 = 7104878;
      }
      else
      {
        uint64_t v46 = v0[28];
        uint64_t v47 = v0[29];
        uint64_t v48 = v0[27];
        uint64_t v49 = v0[14];
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v47, v49, v48);
        sub_2517E16E0(v49, &qword_269B53BB0);
        uint64_t v23 = sub_25192BCD0();
        unint64_t v22 = v50;
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v47, v48);
      }
      uint64_t v51 = v0[12];
      v0[9] = sub_2517F0D04(v23, v22, &v61);
      sub_25192D580();
      swift_bridgeObjectRelease();
      sub_251801034(v51);
      sub_251801034(v51);
      _os_log_impl(&dword_2517D6000, v16, v17, "No snapshot found for home %s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533A75D0](v20, -1, -1);
      MEMORY[0x2533A75D0](v19, -1, -1);
    }
    else
    {
      uint64_t v24 = v0[12];
      sub_251801034(v24);
      sub_251801034(v24);
    }

    sub_2518B030C();
    swift_allocError();
    *uint64_t v52 = 1;
    swift_willThrow();
LABEL_22:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v53 = (uint64_t (*)(void))v0[1];
    goto LABEL_23;
  }
  uint64_t v12 = v0[16] + *(int *)(v7 + 48);
  unint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  v13(v0[17], v0[16], v0[18]);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v11, 0, 1, v9);
  sub_2517E16E0(v12, &qword_269B53BE0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1) {
    goto LABEL_7;
  }
  uint64_t v59 = v0[53];
  uint64_t v60 = v0[52];
  uint64_t v56 = v0[50];
  uint64_t v57 = v0[51];
  uint64_t v58 = v0[42];
  uint64_t v26 = v0[21];
  uint64_t v25 = v0[22];
  uint64_t v27 = v0[19];
  uint64_t v28 = v0[18];
  uint64_t v30 = (_OWORD *)v0[12];
  uint64_t v29 = v0[13];
  v13(v25, v0[17], v28);
  uint64_t v31 = sub_25192D480();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v29, 1, 1, v31);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v26, v25, v28);
  unint64_t v32 = (*(unsigned __int8 *)(v27 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = 0;
  *(void *)(v33 + 24) = 0;
  long long v35 = v30[4];
  long long v34 = v30[5];
  long long v36 = v30[3];
  *(_OWORD *)(v33 + 64) = v30[2];
  *(_OWORD *)(v33 + 80) = v36;
  *(_OWORD *)(v33 + 96) = v35;
  *(_OWORD *)(v33 + 112) = v34;
  long long v37 = v30[1];
  *(_OWORD *)(v33 + 32) = *v30;
  *(_OWORD *)(v33 + 48) = v37;
  *(void *)(v33 + 128) = v56;
  v13(v33 + v32, v26, v28);
  sub_251800F6C((uint64_t)v30);
  sub_25192BA80();
  sub_2518A7924(v29, (uint64_t)&unk_269B56B38, v33);
  swift_release();
  swift_beginAccess();
  sub_2517E079C(v57, v58, &qword_269B56B28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v58, 1, v60) == 1)
  {
    sub_2517E16E0(v0[42], &qword_269B56B28);
    if (qword_269B53418 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_25192D1D0();
    __swift_project_value_buffer(v38, (uint64_t)qword_269B5A090);
    uint64_t v39 = sub_25192D1B0();
    os_log_type_t v40 = sub_25192D4F0();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl(&dword_2517D6000, v39, v40, "No deep link generated", v41, 2u);
      MEMORY[0x2533A75D0](v41, -1, -1);
    }
    uint64_t v42 = v0[22];
    uint64_t v43 = v0[18];
    uint64_t v44 = v0[19];

    sub_2518B030C();
    swift_allocError();
    *uint64_t v45 = 0;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
    goto LABEL_22;
  }
  uint64_t v55 = v0[42];
  (*(void (**)(void, void))(v0[19] + 8))(v0[22], v0[18]);
  sub_2517E16E0(v55, &qword_269B56B28);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v53 = (uint64_t (*)(void))v0[1];
LABEL_23:
  return v53();
}

uint64_t sub_2518AA330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[49] = a4;
  v6[50] = a6;
  v6[48] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54478);
  v6[51] = swift_task_alloc();
  uint64_t v7 = sub_25192B900();
  v6[52] = v7;
  v6[53] = *(void *)(v7 - 8);
  v6[54] = swift_task_alloc();
  sub_25192BD10();
  v6[55] = swift_task_alloc();
  uint64_t v8 = sub_25192BE00();
  v6[56] = v8;
  v6[57] = *(void *)(v8 - 8);
  v6[58] = swift_task_alloc();
  uint64_t v9 = sub_25192BC70();
  v6[59] = v9;
  v6[60] = *(void *)(v9 - 8);
  v6[61] = swift_task_alloc();
  v6[62] = swift_projectBox();
  return MEMORY[0x270FA2498](sub_2518AA518, 0, 0);
}

uint64_t sub_2518AA518()
{
  uint64_t v1 = *(void *)(v0 + 496);
  uint64_t v2 = *(void *)(v0 + 472);
  uint64_t v3 = *(void *)(v0 + 480);
  sub_25192B800();
  uint64_t v4 = *(void *)(v0 + 376);
  swift_beginAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2)
    || (uint64_t v5 = *(void *)(v0 + 488),
        uint64_t v7 = *(void *)(v0 + 472),
        uint64_t v6 = *(void *)(v0 + 480),
        (*(void (**)(uint64_t, void, uint64_t))(v6 + 16))(v5, *(void *)(v0 + 496), v7),
        uint64_t v8 = sub_25192BC60(),
        unint64_t v10 = v9,
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7),
        !v10))
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = 0;
    unint64_t v30 = 0xE000000000000000;
  }
  else
  {
    uint64_t v29 = v8;
    unint64_t v30 = v10;
  }
  if (v4) {
    uint64_t v11 = v4;
  }
  else {
    uint64_t v11 = MEMORY[0x263F8EE78];
  }
  uint64_t v28 = v11;
  uint64_t v12 = *(void *)(v0 + 456);
  uint64_t v13 = *(void *)(v0 + 464);
  uint64_t v14 = *(void *)(v0 + 448);
  uint64_t v16 = *(void *)(v0 + 424);
  uint64_t v15 = *(void *)(v0 + 432);
  uint64_t v26 = *(void *)(v0 + 416);
  os_log_type_t v17 = *(_OWORD **)(v0 + 392);
  sub_25192C130();
  sub_25192BDD0();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v14);
  long long v18 = v17[1];
  *(_OWORD *)(v0 + 16) = *v17;
  *(_OWORD *)(v0 + 32) = v18;
  long long v19 = v17[2];
  long long v20 = v17[3];
  long long v21 = v17[5];
  *(_OWORD *)(v0 + 80) = v17[4];
  *(_OWORD *)(v0 + 96) = v21;
  *(_OWORD *)(v0 + 48) = v19;
  *(_OWORD *)(v0 + 64) = v20;
  sub_2518011C8();
  sub_25192B660();
  sub_25192B8F0();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v26);
  uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B59E28
                                                                                     + dword_269B59E28);
  unint64_t v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 504) = v22;
  void *v22 = v0;
  v22[1] = sub_2518AA760;
  uint64_t v23 = *(void *)(v0 + 440);
  uint64_t v24 = *(void *)(v0 + 408);
  return v27(v0 + 192, v28, v29, v30, v23, v24);
}

uint64_t sub_2518AA760()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2518AA85C, 0, 0);
}

uint64_t sub_2518AA85C()
{
  sub_2518B06F0(v0 + 192, v0 + 112);
  uint64_t v1 = *(void *)(v0 + 120);
  if (v1)
  {
    long long v2 = *(_OWORD *)(v0 + 160);
    *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 144);
    *(_OWORD *)(v0 + 320) = v2;
    *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 176);
    long long v3 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 272) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 288) = v3;
    sub_2518B0758();
    sub_25192C7B0();
    sub_2518B07AC((uint64_t *)(v0 + 192));
  }
  **(unsigned char **)(v0 + 384) = v1 == 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_2518AA954@<X0>(uint64_t a1@<X8>)
{
  return sub_2518AA98C(&qword_269B53178, MEMORY[0x263F06D40], (uint64_t)qword_269B5A678, a1);
}

uint64_t sub_2518AA98C@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  return v9(a4, v8, v7);
}

uint64_t sub_2518AAA30(uint64_t a1)
{
  long long v4 = v1[3];
  *(_OWORD *)(v2 + 48) = v1[2];
  *(_OWORD *)(v2 + 64) = v4;
  long long v5 = v1[5];
  *(_OWORD *)(v2 + 80) = v1[4];
  *(_OWORD *)(v2 + 96) = v5;
  long long v6 = v1[1];
  *(_OWORD *)(v2 + 16) = *v1;
  *(_OWORD *)(v2 + 32) = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 112) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_2518AAB00;
  v7[3] = a1;
  _OWORD v7[4] = v2 + 16;
  return MEMORY[0x270FA2498](sub_2518A8070, 0, 0);
}

uint64_t sub_2518AAB00()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

double sub_2518AABF4@<D0>(_OWORD *a1@<X8>)
{
  sub_2518AED48((uint64_t *)v6);
  long long v2 = v6[3];
  a1[2] = v6[2];
  a1[3] = v2;
  long long v3 = v6[5];
  a1[4] = v6[4];
  a1[5] = v3;
  double result = *(double *)v6;
  long long v5 = v6[1];
  *a1 = v6[0];
  a1[1] = v5;
  return result;
}

uint64_t sub_2518AAC3C(uint64_t a1)
{
  unint64_t v2 = sub_2518011C8();
  return MEMORY[0x270EE0D28](a1, v2);
}

uint64_t sub_2518AAC78(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  long long v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_2517E079C(a1, (uint64_t)&v9 - v6, &qword_269B53BB0);
  sub_2517E079C((uint64_t)v7, (uint64_t)v5, &qword_269B53BB0);
  sub_25192B810();
  return sub_2517E16E0((uint64_t)v7, &qword_269B53BB0);
}

uint64_t sub_2518AAD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a3;
  v5[5] = a5;
  v5[2] = a1;
  v5[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0);
  v5[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2518AADEC, 0, 0);
}

uint64_t sub_2518AADEC()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54C80);
  uint64_t v3 = swift_allocObject();
  v0[7] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_25192F930;
  *(void *)(v3 + 32) = v2;
  *(void *)(v3 + 40) = v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_25192B9E0();
  uint64_t v5 = v0[6];
  if (v4)
  {
    swift_getKeyPath();
    sub_2517F2264();
    sub_25192B890();
    swift_release();
    swift_release();
    uint64_t v6 = type metadata accessor for HomeEntity();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 0, 1, v6);
  }
  else
  {
    uint64_t v7 = type metadata accessor for HomeEntity();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  }
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269B59F88 + dword_269B59F88);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[8] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_2518AAF94;
  uint64_t v9 = v0[6];
  return v11(v3, v9);
}

uint64_t sub_2518AAF94(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 48);
  *(void *)(v3 + 72) = a1;
  *(void *)(v3 + 80) = v1;
  swift_task_dealloc();
  sub_2517E16E0(v4, &qword_269B53BB0);
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v5 = sub_2518AB1F4;
  }
  else {
    uint64_t v5 = sub_2518AB0F4;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_2518AB0F4()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = type metadata accessor for RoomEntity();
  uint64_t v4 = *(void *)(v3 - 8);
  if (v2)
  {
    sub_2518B01B4(v1+ ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80)), v0[2]);
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v4 + 56))(v0[2], v5, 1, v3);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_2518AB1F4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2518AB258(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *v2;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_2517EDE20;
  return sub_2518AAD54(a1, v5, v6, v8, v7);
}

uint64_t sub_2518AB318()
{
  return sub_25192B9F0() & 1;
}

uint64_t sub_2518AB360(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E10);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_2517E079C(a1, (uint64_t)&v9 - v6, &qword_269B53E10);
  sub_2517E079C((uint64_t)v7, (uint64_t)v5, &qword_269B53E10);
  sub_25192B810();
  return sub_2517E16E0((uint64_t)v7, &qword_269B53E10);
}

uint64_t sub_2518AB43C(_WORD *a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0);
  *(void *)(v3 + 24) = swift_task_alloc();
  *(_WORD *)(v3 + 64) = *a1;
  return MEMORY[0x270FA2498](sub_2518AB4DC, 0, 0);
}

uint64_t sub_2518AB4DC()
{
  __int16 v1 = *(_WORD *)(v0 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56020);
  uint64_t v2 = swift_allocObject();
  *(void *)(v0 + 32) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_25192F930;
  *(_WORD *)(v2 + 32) = v1;
  uint64_t v3 = sub_25192B9E0();
  uint64_t v4 = *(void *)(v0 + 24);
  if (v3)
  {
    swift_getKeyPath();
    sub_2517F2264();
    sub_25192B890();
    swift_release();
    swift_release();
    uint64_t v5 = type metadata accessor for HomeEntity();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  }
  else
  {
    uint64_t v6 = type metadata accessor for HomeEntity();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  }
  if (sub_25192B9E0())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CE0);
    type metadata accessor for RoomEntity();
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_25192F930;
    swift_getKeyPath();
    sub_2518B0110();
    sub_25192B890();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v7 = 0;
  }
  *(void *)(v0 + 40) = v7;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B56D18 + dword_269B56D18);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_2518AB760;
  uint64_t v9 = *(void *)(v0 + 24);
  return v11(v2, v9, 0, v7);
}

uint64_t sub_2518AB760(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  sub_2517E16E0(*(void *)(v4 + 24), &qword_269B53BB0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_251891250, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v6(a1);
  }
}

uint64_t sub_2518AB91C(uint64_t a1, _WORD *a2)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v5 = *v2;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_2517F8D00;
  return sub_2518AB43C(a2, v7, v5);
}

uint64_t sub_2518AB9BC()
{
  return sub_25192D920();
}

uint64_t sub_2518ABA50()
{
  return sub_25192D210();
}

uint64_t sub_2518ABAD4()
{
  return sub_25192D920();
}

uint64_t sub_2518ABB64(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(unsigned char *)(v4 + 96) = a2;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0);
  *(void *)(v4 + 32) = swift_task_alloc();
  *(void *)(v4 + 40) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2518ABC0C, 0, 0);
}

uint64_t sub_2518ABC0C()
{
  char v1 = *(unsigned char *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = sub_25192B9E0();
  if (v1)
  {
    uint64_t v6 = *(void *)(v0 + 32);
    if (v3)
    {
      swift_getKeyPath();
      sub_2517F2264();
      sub_25192B890();
      swift_release();
      swift_release();
      uint64_t v7 = type metadata accessor for HomeEntity();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
    }
    else
    {
      uint64_t v10 = type metadata accessor for HomeEntity();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
    }
    if (sub_25192B9E0())
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CE0);
      type metadata accessor for RoomEntity();
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_25192F930;
      swift_getKeyPath();
      sub_2518B0110();
      sub_25192B890();
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v9 = 0;
    }
    *(void *)(v0 + 72) = v9;
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B56D10 + dword_269B56D10);
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v13;
    void *v13 = v0;
    v13[1] = sub_2518AC264;
    uint64_t v12 = *(void *)(v0 + 32);
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 40);
    if (v3)
    {
      swift_getKeyPath();
      sub_2517F2264();
      sub_25192B890();
      swift_release();
      swift_release();
      uint64_t v5 = type metadata accessor for HomeEntity();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
    }
    else
    {
      uint64_t v8 = type metadata accessor for HomeEntity();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
    }
    if (sub_25192B9E0())
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CE0);
      type metadata accessor for RoomEntity();
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_25192F930;
      swift_getKeyPath();
      sub_2518B0110();
      sub_25192B890();
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v9 = 0;
    }
    *(void *)(v0 + 48) = v9;
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B56D00 + dword_269B56D00);
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_2518AC048;
    uint64_t v12 = *(void *)(v0 + 40);
  }
  return v15(v2, v12, 0, v9);
}

uint64_t sub_2518AC048(uint64_t a1)
{
  uint64_t v4 = *(void *)(*v2 + 40);
  uint64_t v5 = *v2;
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  sub_2517E16E0(v4, &qword_269B53BB0);
  swift_bridgeObjectRelease();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_2518AC1F8, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v6(a1);
  }
}

uint64_t sub_2518AC1F8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2518AC264(uint64_t a1)
{
  uint64_t v4 = *(void *)(*v2 + 32);
  uint64_t v5 = *v2;
  *(void *)(*v2 + 88) = v1;
  swift_task_dealloc();
  sub_2517E16E0(v4, &qword_269B53BB0);
  swift_bridgeObjectRelease();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_2518AC414, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v6(a1);
  }
}

uint64_t sub_2518AC414()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2518AC480(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_2517F8D00;
  return sub_2518ABB64(v4, v5, v8, v6);
}

uint64_t sub_2518AC530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a1;
  v3[3] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0);
  v3[4] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2518AC5C4, 0, 0);
}

uint64_t sub_2518AC5C4()
{
  uint64_t v1 = sub_25192B9E0();
  uint64_t v2 = v0[4];
  if (v1)
  {
    swift_getKeyPath();
    sub_2517F2264();
    sub_25192B890();
    swift_release();
    swift_release();
    uint64_t v3 = type metadata accessor for HomeEntity();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 0, 1, v3);
  }
  else
  {
    uint64_t v4 = type metadata accessor for HomeEntity();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  }
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269B54DD8 + dword_269B54DD8);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  void *v5 = v0;
  v5[1] = sub_25188EE2C;
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[2];
  return v9(v7, v6);
}

uint64_t sub_2518AC730(uint64_t a1, uint64_t *a2)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = *a2;
  uint64_t v5 = *v2;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_2517EDA84;
  return sub_2518AC530(v4, v7, v5);
}

uint64_t sub_2518AC7D0(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B56938);
}

uint64_t static IntentNavigationDestination.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B53190 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25192BA40();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269B56938);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static IntentNavigationDestination.typeDisplayRepresentation.setter(uint64_t a1)
{
  if (qword_269B53190 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25192BA40();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269B56938);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static IntentNavigationDestination.typeDisplayRepresentation.modify())()
{
  if (qword_269B53190 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_25192BA40();
  __swift_project_value_buffer(v0, (uint64_t)qword_269B56938);
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_2518ACA44()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56B78);
  uint64_t v0 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B54990) - 8);
  uint64_t v1 = *(void *)(v0 + 72);
  unint64_t v2 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_251933EF0;
  uint64_t v4 = (unsigned char *)(v3 + v2);
  *uint64_t v4 = 0;
  sub_25192B910();
  v4[v1] = 1;
  sub_25192B910();
  v4[2 * v1] = 2;
  sub_25192B910();
  v4[3 * v1] = 3;
  sub_25192B910();
  unint64_t result = sub_2518215E8(v3);
  qword_269B56950 = result;
  return result;
}

uint64_t static IntentNavigationDestination.caseDisplayRepresentations.getter()
{
  if (qword_269B53198 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static IntentNavigationDestination.caseDisplayRepresentations.setter(uint64_t a1)
{
  if (qword_269B53198 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_269B56950 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static IntentNavigationDestination.caseDisplayRepresentations.modify())()
{
  if (qword_269B53198 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

HomeAppIntents::IntentNavigationDestination_optional __swiftcall IntentNavigationDestination.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_25192D700();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

void *static IntentNavigationDestination.allCases.getter()
{
  return &unk_2702510B8;
}

unint64_t sub_2518ACDA0()
{
  unint64_t result = qword_269B56958;
  if (!qword_269B56958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56958);
  }
  return result;
}

unint64_t sub_2518ACDF8()
{
  unint64_t result = qword_269B56960;
  if (!qword_269B56960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56960);
  }
  return result;
}

unint64_t sub_2518ACE50()
{
  unint64_t result = qword_269B56968;
  if (!qword_269B56968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56968);
  }
  return result;
}

unint64_t sub_2518ACEA8()
{
  unint64_t result = qword_269B56970;
  if (!qword_269B56970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56970);
  }
  return result;
}

unint64_t sub_2518ACF00()
{
  unint64_t result = qword_269B56978;
  if (!qword_269B56978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56978);
  }
  return result;
}

unint64_t sub_2518ACF58()
{
  unint64_t result = qword_269B56980;
  if (!qword_269B56980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56980);
  }
  return result;
}

unint64_t sub_2518ACFB0()
{
  unint64_t result = qword_269B56988;
  if (!qword_269B56988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56988);
  }
  return result;
}

unint64_t sub_2518AD008()
{
  unint64_t result = qword_269B56990;
  if (!qword_269B56990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56990);
  }
  return result;
}

uint64_t sub_2518AD05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2518ADDE4(a1, a2, a3, (void (*)(void))sub_2518AD088);
}

unint64_t sub_2518AD088()
{
  unint64_t result = qword_269B56998;
  if (!qword_269B56998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56998);
  }
  return result;
}

unint64_t sub_2518AD0E0()
{
  unint64_t result = qword_269B569A0;
  if (!qword_269B569A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B569A0);
  }
  return result;
}

unint64_t sub_2518AD138()
{
  unint64_t result = qword_269B569A8;
  if (!qword_269B569A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B569A8);
  }
  return result;
}

unint64_t sub_2518AD190()
{
  unint64_t result = qword_269B569B0;
  if (!qword_269B569B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B569B0);
  }
  return result;
}

uint64_t sub_2518AD1E4()
{
  return sub_2517E2990(&qword_269B569B8, &qword_269B569C0);
}

unint64_t sub_2518AD224()
{
  unint64_t result = qword_269B569C8;
  if (!qword_269B569C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B569C8);
  }
  return result;
}

unint64_t sub_2518AD27C()
{
  unint64_t result = qword_269B569D0;
  if (!qword_269B569D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B569D0);
  }
  return result;
}

uint64_t sub_2518AD2D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2518AD2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2518ADDE4(a1, a2, a3, (void (*)(void))sub_2518011C8);
}

unint64_t sub_2518AD31C()
{
  unint64_t result = qword_269B569E0;
  if (!qword_269B569E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B569E0);
  }
  return result;
}

uint64_t sub_2518AD370()
{
  return sub_2518B0218(&qword_269B543D8, (void (*)(uint64_t))type metadata accessor for RoomEntity);
}

unint64_t sub_2518AD3BC()
{
  unint64_t result = qword_269B569F0;
  if (!qword_269B569F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B569F0);
  }
  return result;
}

unint64_t sub_2518AD414()
{
  unint64_t result = qword_269B569F8;
  if (!qword_269B569F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B569F8);
  }
  return result;
}

uint64_t sub_2518AD468()
{
  return sub_2518AD640((unint64_t *)&qword_269B54388, &qword_269B54370, (void (*)(void))sub_251800AA0);
}

unint64_t sub_2518AD4A8()
{
  unint64_t result = qword_269B56A08;
  if (!qword_269B56A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56A08);
  }
  return result;
}

unint64_t sub_2518AD500()
{
  unint64_t result = qword_269B56A10;
  if (!qword_269B56A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56A10);
  }
  return result;
}

unint64_t sub_2518AD558()
{
  unint64_t result = qword_269B56A20;
  if (!qword_269B56A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56A20);
  }
  return result;
}

unint64_t sub_2518AD5B0()
{
  unint64_t result = qword_269B56A28;
  if (!qword_269B56A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56A28);
  }
  return result;
}

uint64_t sub_2518AD604()
{
  return sub_2518AD640((unint64_t *)&unk_269B55F10, &qword_269B55E20, (void (*)(void))sub_2517F7C18);
}

uint64_t sub_2518AD640(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2518AD6BC()
{
  unint64_t result = qword_269B56A38;
  if (!qword_269B56A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56A38);
  }
  return result;
}

uint64_t sub_2518AD710(unsigned __int8 *a1, char *a2)
{
  return sub_2517DA140(*a1, *a2);
}

HomeAppIntents::IntentNavigationDestination_optional sub_2518AD71C(Swift::String *a1)
{
  return IntentNavigationDestination.init(rawValue:)(*a1);
}

void sub_2518AD728(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x726577736E61;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x6B6E694C70656564;
      goto LABEL_3;
    case 2:
      *a1 = 0x656369746F6ELL;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x686372616573;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_2518AD7B4()
{
  unint64_t result = qword_269B56A40;
  if (!qword_269B56A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56A40);
  }
  return result;
}

unint64_t sub_2518AD80C()
{
  unint64_t result = qword_269B56A48;
  if (!qword_269B56A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56A48);
  }
  return result;
}

unint64_t sub_2518AD864()
{
  unint64_t result = qword_269B56A50;
  if (!qword_269B56A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56A50);
  }
  return result;
}

unint64_t sub_2518AD8BC()
{
  unint64_t result = qword_269B56A58;
  if (!qword_269B56A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56A58);
  }
  return result;
}

uint64_t sub_2518AD910()
{
  return sub_25192D920();
}

uint64_t sub_2518AD9D8()
{
  sub_25192D300();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2518ADA88()
{
  return sub_25192D920();
}

uint64_t sub_2518ADB4C()
{
  return sub_2517E2990(&qword_269B56A60, &qword_269B56A68);
}

void sub_2518ADB88(void *a1@<X8>)
{
  *a1 = &unk_2702510E0;
}

unint64_t sub_2518ADB9C()
{
  unint64_t result = qword_269B56A70;
  if (!qword_269B56A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56A70);
  }
  return result;
}

unint64_t sub_2518ADBF4()
{
  unint64_t result = qword_269B56A78;
  if (!qword_269B56A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56A78);
  }
  return result;
}

unint64_t sub_2518ADC4C()
{
  unint64_t result = qword_269B56A80;
  if (!qword_269B56A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56A80);
  }
  return result;
}

unint64_t sub_2518ADCA4()
{
  unint64_t result = qword_269B56A88;
  if (!qword_269B56A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56A88);
  }
  return result;
}

uint64_t sub_2518ADCF8@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B53190 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25192BA40();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269B56938);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_2518ADDB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2518ADDE4(a1, a2, a3, (void (*)(void))sub_25186C008);
}

uint64_t sub_2518ADDE4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2518ADE2C(uint64_t a1)
{
  unint64_t v2 = sub_25186C008();
  return MEMORY[0x270EE0C40](a1, v2);
}

unint64_t sub_2518ADE7C()
{
  unint64_t result = qword_269B56A90;
  if (!qword_269B56A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56A90);
  }
  return result;
}

unint64_t sub_2518ADED4()
{
  unint64_t result = qword_269B56A98;
  if (!qword_269B56A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56A98);
  }
  return result;
}

unint64_t sub_2518ADF2C()
{
  unint64_t result = qword_269B56AA0;
  if (!qword_269B56AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56AA0);
  }
  return result;
}

uint64_t sub_2518ADF80()
{
  if (qword_269B53198 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2518ADFF8(uint64_t a1)
{
  unint64_t v2 = sub_2518ADCA4();
  return MEMORY[0x270EE1C28](a1, v2);
}

unsigned char *storeEnumTagSinglePayload for IntentNavigationDestination(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2518AE110);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IntentNavigationDestination()
{
  return &type metadata for IntentNavigationDestination;
}

ValueMetadata *type metadata accessor for ShowIntentZoneEntityFromNameResolver()
{
  return &type metadata for ShowIntentZoneEntityFromNameResolver;
}

ValueMetadata *type metadata accessor for ShowIntentDeviceEntityFromInputTypeResolver()
{
  return &type metadata for ShowIntentDeviceEntityFromInputTypeResolver;
}

ValueMetadata *type metadata accessor for ShowIntentDeviceEntityFromAccessoryTypeResolver()
{
  return &type metadata for ShowIntentDeviceEntityFromAccessoryTypeResolver;
}

ValueMetadata *type metadata accessor for ShowIntentRoomEntityFromNameResolver()
{
  return &type metadata for ShowIntentRoomEntityFromNameResolver;
}

uint64_t destroy for ShowIntent()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for ShowIntent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  return a1;
}

void *assignWithCopy for ShowIntent(void *a1, void *a2)
{
  *a1 = *a2;
  sub_25192BA80();
  swift_release();
  a1[1] = a2[1];
  sub_25192BA80();
  swift_release();
  a1[2] = a2[2];
  sub_25192BA80();
  swift_release();
  a1[3] = a2[3];
  sub_25192BA80();
  swift_release();
  a1[4] = a2[4];
  sub_25192BA80();
  swift_release();
  a1[5] = a2[5];
  sub_25192BA80();
  swift_release();
  a1[6] = a2[6];
  sub_25192BA80();
  swift_release();
  a1[7] = a2[7];
  sub_25192BA80();
  swift_release();
  a1[8] = a2[8];
  sub_25192BA80();
  swift_release();
  a1[9] = a2[9];
  sub_25192BA80();
  swift_release();
  a1[10] = a2[10];
  sub_25192BA80();
  swift_release();
  a1[11] = a2[11];
  sub_25192BA80();
  swift_release();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

_OWORD *assignWithTake for ShowIntent(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  swift_release();
  a1[2] = a2[2];
  swift_release();
  swift_release();
  a1[3] = a2[3];
  swift_release();
  swift_release();
  a1[4] = a2[4];
  swift_release();
  swift_release();
  a1[5] = a2[5];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShowIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShowIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowIntent()
{
  return &type metadata for ShowIntent;
}

unsigned char *storeEnumTagSinglePayload for ShowIntent.SecondaryAccessoryControlDestination(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2518AE690);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowIntent.SecondaryAccessoryControlDestination()
{
  return &type metadata for ShowIntent.SecondaryAccessoryControlDestination;
}

uint64_t sub_2518AE6C8()
{
  return sub_2517E2990(&qword_269B55010, &qword_269B55018);
}

uint64_t sub_2518AE704()
{
  return swift_release();
}

uint64_t sub_2518AE800()
{
  return swift_release();
}

uint64_t sub_2518AE8D0@<X0>(uint64_t a1@<X8>)
{
  v7[1] = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56850);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unsigned int v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56840);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v9 = sub_25192BA00();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54370);
  unint64_t v5 = sub_2518A64B0();
  sub_25192BAA0();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v8 = sub_25192BA00();
  sub_2518A6504();
  sub_25192BAA0();
  swift_release();
  uint64_t v8 = v10;
  sub_2518AD640((unint64_t *)&qword_269B54388, &qword_269B54370, (void (*)(void))sub_251800AA0);
  sub_25192BAC0();
  v7[3] = &type metadata for ShowIntentDeviceEntityFromAccessoryTypeResolver;
  _OWORD v7[4] = v9;
  _OWORD v7[2] = v5;
  sub_25192BAB0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_release();
  return swift_release();
}

uint64_t sub_2518AEB28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25192B820();
  *a1 = result;
  return result;
}

uint64_t sub_2518AEB54(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  unint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_2518AEC34;
  return v5(v2 + 32);
}

uint64_t sub_2518AEC34()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_2518AED48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v115 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56920);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v114 = (char *)v103 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E10);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v111 = (char *)v103 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v112 = (char *)v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25192B990();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v124 = (char *)v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B542E8);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v103 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B539C0);
  MEMORY[0x270FA5388](v16 - 8);
  long long v18 = (char *)v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_25192BC50();
  uint64_t v121 = v19;
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v130 = (char *)v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55BF8);
  sub_25192BC30();
  unint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v122 = v20 + 56;
  char v123 = v22;
  v22(v18, 1, 1, v19);
  LOBYTE(v131) = 4;
  uint64_t v23 = sub_25192B6D0();
  uint64_t v129 = v23;
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  uint64_t v26 = v24 + 56;
  v25(v15, 1, 1, v23);
  uint64_t v118 = v13;
  v25(v13, 1, 1, v23);
  unsigned int v127 = *MEMORY[0x263EFBDC8];
  uint64_t v27 = *(void (**)(void))(v8 + 104);
  uint64_t v119 = v7;
  uint64_t v120 = v8 + 104;
  long long v125 = (void (*)(char *, uint64_t, uint64_t))v27;
  uint64_t v28 = v124;
  v27(v124);
  sub_25186C008();
  char v116 = v15;
  uint64_t v117 = v18;
  uint64_t v29 = v15;
  unint64_t v30 = v28;
  uint64_t v113 = sub_25192B840();
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B542F0);
  sub_25192BC30();
  uint64_t v31 = v121;
  v123(v18, 1, 1, v121);
  uint64_t v32 = type metadata accessor for HomeEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v112, 1, 1, v32);
  uint64_t v33 = v29;
  uint64_t v34 = v129;
  unint64_t v128 = v25;
  uint64_t v126 = v26;
  v25(v33, 1, 1, v129);
  v25(v118, 1, 1, v34);
  long long v35 = v30;
  uint64_t v36 = v127;
  long long v37 = v125;
  v125(v35, v127, v7);
  sub_2518B0218(&qword_269B542F8, (void (*)(uint64_t))type metadata accessor for HomeEntity);
  uint64_t v38 = v117;
  uint64_t v39 = v116;
  uint64_t v112 = (char *)sub_25192B860();
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56828);
  sub_25192BC30();
  os_log_type_t v40 = v123;
  v123(v38, 1, 1, v31);
  uint64_t v41 = type metadata accessor for RoomEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v111, 1, 1, v41);
  uint64_t v42 = v128;
  uint64_t v43 = v129;
  v128(v39, 1, 1, v129);
  uint64_t v44 = v118;
  v42(v118, 1, 1, v43);
  uint64_t v45 = v124;
  uint64_t v46 = v119;
  v37(v124, v36, v119);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56830);
  uint64_t v107 = MEMORY[0x263EFBEF8];
  sub_2517E2990(&qword_269B56838, &qword_269B56830);
  sub_2518B0218(&qword_269B54338, (void (*)(uint64_t))type metadata accessor for RoomEntity);
  uint64_t v47 = v38;
  uint64_t v48 = v116;
  uint64_t v49 = v44;
  unint64_t v50 = v45;
  uint64_t v111 = (char *)sub_25192B850();
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B54300);
  sub_25192BC30();
  v40(v47, 1, 1, v121);
  uint64_t v134 = 0;
  uint64_t v51 = v48;
  uint64_t v53 = v128;
  uint64_t v52 = v129;
  v128(v48, 1, 1, v129);
  uint64_t v54 = v49;
  v53(v49, 1, 1, v52);
  v125(v50, v127, v46);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56AD8);
  sub_2517E2990(&qword_269B56AE0, &qword_269B56AD8);
  sub_2518B0218(&qword_269B54318, (void (*)(uint64_t))type metadata accessor for ZoneEntity);
  uint64_t v55 = v117;
  uint64_t v56 = v51;
  uint64_t v110 = sub_25192B850();
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B567F8);
  sub_25192BC30();
  uint64_t v57 = v121;
  uint64_t v58 = v123;
  v123(v55, 1, 1, v121);
  LOBYTE(v131) = 8;
  uint64_t v59 = v128;
  uint64_t v60 = v129;
  v128(v56, 1, 1, v129);
  v59(v54, 1, 1, v60);
  uint64_t v61 = v124;
  uint64_t v62 = v119;
  v125(v124, v127, v119);
  sub_2518A63BC();
  uint64_t v109 = sub_25192B840();
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56808);
  sub_25192BC30();
  v58(v55, 1, 1, v57);
  LOBYTE(v131) = 3;
  uint64_t v63 = v56;
  uint64_t v64 = v128;
  uint64_t v65 = v129;
  v128(v56, 1, 1, v129);
  uint64_t v66 = v118;
  v64(v118, 1, 1, v65);
  long long v67 = v125;
  v125(v61, v127, v62);
  sub_25185CC30();
  uint64_t v108 = sub_25192B840();
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56AE8);
  sub_25192BC30();
  long long v68 = v55;
  long long v69 = v55;
  uint64_t v70 = v121;
  long long v71 = v123;
  v123(v68, 1, 1, v121);
  LOBYTE(v131) = 63;
  long long v72 = v128;
  v128(v63, 1, 1, v65);
  v72(v66, 1, 1, v65);
  uint64_t v73 = v119;
  v67(v124, v127, v119);
  sub_2517E4CA4();
  uint64_t v74 = v66;
  uint64_t v106 = sub_25192B840();
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56AF0);
  sub_25192BC30();
  v71(v69, 1, 1, v70);
  LOBYTE(v131) = 2;
  uint64_t v75 = v128;
  uint64_t v76 = v129;
  v128(v63, 1, 1, v129);
  v75(v74, 1, 1, v76);
  long long v77 = v125;
  v125(v124, v127, v73);
  sub_2518AD088();
  long long v78 = v117;
  uint64_t v105 = sub_25192B840();
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56810);
  sub_25192BC30();
  uint64_t v79 = v123;
  v123(v78, 1, 1, v70);
  uint64_t v133 = 0;
  uint64_t v80 = v129;
  uint64_t v81 = v128;
  v128(v63, 1, 1, v129);
  v81(v74, 1, 1, v80);
  uint64_t v82 = v124;
  uint64_t v83 = v127;
  v77(v124, v127, v119);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56818);
  sub_2517E2990(&qword_269B56820, &qword_269B56818);
  sub_2517E4C50();
  uint64_t v84 = v82;
  uint64_t v107 = sub_25192B850();
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56AF8);
  sub_25192BC30();
  uint64_t v85 = v78;
  uint64_t v86 = v121;
  v79(v85, 1, 1, v121);
  uint64_t v87 = sub_25192D240();
  uint64_t v131 = 0;
  uint64_t v132 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v114, 1, 1, v87);
  char v88 = v63;
  v128(v63, 1, 1, v129);
  uint64_t v89 = v119;
  unint64_t v90 = v125;
  v125(v84, v83, v119);
  uint64_t v114 = (char *)sub_25192B870();
  v103[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56B00);
  sub_25192BC30();
  v123(v85, 1, 1, v86);
  uint64_t v131 = 0;
  uint64_t v92 = v128;
  uint64_t v91 = v129;
  v128(v88, 1, 1, v129);
  uint64_t v93 = v118;
  v92(v118, 1, 1, v91);
  uint64_t v94 = v124;
  v90(v124, v83, v89);
  sub_25189CC64();
  uint64_t v104 = sub_25192B860();
  sub_25192BC30();
  v123(v85, 1, 1, v121);
  uint64_t v131 = 0;
  uint64_t v95 = v129;
  v92(v88, 1, 1, v129);
  v92(v93, 1, 1, v95);
  v125(v94, v127, v119);
  uint64_t result = sub_25192B860();
  char v97 = v115;
  uint64_t v98 = v112;
  uint64_t *v115 = v113;
  v97[1] = (uint64_t)v98;
  uint64_t v99 = v110;
  v97[2] = (uint64_t)v111;
  v97[3] = v99;
  uint64_t v100 = v108;
  v97[4] = v109;
  v97[5] = v100;
  uint64_t v101 = v105;
  v97[6] = v106;
  v97[7] = v101;
  char v102 = v114;
  v97[8] = v107;
  v97[9] = (uint64_t)v102;
  v97[10] = v104;
  v97[11] = result;
  return result;
}

uint64_t sub_2518AFEF0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 2;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = 0;
  while (AttributeKind.rawValue.getter() != 0x726F6C6F63 || v3 != 0xE500000000000000)
  {
    char v5 = sub_25192D810();
    uint64_t result = swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_12;
    }
    if (v1 == ++v2)
    {
LABEL_9:
      uint64_t v7 = 2;
LABEL_24:
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
LABEL_12:
  uint64_t v8 = 0;
  while (1)
  {
    uint64_t v9 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      break;
    }
    if (AttributeKind.rawValue.getter() != 0x7265776F70 || v10 != 0xE500000000000000)
    {
      char v11 = sub_25192D810();
      uint64_t result = swift_bridgeObjectRelease();
      if (v11) {
        goto LABEL_14;
      }
      if (AttributeKind.rawValue.getter() != 0x726F6C6F63 || v12 != 0xE500000000000000)
      {
        char v13 = sub_25192D810();
        uint64_t result = swift_bridgeObjectRelease();
        if ((v13 & 1) == 0) {
          goto LABEL_9;
        }
        goto LABEL_14;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
LABEL_14:
    ++v8;
    if (v9 == v1)
    {
      uint64_t v7 = 0;
      goto LABEL_24;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2518B00C0()
{
  return sub_25192B800();
}

uint64_t sub_2518B00E8()
{
  return sub_25192B800();
}

unint64_t sub_2518B0110()
{
  unint64_t result = qword_269B56AC0;
  if (!qword_269B56AC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B53E10);
    sub_2518B0218(&qword_269B543D8, (void (*)(uint64_t))type metadata accessor for RoomEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269B56AC0);
  }
  return result;
}

uint64_t sub_2518B01B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoomEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2518B0218(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2518B0260@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25192B820();
  *a1 = result;
  return result;
}

uint64_t sub_2518B028C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25192B820();
  *a1 = result;
  return result;
}

unint64_t sub_2518B02B8()
{
  unint64_t result = qword_269B56B08;
  if (!qword_269B56B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269B56B08);
  }
  return result;
}

unint64_t sub_2518B030C()
{
  unint64_t result = qword_269B56B20;
  if (!qword_269B56B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56B20);
  }
  return result;
}

uint64_t sub_2518B0360()
{
  uint64_t v1 = sub_25192C1E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 136) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2518B0494(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_25192C1E0() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = (uint64_t)(v1 + 4);
  uint64_t v8 = v1[16];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_2517EDE20;
  return sub_2518AA330(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_2518B0598(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56B28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2518B0600()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2518B0638(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_2517EDE20;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269B56B48 + dword_269B56B48);
  return v6(a1, v4);
}

uint64_t sub_2518B06F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56B60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2518B0758()
{
  unint64_t result = qword_269B56B68;
  if (!qword_269B56B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56B68);
  }
  return result;
}

uint64_t *sub_2518B07AC(uint64_t *a1)
{
  return a1;
}

uint64_t sub_2518B07F8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ShowIntentError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2518B0914);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowIntentError()
{
  return &type metadata for ShowIntentError;
}

unint64_t sub_2518B0950()
{
  unint64_t result = qword_269B56B80;
  if (!qword_269B56B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56B80);
  }
  return result;
}

uint64_t sub_2518B09AC()
{
  sub_25192B740();
  return v1;
}

uint64_t sub_2518B09E0()
{
  return sub_25192B740();
}

uint64_t sub_2518B0A04(uint64_t a1)
{
  uint64_t v34 = sub_25192BF60();
  uint64_t v2 = *(void *)(v34 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v33 = (char *)&v27 - v6;
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v28 = a1 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  uint64_t v31 = v2 + 32;
  uint64_t v32 = v2 + 16;
  int64_t v29 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v30 = v2 + 8;
  uint64_t v35 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  char v13 = (void *)MEMORY[0x263F8EE78];
  if (!v10) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v14 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v12 << 6))
  {
    uint64_t v20 = v33;
    uint64_t v19 = v34;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v33, *(void *)(v35 + 48) + *(void *)(v2 + 72) * i, v34);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v20, v19);
    uint64_t v21 = sub_25192BF40();
    uint64_t v23 = v22;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v19);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_25184685C(0, v13[2] + 1, 1, v13);
      char v13 = (void *)result;
    }
    unint64_t v25 = v13[2];
    unint64_t v24 = v13[3];
    if (v25 >= v24 >> 1)
    {
      uint64_t result = (uint64_t)sub_25184685C((void *)(v24 > 1), v25 + 1, 1, v13);
      char v13 = (void *)result;
    }
    v13[2] = v25 + 1;
    uint64_t v26 = &v13[2 * v25];
    v26[4] = v21;
    v26[5] = v23;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v16 >= v29) {
      goto LABEL_27;
    }
    unint64_t v17 = *(void *)(v28 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_27;
      }
      unint64_t v17 = *(void *)(v28 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_27;
        }
        unint64_t v17 = *(void *)(v28 + 8 * v12);
        if (!v17)
        {
          int64_t v12 = v16 + 3;
          if (v16 + 3 >= v29) {
            goto LABEL_27;
          }
          unint64_t v17 = *(void *)(v28 + 8 * v12);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v29)
  {
LABEL_27:
    swift_release();
    return (uint64_t)v13;
  }
  unint64_t v17 = *(void *)(v28 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v29) {
      goto LABEL_27;
    }
    unint64_t v17 = *(void *)(v28 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2518B0D3C(void (*a1)(uint64_t *__return_ptr, long long *), uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v11 = MEMORY[0x263F8EE78];
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    while (1)
    {
      long long v10 = *(_OWORD *)(a3 + 16 * v8 + 32);
      sub_25192BA80();
      sub_25192BA80();
      a1(&v9, &v10);
      if (v3) {
        break;
      }
      ++v8;
      swift_release();
      swift_release();
      sub_2517EF510(v9);
      if (v6 == v8)
      {
        swift_bridgeObjectRelease();
        return v11;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2518B0E58(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = (char *)(a3 + 64);
  unint64_t v6 = MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v7 = *((void *)v5 - 4);
    uint64_t v8 = *((void *)v5 - 3);
    uint64_t v9 = *((void *)v5 - 2);
    uint64_t v10 = *((void *)v5 - 1);
    char v11 = *v5;
    v35[0] = v7;
    v35[1] = v8;
    v35[2] = v9;
    v35[3] = v10;
    char v36 = v11;
    sub_251808BD8(v7, v8, v9, v10, v11);
    a1(&v37, v35);
    if (v34)
    {
      sub_251808B8C(v7, v8, v9, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    sub_251808B8C(v7, v8, v9, v10, v11);
    uint64_t v12 = v37;
    uint64_t v13 = *(void *)(v37 + 16);
    int64_t v14 = *(void *)(v6 + 16);
    int64_t v15 = v14 + v13;
    if (__OFADD__(v14, v13)) {
      break;
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v15 <= *(void *)(v6 + 24) >> 1)
    {
      if (*(void *)(v12 + 16)) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v14 <= v15) {
        int64_t v17 = v14 + v13;
      }
      else {
        int64_t v17 = v14;
      }
      unint64_t v6 = sub_251846E78(isUniquelyReferenced_nonNull_native, v17, 1, v6);
      if (*(void *)(v12 + 16))
      {
LABEL_15:
        uint64_t v18 = *(void *)(v6 + 16);
        uint64_t v19 = (*(void *)(v6 + 24) >> 1) - v18;
        uint64_t v20 = *(void *)(sub_25192D0F0() - 8);
        uint64_t v21 = *(void *)(v20 + 72);
        if (v19 < v13) {
          goto LABEL_30;
        }
        unint64_t v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
        unint64_t v23 = v6 + v22 + v21 * v18;
        unint64_t v24 = v12 + v22;
        uint64_t v25 = v21 * v13;
        unint64_t v26 = v23 + v25;
        unint64_t v27 = v24 + v25;
        if (v24 < v26 && v23 < v27) {
          goto LABEL_32;
        }
        swift_arrayInitWithCopy();
        if (v13)
        {
          uint64_t v29 = *(void *)(v6 + 16);
          BOOL v30 = __OFADD__(v29, v13);
          uint64_t v31 = v29 + v13;
          if (v30) {
            goto LABEL_31;
          }
          *(void *)(v6 + 16) = v31;
        }
        goto LABEL_4;
      }
    }
    if (v13) {
      goto LABEL_29;
    }
LABEL_4:
    v5 += 40;
    swift_bridgeObjectRelease();
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  uint64_t result = sub_25192D6F0();
  __break(1u);
  return result;
}

uint64_t sub_2518B10E0(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  void (*v28)(uint64_t *__return_ptr, char *);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v5 = sub_25192BD10();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E88);
  MEMORY[0x270FA5388](v9 - 8);
  char v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x263F8EE78];
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12)
  {
    int64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    uint64_t v15 = a3 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v16 = *(void *)(v13 + 56);
    uint64_t v17 = v13;
    unint64_t v18 = v13 + 40;
    uint64_t v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 32);
    unint64_t v26 = v14;
    uint64_t v22 = v16;
    unint64_t v23 = (void (**)(char *, char *, uint64_t))(v17 + 16);
    uint64_t v27 = v17;
    unint64_t v24 = (void (**)(char *, uint64_t))(v17 - 8);
    v21[2] = a3;
    swift_bridgeObjectRetain();
    v21[1] = v18 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      v26(v11, v15, v5);
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v18;
      (*(void (**)(char *, void, uint64_t, uint64_t))v18)(v11, 0, 1, v5);
      if ((*v25)(v11, 1, v5) == 1) {
        break;
      }
      (*v23)(v8, v11, v5);
      v28(&v30, v8);
      if (v3)
      {
        (*v24)(v8, v5);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      (*v24)(v8, v5);
      sub_2517F0970(v30);
      v15 += v22;
      if (!--v12) {
        goto LABEL_8;
      }
    }
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
LABEL_8:
    v19(v11, 1, 1, v5);
  }
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_2518B13A8(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  void (*v28)(uint64_t *__return_ptr, char *);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v5 = sub_25192CB50();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  char v11 = (char *)&v24 - v10;
  uint64_t v32 = MEMORY[0x263F8EE78];
  uint64_t v12 = *(void *)(a3 + 64);
  uint64_t v24 = a3 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  uint64_t v27 = v6 + 16;
  int64_t v25 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v26 = v6 + 32;
  uint64_t v16 = (void (**)(char *, uint64_t))(v6 + 8);
  BOOL v30 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  if (!v15) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v11, *(void *)(v30 + 56) + *(void *)(v6 + 72) * i, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v11, v5);
    v28(&v31, v9);
    if (v3)
    {
      (*v16)(v9, v5);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    (*v16)(v9, v5);
    uint64_t result = sub_2517F0970(v31);
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v25) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v18);
    if (!v22) {
      break;
    }
LABEL_17:
    unint64_t v15 = (v22 - 1) & v22;
  }
  int64_t v23 = v18 + 1;
  if (v18 + 1 >= v25) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22) {
    goto LABEL_16;
  }
  int64_t v23 = v18 + 2;
  if (v18 + 2 >= v25) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22) {
    goto LABEL_16;
  }
  int64_t v23 = v18 + 3;
  if (v18 + 3 >= v25) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22) {
    goto LABEL_16;
  }
  int64_t v23 = v18 + 4;
  if (v18 + 4 >= v25)
  {
LABEL_26:
    swift_release();
    return v32;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
LABEL_16:
    int64_t v18 = v23;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v25) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2518B16BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_2518CFFE4(a1);
  if (v6) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t v7 = sub_25192BD10();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a2;
    uint64_t v11 = 1;
  }
  else
  {
    sub_2518D0168(result, v5, a1, a2);
    uint64_t v12 = sub_25192BD10();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a2;
    uint64_t v11 = 0;
  }
  return v8(v10, v11, 1, v9);
}

uint64_t sub_2518B17A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E88);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  unint64_t v5 = v1[1];
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = v1[5];
  uint64_t v11 = v1[6];
  uint64_t v12 = v1[7];
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  uint64_t v25 = v12;
  swift_bridgeObjectRelease();
  uint64_t v26 = v11;
  swift_bridgeObjectRelease();
  uint64_t v27 = v10;
  swift_release();
  uint64_t v28 = v9;
  swift_release();
  uint64_t v29 = v8;
  swift_release();
  uint64_t v30 = v7;
  swift_release();
  swift_release();
  uint64_t v13 = v6;
  swift_release();
  sub_25192BCC0();
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_25192BD10();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v4, 1, v14) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(v31, v4, v14);
  }
  sub_2517E16E0((uint64_t)v4, &qword_269B53E88);
  uint64_t v32 = 0;
  unint64_t v33 = 0xE000000000000000;
  uint64_t v17 = v13;
  sub_25192BA80();
  sub_25192BA80();
  uint64_t v18 = v30;
  sub_25192BA80();
  uint64_t v19 = v29;
  sub_25192BA80();
  uint64_t v20 = v28;
  sub_25192BA80();
  uint64_t v21 = v27;
  sub_25192BA80();
  uint64_t v22 = v26;
  swift_bridgeObjectRetain();
  uint64_t v23 = v25;
  swift_bridgeObjectRetain();
  sub_25192D620();
  uint64_t v40 = v32;
  unint64_t v41 = v33;
  sub_25192D310();
  uint64_t v32 = v17;
  unint64_t v33 = v5;
  uint64_t v34 = v18;
  uint64_t v35 = v19;
  uint64_t v36 = v20;
  uint64_t v37 = v21;
  uint64_t v38 = v22;
  uint64_t v39 = v23;
  sub_25192D680();
  sub_25192D310();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25192D310();
  swift_bridgeObjectRelease();
  sub_25192D310();
  uint64_t result = sub_25192D6A0();
  __break(1u);
  return result;
}

void *sub_2518B1B68(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_25192D6B0())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533A6E30](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2518B1C90@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v35 = a1;
  uint64_t v7 = sub_25192BD10();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E88);
  MEMORY[0x270FA5388](v11 - 8);
  id v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t v26 = a3;
  uint64_t v27 = a2;
  if (v14)
  {
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v16 = v8 + 16;
    uint64_t v17 = a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v18 = *(void *)(v16 + 56);
    unint64_t v19 = v16 + 40;
    uint64_t v30 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 32);
    uint64_t v31 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v32 = v15;
    uint64_t v33 = v16;
    uint64_t v28 = v18;
    uint64_t v29 = (void (**)(char *, uint64_t))(v16 - 8);
    swift_bridgeObjectRetain();
    uint64_t v34 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v19;
    unint64_t v25 = v19 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      v32(v13, v17, v7);
      uint64_t v20 = *v34;
      (*v34)(v13, 0, 1, v7);
      if ((*v30)(v13, 1, v7) == 1) {
        break;
      }
      uint64_t v21 = *v31;
      (*v31)(v10, v13, v7);
      char v22 = v35(v10);
      if (v4)
      {
        (*v29)(v10, v7);
        return swift_bridgeObjectRelease();
      }
      if (v22)
      {
        swift_bridgeObjectRelease();
        uint64_t v24 = v26;
        v21(v26, v10, v7);
        return v20(v24, 0, 1, v7);
      }
      (*v29)(v10, v7);
      v17 += v28;
      if (!--v14) {
        goto LABEL_9;
      }
    }
  }
  else
  {
    uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    swift_bridgeObjectRetain();
    unint64_t v25 = (v8 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
LABEL_9:
    v20(v13, 1, 1, v7);
  }
  swift_bridgeObjectRelease();
  return v20(v26, 1, 1, v7);
}

uint64_t sub_2518B1FA8@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v28 = a3;
  uint64_t v5 = sub_25192CC40();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = *(void *)(a2 + 56);
  uint64_t v29 = a2 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  uint64_t v32 = v6 + 16;
  uint64_t v34 = v6 + 32;
  int64_t v30 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v31 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v35 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  if (!v15) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v11, *(void *)(v35 + 48) + *(void *)(v6 + 72) * i, v5);
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v23(v9, v11, v5);
    char v24 = v33(v9);
    if (v3)
    {
      (*v31)(v9, v5);
      return swift_release();
    }
    if (v24)
    {
      swift_release();
      unint64_t v25 = v28;
      v23(v28, v9, v5);
      uint64_t v26 = 0;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v25, v26, 1, v5);
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v31)(v9, v5);
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v17++, 1)) {
      break;
    }
    if (v17 >= v30) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v29 + 8 * v17);
    if (!v21)
    {
      int64_t v22 = v17 + 1;
      if (v17 + 1 >= v30) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v29 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v17 + 2;
      if (v17 + 2 >= v30) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v29 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v17 + 3;
      if (v17 + 3 >= v30) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v29 + 8 * v22);
      if (v21)
      {
LABEL_16:
        int64_t v17 = v22;
        goto LABEL_17;
      }
      int64_t v22 = v17 + 4;
      if (v17 + 4 < v30)
      {
        unint64_t v21 = *(void *)(v29 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            int64_t v17 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_31;
            }
            if (v17 >= v30) {
              goto LABEL_28;
            }
            unint64_t v21 = *(void *)(v29 + 8 * v17);
            ++v22;
            if (v21) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      unint64_t v25 = v28;
      swift_release();
      uint64_t v26 = 1;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v25, v26, 1, v5);
    }
LABEL_17:
    unint64_t v15 = (v21 - 1) & v21;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_2518B2300@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v31 = a3;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55DA8);
  uint64_t v30 = *(void *)(v35 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v35);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v32 = a2 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v33 = (unint64_t)(v11 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  if (!v13) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v16 | (v15 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    uint64_t v21 = *(void *)(a2 + 48);
    uint64_t v22 = sub_25192BD10();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v9, v21 + *(void *)(*(void *)(v22 - 8) + 72) * i, v22);
    uint64_t v23 = *(void *)(a2 + 56);
    uint64_t v24 = sub_25192C1E0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(&v9[*(int *)(v35 + 48)], v23 + *(void *)(*(void *)(v24 - 8) + 72) * i, v24);
    sub_2517F7AB8((uint64_t)v9, (uint64_t)v7, &qword_269B55DA8);
    char v25 = v34(v7);
    if (v3)
    {
      sub_2517E16E0((uint64_t)v7, &qword_269B55DA8);
      return swift_release();
    }
    if (v25)
    {
      swift_release();
      uint64_t v26 = v31;
      sub_2517F7AB8((uint64_t)v7, v31, &qword_269B55DA8);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v35);
    }
    uint64_t result = sub_2517E16E0((uint64_t)v7, &qword_269B55DA8);
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v15++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v15 >= v33) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v32 + 8 * v15);
    if (!v19) {
      break;
    }
LABEL_17:
    unint64_t v13 = (v19 - 1) & v19;
  }
  int64_t v20 = v15 + 1;
  if (v15 + 1 >= v33) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v32 + 8 * v20);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v15 + 2;
  if (v15 + 2 >= v33) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v32 + 8 * v20);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v15 + 3;
  if (v15 + 3 >= v33) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v32 + 8 * v20);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v15 + 4;
  if (v15 + 4 >= v33)
  {
LABEL_28:
    uint64_t v28 = v30;
    uint64_t v27 = v31;
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v27, 1, 1, v35);
  }
  unint64_t v19 = *(void *)(v32 + 8 * v20);
  if (v19)
  {
LABEL_16:
    int64_t v15 = v20;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v15 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v15 >= v33) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v32 + 8 * v15);
    ++v20;
    if (v19) {
      goto LABEL_17;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t DeviceEntity.id.getter()
{
  sub_25192B740();
  return v1;
}

uint64_t DeviceEntity.init(staticService:snapshot:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v153 = a3;
  uint64_t v166 = sub_25192C780();
  uint64_t v164 = *(void *)(v166 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v166);
  uint64_t v156 = (char *)&v134 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  v159 = (char *)&v134 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v147 = (char *)&v134 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v149 = (char *)&v134 - v11;
  uint64_t v140 = sub_25192BF20();
  uint64_t v139 = *(void *)(v140 - 8);
  MEMORY[0x270FA5388](v140);
  uint64_t v134 = (char *)&v134 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_25192C1E0();
  uint64_t v151 = *(void *)(v152 - 8);
  MEMORY[0x270FA5388](v152);
  v136 = (char *)&v134 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56BD0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v135 = (char *)&v134 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_25192BE00();
  uint64_t v145 = *(void *)(v138 - 8);
  MEMORY[0x270FA5388](v138);
  uint64_t v137 = (char *)&v134 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B54460);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v144 = ((char *)&v134 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v142 = sub_25192C0B0();
  uint64_t v141 = *(void *)(v142 - 8);
  MEMORY[0x270FA5388](v142);
  v148 = (char *)&v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E80);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v134 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_25192BD10();
  uint64_t v23 = *(void *)(v158 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v158);
  v143 = (char *)&v134 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v146 = (char *)&v134 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v134 - v28;
  uint64_t v30 = sub_25192C970();
  uint64_t v154 = *(void *)(v30 - 8);
  v155 = (char *)v30;
  MEMORY[0x270FA5388](v30);
  uint64_t v150 = (uint64_t)&v134 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_25192BC50();
  MEMORY[0x270FA5388](v32 - 8);
  uint64_t v34 = (char *)&v134 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53B90);
  sub_25192BC30();
  uint64_t v163 = MEMORY[0x2533A4FB0](v34);
  sub_25192BA80();
  sub_25192BC30();
  uint64_t v35 = MEMORY[0x2533A4FB0](v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56BD8);
  uint64_t v162 = v35;
  sub_25192BA80();
  sub_25192BC30();
  unint64_t v36 = sub_2518B3E50();
  uint64_t v37 = MEMORY[0x2533A4F80](v34, v36);
  sub_25192BA80();
  sub_25192BC30();
  uint64_t v38 = MEMORY[0x2533A4FB0](v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56BE8);
  uint64_t v161 = v38;
  sub_25192BA80();
  sub_25192BC30();
  uint64_t v168 = MEMORY[0x2533A4FB0](v34);
  sub_25192BA80();
  sub_25192BC30();
  uint64_t v39 = MEMORY[0x2533A4FB0](v34);
  sub_25192BA80();
  uint64_t v157 = (char *)a2;
  uint64_t v40 = sub_25192C190();
  uint64_t v165 = a1;
  sub_25192C2A0();
  uint64_t v41 = *(void *)(v40 + 16);
  uint64_t v160 = v37;
  if (v41 && (unint64_t v42 = sub_251823860((uint64_t)v29), (v43 & 1) != 0))
  {
    uint64_t v44 = v154;
    uint64_t v45 = v155;
    (*(void (**)(char *, unint64_t, char *))(v154 + 16))(v22, *(void *)(v40 + 56) + *(void *)(v154 + 72) * v42, v155);
    uint64_t v46 = 0;
    uint64_t v47 = v164;
    uint64_t v48 = v23;
  }
  else
  {
    uint64_t v46 = 1;
    uint64_t v47 = v164;
    uint64_t v48 = v23;
    uint64_t v44 = v154;
    uint64_t v45 = v155;
  }
  uint64_t v49 = v149;
  (*(void (**)(char *, uint64_t, uint64_t, char *))(v44 + 56))(v22, v46, 1, v45);
  swift_bridgeObjectRelease();
  uint64_t v51 = *(char **)(v48 + 8);
  unint64_t v50 = (char *)(v48 + 8);
  uint64_t v149 = v51;
  ((void (*)(char *, uint64_t))v51)(v29, v158);
  int v52 = (*(uint64_t (**)(char *, uint64_t, char *))(v44 + 48))(v22, 1, v45);
  uint64_t v167 = v39;
  if (v52 == 1)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_2517E16E0((uint64_t)v22, &qword_269B53E80);
    uint64_t v53 = v165;
LABEL_9:
    uint64_t v56 = v166;
    if (qword_269B53418 != -1) {
      swift_once();
    }
    uint64_t v57 = sub_25192D1D0();
    __swift_project_value_buffer(v57, (uint64_t)qword_269B5A090);
    uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
    v58(v49, v53, v56);
    uint64_t v59 = v49;
    uint64_t v60 = v147;
    v58(v147, v53, v56);
    v58(v159, v53, v56);
    v58(v156, v53, v56);
    uint64_t v61 = (char *)sub_25192D1B0();
    os_log_type_t v62 = sub_25192D4E0();
    int v63 = v62;
    if (os_log_type_enabled((os_log_t)v61, v62))
    {
      uint64_t v64 = v47;
      uint64_t v65 = swift_slowAlloc();
      uint64_t v154 = swift_slowAlloc();
      uint64_t v169 = v154;
      *(_DWORD *)uint64_t v65 = 136315906;
      sub_2518D6628(&qword_269B56BF0, MEMORY[0x263F48408]);
      LODWORD(v150) = v63;
      uint64_t v66 = sub_25192D7F0();
      uint64_t v171 = sub_2517F0D04(v66, v67, &v169);
      v155 = &v172;
      sub_25192D580();
      swift_bridgeObjectRelease();
      long long v68 = *(void (**)(char *, uint64_t))(v64 + 8);
      uint64_t v164 = v64 + 8;
      uint64_t v145 = (v64 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v68(v59, v166);
      *(_WORD *)(v65 + 12) = 2080;
      uint64_t v144 = v61;
      long long v69 = v146;
      sub_25192C2A0();
      sub_2518D6628(&qword_269B54750, MEMORY[0x263F07508]);
      uint64_t v70 = v158;
      uint64_t v71 = sub_25192D7F0();
      unint64_t v73 = v72;
      ((void (*)(char *, uint64_t))v149)(v69, v70);
      uint64_t v171 = sub_2517F0D04(v71, v73, &v169);
      sub_25192D580();
      swift_bridgeObjectRelease();
      v68(v60, v166);
      *(_WORD *)(v65 + 22) = 2080;
      uint64_t v149 = (char *)(v65 + 24);
      uint64_t v74 = v148;
      sub_25192C240();
      uint64_t v158 = sub_2518D6628(&qword_269B56BF8, MEMORY[0x263F482B8]);
      uint64_t v75 = v142;
      uint64_t v76 = sub_25192D7F0();
      unint64_t v78 = v77;
      uint64_t v79 = *(void (**)(char *, uint64_t))(v141 + 8);
      v79(v74, v75);
      uint64_t v171 = sub_2517F0D04(v76, v78, &v169);
      sub_25192D580();
      swift_bridgeObjectRelease();
      v68(v159, v166);
      *(_WORD *)(v65 + 32) = 2080;
      v159 = (char *)(v65 + 34);
      uint64_t v80 = v156;
      sub_25192C240();
      uint64_t v81 = sub_25192D7F0();
      unint64_t v83 = v82;
      v79(v74, v75);
      uint64_t v84 = v153;
      uint64_t v53 = v165;
      uint64_t v171 = sub_2517F0D04(v81, v83, &v169);
      uint64_t v56 = v166;
      sub_25192D580();
      swift_bridgeObjectRelease();
      v68(v80, v56);
      uint64_t v85 = (char *)v144;
      _os_log_impl(&dword_2517D6000, v144, (os_log_type_t)v150, "Unable to create DeviceEntity for %s with accessoryID: %s serviceKind: %s primaryServiceKind: %s)", (uint8_t *)v65, 0x2Au);
      uint64_t v86 = v154;
      swift_arrayDestroy();
      MEMORY[0x2533A75D0](v86, -1, -1);
      MEMORY[0x2533A75D0](v65, -1, -1);

      (*(void (**)(char *, uint64_t))(v151 + 8))(v157, v152);
    }
    else
    {

      long long v68 = *(void (**)(char *, uint64_t))(v47 + 8);
      v68(v156, v56);
      v68(v159, v56);
      v68(v60, v56);
      v68(v59, v56);
      (*(void (**)(char *, uint64_t))(v151 + 8))(v157, v152);
      uint64_t v84 = v153;
    }
    v68((char *)v53, v56);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    *((_OWORD *)v84 + 2) = 0u;
    *((_OWORD *)v84 + 3) = 0u;
    *(_OWORD *)uint64_t v84 = 0u;
    *((_OWORD *)v84 + 1) = 0u;
    return result;
  }
  uint64_t v54 = v150;
  (*(void (**)(uint64_t, char *, char *))(v44 + 32))(v150, v22, v45);
  uint64_t v55 = (uint64_t)v148;
  uint64_t v53 = v165;
  sub_25192C240();
  sub_25189498C(v55, (char *)&v169);
  if (v169 == 33)
  {
    (*(void (**)(uint64_t, char *))(v44 + 8))(v54, v45);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_9;
  }
  LODWORD(v159) = v169;
  uint64_t v88 = sub_25192C1B0();
  uint64_t v89 = sub_2518CC244(v88);
  MEMORY[0x270FA5388](v89);
  *(&v134 - 2) = (char *)v53;
  unint64_t v90 = (char *)v144;
  sub_2518B1FA8((uint64_t (*)(char *))sub_2518CC564, v89, (char *)v144);
  uint64_t v142 = 0;
  swift_bridgeObjectRelease();
  uint64_t v91 = sub_2518B4BCC((uint64_t)v90);
  swift_bridgeObjectRetain();
  uint64_t v92 = sub_2518B4DD0((uint64_t)v90, v53, v54);
  swift_bridgeObjectRetain_n();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  uint64_t v93 = v146;
  sub_25192C6C0();
  uint64_t v94 = sub_25192BCD0();
  uint64_t v96 = v95;
  uint64_t v156 = v50;
  ((void (*)(char *, uint64_t))v149)(v93, v158);
  uint64_t v169 = v94;
  uint64_t v170 = v96;
  sub_25192B750();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2518B50A0(v165, v150, (int)v159, (__int16 *)&v169);
  sub_25192B750();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v169 = sub_25192C710();
  uint64_t v170 = v97;
  sub_25192B750();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v98 = v137;
  sub_25192C130();
  uint64_t v99 = sub_25192BDF0();
  uint64_t v101 = v100;
  char v102 = *(char **)(v145 + 8);
  v145 += 8;
  uint64_t v147 = v102;
  ((void (*)(char *, uint64_t))v102)(v98, v138);
  uint64_t v169 = v99;
  uint64_t v170 = v101;
  sub_25192B750();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  uint64_t v103 = v167;
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  v159 = (char *)v92;
  swift_bridgeObjectRetain();
  v148 = (char *)v91;
  swift_bridgeObjectRetain();
  uint64_t v104 = sub_25192C150();
  uint64_t v105 = (uint64_t)v143;
  sub_25192C740();
  if (*(void *)(v104 + 16))
  {
    unint64_t v106 = sub_251823860(v105);
    uint64_t v107 = v152;
    uint64_t v108 = v151;
    uint64_t v109 = v140;
    uint64_t v110 = v139;
    uint64_t v111 = (uint64_t)v135;
    if (v112)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v139 + 16))(v135, *(void *)(v104 + 56) + *(void *)(v139 + 72) * v106, v140);
      uint64_t v113 = 0;
    }
    else
    {
      uint64_t v113 = 1;
    }
  }
  else
  {
    uint64_t v113 = 1;
    uint64_t v107 = v152;
    uint64_t v108 = v151;
    uint64_t v109 = v140;
    uint64_t v110 = v139;
    uint64_t v111 = (uint64_t)v135;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56))(v111, v113, 1, v109);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v111, 1, v109) == 1)
  {
    ((void (*)(char *, uint64_t))v149)(v143, v158);
    sub_2517E16E0(v111, &qword_269B56BD0);
LABEL_25:
    uint64_t v115 = MEMORY[0x263F8EE78];
    goto LABEL_26;
  }
  uint64_t v114 = sub_25192BEC0();
  (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v111, v109);
  if (!v114)
  {
    ((void (*)(char *, uint64_t))v149)(v143, v158);
    goto LABEL_25;
  }
  uint64_t v115 = sub_2518B0A04(v114);
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t))v149)(v143, v158);
LABEL_26:
  char v116 = v148;
  uint64_t v117 = sub_2517F25AC(v115);
  swift_bridgeObjectRelease();
  uint64_t v169 = v117;
  sub_25192B750();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v118 = sub_25192C750();
  uint64_t v120 = v119;
  uint64_t v121 = v136;
  uint64_t v122 = v157;
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v136, v157, v107);
  if (!v120)
  {
    char v123 = v137;
    sub_25192C130();
    long long v124 = v134;
    sub_25192BDC0();
    ((void (*)(char *, uint64_t))v147)(v123, v138);
    uint64_t v118 = sub_25192BF10();
    uint64_t v120 = v125;
    (*(void (**)(char *, uint64_t))(v139 + 8))(v124, v140);
  }
  uint64_t v126 = *(void (**)(char *, uint64_t))(v108 + 8);
  v126(v121, v107);
  uint64_t v169 = v118;
  uint64_t v170 = v120;
  sub_25192B750();
  v126(v122, v107);
  sub_2517E16E0((uint64_t)v144, &qword_269B54460);
  (*(void (**)(uint64_t, char *))(v154 + 8))(v150, v155);
  swift_bridgeObjectRelease();
  unsigned int v127 = v159;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v128 = v168;
  swift_release();
  uint64_t v129 = v161;
  swift_release();
  uint64_t v130 = v160;
  swift_release();
  uint64_t v131 = v162;
  swift_release();
  uint64_t v132 = v163;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v165, v166);
  uint64_t v133 = v153;
  *uint64_t v153 = v132;
  v133[1] = v131;
  v133[2] = v130;
  v133[3] = v129;
  v133[4] = v128;
  v133[5] = v103;
  v133[6] = (uint64_t)v127;
  v133[7] = (uint64_t)v116;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

unint64_t sub_2518B3E50()
{
  unint64_t result = qword_269B56BE0;
  if (!qword_269B56BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56BE0);
  }
  return result;
}

uint64_t DeviceEntity.debugDescription.getter()
{
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25192D310();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25192D310();
  swift_bridgeObjectRelease();
  sub_25192D310();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25192D310();
  swift_bridgeObjectRelease();
  sub_25192D310();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  DeviceType.description.getter();
  sub_25192D310();
  swift_bridgeObjectRelease();
  sub_25192D310();
  return v1;
}

uint64_t sub_2518B41CC()
{
  return sub_25192B760();
}

uint64_t sub_2518B41F0@<X0>(void *a1@<X8>)
{
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_2518B42D8()
{
  return swift_release();
}

uint64_t DeviceEntity.id.setter()
{
  return sub_25192B750();
}

void (*DeviceEntity.id.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_25192B730();
  return sub_2517E428C;
}

uint64_t DeviceEntity.$id.getter()
{
  return sub_25192B760();
}

uint64_t sub_2518B446C()
{
  return sub_25192B760();
}

uint64_t sub_2518B4490()
{
  sub_25192B740();
  return v1;
}

uint64_t sub_2518B44C4()
{
  return sub_25192B760();
}

uint64_t sub_2518B44E8()
{
  sub_25192B740();
  return v1;
}

uint64_t sub_2518B451C()
{
  return sub_25192B760();
}

uint64_t sub_2518B4540()
{
  sub_25192B740();
  return v1;
}

uint64_t sub_2518B4574()
{
  return sub_25192B760();
}

uint64_t DeviceEntity.displayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v15 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B539B8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v14 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B539C0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v13 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25192BC50();
  uint64_t v11 = *(void *)(v5 - 8);
  uint64_t v12 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25192D2B0();
  MEMORY[0x270FA5388](v7 - 8);
  sub_25192D2A0();
  sub_25192D290();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25192D270();
  swift_bridgeObjectRelease();
  sub_25192D290();
  sub_25192BC40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v13, 1, 1, v12);
  uint64_t v8 = sub_25192B920();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v14, 1, 1, v8);
  return sub_25192B940();
}

uint64_t sub_2518B48A0()
{
  uint64_t v0 = sub_25192BA40();
  __swift_allocate_value_buffer(v0, qword_269B56B88);
  __swift_project_value_buffer(v0, (uint64_t)qword_269B56B88);
  return sub_25192BA20();
}

uint64_t static DeviceEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B531A0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25192BA40();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269B56B88);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static DeviceEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  if (qword_269B531A0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25192BA40();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269B56B88);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static DeviceEntity.typeDisplayRepresentation.modify())()
{
  if (qword_269B531A0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_25192BA40();
  __swift_project_value_buffer(v0, (uint64_t)qword_269B56B88);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t (*static DeviceEntity.defaultQuery.modify())()
{
  return nullsub_1;
}

uint64_t sub_2518B4B70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_25192CC10();
  uint64_t v4 = sub_25184708C(v3);
  LOBYTE(a2) = sub_25188613C(a2, v4);
  swift_bridgeObjectRelease();
  return a2 & 1;
}

uint64_t sub_2518B4BCC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B54460);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25192CC40();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x263F8EE88];
  sub_2517E079C(a1, (uint64_t)v4, &qword_269B54460);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_2517E16E0((uint64_t)v4, &qword_269B54460);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    uint64_t v9 = sub_25192CC30();
    sub_2518C59BC(&v15, v9, v10);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  if (sub_25192C760())
  {
    uint64_t v11 = sub_25192C960();
    sub_2518C59BC(&v15, v11, v12);
    swift_bridgeObjectRelease();
  }
  return v16;
}

uint64_t sub_2518B4DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a3;
  uint64_t v4 = sub_25192BD10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B54460);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25192CC40();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x263F8EE88];
  sub_2517E079C(a1, (uint64_t)v10, &qword_269B54460);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_2517E16E0((uint64_t)v10, &qword_269B54460);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_25192CC20();
    uint64_t v15 = sub_25192BCD0();
    uint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_2518C59BC(&v23, v15, v17);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  if (sub_25192C760())
  {
    sub_25192C950();
    uint64_t v18 = sub_25192BCD0();
    uint64_t v20 = v19;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_2518C59BC(&v23, v18, v20);
    swift_bridgeObjectRelease();
  }
  return v24;
}

uint64_t sub_2518B50A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, __int16 *a4@<X8>)
{
  int v227 = a3;
  uint64_t v228 = a2;
  v249 = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B54468);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  v222 = &v217[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  v232 = &v217[-v8];
  uint64_t v258 = sub_25192C800();
  uint64_t v260 = *(void *)(v258 - 8);
  MEMORY[0x270FA5388](v258);
  v243 = &v217[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v262 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57018);
  uint64_t v10 = MEMORY[0x270FA5388](v262);
  v225 = &v217[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v237 = &v217[-v13];
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v230 = &v217[-v15];
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v247 = &v217[-v17];
  MEMORY[0x270FA5388](v16);
  uint64_t v251 = (uint64_t)&v217[-v18];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57020);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  v219 = &v217[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  v223 = &v217[-v23];
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v224 = &v217[-v25];
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v221 = &v217[-v27];
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  v241 = &v217[-v29];
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  v242 = &v217[-v31];
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  v226 = &v217[-v33];
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  v240 = &v217[-v35];
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  v229 = &v217[-v37];
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  v233 = &v217[-v39];
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  v244 = &v217[-v41];
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  v245 = &v217[-v43];
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  v236 = &v217[-v45];
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  v248 = &v217[-v47];
  MEMORY[0x270FA5388](v46);
  v254 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))&v217[-v48];
  uint64_t v49 = sub_25192C780();
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  v255 = &v217[-((v52 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  v261 = &v217[-v54];
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  v268 = &v217[-v56];
  MEMORY[0x270FA5388](v55);
  uint64_t v58 = &v217[-v57];
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55DC8);
  uint64_t v60 = MEMORY[0x270FA5388](v59 - 8);
  v269 = &v217[-((v61 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v60);
  int v63 = &v217[-v62];
  uint64_t v64 = sub_25192C0B0();
  uint64_t v65 = *(void *)(v64 - 8);
  uint64_t v66 = MEMORY[0x270FA5388](v64);
  v253 = &v217[-((v67 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v68 = MEMORY[0x270FA5388](v66);
  v220 = &v217[-v69];
  uint64_t v70 = MEMORY[0x270FA5388](v68);
  v259 = &v217[-v71];
  uint64_t v72 = MEMORY[0x270FA5388](v70);
  v231 = &v217[-v73];
  uint64_t v74 = MEMORY[0x270FA5388](v72);
  v238 = &v217[-v75];
  uint64_t v76 = MEMORY[0x270FA5388](v74);
  v239 = &v217[-v77];
  uint64_t v78 = MEMORY[0x270FA5388](v76);
  v256 = &v217[-v79];
  uint64_t v80 = MEMORY[0x270FA5388](v78);
  uint64_t v257 = (uint64_t)&v217[-v81];
  uint64_t v82 = MEMORY[0x270FA5388](v80);
  v265 = &v217[-v83];
  uint64_t v84 = MEMORY[0x270FA5388](v82);
  v246 = &v217[-v85];
  uint64_t v86 = MEMORY[0x270FA5388](v84);
  uint64_t v88 = &v217[-v87];
  MEMORY[0x270FA5388](v86);
  unint64_t v90 = &v217[-v89];
  sub_25192C240();
  sub_25192C200();
  uint64_t v91 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v50 + 16);
  uint64_t v263 = a1;
  v266 = v91;
  uint64_t v267 = v50 + 16;
  v91(v58, a1, v49);
  v264 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v65 + 48);
  int v92 = v264(v63, 1, v64);
  uint64_t v271 = v49;
  uint64_t v250 = v50;
  if (v92 == 1)
  {
    sub_25192C240();
    v270 = *(void (**)(unsigned char *, uint64_t))(v50 + 8);
    v270(v58, v49);
    sub_2517E16E0((uint64_t)v63, &qword_269B55DC8);
  }
  else
  {
    v270 = *(void (**)(unsigned char *, uint64_t))(v50 + 8);
    v270(v58, v49);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v65 + 32))(v88, v63, v64);
  }
  sub_2518D6628(&qword_269B57028, MEMORY[0x263F482B8]);
  char v93 = sub_25192D230();
  uint64_t v94 = *(void (**)(unsigned char *, uint64_t))(v65 + 8);
  v94(v88, v64);
  uint64_t v95 = v94;
  uint64_t v272 = v65 + 8;
  v94(v90, v64);
  uint64_t v96 = v262;
  uint64_t v97 = v254;
  if ((v93 & 1) == 0)
  {
    uint64_t v98 = (uint64_t)v246;
    sub_25192C240();
    sub_25189498C(v98, (char *)&v275);
    __int16 v99 = v275;
    if (v275 != 33)
    {
      uint64_t v100 = v269;
      uint64_t v101 = v263;
      sub_25192C200();
      char v102 = v268;
      uint64_t v103 = v101;
      uint64_t v104 = v100;
      uint64_t v105 = v271;
      v266(v268, v103, v271);
      if (v264(v104, 1, v64) == 1)
      {
        uint64_t v106 = (uint64_t)v265;
        sub_25192C240();
        v270(v102, v105);
        sub_2517E16E0((uint64_t)v269, &qword_269B55DC8);
      }
      else
      {
        v270(v102, v105);
        uint64_t v106 = (uint64_t)v265;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v65 + 32))(v265, v104, v64);
      }
      uint64_t result = sub_25189498C(v106, (char *)&v275);
      uint64_t v96 = v262;
      if (v275 != 33)
      {
        __int16 v121 = v99 | (v275 << 8) | 0x8000;
        goto LABEL_94;
      }
    }
  }
  sub_25192C240();
  uint64_t v108 = *(void (**)(void))(v65 + 104);
  LODWORD(v264) = *MEMORY[0x263F48230];
  v269 = v108;
  v108(v256);
  uint64_t v109 = sub_2518D6628(&qword_269B55C68, MEMORY[0x263F482B8]);
  sub_25192D360();
  v268 = (unsigned char *)v109;
  sub_25192D360();
  uint64_t v110 = (unsigned int *)MEMORY[0x263F48488];
  v265 = (unsigned char *)(v65 + 104);
  if (v275 == v273 && v276 == v274)
  {
    swift_bridgeObjectRelease_n();
    v95(v256, v64);
    v95((unsigned char *)v257, v64);
  }
  else
  {
    char v111 = sub_25192D810();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v95(v256, v64);
    v95((unsigned char *)v257, v64);
    if ((v111 & 1) == 0) {
      goto LABEL_37;
    }
  }
  sub_25192C390();
  uint64_t v112 = *v110;
  uint64_t v113 = v260;
  uint64_t v114 = (uint64_t)v97;
  uint64_t v115 = *(void (**)(unsigned char *, void, uint64_t))(v260 + 104);
  char v116 = v248;
  uint64_t v117 = v258;
  uint64_t v235 = v260 + 104;
  v234 = v115;
  v115(v248, v112, v258);
  v256 = *(unsigned char **)(v113 + 56);
  uint64_t v257 = v113 + 56;
  ((void (*)(unsigned char *, void, uint64_t, uint64_t))v256)(v116, 0, 1, v117);
  uint64_t v118 = v251;
  uint64_t v119 = v251 + *(int *)(v96 + 48);
  sub_2517E079C((uint64_t)v97, v251, &qword_269B57020);
  sub_2517E079C((uint64_t)v116, v119, &qword_269B57020);
  uint64_t v120 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v113 + 48);
  if (v120(v118, 1, v117) == 1)
  {
    sub_2517E16E0((uint64_t)v116, &qword_269B57020);
    uint64_t v118 = v251;
    sub_2517E16E0(v114, &qword_269B57020);
    if (v120(v119, 1, v117) == 1)
    {
      uint64_t result = sub_2517E16E0(v118, &qword_269B57020);
      __int16 v121 = 24087;
      goto LABEL_94;
    }
    goto LABEL_19;
  }
  uint64_t v122 = v236;
  sub_2517E079C(v118, (uint64_t)v236, &qword_269B57020);
  if (v120(v119, 1, v117) == 1)
  {
    sub_2517E16E0((uint64_t)v248, &qword_269B57020);
    sub_2517E16E0((uint64_t)v254, &qword_269B57020);
    (*(void (**)(unsigned char *, uint64_t))(v260 + 8))(v122, v117);
LABEL_19:
    sub_2517E16E0(v118, &qword_269B57018);
    char v123 = v245;
    uint64_t v124 = v262;
    goto LABEL_22;
  }
  uint64_t v125 = v260;
  uint64_t v126 = v243;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v260 + 32))(v243, v119, v117);
  sub_2518D6628(&qword_269B57030, MEMORY[0x263F48498]);
  int v218 = sub_25192D230();
  unsigned int v127 = *(void (**)(unsigned char *, uint64_t))(v125 + 8);
  uint64_t v128 = v126;
  uint64_t v124 = v262;
  v127(v128, v117);
  sub_2517E16E0((uint64_t)v248, &qword_269B57020);
  sub_2517E16E0((uint64_t)v254, &qword_269B57020);
  v127(v122, v117);
  uint64_t result = sub_2517E16E0(v251, &qword_269B57020);
  char v123 = v245;
  if (v218)
  {
    __int16 v121 = 24087;
    goto LABEL_94;
  }
LABEL_22:
  v252 = v95;
  sub_25192C390();
  uint64_t v129 = v124;
  uint64_t v130 = v244;
  uint64_t v131 = v258;
  v234(v244, *MEMORY[0x263F48490], v258);
  ((void (*)(unsigned char *, void, uint64_t, uint64_t))v256)(v130, 0, 1, v131);
  uint64_t v132 = v247;
  uint64_t v133 = (uint64_t)&v247[*(int *)(v129 + 48)];
  sub_2517E079C((uint64_t)v123, (uint64_t)v247, &qword_269B57020);
  sub_2517E079C((uint64_t)v130, v133, &qword_269B57020);
  if (v120((uint64_t)v132, 1, v131) == 1)
  {
    sub_2517E16E0((uint64_t)v130, &qword_269B57020);
    uint64_t v132 = v247;
    sub_2517E16E0((uint64_t)v123, &qword_269B57020);
    if (v120(v133, 1, v131) == 1)
    {
      uint64_t result = sub_2517E16E0((uint64_t)v132, &qword_269B57020);
      __int16 v121 = 24073;
      goto LABEL_94;
    }
  }
  else
  {
    uint64_t v134 = v233;
    sub_2517E079C((uint64_t)v132, (uint64_t)v233, &qword_269B57020);
    if (v120(v133, 1, v131) != 1)
    {
      v254 = v120;
      uint64_t v136 = v260;
      uint64_t v137 = v243;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v260 + 32))(v243, v133, v131);
      sub_2518D6628(&qword_269B57030, MEMORY[0x263F48498]);
      LODWORD(v251) = sub_25192D230();
      uint64_t v138 = *(void (**)(unsigned char *, uint64_t))(v136 + 8);
      uint64_t v95 = v252;
      uint64_t v135 = v262;
      v138(v137, v131);
      sub_2517E16E0((uint64_t)v244, &qword_269B57020);
      sub_2517E16E0((uint64_t)v245, &qword_269B57020);
      v138(v233, v131);
      uint64_t result = sub_2517E16E0((uint64_t)v247, &qword_269B57020);
      if (v251)
      {
        __int16 v121 = 24073;
        goto LABEL_94;
      }
      goto LABEL_31;
    }
    sub_2517E16E0((uint64_t)v244, &qword_269B57020);
    sub_2517E16E0((uint64_t)v245, &qword_269B57020);
    (*(void (**)(unsigned char *, uint64_t))(v260 + 8))(v134, v131);
  }
  v254 = v120;
  sub_2517E16E0((uint64_t)v132, &qword_269B57018);
  uint64_t v95 = v252;
  uint64_t v135 = v262;
LABEL_31:
  uint64_t v139 = (uint64_t)v229;
  sub_25192C390();
  uint64_t v140 = v240;
  uint64_t v141 = v258;
  v234(v240, *MEMORY[0x263F48480], v258);
  ((void (*)(unsigned char *, void, uint64_t, uint64_t))v256)(v140, 0, 1, v141);
  uint64_t v142 = *(int *)(v135 + 48);
  v143 = v230;
  uint64_t v144 = (uint64_t)&v230[v142];
  sub_2517E079C(v139, (uint64_t)v230, &qword_269B57020);
  sub_2517E079C((uint64_t)v140, v144, &qword_269B57020);
  uint64_t v145 = v254;
  if (v254((uint64_t)v143, 1, v141) == 1)
  {
    sub_2517E16E0((uint64_t)v140, &qword_269B57020);
    sub_2517E16E0(v139, &qword_269B57020);
    if (v145(v144, 1, v141) == 1)
    {
      uint64_t result = sub_2517E16E0((uint64_t)v143, &qword_269B57020);
      __int16 v121 = 24089;
      goto LABEL_94;
    }
    goto LABEL_36;
  }
  v146 = v226;
  sub_2517E079C((uint64_t)v143, (uint64_t)v226, &qword_269B57020);
  if (v145(v144, 1, v141) == 1)
  {
    sub_2517E16E0((uint64_t)v240, &qword_269B57020);
    sub_2517E16E0(v139, &qword_269B57020);
    (*(void (**)(unsigned char *, uint64_t))(v260 + 8))(v146, v141);
LABEL_36:
    sub_2517E16E0((uint64_t)v143, &qword_269B57018);
    goto LABEL_37;
  }
  uint64_t v166 = v260;
  uint64_t v167 = (uint64_t)v143;
  uint64_t v168 = v243;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v260 + 32))(v243, v144, v141);
  sub_2518D6628(&qword_269B57030, MEMORY[0x263F48498]);
  LODWORD(v257) = sub_25192D230();
  uint64_t v169 = *(void (**)(unsigned char *, uint64_t))(v166 + 8);
  v169(v168, v141);
  sub_2517E16E0((uint64_t)v240, &qword_269B57020);
  sub_2517E16E0(v139, &qword_269B57020);
  v169(v226, v141);
  uint64_t result = sub_2517E16E0(v167, &qword_269B57020);
  if (v257)
  {
    __int16 v121 = 24089;
    goto LABEL_94;
  }
LABEL_37:
  uint64_t v147 = v239;
  sub_25192C240();
  v148 = v238;
  ((void (*)(unsigned char *, void, uint64_t))v269)(v238, *MEMORY[0x263F48238], v64);
  sub_25192D360();
  sub_25192D360();
  if (v275 == v273 && v276 == v274)
  {
    swift_bridgeObjectRelease_n();
    v95(v148, v64);
    v95(v147, v64);
    uint64_t v149 = v271;
  }
  else
  {
    char v150 = sub_25192D810();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v95(v148, v64);
    v95(v147, v64);
    uint64_t v149 = v271;
    if ((v150 & 1) == 0) {
      goto LABEL_88;
    }
  }
  v256 = (unsigned char *)sub_25192C510();
  uint64_t v151 = *((void *)v256 + 2);
  uint64_t v152 = v261;
  uint64_t v153 = v231;
  v252 = v95;
  if (v151)
  {
    uint64_t v154 = &v256[(*(unsigned __int8 *)(v250 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v250 + 80)];
    uint64_t v257 = v250 + 8;
    uint64_t v155 = *(void *)(v250 + 72);
    while (1)
    {
      uint64_t v156 = v95;
      v266(v152, (uint64_t)v154, v149);
      sub_25192C240();
      uint64_t v157 = v259;
      ((void (*)(unsigned char *, void, uint64_t))v269)(v259, v264, v64);
      sub_25192D360();
      sub_25192D360();
      BOOL v158 = v275 == v273 && v276 == v274;
      if (v158) {
        break;
      }
      char v159 = sub_25192D810();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v160 = v157;
      uint64_t v95 = v156;
      v156(v160, v64);
      v156(v153, v64);
      if (v159) {
        goto LABEL_53;
      }
      uint64_t v152 = v261;
      uint64_t v149 = v271;
      v270(v261, v271);
      v154 += v155;
      if (!--v151) {
        goto LABEL_49;
      }
    }
    swift_bridgeObjectRelease_n();
    v156(v157, v64);
    v156(v153, v64);
LABEL_53:
    uint64_t v161 = v250;
    uint64_t v163 = (uint64_t)v232;
    uint64_t v149 = v271;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v250 + 32))(v232, v261, v271);
    uint64_t v162 = *(unsigned char **)(v161 + 56);
    uint64_t v164 = (unsigned char *)v163;
    uint64_t v165 = 0;
  }
  else
  {
LABEL_49:
    uint64_t v161 = v250;
    uint64_t v162 = *(unsigned char **)(v250 + 56);
    uint64_t v163 = (uint64_t)v232;
    uint64_t v164 = v232;
    uint64_t v165 = 1;
  }
  v247 = v162;
  ((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))v162)(v164, v165, 1, v149);
  swift_bridgeObjectRelease();
  uint64_t v170 = *(unsigned char **)(v161 + 48);
  v261 = (unsigned char *)(v161 + 48);
  v259 = v170;
  int v171 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v170)(v163, 1, v149);
  uint64_t v172 = v258;
  char v173 = (unsigned char *)v260;
  v174 = v237;
  v175 = v242;
  v176 = v241;
  uint64_t v177 = v262;
  if (v171 == 1)
  {
    sub_2517E16E0(v163, &qword_269B54468);
    (*((void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))v173 + 7))(v175, 1, 1, v172);
  }
  else
  {
    sub_25192C390();
    v270((unsigned char *)v163, v149);
  }
  uint64_t v178 = *MEMORY[0x263F48488];
  v179 = (unsigned char *)*((void *)v173 + 13);
  v254 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))(v173 + 104);
  v248 = v179;
  ((void (*)(unsigned char *, uint64_t, uint64_t))v179)(v176, v178, v172);
  v180 = (void (*)(unsigned char *, void, uint64_t, uint64_t))*((void *)v173 + 7);
  v256 = v173 + 56;
  uint64_t v251 = (uint64_t)v180;
  v180(v176, 0, 1, v172);
  uint64_t v181 = (uint64_t)&v174[*(int *)(v177 + 48)];
  sub_2517E079C((uint64_t)v175, (uint64_t)v174, &qword_269B57020);
  sub_2517E079C((uint64_t)v176, v181, &qword_269B57020);
  v183 = v173 + 48;
  v182 = (unsigned int (*)(unsigned char *, uint64_t, uint64_t))*((void *)v173 + 6);
  BOOL v158 = v182(v174, 1, v172) == 1;
  uint64_t v257 = (uint64_t)v182;
  if (v158)
  {
    sub_2517E16E0((uint64_t)v176, &qword_269B57020);
    sub_2517E16E0((uint64_t)v175, &qword_269B57020);
    unsigned int v184 = v182((unsigned char *)v181, 1, v172);
    uint64_t v185 = v260;
    if (v184 == 1)
    {
      uint64_t result = sub_2517E16E0((uint64_t)v174, &qword_269B57020);
      __int16 v121 = 23;
      goto LABEL_94;
    }
  }
  else
  {
    v186 = v221;
    sub_2517E079C((uint64_t)v174, (uint64_t)v221, &qword_269B57020);
    unsigned int v187 = v182((unsigned char *)v181, 1, v172);
    if (v187 != 1)
    {
      v202 = v243;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v260 + 32))(v243, v181, v172);
      sub_2518D6628(&qword_269B57030, MEMORY[0x263F48498]);
      char v203 = sub_25192D230();
      v204 = *(void (**)(unsigned char *, uint64_t))(v260 + 8);
      v204(v202, v172);
      sub_2517E16E0((uint64_t)v241, &qword_269B57020);
      sub_2517E16E0((uint64_t)v242, &qword_269B57020);
      v204(v186, v172);
      uint64_t v149 = v271;
      uint64_t v185 = v260;
      uint64_t result = sub_2517E16E0((uint64_t)v237, &qword_269B57020);
      if (v203)
      {
        __int16 v121 = 23;
        goto LABEL_94;
      }
      goto LABEL_64;
    }
    sub_2517E16E0((uint64_t)v241, &qword_269B57020);
    sub_2517E16E0((uint64_t)v242, &qword_269B57020);
    uint64_t v185 = v260;
    (*(void (**)(unsigned char *, uint64_t))(v260 + 8))(v186, v172);
  }
  sub_2517E16E0((uint64_t)v174, &qword_269B57018);
LABEL_64:
  v188 = (unsigned char *)sub_25192C510();
  uint64_t v189 = *((void *)v188 + 2);
  v245 = v183;
  v244 = v188;
  if (v189)
  {
    v190 = &v188[(*(unsigned __int8 *)(v250 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v250 + 80)];
    uint64_t v191 = *(void *)(v250 + 72);
    v192 = v255;
    v193 = v220;
    v194 = v253;
    while (1)
    {
      v266(v192, (uint64_t)v190, v149);
      sub_25192C240();
      ((void (*)(unsigned char *, void, uint64_t))v269)(v194, v264, v64);
      sub_25192D360();
      sub_25192D360();
      if (v275 == v273 && v276 == v274) {
        break;
      }
      char v196 = sub_25192D810();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v197 = v252;
      v252(v194, v64);
      v197(v193, v64);
      uint64_t v149 = v271;
      if (v196) {
        goto LABEL_78;
      }
      v192 = v255;
      v270(v255, v271);
      v190 += v191;
      if (!--v189)
      {
        uint64_t v198 = 1;
        uint64_t v199 = v149;
        uint64_t v200 = v258;
        uint64_t v201 = (uint64_t)v225;
        uint64_t v185 = v260;
        goto LABEL_76;
      }
    }
    swift_bridgeObjectRelease_n();
    v208 = v252;
    v252(v194, v64);
    v208(v193, v64);
    uint64_t v149 = v271;
LABEL_78:
    uint64_t v207 = (uint64_t)v222;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v250 + 32))(v222, v255, v149);
    uint64_t v198 = 0;
    uint64_t v199 = v149;
    uint64_t v200 = v258;
    uint64_t v201 = (uint64_t)v225;
    uint64_t v185 = v260;
    uint64_t v205 = (uint64_t)v224;
    uint64_t v206 = (uint64_t)v223;
  }
  else
  {
    uint64_t v198 = 1;
    uint64_t v199 = v149;
    uint64_t v200 = v258;
    uint64_t v201 = (uint64_t)v225;
LABEL_76:
    uint64_t v205 = (uint64_t)v224;
    uint64_t v206 = (uint64_t)v223;
    uint64_t v207 = (uint64_t)v222;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v247)(v207, v198, 1, v199);
  swift_bridgeObjectRelease();
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v259)(v207, 1, v199) == 1)
  {
    sub_2517E16E0(v207, &qword_269B54468);
    v209 = (void (*)(uint64_t, void, uint64_t, uint64_t))v251;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v251)(v205, 1, 1, v200);
    v210 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v257;
  }
  else
  {
    sub_25192C390();
    v270((unsigned char *)v207, v199);
    v210 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v257;
    v209 = (void (*)(uint64_t, void, uint64_t, uint64_t))v251;
  }
  ((void (*)(uint64_t, void, uint64_t))v248)(v206, *MEMORY[0x263F48490], v200);
  v209(v206, 0, 1, v200);
  uint64_t v211 = v201 + *(int *)(v262 + 48);
  sub_2517E079C(v205, v201, &qword_269B57020);
  sub_2517E079C(v206, v211, &qword_269B57020);
  if (v210(v201, 1, v200) == 1)
  {
    sub_2517E16E0(v206, &qword_269B57020);
    sub_2517E16E0(v205, &qword_269B57020);
    if (v210(v211, 1, v200) == 1)
    {
      uint64_t result = sub_2517E16E0(v201, &qword_269B57020);
LABEL_93:
      __int16 v121 = 9;
      goto LABEL_94;
    }
    goto LABEL_87;
  }
  v212 = v219;
  sub_2517E079C(v201, (uint64_t)v219, &qword_269B57020);
  if (v210(v211, 1, v200) == 1)
  {
    sub_2517E16E0(v206, &qword_269B57020);
    sub_2517E16E0(v205, &qword_269B57020);
    (*(void (**)(unsigned char *, uint64_t))(v185 + 8))(v212, v200);
LABEL_87:
    sub_2517E16E0(v201, &qword_269B57018);
    goto LABEL_88;
  }
  v215 = v243;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v185 + 32))(v243, v211, v200);
  sub_2518D6628(&qword_269B57030, MEMORY[0x263F48498]);
  LODWORD(v272) = sub_25192D230();
  v216 = *(void (**)(unsigned char *, uint64_t))(v185 + 8);
  v216(v215, v200);
  sub_2517E16E0(v206, &qword_269B57020);
  sub_2517E16E0(v205, &qword_269B57020);
  v216(v212, v200);
  uint64_t result = sub_2517E16E0(v201, &qword_269B57020);
  if (v272) {
    goto LABEL_93;
  }
LABEL_88:
  uint64_t v213 = (uint64_t)v246;
  sub_25192C920();
  uint64_t result = sub_25189498C(v213, (char *)&v275);
  __int16 v214 = v275;
  if v275 == 33 || (uint64_t result = sub_25192C760(), (result)) {
    __int16 v121 = v227;
  }
  else {
    __int16 v121 = v214 | ((_WORD)v227 << 8) | 0x4000;
  }
LABEL_94:
  __int16 *v249 = v121;
  return result;
}

uint64_t DeviceEntity.init(staticMediaProfile:snapshot:)@<X0>(char *a1@<X0>, char *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v162 = a2;
  uint64_t v154 = a3;
  uint64_t v4 = sub_25192CBE0();
  uint64_t v155 = *(void *)(v4 - 8);
  uint64_t v156 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v151 = (char *)&v129 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_25192BF20();
  uint64_t v135 = *(void *)(v136 - 8);
  MEMORY[0x270FA5388](v136);
  uint64_t v133 = (char *)&v129 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = sub_25192C1E0();
  uint64_t v157 = *(void *)(v153 - 8);
  MEMORY[0x270FA5388](v153);
  uint64_t v138 = (char *)&v129 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_25192BF60();
  uint64_t v152 = *(void *)(v149 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v149);
  v148 = (char *)&v129 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v147 = (char *)&v129 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56BD0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v134 = (char *)&v129 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E88);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v140 = (uint64_t)&v129 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_25192BE00();
  uint64_t v145 = *(void *)(v142 - 8);
  MEMORY[0x270FA5388](v142);
  uint64_t v141 = (char *)&v129 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_25192BD10();
  uint64_t v143 = *(void *)(v146 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v146);
  uint64_t v137 = (char *)&v129 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v139 = (char *)&v129 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56C00);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v129 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_25192C930();
  BOOL v158 = *(uint8_t **)(v22 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v144 = (char *)&v129 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  char v150 = (char *)&v129 - v25;
  uint64_t v26 = sub_25192BC50();
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v28 = (char *)&v129 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53B90);
  sub_25192BC30();
  uint64_t v160 = MEMORY[0x2533A4FB0](v28);
  sub_25192BA80();
  sub_25192BC30();
  uint64_t v29 = MEMORY[0x2533A4FB0](v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56BD8);
  sub_25192BA80();
  sub_25192BC30();
  unint64_t v30 = sub_2518B3E50();
  uint64_t v31 = MEMORY[0x2533A4F80](v28, v30);
  sub_25192BA80();
  sub_25192BC30();
  uint64_t v32 = MEMORY[0x2533A4FB0](v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56BE8);
  sub_25192BA80();
  sub_25192BC30();
  uint64_t v33 = MEMORY[0x2533A4FB0](v28);
  sub_25192BA80();
  sub_25192BC30();
  uint64_t v34 = v158;
  uint64_t v35 = MEMORY[0x2533A4FB0](v28);
  sub_25192BA80();
  uint64_t v166 = a1;
  sub_25192CB60();
  int v36 = (*((uint64_t (**)(char *, uint64_t, uint64_t))v34 + 6))(v21, 1, v22);
  uint64_t v164 = v35;
  uint64_t v165 = v29;
  uint64_t v159 = v32;
  uint64_t v161 = v33;
  uint64_t v163 = v31;
  if (v36 == 1)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_2517E16E0((uint64_t)v21, &qword_269B56C00);
LABEL_7:
    uint64_t v60 = v155;
    uint64_t v61 = v156;
    uint64_t v62 = v166;
    int v63 = v151;
    if (qword_269B53418 != -1) {
      swift_once();
    }
    uint64_t v64 = sub_25192D1D0();
    __swift_project_value_buffer(v64, (uint64_t)qword_269B5A090);
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v63, v62, v61);
    uint64_t v65 = sub_25192D1B0();
    os_log_type_t v66 = sub_25192D4E0();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = v60;
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      uint64_t v167 = v69;
      *(_DWORD *)uint64_t v68 = 136315138;
      BOOL v158 = v68 + 4;
      sub_2518D6628(&qword_269B56C08, MEMORY[0x263F48B78]);
      uint64_t v70 = sub_25192D7F0();
      uint64_t v169 = sub_2517F0D04(v70, v71, &v167);
      sub_25192D580();
      swift_bridgeObjectRelease();
      uint64_t v72 = *(void (**)(char *, uint64_t))(v67 + 8);
      v72(v63, v61);
      _os_log_impl(&dword_2517D6000, v65, v66, "Unable to create DeviceEntity for %s)", v68, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533A75D0](v69, -1, -1);
      MEMORY[0x2533A75D0](v68, -1, -1);

      (*(void (**)(char *, uint64_t))(v157 + 8))(v162, v153);
      v72(v166, v61);
    }
    else
    {

      uint64_t v73 = *(void (**)(char *, uint64_t))(v60 + 8);
      v73(v63, v61);
      (*(void (**)(char *, uint64_t))(v157 + 8))(v162, v153);
      v73(v62, v61);
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    uint64_t v75 = v154;
    v154[2] = 0u;
    v75[3] = 0u;
    *uint64_t v75 = 0u;
    v75[1] = 0u;
    return result;
  }
  uint64_t v37 = v150;
  (*((void (**)(char *, char *, uint64_t))v34 + 4))(v150, v21, v22);
  uint64_t v38 = v144;
  (*((void (**)(char *, char *, uint64_t))v34 + 2))(v144, v37, v22);
  if ((*((unsigned int (**)(char *, uint64_t))v34 + 11))(v38, v22) != *MEMORY[0x263F48578])
  {
    uint64_t v59 = (void (*)(char *, uint64_t))*((void *)v34 + 1);
    v59(v38, v22);
    v59(v37, v22);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_7;
  }
  uint64_t v132 = v22;
  uint64_t v39 = sub_2518B88DC();
  swift_bridgeObjectRetain();
  uint64_t v151 = (char *)sub_2518B8C18();
  swift_bridgeObjectRetain_n();
  uint64_t v40 = v160;
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  uint64_t v41 = v139;
  sub_25192CBA0();
  uint64_t v42 = sub_25192BCD0();
  uint64_t v44 = v43;
  uint64_t v45 = *(void (**)(char *, uint64_t))(v143 + 8);
  uint64_t v131 = v143 + 8;
  uint64_t v130 = v45;
  v45(v41, v146);
  uint64_t v167 = v42;
  uint64_t v168 = v44;
  sub_25192B750();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  LOWORD(v167) = 2;
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B750();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v167 = sub_25192CBB0();
  uint64_t v168 = v46;
  sub_25192B750();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v47 = v141;
  sub_25192C130();
  uint64_t v48 = sub_25192BDF0();
  uint64_t v50 = v49;
  uint64_t v51 = *(void (**)(char *, uint64_t))(v145 + 8);
  v145 += 8;
  uint64_t v129 = v51;
  v51(v47, v142);
  uint64_t v167 = v48;
  uint64_t v168 = v50;
  sub_25192B750();
  uint64_t v144 = (char *)v39;
  uint64_t v52 = v146;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v53 = v40;
  swift_release();
  uint64_t v54 = sub_25192CBC0();
  uint64_t v55 = v140;
  sub_2518B16BC(v54, v140);
  uint64_t v56 = v143;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v55, 1, v52) == 1)
  {
    sub_2517E16E0(v55, &qword_269B53E88);
    uint64_t v57 = v157;
    uint64_t v58 = v151;
LABEL_34:
    uint64_t v167 = MEMORY[0x263F8EE88];
    uint64_t v109 = v53;
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25192B750();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
LABEL_35:
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v110 = sub_25192CBD0();
    uint64_t v112 = v111;
    uint64_t v113 = v138;
    uint64_t v114 = v162;
    uint64_t v115 = v153;
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v138, v162, v153);
    if (!v112)
    {
      char v116 = v141;
      sub_25192C130();
      uint64_t v117 = v133;
      sub_25192BDC0();
      v129(v116, v142);
      uint64_t v110 = sub_25192BF10();
      uint64_t v112 = v118;
      (*(void (**)(char *, uint64_t))(v135 + 8))(v117, v136);
    }
    uint64_t v119 = *(void (**)(char *, uint64_t))(v57 + 8);
    v119(v113, v115);
    uint64_t v167 = v110;
    uint64_t v168 = v112;
    uint64_t v120 = v164;
    sub_25192B750();
    v119(v114, v115);
    (*(void (**)(char *, uint64_t))(v155 + 8))(v166, v156);
    (*((void (**)(char *, uint64_t))v158 + 1))(v150, v132);
    __int16 v121 = v144;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v122 = v161;
    swift_release();
    uint64_t v123 = v159;
    swift_release();
    uint64_t v124 = v163;
    swift_release();
    uint64_t v125 = v165;
    swift_release();
    swift_release();
    uint64_t v126 = v154;
    *(void *)uint64_t v154 = v109;
    v126[1] = v125;
    v126[2] = v124;
    v126[3] = v123;
    v126[4] = v122;
    v126[5] = v120;
    v126[6] = v58;
    v126[7] = v121;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  uint64_t v76 = (uint64_t)v137;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v137, v55, v52);
  uint64_t v77 = sub_25192C150();
  uint64_t v57 = v157;
  if (*(void *)(v77 + 16))
  {
    unint64_t v78 = sub_251823860(v76);
    uint64_t v79 = (uint64_t)v134;
    uint64_t v58 = v151;
    if (v80)
    {
      uint64_t v81 = v135;
      uint64_t v82 = v136;
      (*(void (**)(char *, unint64_t, uint64_t))(v135 + 16))(v134, *(void *)(v77 + 56) + *(void *)(v135 + 72) * v78, v136);
      uint64_t v83 = 0;
    }
    else
    {
      uint64_t v83 = 1;
      uint64_t v82 = v136;
      uint64_t v81 = v135;
    }
  }
  else
  {
    uint64_t v83 = 1;
    uint64_t v82 = v136;
    uint64_t v81 = v135;
    uint64_t v79 = (uint64_t)v134;
    uint64_t v58 = v151;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(v79, v83, 1, v82);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v79, 1, v82) == 1)
  {
    sub_2517E16E0(v79, &qword_269B56BD0);
LABEL_33:
    v130(v137, v146);
    goto LABEL_34;
  }
  uint64_t v84 = sub_25192BEC0();
  uint64_t v85 = v82;
  uint64_t v86 = v84;
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v79, v85);
  if (!v86) {
    goto LABEL_33;
  }
  int64_t v87 = *(void *)(v86 + 16);
  if (!v87)
  {
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unsigned int v127 = v58;
    uint64_t v102 = MEMORY[0x263F8EE78];
LABEL_39:
    uint64_t v128 = sub_2517F25AC(v102);
    swift_bridgeObjectRelease();
    uint64_t v167 = v128;
    sub_25192B750();
    v130(v137, v146);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v58 = v127;
    uint64_t v109 = v53;
    goto LABEL_35;
  }
  uint64_t v167 = MEMORY[0x263F8EE78];
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2518C3840(0, v87, 0);
  uint64_t result = sub_2518CFFE4(v86);
  int64_t v88 = result;
  int v90 = v89;
  char v92 = v91 & 1;
  uint64_t v143 = v86 + 56;
  uint64_t v140 = v152 + 16;
  uint64_t v139 = (char *)(v152 + 32);
  uint64_t v134 = (char *)(v152 + 8);
  while ((v88 & 0x8000000000000000) == 0 && v88 < 1 << *(unsigned char *)(v86 + 32))
  {
    if (((*(void *)(v143 + (((unint64_t)v88 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v88) & 1) == 0) {
      goto LABEL_41;
    }
    if (*(_DWORD *)(v86 + 36) != v90) {
      goto LABEL_42;
    }
    uint64_t v93 = v86;
    uint64_t v94 = v152;
    int64_t v95 = *(void *)(v86 + 48) + *(void *)(v152 + 72) * v88;
    uint64_t v96 = v147;
    uint64_t v97 = v149;
    (*(void (**)(char *, int64_t, uint64_t))(v152 + 16))(v147, v95, v149);
    uint64_t v98 = v148;
    (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v148, v96, v97);
    uint64_t v99 = sub_25192BF40();
    uint64_t v101 = v100;
    (*(void (**)(char *, uint64_t))(v94 + 8))(v98, v97);
    uint64_t v102 = v167;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2518C3840(0, *(void *)(v102 + 16) + 1, 1);
      uint64_t v102 = v167;
    }
    unint64_t v104 = *(void *)(v102 + 16);
    unint64_t v103 = *(void *)(v102 + 24);
    if (v104 >= v103 >> 1)
    {
      sub_2518C3840(v103 > 1, v104 + 1, 1);
      uint64_t v102 = v167;
    }
    *(void *)(v102 + 16) = v104 + 1;
    uint64_t v105 = v102 + 16 * v104;
    *(void *)(v105 + 32) = v99;
    *(void *)(v105 + 40) = v101;
    uint64_t v86 = v93;
    uint64_t result = sub_2518D0084(v88, v90, v92 & 1, v93);
    int64_t v88 = result;
    int v90 = v106;
    char v92 = v107 & 1;
    --v87;
    uint64_t v108 = v151;
    if (!v87)
    {
      sub_2518D0AD0(result, v106, v107 & 1);
      swift_bridgeObjectRelease();
      uint64_t v57 = v157;
      uint64_t v53 = v160;
      unsigned int v127 = v108;
      goto LABEL_39;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_2518B88DC()
{
  uint64_t v0 = sub_25192BD10();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E80);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_25192C190();
  sub_25192CB90();
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_251823860((uint64_t)v3), (v9 & 1) != 0))
  {
    unint64_t v10 = v8;
    uint64_t v11 = *(void *)(v7 + 56);
    uint64_t v12 = sub_25192C970();
    uint64_t v13 = *(void *)(v12 - 8);
    (*(void (**)(unsigned char *, unint64_t, uint64_t))(v13 + 16))(v6, v11 + *(void *)(v13 + 72) * v10, v12);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
  }
  else
  {
    uint64_t v12 = sub_25192C970();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  sub_25192C970();
  uint64_t v14 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v6, 1, v12) == 1)
  {
    sub_2517E16E0((uint64_t)v6, &qword_269B53E80);
    return MEMORY[0x263F8EE88];
  }
  else
  {
    uint64_t v16 = sub_25192C960();
    uint64_t v18 = v17;
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v6, v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B54C80);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25192F930;
    *(void *)(inited + 32) = v16;
    *(void *)(inited + 40) = v18;
    uint64_t v15 = sub_2517F7470(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  return v15;
}

uint64_t sub_2518B8C18()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E80);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E88);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25192BD10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v26 = (char *)&v25 - v11;
  uint64_t v12 = sub_25192C190();
  sub_25192CB90();
  if (*(void *)(v12 + 16) && (unint64_t v13 = sub_251823860((uint64_t)v10), (v14 & 1) != 0))
  {
    unint64_t v15 = v13;
    uint64_t v25 = *(void *)(v12 + 56);
    uint64_t v16 = sub_25192C970();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v2, v25 + *(void *)(v17 + 72) * v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v2, 0, 1, v16);
  }
  else
  {
    uint64_t v16 = sub_25192C970();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v2, 1, 1, v16);
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v10, v6);
  sub_25192C970();
  uint64_t v19 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v2, 1, v16) == 1)
  {
    sub_2517E16E0((uint64_t)v2, &qword_269B53E80);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  else
  {
    sub_25192C950();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v2, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      uint64_t v21 = v26;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v26, v5, v6);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54C80);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_25192F930;
      *(void *)(inited + 32) = sub_25192BCD0();
      *(void *)(inited + 40) = v23;
      uint64_t v20 = sub_2517F7470(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      v18(v21, v6);
      return v20;
    }
  }
  sub_2517E16E0((uint64_t)v5, &qword_269B53E88);
  return MEMORY[0x263F8EE88];
}

uint64_t DeviceEntity.init(staticEndpoint:staticMatterDevice:snapshot:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v140 = a2;
  uint64_t v134 = a4;
  uint64_t v133 = sub_25192C890();
  uint64_t v132 = *(void *)(v133 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v133);
  uint64_t v136 = (char *)v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v131 = (char *)v118 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v130 = (char *)v118 - v10;
  uint64_t v123 = sub_25192BE00();
  uint64_t v122 = *(void *)(v123 - 8);
  MEMORY[0x270FA5388](v123);
  __int16 v121 = (char *)v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25192C0E0();
  MEMORY[0x270FA5388](v12 - 8);
  v118[1] = (char *)v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_25192C7F0();
  uint64_t v119 = *(void *)(v120 - 8);
  MEMORY[0x270FA5388](v120);
  v118[0] = (char *)v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56C10);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)v118 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_25192C9F0();
  uint64_t v128 = *(void *)(v135 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v135);
  uint64_t v124 = (char *)v118 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v125 = (char *)v118 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56BD0);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)v118 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_25192BD10();
  uint64_t v147 = *(void *)(v142 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v142);
  unsigned int v127 = (char *)v118 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)v118 - v26;
  uint64_t v28 = sub_25192BF20();
  uint64_t v137 = *(void *)(v28 - 8);
  uint64_t v138 = v28;
  MEMORY[0x270FA5388](v28);
  os_log_t v129 = (os_log_t)((char *)v118 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = sub_25192BC50();
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v32 = (char *)v118 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53B90);
  sub_25192BC30();
  uint64_t v141 = MEMORY[0x2533A4FB0](v32);
  sub_25192BA80();
  sub_25192BC30();
  uint64_t v33 = MEMORY[0x2533A4FB0](v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56BD8);
  uint64_t v146 = v33;
  sub_25192BA80();
  sub_25192BC30();
  unint64_t v34 = sub_2518B3E50();
  uint64_t v35 = MEMORY[0x2533A4F80](v32, v34);
  sub_25192BA80();
  sub_25192BC30();
  uint64_t v36 = MEMORY[0x2533A4FB0](v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56BE8);
  uint64_t v145 = v36;
  sub_25192BA80();
  sub_25192BC30();
  uint64_t v144 = MEMORY[0x2533A4FB0](v32);
  sub_25192BA80();
  sub_25192BC30();
  uint64_t v143 = MEMORY[0x2533A4FB0](v32);
  sub_25192BA80();
  uint64_t v139 = a3;
  uint64_t v37 = sub_25192C150();
  sub_25192C870();
  if (*(void *)(v37 + 16) && (unint64_t v38 = sub_251823860((uint64_t)v27), (v39 & 1) != 0))
  {
    uint64_t v41 = v137;
    uint64_t v40 = v138;
    (*(void (**)(char *, unint64_t, uint64_t))(v137 + 16))(v23, *(void *)(v37 + 56) + *(void *)(v137 + 72) * v38, v138);
    uint64_t v42 = 0;
  }
  else
  {
    uint64_t v42 = 1;
    uint64_t v41 = v137;
    uint64_t v40 = v138;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v23, v42, 1, v40);
  swift_bridgeObjectRelease();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v147 + 8);
  v147 += 8;
  uint64_t v126 = v43;
  v43(v27, v142);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v23, 1, v40) == 1)
  {
    swift_release();
    swift_release();
    uint64_t v138 = v35;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_2517E16E0((uint64_t)v23, &qword_269B56BD0);
    uint64_t v44 = a1;
  }
  else
  {
    os_log_t v45 = v129;
    (*(void (**)(os_log_t, char *, uint64_t))(v41 + 32))(v129, v23, v40);
    sub_25192C850();
    uint64_t v46 = v128;
    uint64_t v47 = v135;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48))(v17, 1, v135) != 1)
    {
      uint64_t v83 = v125;
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v125, v17, v47);
      uint64_t v84 = v124;
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v124, v83, v47);
      int v85 = (*(uint64_t (**)(char *, uint64_t))(v46 + 88))(v84, v47);
      int v86 = 15;
      if (v85 == *MEMORY[0x263F486A8])
      {
        uint64_t v44 = a1;
      }
      else
      {
        uint64_t v44 = a1;
        uint64_t v48 = v131;
        if (v85 != *MEMORY[0x263F486C8])
        {
          int v86 = 26;
          if (v85 != *MEMORY[0x263F486D0] && v85 != *MEMORY[0x263F486D8])
          {
            int v86 = 20;
            if (v85 != *MEMORY[0x263F486E0] && v85 != *MEMORY[0x263F486C0])
            {
              if (v85 != *MEMORY[0x263F486B8])
              {
                uint64_t v117 = *(void (**)(char *, uint64_t))(v46 + 8);
                v117(v124, v47);
                swift_release();
                swift_release();
                uint64_t v138 = v35;
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                v117(v125, v47);
                (*(void (**)(os_log_t, uint64_t))(v41 + 8))(v129, v40);
                goto LABEL_10;
              }
              int v86 = 21;
            }
          }
        }
      }
      LODWORD(v136) = v86;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54C80);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_25192F930;
      *(void *)(inited + 32) = sub_25192CB30();
      *(void *)(inited + 40) = v88;
      uint64_t v130 = (char *)sub_2517F7470(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_bridgeObjectRetain_n();
      uint64_t v89 = v141;
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      swift_bridgeObjectRetain();
      sub_25192C830();
      uint64_t v90 = v118[0];
      sub_25192C7D0();
      char v91 = v127;
      sub_25192C7E0();
      (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v90, v120);
      uint64_t v92 = sub_25192BCD0();
      uint64_t v94 = v93;
      v126(v91, v142);
      uint64_t v148 = v92;
      uint64_t v149 = v94;
      sub_25192B750();
      int64_t v95 = v130;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      LOWORD(v148) = (_WORD)v136;
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25192B750();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v131 = v44;
      uint64_t v148 = sub_25192C860();
      uint64_t v149 = v96;
      sub_25192B750();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v97 = v121;
      sub_25192C130();
      uint64_t v98 = sub_25192BDF0();
      uint64_t v100 = v99;
      uint64_t v101 = v97;
      uint64_t v102 = v95;
      (*(void (**)(char *, uint64_t))(v122 + 8))(v101, v123);
      uint64_t v148 = v98;
      uint64_t v149 = v100;
      sub_25192B750();
      swift_bridgeObjectRelease();
      uint64_t v103 = MEMORY[0x263F8EE88];
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      uint64_t v104 = v103;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      os_log_t v105 = v129;
      uint64_t v106 = sub_25192BEC0();
      if (v106)
      {
        uint64_t v107 = sub_2518B0A04(v106);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v107 = MEMORY[0x263F8EE78];
      }
      uint64_t v108 = sub_2517F25AC(v107);
      swift_bridgeObjectRelease();
      uint64_t v148 = v108;
      uint64_t v109 = v144;
      sub_25192B750();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v110 = v143;
      swift_release();
      swift_release();
      uint64_t v111 = v145;
      swift_release();
      swift_release();
      uint64_t v112 = v146;
      swift_release();
      swift_release();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v148 = sub_25192BF10();
      uint64_t v149 = v113;
      sub_25192B750();
      uint64_t v114 = sub_25192C1E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v114 - 8) + 8))(v139, v114);
      uint64_t v115 = sub_25192CB50();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v115 - 8) + 8))(v140, v115);
      (*(void (**)(char *, uint64_t))(v132 + 8))(v131, v133);
      (*(void (**)(char *, uint64_t))(v128 + 8))(v125, v135);
      (*(void (**)(os_log_t, uint64_t))(v137 + 8))(v105, v138);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      sub_25192BA80();
      swift_bridgeObjectRetain();
      swift_release_n();
      swift_release_n();
      swift_release_n();
      swift_release_n();
      swift_release_n();
      swift_release_n();
      char v116 = (void *)v134;
      *(void *)uint64_t v134 = v89;
      v116[1] = v112;
      v116[2] = v35;
      v116[3] = v111;
      v116[4] = v109;
      v116[5] = v110;
      v116[6] = v104;
      v116[7] = v102;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
    (*(void (**)(os_log_t, uint64_t))(v41 + 8))(v45, v40);
    swift_release();
    swift_release();
    uint64_t v138 = v35;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_2517E16E0((uint64_t)v17, &qword_269B56C10);
    uint64_t v44 = a1;
  }
  uint64_t v48 = v131;
LABEL_10:
  uint64_t v49 = v132;
  uint64_t v50 = v136;
  uint64_t v51 = v130;
  if (qword_269B53418 != -1) {
    swift_once();
  }
  uint64_t v52 = sub_25192D1D0();
  __swift_project_value_buffer(v52, (uint64_t)qword_269B5A090);
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
  uint64_t v54 = v133;
  v53(v51, v44, v133);
  v53(v48, v44, v54);
  v53(v50, v44, v54);
  uint64_t v55 = sub_25192D1B0();
  os_log_type_t v56 = sub_25192D4F0();
  int v57 = v56;
  if (os_log_type_enabled(v55, v56))
  {
    uint64_t v58 = swift_slowAlloc();
    uint64_t v137 = swift_slowAlloc();
    uint64_t v148 = v137;
    *(_DWORD *)uint64_t v58 = 136315650;
    uint64_t v131 = v44;
    sub_2518D6628(&qword_269B56C18, MEMORY[0x263F484E8]);
    os_log_t v129 = v55;
    uint64_t v59 = sub_25192D7F0();
    uint64_t v150 = sub_2517F0D04(v59, v60, &v148);
    sub_25192D580();
    swift_bridgeObjectRelease();
    LODWORD(v128) = v57;
    uint64_t v132 = *(void *)(v49 + 8);
    ((void (*)(char *, uint64_t))v132)(v51, v54);
    uint64_t v61 = v54;
    *(_WORD *)(v58 + 12) = 2080;
    uint64_t v62 = v127;
    sub_25192C870();
    sub_2518D6628(&qword_269B54750, MEMORY[0x263F07508]);
    uint64_t v63 = v142;
    uint64_t v64 = sub_25192D7F0();
    unint64_t v66 = v65;
    v126(v62, v63);
    uint64_t v150 = sub_2517F0D04(v64, v66, &v148);
    sub_25192D580();
    swift_bridgeObjectRelease();
    uint64_t v67 = v61;
    uint64_t v68 = v61;
    uint64_t v69 = (void (*)(char *, uint64_t))v132;
    ((void (*)(char *, uint64_t))v132)(v48, v68);
    *(_WORD *)(v58 + 22) = 2080;
    uint64_t v70 = v136;
    sub_25192C810();
    sub_2518D6628(&qword_269B56C20, MEMORY[0x263F486F0]);
    uint64_t v71 = sub_25192D4A0();
    unint64_t v73 = v72;
    swift_bridgeObjectRelease();
    uint64_t v150 = sub_2517F0D04(v71, v73, &v148);
    sub_25192D580();
    swift_bridgeObjectRelease();
    v69(v70, v67);
    os_log_t v74 = v129;
    _os_log_impl(&dword_2517D6000, v129, (os_log_type_t)v128, "Unable to create DeviceEntity for %s with roomID: %s deviceTypes: %s", (uint8_t *)v58, 0x20u);
    uint64_t v75 = v137;
    swift_arrayDestroy();
    MEMORY[0x2533A75D0](v75, -1, -1);
    MEMORY[0x2533A75D0](v58, -1, -1);

    uint64_t v76 = sub_25192C1E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v76 - 8) + 8))(v139, v76);
    uint64_t v77 = sub_25192CB50();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v77 - 8) + 8))(v140, v77);
    v69(v131, v67);
  }
  else
  {

    unint64_t v78 = *(void (**)(char *, uint64_t))(v49 + 8);
    v78(v50, v54);
    v78(v48, v54);
    v78(v51, v54);
    uint64_t v79 = sub_25192C1E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v139, v79);
    uint64_t v80 = sub_25192CB50();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v140, v80);
    v78(v44, v54);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  uint64_t v82 = (_OWORD *)v134;
  *(_OWORD *)(v134 + 32) = 0u;
  v82[3] = 0u;
  *uint64_t v82 = 0u;
  v82[1] = 0u;
  return result;
}

uint64_t DeviceEntity.init(staticCameraProfile:snapshot:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v120 = a2;
  uint64_t v108 = a3;
  uint64_t v103 = sub_25192BF20();
  uint64_t v102 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  uint64_t v99 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_25192C1E0();
  uint64_t v107 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  unsigned int v127 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_25192BF60();
  uint64_t v126 = *(void *)(v124 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v124);
  uint64_t v123 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v122 = (char *)&v97 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56BD0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v113 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E88);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v114 = (uint64_t)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_25192BE00();
  uint64_t v118 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v109 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_25192BD10();
  uint64_t v115 = *(void *)(v119 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v119);
  uint64_t v104 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v97 - v16;
  uint64_t v18 = sub_25192BC50();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53B90);
  sub_25192BC30();
  uint64_t v21 = MEMORY[0x2533A4FB0](v20);
  sub_25192BA80();
  sub_25192BC30();
  uint64_t v22 = MEMORY[0x2533A4FB0](v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56BD8);
  sub_25192BA80();
  sub_25192BC30();
  unint64_t v23 = sub_2518B3E50();
  uint64_t v24 = MEMORY[0x2533A4F80](v20, v23);
  sub_25192BA80();
  sub_25192BC30();
  uint64_t v25 = MEMORY[0x2533A4FB0](v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56BE8);
  sub_25192BA80();
  sub_25192BC30();
  uint64_t v26 = MEMORY[0x2533A4FB0](v20);
  sub_25192BA80();
  sub_25192BC30();
  uint64_t v27 = MEMORY[0x2533A4FB0](v20);
  swift_retain_n();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain_n();
  uint64_t v125 = a1;
  sub_25192CCF0();
  uint64_t v28 = sub_25192BCD0();
  uint64_t v30 = v29;
  uint64_t v31 = *(void (**)(char *, uint64_t))(v115 + 8);
  uint64_t v101 = v115 + 8;
  uint64_t v100 = v31;
  v31(v17, v119);
  uint64_t v128 = v28;
  uint64_t v129 = v30;
  uint64_t v32 = v26;
  sub_25192B750();
  swift_bridgeObjectRelease_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  LOWORD(v128) = 3;
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain_n();
  sub_25192B750();
  swift_bridgeObjectRelease_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain_n();
  uint64_t v128 = sub_25192CD00();
  uint64_t v129 = v33;
  sub_25192B750();
  swift_bridgeObjectRelease_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain_n();
  unint64_t v34 = v109;
  sub_25192C130();
  uint64_t v35 = sub_25192BDF0();
  uint64_t v37 = v36;
  uint64_t v98 = *(void (**)(char *, uint64_t))(v118 + 8);
  v118 += 8;
  v98(v34, v110);
  uint64_t v128 = v35;
  uint64_t v129 = v37;
  sub_25192B750();
  swift_bridgeObjectRelease_n();
  uint64_t v121 = v27;
  uint64_t v38 = v115;
  swift_release();
  swift_release();
  uint64_t v116 = v25;
  swift_release();
  swift_release();
  uint64_t v117 = v22;
  swift_release();
  swift_release();
  uint64_t v39 = sub_25192CD10();
  uint64_t v40 = v114;
  sub_2518B16BC(v39, v114);
  uint64_t v41 = v119;
  swift_bridgeObjectRelease();
  int v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v40, 1, v41);
  uint64_t v106 = v24;
  uint64_t v111 = v32;
  if (v42 == 1)
  {
    sub_2517E16E0(v40, &qword_269B53E88);
    uint64_t v43 = v107;
    uint64_t v44 = v127;
    os_log_t v45 = v108;
LABEL_23:
    uint64_t v128 = MEMORY[0x263F8EE88];
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    swift_bridgeObjectRetain_n();
    sub_25192B750();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
LABEL_24:
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    uint64_t v77 = MEMORY[0x263F8EE88];
    swift_bridgeObjectRetain_n();
    uint64_t v78 = sub_25192CD20();
    uint64_t v80 = v79;
    uint64_t v81 = v120;
    uint64_t v82 = v105;
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v44, v120, v105);
    if (!v80)
    {
      uint64_t v83 = v109;
      sub_25192C130();
      uint64_t v84 = v21;
      int v85 = v99;
      sub_25192BDC0();
      v98(v83, v110);
      uint64_t v78 = sub_25192BF10();
      uint64_t v80 = v86;
      int64_t v87 = v85;
      uint64_t v21 = v84;
      uint64_t v81 = v120;
      (*(void (**)(char *, uint64_t))(v102 + 8))(v87, v103);
    }
    uint64_t v88 = v44;
    uint64_t v89 = *(void (**)(char *, uint64_t))(v43 + 8);
    v89(v88, v82);
    uint64_t v128 = v78;
    uint64_t v129 = v80;
    uint64_t v90 = v121;
    sub_25192B750();
    v89(v81, v82);
    uint64_t v91 = sub_25192CD30();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v91 - 8) + 8))(v125, v91);
    swift_bridgeObjectRelease_n();
    swift_release_n();
    uint64_t v92 = v111;
    swift_release_n();
    uint64_t v93 = v116;
    swift_release_n();
    uint64_t v94 = v106;
    swift_release_n();
    uint64_t v95 = v117;
    swift_release_n();
    uint64_t result = swift_release_n();
    *os_log_t v45 = v21;
    v45[1] = v95;
    v45[2] = v94;
    v45[3] = v93;
    v45[4] = v92;
    v45[5] = v90;
    v45[6] = v77;
    v45[7] = v77;
    return result;
  }
  uint64_t v46 = (uint64_t)v104;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v104, v40, v41);
  uint64_t v47 = sub_25192C150();
  uint64_t v43 = v107;
  os_log_t v45 = v108;
  if (*(void *)(v47 + 16) && (unint64_t v48 = sub_251823860(v46), (v49 & 1) != 0))
  {
    uint64_t v50 = v102;
    uint64_t v51 = v103;
    (*(void (**)(char *, unint64_t, uint64_t))(v102 + 16))(v113, *(void *)(v47 + 56) + *(void *)(v102 + 72) * v48, v103);
    uint64_t v52 = 0;
    uint64_t v44 = v127;
  }
  else
  {
    uint64_t v52 = 1;
    uint64_t v50 = v102;
    uint64_t v44 = v127;
    uint64_t v51 = v103;
  }
  uint64_t v53 = (uint64_t)v113;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v113, v52, 1, v51);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v53, 1, v51) == 1)
  {
    sub_2517E16E0(v53, &qword_269B56BD0);
LABEL_22:
    v100(v104, v119);
    goto LABEL_23;
  }
  uint64_t v54 = sub_25192BEC0();
  uint64_t v55 = v53;
  uint64_t v56 = v54;
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v55, v51);
  if (!v56) {
    goto LABEL_22;
  }
  int64_t v57 = *(void *)(v56 + 16);
  if (!v57)
  {
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
    uint64_t v71 = MEMORY[0x263F8EE78];
LABEL_28:
    uint64_t v96 = sub_2517F25AC(v71);
    swift_bridgeObjectRelease();
    uint64_t v128 = v96;
    sub_25192B750();
    v100(v104, v119);
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_24;
  }
  uint64_t v128 = MEMORY[0x263F8EE78];
  uint64_t v97 = v21;
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain_n();
  sub_2518C3840(0, v57, 0);
  uint64_t result = sub_2518CFFE4(v56);
  int64_t v59 = result;
  int v61 = v60;
  char v63 = v62 & 1;
  uint64_t v114 = v126 + 16;
  uint64_t v115 = v56 + 56;
  uint64_t v112 = v126 + 8;
  uint64_t v113 = (char *)(v126 + 32);
  while ((v59 & 0x8000000000000000) == 0 && v59 < 1 << *(unsigned char *)(v56 + 32))
  {
    if (((*(void *)(v115 + (((unint64_t)v59 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v59) & 1) == 0) {
      goto LABEL_30;
    }
    if (*(_DWORD *)(v56 + 36) != v61) {
      goto LABEL_31;
    }
    uint64_t v64 = v126;
    unint64_t v65 = v122;
    uint64_t v66 = v124;
    (*(void (**)(char *, int64_t, uint64_t))(v126 + 16))(v122, *(void *)(v56 + 48) + *(void *)(v126 + 72) * v59, v124);
    uint64_t v67 = v123;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v123, v65, v66);
    uint64_t v68 = sub_25192BF40();
    uint64_t v70 = v69;
    (*(void (**)(char *, uint64_t))(v64 + 8))(v67, v66);
    uint64_t v71 = v128;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2518C3840(0, *(void *)(v71 + 16) + 1, 1);
      uint64_t v71 = v128;
    }
    unint64_t v73 = *(void *)(v71 + 16);
    unint64_t v72 = *(void *)(v71 + 24);
    if (v73 >= v72 >> 1)
    {
      sub_2518C3840(v72 > 1, v73 + 1, 1);
      uint64_t v71 = v128;
    }
    *(void *)(v71 + 16) = v73 + 1;
    uint64_t v74 = v71 + 16 * v73;
    *(void *)(v74 + 32) = v68;
    *(void *)(v74 + 40) = v70;
    uint64_t result = sub_2518D0084(v59, v61, v63 & 1, v56);
    int64_t v59 = result;
    int v61 = v75;
    char v63 = v76 & 1;
    --v57;
    uint64_t v44 = v127;
    if (!v57)
    {
      sub_2518D0AD0(result, v75, v76 & 1);
      swift_bridgeObjectRelease();
      os_log_t v45 = v108;
      uint64_t v43 = v107;
      uint64_t v21 = v97;
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_2518BB734@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_25192B740();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_2518BB770@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B531A0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25192BA40();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269B56B88);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_2518BB830(uint64_t a1)
{
  unint64_t v2 = sub_2517E4C50();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518BB880(uint64_t a1)
{
  unint64_t v2 = sub_2518D53FC();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518BB8CC(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v3 + 4;
          if (v3 + 4 >= v30) {
            return 1;
          }
          unint64_t v11 = *(void *)(v29 + 8 * v12);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    uint64_t v14 = result;
    uint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_25192D8D0();
    swift_bridgeObjectRetain();
    sub_25192D300();
    uint64_t v18 = sub_25192D920();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    uint64_t v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_25192D810() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_25192D810() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 5;
  if (v3 + 5 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_25;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t DeviceEntity.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 56);
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25192D300();
  swift_bridgeObjectRelease();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25192D300();
  swift_bridgeObjectRelease();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  DeviceType.hash(into:)();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25192D300();
  swift_bridgeObjectRelease();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25192D300();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2518CFE4C(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t DeviceEntity.hashValue.getter()
{
  long long v1 = v0[1];
  long long v5 = *v0;
  long long v6 = v1;
  long long v2 = v0[3];
  long long v7 = v0[2];
  long long v8 = v2;
  sub_25192D8D0();
  DeviceEntity.hash(into:)((uint64_t)v4);
  return sub_25192D920();
}

uint64_t sub_2518BBF6C()
{
  long long v1 = v0[1];
  long long v5 = *v0;
  long long v6 = v1;
  long long v2 = v0[3];
  long long v7 = v0[2];
  long long v8 = v2;
  sub_25192D8D0();
  DeviceEntity.hash(into:)((uint64_t)v4);
  return sub_25192D920();
}

uint64_t sub_2518BBFC4()
{
  long long v1 = v0[1];
  long long v5 = *v0;
  long long v6 = v1;
  long long v2 = v0[3];
  long long v7 = v0[2];
  long long v8 = v2;
  sub_25192D8D0();
  DeviceEntity.hash(into:)((uint64_t)v4);
  return sub_25192D920();
}

uint64_t sub_2518BC014@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_25192BD10();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25192BC50();
  MEMORY[0x270FA5388](v5 - 8);
  long long v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53B90);
  sub_25192BC30();
  uint64_t v8 = MEMORY[0x2533A4FB0](v7);
  sub_25192BA80();
  sub_25192BC30();
  uint64_t v9 = MEMORY[0x2533A4FB0](v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56BD8);
  sub_25192BA80();
  sub_25192BC30();
  unint64_t v10 = sub_2518B3E50();
  uint64_t v11 = MEMORY[0x2533A4F80](v7, v10);
  sub_25192BA80();
  sub_25192BC30();
  uint64_t v12 = MEMORY[0x2533A4FB0](v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56BE8);
  sub_25192BA80();
  sub_25192BC30();
  uint64_t v13 = MEMORY[0x2533A4FB0](v7);
  sub_25192BA80();
  sub_25192BC30();
  uint64_t v14 = MEMORY[0x2533A4FB0](v7);
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v15 = v4;
  sub_25192B600();
  uint64_t v16 = sub_25192BCD0();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v22);
  uint64_t v23 = v16;
  uint64_t v24 = v18;
  sub_25192B750();
  uint64_t v19 = MEMORY[0x263F8EE88];
  swift_bridgeObjectRelease_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v8;
  a1[1] = v9;
  a1[2] = v11;
  a1[3] = v12;
  a1[4] = v13;
  a1[5] = v14;
  a1[6] = v19;
  a1[7] = v19;
  return result;
}

uint64_t sub_2518BC358()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56C28);
  __swift_allocate_value_buffer(v0, qword_269B56BA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_269B56BA0);
  sub_2517E4C50();
  return sub_25192B9D0();
}

uint64_t sub_2518BC3D4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56FD8);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v12 - v5;
  swift_getKeyPath();
  sub_2517E4C50();
  sub_2517E2990(&qword_269B53F58, &qword_269B53B90);
  sub_25192BAF0();
  sub_25192BB10();
  long long v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56FE0);
  unint64_t v8 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_25192F930;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v9 + v8, v6, v0);
  uint64_t v10 = sub_25192BB00();
  swift_bridgeObjectRelease();
  v7(v6, v0);
  return v10;
}

uint64_t sub_2518BC5D4@<X0>(uint64_t *a1@<X8>)
{
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_25192B760();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t static DeviceEntityQuery.sortingOptions.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E7700(&qword_269B531A8, &qword_269B56C28, (uint64_t)qword_269B56BA0, a1);
}

uint64_t static DeviceEntityQuery.sortingOptions.setter(uint64_t a1)
{
  return sub_2517E77D8(a1, &qword_269B531A8, &qword_269B56C28, (uint64_t)qword_269B56BA0);
}

uint64_t (*static DeviceEntityQuery.sortingOptions.modify())()
{
  if (qword_269B531A8 != -1) {
    swift_once();
  }
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56C28);
  __swift_project_value_buffer(v0, (uint64_t)qword_269B56BA0);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_2518BC7A0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56C30);
  __swift_allocate_value_buffer(v0, qword_269B56BB8);
  __swift_project_value_buffer(v0, (uint64_t)qword_269B56BB8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54EC8);
  sub_2517E4C50();
  return sub_25192B960();
}

uint64_t sub_2518BC830()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56D80);
  swift_getKeyPath();
  sub_25192B8C0();
  sub_2517E4C50();
  uint64_t v0 = sub_25192BA80();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56D88);
  swift_getKeyPath();
  sub_25192BA80();
  sub_25192B8C0();
  uint64_t v1 = sub_25192BA80();
  swift_release();
  swift_getKeyPath();
  sub_25192BA80();
  sub_25192B8C0();
  uint64_t v2 = sub_25192BA80();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56D90);
  swift_getKeyPath();
  sub_25192BA80();
  sub_25192B8C0();
  uint64_t v3 = sub_25192BA80();
  swift_release();
  swift_getKeyPath();
  sub_25192BA80();
  sub_25192B8C0();
  uint64_t v4 = sub_25192BA80();
  swift_release();
  swift_getKeyPath();
  sub_25192BA80();
  sub_25192B8C0();
  uint64_t v5 = sub_25192BA80();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53ED0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_25193B6F0;
  *(void *)(v6 + 32) = v0;
  *(void *)(v6 + 40) = v1;
  *(void *)(v6 + 48) = v2;
  *(void *)(v6 + 56) = v3;
  *(void *)(v6 + 64) = v4;
  *(void *)(v6 + 72) = v5;
  sub_25192D3C0();
  sub_25192BA80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54EC8);
  uint64_t v7 = sub_25192BA70();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v7;
}

uint64_t sub_2518BCB34()
{
  return sub_2518BF01C();
}

uint64_t sub_2518BCB4C()
{
  return sub_2518BF234();
}

uint64_t sub_2518BCB64@<X0>(void *a1@<X8>)
{
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_2518BCC4C()
{
  return swift_release();
}

uint64_t sub_2518BCD2C@<X0>(uint64_t *a1@<X8>)
{
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_25192B760();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_2518BCE08()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56F18);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56F20);
  swift_allocObject();
  sub_25192B8A0();
  sub_2517E4C50();
  sub_25192BAE0();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56F28);
  unint64_t v4 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_25192F930;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v5 + v4, v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56BD8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54EC8);
  sub_251892648();
  uint64_t v6 = sub_25192BAD0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

uint64_t sub_2518BD010()
{
  return sub_25192BDA0();
}

uint64_t sub_2518BD064@<X0>(int a1@<W1>, uint64_t *a2@<X8>)
{
  int v18 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56DC0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56F30);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56F38);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v19 = v11;
  uint64_t v20 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v17[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2517E2990(&qword_269B56DD8, &qword_269B56DC0);
  sub_25192BBB0();
  swift_getKeyPath();
  sub_25192BB60();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  swift_getKeyPath();
  sub_2517E2990(&qword_269B56F40, &qword_269B56F30);
  sub_25192BB60();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  __int16 v21 = v18;
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56F48);
  a2[4] = sub_2518D6330();
  __swift_allocate_boxed_opaque_existential_1(a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56F70);
  sub_2517E2990(&qword_269B56FA8, &qword_269B56F38);
  sub_2517E2990(&qword_269B56FB0, &qword_269B56F70);
  sub_2517E2990(&qword_269B56FB8, &qword_269B56FC0);
  uint64_t v15 = v19;
  sub_25192BB70();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v20 + 8))(v14, v15);
}

uint64_t sub_2518BD428@<X0>(_WORD *a1@<X8>)
{
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_2518BD510()
{
  return swift_release();
}

uint64_t sub_2518BD5EC@<X0>(__int16 a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v12 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56F90);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56F80);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2517E2990(&qword_269B56FC8, &qword_269B56F80);
  sub_25192BBB0();
  __int16 v13 = a1;
  sub_25192BBA0();
  sub_2517E2990(&qword_269B56FD0, &qword_269B56F90);
  sub_25189A464();
  sub_25192BB40();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_2518BD810@<X0>(uint64_t *a1@<X8>)
{
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_25192B760();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_2518BD8EC()
{
  return sub_2518BF01C();
}

uint64_t sub_2518BD904()
{
  return sub_2518BF234();
}

uint64_t sub_2518BD91C@<X0>(void *a1@<X8>)
{
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_2518BDA04()
{
  return swift_release();
}

uint64_t sub_2518BDAE4@<X0>(uint64_t *a1@<X8>)
{
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_25192B760();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_2518BDBC0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56E48);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56E50);
  swift_allocObject();
  sub_25192B8A0();
  sub_2517E4C50();
  sub_25192BAE0();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56E58);
  unint64_t v4 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_25192F930;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v5 + v4, v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56BE8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56DF8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54EC8);
  sub_2518D5EF0(&qword_269B56E60, &qword_269B56DF8, (void (*)(void))sub_2517F7C18);
  uint64_t v6 = sub_25192BAD0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

uint64_t sub_2518BDE14()
{
  return sub_25192BDA0();
}

uint64_t sub_2518BDE68@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v35 = a1;
  int v42 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56E68);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  uint64_t v41 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v39 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56E70);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  uint64_t v44 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v38 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56DC0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56DB0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56E78);
  uint64_t v16 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  int v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56E80);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v36 = v19;
  uint64_t v37 = v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v33 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2517E2990(&qword_269B56DD8, &qword_269B56DC0);
  sub_25192BBB0();
  swift_getKeyPath();
  sub_25192BB60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v22 = v35;
  uint64_t v45 = v35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56E88);
  sub_2517E2990(&qword_269B56DE8, &qword_269B56DB0);
  sub_2517E2990(&qword_269B56E90, &qword_269B56E88);
  sub_2517E2990(&qword_269B56DF0, &qword_269B56DF8);
  sub_25192BB50();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  swift_getKeyPath();
  sub_2517E2990(&qword_269B56E98, &qword_269B56E78);
  uint64_t v24 = v33;
  uint64_t v23 = v34;
  sub_25192BB60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v23);
  uint64_t v46 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56DF8);
  uint64_t v25 = v39;
  sub_25192BBA0();
  swift_getKeyPath();
  sub_2517E2990(&qword_269B56EA0, &qword_269B56E68);
  uint64_t v26 = v38;
  uint64_t v27 = v40;
  sub_25192BB60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v25, v27);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56EA8);
  uint64_t v29 = v42;
  v42[3] = v28;
  v29[4] = sub_2518D5F88();
  __swift_allocate_boxed_opaque_existential_1(v29);
  sub_2517E2990(&qword_269B56F00, &qword_269B56E80);
  sub_2517E2990(&qword_269B56F08, &qword_269B56E70);
  uint64_t v30 = v36;
  uint64_t v31 = v43;
  sub_25192BB40();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v26, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v24, v30);
}

uint64_t sub_2518BE4F0@<X0>(void *a1@<X8>)
{
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_2518BE5D8()
{
  return swift_release();
}

uint64_t sub_2518BE6B8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  v12[0] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56EF0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56E68);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[1] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56DF8);
  sub_25192BBA0();
  sub_2517E2990(&qword_269B56F10, &qword_269B56EF0);
  sub_25192BBB0();
  sub_2517E2990(&qword_269B56EA0, &qword_269B56E68);
  sub_2517E2990(&qword_269B56DF0, &qword_269B56DF8);
  sub_25192BB80();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_2518BE910@<X0>(uint64_t *a1@<X8>)
{
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_25192B760();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_2518BE9EC()
{
  return sub_2518BF01C();
}

uint64_t sub_2518BEA04()
{
  return sub_2518BF234();
}

uint64_t sub_2518BEA1C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  v19[1] = a3;
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53EF8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  uint64_t v23 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56DC0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56DC8);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2517E2990(&qword_269B56DD8, &qword_269B56DC0);
  sub_25192BBB0();
  swift_getKeyPath();
  sub_25192BB60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v24 = v20;
  uint64_t v25 = v21;
  sub_25192BBA0();
  a4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56DD0);
  a4[4] = sub_2518D5D20();
  __swift_allocate_boxed_opaque_existential_1(a4);
  sub_2517E2990(&qword_269B56DE0, &qword_269B56DC8);
  sub_2517E2990(&qword_269B53F48, &qword_269B53EF8);
  uint64_t v17 = v22;
  sub_25192BB40();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_2518BED60@<X0>(void *a1@<X8>)
{
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_2518BEE48()
{
  return swift_release();
}

uint64_t sub_2518BEF28@<X0>(uint64_t *a1@<X8>)
{
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_25192B760();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_2518BF004()
{
  return sub_2518BF01C();
}

uint64_t sub_2518BF01C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56D98);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56DA0);
  swift_allocObject();
  sub_25192B8A0();
  sub_2517E4C50();
  sub_25192BAE0();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56DA8);
  unint64_t v4 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_25192F930;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v5 + v4, v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53B90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B54EC8);
  sub_2517F7C18();
  uint64_t v6 = sub_25192BAD0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

uint64_t sub_2518BF21C()
{
  return sub_2518BF234();
}

uint64_t sub_2518BF234()
{
  return sub_25192BDA0();
}

uint64_t sub_2518BF27C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(char *, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v48 = a5;
  uint64_t v44 = a4;
  uint64_t v56 = a3;
  uint64_t v39 = a2;
  uint64_t v53 = a6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56DB0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  uint64_t v52 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v46 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56DB8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v54 = v11;
  uint64_t v55 = v12;
  MEMORY[0x270FA5388](v11);
  char v49 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53EF8);
  uint64_t v57 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v15 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56DC0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56DC8);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v41 = v20;
  uint64_t v42 = v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56DD0);
  uint64_t v50 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v43 = (char *)v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = *a1;
  sub_2517E2990(&qword_269B56DD8, &qword_269B56DC0);
  sub_25192BBB0();
  swift_getKeyPath();
  sub_25192BB60();
  swift_release();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v17 + 8);
  v38[1] = v17 + 8;
  uint64_t v44 = v25;
  v25(v19, v16);
  uint64_t v58 = a2;
  uint64_t v59 = v56;
  sub_25192BBA0();
  sub_2517E2990(&qword_269B56DE0, &qword_269B56DC8);
  v38[0] = sub_2517E2990(&qword_269B53F48, &qword_269B53EF8);
  uint64_t v26 = v41;
  uint64_t v27 = v45;
  sub_25192BB40();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v57 + 8);
  v57 += 8;
  v28(v15, v27);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v23, v26);
  sub_25192BBB0();
  swift_getKeyPath();
  uint64_t v29 = v46;
  sub_25192BB60();
  swift_release();
  v44(v19, v16);
  uint64_t v58 = v39;
  uint64_t v59 = v56;
  sub_25192BBA0();
  sub_2517E2990(&qword_269B56DE8, &qword_269B56DB0);
  sub_2517E2990(&qword_269B56DF0, &qword_269B56DF8);
  uint64_t v30 = v49;
  uint64_t v31 = v51;
  sub_25192BB80();
  v28(v15, v27);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v29, v31);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56E00);
  uint64_t v33 = v53;
  v53[3] = v32;
  v33[4] = sub_2518D5C6C();
  __swift_allocate_boxed_opaque_existential_1(v33);
  sub_2517E2990(&qword_269B56E38, &qword_269B56DD0);
  sub_2517E2990(&qword_269B56E40, &qword_269B56DB8);
  uint64_t v34 = v43;
  uint64_t v35 = v47;
  uint64_t v36 = v54;
  sub_25192BB90();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v30, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v34, v35);
}

uint64_t static DeviceEntityQuery.properties.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E7700(&qword_269B531B0, &qword_269B56C30, (uint64_t)qword_269B56BB8, a1);
}

uint64_t static DeviceEntityQuery.properties.setter(uint64_t a1)
{
  return sub_2517E77D8(a1, &qword_269B531B0, &qword_269B56C30, (uint64_t)qword_269B56BB8);
}

uint64_t (*static DeviceEntityQuery.properties.modify())()
{
  if (qword_269B531B0 != -1) {
    swift_once();
  }
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56C30);
  __swift_project_value_buffer(v0, (uint64_t)qword_269B56BB8);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t DeviceEntityQuery.entities(for:)(uint64_t a1)
{
  v1[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BE0);
  v1[6] = swift_task_alloc();
  uint64_t v2 = sub_25192CCD0();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0);
  v1[10] = swift_task_alloc();
  uint64_t v3 = sub_25192D120();
  v1[11] = v3;
  v1[12] = *(void *)(v3 - 8);
  v1[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2518BFBC4, 0, 0);
}

uint64_t sub_2518BFBC4()
{
  uint64_t v30 = v0;
  if (qword_269B53418 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_25192D1D0();
  v0[14] = __swift_project_value_buffer(v1, (uint64_t)qword_269B5A090);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_25192D1B0();
  os_log_type_t v3 = sub_25192D510();
  if (os_log_type_enabled(v2, v3))
  {
    unint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v29 = v5;
    *(_DWORD *)unint64_t v4 = 136315138;
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = MEMORY[0x2533A6BA0](v6, MEMORY[0x263F8D310]);
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    v0[4] = sub_2517F0D04(v7, v9, &v29);
    sub_25192D580();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2517D6000, v2, v3, "Searching for devices with identifiers: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533A75D0](v5, -1, -1);
    MEMORY[0x2533A75D0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (qword_269B53420 != -1) {
    swift_once();
  }
  uint64_t v11 = v0[12];
  uint64_t v10 = v0[13];
  uint64_t v13 = v0[10];
  uint64_t v12 = v0[11];
  uint64_t v14 = v0[5];
  uint64_t v15 = sub_25192D150();
  uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)qword_269B5A0A8);
  v0[15] = v16;
  sub_25192D110();
  swift_bridgeObjectRetain();
  v0[16] = sub_251925EB8(1, v10, v16, v14);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  uint64_t v17 = type metadata accessor for HomeEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v13, 1, 1, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB8);
  uint64_t v18 = sub_25192C1D0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 72);
  unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_25192DEA0;
  unint64_t v23 = v22 + v21;
  uint64_t v24 = *(void (**)(unint64_t, void, uint64_t))(v19 + 104);
  v24(v23, *MEMORY[0x263F48398], v18);
  v24(v23 + v20, *MEMORY[0x263F483A0], v18);
  uint64_t v25 = sub_2517F1A08(v22);
  v0[17] = v25;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v26 = (void *)swift_task_alloc();
  v0[18] = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_2518C000C;
  uint64_t v27 = v0[10];
  return sub_251819E74(v27, v25, 1);
}

uint64_t sub_2518C000C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  *(void *)(*(void *)v1 + 152) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_2517E16E0(v2, &qword_269B53BB0);
  return MEMORY[0x270FA2498](sub_2518C0150, 0, 0);
}

uint64_t sub_2518C0150()
{
  char v49 = v0;
  uint64_t v1 = v0[19];
  uint64_t v47 = MEMORY[0x263F8EE78];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[8];
    uint64_t type = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BD8);
    uint64_t v4 = v1
       + ((*(unsigned __int8 *)(*(void *)(type - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(type - 8) + 80));
    uint64_t v42 = *(void *)(*(void *)(type - 8) + 72);
    uint64_t v40 = (void (**)(uint64_t, void, uint64_t))(v3 + 32);
    uint64_t v41 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    uint64_t v39 = (void (**)(uint64_t, uint64_t))(v3 + 8);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v8 = v0[6];
      uint64_t v44 = v4 + *(int *)(type + 48);
      uint64_t v46 = v0[7];
      uint64_t v9 = sub_25192C170();
      uint64_t v10 = sub_25184708C(v9);
      uint64_t v11 = swift_task_alloc();
      *(void *)(v11 + 16) = v4;
      uint64_t v12 = sub_2517E93D8((void (*)(_OWORD *__return_ptr, char *))sub_2518D4288, v11, v10);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      uint64_t v13 = sub_25192C1A0();
      uint64_t v14 = sub_2518CD9F4(v13);
      uint64_t v15 = swift_task_alloc();
      *(void *)(v15 + 16) = v4;
      uint64_t v16 = sub_2517EAC2C((void (*)(_OWORD *__return_ptr, char *))sub_2518D66A0, v15, v14);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      uint64_t v17 = sub_25192C1C0();
      uint64_t v18 = sub_2518CDD14(v17);
      uint64_t v19 = swift_task_alloc();
      *(void *)(v19 + 16) = v4;
      uint64_t v20 = sub_2517EAC58((void (*)(_OWORD *__return_ptr, char *))sub_2518D66B8, v19, v18);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      v48[0] = v12;
      sub_2517F0970(v16);
      sub_2517F0970(v20);
      sub_2517E079C(v44, v8, &qword_269B53BE0);
      if ((*v41)(v8, 1, v46) == 1)
      {
        sub_2517E16E0(v0[6], &qword_269B53BE0);
        uint64_t v5 = MEMORY[0x263F8EE78];
      }
      else
      {
        uint64_t v21 = v0[9];
        uint64_t v22 = v0[7];
        (*v40)(v21, v0[6], v22);
        uint64_t v23 = sub_25192CC90();
        uint64_t v24 = (void *)swift_task_alloc();
        v24[2] = 0;
        v24[3] = 0;
        v24[4] = v4;
        uint64_t v5 = sub_2518B13A8((void (*)(uint64_t *__return_ptr, char *))sub_2518D42A4, (uint64_t)v24, v23);
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        (*v39)(v21, v22);
      }
      uint64_t v6 = (void *)v0[5];
      v48[0] = v12;
      sub_2517F0970(v5);
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_2518D1470(v12, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2517F0970(v7);
      v4 += v42;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
    uint64_t v25 = v47;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = MEMORY[0x263F8EE78];
  }
  sub_251922D1C(1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v26 = sub_25192D1B0();
  os_log_type_t v27 = sub_25192D510();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    v48[0] = v45;
    *(_DWORD *)uint64_t v28 = 136315394;
    uint64_t v29 = swift_bridgeObjectRetain();
    uint64_t v30 = MEMORY[0x2533A6BA0](v29, &type metadata for DeviceEntity);
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    v0[2] = sub_2517F0D04(v30, v32, v48);
    sub_25192D580();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v28 + 12) = 2080;
    uint64_t v33 = swift_bridgeObjectRetain();
    uint64_t v34 = MEMORY[0x2533A6BA0](v33, MEMORY[0x263F8D310]);
    unint64_t v36 = v35;
    swift_bridgeObjectRelease();
    v0[3] = sub_2517F0D04(v34, v36, v48);
    sub_25192D580();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2517D6000, v26, v27, "Found deviceEntities: %s for identifiers: %s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533A75D0](v45, -1, -1);
    MEMORY[0x2533A75D0](v28, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v37 = (uint64_t (*)(uint64_t))v0[1];
  return v37(v25);
}

uint64_t DeviceEntityQuery.entities(matching:)(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BE0);
  v2[7] = swift_task_alloc();
  uint64_t v3 = sub_25192CCD0();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0);
  v2[11] = swift_task_alloc();
  uint64_t v4 = sub_25192D120();
  v2[12] = v4;
  v2[13] = *(void *)(v4 - 8);
  v2[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2518C08B0, 0, 0);
}

uint64_t sub_2518C08B0()
{
  uint64_t v30 = v0;
  if (qword_269B53418 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_25192D1D0();
  v0[15] = __swift_project_value_buffer(v1, (uint64_t)qword_269B5A090);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_25192D1B0();
  os_log_type_t v3 = sub_25192D510();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[6];
  if (v4)
  {
    uint64_t v6 = v0[5];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v29 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[4] = sub_2517F0D04(v6, v5, &v29);
    sub_25192D580();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2517D6000, v2, v3, "Searching for devices with string: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533A75D0](v8, -1, -1);
    MEMORY[0x2533A75D0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (qword_269B53420 != -1) {
    swift_once();
  }
  uint64_t v10 = v0[13];
  uint64_t v9 = v0[14];
  uint64_t v12 = v0[11];
  uint64_t v11 = v0[12];
  uint64_t v14 = v0[5];
  uint64_t v13 = v0[6];
  uint64_t v15 = sub_25192D150();
  uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)qword_269B5A0A8);
  v0[16] = v16;
  sub_25192D110();
  swift_bridgeObjectRetain();
  v0[17] = sub_251923B9C(1, v9, v16, v14, v13);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  uint64_t v17 = type metadata accessor for HomeEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v12, 1, 1, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB8);
  uint64_t v18 = sub_25192C1D0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 72);
  unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_25192DEA0;
  unint64_t v23 = v22 + v21;
  uint64_t v24 = *(void (**)(unint64_t, void, uint64_t))(v19 + 104);
  v24(v23, *MEMORY[0x263F48398], v18);
  v24(v23 + v20, *MEMORY[0x263F483A0], v18);
  uint64_t v25 = sub_2517F1A08(v22);
  v0[18] = v25;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v26 = (void *)swift_task_alloc();
  v0[19] = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_2518C0CD8;
  uint64_t v27 = v0[11];
  return sub_251819E74(v27, v25, 1);
}

uint64_t sub_2518C0CD8(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 88);
  *(void *)(*(void *)v1 + 160) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_2517E16E0(v2, &qword_269B53BB0);
  return MEMORY[0x270FA2498](sub_2518C0E1C, 0, 0);
}

uint64_t sub_2518C0E1C()
{
  uint64_t v50 = v0;
  uint64_t v1 = v0[20];
  uint64_t v48 = MEMORY[0x263F8EE78];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[9];
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BD8);
    uint64_t v4 = v1
       + ((*(unsigned __int8 *)(*(void *)(v44 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v44 - 8) + 80));
    uint64_t v43 = *(void *)(*(void *)(v44 - 8) + 72);
    uint64_t v41 = (void (**)(uint64_t, void, uint64_t))(v3 + 32);
    uint64_t v42 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    uint64_t v40 = (void (**)(uint64_t, uint64_t))(v3 + 8);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v9 = v0[7];
      uint64_t v45 = v4 + *(int *)(v44 + 48);
      uint64_t v47 = v0[8];
      uint64_t v10 = sub_25192C170();
      uint64_t v11 = sub_25184708C(v10);
      uint64_t v12 = swift_task_alloc();
      *(void *)(v12 + 16) = v4;
      uint64_t v13 = sub_2517E93D8((void (*)(_OWORD *__return_ptr, char *))sub_2518D6688, v12, v11);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      uint64_t v14 = sub_25192C1A0();
      uint64_t v15 = sub_2518CD9F4(v14);
      uint64_t v16 = swift_task_alloc();
      *(void *)(v16 + 16) = v4;
      uint64_t v17 = sub_2517EAC2C((void (*)(_OWORD *__return_ptr, char *))sub_2518D66A0, v16, v15);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      uint64_t v18 = sub_25192C1C0();
      uint64_t v19 = sub_2518CDD14(v18);
      uint64_t v20 = swift_task_alloc();
      *(void *)(v20 + 16) = v4;
      uint64_t v21 = sub_2517EAC58((void (*)(_OWORD *__return_ptr, char *))sub_2518D66B8, v20, v19);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      v49[0] = v13;
      sub_2517F0970(v17);
      sub_2517F0970(v21);
      sub_2517E079C(v45, v9, &qword_269B53BE0);
      if ((*v42)(v9, 1, v47) == 1)
      {
        sub_2517E16E0(v0[7], &qword_269B53BE0);
        uint64_t v5 = MEMORY[0x263F8EE78];
      }
      else
      {
        uint64_t v22 = v0[10];
        uint64_t v23 = v0[8];
        (*v41)(v22, v0[7], v23);
        uint64_t v24 = sub_25192CC90();
        uint64_t v25 = (void *)swift_task_alloc();
        v25[2] = 0;
        v25[3] = 0;
        v25[4] = v4;
        uint64_t v5 = sub_2518B13A8((void (*)(uint64_t *__return_ptr, char *))sub_2518D6670, (uint64_t)v25, v24);
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        (*v40)(v22, v23);
      }
      uint64_t v6 = v0[5];
      uint64_t v7 = v0[6];
      v49[0] = v13;
      sub_2517F0970(v5);
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_2518D17D0(v13, v6, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2517F0970(v8);
      v4 += v43;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
    uint64_t v26 = v48;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = MEMORY[0x263F8EE78];
  }
  sub_251922D1C(1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v27 = sub_25192D1B0();
  os_log_type_t v28 = sub_25192D510();
  BOOL v29 = os_log_type_enabled(v27, v28);
  unint64_t v30 = v0[6];
  if (v29)
  {
    uint64_t v46 = v0[5];
    uint64_t v31 = swift_slowAlloc();
    unint64_t v32 = v0;
    uint64_t v33 = swift_slowAlloc();
    v49[0] = v33;
    *(_DWORD *)uint64_t v31 = 136315394;
    uint64_t v34 = swift_bridgeObjectRetain();
    uint64_t v35 = MEMORY[0x2533A6BA0](v34, &type metadata for DeviceEntity);
    unint64_t v37 = v36;
    swift_bridgeObjectRelease();
    v32[2] = sub_2517F0D04(v35, v37, v49);
    sub_25192D580();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 12) = 2080;
    swift_bridgeObjectRetain();
    v32[3] = sub_2517F0D04(v46, v30, v49);
    sub_25192D580();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2517D6000, v27, v28, "Found deviceEntities: %s for string: %s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    uint64_t v0 = v32;
    MEMORY[0x2533A75D0](v33, -1, -1);
    MEMORY[0x2533A75D0](v31, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v38 = (uint64_t (*)(uint64_t))v0[1];
  return v38(v26);
}

uint64_t DeviceEntityQuery.entities(matching:mode:sortedBy:limit:)(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v7 = (uint64_t (*)(uint64_t, char))((char *)&dword_269B56C50 + dword_269B56C50);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_2517F8D04;
  return v7(a1, v4);
}

uint64_t sub_2518C1498@<X0>(uint64_t a1@<X8>)
{
  return sub_2517ED86C(&qword_269B531B0, &qword_269B56C30, (uint64_t)qword_269B56BB8, a1);
}

uint64_t sub_2518C14C4@<X0>(uint64_t a1@<X8>)
{
  return sub_2517ED86C(&qword_269B531A8, &qword_269B56C28, (uint64_t)qword_269B56BA0, a1);
}

uint64_t sub_2518C14F0(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v3 + 16) = a1;
  char v5 = a3 & 1;
  uint64_t v8 = (uint64_t (*)(uint64_t, char))((char *)&dword_269B56C50 + dword_269B56C50);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_2517F8D00;
  return v8(a2, v5);
}

uint64_t sub_2518C15AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_2517EDA84;
  return DeviceEntityQuery.entities(matching:)(a2, a3);
}

uint64_t sub_2518C164C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2517EDC6C;
  return DeviceEntityQuery.entities(for:)(a1);
}

uint64_t sub_2518C16E0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_2518D52E4();
  void *v5 = v2;
  v5[1] = sub_2517F8D08;
  return MEMORY[0x270EE0E40](a1, a2, v6);
}

uint64_t sub_2518C1794(unsigned __int16 *a1, uint64_t a2)
{
  unsigned __int16 v3 = *a1;
  sub_2517E464C(a2);
  sub_25192B740();
  sub_2517E46D8(a2);
  unsigned int v4 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56020);
  uint64_t inited = swift_initStackObject();
  if ((v22 & 0xC000) == 0x8000)
  {
    *(_OWORD *)(inited + 16) = xmmword_25192DE90;
    *(_WORD *)(inited + 32) = v4;
    *(_WORD *)(inited + 34) = v4;
    *(_WORD *)(inited + 36) = (v4 >> 8) & 0x3F;
  }
  else
  {
    *(_OWORD *)(inited + 16) = xmmword_25192F930;
    *(_WORD *)(inited + 32) = v4;
  }
  uint64_t v6 = sub_2517F6A58(inited);
  swift_setDeallocating();
  uint64_t v7 = v6 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v6 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v15 = v14 | (v13 << 6);
      goto LABEL_8;
    }
    int64_t v16 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v16 >= v11) {
      goto LABEL_29;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v16);
    ++v13;
    if (!v17)
    {
      int64_t v13 = v16 + 1;
      if (v16 + 1 >= v11) {
        goto LABEL_29;
      }
      unint64_t v17 = *(void *)(v7 + 8 * v13);
      if (!v17)
      {
        int64_t v13 = v16 + 2;
        if (v16 + 2 >= v11) {
          goto LABEL_29;
        }
        unint64_t v17 = *(void *)(v7 + 8 * v13);
        if (!v17)
        {
          int64_t v13 = v16 + 3;
          if (v16 + 3 >= v11) {
            goto LABEL_29;
          }
          unint64_t v17 = *(void *)(v7 + 8 * v13);
          if (!v17)
          {
            int64_t v13 = v16 + 4;
            if (v16 + 4 >= v11) {
              goto LABEL_29;
            }
            unint64_t v17 = *(void *)(v7 + 8 * v13);
            if (!v17)
            {
              int64_t v18 = v16 + 5;
              if (v18 >= v11)
              {
LABEL_29:
                uint64_t v19 = 0;
                goto LABEL_30;
              }
              unint64_t v17 = *(void *)(v7 + 8 * v18);
              if (!v17)
              {
                while (1)
                {
                  int64_t v13 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_32;
                  }
                  if (v13 >= v11) {
                    goto LABEL_29;
                  }
                  unint64_t v17 = *(void *)(v7 + 8 * v13);
                  ++v18;
                  if (v17) {
                    goto LABEL_27;
                  }
                }
              }
              int64_t v13 = v18;
            }
          }
        }
      }
    }
LABEL_27:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
LABEL_8:
    unsigned __int16 v21 = *(_WORD *)(*(void *)(v6 + 48) + 2 * v15);
    unsigned __int16 v20 = v3;
    uint64_t result = _s14HomeAppIntents10DeviceTypeO2eeoiySbAC_ACtFZ_0(&v21, &v20);
    if (result)
    {
      uint64_t v19 = 1;
LABEL_30:
      swift_release();
      swift_bridgeObjectRelease();
      return v19;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_2518C19D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_25192D620();
  sub_25192D310();
  MEMORY[0x2533A6BA0](a1, a5);
  sub_25192D310();
  swift_bridgeObjectRelease();
  sub_25192D310();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0);
  sub_25192D560();
  sub_25192D310();
  swift_bridgeObjectRelease();
  sub_25192D310();
  if (a3)
  {
    uint64_t v9 = type metadata accessor for ZoneEntity();
    MEMORY[0x2533A6BD0](a3, v9);
  }
  sub_25192D310();
  swift_bridgeObjectRelease();
  sub_25192D310();
  if (a4)
  {
    uint64_t v10 = type metadata accessor for RoomEntity();
    MEMORY[0x2533A6BD0](a4, v10);
  }
  sub_25192D310();
  swift_bridgeObjectRelease();
  sub_25192D310();
  return 0;
}

uint64_t sub_2518C1BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56BD0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v47 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v47 - v11;
  uint64_t v50 = a2;
  uint64_t v13 = sub_25192C150();
  if (*(void *)(v13 + 16) && (unint64_t v14 = sub_251823860(a1), (v15 & 1) != 0))
  {
    unint64_t v16 = v14;
    uint64_t v17 = *(void *)(v13 + 56);
    uint64_t v18 = sub_25192BF20();
    uint64_t v19 = v7;
    uint64_t v20 = a1;
    uint64_t v21 = *(void *)(v18 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v21 + 16))(v12, v17 + *(void *)(v21 + 72) * v16, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v12, 0, 1, v18);
    a1 = v20;
    uint64_t v7 = v19;
  }
  else
  {
    uint64_t v18 = sub_25192BF20();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v12, 1, 1, v18);
  }
  swift_bridgeObjectRelease();
  sub_25192BF20();
  uint64_t v22 = *(void *)(v18 - 8);
  uint64_t v23 = v22;
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  uint64_t v49 = v22 + 48;
  if (v24(v12, 1, v18) == 1)
  {
    uint64_t v25 = sub_2517E16E0((uint64_t)v12, &qword_269B56BD0);
    uint64_t v26 = MEMORY[0x263F8EE88];
  }
  else
  {
    uint64_t v27 = sub_25192BED0();
    uint64_t v26 = sub_25184708C(v27);
    uint64_t v25 = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v12, v18);
  }
  MEMORY[0x270FA5388](v25);
  *(&v47 - 2) = v50;
  uint64_t v47 = sub_2517E93D8((void (*)(_OWORD *__return_ptr, char *))sub_2518D598C, (uint64_t)(&v47 - 4), v26);
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_25192C150();
  if (*(void *)(v28 + 16) && (unint64_t v29 = sub_251823860(a1), (v30 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v10, *(void *)(v28 + 56) + *(void *)(v23 + 72) * v29, v18);
    uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    v31(v10, 0, 1, v18);
  }
  else
  {
    uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    v31(v10, 1, 1, v18);
  }
  swift_bridgeObjectRelease();
  unsigned int v32 = v24(v10, 1, v18);
  uint64_t v48 = v31;
  if (v32 == 1)
  {
    uint64_t v33 = sub_2517E16E0((uint64_t)v10, &qword_269B56BD0);
    uint64_t v34 = MEMORY[0x263F8EE88];
  }
  else
  {
    uint64_t v35 = sub_25192BEE0();
    uint64_t v34 = sub_2518CD9F4(v35);
    uint64_t v33 = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v10, v18);
  }
  MEMORY[0x270FA5388](v33);
  *(&v47 - 2) = v50;
  uint64_t v36 = sub_2517EAC2C((void (*)(_OWORD *__return_ptr, char *))sub_2518D59B8, (uint64_t)(&v47 - 4), v34);
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_25192C150();
  if (*(void *)(v37 + 16) && (unint64_t v38 = sub_251823860(a1), (v39 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v7, *(void *)(v37 + 56) + *(void *)(v23 + 72) * v38, v18);
    uint64_t v40 = 0;
  }
  else
  {
    uint64_t v40 = 1;
  }
  v48(v7, v40, 1, v18);
  swift_bridgeObjectRelease();
  if (v24(v7, 1, v18) == 1)
  {
    uint64_t v41 = sub_2517E16E0((uint64_t)v7, &qword_269B56BD0);
    uint64_t v42 = MEMORY[0x263F8EE88];
  }
  else
  {
    uint64_t v43 = sub_25192BF00();
    uint64_t v42 = sub_2518CDD14(v43);
    uint64_t v41 = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v7, v18);
  }
  uint64_t v44 = v47;
  MEMORY[0x270FA5388](v41);
  *(&v47 - 2) = v50;
  uint64_t v45 = sub_2517EAC58((void (*)(_OWORD *__return_ptr, char *))sub_2518D59D4, (uint64_t)(&v47 - 4), v42);
  swift_bridgeObjectRelease();
  uint64_t v51 = v44;
  sub_2517F0970(v36);
  sub_2517F0970(v45);
  return v51;
}

uint64_t sub_2518C2174(uint64_t a1)
{
  uint64_t v2 = sub_25192C170();
  uint64_t v3 = sub_25184708C(v2);
  uint64_t v16 = a1;
  uint64_t v4 = sub_2517E93D8((void (*)(_OWORD *__return_ptr, char *))sub_2518D6688, (uint64_t)v15, v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_25192C1A0();
  uint64_t v6 = sub_2518CD9F4(v5);
  uint64_t v14 = a1;
  uint64_t v7 = sub_2517EAC2C((void (*)(_OWORD *__return_ptr, char *))sub_2518D66A0, (uint64_t)v13, v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_25192C1C0();
  uint64_t v9 = sub_2518CDD14(v8);
  void v12[2] = a1;
  uint64_t v10 = sub_2517EAC58((void (*)(_OWORD *__return_ptr, char *))sub_2518D66B8, (uint64_t)v12, v9);
  swift_bridgeObjectRelease();
  uint64_t v17 = v4;
  sub_2517F0970(v7);
  sub_2517F0970(v10);
  return v17;
}

uint64_t sub_2518C2288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v35 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E80);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25192BD10();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25192C970();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unsigned int v32 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = a2;
  uint64_t v15 = sub_25192C190();
  uint64_t v33 = a1;
  sub_25192C2A0();
  if (*(void *)(v15 + 16) && (unint64_t v16 = sub_251823860((uint64_t)v11), (v17 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v7, *(void *)(v15 + 56) + *(void *)(v13 + 72) * v16, v12);
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v18 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v7, v18, 1, v12);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) == 1)
  {
    sub_2517E16E0((uint64_t)v7, &qword_269B53E80);
    uint64_t v19 = v35;
    return sub_2518C262C(v33, v34, (uint64_t)v19);
  }
  uint64_t v20 = v32;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v32, v7, v12);
  uint64_t v21 = sub_25192C910();
  uint64_t v23 = v22;
  uint64_t v24 = sub_25192D2D0();
  if (!v23)
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = v35;
    goto LABEL_15;
  }
  if (v21 != v24 || v23 != v25)
  {
    char v27 = sub_25192D810();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = v35;
    if (v27) {
      goto LABEL_17;
    }
LABEL_15:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
    return sub_2518C262C(v33, v34, (uint64_t)v19);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = v35;
LABEL_17:
  uint64_t v28 = sub_25192C8F0();
  char v30 = v29;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v20, v12);
  if ((v30 & 1) == 0 && v28)
  {
    void v19[2] = 0u;
    v19[3] = 0u;
    *uint64_t v19 = 0u;
    v19[1] = 0u;
    return result;
  }
  return sub_2518C262C(v33, v34, (uint64_t)v19);
}

uint64_t sub_2518C262C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_25192C1E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_25192C780();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t))(v13 + 16))(v12, a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = DeviceEntity.init(staticService:snapshot:)((uint64_t)v12, v9, v26);
  uint64_t v15 = v26[0];
  if (!v26[0]) {
    goto LABEL_4;
  }
  uint64_t v17 = v26[1];
  uint64_t v16 = v26[2];
  uint64_t v19 = v26[3];
  uint64_t v18 = v26[4];
  uint64_t v21 = v26[5];
  uint64_t v20 = v26[6];
  uint64_t v22 = v26[7];
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  sub_25187F5AC(v15);
  unsigned __int16 v25 = v26[0];
  unsigned __int16 v24 = 3;
  uint64_t result = _s14HomeAppIntents10DeviceTypeO2eeoiySbAC_ACtFZ_0(&v25, &v24);
  if (result)
  {
    uint64_t result = sub_25187F5AC(v15);
LABEL_4:
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  *(void *)a3 = v15;
  *(void *)(a3 + 8) = v17;
  *(void *)(a3 + 16) = v16;
  *(void *)(a3 + 24) = v19;
  *(void *)(a3 + 32) = v18;
  *(void *)(a3 + 40) = v21;
  *(void *)(a3 + 48) = v20;
  *(void *)(a3 + 56) = v22;
  return result;
}

uint64_t sub_2518C2898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6 = sub_25192C1E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25192CBE0();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  return DeviceEntity.init(staticMediaProfile:snapshot:)(v12, v9, a3);
}

double sub_2518C2A18@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6 = sub_25192C1E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25192CD30();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  DeviceEntity.init(staticCameraProfile:snapshot:)((uint64_t)v12, v9, (uint64_t *)v17);
  long long v14 = v17[1];
  *a3 = v17[0];
  a3[1] = v14;
  double result = *(double *)&v18;
  long long v16 = v19;
  a3[2] = v18;
  a3[3] = v16;
  return result;
}

uint64_t sub_2518C2BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = sub_25192CB40();
  v13[2] = a2;
  v13[3] = a3;
  v13[4] = a4;
  v13[5] = a1;
  uint64_t v11 = sub_2517EB068((void (*)(_OWORD *__return_ptr, char *))sub_2518D5C08, (uint64_t)v13, v10);
  uint64_t result = swift_bridgeObjectRelease();
  *a5 = v11;
  return result;
}

uint64_t sub_2518C2C4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v75 = a5;
  uint64_t v92 = a1;
  uint64_t v80 = (_OWORD *)a6;
  uint64_t v11 = sub_25192C1E0();
  uint64_t v73 = *(void *)(v11 - 8);
  uint64_t v74 = v11;
  MEMORY[0x270FA5388](v11);
  unint64_t v72 = (char *)v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_25192CB50();
  uint64_t v69 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v70 = (char *)v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_25192C890();
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v68 = (char *)v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E88);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v90 = (char *)v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56D08);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v82 = (char *)v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_25192BD10();
  uint64_t v81 = *(void *)(v19 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v88 = (char *)v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v91 = (char *)v63 - v23;
  uint64_t result = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)v63 - v25;
  if (a2)
  {
    uint64_t v27 = *(void *)(a2 + 16);
    if (!v27) {
      goto LABEL_30;
    }
    uint64_t v76 = a3;
    uint64_t v77 = a4;
    uint64_t v28 = *(void *)(type metadata accessor for RoomEntity() - 8);
    uint64_t v29 = a2 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
    char v30 = (void (**)(char *, uint64_t))(v81 + 8);
    uint64_t v31 = *(void *)(v28 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_25192C870();
      char v32 = sub_25192BCE0();
      (*v30)(v26, v19);
      if (v32) {
        break;
      }
      v29 += v31;
      if (!--v27) {
        goto LABEL_29;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v7 = v6;
    a3 = v76;
    a4 = v77;
  }
  if (!a3)
  {
LABEL_28:
    uint64_t v59 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v68, v92, v67);
    uint64_t v60 = (uint64_t)v70;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v70, v75, v71);
    uint64_t v61 = (uint64_t)v72;
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v72, a4, v74);
    return DeviceEntity.init(staticEndpoint:staticMatterDevice:snapshot:)(v59, v60, v61, (uint64_t)v80);
  }
  uint64_t v79 = *(void *)(a3 + 16);
  if (v79)
  {
    v63[1] = v7;
    uint64_t v33 = *(void *)(type metadata accessor for ZoneEntity() - 8);
    uint64_t v65 = a3 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
    uint64_t v86 = v81 + 16;
    uint64_t v64 = *(void *)(v33 + 72);
    uint64_t v34 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56);
    uint64_t v84 = (void (**)(char *, char *, uint64_t))(v81 + 32);
    int v85 = (unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48);
    uint64_t v89 = (void (**)(char *, uint64_t))(v81 + 8);
    swift_bridgeObjectRetain();
    uint64_t v35 = 0;
    int64_t v87 = v34;
    v63[2] = (unint64_t)v34 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v76 = a3;
    uint64_t v77 = a4;
    do
    {
      uint64_t v36 = sub_25192C160();
      uint64_t v37 = *(void *)(v36 + 16);
      uint64_t v83 = v35;
      if (v37 && (unint64_t v38 = sub_251823860(v65 + v64 * v35), (v39 & 1) != 0))
      {
        unint64_t v40 = v38;
        uint64_t v41 = *(void *)(v36 + 56);
        uint64_t v42 = sub_25192BF60();
        uint64_t v43 = *(void *)(v42 - 8);
        uint64_t v44 = v43;
        uint64_t v45 = v41 + *(void *)(v43 + 72) * v40;
        uint64_t v46 = (uint64_t)v82;
        (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v82, v45, v42);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v46, 0, 1, v42);
      }
      else
      {
        uint64_t v42 = sub_25192BF60();
        uint64_t v46 = (uint64_t)v82;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v82, 1, 1, v42);
      }
      swift_bridgeObjectRelease();
      sub_25192BF60();
      uint64_t v47 = *(void *)(v42 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v46, 1, v42) == 1)
      {
        sub_2517E16E0(v46, &qword_269B56D08);
      }
      else
      {
        uint64_t v48 = v46;
        uint64_t v49 = sub_25192BF50();
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v42);
        sub_25192C870();
        uint64_t v50 = *(void *)(v49 + 16);
        uint64_t v78 = v49;
        if (v50)
        {
          unint64_t v51 = v49 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
          uint64_t v52 = *(void *)(v81 + 72);
          uint64_t v53 = *(void (**)(char *, unint64_t, uint64_t))(v81 + 16);
          swift_bridgeObjectRetain();
          uint64_t v54 = v90;
          while (1)
          {
            v53(v54, v51, v19);
            uint64_t v55 = *v87;
            (*v87)(v54, 0, 1, v19);
            if ((*v85)(v54, 1, v19) == 1) {
              break;
            }
            uint64_t v56 = v88;
            (*v84)(v88, v54, v19);
            sub_2518D6628(&qword_269B53E68, MEMORY[0x263F07508]);
            char v57 = sub_25192D230();
            uint64_t v58 = *v89;
            (*v89)(v56, v19);
            if (v57)
            {
              swift_bridgeObjectRelease();
              v58(v91, v19);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              a4 = v77;
              goto LABEL_28;
            }
            v51 += v52;
            --v50;
            uint64_t v54 = v90;
            if (!v50) {
              goto LABEL_25;
            }
          }
        }
        else
        {
          uint64_t v55 = *v87;
          swift_bridgeObjectRetain();
          uint64_t v54 = v90;
LABEL_25:
          v55(v54, 1, 1, v19);
        }
        swift_bridgeObjectRelease();
        (*v89)(v91, v19);
        swift_bridgeObjectRelease();
      }
      uint64_t v35 = v83 + 1;
    }
    while (v83 + 1 != v79);
LABEL_29:
    uint64_t result = swift_bridgeObjectRelease();
  }
LABEL_30:
  char v62 = v80;
  v80[2] = 0u;
  v62[3] = 0u;
  *char v62 = 0u;
  v62[1] = 0u;
  return result;
}

uint64_t sub_2518C35BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2518C38C8(a1, a2, a3, *v3, &qword_269B56D38);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2518C35EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2518C4040(a1, a2, a3, (void *)*v3, &qword_269B54C78, MEMORY[0x263F07508]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2518C3628(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2518C38C8(a1, a2, a3, *v3, &qword_269B54C88);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2518C3658(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2518C4040(a1, a2, a3, (void *)*v3, &qword_269B54B58, MEMORY[0x263F48FC0]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2518C3694(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2518C38C8(a1, a2, a3, *v3, &qword_269B54CA0);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2518C36C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2518C46C0(a1, a2, a3, *v3, &qword_269B54638);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2518C36EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2518C3A38(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2518C370C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2518C3BB0(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2518C372C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2518C4040(a1, a2, a3, (void *)*v3, &qword_269B54C70, (uint64_t (*)(void))type metadata accessor for ZoneEntity);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2518C3768(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2518C4040(a1, a2, a3, (void *)*v3, &qword_269B54CF0, MEMORY[0x263F491B8]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2518C37A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2518C3D3C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2518C37C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2518C3E9C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2518C37E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2518C4040(a1, a2, a3, (void *)*v3, &qword_269B54CE0, (uint64_t (*)(void))type metadata accessor for RoomEntity);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2518C3820(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2518C4288(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2518C3840(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2518C43E8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2518C3860(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2518C4554(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2518C3880(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2518C46C0(a1, a2, a3, *v3, &qword_269B56D48);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2518C38A8(char a1, int64_t a2, char a3, void *a4)
{
  return sub_2518C4040(a1, a2, a3, a4, &qword_269B54B58, MEMORY[0x263F48FC0]);
}

uint64_t sub_2518C38C8(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9]) {
      memmove(v14, v15, 16 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_25192D6F0();
  __break(1u);
  return result;
}

uint64_t sub_2518C3A38(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B53AB0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 40 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25192D6F0();
  __break(1u);
  return result;
}

uint64_t sub_2518C3BB0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B56D30);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B55858);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25192D6F0();
  __break(1u);
  return result;
}

uint64_t sub_2518C3D3C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B57000);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25192D6F0();
  __break(1u);
  return result;
}

uint64_t sub_2518C3E9C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B55D48);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B55D50);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25192D6F0();
  __break(1u);
  return result;
}

uint64_t sub_2518C4040(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  unsigned __int16 v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_25192D6F0();
  __break(1u);
  return result;
}

uint64_t sub_2518C4288(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B56D20);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25192D6F0();
  __break(1u);
  return result;
}

uint64_t sub_2518C43E8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B54C80);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25192D6F0();
  __break(1u);
  return result;
}

uint64_t sub_2518C4554(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B54B60);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25192D6F0();
  __break(1u);
  return result;
}

uint64_t sub_2518C46C0(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  int64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v11 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v9]) {
      memmove(v13, v14, v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_25192D6F0();
  __break(1u);
  return result;
}

uint64_t sub_2518C480C(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_25192BD10();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_2518D6628((unint64_t *)&qword_269B53648, MEMORY[0x263F07508]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_25192D200();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    size_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      unint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_2518D6628(&qword_269B53E68, MEMORY[0x263F07508]);
      char v21 = sub_25192D230();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unsigned __int16 v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2518C7ED4((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_2518C4B30(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_25192D8D0();
  AttributeKind.rawValue.getter();
  swift_bridgeObjectRetain();
  sub_25192D300();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_25192D920();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = ~v7;
    while (1)
    {
      uint64_t v10 = AttributeKind.rawValue.getter();
      uint64_t v12 = v11;
      if (v10 == AttributeKind.rawValue.getter() && v12 == v13) {
        break;
      }
      char v15 = sub_25192D810();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_11;
      }
      unint64_t v8 = (v8 + 1) & v9;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_2518C8190(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v18;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = a2;
  return result;
}

uint64_t sub_2518C4CF0(unsigned char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_25192D8D0();
  DeviceType.SingleDeviceType.rawValue.getter();
  swift_bridgeObjectRetain();
  sub_25192D300();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_25192D920();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = ~v7;
    while (1)
    {
      unint64_t v10 = 0xEB00000000726569;
      uint64_t v11 = 0x6669727550726961;
      switch(*(unsigned char *)(*(void *)(v5 + 48) + v8))
      {
        case 1:
          unint64_t v10 = 0x800000025194A8F0;
          uint64_t v11 = 0xD000000000000010;
          break;
        case 2:
          unint64_t v10 = 0xE700000000000000;
          uint64_t v11 = 0x5654656C707061;
          break;
        case 3:
          unint64_t v10 = 0xE600000000000000;
          uint64_t v11 = 0x6172656D6163;
          break;
        case 4:
          uint64_t v11 = 0xD000000000000013;
          uint64_t v12 = "carbonDioxideSensor";
          goto LABEL_34;
        case 5:
          uint64_t v11 = 0xD000000000000014;
          uint64_t v12 = "carbonMonoxideSensor";
          goto LABEL_34;
        case 6:
          uint64_t v11 = 0x53746361746E6F63;
          unint64_t v10 = 0xED0000726F736E65;
          break;
        case 7:
          unint64_t v10 = 0xE400000000000000;
          uint64_t v11 = 1919905636;
          break;
        case 8:
          unint64_t v10 = 0xE300000000000000;
          uint64_t v11 = 7233894;
          break;
        case 9:
          unint64_t v10 = 0xE600000000000000;
          uint64_t v11 = 0x746563756166;
          break;
        case 0xA:
          uint64_t v11 = 0x6F44656761726167;
          goto LABEL_18;
        case 0xB:
          uint64_t v11 = 0x6F43726574616568;
          unint64_t v10 = 0xEC00000072656C6FLL;
          break;
        case 0xC:
          uint64_t v11 = 0xD000000000000016;
          uint64_t v12 = "humidifierDehumidifier";
          goto LABEL_34;
        case 0xD:
          uint64_t v11 = 0x79746964696D7568;
          unint64_t v10 = 0xEE00726F736E6553;
          break;
        case 0xE:
          uint64_t v11 = 0x736E65536B61656CLL;
LABEL_18:
          unint64_t v10 = 0xEA0000000000726FLL;
          break;
        case 0xF:
          uint64_t v11 = 0x6C7562746867696CLL;
          unint64_t v10 = 0xE900000000000062;
          break;
        case 0x10:
          uint64_t v13 = 0x53746867696CLL;
          goto LABEL_29;
        case 0x11:
          unint64_t v10 = 0xE400000000000000;
          uint64_t v11 = 1801678700;
          break;
        case 0x12:
          uint64_t v11 = 0x65536E6F69746F6DLL;
          unint64_t v10 = 0xEC000000726F736ELL;
          break;
        case 0x13:
          uint64_t v11 = 0x636E61707563636FLL;
          unint64_t v10 = 0xEF726F736E655379;
          break;
        case 0x14:
          unint64_t v10 = 0xE600000000000000;
          uint64_t v11 = 0x74656C74756FLL;
          break;
        case 0x15:
          uint64_t v11 = 0xD000000000000012;
          uint64_t v12 = "robotVacuumCleaner";
          goto LABEL_34;
        case 0x16:
          uint64_t v11 = 0x7974697275636573;
          unint64_t v10 = 0xEE006D6574737953;
          break;
        case 0x17:
          unint64_t v10 = 0xE600000000000000;
          uint64_t v11 = 0x7265776F6873;
          break;
        case 0x18:
          uint64_t v13 = 0x53656B6F6D73;
LABEL_29:
          uint64_t v11 = v13 & 0xFFFFFFFFFFFFLL | 0x6E65000000000000;
          unint64_t v10 = 0xEB00000000726F73;
          break;
        case 0x19:
          uint64_t v11 = 0x656C6B6E69727073;
          unint64_t v10 = 0xE900000000000072;
          break;
        case 0x1A:
          unint64_t v10 = 0xE600000000000000;
          uint64_t v11 = 0x686374697773;
          break;
        case 0x1B:
          uint64_t v11 = 0x69736976656C6574;
          unint64_t v10 = 0xEA00000000006E6FLL;
          break;
        case 0x1C:
          uint64_t v11 = 0xD000000000000011;
          uint64_t v12 = "temperatureSensor";
LABEL_34:
          unint64_t v10 = (unint64_t)(v12 - 32) | 0x8000000000000000;
          break;
        case 0x1D:
          uint64_t v11 = 0x74736F6D72656874;
          unint64_t v10 = 0xEA00000000007461;
          break;
        case 0x1E:
          unint64_t v10 = 0xE500000000000000;
          uint64_t v11 = 0x65766C6176;
          break;
        case 0x1F:
          unint64_t v10 = 0xE600000000000000;
          uint64_t v11 = 0x776F646E6977;
          break;
        case 0x20:
          uint64_t v11 = 0x6F43776F646E6977;
          unint64_t v10 = 0xEE00676E69726576;
          break;
        default:
          break;
      }
      uint64_t v14 = 0x6669727550726961;
      unint64_t v15 = 0xEB00000000726569;
      switch((char)a2)
      {
        case 1:
          unint64_t v15 = 0x800000025194A8F0;
          uint64_t v14 = 0xD000000000000010;
          break;
        case 2:
          unint64_t v15 = 0xE700000000000000;
          uint64_t v14 = 0x5654656C707061;
          break;
        case 3:
          unint64_t v15 = 0xE600000000000000;
          uint64_t v14 = 0x6172656D6163;
          break;
        case 4:
          uint64_t v14 = 0xD000000000000013;
          uint64_t v16 = "carbonDioxideSensor";
          goto LABEL_70;
        case 5:
          uint64_t v14 = 0xD000000000000014;
          uint64_t v16 = "carbonMonoxideSensor";
          goto LABEL_70;
        case 6:
          uint64_t v14 = 0x53746361746E6F63;
          unint64_t v15 = 0xED0000726F736E65;
          break;
        case 7:
          unint64_t v15 = 0xE400000000000000;
          uint64_t v14 = 1919905636;
          break;
        case 8:
          unint64_t v15 = 0xE300000000000000;
          uint64_t v14 = 7233894;
          break;
        case 9:
          unint64_t v15 = 0xE600000000000000;
          uint64_t v14 = 0x746563756166;
          break;
        case 10:
          uint64_t v14 = 0x6F44656761726167;
          goto LABEL_54;
        case 11:
          uint64_t v14 = 0x6F43726574616568;
          unint64_t v15 = 0xEC00000072656C6FLL;
          break;
        case 12:
          uint64_t v14 = 0xD000000000000016;
          uint64_t v16 = "humidifierDehumidifier";
          goto LABEL_70;
        case 13:
          uint64_t v14 = 0x79746964696D7568;
          unint64_t v15 = 0xEE00726F736E6553;
          break;
        case 14:
          uint64_t v14 = 0x736E65536B61656CLL;
LABEL_54:
          unint64_t v15 = 0xEA0000000000726FLL;
          break;
        case 15:
          uint64_t v14 = 0x6C7562746867696CLL;
          unint64_t v15 = 0xE900000000000062;
          break;
        case 16:
          uint64_t v17 = 0x53746867696CLL;
          goto LABEL_65;
        case 17:
          unint64_t v15 = 0xE400000000000000;
          uint64_t v14 = 1801678700;
          break;
        case 18:
          uint64_t v14 = 0x65536E6F69746F6DLL;
          unint64_t v15 = 0xEC000000726F736ELL;
          break;
        case 19:
          uint64_t v14 = 0x636E61707563636FLL;
          unint64_t v15 = 0xEF726F736E655379;
          break;
        case 20:
          unint64_t v15 = 0xE600000000000000;
          uint64_t v14 = 0x74656C74756FLL;
          break;
        case 21:
          uint64_t v14 = 0xD000000000000012;
          uint64_t v16 = "robotVacuumCleaner";
          goto LABEL_70;
        case 22:
          uint64_t v14 = 0x7974697275636573;
          unint64_t v15 = 0xEE006D6574737953;
          break;
        case 23:
          unint64_t v15 = 0xE600000000000000;
          uint64_t v14 = 0x7265776F6873;
          break;
        case 24:
          uint64_t v17 = 0x53656B6F6D73;
LABEL_65:
          uint64_t v14 = v17 & 0xFFFFFFFFFFFFLL | 0x6E65000000000000;
          unint64_t v15 = 0xEB00000000726F73;
          break;
        case 25:
          uint64_t v14 = 0x656C6B6E69727073;
          unint64_t v15 = 0xE900000000000072;
          break;
        case 26:
          unint64_t v15 = 0xE600000000000000;
          uint64_t v14 = 0x686374697773;
          break;
        case 27:
          uint64_t v14 = 0x69736976656C6574;
          unint64_t v15 = 0xEA00000000006E6FLL;
          break;
        case 28:
          uint64_t v14 = 0xD000000000000011;
          uint64_t v16 = "temperatureSensor";
LABEL_70:
          unint64_t v15 = (unint64_t)(v16 - 32) | 0x8000000000000000;
          break;
        case 29:
          uint64_t v14 = 0x74736F6D72656874;
          unint64_t v15 = 0xEA00000000007461;
          break;
        case 30:
          unint64_t v15 = 0xE500000000000000;
          uint64_t v14 = 0x65766C6176;
          break;
        case 31:
          unint64_t v15 = 0xE600000000000000;
          uint64_t v14 = 0x776F646E6977;
          break;
        case 32:
          uint64_t v14 = 0x6F43776F646E6977;
          unint64_t v15 = 0xEE00676E69726576;
          break;
        default:
          break;
      }
      if (v11 == v14 && v10 == v15)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_83;
      }
      char v18 = sub_25192D810();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v18) {
        break;
      }
      unint64_t v8 = (v8 + 1) & v9;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_80;
      }
    }
    swift_bridgeObjectRelease();
LABEL_83:
    uint64_t result = 0;
    LOBYTE(a2) = *(unsigned char *)(*(void *)(*v3 + 48) + v8);
  }
  else
  {
LABEL_80:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2518C83B0(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v22;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = a2;
  return result;
}

uint64_t sub_2518C5698(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_25192CAF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_2518D6628(&qword_269B53DD8, MEMORY[0x263F48AD0]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_25192D200();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      unint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_2518D6628(&qword_269B53DE0, MEMORY[0x263F48AD0]);
      char v21 = sub_25192D230();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unsigned __int16 v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2518C8DA4((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_2518C59BC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_25192D8D0();
  swift_bridgeObjectRetain();
  sub_25192D300();
  uint64_t v8 = sub_25192D920();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_25192D810() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_25192D810() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_2518C9060(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_2518C5B6C(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_25192D0F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_2518D6628(&qword_269B55068, MEMORY[0x263F491B8]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_25192D200();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      unint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_2518D6628(&qword_269B56FF0, MEMORY[0x263F491B8]);
      char v21 = sub_25192D230();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unsigned __int16 v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2518C91FC((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_2518C5E90(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_25192D8D0();
  sub_25192D8E0();
  uint64_t v6 = sub_25192D920();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_2518C94B8(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(void *)(v9 + 8 * v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v9 + 8 * v8) != a2);
  }
  uint64_t result = 0;
  a2 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_2518C5FB0(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_25192CF70();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_2518D6628(&qword_269B53E78, MEMORY[0x263F48FC0]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_25192D200();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      unint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_2518D6628(&qword_269B55D30, MEMORY[0x263F48FC0]);
      char v21 = sub_25192D230();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unsigned __int16 v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2518C9608((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_2518C62D4(_DWORD *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = MEMORY[0x2533A70B0](*(void *)(v6 + 40), a2, 4);
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2518C98C4(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(_DWORD *)(v10 + 4 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(_DWORD *)(v10 + 4 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_2518C63D8()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_25192BD10();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E60);
  uint64_t v5 = sub_25192D600();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = sub_25192BA80();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    uint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_2518D6628((unint64_t *)&qword_269B53648, MEMORY[0x263F07508]);
      uint64_t result = sub_25192D200();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_2518C67D4(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v5 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = sub_25192D600();
  uint64_t v8 = v7;
  if (*(void *)(v6 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
    BOOL v32 = (void *)(v6 + 56);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v6 + 56);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = v7 + 56;
    uint64_t result = sub_25192BA80();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v15 << 6);
      }
      else
      {
        int64_t v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v12) {
          goto LABEL_33;
        }
        unint64_t v20 = v32[v19];
        ++v15;
        if (!v20)
        {
          int64_t v15 = v19 + 1;
          if (v19 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v20 = v32[v15];
          if (!v20)
          {
            int64_t v15 = v19 + 2;
            if (v19 + 2 >= v12) {
              goto LABEL_33;
            }
            unint64_t v20 = v32[v15];
            if (!v20)
            {
              int64_t v21 = v19 + 3;
              if (v21 >= v12)
              {
LABEL_33:
                swift_release();
                uint64_t v5 = v3;
                uint64_t v31 = 1 << *(unsigned char *)(v6 + 32);
                if (v31 > 63) {
                  bzero(v32, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v32 = -1 << v31;
                }
                *(void *)(v6 + 16) = 0;
                break;
              }
              unint64_t v20 = v32[v21];
              if (!v20)
              {
                while (1)
                {
                  int64_t v15 = v21 + 1;
                  if (__OFADD__(v21, 1)) {
                    goto LABEL_39;
                  }
                  if (v15 >= v12) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v32[v15];
                  ++v21;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v15 = v21;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      char v22 = *(unsigned char *)(*(void *)(v6 + 48) + v18);
      uint64_t v23 = sub_25192D8D0();
      a3(v23);
      sub_25192D300();
      swift_bridgeObjectRelease();
      uint64_t result = sub_25192D920();
      uint64_t v24 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v13 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v16 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v8 + 48) + v16) = v22;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v5 = v8;
  return result;
}

uint64_t sub_2518C6ACC()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_25192CAF0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53DD0);
  uint64_t v5 = sub_25192D600();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = sub_25192BA80();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    uint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_2518D6628(&qword_269B53DD8, MEMORY[0x263F48AD0]);
      uint64_t result = sub_25192D200();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_2518C6EC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E18);
  uint64_t v3 = sub_25192D600();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = sub_25192BA80();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_25192D8D0();
      sub_25192D300();
      uint64_t result = sub_25192D920();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_2518C71A8()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_25192D0F0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56FF8);
  uint64_t v5 = sub_25192D600();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = sub_25192BA80();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_2518D6628(&qword_269B55068, MEMORY[0x263F491B8]);
      uint64_t result = sub_25192D200();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_2518C75A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56FE8);
  uint64_t result = sub_25192D600();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_25192D8D0();
      sub_25192D8E0();
      uint64_t result = sub_25192D920();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_2518C7850()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_25192CF70();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B57010);
  uint64_t v5 = sub_25192D600();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = sub_25192BA80();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_2518D6628(&qword_269B53E78, MEMORY[0x263F48FC0]);
      uint64_t result = sub_25192D200();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_2518C7C4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B57008);
  uint64_t result = sub_25192D600();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      unsigned int v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
      uint64_t result = MEMORY[0x2533A70B0](*(void *)(v4 + 40), v18, 4);
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_2518C7ED4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_25192BD10();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2518C63D8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_2518C9EC4(MEMORY[0x263F07508], &qword_269B53E60);
      goto LABEL_12;
    }
    sub_2518CA30C();
  }
  uint64_t v12 = *v3;
  sub_2518D6628((unint64_t *)&qword_269B53648, MEMORY[0x263F07508]);
  uint64_t v13 = sub_25192D200();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    int64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_2518D6628(&qword_269B53E68, MEMORY[0x263F07508]);
      char v21 = sub_25192D230();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_25192D840();
  __break(1u);
  return result;
}

uint64_t sub_2518C8190(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_16;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_2518C67D4(v8, &qword_269B56D28, (void (*)(uint64_t))AttributeKind.rawValue.getter);
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_2518C99EC(&qword_269B56D28);
      goto LABEL_16;
    }
    sub_2518CA6BC(v8, &qword_269B56D28, (void (*)(uint64_t))AttributeKind.rawValue.getter);
  }
  uint64_t v9 = *v3;
  sub_25192D8D0();
  AttributeKind.rawValue.getter();
  sub_25192D300();
  swift_bridgeObjectRelease();
  uint64_t result = sub_25192D920();
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = ~v10;
    do
    {
      uint64_t v12 = AttributeKind.rawValue.getter();
      uint64_t v14 = v13;
      if (v12 == AttributeKind.rawValue.getter() && v14 == v15) {
        goto LABEL_19;
      }
      char v17 = sub_25192D810();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v17) {
        goto LABEL_20;
      }
      a2 = (a2 + 1) & v11;
    }
    while (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_16:
  uint64_t v18 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v18 + 48) + a2) = v5;
  uint64_t v19 = *(void *)(v18 + 16);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (!v20)
  {
    *(void *)(v18 + 16) = v21;
    return result;
  }
  __break(1u);
LABEL_19:
  swift_bridgeObjectRelease_n();
LABEL_20:
  uint64_t result = sub_25192D840();
  __break(1u);
  return result;
}

uint64_t sub_2518C83B0(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  char v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    uint64_t v9 = v7 + 1;
    if (a3)
    {
      sub_2518C67D4(v9, &qword_269B56D40, (void (*)(uint64_t))DeviceType.SingleDeviceType.rawValue.getter);
    }
    else
    {
      if (v8 > v7)
      {
        uint64_t result = (uint64_t)sub_2518C99EC(&qword_269B56D40);
        goto LABEL_87;
      }
      sub_2518CA6BC(v9, &qword_269B56D40, (void (*)(uint64_t))DeviceType.SingleDeviceType.rawValue.getter);
    }
    uint64_t v10 = *v3;
    sub_25192D8D0();
    DeviceType.SingleDeviceType.rawValue.getter();
    sub_25192D300();
    swift_bridgeObjectRelease();
    uint64_t result = sub_25192D920();
    uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
    a2 = result & ~v11;
    if ((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v12 = ~v11;
      while (1)
      {
        unint64_t v13 = 0xEB00000000726569;
        unint64_t v14 = 0xEB00000000726569;
        uint64_t v15 = 0x6669727550726961;
        switch(*(unsigned char *)(*(void *)(v10 + 48) + a2))
        {
          case 1:
            unint64_t v14 = 0x800000025194A8F0;
            uint64_t v15 = 0xD000000000000010;
            break;
          case 2:
            unint64_t v14 = 0xE700000000000000;
            uint64_t v15 = 0x5654656C707061;
            break;
          case 3:
            unint64_t v14 = 0xE600000000000000;
            uint64_t v15 = 0x6172656D6163;
            break;
          case 4:
            uint64_t v15 = 0xD000000000000013;
            char v17 = "carbonDioxideSensor";
            goto LABEL_43;
          case 5:
            uint64_t v15 = 0xD000000000000014;
            char v17 = "carbonMonoxideSensor";
            goto LABEL_43;
          case 6:
            uint64_t v15 = 0x53746361746E6F63;
            unint64_t v14 = 0xED0000726F736E65;
            break;
          case 7:
            unint64_t v14 = 0xE400000000000000;
            uint64_t v15 = 1919905636;
            break;
          case 8:
            unint64_t v14 = 0xE300000000000000;
            uint64_t v15 = 7233894;
            break;
          case 9:
            unint64_t v14 = 0xE600000000000000;
            uint64_t v15 = 0x746563756166;
            break;
          case 0xA:
            uint64_t v15 = 0x6F44656761726167;
            goto LABEL_33;
          case 0xB:
            uint64_t v15 = 0x6F43726574616568;
            unint64_t v14 = 0xEC00000072656C6FLL;
            break;
          case 0xC:
            uint64_t v15 = 0xD000000000000016;
            char v17 = "humidifierDehumidifier";
            goto LABEL_43;
          case 0xD:
            uint64_t v15 = 0x79746964696D7568;
            unint64_t v14 = 0xEE00726F736E6553;
            break;
          case 0xE:
            uint64_t v15 = 0x736E65536B61656CLL;
LABEL_33:
            unint64_t v14 = 0xEA0000000000726FLL;
            break;
          case 0xF:
            uint64_t v15 = 0x6C7562746867696CLL;
            unint64_t v14 = 0xE900000000000062;
            break;
          case 0x10:
            uint64_t v16 = 0x53746867696CLL;
            goto LABEL_22;
          case 0x11:
            unint64_t v14 = 0xE400000000000000;
            uint64_t v15 = 1801678700;
            break;
          case 0x12:
            uint64_t v15 = 0x65536E6F69746F6DLL;
            unint64_t v14 = 0xEC000000726F736ELL;
            break;
          case 0x13:
            uint64_t v15 = 0x636E61707563636FLL;
            unint64_t v14 = 0xEF726F736E655379;
            break;
          case 0x14:
            unint64_t v14 = 0xE600000000000000;
            uint64_t v15 = 0x74656C74756FLL;
            break;
          case 0x15:
            uint64_t v15 = 0xD000000000000012;
            char v17 = "robotVacuumCleaner";
            goto LABEL_43;
          case 0x16:
            uint64_t v15 = 0x7974697275636573;
            unint64_t v14 = 0xEE006D6574737953;
            break;
          case 0x17:
            unint64_t v14 = 0xE600000000000000;
            uint64_t v15 = 0x7265776F6873;
            break;
          case 0x18:
            uint64_t v16 = 0x53656B6F6D73;
LABEL_22:
            uint64_t v15 = v16 & 0xFFFFFFFFFFFFLL | 0x6E65000000000000;
            unint64_t v14 = 0xEB00000000726F73;
            break;
          case 0x19:
            unint64_t v14 = 0xE900000000000072;
            uint64_t v15 = 0x656C6B6E69727073;
            break;
          case 0x1A:
            unint64_t v14 = 0xE600000000000000;
            uint64_t v15 = 0x686374697773;
            break;
          case 0x1B:
            unint64_t v14 = 0xEA00000000006E6FLL;
            uint64_t v15 = 0x69736976656C6574;
            break;
          case 0x1C:
            uint64_t v15 = 0xD000000000000011;
            char v17 = "temperatureSensor";
LABEL_43:
            unint64_t v14 = (unint64_t)(v17 - 32) | 0x8000000000000000;
            break;
          case 0x1D:
            unint64_t v14 = 0xEA00000000007461;
            uint64_t v15 = 0x74736F6D72656874;
            break;
          case 0x1E:
            unint64_t v14 = 0xE500000000000000;
            uint64_t v15 = 0x65766C6176;
            break;
          case 0x1F:
            unint64_t v14 = 0xE600000000000000;
            uint64_t v15 = 0x776F646E6977;
            break;
          case 0x20:
            uint64_t v15 = 0x6F43776F646E6977;
            unint64_t v14 = 0xEE00676E69726576;
            break;
          default:
            break;
        }
        uint64_t v18 = 0x6669727550726961;
        switch(v6)
        {
          case 1:
            unint64_t v13 = 0x800000025194A8F0;
            uint64_t v18 = 0xD000000000000010;
            break;
          case 2:
            unint64_t v13 = 0xE700000000000000;
            uint64_t v18 = 0x5654656C707061;
            break;
          case 3:
            unint64_t v13 = 0xE600000000000000;
            uint64_t v18 = 0x6172656D6163;
            break;
          case 4:
            uint64_t v18 = 0xD000000000000013;
            BOOL v20 = "carbonDioxideSensor";
            goto LABEL_78;
          case 5:
            uint64_t v18 = 0xD000000000000014;
            BOOL v20 = "carbonMonoxideSensor";
            goto LABEL_78;
          case 6:
            uint64_t v18 = 0x53746361746E6F63;
            unint64_t v13 = 0xED0000726F736E65;
            break;
          case 7:
            unint64_t v13 = 0xE400000000000000;
            uint64_t v18 = 1919905636;
            break;
          case 8:
            unint64_t v13 = 0xE300000000000000;
            uint64_t v18 = 7233894;
            break;
          case 9:
            unint64_t v13 = 0xE600000000000000;
            uint64_t v18 = 0x746563756166;
            break;
          case 10:
            uint64_t v18 = 0x6F44656761726167;
            goto LABEL_67;
          case 11:
            uint64_t v18 = 0x6F43726574616568;
            unint64_t v13 = 0xEC00000072656C6FLL;
            break;
          case 12:
            uint64_t v18 = 0xD000000000000016;
            BOOL v20 = "humidifierDehumidifier";
            goto LABEL_78;
          case 13:
            uint64_t v18 = 0x79746964696D7568;
            unint64_t v13 = 0xEE00726F736E6553;
            break;
          case 14:
            uint64_t v18 = 0x736E65536B61656CLL;
LABEL_67:
            unint64_t v13 = 0xEA0000000000726FLL;
            break;
          case 15:
            uint64_t v18 = 0x6C7562746867696CLL;
            unint64_t v13 = 0xE900000000000062;
            break;
          case 16:
            uint64_t v19 = 0x53746867696CLL;
            goto LABEL_56;
          case 17:
            unint64_t v13 = 0xE400000000000000;
            uint64_t v18 = 1801678700;
            break;
          case 18:
            uint64_t v18 = 0x65536E6F69746F6DLL;
            unint64_t v13 = 0xEC000000726F736ELL;
            break;
          case 19:
            uint64_t v18 = 0x636E61707563636FLL;
            unint64_t v13 = 0xEF726F736E655379;
            break;
          case 20:
            unint64_t v13 = 0xE600000000000000;
            uint64_t v18 = 0x74656C74756FLL;
            break;
          case 21:
            uint64_t v18 = 0xD000000000000012;
            BOOL v20 = "robotVacuumCleaner";
            goto LABEL_78;
          case 22:
            uint64_t v18 = 0x7974697275636573;
            unint64_t v13 = 0xEE006D6574737953;
            break;
          case 23:
            unint64_t v13 = 0xE600000000000000;
            uint64_t v18 = 0x7265776F6873;
            break;
          case 24:
            uint64_t v19 = 0x53656B6F6D73;
LABEL_56:
            uint64_t v18 = v19 & 0xFFFFFFFFFFFFLL | 0x6E65000000000000;
            unint64_t v13 = 0xEB00000000726F73;
            break;
          case 25:
            unint64_t v13 = 0xE900000000000072;
            uint64_t v18 = 0x656C6B6E69727073;
            break;
          case 26:
            unint64_t v13 = 0xE600000000000000;
            uint64_t v18 = 0x686374697773;
            break;
          case 27:
            unint64_t v13 = 0xEA00000000006E6FLL;
            uint64_t v18 = 0x69736976656C6574;
            break;
          case 28:
            uint64_t v18 = 0xD000000000000011;
            BOOL v20 = "temperatureSensor";
LABEL_78:
            unint64_t v13 = (unint64_t)(v20 - 32) | 0x8000000000000000;
            break;
          case 29:
            unint64_t v13 = 0xEA00000000007461;
            uint64_t v18 = 0x74736F6D72656874;
            break;
          case 30:
            unint64_t v13 = 0xE500000000000000;
            uint64_t v18 = 0x65766C6176;
            break;
          case 31:
            unint64_t v13 = 0xE600000000000000;
            uint64_t v18 = 0x776F646E6977;
            break;
          case 32:
            uint64_t v18 = 0x6F43776F646E6977;
            unint64_t v13 = 0xEE00676E69726576;
            break;
          default:
            break;
        }
        if (v15 == v18 && v14 == v13) {
          break;
        }
        char v21 = sub_25192D810();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v21) {
          goto LABEL_91;
        }
        a2 = (a2 + 1) & v12;
        if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_87;
        }
      }
LABEL_90:
      swift_bridgeObjectRelease_n();
LABEL_91:
      sub_25192D840();
      __break(1u);
      JUMPOUT(0x2518C8C9CLL);
    }
  }
LABEL_87:
  uint64_t v22 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v22 + 48) + a2) = v6;
  uint64_t v23 = *(void *)(v22 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
    __break(1u);
    goto LABEL_90;
  }
  *(void *)(v22 + 16) = v25;
  return result;
}

uint64_t sub_2518C8DA4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_25192CAF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2518C6ACC();
  }
  else
  {
    if (v11 > v10)
    {
      sub_2518C9EC4(MEMORY[0x263F48AD0], &qword_269B53DD0);
      goto LABEL_12;
    }
    sub_2518CA97C();
  }
  uint64_t v12 = *v3;
  sub_2518D6628(&qword_269B53DD8, MEMORY[0x263F48AD0]);
  uint64_t v13 = sub_25192D200();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    char v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_2518D6628(&qword_269B53DE0, MEMORY[0x263F48AD0]);
      char v21 = sub_25192D230();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_25192D840();
  __break(1u);
  return result;
}

uint64_t sub_2518C9060(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  char v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_2518C6EC8();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_2518C9B78();
      goto LABEL_22;
    }
    sub_2518CAD2C();
  }
  uint64_t v11 = *v4;
  sub_25192D8D0();
  sub_25192D300();
  uint64_t result = sub_25192D920();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_25192D810(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_25192D840();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_25192D810();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *char v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_2518C91FC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_25192D0F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2518C71A8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_2518C9EC4(MEMORY[0x263F491B8], &qword_269B56FF8);
      goto LABEL_12;
    }
    sub_2518CAFDC();
  }
  uint64_t v12 = *v3;
  sub_2518D6628(&qword_269B55068, MEMORY[0x263F491B8]);
  uint64_t v13 = sub_25192D200();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_2518D6628(&qword_269B56FF0, MEMORY[0x263F491B8]);
      char v21 = sub_25192D230();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_25192D840();
  __break(1u);
  return result;
}

uint64_t sub_2518C94B8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_2518C75A4();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_2518C9D2C();
      goto LABEL_14;
    }
    sub_2518CB38C();
  }
  uint64_t v8 = *v3;
  sub_25192D8D0();
  sub_25192D8E0();
  uint64_t result = sub_25192D920();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      type metadata accessor for HMCharacteristicValueHeatingCooling(0);
      uint64_t result = sub_25192D840();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_2518C9608(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_25192CF70();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2518C7850();
  }
  else
  {
    if (v11 > v10)
    {
      sub_2518C9EC4(MEMORY[0x263F48FC0], &qword_269B57010);
      goto LABEL_12;
    }
    sub_2518CB608();
  }
  uint64_t v12 = *v3;
  sub_2518D6628(&qword_269B53E78, MEMORY[0x263F48FC0]);
  uint64_t v13 = sub_25192D200();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_2518D6628(&qword_269B55D30, MEMORY[0x263F48FC0]);
      char v21 = sub_25192D230();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_25192D840();
  __break(1u);
  return result;
}

uint64_t sub_2518C98C4(uint64_t result, unint64_t a2, char a3)
{
  unsigned int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_2518C7C4C();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_2518CA174();
      goto LABEL_14;
    }
    sub_2518CB9B8();
  }
  uint64_t v8 = *v3;
  uint64_t result = MEMORY[0x2533A70B0](*(void *)(*v3 + 40), v5, 4);
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(_DWORD *)(v10 + 4 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_25192D840();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(_DWORD *)(v10 + 4 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(void *)(v12 + 48) + 4 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_2518C99EC(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_25192D5F0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2518C9B78()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E18);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25192D5F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    int64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2518C9D2C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56FE8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25192D5F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2518C9EC4(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v25 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v9 = *v2;
  uint64_t v10 = sub_25192D5F0();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v4 = v11;
    return result;
  }
  uint64_t result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  BOOL v26 = v4;
  uint64_t v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    uint64_t result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_2518CA174()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B57008);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25192D5F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v15) = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2518CA30C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25192BD10();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E60);
  uint64_t v7 = sub_25192D600();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = sub_25192BA80();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_2518D6628((unint64_t *)&qword_269B53648, MEMORY[0x263F07508]);
    uint64_t result = sub_25192D200();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2518CA6BC(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v5 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = sub_25192D600();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v5 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v6 + 56);
  int64_t v31 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 56;
  uint64_t result = sub_25192BA80();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v31) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v10 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v10 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v10 + 8 * v15);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    char v22 = *(unsigned char *)(*(void *)(v6 + 48) + v18);
    uint64_t v23 = sub_25192D8D0();
    a3(v23);
    sub_25192D300();
    swift_bridgeObjectRelease();
    uint64_t result = sub_25192D920();
    uint64_t v24 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v16 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v8 + 48) + v16) = v22;
    ++*(void *)(v8 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v5 = v3;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v10 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v31) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v10 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2518CA97C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25192CAF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53DD0);
  uint64_t v7 = sub_25192D600();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = sub_25192BA80();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_2518D6628(&qword_269B53DD8, MEMORY[0x263F48AD0]);
    uint64_t result = sub_25192D200();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2518CAD2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E18);
  uint64_t v3 = sub_25192D600();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = sub_25192BA80();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_25192D8D0();
    swift_bridgeObjectRetain();
    sub_25192D300();
    uint64_t result = sub_25192D920();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2518CAFDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25192D0F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56FF8);
  uint64_t v7 = sub_25192D600();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = sub_25192BA80();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_2518D6628(&qword_269B55068, MEMORY[0x263F491B8]);
    uint64_t result = sub_25192D200();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2518CB38C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56FE8);
  uint64_t result = sub_25192D600();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_25192D8D0();
    sub_25192D8E0();
    uint64_t result = sub_25192D920();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2518CB608()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25192CF70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  int64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B57010);
  uint64_t v7 = sub_25192D600();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = sub_25192BA80();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_2518D6628(&qword_269B53E78, MEMORY[0x263F48FC0]);
    uint64_t result = sub_25192D200();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2518CB9B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B57008);
  uint64_t result = sub_25192D600();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    unsigned int v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
    uint64_t result = MEMORY[0x2533A70B0](*(void *)(v4 + 40), v18, 4);
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2518CBC20(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = sub_25192CAF0();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53DD0);
  uint64_t result = sub_25192D610();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_2518D6628(&qword_269B53DD8, MEMORY[0x263F48AD0]);
    uint64_t result = sub_25192D200();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2518CBFAC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53E18);
  uint64_t result = sub_25192D610();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_25192D8D0();
    swift_bridgeObjectRetain();
    sub_25192D300();
    uint64_t result = sub_25192D920();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    unint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *unint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_2518CC244(uint64_t a1)
{
  uint64_t v2 = sub_25192CC40();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  unint64_t v9 = (char *)&v25 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v25 - v10;
  sub_2518D6628(&qword_269B57038, MEMORY[0x263F48BA8]);
  uint64_t result = sub_25192D4B0();
  int64_t v13 = 0;
  uint64_t v29 = a1;
  uint64_t v30 = result;
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v15 = a1 + 64;
  uint64_t v14 = v16;
  uint64_t v17 = 1 << *(unsigned char *)(v15 - 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v14;
  uint64_t v26 = v15;
  int64_t v27 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v28 = v3 + 16;
  while (1)
  {
    if (v19)
    {
      unint64_t v20 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v22 >= v27) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v27) {
        goto LABEL_24;
      }
      unint64_t v23 = *(void *)(v26 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v27) {
          goto LABEL_24;
        }
        unint64_t v23 = *(void *)(v26 + 8 * v13);
        if (!v23)
        {
          int64_t v13 = v22 + 3;
          if (v22 + 3 >= v27) {
            goto LABEL_24;
          }
          unint64_t v23 = *(void *)(v26 + 8 * v13);
          if (!v23)
          {
            int64_t v13 = v22 + 4;
            if (v22 + 4 >= v27) {
              goto LABEL_24;
            }
            unint64_t v23 = *(void *)(v26 + 8 * v13);
            if (!v23)
            {
              int64_t v13 = v22 + 5;
              if (v22 + 5 >= v27)
              {
LABEL_24:
                swift_release();
                return v30;
              }
              unint64_t v23 = *(void *)(v26 + 8 * v13);
              int64_t v24 = v22 + 5;
              if (!v23) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_23:
    unint64_t v19 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v11, *(void *)(v29 + 56) + *(void *)(v3 + 72) * v21, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
    sub_2518CC584((uint64_t)v9, v6);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v27) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_23;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2518CC564(uint64_t a1)
{
  return sub_2518B4B70(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_2518CC584(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_25192CC40();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_2518D6628(&qword_269B57038, MEMORY[0x263F48BA8]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_25192D200();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      unint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_2518D6628(&qword_269B57040, MEMORY[0x263F48BA8]);
      char v21 = sub_25192D230();
      int64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2518CC8A8((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_2518CC8A8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_25192CC40();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 <= v10)
  {
    if (a3) {
      sub_2518CCF24();
    }
    else {
      sub_2518CCB5C();
    }
    uint64_t v12 = *v3;
    sub_2518D6628(&qword_269B57038, MEMORY[0x263F48BA8]);
    uint64_t v13 = sub_25192D200();
    uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
    a2 = v13 & ~v14;
    uint64_t v30 = v12;
    uint64_t v15 = v12 + 56;
    if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v16 = ~v14;
      unint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
      uint64_t v18 = v7 + 16;
      uint64_t v17 = v19;
      uint64_t v20 = *(void *)(v18 + 56);
      do
      {
        v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
        sub_2518D6628(&qword_269B57040, MEMORY[0x263F48BA8]);
        char v21 = sub_25192D230();
        (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
        if (v21) {
          goto LABEL_14;
        }
        a2 = (a2 + 1) & v16;
      }
      while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
  else if ((a3 & 1) == 0)
  {
    sub_2518CF3B4(MEMORY[0x263F48BA8], &qword_269B57048);
  }
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_14:
  uint64_t result = sub_25192D840();
  __break(1u);
  return result;
}

uint64_t sub_2518CCB5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25192CC40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B57048);
  uint64_t v7 = sub_25192D600();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_36:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  uint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = sub_25192BA80();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_25;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v20 >= v36) {
      goto LABEL_34;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_34;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_34;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21)
        {
          int64_t v16 = v20 + 3;
          if (v20 + 3 >= v36) {
            goto LABEL_34;
          }
          unint64_t v21 = *(void *)(v35 + 8 * v16);
          if (!v21)
          {
            int64_t v16 = v20 + 4;
            if (v20 + 4 >= v36)
            {
LABEL_34:
              uint64_t result = swift_release_n();
              uint64_t v1 = v34;
              goto LABEL_36;
            }
            unint64_t v21 = *(void *)(v35 + 8 * v16);
            int64_t v22 = v20 + 4;
            if (!v21) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_25:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_2518D6628(&qword_269B57038, MEMORY[0x263F48BA8]);
    uint64_t result = sub_25192D200();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_34;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_24;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_2518CCF24()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_25192CC40();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B57048);
  uint64_t v5 = sub_25192D600();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v38 = (void *)(v4 + 56);
    uint64_t v39 = v2;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    int64_t v36 = v0;
    int64_t v37 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v5 + 56;
    uint64_t result = sub_25192BA80();
    int64_t v13 = 0;
    uint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v37) {
          goto LABEL_34;
        }
        unint64_t v20 = v38[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v37) {
            goto LABEL_34;
          }
          unint64_t v20 = v38[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v37) {
              goto LABEL_34;
            }
            unint64_t v20 = v38[v21];
            if (!v20)
            {
              int64_t v21 = v13 + 4;
              if (v13 + 4 >= v37) {
                goto LABEL_34;
              }
              unint64_t v20 = v38[v21];
              if (!v20)
              {
                int64_t v21 = v13 + 5;
                if (v13 + 5 >= v37)
                {
LABEL_34:
                  swift_release();
                  uint64_t v1 = v36;
                  uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                  if (v34 >= 64) {
                    bzero(v38, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                  }
                  else {
                    *uint64_t v38 = -1 << v34;
                  }
                  *(void *)(v4 + 16) = 0;
                  break;
                }
                unint64_t v20 = v38[v21];
                for (uint64_t i = v13 + 5; !v20; ++i)
                {
                  int64_t v21 = i + 1;
                  if (__OFADD__(i, 1)) {
                    goto LABEL_40;
                  }
                  if (v21 >= v37) {
                    goto LABEL_34;
                  }
                  unint64_t v20 = v38[v21];
                }
              }
            }
          }
        }
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      sub_2518D6628(&qword_269B57038, MEMORY[0x263F48BA8]);
      uint64_t result = sub_25192D200();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_2518CD32C(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x263EF8340];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_2518CD4B4((uint64_t)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_2518CD4B4((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x2533A75D0](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_2518CD4B4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  char v57 = (unint64_t *)result;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v6 = 0;
    uint64_t v58 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v59 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v61 = 0;
    uint64_t v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          unint64_t v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          int64_t v62 = v6;
          unint64_t v12 = v11 | (v6 << 6);
        }
        else
        {
          int64_t v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59) {
            goto LABEL_79;
          }
          unint64_t v14 = *(void *)(v58 + 8 * v13);
          int64_t v15 = v6 + 1;
          if (!v14)
          {
            int64_t v15 = v6 + 2;
            if (v6 + 2 >= v59) {
              goto LABEL_79;
            }
            unint64_t v14 = *(void *)(v58 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v6 + 3;
              if (v6 + 3 >= v59) {
                goto LABEL_79;
              }
              unint64_t v14 = *(void *)(v58 + 8 * v15);
              if (!v14)
              {
                uint64_t v16 = v6 + 4;
                if (v6 + 4 >= v59) {
                  goto LABEL_79;
                }
                unint64_t v14 = *(void *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v15 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      goto LABEL_83;
                    }
                    if (v15 >= v59) {
                      goto LABEL_79;
                    }
                    unint64_t v14 = *(void *)(v58 + 8 * v15);
                    ++v16;
                    if (v14) {
                      goto LABEL_22;
                    }
                  }
                }
                int64_t v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          unint64_t v9 = (v14 - 1) & v14;
          int64_t v62 = v15;
          unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
        uint64_t v19 = *v17;
        uint64_t v18 = v17[1];
        sub_25192D8D0();
        swift_bridgeObjectRetain();
        sub_25192D300();
        uint64_t v20 = sub_25192D920();
        uint64_t v21 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v22 = v20 & ~v21;
        unint64_t v23 = v22 >> 6;
        uint64_t v24 = 1 << v22;
        if (((1 << v22) & *(void *)(v10 + 8 * (v22 >> 6))) != 0) {
          break;
        }
LABEL_6:
        uint64_t result = swift_bridgeObjectRelease();
        int64_t v6 = v62;
        uint64_t v5 = a3;
        uint64_t v4 = a4;
      }
      uint64_t v25 = *(void *)(a3 + 48);
      uint64_t v26 = (void *)(v25 + 16 * v22);
      BOOL v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_25192D810() & 1) == 0)
      {
        uint64_t v28 = ~v21;
        for (unint64_t i = v22 + 1; ; unint64_t i = v30 + 1)
        {
          unint64_t v30 = i & v28;
          if (((*(void *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0) {
            break;
          }
          unint64_t v31 = (void *)(v25 + 16 * v30);
          BOOL v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_25192D810() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v23 = v30 >> 6;
            uint64_t v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_38:
      int64_t v6 = v62;
      uint64_t v5 = a3;
      v57[v23] |= v24;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_82;
      }
    }
  }
  int64_t v34 = 0;
  uint64_t v60 = a3 + 56;
  uint64_t v61 = 0;
  uint64_t v35 = 1 << *(unsigned char *)(a3 + 32);
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  else {
    uint64_t v36 = -1;
  }
  unint64_t v37 = v36 & *(void *)(a3 + 56);
  int64_t v63 = (unint64_t)(v35 + 63) >> 6;
  uint64_t v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      unint64_t v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      unint64_t v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    int64_t v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      int64_t v34 = v41 + 1;
      if (v41 + 1 >= v63) {
        goto LABEL_79;
      }
      unint64_t v42 = *(void *)(v60 + 8 * v34);
      if (!v42)
      {
        int64_t v34 = v41 + 2;
        if (v41 + 2 >= v63) {
          goto LABEL_79;
        }
        unint64_t v42 = *(void *)(v60 + 8 * v34);
        if (!v42) {
          break;
        }
      }
    }
LABEL_62:
    unint64_t v37 = (v42 - 1) & v42;
    unint64_t v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    uint64_t v44 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v40);
    uint64_t v46 = *v44;
    uint64_t v45 = v44[1];
    sub_25192D8D0();
    swift_bridgeObjectRetain();
    sub_25192D300();
    uint64_t v47 = sub_25192D920();
    uint64_t v48 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v49 = v47 & ~v48;
    if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
      goto LABEL_46;
    }
    uint64_t v50 = *(void *)(a4 + 48);
    unint64_t v51 = (void *)(v50 + 16 * v49);
    BOOL v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_25192D810() & 1) != 0)
    {
LABEL_76:
      uint64_t result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v5 = a3;
      uint64_t v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        sub_25192BA80();
        return sub_2518CBFAC(v57, a2, v61, v5);
      }
    }
    else
    {
      uint64_t v53 = ~v48;
      while (1)
      {
        unint64_t v49 = (v49 + 1) & v53;
        if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
          break;
        }
        uint64_t v54 = (void *)(v50 + 16 * v49);
        BOOL v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_25192D810() & 1) != 0) {
          goto LABEL_76;
        }
      }
LABEL_46:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v5 = a3;
      uint64_t v4 = a4;
    }
  }
  int64_t v43 = v41 + 3;
  if (v43 >= v63) {
    goto LABEL_79;
  }
  unint64_t v42 = *(void *)(v60 + 8 * v43);
  if (v42)
  {
    int64_t v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    int64_t v34 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v34 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v34);
    ++v43;
    if (v42) {
      goto LABEL_62;
    }
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_2518CD9F4(uint64_t a1)
{
  uint64_t v2 = sub_25192CBE0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  int64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  unint64_t v9 = (char *)&v25 - v8;
  MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)&v25 - v10;
  sub_2518D6628(&qword_269B56D68, MEMORY[0x263F48B78]);
  uint64_t result = sub_25192D4B0();
  int64_t v13 = 0;
  uint64_t v29 = a1;
  uint64_t v30 = result;
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v15 = a1 + 64;
  uint64_t v14 = v16;
  uint64_t v17 = 1 << *(unsigned char *)(v15 - 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v14;
  uint64_t v26 = v15;
  int64_t v27 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v28 = v3 + 16;
  while (1)
  {
    if (v19)
    {
      unint64_t v20 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v22 >= v27) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v27) {
        goto LABEL_24;
      }
      unint64_t v23 = *(void *)(v26 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v27) {
          goto LABEL_24;
        }
        unint64_t v23 = *(void *)(v26 + 8 * v13);
        if (!v23)
        {
          int64_t v13 = v22 + 3;
          if (v22 + 3 >= v27) {
            goto LABEL_24;
          }
          unint64_t v23 = *(void *)(v26 + 8 * v13);
          if (!v23)
          {
            int64_t v13 = v22 + 4;
            if (v22 + 4 >= v27) {
              goto LABEL_24;
            }
            unint64_t v23 = *(void *)(v26 + 8 * v13);
            if (!v23)
            {
              int64_t v13 = v22 + 5;
              if (v22 + 5 >= v27)
              {
LABEL_24:
                swift_release();
                return v30;
              }
              unint64_t v23 = *(void *)(v26 + 8 * v13);
              int64_t v24 = v22 + 5;
              if (!v23) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_23:
    unint64_t v19 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v11, *(void *)(v29 + 56) + *(void *)(v3 + 72) * v21, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
    sub_2518CEDDC((uint64_t)v9, v6);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v27) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_23;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2518CDD14(uint64_t a1)
{
  uint64_t v2 = sub_25192CD30();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  int64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  unint64_t v9 = (char *)&v25 - v8;
  MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)&v25 - v10;
  sub_2518D6628(&qword_269B56D50, MEMORY[0x263F48C28]);
  uint64_t result = sub_25192D4B0();
  int64_t v13 = 0;
  uint64_t v29 = a1;
  uint64_t v30 = result;
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v15 = a1 + 64;
  uint64_t v14 = v16;
  uint64_t v17 = 1 << *(unsigned char *)(v15 - 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v14;
  uint64_t v26 = v15;
  int64_t v27 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v28 = v3 + 16;
  while (1)
  {
    if (v19)
    {
      unint64_t v20 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v22 >= v27) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v27) {
        goto LABEL_24;
      }
      unint64_t v23 = *(void *)(v26 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v27) {
          goto LABEL_24;
        }
        unint64_t v23 = *(void *)(v26 + 8 * v13);
        if (!v23)
        {
          int64_t v13 = v22 + 3;
          if (v22 + 3 >= v27) {
            goto LABEL_24;
          }
          unint64_t v23 = *(void *)(v26 + 8 * v13);
          if (!v23)
          {
            int64_t v13 = v22 + 4;
            if (v22 + 4 >= v27) {
              goto LABEL_24;
            }
            unint64_t v23 = *(void *)(v26 + 8 * v13);
            if (!v23)
            {
              int64_t v13 = v22 + 5;
              if (v22 + 5 >= v27)
              {
LABEL_24:
                swift_release();
                return v30;
              }
              unint64_t v23 = *(void *)(v26 + 8 * v13);
              int64_t v24 = v22 + 5;
              if (!v23) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_23:
    unint64_t v19 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v11, *(void *)(v29 + 56) + *(void *)(v3 + 72) * v21, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
    sub_2518CE034((uint64_t)v9, v6);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v27) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_23;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2518CE034(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_25192CD30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_2518D6628(&qword_269B56D50, MEMORY[0x263F48C28]);
  swift_bridgeObjectRetain();
  BOOL v33 = a2;
  uint64_t v11 = sub_25192D200();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      unint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_2518D6628(&qword_269B56D58, MEMORY[0x263F48C28]);
      char v21 = sub_25192D230();
      int64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2518CE358((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_2518CE358(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_25192CD30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 <= v10)
  {
    if (a3) {
      sub_2518CE9D4();
    }
    else {
      sub_2518CE60C();
    }
    uint64_t v12 = *v3;
    sub_2518D6628(&qword_269B56D50, MEMORY[0x263F48C28]);
    uint64_t v13 = sub_25192D200();
    uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
    a2 = v13 & ~v14;
    uint64_t v30 = v12;
    uint64_t v15 = v12 + 56;
    if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v16 = ~v14;
      unint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
      uint64_t v18 = v7 + 16;
      uint64_t v17 = v19;
      uint64_t v20 = *(void *)(v18 + 56);
      do
      {
        v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
        sub_2518D6628(&qword_269B56D58, MEMORY[0x263F48C28]);
        char v21 = sub_25192D230();
        (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
        if (v21) {
          goto LABEL_14;
        }
        a2 = (a2 + 1) & v16;
      }
      while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
  else if ((a3 & 1) == 0)
  {
    sub_2518CF3B4(MEMORY[0x263F48C28], &qword_269B56D60);
  }
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_14:
  uint64_t result = sub_25192D840();
  __break(1u);
  return result;
}

uint64_t sub_2518CE60C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25192CD30();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56D60);
  uint64_t v7 = sub_25192D600();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_36:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  uint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = sub_25192BA80();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_25;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v20 >= v36) {
      goto LABEL_34;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_34;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_34;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21)
        {
          int64_t v16 = v20 + 3;
          if (v20 + 3 >= v36) {
            goto LABEL_34;
          }
          unint64_t v21 = *(void *)(v35 + 8 * v16);
          if (!v21)
          {
            int64_t v16 = v20 + 4;
            if (v20 + 4 >= v36)
            {
LABEL_34:
              uint64_t result = swift_release_n();
              uint64_t v1 = v34;
              goto LABEL_36;
            }
            unint64_t v21 = *(void *)(v35 + 8 * v16);
            int64_t v22 = v20 + 4;
            if (!v21) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_25:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_2518D6628(&qword_269B56D50, MEMORY[0x263F48C28]);
    uint64_t result = sub_25192D200();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_34;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_24;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_2518CE9D4()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_25192CD30();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  int64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56D60);
  uint64_t v5 = sub_25192D600();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v38 = (void *)(v4 + 56);
    uint64_t v39 = v2;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    int64_t v36 = v0;
    int64_t v37 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v5 + 56;
    uint64_t result = sub_25192BA80();
    int64_t v13 = 0;
    uint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v37) {
          goto LABEL_34;
        }
        unint64_t v20 = v38[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v37) {
            goto LABEL_34;
          }
          unint64_t v20 = v38[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v37) {
              goto LABEL_34;
            }
            unint64_t v20 = v38[v21];
            if (!v20)
            {
              int64_t v21 = v13 + 4;
              if (v13 + 4 >= v37) {
                goto LABEL_34;
              }
              unint64_t v20 = v38[v21];
              if (!v20)
              {
                int64_t v21 = v13 + 5;
                if (v13 + 5 >= v37)
                {
LABEL_34:
                  swift_release();
                  uint64_t v1 = v36;
                  uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                  if (v34 >= 64) {
                    bzero(v38, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                  }
                  else {
                    *uint64_t v38 = -1 << v34;
                  }
                  *(void *)(v4 + 16) = 0;
                  break;
                }
                unint64_t v20 = v38[v21];
                for (uint64_t i = v13 + 5; !v20; ++i)
                {
                  int64_t v21 = i + 1;
                  if (__OFADD__(i, 1)) {
                    goto LABEL_40;
                  }
                  if (v21 >= v37) {
                    goto LABEL_34;
                  }
                  unint64_t v20 = v38[v21];
                }
              }
            }
          }
        }
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      sub_2518D6628(&qword_269B56D50, MEMORY[0x263F48C28]);
      uint64_t result = sub_25192D200();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_2518CEDDC(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_25192CBE0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_2518D6628(&qword_269B56D68, MEMORY[0x263F48B78]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_25192D200();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    unint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    unint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    unint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      unint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_2518D6628(&qword_269B56D70, MEMORY[0x263F48B78]);
      char v21 = sub_25192D230();
      int64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2518CF100((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_2518CF100(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_25192CBE0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 <= v10)
  {
    if (a3) {
      sub_2518CFA44();
    }
    else {
      sub_2518CF67C();
    }
    uint64_t v12 = *v3;
    sub_2518D6628(&qword_269B56D68, MEMORY[0x263F48B78]);
    uint64_t v13 = sub_25192D200();
    uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
    a2 = v13 & ~v14;
    uint64_t v30 = v12;
    uint64_t v15 = v12 + 56;
    if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v16 = ~v14;
      unint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
      uint64_t v18 = v7 + 16;
      unint64_t v17 = v19;
      uint64_t v20 = *(void *)(v18 + 56);
      do
      {
        v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
        sub_2518D6628(&qword_269B56D70, MEMORY[0x263F48B78]);
        char v21 = sub_25192D230();
        (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
        if (v21) {
          goto LABEL_14;
        }
        a2 = (a2 + 1) & v16;
      }
      while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
  else if ((a3 & 1) == 0)
  {
    sub_2518CF3B4(MEMORY[0x263F48B78], &qword_269B56D78);
  }
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_14:
  uint64_t result = sub_25192D840();
  __break(1u);
  return result;
}

void *sub_2518CF3B4(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v9 = *v2;
  uint64_t v10 = sub_25192D5F0();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_31:
    *uint64_t v4 = v11;
    return result;
  }
  uint64_t result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  BOOL v26 = v4;
  uint64_t v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    uint64_t result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v22 >= v28) {
      goto LABEL_29;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_29;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_29;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23)
        {
          int64_t v15 = v22 + 3;
          if (v22 + 3 >= v28) {
            goto LABEL_29;
          }
          unint64_t v23 = *((void *)v27 + v15);
          if (!v23)
          {
            int64_t v15 = v22 + 4;
            if (v22 + 4 >= v28)
            {
LABEL_29:
              uint64_t result = (void *)swift_release();
              uint64_t v4 = v26;
              goto LABEL_31;
            }
            unint64_t v23 = *((void *)v27 + v15);
            int64_t v24 = v22 + 4;
            if (!v23) {
              break;
            }
          }
        }
      }
    }
LABEL_28:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_29;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_28;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_2518CF67C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25192CBE0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56D78);
  uint64_t v7 = sub_25192D600();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_36:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  uint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = sub_25192BA80();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_25;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v20 >= v36) {
      goto LABEL_34;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_34;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_34;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21)
        {
          int64_t v16 = v20 + 3;
          if (v20 + 3 >= v36) {
            goto LABEL_34;
          }
          unint64_t v21 = *(void *)(v35 + 8 * v16);
          if (!v21)
          {
            int64_t v16 = v20 + 4;
            if (v20 + 4 >= v36)
            {
LABEL_34:
              uint64_t result = swift_release_n();
              uint64_t v1 = v34;
              goto LABEL_36;
            }
            unint64_t v21 = *(void *)(v35 + 8 * v16);
            int64_t v22 = v20 + 4;
            if (!v21) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_25:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_2518D6628(&qword_269B56D68, MEMORY[0x263F48B78]);
    uint64_t result = sub_25192D200();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_34;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_24;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_2518CFA44()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_25192CBE0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  int64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B56D78);
  uint64_t v5 = sub_25192D600();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v38 = (void *)(v4 + 56);
    uint64_t v39 = v2;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    int64_t v36 = v0;
    int64_t v37 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v5 + 56;
    uint64_t result = sub_25192BA80();
    int64_t v13 = 0;
    uint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v37) {
          goto LABEL_34;
        }
        unint64_t v20 = v38[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v37) {
            goto LABEL_34;
          }
          unint64_t v20 = v38[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v37) {
              goto LABEL_34;
            }
            unint64_t v20 = v38[v21];
            if (!v20)
            {
              int64_t v21 = v13 + 4;
              if (v13 + 4 >= v37) {
                goto LABEL_34;
              }
              unint64_t v20 = v38[v21];
              if (!v20)
              {
                int64_t v21 = v13 + 5;
                if (v13 + 5 >= v37)
                {
LABEL_34:
                  swift_release();
                  uint64_t v1 = v36;
                  uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                  if (v34 >= 64) {
                    bzero(v38, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                  }
                  else {
                    *uint64_t v38 = -1 << v34;
                  }
                  *(void *)(v4 + 16) = 0;
                  break;
                }
                unint64_t v20 = v38[v21];
                for (uint64_t i = v13 + 5; !v20; ++i)
                {
                  int64_t v21 = i + 1;
                  if (__OFADD__(i, 1)) {
                    goto LABEL_40;
                  }
                  if (v21 >= v37) {
                    goto LABEL_34;
                  }
                  unint64_t v20 = v38[v21];
                }
              }
            }
          }
        }
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      sub_2518D6628(&qword_269B56D68, MEMORY[0x263F48B78]);
      uint64_t result = sub_25192D200();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_2518CFE4C(uint64_t a1, uint64_t a2)
{
  sub_25192D920();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_19;
    }
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_25192D8E0();
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    if (!v13) {
      break;
    }
LABEL_16:
    uint64_t v6 = (v13 - 1) & v13;
LABEL_5:
    sub_25192D8D0();
    swift_bridgeObjectRetain();
    sub_25192D300();
    uint64_t v11 = sub_25192D920();
    uint64_t result = swift_bridgeObjectRelease();
    v9 ^= v11;
  }
  int64_t v14 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_17;
  }
  uint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_17;
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    ++v14;
    if (v13) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_2518CFFE4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_2518D0084(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_2518D0168@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || (uint64_t v4 = result, 1 << *(unsigned char *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(a3 + 36) != a2)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v6 = *(void *)(a3 + 48);
  uint64_t v7 = sub_25192BD10();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  uint64_t v10 = v6 + *(void *)(v8 + 72) * v4;
  return v9(a4, v10, v7);
}

uint64_t _s14HomeAppIntents12DeviceEntityV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a2 + 56);
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  uint64_t v11 = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease_n();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease_n();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unsigned __int16 v14 = v15;
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25192B740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v13[0] = v13[1];
  if (_s14HomeAppIntents10DeviceTypeO2eeoiySbAC_ACtFZ_0(&v14, v13))
  {
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25192B740();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v3 = v15;
    uint64_t v4 = v16;
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25192B740();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    if (v3 == v15 && v4 == v16)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v6 = sub_25192D810();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v5 = 0;
      if ((v6 & 1) == 0) {
        return v5 & 1;
      }
    }
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25192B740();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v8 = v15;
    uint64_t v7 = v16;
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    sub_25192BA80();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25192B740();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    if (v8 == v15 && v7 == v16)
    {
      swift_bridgeObjectRelease_n();
LABEL_11:
      char v5 = sub_2518BB8CC(v11, v12);
      return v5 & 1;
    }
    char v9 = sub_25192D810();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = 0;
    if (v9) {
      goto LABEL_11;
    }
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_2518D0AD0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2518D0ADC(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 32;
  uint64_t v6 = MEMORY[0x263F8EE78];
  do
  {
    if (v4 <= v2) {
      unint64_t v7 = v2;
    }
    else {
      unint64_t v7 = v4;
    }
    while (1)
    {
      if (v4 == v7)
      {
        __break(1u);
        return result;
      }
      uint64_t v8 = (long long *)(v5 + (v4 << 6));
      long long v9 = v8[1];
      long long v20 = *v8;
      long long v21 = v9;
      long long v10 = v8[3];
      long long v22 = v8[2];
      long long v23 = v10;
      ++v4;
      uint64_t v11 = *(void *)(a2 + 16);
      if (v11) {
        break;
      }
LABEL_6:
      if (v4 == v2) {
        return v6;
      }
    }
    sub_2517E464C((uint64_t)&v20);
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    while (1)
    {
      unsigned __int16 v19 = *(_WORD *)(a2 + 2 * v12 + 32);
      if (sub_2518C1794(&v19, (uint64_t)&v20)) {
        break;
      }
      if (v11 == ++v12)
      {
        swift_bridgeObjectRelease();
        uint64_t result = sub_2517E46D8((uint64_t)&v20);
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v6;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_2518C3860(0, *(void *)(v6 + 16) + 1, 1);
      uint64_t v6 = v24;
    }
    unint64_t v14 = *(void *)(v6 + 16);
    unint64_t v13 = *(void *)(v6 + 24);
    if (v14 >= v13 >> 1)
    {
      uint64_t result = sub_2518C3860(v13 > 1, v14 + 1, 1);
      uint64_t v6 = v24;
    }
    *(void *)(v6 + 16) = v14 + 1;
    uint64_t v15 = (_OWORD *)(v6 + (v14 << 6));
    long long v16 = v20;
    long long v17 = v21;
    long long v18 = v23;
    v15[4] = v22;
    v15[5] = v18;
    v15[2] = v16;
    v15[3] = v17;
  }
  while (v4 != v2);
  return v6;
}

uint64_t sub_2518D0C70(uint64_t result, void *a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v4 = 0;
  uint64_t v28 = result + 32;
  uint64_t v26 = a2 + 5;
  uint64_t v24 = a2 + 7;
  uint64_t v5 = MEMORY[0x263F8EE78];
  unint64_t v27 = *(void *)(result + 16);
  do
  {
    uint64_t v25 = v5;
    if (v4 <= v2) {
      unint64_t v6 = v2;
    }
    else {
      unint64_t v6 = v4;
    }
    unint64_t v29 = v6;
    while (1)
    {
      if (v4 == v29) {
        goto LABEL_38;
      }
      unint64_t v7 = (long long *)(v28 + (v4 << 6));
      long long v31 = *v7;
      long long v33 = v7[2];
      long long v34 = v7[1];
      long long v32 = v7[3];
      unint64_t v30 = v4 + 1;
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_25192B740();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v8 = v37;
      uint64_t v9 = a2[2];
      if (!v9) {
        goto LABEL_21;
      }
      uint64_t v10 = v36;
      if (a2[4] == v36 && a2[5] == v37) {
        break;
      }
      uint64_t result = sub_25192D810();
      if (result) {
        break;
      }
      if (v9 != 1)
      {
        uint64_t v11 = v24;
        uint64_t v12 = 1;
        while (1)
        {
          uint64_t v13 = v12 + 1;
          if (__OFADD__(v12, 1)) {
            break;
          }
          if (*(v11 - 1) == v10 && *v11 == v8) {
            goto LABEL_28;
          }
          uint64_t result = sub_25192D810();
          if (result) {
            goto LABEL_28;
          }
          v11 += 2;
          ++v12;
          if (v13 == v9) {
            goto LABEL_21;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
        return result;
      }
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_25192D4B0();
      uint64_t v35 = v15;
      long long v16 = v26;
      if (v9)
      {
        do
        {
          uint64_t v17 = *(v16 - 1);
          uint64_t v18 = *v16;
          swift_bridgeObjectRetain();
          sub_2518C59BC(&v36, v17, v18);
          swift_bridgeObjectRelease();
          v16 += 2;
          --v9;
        }
        while (v9);
        swift_bridgeObjectRelease();
        uint64_t v19 = v35;
      }
      else
      {
        uint64_t v19 = v15;
        swift_bridgeObjectRelease();
      }
      unint64_t v2 = v27;
      uint64_t v20 = *(void *)(sub_2518CD32C(v32, v19) + 16);
      swift_release();
      unint64_t v4 = v30;
      if (v20) {
        goto LABEL_29;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (v30 == v27) {
        return v25;
      }
    }
LABEL_28:
    swift_bridgeObjectRelease();
    unint64_t v2 = v27;
    unint64_t v4 = v30;
LABEL_29:
    uint64_t v5 = v25;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v38 = v25;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_2518C3860(0, *(void *)(v25 + 16) + 1, 1);
      uint64_t v5 = v38;
    }
    unint64_t v22 = *(void *)(v5 + 16);
    unint64_t v21 = *(void *)(v5 + 24);
    if (v22 >= v21 >> 1)
    {
      uint64_t result = sub_2518C3860(v21 > 1, v22 + 1, 1);
      uint64_t v5 = v38;
    }
    *(void *)(v5 + 16) = v22 + 1;
    long long v23 = (_OWORD *)(v5 + (v22 << 6));
    v23[2] = v31;
    v23[3] = v34;
    v23[4] = v33;
    v23[5] = v32;
  }
  while (v4 != v2);
  return v5;
}

uint64_t sub_2518D1070(uint64_t result, void *a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v4 = 0;
  uint64_t v28 = result + 32;
  uint64_t v26 = a2 + 5;
  uint64_t v24 = a2 + 7;
  uint64_t v5 = MEMORY[0x263F8EE78];
  unint64_t v27 = *(void *)(result + 16);
  do
  {
    uint64_t v25 = v5;
    if (v4 <= v2) {
      unint64_t v6 = v2;
    }
    else {
      unint64_t v6 = v4;
    }
    unint64_t v29 = v6;
    while (1)
    {
      if (v4 == v29) {
        goto LABEL_38;
      }
      unint64_t v7 = (long long *)(v28 + (v4 << 6));
      long long v31 = *v7;
      long long v33 = v7[2];
      long long v34 = v7[1];
      long long v32 = v7[3];
      unint64_t v30 = v4 + 1;
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_25192B740();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v8 = v37;
      uint64_t v9 = a2[2];
      if (!v9) {
        goto LABEL_21;
      }
      uint64_t v10 = v36;
      if (a2[4] == v36 && a2[5] == v37) {
        break;
      }
      uint64_t result = sub_25192D810();
      if (result) {
        break;
      }
      if (v9 != 1)
      {
        uint64_t v11 = v24;
        uint64_t v12 = 1;
        while (1)
        {
          uint64_t v13 = v12 + 1;
          if (__OFADD__(v12, 1)) {
            break;
          }
          if (*(v11 - 1) == v10 && *v11 == v8) {
            goto LABEL_28;
          }
          uint64_t result = sub_25192D810();
          if (result) {
            goto LABEL_28;
          }
          v11 += 2;
          ++v12;
          if (v13 == v9) {
            goto LABEL_21;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
        return result;
      }
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_25192D4B0();
      uint64_t v35 = v15;
      long long v16 = v26;
      if (v9)
      {
        do
        {
          uint64_t v17 = *(v16 - 1);
          uint64_t v18 = *v16;
          swift_bridgeObjectRetain();
          sub_2518C59BC(&v36, v17, v18);
          swift_bridgeObjectRelease();
          v16 += 2;
          --v9;
        }
        while (v9);
        swift_bridgeObjectRelease();
        uint64_t v19 = v35;
      }
      else
      {
        uint64_t v19 = v15;
        swift_bridgeObjectRelease();
      }
      unint64_t v2 = v27;
      ++v4;
      uint64_t v20 = *(void *)(sub_2518CD32C(*((uint64_t *)&v32 + 1), v19) + 16);
      swift_release();
      if (v20) {
        goto LABEL_29;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (v30 == v27) {
        return v25;
      }
    }
LABEL_28:
    swift_bridgeObjectRelease();
    unint64_t v2 = v27;
    ++v4;
LABEL_29:
    uint64_t v5 = v25;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v38 = v25;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_2518C3860(0, *(void *)(v25 + 16) + 1, 1);
      uint64_t v5 = v38;
    }
    unint64_t v22 = *(void *)(v5 + 16);
    unint64_t v21 = *(void *)(v5 + 24);
    if (v22 >= v21 >> 1)
    {
      uint64_t result = sub_2518C3860(v21 > 1, v22 + 1, 1);
      uint64_t v5 = v38;
    }
    *(void *)(v5 + 16) = v22 + 1;
    long long v23 = (_OWORD *)(v5 + (v22 << 6));
    v23[2] = v31;
    v23[3] = v34;
    v23[4] = v33;
    v23[5] = v32;
  }
  while (v4 != v2);
  return v5;
}

uint64_t sub_2518D1470(uint64_t result, void *a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v3 = a2;
    unint64_t v4 = 0;
    uint64_t v19 = result + 32;
    long long v16 = a2 + 7;
    uint64_t v17 = MEMORY[0x263F8EE78];
    unint64_t v18 = *(void *)(result + 16);
    while (1)
    {
      if (v4 <= v2) {
        unint64_t v5 = v2;
      }
      else {
        unint64_t v5 = v4;
      }
      unint64_t v20 = v5;
      while (1)
      {
        if (v4 == v20) {
          goto LABEL_32;
        }
        unint64_t v6 = (long long *)(v19 + (v4 << 6));
        long long v23 = *v6;
        long long v26 = v6[1];
        long long v24 = v6[3];
        long long v25 = v6[2];
        unint64_t v22 = v4 + 1;
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_25192B740();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v7 = v3[2];
        if (!v7) {
          goto LABEL_7;
        }
        if (a2[4] == v27 && a2[5] == v28) {
          break;
        }
        uint64_t result = sub_25192D810();
        if (result) {
          break;
        }
        if (v7 != 1)
        {
          uint64_t v8 = v16;
          uint64_t v9 = 1;
          while (1)
          {
            uint64_t v10 = v9 + 1;
            if (__OFADD__(v9, 1)) {
              break;
            }
            if (*(v8 - 1) == v27 && *v8 == v28) {
              goto LABEL_23;
            }
            uint64_t result = sub_25192D810();
            if (result) {
              goto LABEL_23;
            }
            v8 += 2;
            ++v9;
            if (v10 == v7) {
              goto LABEL_7;
            }
          }
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v4 = v22;
        uint64_t v3 = a2;
        if (v22 == v18) {
          return v17;
        }
      }
LABEL_23:
      swift_bridgeObjectRelease();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v12 = v17;
      if ((result & 1) == 0)
      {
        uint64_t result = sub_2518C3860(0, *(void *)(v17 + 16) + 1, 1);
        uint64_t v12 = v17;
      }
      uint64_t v3 = a2;
      unint64_t v14 = *(void *)(v12 + 16);
      unint64_t v13 = *(void *)(v12 + 24);
      if (v14 >= v13 >> 1)
      {
        uint64_t result = sub_2518C3860(v13 > 1, v14 + 1, 1);
        uint64_t v12 = v17;
      }
      *(void *)(v12 + 16) = v14 + 1;
      uint64_t v17 = v12;
      uint64_t v15 = (_OWORD *)(v12 + (v14 << 6));
      v15[2] = v23;
      v15[3] = v26;
      v15[4] = v25;
      v15[5] = v24;
      unint64_t v2 = v18;
      unint64_t v4 = v22;
      if (v22 == v18) {
        return v17;
      }
    }
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_2518D17D0(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v4 = 0;
  unint64_t v13 = v3 - 1;
  uint64_t v14 = result + 80;
  uint64_t v5 = MEMORY[0x263F8EE78];
  unint64_t v15 = *(void *)(result + 16);
  do
  {
    if (v4 <= v3) {
      unint64_t v6 = v3;
    }
    else {
      unint64_t v6 = v4;
    }
    unint64_t v17 = v6;
    uint64_t v7 = (_OWORD *)(v14 + (v4 << 6));
    unint64_t v8 = v4;
    while (1)
    {
      if (v17 == v8)
      {
        __break(1u);
        return result;
      }
      unint64_t v20 = v8;
      long long v21 = *(v7 - 3);
      long long v24 = *(v7 - 2);
      uint64_t v19 = v7;
      long long v22 = *v7;
      long long v23 = *(v7 - 1);
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_25192B740();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      if (v25 == a2 && v26 == a3) {
        break;
      }
      char v9 = sub_25192D810();
      swift_bridgeObjectRelease();
      if (v9 & 1) != 0 || (sub_251886350(a2, a3, *((uint64_t *)&v22 + 1))) {
        goto LABEL_15;
      }
      ++v8;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      uint64_t v7 = v19 + 4;
      if (v15 == v20 + 1) {
        return v5;
      }
    }
    swift_bridgeObjectRelease();
LABEL_15:
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0) {
      uint64_t result = sub_2518C3860(0, *(void *)(v5 + 16) + 1, 1);
    }
    unint64_t v11 = *(void *)(v5 + 16);
    unint64_t v10 = *(void *)(v5 + 24);
    if (v11 >= v10 >> 1) {
      uint64_t result = sub_2518C3860(v10 > 1, v11 + 1, 1);
    }
    unint64_t v4 = v8 + 1;
    *(void *)(v5 + 16) = v11 + 1;
    uint64_t v12 = (_OWORD *)(v5 + (v11 << 6));
    void v12[2] = v21;
    v12[3] = v24;
    void v12[4] = v23;
    v12[5] = v22;
    unint64_t v3 = v15;
  }
  while (v13 != v8);
  return v5;
}

uint64_t sub_2518D1B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56D08);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BE0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v53 = (uint64_t)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_25192CCD0();
  uint64_t v52 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v51 = a3;
  unint64_t v49 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    uint64_t v54 = MEMORY[0x263F8EE78];
    uint64_t v17 = *(void *)(a4 + 16);
    if (v17)
    {
      uint64_t v18 = *(void *)(type metadata accessor for RoomEntity() - 8);
      uint64_t v19 = a4 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
      uint64_t v20 = *(void *)(v18 + 72);
      swift_bridgeObjectRetain();
      uint64_t v21 = v52;
      do
      {
        uint64_t v22 = sub_2518C1BBC(v19, a1);
        sub_2517F0970(v22);
        v19 += v20;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
      uint64_t v16 = v54;
      goto LABEL_21;
    }
  }
  else if (a3)
  {
    uint64_t v47 = v13;
    uint64_t v48 = 0;
    uint64_t v23 = MEMORY[0x263F8EE78];
    uint64_t v54 = MEMORY[0x263F8EE78];
    uint64_t v24 = *(void *)(a3 + 16);
    if (v24)
    {
      uint64_t v45 = a2;
      uint64_t v46 = 0;
      uint64_t v25 = *(void *)(type metadata accessor for ZoneEntity() - 8);
      uint64_t v26 = a3 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
      uint64_t v27 = *(void *)(v25 + 72);
      swift_bridgeObjectRetain();
      uint64_t v50 = a1;
      do
      {
        uint64_t v29 = sub_25192C160();
        if (*(void *)(v29 + 16) && (unint64_t v30 = sub_251823860(v26), (v31 & 1) != 0))
        {
          unint64_t v32 = v30;
          uint64_t v33 = *(void *)(v29 + 56);
          uint64_t v34 = sub_25192BF60();
          uint64_t v35 = v27;
          uint64_t v36 = *(void *)(v34 - 8);
          (*(void (**)(char *, unint64_t, uint64_t))(v36 + 16))(v10, v33 + *(void *)(v36 + 72) * v32, v34);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v10, 0, 1, v34);
          uint64_t v27 = v35;
          a1 = v50;
        }
        else
        {
          uint64_t v34 = sub_25192BF60();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v10, 1, 1, v34);
        }
        swift_bridgeObjectRelease();
        sub_25192BF60();
        uint64_t v37 = *(void *)(v34 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v10, 1, v34) == 1)
        {
          sub_2517E16E0((uint64_t)v10, &qword_269B56D08);
          uint64_t v28 = MEMORY[0x263F8EE78];
        }
        else
        {
          uint64_t v28 = sub_25192BF50();
          (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v34);
        }
        sub_2517F0AC4(v28);
        v26 += v27;
        --v24;
      }
      while (v24);
      uint64_t v14 = swift_bridgeObjectRelease();
      uint64_t v23 = v54;
      a2 = v45;
    }
    MEMORY[0x270FA5388](v14);
    *(&v44 - 2) = a1;
    uint64_t v16 = sub_2518B10E0((void (*)(uint64_t *__return_ptr, char *))sub_2518D5958, (uint64_t)(&v44 - 4), v23);
    swift_bridgeObjectRelease();
    uint64_t v13 = v47;
    a4 = v48;
  }
  else
  {
    uint64_t v16 = sub_2518C2174(a1);
  }
  uint64_t v21 = v52;
LABEL_21:
  uint64_t v38 = v53;
  sub_2517E079C(a2, v53, &qword_269B53BE0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v38, 1, v13) == 1)
  {
    sub_2517E16E0(v38, &qword_269B53BE0);
    uint64_t v39 = MEMORY[0x263F8EE78];
  }
  else
  {
    int64_t v40 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v49, v38, v13);
    uint64_t v41 = sub_25192CC90();
    MEMORY[0x270FA5388](v41);
    uint64_t v42 = v51;
    *(&v44 - 4) = a4;
    *(&v44 - 3) = v42;
    *(&v44 - 2) = a1;
    uint64_t v39 = sub_2518B13A8((void (*)(uint64_t *__return_ptr, char *))sub_2518D6670, (uint64_t)(&v44 - 6), v41);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v40, v13);
  }
  uint64_t v54 = v16;
  sub_2517F0970(v39);
  return v54;
}

uint64_t sub_2518D211C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0) - 8);
  v4[9] = v5;
  v4[10] = *(void *)(v5 + 64);
  v4[11] = swift_task_alloc();
  uint64_t v6 = sub_25192D120();
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v7 = sub_25192D150();
  v4[15] = v7;
  v4[16] = *(void *)(v7 - 8);
  v4[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2518D22A0, 0, 0);
}

uint64_t sub_2518D22A0()
{
  int64_t v40 = v0;
  if (qword_269B53418 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_25192D1D0();
  v0[18] = __swift_project_value_buffer(v1, (uint64_t)qword_269B5A090);
  swift_bridgeObjectRetain_n();
  unint64_t v2 = sub_25192D1B0();
  os_log_type_t v3 = sub_25192D510();
  if (os_log_type_enabled(v2, v3))
  {
    unint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v39 = v5;
    *(_DWORD *)unint64_t v4 = 136315138;
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = MEMORY[0x2533A6BA0](v6, &type metadata for DeviceType);
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    v0[4] = sub_2517F0D04(v7, v9, &v39);
    sub_25192D580();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2517D6000, v2, v3, "Searching for devices with deviceTypes: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533A75D0](v5, -1, -1);
    MEMORY[0x2533A75D0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (qword_269B53420 != -1) {
    swift_once();
  }
  uint64_t v10 = v0[16];
  uint64_t v11 = v0[17];
  uint64_t v13 = v0[14];
  uint64_t v12 = v0[15];
  uint64_t v36 = v12;
  uint64_t v14 = v0[11];
  uint64_t v37 = v0[13];
  uint64_t v38 = v0[12];
  uint64_t v15 = v0[9];
  uint64_t v16 = v0[8];
  uint64_t v34 = v0[10];
  uint64_t v35 = v0[7];
  uint64_t v17 = v0[5];
  uint64_t v18 = v0[6];
  uint64_t v19 = __swift_project_value_buffer(v12, (uint64_t)qword_269B5A0A8);
  v0[19] = v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v11, v19, v12);
  sub_25192D110();
  sub_2517E079C(v18, v14, &qword_269B53BB0);
  unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v21 = (v34 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v17;
  sub_2517F7AB8(v14, v22 + v20, &qword_269B53BB0);
  *(void *)(v22 + v21) = v35;
  *(void *)(v22 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8)) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0[20] = sub_251922978(2, v13, sub_2518D5BFC);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v13, v38);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB8);
  uint64_t v23 = sub_25192C1D0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v24 + 72);
  unint64_t v26 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_25192DEA0;
  unint64_t v28 = v27 + v26;
  uint64_t v29 = *(void (**)(unint64_t, void, uint64_t))(v24 + 104);
  v29(v28, *MEMORY[0x263F48398], v23);
  v29(v28 + v25, *MEMORY[0x263F483A0], v23);
  uint64_t v30 = sub_2517F1A08(v27);
  v0[21] = v30;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  char v31 = (void *)swift_task_alloc();
  v0[22] = v31;
  *char v31 = v0;
  v31[1] = sub_2518D278C;
  uint64_t v32 = v0[6];
  return sub_251819E74(v32, v30, 0);
}

uint64_t sub_2518D278C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 184) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_2518D28AC, 0, 0);
}

uint64_t sub_2518D28AC()
{
  uint64_t v25 = v0;
  uint64_t v1 = v0[23];
  v24[0] = MEMORY[0x263F8EE78];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BD8);
    uint64_t v4 = v1
       + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
    uint64_t v5 = *(void *)(*(void *)(v3 - 8) + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v6 = v0[5];
      uint64_t v7 = sub_2518D1B00(v4, v4 + *(int *)(v3 + 48), v0[7], v0[8]);
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_2518D0ADC(v7, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2517F0970(v8);
      v4 += v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
    uint64_t v9 = v24[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x263F8EE78];
  }
  sub_251922D1C(2);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_25192D1B0();
  os_log_type_t v11 = sub_25192D510();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    v24[0] = v23;
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v14 = MEMORY[0x2533A6BA0](v13, &type metadata for DeviceEntity);
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    v0[2] = sub_2517F0D04(v14, v16, v24);
    sub_25192D580();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2080;
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = MEMORY[0x2533A6BA0](v17, &type metadata for DeviceType);
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    v0[3] = sub_2517F0D04(v18, v20, v24);
    sub_25192D580();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2517D6000, v10, v11, "Found deviceEntities: %s for deviceTypes: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533A75D0](v23, -1, -1);
    MEMORY[0x2533A75D0](v12, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v21 = (uint64_t (*)(uint64_t))v0[1];
  return v21(v9);
}

uint64_t sub_2518D2C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0) - 8);
  v4[9] = v5;
  v4[10] = *(void *)(v5 + 64);
  v4[11] = swift_task_alloc();
  uint64_t v6 = sub_25192D120();
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v7 = sub_25192D150();
  v4[15] = v7;
  v4[16] = *(void *)(v7 - 8);
  v4[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2518D2DC4, 0, 0);
}

uint64_t sub_2518D2DC4()
{
  int64_t v40 = v0;
  if (qword_269B53418 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_25192D1D0();
  v0[18] = __swift_project_value_buffer(v1, (uint64_t)qword_269B5A090);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_25192D1B0();
  os_log_type_t v3 = sub_25192D510();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v39 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = MEMORY[0x2533A6BA0](v6, MEMORY[0x263F8D310]);
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    v0[4] = sub_2517F0D04(v7, v9, &v39);
    sub_25192D580();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2517D6000, v2, v3, "Searching for devices with ids: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533A75D0](v5, -1, -1);
    MEMORY[0x2533A75D0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (qword_269B53420 != -1) {
    swift_once();
  }
  uint64_t v10 = v0[16];
  uint64_t v11 = v0[17];
  uint64_t v13 = v0[14];
  uint64_t v12 = v0[15];
  uint64_t v36 = v12;
  uint64_t v14 = v0[11];
  uint64_t v37 = v0[13];
  uint64_t v38 = v0[12];
  uint64_t v15 = v0[9];
  uint64_t v16 = v0[8];
  uint64_t v34 = v0[10];
  uint64_t v35 = v0[7];
  uint64_t v17 = v0[5];
  uint64_t v18 = v0[6];
  uint64_t v19 = __swift_project_value_buffer(v12, (uint64_t)qword_269B5A0A8);
  v0[19] = v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v11, v19, v12);
  sub_25192D110();
  sub_2517E079C(v18, v14, &qword_269B53BB0);
  unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v21 = (v34 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v17;
  sub_2517F7AB8(v14, v22 + v20, &qword_269B53BB0);
  *(void *)(v22 + v21) = v35;
  *(void *)(v22 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8)) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0[20] = sub_251922978(2, v13, sub_2518D594C);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v13, v38);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB8);
  uint64_t v23 = sub_25192C1D0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v24 + 72);
  unint64_t v26 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_25192DEA0;
  unint64_t v28 = v27 + v26;
  uint64_t v29 = *(void (**)(unint64_t, void, uint64_t))(v24 + 104);
  v29(v28, *MEMORY[0x263F48398], v23);
  v29(v28 + v25, *MEMORY[0x263F483A0], v23);
  uint64_t v30 = sub_2517F1A08(v27);
  v0[21] = v30;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  char v31 = (void *)swift_task_alloc();
  v0[22] = v31;
  *char v31 = v0;
  v31[1] = sub_2518D32B0;
  uint64_t v32 = v0[6];
  return sub_251819E74(v32, v30, 0);
}

uint64_t sub_2518D32B0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 184) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_2518D33D0, 0, 0);
}

uint64_t sub_2518D33D0()
{
  uint64_t v25 = v0;
  uint64_t v1 = v0[23];
  v24[0] = MEMORY[0x263F8EE78];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BD8);
    uint64_t v4 = v1
       + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
    uint64_t v5 = *(void *)(*(void *)(v3 - 8) + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v6 = (void *)v0[5];
      uint64_t v7 = sub_2518D1B00(v4, v4 + *(int *)(v3 + 48), v0[7], v0[8]);
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_2518D0C70(v7, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2517F0970(v8);
      v4 += v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
    uint64_t v9 = v24[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x263F8EE78];
  }
  sub_251922D1C(2);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_25192D1B0();
  os_log_type_t v11 = sub_25192D510();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    v24[0] = v23;
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v14 = MEMORY[0x2533A6BA0](v13, &type metadata for DeviceEntity);
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    v0[2] = sub_2517F0D04(v14, v16, v24);
    sub_25192D580();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2080;
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = MEMORY[0x2533A6BA0](v17, MEMORY[0x263F8D310]);
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    v0[3] = sub_2517F0D04(v18, v20, v24);
    sub_25192D580();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2517D6000, v10, v11, "Found deviceEntities: %s for ids: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533A75D0](v23, -1, -1);
    MEMORY[0x2533A75D0](v12, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v21 = (uint64_t (*)(uint64_t))v0[1];
  return v21(v9);
}

uint64_t sub_2518D3764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0) - 8);
  v4[9] = v5;
  v4[10] = *(void *)(v5 + 64);
  v4[11] = swift_task_alloc();
  uint64_t v6 = sub_25192D120();
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v7 = sub_25192D150();
  v4[15] = v7;
  v4[16] = *(void *)(v7 - 8);
  v4[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2518D38E8, 0, 0);
}

uint64_t sub_2518D38E8()
{
  int64_t v40 = v0;
  if (qword_269B53418 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_25192D1D0();
  v0[18] = __swift_project_value_buffer(v1, (uint64_t)qword_269B5A090);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_25192D1B0();
  os_log_type_t v3 = sub_25192D510();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v39 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = MEMORY[0x2533A6BA0](v6, MEMORY[0x263F8D310]);
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    v0[4] = sub_2517F0D04(v7, v9, &v39);
    sub_25192D580();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2517D6000, v2, v3, "Searching for devices with names: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533A75D0](v5, -1, -1);
    MEMORY[0x2533A75D0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (qword_269B53420 != -1) {
    swift_once();
  }
  uint64_t v10 = v0[16];
  uint64_t v11 = v0[17];
  uint64_t v13 = v0[14];
  uint64_t v12 = v0[15];
  uint64_t v36 = v12;
  uint64_t v14 = v0[11];
  uint64_t v37 = v0[13];
  uint64_t v38 = v0[12];
  uint64_t v15 = v0[9];
  uint64_t v16 = v0[8];
  uint64_t v34 = v0[10];
  uint64_t v35 = v0[7];
  uint64_t v17 = v0[5];
  uint64_t v18 = v0[6];
  uint64_t v19 = __swift_project_value_buffer(v12, (uint64_t)qword_269B5A0A8);
  v0[19] = v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v11, v19, v12);
  sub_25192D110();
  sub_2517E079C(v18, v14, &qword_269B53BB0);
  unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v21 = (v34 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v17;
  sub_2517F7AB8(v14, v22 + v20, &qword_269B53BB0);
  *(void *)(v22 + v21) = v35;
  *(void *)(v22 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8)) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0[20] = sub_251922978(2, v13, sub_2518D594C);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v13, v38);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB8);
  uint64_t v23 = sub_25192C1D0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v24 + 72);
  unint64_t v26 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_25192DEA0;
  unint64_t v28 = v27 + v26;
  uint64_t v29 = *(void (**)(unint64_t, void, uint64_t))(v24 + 104);
  v29(v28, *MEMORY[0x263F48398], v23);
  v29(v28 + v25, *MEMORY[0x263F483A0], v23);
  uint64_t v30 = sub_2517F1A08(v27);
  v0[21] = v30;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  char v31 = (void *)swift_task_alloc();
  v0[22] = v31;
  *char v31 = v0;
  v31[1] = sub_2518D3DD4;
  uint64_t v32 = v0[6];
  return sub_251819E74(v32, v30, 0);
}

uint64_t sub_2518D3DD4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 184) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_2518D3EF4, 0, 0);
}

uint64_t sub_2518D3EF4()
{
  uint64_t v25 = v0;
  uint64_t v1 = v0[23];
  v24[0] = MEMORY[0x263F8EE78];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BD8);
    uint64_t v4 = v1
       + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
    uint64_t v5 = *(void *)(*(void *)(v3 - 8) + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v6 = (void *)v0[5];
      uint64_t v7 = sub_2518D1B00(v4, v4 + *(int *)(v3 + 48), v0[7], v0[8]);
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_2518D1070(v7, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2517F0970(v8);
      v4 += v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
    uint64_t v9 = v24[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x263F8EE78];
  }
  sub_251922D1C(2);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_25192D1B0();
  os_log_type_t v11 = sub_25192D510();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    v24[0] = v23;
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v14 = MEMORY[0x2533A6BA0](v13, &type metadata for DeviceEntity);
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    v0[2] = sub_2517F0D04(v14, v16, v24);
    sub_25192D580();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2080;
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = MEMORY[0x2533A6BA0](v17, MEMORY[0x263F8D310]);
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    v0[3] = sub_2517F0D04(v18, v20, v24);
    sub_25192D580();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2517D6000, v10, v11, "Found deviceEntities: %s for names: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533A75D0](v23, -1, -1);
    MEMORY[0x2533A75D0](v12, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v21 = (uint64_t (*)(uint64_t))v0[1];
  return v21(v9);
}

uint64_t sub_2518D4288@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_2518C2288(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2518D42A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2518C2BAC(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_2518D42C4(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 208) = a2;
  *(void *)(v2 + 32) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BE0);
  *(void *)(v2 + 40) = swift_task_alloc();
  uint64_t v3 = sub_25192CCD0();
  *(void *)(v2 + 48) = v3;
  *(void *)(v2 + 56) = *(void *)(v3 - 8);
  *(void *)(v2 + 64) = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BD8);
  *(void *)(v2 + 72) = v4;
  *(void *)(v2 + 80) = *(void *)(v4 - 8);
  *(void *)(v2 + 88) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0);
  *(void *)(v2 + 96) = swift_task_alloc();
  uint64_t v5 = sub_25192D120();
  *(void *)(v2 + 104) = v5;
  *(void *)(v2 + 112) = *(void *)(v5 - 8);
  *(void *)(v2 + 120) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2518D44A4, 0, 0);
}

uint64_t sub_2518D44A4()
{
  char v31 = v0;
  if (qword_269B53418 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_25192D1D0();
  v0[16] = __swift_project_value_buffer(v1, (uint64_t)qword_269B5A090);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_25192D1B0();
  os_log_type_t v3 = sub_25192D510();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[4];
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v30 = v7;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B54EC8);
    uint64_t v9 = MEMORY[0x2533A6BA0](v5, v8);
    v0[3] = sub_2517F0D04(v9, v10, &v30);
    sub_25192D580();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2517D6000, v2, v3, "Searching for devices with comparators: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533A75D0](v7, -1, -1);
    MEMORY[0x2533A75D0](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (qword_269B53420 != -1) {
    swift_once();
  }
  uint64_t v12 = v0[14];
  uint64_t v11 = v0[15];
  uint64_t v14 = v0[12];
  uint64_t v13 = v0[13];
  uint64_t v15 = v0[4];
  uint64_t v16 = sub_25192D150();
  uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)qword_269B5A0A8);
  v0[17] = v17;
  sub_25192D110();
  swift_bridgeObjectRetain();
  v0[18] = sub_251926600(1, v11, v17, v15);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  uint64_t v18 = type metadata accessor for HomeEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v14, 1, 1, v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB8);
  uint64_t v19 = sub_25192C1D0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 72);
  unint64_t v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_25192DEA0;
  unint64_t v24 = v23 + v22;
  uint64_t v25 = *(void (**)(unint64_t, void, uint64_t))(v20 + 104);
  v25(v24, *MEMORY[0x263F48398], v19);
  v25(v24 + v21, *MEMORY[0x263F483A0], v19);
  uint64_t v26 = sub_2517F1A08(v23);
  v0[19] = v26;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v27 = (void *)swift_task_alloc();
  v0[20] = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_2518D48D4;
  uint64_t v28 = v0[12];
  return sub_251819E74(v28, v26, 1);
}

uint64_t sub_2518D48D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 96);
  *(void *)(*(void *)v1 + 168) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_2517E16E0(v2, &qword_269B53BB0);
  return MEMORY[0x270FA2498](sub_2518D4A18, 0, 0);
}

uint64_t sub_2518D4A18()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v40 = MEMORY[0x263F8EE78];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 80);
    uint64_t v35 = *(void *)(v0 + 72);
    uint64_t v4 = *(void *)(v0 + 56);
    uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v33 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    uint64_t v34 = *(void *)(v3 + 72);
    char v31 = (void (**)(uint64_t, uint64_t))(v4 + 8);
    uint64_t v32 = (void (**)(uint64_t, void, uint64_t))(v4 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v8 = *(void *)(v0 + 88);
      uint64_t v37 = *(void *)(v0 + 40);
      uint64_t v38 = *(void *)(v0 + 48);
      sub_2517E079C(v5, v8, &qword_269B53BD8);
      uint64_t v36 = v8 + *(int *)(v35 + 48);
      uint64_t v9 = sub_25192C170();
      uint64_t v10 = sub_25184708C(v9);
      uint64_t v11 = swift_task_alloc();
      *(void *)(v11 + 16) = v8;
      uint64_t v12 = sub_2517E93D8((void (*)(_OWORD *__return_ptr, char *))sub_2518D6688, v11, v10);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      uint64_t v13 = sub_25192C1A0();
      uint64_t v14 = sub_2518CD9F4(v13);
      uint64_t v15 = swift_task_alloc();
      *(void *)(v15 + 16) = v8;
      uint64_t v16 = sub_2517EAC2C((void (*)(_OWORD *__return_ptr, char *))sub_2518D66A0, v15, v14);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      uint64_t v17 = sub_25192C1C0();
      uint64_t v18 = sub_2518CDD14(v17);
      uint64_t v19 = swift_task_alloc();
      *(void *)(v19 + 16) = v8;
      uint64_t v20 = sub_2517EAC58((void (*)(_OWORD *__return_ptr, char *))sub_2518D66B8, v19, v18);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      sub_2517F0970(v16);
      sub_2517F0970(v20);
      sub_2517E079C(v36, v37, &qword_269B53BE0);
      if ((*v33)(v37, 1, v38) == 1)
      {
        sub_2517E16E0(*(void *)(v0 + 40), &qword_269B53BE0);
        uint64_t v6 = MEMORY[0x263F8EE78];
      }
      else
      {
        uint64_t v21 = *(void *)(v0 + 88);
        uint64_t v22 = *(void *)(v0 + 64);
        uint64_t v23 = *(void *)(v0 + 48);
        (*v32)(v22, *(void *)(v0 + 40), v23);
        uint64_t v24 = sub_25192CC90();
        uint64_t v25 = (void *)swift_task_alloc();
        v25[2] = 0;
        v25[3] = 0;
        v25[4] = v21;
        uint64_t v6 = sub_2518B13A8((void (*)(uint64_t *__return_ptr, char *))sub_2518D6670, (uint64_t)v25, v24);
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        (*v31)(v22, v23);
      }
      uint64_t v7 = *(void *)(v0 + 88);
      sub_2517F0970(v6);
      sub_2517E16E0(v7, &qword_269B53BD8);
      sub_2517F0970(v12);
      v5 += v34;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
    uint64_t v26 = v40;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = MEMORY[0x263F8EE78];
  }
  char v27 = *(unsigned char *)(v0 + 208);
  *(void *)(v0 + 176) = v26;
  uint64_t v39 = (uint64_t (*)(uint64_t, char, uint64_t))((char *)&dword_269B54EC0 + dword_269B54EC0);
  uint64_t v28 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v28;
  *uint64_t v28 = v0;
  v28[1] = sub_2518D4DE4;
  uint64_t v29 = *(void *)(v0 + 32);
  return v39(v29, v27 & 1, v26);
}

uint64_t sub_2518D4DE4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 192) = a1;
  *(void *)(v3 + 200) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_2518D5120;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_2518D4F00;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2518D4F00()
{
  uint64_t v13 = v0;
  sub_251922D1C(1);
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_25192D1B0();
  os_log_type_t v2 = sub_25192D510();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v12 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v6 = MEMORY[0x2533A6BA0](v5, &type metadata for DeviceEntity);
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    v0[2] = sub_2517F0D04(v6, v8, &v12);
    sub_25192D580();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2517D6000, v1, v2, "Found deviceEntities: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533A75D0](v4, -1, -1);
    MEMORY[0x2533A75D0](v3, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v10 = v0[24];
  return v9(v10);
}

uint64_t sub_2518D5120()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_2518D51DC()
{
  unint64_t result = qword_269B56C58;
  if (!qword_269B56C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56C58);
  }
  return result;
}

unint64_t sub_2518D5234()
{
  unint64_t result = qword_269B56C60;
  if (!qword_269B56C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56C60);
  }
  return result;
}

unint64_t sub_2518D528C()
{
  unint64_t result = qword_269B56C68;
  if (!qword_269B56C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56C68);
  }
  return result;
}

unint64_t sub_2518D52E4()
{
  unint64_t result = qword_269B56C70;
  if (!qword_269B56C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56C70);
  }
  return result;
}

uint64_t sub_2518D5338()
{
  return MEMORY[0x263EFC020];
}

unint64_t sub_2518D5348()
{
  unint64_t result = qword_269B56C78;
  if (!qword_269B56C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56C78);
  }
  return result;
}

unint64_t sub_2518D53A0()
{
  unint64_t result = qword_269B56C80;
  if (!qword_269B56C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56C80);
  }
  return result;
}

unint64_t sub_2518D53FC()
{
  unint64_t result = qword_269B56C88;
  if (!qword_269B56C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56C88);
  }
  return result;
}

uint64_t sub_2518D5450()
{
  return MEMORY[0x263F8D320];
}

uint64_t sub_2518D545C()
{
  return sub_2517E2990(&qword_269B56C90, &qword_269B56C98);
}

unint64_t sub_2518D549C()
{
  unint64_t result = qword_269B56CA0;
  if (!qword_269B56CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56CA0);
  }
  return result;
}

unint64_t sub_2518D54F4()
{
  unint64_t result = qword_269B56CA8[0];
  if (!qword_269B56CA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269B56CA8);
  }
  return result;
}

unint64_t sub_2518D554C()
{
  unint64_t result = qword_269B56CC0;
  if (!qword_269B56CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56CC0);
  }
  return result;
}

unint64_t sub_2518D55A4()
{
  unint64_t result = qword_269B56CC8[0];
  if (!qword_269B56CC8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269B56CC8);
  }
  return result;
}

unint64_t sub_2518D5600()
{
  unint64_t result = qword_269B56CE0;
  if (!qword_269B56CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56CE0);
  }
  return result;
}

uint64_t sub_2518D5654()
{
  return sub_2518D5EF0(qword_269B56CE8, &qword_269B54370, (void (*)(void))sub_251800AA0);
}

uint64_t destroy for DeviceEntity()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DeviceEntity(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DeviceEntity(void *a1, void *a2)
{
  *a1 = *a2;
  sub_25192BA80();
  swift_release();
  a1[1] = a2[1];
  sub_25192BA80();
  swift_release();
  a1[2] = a2[2];
  sub_25192BA80();
  swift_release();
  a1[3] = a2[3];
  sub_25192BA80();
  swift_release();
  a1[4] = a2[4];
  sub_25192BA80();
  swift_release();
  a1[5] = a2[5];
  sub_25192BA80();
  swift_release();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for DeviceEntity(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  swift_release();
  a1[2] = a2[2];
  swift_release();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DeviceEntity()
{
  return &type metadata for DeviceEntity;
}

ValueMetadata *type metadata accessor for DeviceEntityQuery()
{
  return &type metadata for DeviceEntityQuery;
}

uint64_t sub_2518D594C()
{
  return sub_2518D59F4(MEMORY[0x263F8D310]);
}

uint64_t sub_2518D5958@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2518C1BBC(a1, *(void *)(v2 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_2518D598C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2518C262C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2518D59B8@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_2518C2898(a1, *(void *)(v2 + 16), a2);
}

double sub_2518D59D4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_2518C2A18(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2518D59F4(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2518C19D8(*(void *)(v1 + 16), v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), a1);
}

uint64_t objectdestroyTm()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B53BB0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for HomeEntity();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v0 + v3, 1, v5))
  {
    uint64_t v6 = sub_25192BD10();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_2518D5BFC()
{
  return sub_2518D59F4((uint64_t)&type metadata for DeviceType);
}

uint64_t sub_2518D5C08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2518C2C4C(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_2518D5C40@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2518BF27C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), (void (*)(char *, uint64_t))&unk_25193BC38, (uint64_t)&unk_25193BC60, a2);
}

unint64_t sub_2518D5C6C()
{
  unint64_t result = qword_269B56E08;
  if (!qword_269B56E08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B56E00);
    sub_2518D5D20();
    sub_2518D5E38(&qword_269B56E28, &qword_269B56DB8, (void (*)(void))sub_2517F7DA4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56E08);
  }
  return result;
}

unint64_t sub_2518D5D20()
{
  unint64_t result = qword_269B56E10;
  if (!qword_269B56E10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B56DD0);
    sub_2518D5DAC(&qword_269B56E18, &qword_269B56DC8);
    sub_2517F7DA4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56E10);
  }
  return result;
}

uint64_t sub_2518D5DAC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_2517E2990(&qword_269B56E20, &qword_269B56DC0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2518D5E38(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_2518D5DAC(&qword_269B56E30, &qword_269B56DB0);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2518D5EC4@<X0>(uint64_t *a1@<X8>)
{
  return sub_2518BEA1C(*(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_25193BC80, a1);
}

uint64_t sub_2518D5EF0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2518D5F5C@<X0>(uint64_t *a1@<X8>)
{
  return sub_2518BDE68(*(void *)(v1 + 16), a1);
}

uint64_t sub_2518D5F6C@<X0>(uint64_t a1@<X8>)
{
  return sub_2518BE6B8(*(void *)(v1 + 16), a1);
}

uint64_t sub_2518D5F78()
{
  return MEMORY[0x263F8D320];
}

unint64_t sub_2518D5F88()
{
  unint64_t result = qword_269B56EB0;
  if (!qword_269B56EB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B56EA8);
    sub_2518D603C();
    sub_2518D5EF0(&qword_269B56EF8, &qword_269B56E70, (void (*)(void))sub_2518D6188);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56EB0);
  }
  return result;
}

unint64_t sub_2518D603C()
{
  unint64_t result = qword_269B56EB8;
  if (!qword_269B56EB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B56E80);
    sub_2518D5E38(&qword_269B56EC0, &qword_269B56E78, (void (*)(void))sub_2518D60E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56EB8);
  }
  return result;
}

unint64_t sub_2518D60E8()
{
  unint64_t result = qword_269B56EC8;
  if (!qword_269B56EC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B56E88);
    sub_2518D6188();
    sub_2517E2990(&qword_269B56EE8, &qword_269B56EF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56EC8);
  }
  return result;
}

unint64_t sub_2518D6188()
{
  unint64_t result = qword_269B56ED0;
  if (!qword_269B56ED0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B56E68);
    sub_2518D624C(&qword_269B56ED8);
    sub_2518D624C(&qword_269B56EE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56ED0);
  }
  return result;
}

uint64_t sub_2518D624C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B56DF8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2518D62B0@<X0>(uint64_t *a1@<X8>)
{
  return sub_2518BEA1C(*(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_25193BD38, a1);
}

uint64_t sub_2518D62DC@<X0>(uint64_t *a1@<X8>)
{
  return sub_2518BD064(*(unsigned __int16 *)(v1 + 16), a1);
}

uint64_t sub_2518D62EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_251895918();
  *a1 = result;
  return result;
}

uint64_t sub_2518D6328@<X0>(uint64_t a1@<X8>)
{
  return sub_2518BD5EC(*(_WORD *)(v1 + 16), a1);
}

unint64_t sub_2518D6330()
{
  unint64_t result = qword_269B56F50;
  if (!qword_269B56F50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B56F48);
    sub_2518D63AC();
    sub_2518D6430();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56F50);
  }
  return result;
}

unint64_t sub_2518D63AC()
{
  unint64_t result = qword_269B56F58;
  if (!qword_269B56F58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B56F38);
    sub_2518D5DAC(&qword_269B56F60, &qword_269B56F30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56F58);
  }
  return result;
}

unint64_t sub_2518D6430()
{
  unint64_t result = qword_269B56F68;
  if (!qword_269B56F68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B56F70);
    sub_2517E2990(&qword_269B56F78, &qword_269B56F80);
    sub_2518D64D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56F68);
  }
  return result;
}

unint64_t sub_2518D64D0()
{
  unint64_t result = qword_269B56F88;
  if (!qword_269B56F88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B56F90);
    sub_2518D654C();
    sub_2518D65A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56F88);
  }
  return result;
}

unint64_t sub_2518D654C()
{
  unint64_t result = qword_269B56F98;
  if (!qword_269B56F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56F98);
  }
  return result;
}

unint64_t sub_2518D65A0()
{
  unint64_t result = qword_269B56FA0;
  if (!qword_269B56FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B56FA0);
  }
  return result;
}

uint64_t sub_2518D65F4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2518BF27C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), (void (*)(char *, uint64_t))&unk_25193BDB0, (uint64_t)&unk_25193BDD8, a2);
}

uint64_t sub_2518D6628(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2518D6670@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2518D42A4(a1, a2);
}

uint64_t sub_2518D6688@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_2518D4288(a1, a2);
}

uint64_t sub_2518D66A0@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_2518D59B8(a1, a2);
}

double sub_2518D66B8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_2518D59D4(a1, a2);
}

uint64_t sub_2518D66D0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_2518D6734(double *a1)
{
  uint64_t v111 = sub_25192CAF0();
  uint64_t v115 = *(void *)(v111 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v111);
  unint64_t v4 = (unint64_t)&v107 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  unint64_t v7 = (char *)&v107 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v110 = (char *)&v107 - v8;
  uint64_t v9 = sub_25192C780();
  uint64_t v113 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55C78);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v112 = (char *)&v107 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v107 - v18;
  uint64_t v116 = sub_25192D0F0();
  uint64_t v114 = *(void *)(v116 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v116);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = MEMORY[0x270FA5388]((char *)&v107 - v22);
  uint64_t v25 = (char *)&v107 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v107 - v28;
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v37 = (char *)&v107 - v36;
  double v39 = *a1;
  double v38 = a1[1];
  int v40 = *((unsigned __int8 *)a1 + 32) >> 1;
  switch(v40)
  {
    case '?':
      uint64_t v44 = v31;
      uint64_t v110 = (char *)v4;
      double v45 = a1[2];
      double v46 = v38;
      char v47 = LOBYTE(v39);
      uint64_t v112 = (char *)v33;
      uint64_t v113 = v35;
      uint64_t v48 = (uint64_t)v7;
      switch(LOBYTE(v39))
      {
        case 5:
          swift_bridgeObjectRelease();
          break;
        default:
          unint64_t v4 = sub_25192D810();
          swift_bridgeObjectRelease();
          if ((v4 & 1) == 0) {
            goto LABEL_26;
          }
          break;
      }
      char v121 = v47;
      char v57 = v117;
      sub_2518D7B0C(&v121, (uint64_t)v15);
      if (!v57)
      {
        uint64_t v58 = v114;
        uint64_t v59 = v116;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48))(v15, 1, v116) == 1)
        {
LABEL_25:
          sub_2517E16E0((uint64_t)v15, &qword_269B55C78);
          type metadata accessor for HomeAppIntentError();
          sub_2518DA9CC((unint64_t *)&qword_269B54420, (void (*)(uint64_t))type metadata accessor for HomeAppIntentError);
          swift_allocError();
LABEL_27:
          swift_storeEnumTagMultiPayload();
          goto LABEL_28;
        }
        uint64_t v60 = v58 + 32;
        uint64_t v117 = *(void (**)(void, void, void))(v58 + 32);
        v117(v25, v15, v59);
        (*(void (**)(uint64_t, char *, uint64_t))(v58 + 16))(v44, v25, v59);
        unint64_t v4 = sub_251846E78(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v62 = *(void *)(v4 + 16);
        unint64_t v61 = *(void *)(v4 + 24);
        if (v62 >= v61 >> 1) {
          unint64_t v4 = sub_251846E78(v61 > 1, v62 + 1, 1, v4);
        }
        *(void *)(v4 + 16) = v62 + 1;
        uint64_t v63 = v114;
        unint64_t v109 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
        uint64_t v108 = *(void *)(v114 + 72);
        uint64_t v64 = v4 + v109 + v108 * v62;
        uint64_t v65 = v116;
        v117(v64, v44, v116);
        (*(void (**)(char *, uint64_t))(v63 + 8))(v25, v65);
        uint64_t v66 = v60;
        uint64_t v67 = v115;
        uint64_t v68 = *(void (**)(uint64_t, void, uint64_t))(v115 + 104);
        uint64_t v69 = v111;
        v68(v48, *MEMORY[0x263F48910], v111);
        sub_2518D8070(v48, v113, v46);
        uint64_t v92 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
        uint64_t v114 = v66;
        uint64_t v115 = v67 + 8;
        uint64_t v93 = v92;
        v92(v48, v69);
        unint64_t v95 = *(void *)(v4 + 16);
        unint64_t v94 = *(void *)(v4 + 24);
        if (v95 >= v94 >> 1) {
          unint64_t v4 = sub_251846E78(v94 > 1, v95 + 1, 1, v4);
        }
        unint64_t v96 = v109;
        uint64_t v97 = (uint64_t)v110;
        uint64_t v98 = v116;
        uint64_t v99 = v117;
        uint64_t v100 = v108;
        *(void *)(v4 + 16) = v95 + 1;
        v99(v4 + v96 + v95 * v100, v113, v98);
        uint64_t v101 = v111;
        v68(v97, *MEMORY[0x263F48900], v111);
        sub_2518D8070(v97, (uint64_t)v112, v45);
        v93(v97, v101);
        unint64_t v103 = *(void *)(v4 + 16);
        unint64_t v102 = *(void *)(v4 + 24);
        if (v103 >= v102 >> 1) {
          unint64_t v4 = sub_251846E78(v102 > 1, v103 + 1, 1, v4);
        }
        uint64_t v104 = (uint64_t)v112;
        uint64_t v106 = v108;
        unint64_t v105 = v109;
        *(void *)(v4 + 16) = v103 + 1;
        v99(v4 + v105 + v103 * v106, v104, v116);
      }
      break;
    case '>':
      uint64_t v108 = v34;
      unint64_t v109 = (unint64_t)v29;
      double v49 = v38;
      char v50 = LOBYTE(v39);
      uint64_t v51 = v32;
      uint64_t v52 = v115;
      uint64_t v53 = v118;
      uint64_t v54 = v113;
      switch(LOBYTE(v39))
      {
        case 5:
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v11, v53, v9);
          goto LABEL_22;
        default:
          char v70 = sub_25192D810();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v11, v53, v9);
          if (v70)
          {
LABEL_22:
            BOOL v72 = sub_2518D7C40();
            uint64_t v73 = *(void (**)(char *, uint64_t))(v54 + 8);
            unint64_t v4 = v54 + 8;
            v73(v11, v9);
            if (!v72) {
              goto LABEL_26;
            }
          }
          else
          {
            uint64_t v71 = *(void (**)(char *, uint64_t))(v54 + 8);
            unint64_t v4 = v54 + 8;
            v71(v11, v9);
          }
          char v120 = v50;
          uint64_t v15 = v112;
          uint64_t v74 = v117;
          sub_2518D7B0C(&v120, (uint64_t)v112);
          if (v74) {
            return v4;
          }
          uint64_t v75 = v114;
          uint64_t v76 = v116;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48))(v15, 1, v116) == 1) {
            goto LABEL_25;
          }
          uint64_t v117 = *(void (**)(void, void, void))(v75 + 32);
          uint64_t v113 = v75 + 32;
          v117(v51, v15, v76);
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v75 + 16))(v109, v51, v76);
          unint64_t v4 = sub_251846E78(0, 1, 1, MEMORY[0x263F8EE78]);
          unint64_t v80 = *(void *)(v4 + 16);
          unint64_t v79 = *(void *)(v4 + 24);
          if (v80 >= v79 >> 1) {
            unint64_t v4 = sub_251846E78(v79 > 1, v80 + 1, 1, v4);
          }
          *(void *)(v4 + 16) = v80 + 1;
          uint64_t v81 = v114;
          unint64_t v82 = (*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
          uint64_t v83 = *(void *)(v114 + 72);
          uint64_t v84 = v116;
          v117(v4 + v82 + v83 * v80, v109, v116);
          (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v51, v84);
          uint64_t v86 = (uint64_t)v110;
          uint64_t v85 = v111;
          (*(void (**)(char *, void, uint64_t))(v52 + 104))(v110, *MEMORY[0x263F48940], v111);
          sub_2518D8070(v86, v108, v49);
          (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v86, v85);
          unint64_t v88 = *(void *)(v4 + 16);
          unint64_t v87 = *(void *)(v4 + 24);
          if (v88 >= v87 >> 1) {
            unint64_t v4 = sub_251846E78(v87 > 1, v88 + 1, 1, v4);
          }
          uint64_t v89 = v108;
          uint64_t v90 = v116;
          uint64_t v91 = v117;
          *(void *)(v4 + 16) = v88 + 1;
          v91(v4 + v82 + v88 * v83, v89, v90);
          break;
      }
      break;
    case '=':
      char v119 = *(void *)a1;
      uint64_t v41 = v117;
      sub_2518D7B0C(&v119, (uint64_t)v19);
      if (!v41)
      {
        uint64_t v42 = v114;
        uint64_t v43 = v116;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48))(v19, 1, v116) == 1)
        {
          sub_2517E16E0((uint64_t)v19, &qword_269B55C78);
LABEL_26:
          type metadata accessor for HomeAppIntentError();
          sub_2518DA9CC((unint64_t *)&qword_269B54420, (void (*)(uint64_t))type metadata accessor for HomeAppIntentError);
          swift_allocError();
          *uint64_t v77 = 58;
          goto LABEL_27;
        }
        BOOL v55 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
        v55(v37, v19, v43);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CF0);
        unint64_t v56 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
        unint64_t v4 = swift_allocObject();
        *(_OWORD *)(v4 + 16) = xmmword_25192F930;
        v55((char *)(v4 + v56), v37, v43);
      }
      break;
    default:
      sub_2518D73CC();
      swift_allocError();
LABEL_28:
      swift_willThrow();
      return v4;
  }
  return v4;
}

unint64_t sub_2518D73CC()
{
  unint64_t result = qword_269B57050;
  if (!qword_269B57050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57050);
  }
  return result;
}

unint64_t sub_2518D7420(unint64_t a1)
{
  uint64_t v3 = sub_25192CAF0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v55 - v8;
  uint64_t v10 = sub_25192D0F0();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v55 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v19 = (char *)&v55 - v18;
  uint64_t v20 = *(void *)a1;
  double v21 = *(double *)(a1 + 8);
  int v22 = *(unsigned __int8 *)(a1 + 32) >> 1;
  if (v22 == 63)
  {
    uint64_t v61 = v15;
    uint64_t v62 = v17;
    uint64_t v60 = v16;
    double v26 = *(double *)(a1 + 16);
    if ((v20 | 2) == 2) {
      LOBYTE(v20) = 5;
    }
    unint64_t v65 = MEMORY[0x263F8EE78];
    char v64 = v20;
    a1 = v63;
    uint64_t v27 = sub_2518D97F8(&v64);
    if (v1) {
      return a1;
    }
    if (v27)
    {
      sub_2517F05D8(v27);
      uint64_t v28 = *MEMORY[0x263F48910];
      uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
      v59(v9, v28, v3);
      sub_2518D8070((uint64_t)v9, (uint64_t)v14, v21);
      uint64_t v58 = v4 + 104;
      uint64_t v37 = *(void (**)(char *, uint64_t))(v4 + 8);
      v37(v9, v3);
      unint64_t v38 = v65;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v56 = v37;
      uint64_t v57 = v4 + 8;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        unint64_t v38 = sub_251846E78(0, *(void *)(v38 + 16) + 1, 1, v38);
      }
      uint64_t v40 = v60;
      unint64_t v42 = *(void *)(v38 + 16);
      unint64_t v41 = *(void *)(v38 + 24);
      if (v42 >= v41 >> 1)
      {
        uint64_t v54 = sub_251846E78(v41 > 1, v42 + 1, 1, v38);
        uint64_t v40 = v60;
        unint64_t v38 = v54;
      }
      *(void *)(v38 + 16) = v42 + 1;
      double v45 = *(void (**)(unint64_t))(v40 + 32);
      uint64_t v43 = v40 + 32;
      uint64_t v44 = v45;
      unint64_t v46 = (*(unsigned __int8 *)(v43 + 48) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 48);
      uint64_t v47 = *(void *)(v43 + 40);
      ((void (*)(unint64_t, char *, uint64_t))v45)(v38 + v46 + v47 * v42, v14, v61);
      unint64_t v65 = v38;
      v59(v7, *MEMORY[0x263F48900], v3);
      sub_2518D8070((uint64_t)v7, v62, v26);
      uint64_t v48 = v47;
      unint64_t v63 = v46;
      v56(v7, v3);
      a1 = v65;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a1 = sub_251846E78(0, *(void *)(a1 + 16) + 1, 1, a1);
      }
      double v49 = v44;
      unint64_t v51 = *(void *)(a1 + 16);
      unint64_t v50 = *(void *)(a1 + 24);
      unint64_t v52 = v63;
      if (v51 >= v50 >> 1) {
        a1 = sub_251846E78(v50 > 1, v51 + 1, 1, a1);
      }
      *(void *)(a1 + 16) = v51 + 1;
      v49(a1 + v52 + v51 * v48);
      return a1;
    }
LABEL_27:
    a1 = type metadata accessor for HomeAppIntentError();
    sub_2518DA9CC((unint64_t *)&qword_269B54420, (void (*)(uint64_t))type metadata accessor for HomeAppIntentError);
    swift_allocError();
    goto LABEL_28;
  }
  if (v22 == 62)
  {
    uint64_t v29 = v16;
    uint64_t v30 = v15;
    char v31 = *(void *)a1;
    if (v31 == 2)
    {
      sub_2518D9578((char *)&v65);
      if (v65 == 6) {
        char v31 = 2;
      }
      else {
        char v31 = v65;
      }
    }
    unint64_t v65 = MEMORY[0x263F8EE78];
    char v64 = v31;
    a1 = v63;
    uint64_t v32 = sub_2518D97F8(&v64);
    if (v1) {
      return a1;
    }
    if (v32)
    {
      sub_2517F05D8(v32);
      char v64 = v31;
      sub_2518D9BEC(&v64, (uint64_t)v19, v21);
      a1 = v65;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a1 = sub_251846E78(0, *(void *)(a1 + 16) + 1, 1, a1);
      }
      uint64_t v33 = v29;
      unint64_t v35 = *(void *)(a1 + 16);
      unint64_t v34 = *(void *)(a1 + 24);
      if (v35 >= v34 >> 1)
      {
        uint64_t v53 = sub_251846E78(v34 > 1, v35 + 1, 1, a1);
        uint64_t v33 = v29;
        a1 = v53;
      }
      *(void *)(a1 + 16) = v35 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v33 + 32))(a1+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v35, v19, v30);
      return a1;
    }
    goto LABEL_27;
  }
  if (v22 != 61)
  {
    sub_2518D73CC();
    swift_allocError();
LABEL_29:
    swift_willThrow();
    return a1;
  }
  int v23 = *(void *)a1;
  a1 = v63;
  if (v23 == 2)
  {
    sub_2518D9578((char *)&v65);
    LOBYTE(v23) = v65;
    if (v65 == 6) {
      LOBYTE(v23) = 2;
    }
  }
  LOBYTE(v65) = v23;
  uint64_t v24 = sub_2518D97F8(&v65);
  if (!v1)
  {
    a1 = v24;
    if (!v24)
    {
      a1 = type metadata accessor for HomeAppIntentError();
      sub_2518DA9CC((unint64_t *)&qword_269B54420, (void (*)(uint64_t))type metadata accessor for HomeAppIntentError);
      swift_allocError();
      *uint64_t v25 = 58;
LABEL_28:
      swift_storeEnumTagMultiPayload();
      goto LABEL_29;
    }
  }
  return a1;
}

uint64_t sub_2518D7B0C@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  switch(*a1)
  {
    case 1:
      uint64_t v5 = 0;
      goto LABEL_7;
    case 2:
    case 5:
      uint64_t v5 = 3;
      goto LABEL_7;
    case 3:
      uint64_t v5 = 1;
      goto LABEL_7;
    case 4:
      uint64_t v5 = 2;
LABEL_7:
      uint64_t result = sub_2518D920C(v5, v2, a2);
      if (!v3)
      {
        uint64_t v8 = sub_25192D0F0();
        uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, 0, 1, v8);
      }
      break;
    default:
      uint64_t v6 = sub_25192D0F0();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a2, 1, 1, v6);
      break;
  }
  return result;
}

BOOL sub_2518D7C40()
{
  uint64_t v1 = sub_25192CAF0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v47 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55C98);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v44 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v38 - v7;
  uint64_t v9 = sub_25192C780();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v46 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v38 - v13;
  uint64_t v15 = v0;
  uint64_t v16 = sub_2518D87B8();
  uint64_t v45 = v1;
  BOOL v17 = sub_25188604C(3, v16);
  swift_bridgeObjectRelease();
  uint64_t v18 = v15;
  uint64_t v19 = v47;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v20(v14, v18, v9);
  if (!v17)
  {
    uint64_t v27 = *(void (**)(char *, uint64_t))(v10 + 8);
    v27(v14, v9);
    uint64_t v32 = v46;
    v20(v46, v18, v9);
    goto LABEL_5;
  }
  uint64_t v21 = *MEMORY[0x263F48910];
  uint64_t v43 = v18;
  uint64_t v22 = v2;
  uint64_t v23 = v2 + 104;
  uint64_t v24 = *(void (**)(char *, void, uint64_t))(v2 + 104);
  uint64_t v25 = (uint64_t)v8;
  uint64_t v26 = v45;
  unint64_t v41 = v24;
  uint64_t v42 = v23;
  v24(v19, v21, v45);
  sub_25192C530();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v22 + 8);
  v40(v19, v26);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v10 + 8);
  v27(v14, v9);
  uint64_t v28 = sub_25192CDD0();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  v38[1] = v29 + 48;
  double v39 = v30;
  unsigned int v31 = v30(v25, 1, v28);
  sub_2517E16E0(v25, &qword_269B55C98);
  uint64_t v32 = v46;
  v20(v46, v43, v9);
  if (v31 != 1)
  {
LABEL_5:
    v27(v32, v9);
    return 0;
  }
  uint64_t v33 = v47;
  uint64_t v34 = v45;
  v41(v47, *MEMORY[0x263F48900], v45);
  uint64_t v35 = (uint64_t)v44;
  sub_25192C530();
  v40(v33, v34);
  v27(v32, v9);
  BOOL v36 = v39(v35, 1, v28) == 1;
  sub_2517E16E0(v35, &qword_269B55C98);
  return v36;
}

uint64_t sub_2518D8070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v54 = a2;
  uint64_t v4 = v3;
  uint64_t v51 = sub_25192CAF0();
  uint64_t v49 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  unint64_t v50 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25192C780();
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v47 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v48 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55C90);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55C88);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v55 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_25192CAD0();
  uint64_t v15 = *(void *)(v56 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v56);
  uint64_t v18 = (double *)((char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v16);
  uint64_t v45 = (char *)&v40 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55C98);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_25192CDD0();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = v4;
  uint64_t v53 = a1;
  sub_25192C530();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_2517E16E0((uint64_t)v22, &qword_269B55C98);
    type metadata accessor for HomeAppIntentError();
    sub_2518DA9CC((unint64_t *)&qword_269B54420, (void (*)(uint64_t))type metadata accessor for HomeAppIntentError);
    swift_allocError();
    *uint64_t v27 = 58;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v22, v23);
  uint64_t v44 = v26;
  sub_25192CDC0();
  uint64_t v29 = sub_25192D060();
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v12, 1, v29) == 1)
  {
    sub_2517E16E0((uint64_t)v12, &qword_269B55C90);
    uint64_t v31 = (uint64_t)v55;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v55, 1, 1, v56);
LABEL_6:
    sub_2517E16E0(v31, &qword_269B55C88);
    type metadata accessor for HomeAppIntentError();
    sub_2518DA9CC((unint64_t *)&qword_269B54420, (void (*)(uint64_t))type metadata accessor for HomeAppIntentError);
    swift_allocError();
    *uint64_t v35 = 58;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v44, v23);
  }
  *uint64_t v18 = a3;
  uint64_t v32 = v56;
  (*(void (**)(double *, void, uint64_t))(v15 + 104))(v18, *MEMORY[0x263F48AA0], v56);
  uint64_t v43 = v23;
  uint64_t v33 = v55;
  sub_25192D050();
  unint64_t v41 = *(void (**)(double *, uint64_t))(v15 + 8);
  uint64_t v42 = v18;
  v41(v18, v32);
  uint64_t v34 = v29;
  uint64_t v31 = (uint64_t)v33;
  uint64_t v23 = v43;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v34);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v31, 1, v32) == 1) {
    goto LABEL_6;
  }
  BOOL v36 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v45, v31, v32);
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v48, v52, v47);
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v50, v53, v51);
  (*(void (**)(double *, char *, uint64_t))(v15 + 16))(v42, v36, v32);
  uint64_t v37 = v54;
  sub_25192D0E0();
  v41((double *)v36, v32);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v44, v23);
  uint64_t v38 = *MEMORY[0x263F491B0];
  uint64_t v39 = sub_25192D0F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 104))(v37, v38, v39);
}

uint64_t sub_2518D87B8()
{
  uint64_t v1 = sub_25192C780();
  uint64_t v67 = *(void *)(v1 - 8);
  uint64_t v68 = (char *)v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v66 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55C90);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25192D010();
  uint64_t v63 = *(void *)(v6 - 8);
  uint64_t v64 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v62 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25192CAF0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55C98);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_25192CDD0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unint64_t v65 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v61 - v19;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F48A28], v8);
  sub_25192C530();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v21 = v15;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_2517E16E0((uint64_t)v14, &qword_269B55C98);
    if (qword_269B53418 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_25192D1D0();
    uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_269B5A090);
    uint64_t v25 = v66;
    uint64_t v24 = v67;
    uint64_t v26 = v68;
    (*(void (**)(char *, uint64_t, char *))(v67 + 16))(v66, v0, v68);
    uint64_t v27 = v23;
    uint64_t v28 = sub_25192D1B0();
    os_log_type_t v29 = sub_25192D4F0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v70 = v31;
      *(_DWORD *)uint64_t v30 = 136315138;
      unint64_t v65 = (char *)(v30 + 4);
      sub_2518DA9CC(&qword_269B56BF0, MEMORY[0x263F48408]);
      uint64_t v32 = sub_25192D7F0();
      uint64_t v27 = v33;
      uint64_t v69 = sub_2517F0D04(v32, v33, &v70);
      sub_25192D580();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v24 + 8))(v25, v26);
      _os_log_impl(&dword_2517D6000, v28, v29, "Thermostat service doesn't have targetHeatingCoolingMode: %s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533A75D0](v31, -1, -1);
      MEMORY[0x2533A75D0](v30, -1, -1);
    }
    else
    {
      (*(void (**)(char *, char *))(v24 + 8))(v25, v26);
    }

    type metadata accessor for HomeAppIntentError();
    sub_2518DA9CC((unint64_t *)&qword_269B54420, (void (*)(uint64_t))type metadata accessor for HomeAppIntentError);
    swift_allocError();
    *uint64_t v37 = 58;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return v27;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v20, v14, v15);
  sub_25192CDC0();
  uint64_t v34 = sub_25192D060();
  uint64_t v35 = *(void *)(v34 - 8);
  BOOL v36 = v20;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v5, 1, v34) == 1)
  {
    sub_2517E16E0((uint64_t)v5, &qword_269B55C90);
LABEL_20:
    uint64_t v46 = v65;
    if (qword_269B53418 != -1) {
      swift_once();
    }
    uint64_t v47 = sub_25192D1D0();
    __swift_project_value_buffer(v47, (uint64_t)qword_269B5A090);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v46, v20, v21);
    uint64_t v48 = sub_25192D1B0();
    uint64_t v49 = v21;
    os_log_type_t v50 = sub_25192D4F0();
    if (os_log_type_enabled(v48, v50))
    {
      uint64_t v51 = swift_slowAlloc();
      uint64_t v68 = v20;
      uint64_t v52 = v46;
      uint64_t v53 = (uint8_t *)v51;
      uint64_t v67 = swift_slowAlloc();
      uint64_t v70 = v67;
      *(_DWORD *)uint64_t v53 = 136315138;
      sub_2518DA9CC(&qword_269B57058, MEMORY[0x263F48C98]);
      uint64_t v54 = sub_25192D7F0();
      uint64_t v69 = sub_2517F0D04(v54, v55, &v70);
      sub_25192D580();
      swift_bridgeObjectRelease();
      uint64_t v56 = *(void (**)(char *, uint64_t))(v16 + 8);
      uint64_t v57 = v52;
      BOOL v36 = v68;
      v56(v57, v49);
      _os_log_impl(&dword_2517D6000, v48, v50, "TargetHeatingCoolingMode metadata isn't int: %s", v53, 0xCu);
      uint64_t v58 = v67;
      swift_arrayDestroy();
      MEMORY[0x2533A75D0](v58, -1, -1);
      MEMORY[0x2533A75D0](v53, -1, -1);
    }
    else
    {
      uint64_t v56 = *(void (**)(char *, uint64_t))(v16 + 8);
      v56(v46, v49);
    }

    uint64_t v27 = type metadata accessor for HomeAppIntentError();
    sub_2518DA9CC((unint64_t *)&qword_269B54420, (void (*)(uint64_t))type metadata accessor for HomeAppIntentError);
    swift_allocError();
    *uint64_t v59 = 58;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    v56(v36, v49);
    return v27;
  }
  if ((*(unsigned int (**)(char *, uint64_t))(v35 + 88))(v5, v34) != *MEMORY[0x263F49120])
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v34);
    goto LABEL_20;
  }
  uint64_t v68 = (char *)v21;
  (*(void (**)(char *, uint64_t))(v35 + 96))(v5, v34);
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v62, v5, v64);
  uint64_t v38 = sub_25192D000();
  uint64_t v39 = *(void *)(v38 + 16);
  if (v39)
  {
    uint64_t v40 = (uint64_t *)(v38 + 32);
    unint64_t v41 = (void *)MEMORY[0x263F8EE78];
    do
    {
      uint64_t v43 = *v40++;
      uint64_t v42 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v41 = sub_251846EAC(0, v41[2] + 1, 1, v41);
      }
      unint64_t v45 = v41[2];
      unint64_t v44 = v41[3];
      if (v45 >= v44 >> 1) {
        unint64_t v41 = sub_251846EAC((void *)(v44 > 1), v45 + 1, 1, v41);
      }
      v41[2] = v45 + 1;
      v41[v45 + 4] = v42;
      --v39;
    }
    while (v39);
  }
  else
  {
    unint64_t v41 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_2517F2644((uint64_t)v41);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v64);
  (*(void (**)(char *, char *))(v16 + 8))(v36, v68);
  return v27;
}

uint64_t sub_2518D920C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v27 = a3;
  uint64_t v5 = sub_25192CAD0();
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v26 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (_DWORD *)((char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_25192CAF0();
  uint64_t v28 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25192C780();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_2518D87B8();
  if (!v3)
  {
    uint64_t v24 = v14;
    BOOL v16 = sub_25188604C(v29, result);
    swift_bridgeObjectRelease();
    if (v16)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v24, a2, v11);
      uint64_t result = (*(uint64_t (**)(char *, void, uint64_t))(v28 + 104))(v10, *MEMORY[0x263F48A28], v8);
      if (v29 < (uint64_t)0xFFFFFFFF80000000)
      {
        __break(1u);
      }
      else
      {
        uint64_t v17 = v26;
        uint64_t v18 = v27;
        uint64_t v19 = v25;
        if (v29 <= 0x7FFFFFFF)
        {
          *uint64_t v7 = v29;
          (*(void (**)(_DWORD *, void, uint64_t))(v19 + 104))(v7, *MEMORY[0x263F48A80], v17);
          sub_25192D0E0();
          uint64_t v20 = *MEMORY[0x263F491B0];
          uint64_t v21 = sub_25192D0F0();
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v18, v20, v21);
        }
      }
      __break(1u);
    }
    else
    {
      type metadata accessor for HomeAppIntentError();
      sub_2518DA9CC((unint64_t *)&qword_269B54420, (void (*)(uint64_t))type metadata accessor for HomeAppIntentError);
      swift_allocError();
      unsigned char *v22 = 58;
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_2518D9578@<X0>(char *a1@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v1 = sub_25192CAF0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55C98);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *MEMORY[0x263F48910];
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v19(v4, v11, v1);
  sub_25192C530();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v2 + 8);
  v17(v4, v1);
  uint64_t v12 = sub_25192CDD0();
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
  int v18 = v13(v10, 1, v12);
  sub_2517E16E0((uint64_t)v10, &qword_269B55C98);
  v19(v4, *MEMORY[0x263F48900], v1);
  sub_25192C530();
  v17(v4, v1);
  int v14 = v13(v8, 1, v12);
  uint64_t result = sub_2517E16E0((uint64_t)v8, &qword_269B55C98);
  if (v14 != 1)
  {
    if (v18 == 1)
    {
      char v16 = 4;
      goto LABEL_7;
    }
LABEL_6:
    char v16 = 6;
    goto LABEL_7;
  }
  if (v18 == 1) {
    goto LABEL_6;
  }
  char v16 = 3;
LABEL_7:
  *uint64_t v20 = v16;
  return result;
}

uint64_t sub_2518D97F8(unsigned char *a1)
{
  uint64_t v2 = *a1;
  switch(*a1)
  {
    case 1:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CF0);
      uint64_t v3 = *(void *)(sub_25192D0F0() - 8);
      unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      uint64_t v2 = swift_allocObject();
      *(_OWORD *)(v2 + 16) = xmmword_25192F930;
      uint64_t v5 = v2 + v4;
      int v6 = 0;
      goto LABEL_4;
    case 2:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CF0);
      uint64_t v7 = *(void *)(sub_25192D0F0() - 8);
      unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v2 = swift_allocObject();
      *(_OWORD *)(v2 + 16) = xmmword_25192F930;
      uint64_t v5 = v2 + v8;
      int v6 = 1;
LABEL_4:
      sub_2518D9EA8(v6, v5);
      if (!v1) {
        return v2;
      }
      goto LABEL_13;
    case 3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CF0);
      uint64_t v9 = *(void *)(sub_25192D0F0() - 8);
      uint64_t v10 = *(void *)(v9 + 72);
      unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v2 = swift_allocObject();
      *(_OWORD *)(v2 + 16) = xmmword_25192DEA0;
      uint64_t v12 = v2 + v11;
      sub_2518D9EA8(1, v12);
      if (v1) {
        goto LABEL_13;
      }
      uint64_t v13 = v12 + v10;
      uint64_t v14 = 1;
      goto LABEL_12;
    case 4:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CF0);
      uint64_t v15 = *(void *)(sub_25192D0F0() - 8);
      uint64_t v16 = *(void *)(v15 + 72);
      unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v2 = swift_allocObject();
      *(_OWORD *)(v2 + 16) = xmmword_25192DEA0;
      uint64_t v18 = v2 + v17;
      sub_2518D9EA8(1, v18);
      if (v1) {
        goto LABEL_13;
      }
      uint64_t v13 = v18 + v16;
      uint64_t v14 = 2;
      goto LABEL_12;
    case 5:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CF0);
      uint64_t v19 = *(void *)(sub_25192D0F0() - 8);
      uint64_t v20 = *(void *)(v19 + 72);
      unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
      uint64_t v2 = swift_allocObject();
      *(_OWORD *)(v2 + 16) = xmmword_25192DEA0;
      uint64_t v22 = v2 + v21;
      sub_2518D9EA8(1, v22);
      if (v1)
      {
LABEL_13:
        *(void *)(v2 + 16) = 0;
        swift_release();
      }
      else
      {
        uint64_t v13 = v22 + v20;
        uint64_t v14 = 0;
LABEL_12:
        sub_2518DA2A0(v14, v13);
      }
      return v2;
    default:
      return v2;
  }
}

uint64_t sub_2518D9BEC@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v7 = sub_25192CAF0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v16 - v12;
  switch(*a1)
  {
    case 1:
    case 5:
      type metadata accessor for HomeAppIntentError();
      sub_2518DA9CC((unint64_t *)&qword_269B54420, (void (*)(uint64_t))type metadata accessor for HomeAppIntentError);
      swift_allocError();
      *uint64_t v14 = 58;
      goto LABEL_4;
    case 3:
      (*(void (**)(char *, void, uint64_t))(v8 + 104))((char *)v16 - v12, *MEMORY[0x263F48910], v7);
      sub_2518D8070((uint64_t)v13, a2, a3);
      if (v3) {
        return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      }
      unint64_t v11 = v13;
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    case 4:
      (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, *MEMORY[0x263F48900], v7);
      sub_2518D8070((uint64_t)v11, a2, a3);
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    default:
      type metadata accessor for HomeAppIntentError();
      sub_2518DA9CC((unint64_t *)&qword_269B54420, (void (*)(uint64_t))type metadata accessor for HomeAppIntentError);
      swift_allocError();
LABEL_4:
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
  }
}

uint64_t sub_2518D9EA8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v27 = a1;
  uint64_t v29 = a2;
  uint64_t v28 = sub_25192CAD0();
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  unint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25192C780();
  uint64_t v23 = *(void *)(v5 - 8);
  uint64_t v24 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v25 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25192CAF0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55C98);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *MEMORY[0x263F48AC0];
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v15(v10, v14, v7);
  sub_25192C530();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v16 = sub_25192CDD0();
  LODWORD(v8) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v13, 1, v16);
  sub_2517E16E0((uint64_t)v13, &qword_269B55C98);
  if (v8 == 1)
  {
    type metadata accessor for HomeAppIntentError();
    sub_2518DA9CC((unint64_t *)&qword_269B54420, (void (*)(uint64_t))type metadata accessor for HomeAppIntentError);
    swift_allocError();
    *unint64_t v17 = 58;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v25, v2, v24);
    v15(v10, v14, v7);
    *unint64_t v4 = v27 & 1;
    (*(void (**)(unsigned char *, void, uint64_t))(v26 + 104))(v4, *MEMORY[0x263F48A88], v28);
    uint64_t v19 = v29;
    sub_25192D0E0();
    uint64_t v20 = *MEMORY[0x263F491B0];
    uint64_t v21 = sub_25192D0F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v19, v20, v21);
  }
}

uint64_t sub_2518DA2A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v56 = a1;
  uint64_t v3 = sub_25192CAD0();
  uint64_t v46 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v45 = (_DWORD *)((char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_25192C780();
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v52 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v53 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55C90);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v59 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_25192D010();
  uint64_t v58 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v57 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25192CAF0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55C98);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_25192CDD0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void (**)(void))(v11 + 104);
  unsigned int v50 = *MEMORY[0x263F48A18];
  uint64_t v49 = (uint64_t (*)(char *, void, uint64_t))v21;
  v21(v13);
  uint64_t v54 = v2;
  sub_25192C530();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v22 = v17;
  uint64_t v23 = v18;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v22) == 1)
  {
    sub_2517E16E0((uint64_t)v16, &qword_269B55C98);
LABEL_12:
    type metadata accessor for HomeAppIntentError();
    sub_2518DA9CC((unint64_t *)&qword_269B54420, (void (*)(uint64_t))type metadata accessor for HomeAppIntentError);
    swift_allocError();
    *unint64_t v41 = 58;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v22);
  uint64_t v24 = (uint64_t)v59;
  sub_25192CDC0();
  uint64_t v25 = sub_25192D060();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
    sub_2517E16E0(v24, &qword_269B55C90);
    goto LABEL_12;
  }
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v26 + 88))(v24, v25) != *MEMORY[0x263F49120])
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    goto LABEL_12;
  }
  uint64_t v43 = v22;
  unint64_t v44 = v20;
  (*(void (**)(uint64_t, uint64_t))(v26 + 96))(v24, v25);
  int v27 = v57;
  uint64_t v28 = v24;
  uint64_t v29 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v57, v28, v55);
  uint64_t v30 = sub_25192D000();
  uint64_t v31 = v56;
  char v32 = sub_2518D66D0(v56, v30);
  swift_bridgeObjectRelease();
  if ((v32 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v27, v29);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v44, v43);
    goto LABEL_12;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v53, v54, v52);
  uint64_t result = v49(v13, v50, v10);
  if (v31 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else
  {
    uint64_t v35 = v57;
    uint64_t v34 = v58;
    if (v31 <= 0x7FFFFFFF)
    {
      uint64_t v37 = v45;
      uint64_t v36 = v46;
      *unint64_t v45 = v31;
      (*(void (**)(_DWORD *, void, uint64_t))(v36 + 104))(v37, *MEMORY[0x263F48A80], v47);
      uint64_t v38 = v48;
      sub_25192D0E0();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v29);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v44, v43);
      uint64_t v39 = *MEMORY[0x263F491B0];
      uint64_t v40 = sub_25192D0F0();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 104))(v38, v39, v40);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2518DA9CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t EntityPropertyQuery.apply<A>(comparators:mode:data:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 72) = a5;
  *(void *)(v6 + 80) = a6;
  *(void *)(v6 + 56) = a3;
  *(void *)(v6 + 64) = a4;
  *(unsigned char *)(v6 + 88) = a2;
  *(void *)(v6 + 48) = a1;
  return MEMORY[0x270FA2498](sub_2518DAA40, 0, 0);
}

uint64_t sub_2518DAA40()
{
  if (sub_25192B9C0())
  {
    uint64_t v1 = *(void *)(v0 + 64);
    *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 48);
    uint64_t v2 = swift_task_alloc();
    long long v3 = *(_OWORD *)(v0 + 72);
    *(void *)(v2 + 16) = v1;
    *(_OWORD *)(v2 + 24) = v3;
    *(void *)(v0 + 40) = v3;
    sub_25192BD90();
    sub_25192D430();
    sub_25192D430();
    swift_getWitnessTable();
    sub_25192D350();
LABEL_5:
    uint64_t v7 = *(void *)(v0 + 16);
    swift_task_dealloc();
    goto LABEL_7;
  }
  if (sub_25192B9C0())
  {
    uint64_t v5 = *(void *)(v0 + 56);
    uint64_t v4 = *(void *)(v0 + 64);
    *(void *)(v0 + 24) = *(void *)(v0 + 48);
    long long v10 = *(_OWORD *)(v0 + 72);
    *(void *)(v0 + 32) = sub_25192D3F0();
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = v4;
    *(_OWORD *)(v6 + 24) = v10;
    *(void *)(v6 + 40) = v5;
    *(void *)(v0 + 40) = v10;
    sub_25192BD90();
    sub_25192D430();
    sub_25192D430();
    swift_getWitnessTable();
    sub_25192D340();
    goto LABEL_5;
  }
  uint64_t v7 = sub_25192D3F0();
LABEL_7:
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v8(v7);
}

uint64_t sub_2518DACE0@<X0>(uint64_t *a1@<X8>)
{
  sub_25192D430();
  swift_getWitnessTable();
  uint64_t result = sub_25192D330();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_2518DAD6C()
{
  sub_25192D430();
  swift_getWitnessTable();
  uint64_t result = sub_25192D330();
  if (!v0) {
    return sub_25192D420();
  }
  return result;
}

uint64_t sub_2518DAE20()
{
  return sub_2518DAD6C();
}

uint64_t sub_2518DAE40@<X0>(uint64_t *a1@<X8>)
{
  return sub_2518DACE0(a1);
}

uint64_t sub_2518DAE60()
{
  uint64_t v0 = sub_25192BC50();
  __swift_allocate_value_buffer(v0, qword_269B5A6B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_269B5A6B0);
  return sub_25192BC30();
}

uint64_t sub_2518DAEC4(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A6C8);
}

unint64_t sub_2518DAEE8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B571A0);
  uint64_t v0 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B548A8) - 8);
  uint64_t v1 = *(void *)(v0 + 72);
  unint64_t v2 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_25192DEA0;
  uint64_t v4 = (unsigned char *)(v3 + v2);
  *uint64_t v4 = 0;
  sub_25192B910();
  v4[v1] = 1;
  sub_25192B910();
  unint64_t result = sub_251821610(v3);
  qword_269B5A6E0 = result;
  return result;
}

unint64_t sub_2518DAFFC()
{
  unint64_t result = qword_269B57068;
  if (!qword_269B57068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57068);
  }
  return result;
}

uint64_t sub_2518DB050@<X0>(char *a1@<X8>)
{
  return sub_2517DB088(a1);
}

unint64_t sub_2518DB060()
{
  unint64_t result = qword_269B57070;
  if (!qword_269B57070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57070);
  }
  return result;
}

unint64_t sub_2518DB0B8()
{
  unint64_t result = qword_269B57078;
  if (!qword_269B57078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57078);
  }
  return result;
}

unint64_t sub_2518DB110()
{
  unint64_t result = qword_269B57080;
  if (!qword_269B57080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57080);
  }
  return result;
}

unint64_t sub_2518DB168()
{
  unint64_t result = qword_269B57088;
  if (!qword_269B57088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57088);
  }
  return result;
}

unint64_t sub_2518DB1C0()
{
  unint64_t result = qword_269B57090;
  if (!qword_269B57090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57090);
  }
  return result;
}

unint64_t sub_2518DB218()
{
  unint64_t result = qword_269B57098;
  if (!qword_269B57098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57098);
  }
  return result;
}

unint64_t sub_2518DB270()
{
  unint64_t result = qword_269B570A0;
  if (!qword_269B570A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B570A0);
  }
  return result;
}

uint64_t sub_2518DB2C4@<X0>(uint64_t a1@<X8>)
{
  return sub_2518DC1F4(&qword_269B531C0, MEMORY[0x263EFBE48], (uint64_t)qword_269B5A6C8, a1);
}

uint64_t sub_2518DB2FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2518DC2C4(a1, a2, a3, (void (*)(void))sub_2518DB328);
}

unint64_t sub_2518DB328()
{
  unint64_t result = qword_269B570A8;
  if (!qword_269B570A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B570A8);
  }
  return result;
}

uint64_t sub_2518DB37C(uint64_t a1)
{
  unint64_t v2 = sub_2518DB328();
  return MEMORY[0x270EE0C40](a1, v2);
}

unint64_t sub_2518DB3CC()
{
  unint64_t result = qword_269B570B0;
  if (!qword_269B570B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B570B0);
  }
  return result;
}

unint64_t sub_2518DB424()
{
  unint64_t result = qword_269B570B8;
  if (!qword_269B570B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B570B8);
  }
  return result;
}

unint64_t sub_2518DB47C()
{
  unint64_t result = qword_269B570C0;
  if (!qword_269B570C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B570C0);
  }
  return result;
}

uint64_t sub_2518DB4D0(uint64_t a1, uint64_t a2)
{
  return sub_2517DB368(a1, a2, &qword_269B531C8);
}

uint64_t sub_2518DB4F4(uint64_t a1)
{
  unint64_t v2 = sub_2518DB270();
  return MEMORY[0x270EE1C28](a1, v2);
}

uint64_t sub_2518DB540()
{
  return sub_2517E2990(&qword_269B570C8, &qword_269B570D0);
}

void sub_2518DB57C(void *a1@<X8>)
{
  *a1 = &unk_270251158;
}

unint64_t sub_2518DB590()
{
  unint64_t result = qword_269B570D8;
  if (!qword_269B570D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B570D8);
  }
  return result;
}

unint64_t sub_2518DB5E8()
{
  unint64_t result = qword_269B570E0;
  if (!qword_269B570E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B570E0);
  }
  return result;
}

uint64_t sub_2518DB63C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2518DB658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2518DC2C4(a1, a2, a3, (void (*)(void))sub_2518DB684);
}

unint64_t sub_2518DB684()
{
  unint64_t result = qword_269B570E8;
  if (!qword_269B570E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B570E8);
  }
  return result;
}

uint64_t sub_2518DB6D8(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x270FA2498](sub_2518DB6F8, 0, 0);
}

uint64_t sub_2518DB6F8()
{
  uint64_t v25 = v0;
  if (qword_269B53418 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_25192D1D0();
  __swift_project_value_buffer(v2, (uint64_t)qword_269B5A090);
  sub_2518DD274(v1);
  sub_2518DD274(v1);
  sub_2518DD274(v1);
  sub_2518DD274(v1);
  sub_2518DD274(v1);
  sub_2518DD274(v1);
  sub_2518DD274(v1);
  sub_2518DD274(v1);
  uint64_t v3 = sub_25192D1B0();
  os_log_type_t v4 = sub_25192D510();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = v0[4];
  if (v5)
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = v23;
    *(_DWORD *)uint64_t v7 = 136315906;
    log = v3;
    sub_25192B800();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B57190);
    uint64_t v8 = sub_25192D560();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    v0[2] = sub_2517F0D04(v8, v10, &v24);
    sub_25192D580();
    swift_bridgeObjectRelease();
    sub_2518DD2F4(v6);
    sub_2518DD2F4(v6);
    *(_WORD *)(v7 + 12) = 2080;
    sub_25192B800();
    uint64_t v11 = sub_25192D560();
    os_log_type_t type = v4;
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    v0[2] = sub_2517F0D04(v11, v13, &v24);
    sub_25192D580();
    swift_bridgeObjectRelease();
    sub_2518DD2F4(v6);
    sub_2518DD2F4(v6);
    *(_WORD *)(v7 + 22) = 2080;
    sub_25192B800();
    uint64_t v14 = sub_25192D560();
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    v0[2] = sub_2517F0D04(v14, v16, &v24);
    sub_25192D580();
    swift_bridgeObjectRelease();
    sub_2518DD2F4(v6);
    sub_2518DD2F4(v6);
    *(_WORD *)(v7 + 32) = 2080;
    sub_25192B800();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B57198);
    uint64_t v17 = sub_25192D560();
    v0[2] = sub_2517F0D04(v17, v18, &v24);
    sub_25192D580();
    swift_bridgeObjectRelease();
    sub_2518DD2F4(v6);
    sub_2518DD2F4(v6);
    uint64_t v3 = log;
    _os_log_impl(&dword_2517D6000, log, type, "Show Device Result Intent perform() called - successDeviceIDs: %s failedDeviceIDs: %s failedDeviceIDsToIgnore: %s userSpecificity: %s", (uint8_t *)v7, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x2533A75D0](v23, -1, -1);
    MEMORY[0x2533A75D0](v7, -1, -1);
  }
  else
  {
    sub_2518DD2F4(v0[4]);
    sub_2518DD2F4(v6);
    sub_2518DD2F4(v6);
    sub_2518DD2F4(v6);
    sub_2518DD2F4(v6);
    sub_2518DD2F4(v6);
    sub_2518DD2F4(v6);
    sub_2518DD2F4(v6);
  }

  sub_25192B700();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_2518DBAEC@<X0>(uint64_t a1@<X8>)
{
  return sub_2518DC1F4(&qword_269B531B8, MEMORY[0x263F06D40], (uint64_t)qword_269B5A6B0, a1);
}

uint64_t sub_2518DBB24(uint64_t a1)
{
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 64) = *(void *)(v1 + 48);
  BOOL v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 72) = v5;
  void *v5 = v2;
  v5[1] = sub_25180AF7C;
  v5[3] = a1;
  v5[4] = v2 + 16;
  return MEMORY[0x270FA2498](sub_2518DB6F8, 0, 0);
}

double sub_2518DBBF4@<D0>(uint64_t a1@<X8>)
{
  sub_2518DC920((uint64_t *)v4);
  long long v2 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v2;
  double result = *(double *)&v5;
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v6;
  return result;
}

uint64_t sub_2518DBC40(uint64_t a1)
{
  unint64_t v2 = sub_2518DB684();
  return MEMORY[0x270EE0D28](a1, v2);
}

uint64_t sub_2518DBC7C(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A6E8);
}

unint64_t sub_2518DBCA0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B57168);
  uint64_t v0 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B54898) - 8);
  uint64_t v1 = *(void *)(v0 + 72);
  unint64_t v2 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_25192DEA0;
  long long v4 = (unsigned char *)(v3 + v2);
  *long long v4 = 0;
  sub_25192B910();
  v4[v1] = 1;
  sub_25192B910();
  unint64_t result = sub_251821638(v3);
  qword_269B5A700 = result;
  return result;
}

uint64_t sub_2518DBDA4(char *a1, char *a2)
{
  return sub_2517DA630(*a1, *a2);
}

unint64_t sub_2518DBDB4()
{
  unint64_t result = qword_269B570F8;
  if (!qword_269B570F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B570F8);
  }
  return result;
}

uint64_t sub_2518DBE08()
{
  return sub_25192D920();
}

uint64_t sub_2518DBE70()
{
  sub_25192D300();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2518DBEBC()
{
  return sub_25192D920();
}

uint64_t sub_2518DBF20@<X0>(char *a1@<X8>)
{
  return sub_2517DB088(a1);
}

void sub_2518DBF2C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1836019570;
  if (*v1) {
    uint64_t v2 = 1701736314;
  }
  *a1 = v2;
  a1[1] = 0xE400000000000000;
}

unint64_t sub_2518DBF58()
{
  unint64_t result = qword_269B57100;
  if (!qword_269B57100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57100);
  }
  return result;
}

unint64_t sub_2518DBFB0()
{
  unint64_t result = qword_269B57108;
  if (!qword_269B57108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57108);
  }
  return result;
}

unint64_t sub_2518DC008()
{
  unint64_t result = qword_269B57110;
  if (!qword_269B57110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57110);
  }
  return result;
}

unint64_t sub_2518DC060()
{
  unint64_t result = qword_269B57118;
  if (!qword_269B57118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57118);
  }
  return result;
}

unint64_t sub_2518DC0B8()
{
  unint64_t result = qword_269B57120;
  if (!qword_269B57120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57120);
  }
  return result;
}

unint64_t sub_2518DC110()
{
  unint64_t result = qword_269B57128;
  if (!qword_269B57128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57128);
  }
  return result;
}

unint64_t sub_2518DC168()
{
  unint64_t result = qword_269B57130;
  if (!qword_269B57130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57130);
  }
  return result;
}

uint64_t sub_2518DC1BC@<X0>(uint64_t a1@<X8>)
{
  return sub_2518DC1F4(&qword_269B531D0, MEMORY[0x263EFBE48], (uint64_t)qword_269B5A6E8, a1);
}

uint64_t sub_2518DC1F4@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  return v9(a4, v8, v7);
}

uint64_t sub_2518DC298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2518DC2C4(a1, a2, a3, (void (*)(void))sub_2518DC30C);
}

uint64_t sub_2518DC2C4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2518DC30C()
{
  unint64_t result = qword_269B57138;
  if (!qword_269B57138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57138);
  }
  return result;
}

uint64_t sub_2518DC360(uint64_t a1)
{
  unint64_t v2 = sub_2518DC30C();
  return MEMORY[0x270EE0C40](a1, v2);
}

unint64_t sub_2518DC3B0()
{
  unint64_t result = qword_269B57140;
  if (!qword_269B57140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57140);
  }
  return result;
}

unint64_t sub_2518DC408()
{
  unint64_t result = qword_269B57148;
  if (!qword_269B57148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57148);
  }
  return result;
}

unint64_t sub_2518DC460()
{
  unint64_t result = qword_269B57150;
  if (!qword_269B57150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57150);
  }
  return result;
}

uint64_t sub_2518DC4B4(uint64_t a1, uint64_t a2)
{
  return sub_2517DB368(a1, a2, &qword_269B531D8);
}

uint64_t sub_2518DC4D8(uint64_t a1)
{
  unint64_t v2 = sub_2518DC168();
  return MEMORY[0x270EE1C28](a1, v2);
}

uint64_t sub_2518DC524()
{
  return sub_2517E2990(&qword_269B57158, &qword_269B57160);
}

void sub_2518DC560(void *a1@<X8>)
{
  *a1 = &unk_270251248;
}

ValueMetadata *type metadata accessor for UserSpecificity()
{
  return &type metadata for UserSpecificity;
}

uint64_t destroy for ShowDeviceResultIntent()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for ShowDeviceResultIntent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  sub_25192BA80();
  return a1;
}

void *assignWithCopy for ShowDeviceResultIntent(void *a1, void *a2)
{
  *a1 = *a2;
  sub_25192BA80();
  swift_release();
  a1[1] = a2[1];
  sub_25192BA80();
  swift_release();
  a1[2] = a2[2];
  sub_25192BA80();
  swift_release();
  a1[3] = a2[3];
  sub_25192BA80();
  swift_release();
  a1[4] = a2[4];
  sub_25192BA80();
  swift_release();
  a1[5] = a2[5];
  sub_25192BA80();
  swift_release();
  a1[6] = a2[6];
  sub_25192BA80();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ShowDeviceResultIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ShowDeviceResultIntent()
{
  return &type metadata for ShowDeviceResultIntent;
}

unsigned char *_s14HomeAppIntents15UserSpecificityOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2518DC8ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowDeviceResultIntent.SecondaryAccessoryControlDestination()
{
  return &type metadata for ShowDeviceResultIntent.SecondaryAccessoryControlDestination;
}

uint64_t sub_2518DC8E4()
{
  return sub_2517E2990(&qword_269B55010, &qword_269B55018);
}

uint64_t sub_2518DC920@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v61 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56920);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v58 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_25192B990();
  uint64_t v3 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B542E8);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  unint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v54 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B539C0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_25192BC50();
  uint64_t v76 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57170);
  sub_25192BC30();
  uint64_t v71 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v77 = v16 + 56;
  v71(v14, 1, 1, v15);
  LOBYTE(v78) = 2;
  uint64_t v19 = sub_25192B6D0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v22 = v20 + 56;
  v21(v11, 1, 1, v19);
  v21(v9, 1, 1, v19);
  unsigned int v74 = *MEMORY[0x263EFBDC8];
  BOOL v72 = *(void (**)(char *))(v3 + 104);
  uint64_t v63 = v5;
  v72(v5);
  uint64_t v73 = v3 + 104;
  sub_2518DC30C();
  uint64_t v62 = v14;
  uint64_t v60 = sub_25192B840();
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55BF8);
  sub_25192BC30();
  uint64_t v23 = v71;
  v71(v14, 1, 1, v76);
  LOBYTE(v78) = 4;
  uint64_t v69 = v22;
  uint64_t v70 = v19;
  unint64_t v65 = v21;
  v21(v11, 1, 1, v19);
  uint64_t v56 = v9;
  v21(v9, 1, 1, v19);
  uint64_t v24 = v63;
  uint64_t v25 = v72;
  ((void (*)(char *, void, uint64_t))v72)(v63, v74, v75);
  sub_25186C008();
  uint64_t v26 = v62;
  int v27 = v11;
  uint64_t v59 = sub_25192B840();
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57178);
  uint64_t v28 = v18;
  sub_25192BC30();
  v23(v26, 1, 1, v76);
  uint64_t v78 = 0;
  uint64_t v67 = sub_25192D240();
  uint64_t v29 = *(void *)(v67 - 8);
  uint64_t v66 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
  uint64_t v68 = v29 + 56;
  uint64_t v30 = v58;
  v66(v58, 1, 1, v67);
  uint64_t v31 = v70;
  char v32 = v65;
  v65(v27, 1, 1, v70);
  uint64_t v33 = v75;
  ((void (*)(char *, void, uint64_t))v25)(v24, v74, v75);
  uint64_t v57 = sub_25192B870();
  sub_25192BC30();
  v71(v26, 1, 1, v76);
  uint64_t v78 = 0;
  uint64_t v34 = v30;
  v66(v30, 1, 1, v67);
  uint64_t v35 = v27;
  v32(v27, 1, 1, v31);
  uint64_t v36 = v74;
  uint64_t v37 = v33;
  uint64_t v38 = (void (*)(char *, uint64_t, uint64_t))v72;
  ((void (*)(char *, void, uint64_t))v72)(v24, v74, v37);
  uint64_t v54 = v28;
  uint64_t v39 = v62;
  uint64_t v55 = sub_25192B870();
  sub_25192BC30();
  uint64_t v40 = v76;
  unint64_t v41 = v71;
  v71(v39, 1, 1, v76);
  uint64_t v78 = 0;
  v66(v34, 1, 1, v67);
  v32(v35, 1, 1, v70);
  uint64_t v42 = v63;
  uint64_t v43 = v75;
  v38(v63, v36, v75);
  uint64_t v68 = sub_25192B870();
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B56AE8);
  sub_25192BC30();
  unint64_t v44 = v39;
  v41(v39, 1, 1, v40);
  LOBYTE(v78) = 63;
  uint64_t v45 = v70;
  uint64_t v46 = v65;
  v65(v35, 1, 1, v70);
  uint64_t v47 = v56;
  v46(v56, 1, 1, v45);
  uint64_t v48 = v74;
  ((void (*)(char *, void, uint64_t))v72)(v42, v74, v43);
  sub_2517E4CA4();
  uint64_t v67 = sub_25192B840();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B57180);
  sub_25192BC30();
  v71(v44, 1, 1, v76);
  LOBYTE(v78) = 2;
  v46(v35, 1, 1, v45);
  v46(v47, 1, 1, v45);
  ((void (*)(char *, uint64_t, uint64_t))v72)(v42, v48, v75);
  sub_2518DB328();
  uint64_t result = sub_25192B840();
  unsigned int v50 = v61;
  uint64_t v51 = v59;
  *uint64_t v61 = v60;
  v50[1] = v51;
  uint64_t v52 = v55;
  v50[2] = v57;
  v50[3] = v52;
  uint64_t v53 = v67;
  v50[4] = v68;
  v50[5] = v53;
  v50[6] = result;
  return result;
}

uint64_t sub_2518DD274(uint64_t a1)
{
  return a1;
}

uint64_t sub_2518DD2F4(uint64_t a1)
{
  return a1;
}

void sub_2518DD374(unsigned char *a1@<X8>)
{
  *a1 = byte_251948E7E[(unint64_t)*(unsigned __int8 *)(v1 + 32) >> 1];
}

uint64_t AttributeKind.rawValue.getter()
{
  uint64_t result = 0xD000000000000015;
  switch(*v0)
  {
    case 1:
    case 6:
    case 0x17:
    case 0x1A:
    case 0x3B:
      return 0xD000000000000012;
    case 2:
      return 0x696C617551726961;
    case 3:
      return 0x4C79726574746162;
    case 4:
      return 0x656E746867697262;
    case 5:
      return 0xD000000000000015;
    case 7:
      return 0xD000000000000016;
    case 8:
      return 0xD000000000000016;
    case 9:
      return 0xD000000000000013;
    case 0xA:
      return 0xD000000000000017;
    case 0xB:
      return 0x676E696772616863;
    case 0xC:
      return 0xD000000000000010;
    case 0xD:
      return 0x726F6C6F63;
    case 0xE:
      return 0x44746361746E6F63;
    case 0xF:
      return 0xD000000000000017;
    case 0x10:
      return 0xD000000000000010;
    case 0x11:
      return 0xD000000000000010;
    case 0x12:
      return 0xD000000000000015;
    case 0x13:
      return 0xD000000000000021;
    case 0x14:
      return 0x48746E6572727563;
    case 0x15:
      return 0x50746E6572727563;
    case 0x16:
      return 0xD00000000000001ALL;
    case 0x18:
      return 0xD000000000000015;
    case 0x19:
      return 0xD000000000000013;
    case 0x1B:
      return 0x694C7265746C6966;
    case 0x1C:
      return 0x6573556E69;
    case 0x1D:
      return 0x657465446B61656CLL;
    case 0x1E:
      uint64_t v2 = 0x4C746867696CLL;
      goto LABEL_62;
    case 0x1F:
      return 0x6574746142776F6CLL;
    case 0x20:
      return 0x65446E6F69746F6DLL;
    case 0x21:
      return 0x4C6C61727574616ELL;
    case 0x22:
      return 0xD000000000000016;
    case 0x23:
      return 0xD000000000000013;
    case 0x24:
      return 0xD000000000000011;
    case 0x25:
      uint64_t v3 = 0x44656E6F7A6FLL;
      goto LABEL_37;
    case 0x26:
      return 0x736E654430316D70;
    case 0x27:
      uint64_t v3 = 0x44355F326D70;
LABEL_37:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6E65000000000000;
      break;
    case 0x28:
      uint64_t result = 0x6E6F697469736F70;
      break;
    case 0x29:
      uint64_t result = 0x7265776F70;
      break;
    case 0x2A:
      uint64_t result = 0xD000000000000011;
      break;
    case 0x2B:
      uint64_t result = 0xD000000000000011;
      break;
    case 0x2C:
      uint64_t result = 0x6E6F697461746F72;
      break;
    case 0x2D:
      uint64_t result = 6518386;
      break;
    case 0x2E:
      uint64_t result = 0x7461727544746573;
      break;
    case 0x2F:
      uint64_t result = 0x746544656B6F6D73;
      break;
    case 0x30:
      uint64_t result = 0xD000000000000015;
      break;
    case 0x31:
      uint64_t result = 0xD000000000000010;
      break;
    case 0x32:
      uint64_t result = 0xD000000000000016;
      break;
    case 0x33:
      uint64_t result = 0x6F44746567726174;
      break;
    case 0x34:
      uint64_t result = 0xD000000000000014;
      break;
    case 0x35:
      uint64_t result = 0xD000000000000029;
      break;
    case 0x36:
      uint64_t result = 0x7548746567726174;
      break;
    case 0x37:
      uint64_t result = 0x6F4C746567726174;
      break;
    case 0x38:
      uint64_t result = 0x6F50746567726174;
      break;
    case 0x39:
      uint64_t result = 0xD000000000000019;
      break;
    case 0x3A:
      uint64_t result = 0xD00000000000001DLL;
      break;
    case 0x3C:
      uint64_t result = 0xD00000000000001ELL;
      break;
    case 0x3D:
      uint64_t v2 = 0x4C7265746177;
LABEL_62:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7665000000000000;
      break;
    case 0x3E:
      uint64_t result = 1701736302;
      break;
    default:
      return result;
  }
  return result;
}

HomeAppIntents::AttributeKind_optional __swiftcall AttributeKind.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_25192D820();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 45;
  switch(v3)
  {
    case 0:
      goto LABEL_47;
    case 1:
      char v5 = 1;
      goto LABEL_47;
    case 2:
      char v5 = 2;
      goto LABEL_47;
    case 3:
      char v5 = 3;
      goto LABEL_47;
    case 4:
      char v5 = 4;
      goto LABEL_47;
    case 5:
      char v5 = 5;
      goto LABEL_47;
    case 6:
      char v5 = 6;
      goto LABEL_47;
    case 7:
      char v5 = 7;
      goto LABEL_47;
    case 8:
      char v5 = 8;
      goto LABEL_47;
    case 9:
      char v5 = 9;
      goto LABEL_47;
    case 10:
      char v5 = 10;
      goto LABEL_47;
    case 11:
      char v5 = 11;
      goto LABEL_47;
    case 12:
      char v5 = 12;
      goto LABEL_47;
    case 13:
      char v5 = 13;
      goto LABEL_47;
    case 14:
      char v5 = 14;
      goto LABEL_47;
    case 15:
      char v5 = 15;
      goto LABEL_47;
    case 16:
      char v5 = 16;
      goto LABEL_47;
    case 17:
      char v5 = 17;
      goto LABEL_47;
    case 18:
      char v5 = 18;
      goto LABEL_47;
    case 19:
      char v5 = 19;
      goto LABEL_47;
    case 20:
      char v5 = 20;
      goto LABEL_47;
    case 21:
      char v5 = 21;
      goto LABEL_47;
    case 22:
      char v5 = 22;
      goto LABEL_47;
    case 23:
      char v5 = 23;
      goto LABEL_47;
    case 24:
      char v5 = 24;
      goto LABEL_47;
    case 25:
      char v5 = 25;
      goto LABEL_47;
    case 26:
      char v5 = 26;
      goto LABEL_47;
    case 27:
      char v5 = 27;
      goto LABEL_47;
    case 28:
      char v5 = 28;
      goto LABEL_47;
    case 29:
      char v5 = 29;
      goto LABEL_47;
    case 30:
      char v5 = 30;
      goto LABEL_47;
    case 31:
      char v5 = 31;
      goto LABEL_47;
    case 32:
      char v5 = 32;
      goto LABEL_47;
    case 33:
      char v5 = 33;
      goto LABEL_47;
    case 34:
      char v5 = 34;
      goto LABEL_47;
    case 35:
      char v5 = 35;
      goto LABEL_47;
    case 36:
      char v5 = 36;
      goto LABEL_47;
    case 37:
      char v5 = 37;
      goto LABEL_47;
    case 38:
      char v5 = 38;
      goto LABEL_47;
    case 39:
      char v5 = 39;
      goto LABEL_47;
    case 40:
      char v5 = 40;
      goto LABEL_47;
    case 41:
      char v5 = 41;
      goto LABEL_47;
    case 42:
      char v5 = 42;
      goto LABEL_47;
    case 43:
      char v5 = 43;
      goto LABEL_47;
    case 44:
      char v5 = 44;
LABEL_47:
      char v6 = v5;
      break;
    case 45:
      break;
    case 46:
      char v6 = 46;
      break;
    case 47:
      char v6 = 47;
      break;
    case 48:
      char v6 = 48;
      break;
    case 49:
      char v6 = 49;
      break;
    case 50:
      char v6 = 50;
      break;
    case 51:
      char v6 = 51;
      break;
    case 52:
      char v6 = 52;
      break;
    case 53:
      char v6 = 53;
      break;
    case 54:
      char v6 = 54;
      break;
    case 55:
      char v6 = 55;
      break;
    case 56:
      char v6 = 56;
      break;
    case 57:
      char v6 = 57;
      break;
    case 58:
      char v6 = 58;
      break;
    case 59:
      char v6 = 59;
      break;
    case 60:
      char v6 = 60;
      break;
    case 61:
      char v6 = 61;
      break;
    case 62:
      char v6 = 62;
      break;
    default:
      char v6 = 63;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

uint64_t sub_2518DDDC8(_WORD *a1)
{
  unsigned int v2 = (unsigned __int16)*a1;
  uint64_t v3 = *v1;
  unsigned int v4 = v2 >> 14;
  int v5 = (v2 >> 8) & 0x3F;
  if (v4 != 1) {
    int v5 = *a1;
  }
  if (v4) {
    unsigned int v6 = v5;
  }
  else {
    unsigned int v6 = *a1;
  }
  uint64_t v7 = MEMORY[0x263F8EE88];
  switch(v3)
  {
    case 1:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v15;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48948];
      goto LABEL_76;
    case 2:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v16;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48830];
      goto LABEL_76;
    case 3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v17;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48878];
      goto LABEL_76;
    case 4:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v18;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48838];
      goto LABEL_76;
    case 5:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v19 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v19;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F489A0];
      goto LABEL_76;
    case 6:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v20 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v20;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48950];
      goto LABEL_76;
    case 7:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v21;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F489C8];
      goto LABEL_76;
    case 8:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v22 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v22;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F489D0];
      goto LABEL_76;
    case 9:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v23 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v23;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48968];
      goto LABEL_76;
    case 10:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v24 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v24;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48A00];
      goto LABEL_76;
    case 11:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v25 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v25;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F488A8];
      goto LABEL_76;
    case 12:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v26 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v26;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48988];
      goto LABEL_76;
    case 13:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v27 = sub_25192CAF0();
      uint64_t v28 = *(void *)(v27 - 8);
      uint64_t v29 = *(void *)(v28 + 72);
      unint64_t v30 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_25192DEA0;
      unint64_t v32 = v31 + v30;
      uint64_t v33 = *(void (**)(unint64_t, void, uint64_t))(v28 + 104);
      v33(v32, *MEMORY[0x263F48A68], v27);
      unint64_t v34 = v32 + v29;
      uint64_t v35 = (unsigned int *)MEMORY[0x263F48848];
      goto LABEL_72;
    case 14:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v36 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v36;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48880];
      goto LABEL_76;
    case 15:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v37 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v37;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48A08];
      goto LABEL_76;
    case 16:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v38 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v38;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48908];
      goto LABEL_76;
    case 17:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v39 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v39;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48A38];
      goto LABEL_76;
    case 18:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v40 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v40;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F489B0];
      goto LABEL_76;
    case 19:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v27 = sub_25192CAF0();
      uint64_t v41 = *(void *)(v27 - 8);
      uint64_t v42 = *(void *)(v41 + 72);
      unint64_t v43 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_25192DEA0;
      unint64_t v44 = v31 + v43;
      uint64_t v45 = (unsigned int *)MEMORY[0x263F48A60];
      goto LABEL_82;
    case 20:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v46 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v46;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48A10];
      goto LABEL_76;
    case 21:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v47 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v47;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F488D8];
      goto LABEL_76;
    case 22:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v48 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v48;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48A48];
      goto LABEL_76;
    case 23:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v49 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v49;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48958];
      goto LABEL_76;
    case 24:
      if (v6 == 11)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
        uint64_t v27 = sub_25192CAF0();
        uint64_t v41 = *(void *)(v27 - 8);
        uint64_t v42 = *(void *)(v41 + 72);
        unint64_t v96 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
        uint64_t v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = xmmword_25192DEA0;
        unint64_t v44 = v31 + v96;
        uint64_t v45 = (unsigned int *)MEMORY[0x263F48A20];
LABEL_82:
        uint64_t v33 = *(void (**)(unint64_t, void, uint64_t))(v41 + 104);
        v33(v44, *v45, v27);
        unint64_t v34 = v44 + v42;
        uint64_t v35 = (unsigned int *)MEMORY[0x263F48AC0];
        goto LABEL_72;
      }
      if (v6 != 29) {
        return v7;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v50 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v50;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F489A8];
      goto LABEL_76;
    case 25:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v51 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v51;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48970];
      goto LABEL_76;
    case 26:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v52 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v52;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F489E0];
      goto LABEL_76;
    case 27:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v53 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v53;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F488E0];
      goto LABEL_76;
    case 28:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v54 = *(void *)(v8 - 8);
      unint64_t v55 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v55;
      uint64_t v56 = *(void (**)(unint64_t, uint64_t, uint64_t))(v54 + 104);
      if (v6 == 20) {
        uint64_t v57 = *MEMORY[0x263F48858];
      }
      else {
        uint64_t v57 = *MEMORY[0x263F48AB8];
      }
      goto LABEL_77;
    case 29:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v58 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v58;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48890];
      goto LABEL_76;
    case 30:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v59 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v59;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48920];
      goto LABEL_76;
    case 31:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v60 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v60;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48918];
      goto LABEL_76;
    case 32:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v61 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v61;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F488C8];
      goto LABEL_76;
    case 33:
    case 45:
    case 62:
      return v7;
    case 34:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v62 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v62;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F489E8];
      goto LABEL_76;
    case 35:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v63 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v63;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48980];
      goto LABEL_76;
    case 36:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v64 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v64;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48928];
      goto LABEL_76;
    case 37:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v65 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v65;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48898];
      goto LABEL_76;
    case 38:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v66 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v66;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48860];
      goto LABEL_76;
    case 39:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v67 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v67;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F488A0];
      goto LABEL_76;
    case 40:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v68 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v68;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F488B0];
      goto LABEL_76;
    case 41:
      if (v6 > 0x1E) {
        goto LABEL_88;
      }
      if (((1 << v6) & 0x4A800201) != 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
        uint64_t v8 = sub_25192CAF0();
        uint64_t v9 = *(void *)(v8 - 8);
        unint64_t v69 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
        uint64_t v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_25192F930;
        unint64_t v12 = v11 + v69;
        uint64_t v13 = (unsigned int *)MEMORY[0x263F48AC0];
      }
      else
      {
        if (v6 == 2) {
          return v7;
        }
        if (v6 == 8)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
          uint64_t v27 = sub_25192CAF0();
          uint64_t v101 = *(void *)(v27 - 8);
          uint64_t v102 = *(void *)(v101 + 72);
          unint64_t v103 = (*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
          uint64_t v31 = swift_allocObject();
          *(_OWORD *)(v31 + 16) = xmmword_25192DEA0;
          unint64_t v104 = v31 + v103;
          uint64_t v33 = *(void (**)(unint64_t, void, uint64_t))(v101 + 104);
          v33(v104, *MEMORY[0x263F48AC0], v27);
          unint64_t v34 = v104 + v102;
          uint64_t v35 = (unsigned int *)MEMORY[0x263F48840];
          goto LABEL_72;
        }
LABEL_88:
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
        uint64_t v8 = sub_25192CAF0();
        uint64_t v9 = *(void *)(v8 - 8);
        unint64_t v105 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
        uint64_t v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_25192F930;
        unint64_t v12 = v11 + v105;
        uint64_t v13 = (unsigned int *)MEMORY[0x263F48840];
      }
LABEL_76:
      uint64_t v57 = *v13;
      uint64_t v56 = *(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 104);
LABEL_77:
      v56(v12, v57, v8);
      uint64_t v7 = sub_2517F6740(v11);
      swift_setDeallocating();
      goto LABEL_78;
    case 42:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v70 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v70;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48930];
      goto LABEL_76;
    case 43:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v71 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v71;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48938];
      goto LABEL_76;
    case 44:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v72 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v72;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F488B8];
      goto LABEL_76;
    case 46:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v73 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v73;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48870];
      goto LABEL_76;
    case 47:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v74 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v74;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F488C0];
      goto LABEL_76;
    case 48:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v75 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v75;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F489C0];
      goto LABEL_76;
    case 49:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v14;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48AC8];
      goto LABEL_76;
    case 50:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v76 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v76;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F489F0];
      goto LABEL_76;
    case 51:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v77 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v77;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F488E8];
      goto LABEL_76;
    case 52:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v78 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v78;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48990];
      goto LABEL_76;
    case 53:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v27 = sub_25192CAF0();
      uint64_t v79 = *(void *)(v27 - 8);
      uint64_t v80 = *(void *)(v79 + 72);
      unint64_t v81 = (*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_251933EF0;
      unint64_t v82 = v31 + v81;
      uint64_t v33 = *(void (**)(unint64_t, void, uint64_t))(v79 + 104);
      v33(v82, *MEMORY[0x263F48A58], v27);
      v33(v82 + v80, *MEMORY[0x263F48978], v27);
      uint64_t v83 = 2 * v80;
      unint64_t v84 = v82 + 2 * v80;
      uint64_t v85 = (unsigned int *)MEMORY[0x263F489B8];
      goto LABEL_71;
    case 54:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v86 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v86;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F489F8];
      goto LABEL_76;
    case 55:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v87 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v87;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48A30];
      goto LABEL_76;
    case 56:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v88 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v88;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F488D0];
      goto LABEL_76;
    case 57:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v89 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v89;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48A40];
      goto LABEL_76;
    case 58:
      if (v6 == 29)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
        uint64_t v27 = sub_25192CAF0();
        uint64_t v97 = *(void *)(v27 - 8);
        uint64_t v98 = *(void *)(v97 + 72);
        unint64_t v99 = (*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
        uint64_t v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = xmmword_251933EF0;
        unint64_t v100 = v31 + v99;
        uint64_t v33 = *(void (**)(unint64_t, void, uint64_t))(v97 + 104);
        v33(v100, *MEMORY[0x263F48A28], v27);
        v33(v100 + v98, *MEMORY[0x263F48940], v27);
        v33(v100 + 2 * v98, *MEMORY[0x263F48910], v27);
        unint64_t v34 = v100 + 3 * v98;
        uint64_t v35 = (unsigned int *)MEMORY[0x263F48900];
      }
      else
      {
        if (v6 != 11) {
          return v7;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
        uint64_t v27 = sub_25192CAF0();
        uint64_t v90 = *(void *)(v27 - 8);
        uint64_t v80 = *(void *)(v90 + 72);
        unint64_t v91 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
        uint64_t v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = xmmword_251933EF0;
        unint64_t v82 = v31 + v91;
        uint64_t v33 = *(void (**)(unint64_t, void, uint64_t))(v90 + 104);
        v33(v82, *MEMORY[0x263F48A18], v27);
        v33(v82 + v80, *MEMORY[0x263F48910], v27);
        uint64_t v83 = 2 * v80;
        unint64_t v84 = v82 + 2 * v80;
        uint64_t v85 = (unsigned int *)MEMORY[0x263F48900];
LABEL_71:
        v33(v84, *v85, v27);
        unint64_t v34 = v82 + v83 + v80;
        uint64_t v35 = (unsigned int *)MEMORY[0x263F48AC0];
      }
LABEL_72:
      v33(v34, *v35, v27);
      uint64_t v7 = sub_2517F6740(v31);
      swift_setDeallocating();
LABEL_78:
      swift_arrayDestroy();
      swift_deallocClassInstance();
      return v7;
    case 59:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v92 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v92;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48960];
      goto LABEL_76;
    case 60:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v93 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v93;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48A50];
      goto LABEL_76;
    case 61:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v94 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v94;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48850];
      goto LABEL_76;
    default:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B54CB0);
      uint64_t v8 = sub_25192CAF0();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_25192F930;
      unint64_t v12 = v11 + v10;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F48998];
      goto LABEL_76;
  }
}

unint64_t sub_2518E0908()
{
  uint64_t v1 = *(void *)(v0 + 8);
  switch(*(unsigned __int8 *)(v0 + 32) >> 1)
  {
    case 1:
    case 0xB:
    case 0xF:
    case 0x10:
    case 0x12:
    case 0x14:
    case 0x16:
    case 0x18:
    case 0x1C:
    case 0x2B:
    case 0x2E:
    case 0x35:
    case 0x36:
    case 0x39:
    case 0x3B:
    case 0x3D:
      unint64_t v6 = 0;
      sub_25192D620();
      sub_25192D310();
      goto LABEL_39;
    case 2:
      unint64_t v6 = 0;
      sub_25192D310();
LABEL_39:
      sub_25192D680();
      return v6;
    case 3:
      sub_25192D620();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0x4C79726574746162;
      goto LABEL_35;
    case 4:
      unint64_t v2 = 0x656E746867697262;
      goto LABEL_35;
    case 5:
      sub_25192D620();
      swift_bridgeObjectRelease();
      uint64_t v3 = 0xD000000000000018;
      goto LABEL_30;
    case 8:
      sub_25192D620();
      swift_bridgeObjectRelease();
      uint64_t v3 = 0xD000000000000019;
      goto LABEL_30;
    case 0xC:
    case 0x34:
      sub_25192D620();
      swift_bridgeObjectRelease();
      uint64_t v3 = 0xD000000000000013;
      goto LABEL_30;
    case 0xD:
      unint64_t v6 = 0;
      sub_25192D620();
      sub_25192D310();
      sub_25192D490();
      sub_25192D310();
      goto LABEL_46;
    case 0xE:
      sub_25192D620();
      swift_bridgeObjectRelease();
      uint64_t v3 = 0xD000000000000012;
      goto LABEL_30;
    case 0x11:
      sub_25192D620();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000018;
      goto LABEL_35;
    case 0x15:
      sub_25192D620();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000012;
      goto LABEL_35;
    case 0x19:
      sub_25192D620();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000016;
      goto LABEL_35;
    case 0x1A:
      sub_25192D620();
      swift_bridgeObjectRelease();
      uint64_t v3 = 0xD000000000000015;
      goto LABEL_30;
    case 0x1D:
    case 0x3E:
      unint64_t v6 = 0;
      sub_25192D620();
      sub_25192D310();
      sub_25192D680();
      goto LABEL_42;
    case 0x1E:
    case 0x3F:
      unint64_t v6 = 0;
      sub_25192D620();
      sub_25192D310();
      sub_25192D680();
      sub_25192D310();
      sub_25192D490();
LABEL_42:
      sub_25192D310();
      goto LABEL_46;
    case 0x1F:
      uint64_t v4 = 0x206573556E69;
      goto LABEL_24;
    case 0x20:
      sub_25192D620();
      swift_bridgeObjectRelease();
      uint64_t v3 = 0x657465446B61656CLL;
      goto LABEL_30;
    case 0x21:
      unint64_t v6 = 0;
      goto LABEL_45;
    case 0x22:
      uint64_t v3 = 0x6574746142776F6CLL;
      goto LABEL_30;
    case 0x23:
      sub_25192D620();
      swift_bridgeObjectRelease();
      unint64_t v6 = 0xD000000000000011;
      goto LABEL_37;
    case 0x24:
      sub_25192D620();
      swift_bridgeObjectRelease();
      uint64_t v3 = 0x4C6C61727574616ELL;
      goto LABEL_30;
    case 0x26:
      sub_25192D620();
      swift_bridgeObjectRelease();
      uint64_t v3 = 0xD000000000000016;
      goto LABEL_30;
    case 0x27:
      sub_25192D620();
      swift_bridgeObjectRelease();
      uint64_t v3 = 0xD000000000000014;
      goto LABEL_30;
    case 0x2C:
      uint64_t v4 = 0x207265776F70;
LABEL_24:
      uint64_t v3 = v4 & 0xFFFFFFFFFFFFLL | 0x203D000000000000;
      goto LABEL_30;
    case 0x2D:
      sub_25192D620();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000014;
      goto LABEL_35;
    case 0x30:
      unint64_t v6 = 0;
      swift_bridgeObjectRetain();
      sub_25192D620();
      sub_25192D310();
      sub_25192D680();
      sub_25192D310();
      MEMORY[0x2533A6BA0](v1, &type metadata for RobotVacuumCleanerCleanMode);
      sub_25192D310();
      swift_bridgeObjectRelease();
      sub_25192D310();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57CE0);
      sub_25192D2F0();
      sub_25192D310();
      swift_bridgeObjectRelease();
      sub_25192D310();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B55320);
      sub_25192D2F0();
      goto LABEL_37;
    case 0x31:
      sub_25192D620();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0x7461727544746573;
      goto LABEL_35;
    case 0x32:
      sub_25192D620();
      swift_bridgeObjectRelease();
      uint64_t v3 = 0xD000000000000010;
LABEL_30:
      unint64_t v6 = v3;
      goto LABEL_37;
    case 0x37:
      sub_25192D620();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000017;
      goto LABEL_35;
    case 0x3A:
      sub_25192D620();
      swift_bridgeObjectRelease();
      unint64_t v6 = 0xD000000000000011;
      goto LABEL_36;
    case 0x3C:
      sub_25192D620();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000015;
LABEL_35:
      unint64_t v6 = v2;
LABEL_36:
      sub_25192D7F0();
LABEL_37:
      sub_25192D310();
      swift_bridgeObjectRelease();
      return v6;
    case 0x41:
      unint64_t v6 = 0;
      goto LABEL_45;
    default:
      unint64_t v6 = 0;
      sub_25192D620();
LABEL_45:
      sub_25192D310();
LABEL_46:
      sub_25192D490();
      return v6;
  }
}

unint64_t sub_2518E1CEC@<X0>(unint64_t result@<X0>, _WORD *a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int v4 = (unsigned __int16)*a2;
  unsigned int v5 = v4 >> 14;
  unsigned int v6 = (v4 >> 8) & 0x3F;
  if (v5 != 1) {
    unsigned int v6 = *a2;
  }
  if (!v5) {
    unsigned int v6 = *a2;
  }
  switch(*(unsigned char *)result)
  {
    case 1:
      HomeAppIntents::AttributeKind_optional result = sub_25192C490();
      if (v37) {
        goto LABEL_6;
      }
      if (!result)
      {
        *(_OWORD *)a3 = 0u;
        *(_OWORD *)(a3 + 16) = 0u;
        char v7 = 2;
        goto LABEL_7;
      }
      if (result == 1)
      {
        *(void *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        char v7 = 2;
        goto LABEL_7;
      }
      goto LABEL_217;
    case 2:
      HomeAppIntents::AttributeKind_optional result = sub_25192C250();
      if ((v41 & 1) == 0)
      {
        switch(result)
        {
          case 0uLL:
            *(_OWORD *)a3 = 0u;
            *(_OWORD *)(a3 + 16) = 0u;
            char v7 = 4;
            goto LABEL_7;
          case 1uLL:
            uint64_t v73 = 1;
            goto LABEL_216;
          case 2uLL:
            uint64_t v73 = 2;
            goto LABEL_216;
          case 3uLL:
            uint64_t v73 = 3;
            goto LABEL_216;
          case 4uLL:
            *(void *)a3 = 4;
            *(void *)(a3 + 8) = 0;
            *(void *)(a3 + 16) = 0;
            *(void *)(a3 + 24) = 0;
            *(unsigned char *)(a3 + 32) = 4;
            return result;
          case 5uLL:
            uint64_t v73 = 5;
LABEL_216:
            *(void *)a3 = v73;
            *(void *)(a3 + 8) = 0;
            *(void *)(a3 + 16) = 0;
            *(void *)(a3 + 24) = 0;
            char v7 = 4;
            goto LABEL_7;
          default:
            goto LABEL_217;
        }
      }
      goto LABEL_6;
    case 3:
      HomeAppIntents::AttributeKind_optional result = sub_25192C2F0();
      if (v47) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 6;
      goto LABEL_7;
    case 4:
      HomeAppIntents::AttributeKind_optional result = sub_25192C260();
      if (v38) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 8;
      goto LABEL_7;
    case 5:
      HomeAppIntents::AttributeKind_optional result = sub_25192C560();
      if (v51) {
        goto LABEL_6;
      }
      *(void *)a3 = result == 1;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 10;
      goto LABEL_7;
    case 6:
      HomeAppIntents::AttributeKind_optional result = sub_25192C4A0();
      if (v31) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 12;
      goto LABEL_7;
    case 7:
      HomeAppIntents::AttributeKind_optional result = sub_25192C5B0();
      if (v50) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 14;
      goto LABEL_7;
    case 8:
      HomeAppIntents::AttributeKind_optional result = sub_25192C5C0();
      if (v26) {
        goto LABEL_6;
      }
      *(void *)a3 = result == 1;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 16;
      goto LABEL_7;
    case 9:
      HomeAppIntents::AttributeKind_optional result = sub_25192C4D0();
      if (v30) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 18;
      goto LABEL_7;
    case 0xA:
      HomeAppIntents::AttributeKind_optional result = sub_25192C610();
      if (v46) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 20;
      goto LABEL_7;
    case 0xB:
      HomeAppIntents::AttributeKind_optional result = sub_25192C340();
      if (v20) {
        goto LABEL_6;
      }
      switch(result)
      {
        case 0uLL:
          *(_OWORD *)a3 = 0u;
          *(_OWORD *)(a3 + 16) = 0u;
          char v7 = 22;
          goto LABEL_7;
        case 2uLL:
          uint64_t v21 = 2;
LABEL_184:
          *(void *)a3 = v21;
          *(void *)(a3 + 8) = 0;
          *(void *)(a3 + 16) = 0;
          *(void *)(a3 + 24) = 0;
          char v7 = 22;
          goto LABEL_7;
        case 1uLL:
          uint64_t v21 = 1;
          goto LABEL_184;
      }
      goto LABEL_217;
    case 0xC:
      HomeAppIntents::AttributeKind_optional result = sub_25192C520();
      if (v35) {
        goto LABEL_6;
      }
      *(void *)a3 = result == 1;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 24;
      goto LABEL_7;
    case 0xD:
      HomeAppIntents::AttributeKind_optional result = sub_25192C700();
      if (v16) {
        goto LABEL_6;
      }
      unint64_t v17 = result;
      HomeAppIntents::AttributeKind_optional result = sub_25192C280();
      if (v18) {
        goto LABEL_6;
      }
      *(void *)a3 = v17;
      *(void *)(a3 + 8) = result;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 26;
      goto LABEL_7;
    case 0xE:
      HomeAppIntents::AttributeKind_optional result = sub_25192C300();
      if (v39) {
        goto LABEL_6;
      }
      *(void *)a3 = result == 0;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 28;
      goto LABEL_7;
    case 0xF:
      HomeAppIntents::AttributeKind_optional result = sub_25192C620();
      if (v48) {
        goto LABEL_6;
      }
      switch(result)
      {
        case 0uLL:
          *(_OWORD *)a3 = 0u;
          *(_OWORD *)(a3 + 16) = 0u;
          char v7 = 30;
          goto LABEL_7;
        case 2uLL:
          uint64_t v49 = 2;
LABEL_188:
          *(void *)a3 = v49;
          *(void *)(a3 + 8) = 0;
          *(void *)(a3 + 16) = 0;
          *(void *)(a3 + 24) = 0;
          char v7 = 30;
          goto LABEL_7;
        case 1uLL:
          uint64_t v49 = 1;
          goto LABEL_188;
      }
      goto LABEL_217;
    case 0x10:
      HomeAppIntents::AttributeKind_optional result = sub_25192C3F0();
      if ((v57 & 1) == 0)
      {
        switch(result)
        {
          case 0uLL:
            *(_OWORD *)a3 = 0u;
            *(_OWORD *)(a3 + 16) = 0u;
            char v7 = 32;
            goto LABEL_7;
          case 1uLL:
            uint64_t v72 = 1;
            goto LABEL_210;
          case 2uLL:
            uint64_t v72 = 2;
            goto LABEL_210;
          case 3uLL:
            uint64_t v72 = 3;
            goto LABEL_210;
          case 4uLL:
            uint64_t v72 = 4;
LABEL_210:
            *(void *)a3 = v72;
            *(void *)(a3 + 8) = 0;
            *(void *)(a3 + 16) = 0;
            *(void *)(a3 + 24) = 0;
            char v7 = 32;
            goto LABEL_7;
          default:
            goto LABEL_217;
        }
      }
      goto LABEL_6;
    case 0x11:
      HomeAppIntents::AttributeKind_optional result = sub_25192C690();
      if ((v42 & 1) == 0)
      {
        switch(result)
        {
          case 0uLL:
            *(_OWORD *)a3 = 0u;
            *(_OWORD *)(a3 + 16) = 0u;
            char v7 = 40;
            goto LABEL_7;
          case 1uLL:
            uint64_t v71 = 1;
            goto LABEL_200;
          case 2uLL:
            uint64_t v71 = 2;
            goto LABEL_200;
          case 3uLL:
            uint64_t v71 = 3;
LABEL_200:
            *(void *)a3 = v71;
            *(void *)(a3 + 8) = 0;
            *(void *)(a3 + 16) = 0;
            *(void *)(a3 + 24) = 0;
            char v7 = 40;
            goto LABEL_7;
          default:
            goto LABEL_217;
        }
      }
      goto LABEL_6;
    case 0x12:
      HomeAppIntents::AttributeKind_optional result = sub_25192C580();
      if (v45) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 34;
      goto LABEL_7;
    case 0x13:
      HomeAppIntents::AttributeKind_optional result = sub_25192C6F0();
      if (v55) {
        goto LABEL_6;
      }
      if (result >= 4) {
        goto LABEL_217;
      }
      *(void *)a3 = qword_251948EC0[result];
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 36;
      goto LABEL_7;
    case 0x14:
      HomeAppIntents::AttributeKind_optional result = sub_25192C630();
      if (v61) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 38;
      goto LABEL_7;
    case 0x15:
      HomeAppIntents::AttributeKind_optional result = sub_25192C3B0();
      if (v34) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 42;
      goto LABEL_7;
    case 0x16:
      HomeAppIntents::AttributeKind_optional result = sub_25192C6B0();
      if ((v32 & 1) == 0)
      {
        switch(result)
        {
          case 0uLL:
            uint64_t v33 = 1;
            goto LABEL_205;
          case 1uLL:
            uint64_t v33 = 2;
            goto LABEL_205;
          case 2uLL:
            uint64_t v33 = 3;
            goto LABEL_205;
          case 3uLL:
            *(_OWORD *)a3 = 0u;
            *(_OWORD *)(a3 + 16) = 0u;
            char v7 = 44;
            goto LABEL_7;
          case 4uLL:
            uint64_t v33 = 4;
LABEL_205:
            *(void *)a3 = v33;
            *(void *)(a3 + 8) = 0;
            *(void *)(a3 + 16) = 0;
            *(void *)(a3 + 24) = 0;
            char v7 = 44;
            goto LABEL_7;
          default:
            goto LABEL_217;
        }
      }
      goto LABEL_6;
    case 0x17:
      HomeAppIntents::AttributeKind_optional result = sub_25192C4B0();
      if (v65) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 46;
      goto LABEL_7;
    case 0x18:
      if (v6 == 11)
      {
        HomeAppIntents::AttributeKind_optional result = sub_25192C650();
        if ((v70 & 1) == 0)
        {
          if (result < 4)
          {
            unint64_t v14 = &unk_251948EF8;
            goto LABEL_163;
          }
LABEL_217:
          sub_25192D6A0();
          __break(1u);
          JUMPOUT(0x2518E2880);
        }
      }
      else if (v6 == 29)
      {
        HomeAppIntents::AttributeKind_optional result = sub_25192C570();
        if ((v13 & 1) == 0)
        {
          if (result < 3)
          {
            unint64_t v14 = &unk_251948EE0;
LABEL_163:
            *(void *)a3 = v14[result];
            *(void *)(a3 + 8) = 0;
            *(void *)(a3 + 16) = 0;
            *(void *)(a3 + 24) = 0;
            char v7 = 48;
            goto LABEL_7;
          }
          goto LABEL_217;
        }
      }
      goto LABEL_6;
    case 0x19:
      HomeAppIntents::AttributeKind_optional result = sub_25192C4E0();
      if (v62) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 50;
      goto LABEL_7;
    case 0x1A:
      HomeAppIntents::AttributeKind_optional result = sub_25192C5D0();
      if (v63) {
        goto LABEL_6;
      }
      *(void *)a3 = result == 1;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 52;
      goto LABEL_7;
    case 0x1B:
      HomeAppIntents::AttributeKind_optional result = sub_25192C3C0();
      if (v52) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 54;
      goto LABEL_7;
    case 0x1C:
      if (v6 == 20) {
        HomeAppIntents::AttributeKind_optional result = sub_25192C2B0();
      }
      else {
        HomeAppIntents::AttributeKind_optional result = sub_25192C720();
      }
      if (result == 2) {
        goto LABEL_6;
      }
      *(void *)a3 = result & 1;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 62;
      goto LABEL_7;
    case 0x1D:
      HomeAppIntents::AttributeKind_optional result = sub_25192C310();
      if (v53) {
        goto LABEL_6;
      }
      *(void *)a3 = result == 1;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 64;
      goto LABEL_7;
    case 0x1E:
      HomeAppIntents::AttributeKind_optional result = sub_25192C440();
      if (v22) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 66;
      goto LABEL_7;
    case 0x1F:
      HomeAppIntents::AttributeKind_optional result = sub_25192C420();
      if (v15) {
        goto LABEL_6;
      }
      *(void *)a3 = result == 1;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 68;
      goto LABEL_7;
    case 0x20:
      HomeAppIntents::AttributeKind_optional result = sub_25192C380();
      if (result == 2) {
        goto LABEL_6;
      }
      *(void *)a3 = result & 1;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 70;
      goto LABEL_7;
    case 0x21:
    case 0x2D:
    case 0x3E:
      goto LABEL_6;
    case 0x22:
      HomeAppIntents::AttributeKind_optional result = sub_25192C5E0();
      if (v12) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 74;
      goto LABEL_7;
    case 0x23:
      HomeAppIntents::AttributeKind_optional result = sub_25192C500();
      if (result == 2) {
        goto LABEL_6;
      }
      *(void *)a3 = result & 1;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 76;
      goto LABEL_7;
    case 0x24:
      HomeAppIntents::AttributeKind_optional result = sub_25192C450();
      if (v64) {
        goto LABEL_6;
      }
      *(void *)a3 = result == 1;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 78;
      goto LABEL_7;
    case 0x25:
      HomeAppIntents::AttributeKind_optional result = sub_25192C320();
      if (v56) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 80;
      goto LABEL_7;
    case 0x26:
      HomeAppIntents::AttributeKind_optional result = sub_25192C2C0();
      if (v28) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 82;
      goto LABEL_7;
    case 0x27:
      HomeAppIntents::AttributeKind_optional result = sub_25192C330();
      if (v40) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 84;
      goto LABEL_7;
    case 0x28:
      HomeAppIntents::AttributeKind_optional result = sub_25192C350();
      if (v59) {
        goto LABEL_6;
      }
      if (result)
      {
        if (result == 2)
        {
          uint64_t v60 = 4;
        }
        else
        {
          if (result != 1) {
            goto LABEL_217;
          }
          uint64_t v60 = 2;
        }
      }
      else
      {
        uint64_t v60 = 3;
      }
      *(void *)a3 = v60;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 86;
      goto LABEL_7;
    case 0x29:
      if (v6 > 0x1E) {
        goto LABEL_170;
      }
      if (((1 << v6) & 0x4A800201) != 0)
      {
        HomeAppIntents::AttributeKind_optional result = sub_25192C730();
        goto LABEL_14;
      }
      if (v6 != 2)
      {
        if (v6 == 8)
        {
          HomeAppIntents::AttributeKind_optional result = sub_25192C730();
          if (result != 2)
          {
LABEL_15:
            *(void *)a3 = result & 1;
            *(void *)(a3 + 8) = 0;
            *(void *)(a3 + 16) = 0;
            *(void *)(a3 + 24) = 0;
            char v7 = 88;
            goto LABEL_7;
          }
        }
LABEL_170:
        HomeAppIntents::AttributeKind_optional result = sub_25192C270();
LABEL_14:
        if (result == 2) {
          goto LABEL_6;
        }
        goto LABEL_15;
      }
LABEL_6:
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      char v7 = -2;
LABEL_7:
      *(unsigned char *)(a3 + 32) = v7;
      return result;
    case 0x2A:
      HomeAppIntents::AttributeKind_optional result = sub_25192C460();
      if (v19) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 90;
      goto LABEL_7;
    case 0x2B:
      HomeAppIntents::AttributeKind_optional result = sub_25192C470();
      if (v54) {
        goto LABEL_6;
      }
      if (!result)
      {
        *(_OWORD *)a3 = 0u;
        *(_OWORD *)(a3 + 16) = 0u;
        char v7 = 92;
        goto LABEL_7;
      }
      if (result == 1)
      {
        *(void *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        char v7 = 92;
        goto LABEL_7;
      }
      goto LABEL_217;
    case 0x2C:
      HomeAppIntents::AttributeKind_optional result = sub_25192C360();
      if (v68) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 94;
      goto LABEL_7;
    case 0x2E:
      HomeAppIntents::AttributeKind_optional result = sub_25192C2E0();
      if (v10) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 98;
      goto LABEL_7;
    case 0x2F:
      HomeAppIntents::AttributeKind_optional result = sub_25192C370();
      if (v23) {
        goto LABEL_6;
      }
      *(void *)a3 = result == 1;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 100;
      goto LABEL_7;
    case 0x30:
      HomeAppIntents::AttributeKind_optional result = sub_25192C5A0();
      if (v27) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 102;
      goto LABEL_7;
    case 0x31:
      HomeAppIntents::AttributeKind_optional result = sub_25192C770();
      if (v8) {
        goto LABEL_6;
      }
      *(void *)a3 = result == 1;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 104;
      goto LABEL_7;
    case 0x32:
      HomeAppIntents::AttributeKind_optional result = sub_25192C5F0();
      if (v69) {
        goto LABEL_6;
      }
      if (!result)
      {
        *(_OWORD *)a3 = 0u;
        *(_OWORD *)(a3 + 16) = 0u;
        char v7 = 106;
        goto LABEL_7;
      }
      if (result == 1)
      {
        *(void *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        char v7 = 106;
        goto LABEL_7;
      }
      goto LABEL_217;
    case 0x33:
      HomeAppIntents::AttributeKind_optional result = sub_25192C3D0();
      if (v67) {
        goto LABEL_6;
      }
      if (!result)
      {
        *(_OWORD *)a3 = 0u;
        *(_OWORD *)(a3 + 16) = 0u;
        char v7 = 108;
        goto LABEL_7;
      }
      if (result == 1)
      {
        *(void *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        char v7 = 108;
        goto LABEL_7;
      }
      goto LABEL_217;
    case 0x34:
      HomeAppIntents::AttributeKind_optional result = sub_25192C540();
      if (v9) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 110;
      goto LABEL_7;
    case 0x35:
      return sub_2518E677C(a3);
    case 0x36:
      HomeAppIntents::AttributeKind_optional result = sub_25192C600();
      if (v66) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 112;
      goto LABEL_7;
    case 0x37:
      HomeAppIntents::AttributeKind_optional result = sub_25192C680();
      if (v11) {
        goto LABEL_6;
      }
      if (result)
      {
        if (result == 1)
        {
          *(void *)a3 = 1;
          *(void *)(a3 + 8) = 0;
          *(void *)(a3 + 16) = 0;
          *(void *)(a3 + 24) = 0;
          char v7 = 114;
          goto LABEL_7;
        }
        goto LABEL_217;
      }
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      char v7 = 114;
      goto LABEL_7;
    case 0x38:
      HomeAppIntents::AttributeKind_optional result = sub_25192C3A0();
      if (v58) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 116;
      goto LABEL_7;
    case 0x39:
      HomeAppIntents::AttributeKind_optional result = sub_25192C6A0();
      if ((v24 & 1) == 0)
      {
        switch(result)
        {
          case 0uLL:
            uint64_t v25 = 1;
            goto LABEL_196;
          case 1uLL:
            uint64_t v25 = 2;
            goto LABEL_196;
          case 2uLL:
            uint64_t v25 = 3;
LABEL_196:
            *(void *)a3 = v25;
            *(void *)(a3 + 8) = 0;
            *(void *)(a3 + 16) = 0;
            *(void *)(a3 + 24) = 0;
            char v7 = 118;
            goto LABEL_7;
          case 3uLL:
            *(_OWORD *)a3 = 0u;
            *(_OWORD *)(a3 + 16) = 0u;
            char v7 = 118;
            goto LABEL_7;
          default:
            goto LABEL_217;
        }
      }
      goto LABEL_6;
    case 0x3A:
      if (v6 == 11)
      {
        return sub_2518E64E0(a3);
      }
      else
      {
        if (v6 != 29) {
          goto LABEL_6;
        }
        return sub_2518E65FC(a3);
      }
    case 0x3B:
      HomeAppIntents::AttributeKind_optional result = sub_25192C4C0();
      if (v29) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 120;
      goto LABEL_7;
    case 0x3C:
      HomeAppIntents::AttributeKind_optional result = sub_25192C6D0();
      if (v43) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = 0x80;
      goto LABEL_7;
    case 0x3D:
      HomeAppIntents::AttributeKind_optional result = sub_25192C290();
      if (v44) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      char v7 = -126;
      goto LABEL_7;
    default:
      HomeAppIntents::AttributeKind_optional result = sub_25192C550();
      if (v36) {
        goto LABEL_6;
      }
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      *(unsigned char *)(a3 + 32) = 0;
      return result;
  }
}

uint64_t sub_2518E29DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v137 = sub_25192CF50();
  char v119 = *(void (***)(char *, uint64_t))(v137 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v137);
  uint64_t v132 = (char *)&v102 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v136 = (char *)&v102 - v4;
  uint64_t v144 = sub_25192CF40();
  char v120 = *(void **)(v144 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v144);
  uint64_t v135 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v143 = (char *)&v102 - v7;
  uint64_t v8 = sub_25192CF70();
  uint64_t v145 = *(void *)(v8 - 8);
  uint64_t v146 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v142 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v147 = (char *)&v102 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B55D28);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v138 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_25192CE40();
  uint64_t v134 = *(void *)(v122 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v122);
  char v121 = (char *)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v129 = (char *)&v102 - v16;
  uint64_t v128 = (void (**)(char *, char *, uint64_t))sub_25192CDF0();
  unsigned int v127 = (void (**)(char *, char *, uint64_t))*(v128 - 1);
  MEMORY[0x270FA5388](v128);
  uint64_t v126 = (uint64_t (**)(char *, uint64_t))((char *)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v141 = sub_25192BFE0();
  uint64_t v117 = *(unsigned __int8 **)(v141 - 8);
  MEMORY[0x270FA5388](v141);
  char v19 = (char *)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B545C8);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v139 = (uint64_t)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  char v24 = (char *)&v102 - v23;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57CF8);
  MEMORY[0x270FA5388](v25 - 8);
  char v27 = (char *)&v102 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_25192C060();
  uint64_t v124 = *(void (***)(char *, uint64_t))(v125 - 8);
  MEMORY[0x270FA5388](v125);
  uint64_t v118 = (char *)&v102 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_25192CEF0();
  uint64_t v130 = *(void *)(v29 - 8);
  uint64_t v131 = v29;
  MEMORY[0x270FA5388](v29);
  uint64_t v133 = (char *)&v102 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_25192CC00();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  char v34 = (char *)&v102 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_25192C1F0();
  uint64_t v36 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  char v38 = (char *)&v102 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t (**)(void, void), uint64_t))(v36 + 16))(v38, v140, v35);
  int v39 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v38, v35);
  if (v39 == *MEMORY[0x263F483D0])
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v38, v31);
    char v40 = sub_25192CBF0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    *(void *)a1 = v40 & 1;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(unsigned char *)(a1 + 32) = 88;
    return result;
  }
  uint64_t v123 = (_OWORD *)a1;
  if (v39 != *MEMORY[0x263F483C0])
  {
    char v48 = v123;
    *uint64_t v123 = 0u;
    v48[1] = 0u;
    *((unsigned char *)v48 + 32) = -2;
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v38, v35);
  }
  (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
  (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v133, v38, v131);
  sub_25192CE00();
  uint64_t v42 = sub_25192C070();
  uint64_t v43 = *(void *)(v42 - 8);
  char v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48);
  int v45 = v44(v24, 1, v42);
  uint64_t v140 = (uint64_t (**)(void, void))v42;
  if (v45 == 1)
  {
    sub_2517E16E0((uint64_t)v24, &qword_269B545C8);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v124[7])(v27, 1, 1, v125);
    char v46 = v142;
    uint64_t v47 = (uint64_t)v138;
LABEL_8:
    sub_2517E16E0((uint64_t)v27, &qword_269B57CF8);
    uint64_t v114 = 0;
    int v113 = 1;
    goto LABEL_10;
  }
  sub_25192BFF0();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v24, v42);
  uint64_t v49 = v124;
  uint64_t v50 = v125;
  int v51 = ((uint64_t (*)(char *, uint64_t, uint64_t))v124[6])(v27, 1, v125);
  char v46 = v142;
  uint64_t v47 = (uint64_t)v138;
  if (v51 == 1) {
    goto LABEL_8;
  }
  char v52 = v118;
  ((void (*)(char *, char *, uint64_t))v49[4])(v118, v27, v50);
  uint64_t v114 = sub_25192C040();
  v49[1](v52, v50);
  int v113 = 0;
LABEL_10:
  uint64_t v53 = v139;
  sub_25192CE00();
  char v54 = v140;
  if (v44((char *)v53, 1, (uint64_t)v140) == 1)
  {
    sub_2517E16E0(v53, &qword_269B545C8);
  }
  else
  {
    uint64_t v55 = sub_25192C000();
    (*(void (**)(uint64_t, uint64_t (**)(void, void)))(v43 + 8))(v53, v54);
    if (v55)
    {
      int64_t v56 = *(void *)(v55 + 16);
      if (v56)
      {
        uint64_t v148 = (void *)MEMORY[0x263F8EE78];
        sub_2518C3820(0, v56, 0);
        uint64_t v140 = (uint64_t (**)(void, void))*((void *)v117 + 2);
        unint64_t v57 = (v117[80] + 32) & ~(unint64_t)v117[80];
        uint64_t v125 = v55;
        unint64_t v58 = v55 + v57;
        uint64_t v139 = *((void *)v117 + 9);
        char v59 = (void (**)(char *, uint64_t))(v117 + 8);
        do
        {
          uint64_t v60 = v141;
          ((void (*)(char *, unint64_t, uint64_t))v140)(v19, v58, v141);
          unsigned int v61 = sub_25192BFB0();
          (*v59)(v19, v60);
          char v62 = v148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2518C3820(0, v62[2] + 1, 1);
            char v62 = v148;
          }
          unint64_t v64 = v62[2];
          unint64_t v63 = v62[3];
          if (v64 >= v63 >> 1)
          {
            sub_2518C3820(v63 > 1, v64 + 1, 1);
            char v62 = v148;
          }
          v62[2] = v64 + 1;
          v62[v64 + 4] = v61;
          v58 += v139;
          --v56;
        }
        while (v56);
        swift_bridgeObjectRelease();
        uint64_t v65 = 0;
        char v46 = v142;
        uint64_t v47 = (uint64_t)v138;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v65 = 0;
        char v62 = (void *)MEMORY[0x263F8EE78];
      }
      goto LABEL_23;
    }
  }
  char v62 = 0;
  uint64_t v65 = 0;
LABEL_23:
  char v66 = (char *)v126;
  sub_25192CE50();
  sub_2518E688C((char *)&v148);
  ((void (*)(char *, void (**)(char *, char *, uint64_t)))v127[1])(v66, v128);
  unsigned int v67 = v148;
  char v68 = v123;
  if (v148 == 15)
  {
    uint64_t v141 = 0;
    char v69 = v129;
    sub_25192CE60();
    uint64_t v70 = v134;
    uint64_t v71 = v121;
    uint64_t v72 = v122;
    (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v121, v69, v122);
    int v73 = (*(uint64_t (**)(char *, uint64_t))(v70 + 88))(v71, v72);
    if (v73 == *MEMORY[0x263F48DF8])
    {
      unsigned int v67 = 1;
      uint64_t v65 = v141;
    }
    else if (v73 == *MEMORY[0x263F48E00])
    {
      unsigned int v67 = 0;
      uint64_t v65 = v141;
    }
    else if (v73 == *MEMORY[0x263F48DF0])
    {
      unsigned int v67 = 2;
      uint64_t v65 = v141;
    }
    else
    {
      uint64_t v65 = v141;
      if (v73 == *MEMORY[0x263F48DE0])
      {
        unsigned int v67 = 3;
      }
      else if (v73 == *MEMORY[0x263F48DD8])
      {
        unsigned int v67 = 4;
      }
      else if (v73 == *MEMORY[0x263F48E08])
      {
        unsigned int v67 = 5;
      }
      else
      {
        if (v73 != *MEMORY[0x263F48DE8]) {
          goto LABEL_88;
        }
        unsigned int v67 = 6;
      }
    }
    (*(void (**)(char *, uint64_t))(v134 + 8))(v129, v72);
  }
  sub_25192CE10();
  uint64_t v74 = sub_25192CEE0();
  uint64_t v75 = *(void *)(v74 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v47, 1, v74) == 1)
  {
    sub_2517E16E0(v47, &qword_269B55D28);
    unint64_t v76 = (char *)MEMORY[0x263F8EE78];
LABEL_84:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v130 + 8))(v133, v131);
    *(void *)char v68 = v67;
    *((void *)v68 + 1) = v76;
    char v100 = v113 | 0x60;
    uint64_t v101 = v114;
    *((void *)v68 + 2) = v62;
    *((void *)v68 + 3) = v101;
    *((unsigned char *)v68 + 32) = v100;
    return result;
  }
  sub_25192CED0();
  (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v47, v74);
  uint64_t v77 = swift_bridgeObjectRetain();
  unint64_t v78 = (void *)sub_25183465C(v77);
  swift_bridgeObjectRelease();
  uint64_t v148 = v78;
  sub_2519012C8(&v148);
  if (v65) {
    goto LABEL_87;
  }
  swift_bridgeObjectRelease();
  uint64_t v79 = v148[2];
  uint64_t v80 = v146;
  if (!v79)
  {
    swift_release();
    unint64_t v76 = (char *)MEMORY[0x263F8EE78];
    char v68 = v123;
    goto LABEL_84;
  }
  unsigned int v108 = v67;
  uint64_t v141 = *(void *)(v145 + 16);
  unint64_t v81 = (char *)v148 + ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80));
  uint64_t v140 = (uint64_t (**)(void, void))(v145 + 88);
  LODWORD(v139) = *MEMORY[0x263F48F90];
  LODWORD(v129) = *MEMORY[0x263F48F98];
  LODWORD(v122) = *MEMORY[0x263F48FB8];
  uint64_t v134 = v145 + 96;
  char v121 = (char *)(v119 + 4);
  uint64_t v118 = (char *)(v119 + 2);
  uint64_t v117 = (unsigned __int8 *)(v119 + 11);
  int v116 = *MEMORY[0x263F48FB0];
  int v112 = *MEMORY[0x263F48FA8];
  int v110 = *MEMORY[0x263F48FA0];
  ++v119;
  unint64_t v82 = (void (**)(char *, uint64_t))(v145 + 8);
  uint64_t v128 = (void (**)(char *, char *, uint64_t))(v120 + 4);
  unsigned int v127 = (void (**)(char *, char *, uint64_t))(v120 + 2);
  uint64_t v126 = (uint64_t (**)(char *, uint64_t))(v120 + 11);
  LODWORD(v125) = *MEMORY[0x263F48F58];
  int v115 = *MEMORY[0x263F48F68];
  int v111 = *MEMORY[0x263F48F70];
  int v109 = *MEMORY[0x263F48F78];
  int v107 = *MEMORY[0x263F48F88];
  int v106 = *MEMORY[0x263F48F80];
  int v105 = *MEMORY[0x263F48F50];
  int v104 = *MEMORY[0x263F48F48];
  int v103 = *MEMORY[0x263F48F60];
  int v102 = *MEMORY[0x263F48F40];
  uint64_t v124 = (void (**)(char *, uint64_t))(v120 + 1);
  v145 += 16;
  uint64_t v138 = *(char **)(v145 + 56);
  char v120 = v148;
  sub_25192BA80();
  unint64_t v76 = (char *)MEMORY[0x263F8EE78];
  uint64_t v83 = v147;
  unint64_t v84 = (void (*)(char *, char *, uint64_t))v141;
  while (1)
  {
    v84(v83, v81, v80);
    v84(v46, v83, v80);
    int v86 = (*v140)(v46, v80);
    if (v86 == v139)
    {
      (*(void (**)(char *, uint64_t))v134)(v46, v80);
      unint64_t v87 = v46;
      unint64_t v89 = v143;
      uint64_t v88 = v144;
      (*v128)(v143, v87, v144);
      uint64_t v90 = v135;
      (*v127)(v135, v89, v88);
      int v91 = (*v126)(v90, v88);
      if (v91 == v125)
      {
        char v92 = 3;
      }
      else if (v91 == v115)
      {
        char v92 = 5;
      }
      else if (v91 == v111)
      {
        char v92 = 4;
      }
      else if (v91 == v109)
      {
        char v92 = 6;
      }
      else if (v91 == v107)
      {
        char v92 = 7;
      }
      else if (v91 == v106)
      {
        char v92 = 8;
      }
      else if (v91 == v105)
      {
        char v92 = 11;
      }
      else if (v91 == v104)
      {
        char v92 = 12;
      }
      else if (v91 == v103)
      {
        char v92 = 9;
      }
      else
      {
        if (v91 != v102) {
          goto LABEL_86;
        }
        char v92 = 10;
      }
      (*v124)(v143, v144);
      goto LABEL_77;
    }
    if (v86 != v129) {
      break;
    }
    uint64_t v85 = *v82;
    (*v82)(v46, v80);
    v85(v147, v80);
LABEL_45:
    unint64_t v81 = &v138[(void)v81];
    if (!--v79)
    {
      swift_release_n();
      char v68 = v123;
      unsigned int v67 = v108;
      goto LABEL_84;
    }
  }
  if (v86 == v122)
  {
    (*(void (**)(char *, uint64_t))v134)(v46, v80);
    unint64_t v93 = v46;
    unint64_t v95 = v136;
    uint64_t v94 = v137;
    (*(void (**)(char *, char *, uint64_t))v121)(v136, v93, v137);
    unint64_t v96 = v132;
    (*(void (**)(char *, char *, uint64_t))v118)(v132, v95, v94);
    int v97 = (*(uint64_t (**)(char *, uint64_t))v117)(v96, v94);
    if (v97 == v116)
    {
      char v92 = 2;
    }
    else if (v97 == v112)
    {
      char v92 = 0;
    }
    else
    {
      if (v97 != v110) {
        goto LABEL_86;
      }
      char v92 = 1;
    }
    (*v119)(v136, v137);
LABEL_77:
    (*v82)(v147, v146);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v76 = sub_251846C8C(0, *((void *)v76 + 2) + 1, 1, v76);
    }
    unint64_t v99 = *((void *)v76 + 2);
    unint64_t v98 = *((void *)v76 + 3);
    if (v99 >= v98 >> 1) {
      unint64_t v76 = sub_251846C8C((char *)(v98 > 1), v99 + 1, 1, v76);
    }
    *((void *)v76 + 2) = v99 + 1;
    v76[v99 + 32] = v92;
    uint64_t v80 = v146;
    char v46 = v142;
    goto LABEL_45;
  }
  sub_25192D800();
  __break(1u);
LABEL_86:
  sub_25192D800();
  __break(1u);
LABEL_87:
  swift_release();
  __break(1u);
LABEL_88:
  uint64_t result = sub_25192D800();
  __break(1u);
  return result;
}

uint64_t sub_2518E3E84@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57CE8);
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57CF0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v21 - v12;
  LODWORD(a1) = *a1;
  sub_25192CB80();
  uint64_t v14 = (uint64_t)&v7[*(int *)(v5 + 56)];
  *uint64_t v7 = (_BYTE)a1;
  sub_251906294((uint64_t)v13, v14);
  if (a1 != 41) {
    goto LABEL_8;
  }
  uint64_t v15 = sub_25192CB70();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1) {
    goto LABEL_8;
  }
  sub_2519062FC(v14, (uint64_t)v11);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v11, v15);
  if (v17 != *MEMORY[0x263F48B68])
  {
    if (v17 == *MEMORY[0x263F48B70])
    {
      uint64_t result = sub_2517E16E0(v14, &qword_269B57CF0);
      uint64_t v20 = 0;
      char v19 = 88;
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v15);
LABEL_8:
    uint64_t result = sub_2517E16E0((uint64_t)v7, &qword_269B57CE8);
    uint64_t v20 = 0;
    char v19 = -2;
    goto LABEL_9;
  }
  uint64_t result = sub_2517E16E0(v14, &qword_269B57CF0);
  char v19 = 88;
  uint64_t v20 = 1;
LABEL_9:
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = v19;
  return result;
}

uint64_t sub_2518E40DC(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B571A8);
}

uint64_t static AttributeKind.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B531E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25192BA40();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269B571A8);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static AttributeKind.typeDisplayRepresentation.setter(uint64_t a1)
{
  if (qword_269B531E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25192BA40();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269B571A8);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static AttributeKind.typeDisplayRepresentation.modify())()
{
  if (qword_269B531E0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_25192BA40();
  __swift_project_value_buffer(v0, (uint64_t)qword_269B571A8);
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_2518E434C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B57D08);
  uint64_t v0 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B54980) - 8);
  uint64_t v1 = *(void *)(v0 + 72);
  unint64_t v2 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_25193C470;
  unint64_t v3 = v5 + v2;
  *(unsigned char *)(v5 + v2) = 0;
  sub_25192B910();
  *(unsigned char *)(v3 + v1) = 1;
  sub_25192B910();
  *(unsigned char *)(v3 + 2 * v1) = 2;
  sub_25192B910();
  *(unsigned char *)(v3 + 3 * v1) = 3;
  sub_25192B910();
  *(unsigned char *)(v3 + 4 * v1) = 4;
  sub_25192B910();
  *(unsigned char *)(v3 + 5 * v1) = 12;
  sub_25192B910();
  *(unsigned char *)(v3 + 6 * v1) = 5;
  sub_25192B910();
  *(unsigned char *)(v3 + 7 * v1) = 6;
  sub_25192B910();
  *(unsigned char *)(v3 + 8 * v1) = 7;
  sub_25192B910();
  *(unsigned char *)(v3 + 9 * v1) = 8;
  sub_25192B910();
  *(unsigned char *)(v3 + 10 * v1) = 9;
  sub_25192B910();
  *(unsigned char *)(v3 + 11 * v1) = 10;
  sub_25192B910();
  *(unsigned char *)(v3 + 12 * v1) = 11;
  sub_25192B910();
  *(unsigned char *)(v3 + 13 * v1) = 13;
  sub_25192B910();
  *(unsigned char *)(v3 + 14 * v1) = 14;
  sub_25192B910();
  *(unsigned char *)(v3 + 15 * v1) = 15;
  sub_25192B910();
  *(unsigned char *)(v3 + 16 * v1) = 16;
  sub_25192B910();
  *(unsigned char *)(v3 + 17 * v1) = 18;
  sub_25192B910();
  *(unsigned char *)(v3 + 18 * v1) = 19;
  sub_25192B910();
  *(unsigned char *)(v3 + 19 * v1) = 20;
  sub_25192B910();
  *(unsigned char *)(v3 + 20 * v1) = 17;
  sub_25192B910();
  *(unsigned char *)(v3 + 21 * v1) = 21;
  sub_25192B910();
  *(unsigned char *)(v3 + 22 * v1) = 22;
  sub_25192B910();
  *(unsigned char *)(v3 + 23 * v1) = 23;
  sub_25192B910();
  *(unsigned char *)(v3 + 24 * v1) = 24;
  sub_25192B910();
  *(unsigned char *)(v3 + 25 * v1) = 25;
  sub_25192B910();
  *(unsigned char *)(v3 + 26 * v1) = 26;
  sub_25192B910();
  *(unsigned char *)(v3 + 27 * v1) = 27;
  sub_25192B910();
  *(unsigned char *)(v3 + 28 * v1) = 28;
  sub_25192B910();
  *(unsigned char *)(v3 + 29 * v1) = 29;
  sub_25192B910();
  *(unsigned char *)(v3 + 30 * v1) = 30;
  sub_25192B910();
  *(unsigned char *)(v3 + 31 * v1) = 31;
  sub_25192B910();
  *(unsigned char *)(v3 + 32 * v1) = 32;
  sub_25192B910();
  *(unsigned char *)(v3 + 33 * v1) = 33;
  sub_25192B910();
  *(unsigned char *)(v3 + 34 * v1) = 34;
  sub_25192B910();
  *(unsigned char *)(v3 + 35 * v1) = 35;
  sub_25192B910();
  *(unsigned char *)(v3 + 36 * v1) = 36;
  sub_25192B910();
  *(unsigned char *)(v3 + 37 * v1) = 37;
  sub_25192B910();
  *(unsigned char *)(v3 + 38 * v1) = 38;
  sub_25192B910();
  *(unsigned char *)(v3 + 39 * v1) = 39;
  sub_25192B910();
  *(unsigned char *)(v3 + 40 * v1) = 40;
  sub_25192B910();
  *(unsigned char *)(v3 + 41 * v1) = 41;
  sub_25192B910();
  *(unsigned char *)(v3 + 42 * v1) = 42;
  sub_25192B910();
  *(unsigned char *)(v3 + 43 * v1) = 43;
  sub_25192B910();
  *(unsigned char *)(v3 + 44 * v1) = 44;
  sub_25192B910();
  *(unsigned char *)(v3 + 45 * v1) = 45;
  sub_25192B910();
  *(unsigned char *)(v3 + 46 * v1) = 46;
  sub_25192B910();
  *(unsigned char *)(v3 + 47 * v1) = 47;
  sub_25192B910();
  *(unsigned char *)(v3 + 48 * v1) = 48;
  sub_25192B910();
  *(unsigned char *)(v3 + 49 * v1) = 49;
  sub_25192B910();
  *(unsigned char *)(v3 + 50 * v1) = 50;
  sub_25192B910();
  *(unsigned char *)(v3 + 51 * v1) = 51;
  sub_25192B910();
  *(unsigned char *)(v3 + 52 * v1) = 52;
  sub_25192B910();
  *(unsigned char *)(v3 + 53 * v1) = 53;
  sub_25192B910();
  *(unsigned char *)(v3 + 54 * v1) = 54;
  sub_25192B910();
  *(unsigned char *)(v3 + 55 * v1) = 55;
  sub_25192B910();
  *(unsigned char *)(v3 + 56 * v1) = 56;
  sub_25192B910();
  *(unsigned char *)(v3 + 57 * v1) = 57;
  sub_25192B910();
  *(unsigned char *)(v3 + 58 * v1) = 58;
  sub_25192B910();
  *(unsigned char *)(v3 + 59 * v1) = 59;
  sub_25192B910();
  *(unsigned char *)(v3 + 60 * v1) = 60;
  sub_25192B910();
  *(unsigned char *)(v3 + 61 * v1) = 61;
  sub_25192B910();
  *(unsigned char *)(v3 + 62 * v1) = 62;
  sub_25192B910();
  unint64_t result = sub_25182185C(v5);
  qword_269B571C0 = result;
  return result;
}

uint64_t static AttributeKind.caseDisplayRepresentations.getter()
{
  if (qword_269B531E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static AttributeKind.caseDisplayRepresentations.setter(uint64_t a1)
{
  if (qword_269B531E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_269B571C0 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static AttributeKind.caseDisplayRepresentations.modify())()
{
  if (qword_269B531E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t AttributeKind.localizedDescription.getter()
{
  uint64_t v0 = sub_25192BD30();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_25192D2C0();
  MEMORY[0x270FA5388](v1 - 8);
  sub_25192D250();
  sub_25192BD20();
  return sub_25192D2E0();
}

void *static AttributeKind.allCases.getter()
{
  return &unk_27024F3F0;
}

uint64_t sub_2518E59C4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2517DA6A0(*a1, *a2);
}

HomeAppIntents::AttributeKind_optional sub_2518E59D0(Swift::String *a1)
{
  return AttributeKind.init(rawValue:)(*a1);
}

uint64_t sub_2518E59DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AttributeKind.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_2518E5A08()
{
  unint64_t result = qword_269B575E8;
  if (!qword_269B575E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B575E8);
  }
  return result;
}

unint64_t sub_2518E5A60()
{
  unint64_t result = qword_269B575F0;
  if (!qword_269B575F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B575F0);
  }
  return result;
}

unint64_t sub_2518E5AB8()
{
  unint64_t result = qword_269B575F8;
  if (!qword_269B575F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B575F8);
  }
  return result;
}

unint64_t sub_2518E5B10()
{
  unint64_t result = qword_269B57600;
  if (!qword_269B57600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57600);
  }
  return result;
}

uint64_t sub_2518E5B64()
{
  return sub_25192D920();
}

uint64_t sub_2518E5BCC()
{
  AttributeKind.rawValue.getter();
  sub_25192D300();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2518E5C30()
{
  return sub_25192D920();
}

unint64_t sub_2518E5C98()
{
  unint64_t result = qword_269B57608;
  if (!qword_269B57608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57608);
  }
  return result;
}

unint64_t sub_2518E5CF0()
{
  unint64_t result = qword_269B57610;
  if (!qword_269B57610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57610);
  }
  return result;
}

unint64_t sub_2518E5D48()
{
  unint64_t result = qword_269B57618;
  if (!qword_269B57618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57618);
  }
  return result;
}

unint64_t sub_2518E5DA0()
{
  unint64_t result = qword_269B57620;
  if (!qword_269B57620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57620);
  }
  return result;
}

uint64_t sub_2518E5DF4@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B531E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25192BA40();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269B571A8);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_2518E5EB4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2518E5F04(uint64_t a1)
{
  unint64_t v2 = sub_2517E4CA4();
  return MEMORY[0x270EE0C40](a1, v2);
}

unint64_t sub_2518E5F58()
{
  unint64_t result = qword_269B57628;
  if (!qword_269B57628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57628);
  }
  return result;
}

uint64_t sub_2518E5FB0()
{
  if (qword_269B531E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2518E6028(uint64_t a1)
{
  unint64_t v2 = sub_2518E5DA0();
  return MEMORY[0x270EE1C28](a1, v2);
}

uint64_t sub_2518E6074()
{
  return sub_2517E2990(&qword_269B57630, &qword_269B57638);
}

void sub_2518E60B0(void *a1@<X8>)
{
  *a1 = &unk_27024F3F0;
}

uint64_t getEnumTagSinglePayload for AttributeKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xC2) {
    goto LABEL_17;
  }
  if (a2 + 62 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 62) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 62;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 62;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 62;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x3F;
  int v8 = v6 - 63;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AttributeKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 62 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 62) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xC2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xC1)
  {
    unsigned int v6 = ((a2 - 194) >> 8) + 1;
    *unint64_t result = a2 + 62;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2518E621CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 62;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AttributeKind()
{
  return &type metadata for AttributeKind;
}

uint64_t destroy for Attribute(uint64_t a1)
{
  return sub_251808B8C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for Attribute(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_251808BD8(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for Attribute(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_251808BD8(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_251808B8C(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for Attribute(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_251808B8C(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Attribute(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3F && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 63);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 0x83) {
    unsigned int v4 = -1;
  }
  else {
    unsigned int v4 = (v3 ^ 0xFE) >> 1;
  }
  return v4 + 1;
}

uint64_t storeEnumTagSinglePayload for Attribute(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3E)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 63;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3F) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3F) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(_OWORD *)unint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = -2 * a2;
    }
  }
  return result;
}

uint64_t sub_2518E6428(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 1;
}

uint64_t sub_2518E6434(uint64_t result)
{
  *(unsigned char *)(result + 32) &= 1u;
  return result;
}

uint64_t sub_2518E6444(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = *(unsigned char *)(result + 32) & 1 | (2 * a2);
  return result;
}

ValueMetadata *type metadata accessor for Attribute()
{
  return &type metadata for Attribute;
}

uint64_t sub_2518E646C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2518E648C()
{
  unint64_t result = qword_269B57640;
  if (!qword_269B57640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57640);
  }
  return result;
}

uint64_t sub_2518E64E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_25192C640();
  if ((v3 & 1) != 0 || (v4 = result, uint64_t result = sub_25192C730(), result == 2))
  {
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    char v5 = -2;
LABEL_4:
    *(unsigned char *)(a1 + 32) = v5;
    return result;
  }
  switch(v4)
  {
    case 0:
      if (result) {
        uint64_t v8 = 5;
      }
      else {
        uint64_t v8 = 1;
      }
      uint64_t result = sub_25192C400();
      if ((v9 & 1) == 0)
      {
        uint64_t v10 = result;
        uint64_t result = sub_25192C3E0();
        if ((v11 & 1) == 0)
        {
          *(void *)a1 = v8;
          *(void *)(a1 + 8) = v10;
          *(void *)(a1 + 16) = result;
          *(void *)(a1 + 24) = 0;
          char v5 = 126;
          goto LABEL_4;
        }
      }
      *(void *)a1 = v8;
LABEL_25:
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      char v5 = 122;
      goto LABEL_4;
    case 2:
      if (result) {
        uint64_t v6 = 4;
      }
      else {
        uint64_t v6 = 1;
      }
      uint64_t result = sub_25192C3E0();
      if ((v7 & 1) == 0)
      {
LABEL_11:
        *(void *)a1 = v6;
        *(void *)(a1 + 8) = result;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        char v5 = 124;
        goto LABEL_4;
      }
      goto LABEL_23;
    case 1:
      if (result) {
        uint64_t v6 = 3;
      }
      else {
        uint64_t v6 = 1;
      }
      uint64_t result = sub_25192C400();
      if ((v12 & 1) == 0) {
        goto LABEL_11;
      }
LABEL_23:
      *(void *)a1 = v6;
      goto LABEL_25;
  }
  type metadata accessor for HMCharacteristicValueTargetHeaterCoolerState(0);
  uint64_t result = sub_25192D830();
  __break(1u);
  return result;
}

uint64_t sub_2518E65FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_25192C670();
  if (v3)
  {
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    char v7 = -2;
    goto LABEL_27;
  }
  uint64_t v4 = result;
  if ((unint64_t)(result - 1) >= 2)
  {
    if (result == 3)
    {
      uint64_t v8 = sub_25192C400();
      if (v9 & 1) != 0 || (uint64_t v10 = v8, result = sub_25192C3E0(), (v11))
      {
        uint64_t result = sub_25192C480();
        uint64_t v6 = 5;
        if ((v15 & 1) == 0) {
          goto LABEL_23;
        }
        goto LABEL_26;
      }
      uint64_t v12 = 5;
    }
    else
    {
      if (result)
      {
        type metadata accessor for HMCharacteristicValueHeatingCooling(0);
        sub_25192D830();
        __break(1u);
        goto LABEL_29;
      }
      uint64_t result = sub_25192C400();
      if (v13 & 1) != 0 || (uint64_t v10 = result, result = sub_25192C3E0(), (v14))
      {
        uint64_t v6 = 1;
        goto LABEL_26;
      }
      uint64_t v12 = 1;
    }
    *(void *)a1 = v12;
    *(void *)(a1 + 8) = v10;
    *(void *)(a1 + 16) = result;
    *(void *)(a1 + 24) = 0;
    char v7 = 126;
LABEL_27:
    *(unsigned char *)(a1 + 32) = v7;
    return result;
  }
  uint64_t result = sub_25192C480();
  if (v5)
  {
    if (v4 == 2)
    {
      uint64_t v6 = 4;
    }
    else
    {
      if (v4 != 1) {
        goto LABEL_29;
      }
      uint64_t v6 = 3;
    }
LABEL_26:
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    char v7 = 122;
    goto LABEL_27;
  }
  if (v4 == 2)
  {
    uint64_t v6 = 4;
LABEL_23:
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = result;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    char v7 = 124;
    goto LABEL_27;
  }
  if (v4 == 1)
  {
    uint64_t v6 = 3;
    goto LABEL_23;
  }
LABEL_29:
  uint64_t result = sub_25192D6A0();
  __break(1u);
  return result;
}

uint64_t sub_2518E677C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = MEMORY[0x2533A5ED0]();
  if ((v3 & 1) != 0 || (v4 = result, uint64_t result = sub_25192C730(), result == 2))
  {
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    char v5 = -2;
LABEL_4:
    *(unsigned char *)(a1 + 32) = v5;
    return result;
  }
  int v6 = result & 1;
  switch(v4)
  {
    case 0:
      uint64_t v9 = (4 * v6);
      uint64_t result = sub_25192C4F0();
      if ((v10 & 1) == 0)
      {
        uint64_t v11 = result;
        uint64_t result = sub_25192C590();
        if ((v12 & 1) == 0)
        {
          *(void *)a1 = v9;
          *(void *)(a1 + 8) = v11;
          *(void *)(a1 + 16) = result;
          *(void *)(a1 + 24) = 0;
          char v5 = 60;
          goto LABEL_4;
        }
      }
      *(void *)a1 = v9;
LABEL_19:
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      char v5 = 56;
      goto LABEL_4;
    case 2:
      if (result) {
        uint64_t v7 = 3;
      }
      else {
        uint64_t v7 = 0;
      }
      uint64_t result = sub_25192C590();
      if ((v8 & 1) == 0) {
        goto LABEL_11;
      }
LABEL_17:
      *(void *)a1 = v7;
      goto LABEL_19;
    case 1:
      uint64_t v7 = (2 * v6);
      uint64_t result = sub_25192C4F0();
      if ((v13 & 1) == 0)
      {
LABEL_11:
        *(void *)a1 = v7;
        *(void *)(a1 + 8) = result;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        char v5 = 58;
        goto LABEL_4;
      }
      goto LABEL_17;
  }
  type metadata accessor for HMCharacteristicValueTargetHumidifierDehumidifierState(0);
  uint64_t result = sub_25192D830();
  __break(1u);
  return result;
}

uint64_t sub_2518E688C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25192CDE0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25192CDF0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v2, v8);
  if ((*(unsigned int (**)(char *, uint64_t))(v9 + 88))(v11, v8) != *MEMORY[0x263F48DA8])
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
LABEL_5:
    char v13 = 15;
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t))(v9 + 96))(v11, v8);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (result != *MEMORY[0x263F48D98])
  {
    if (result == *MEMORY[0x263F48DA0])
    {
      char v13 = 7;
      goto LABEL_6;
    }
    if (result == *MEMORY[0x263F48D70])
    {
      char v13 = 9;
      goto LABEL_6;
    }
    if (result == *MEMORY[0x263F48D68])
    {
      char v13 = 10;
      goto LABEL_6;
    }
    if (result == *MEMORY[0x263F48D78])
    {
      char v13 = 12;
      goto LABEL_6;
    }
    if (result == *MEMORY[0x263F48D88])
    {
      char v13 = 11;
      goto LABEL_6;
    }
    if (result == *MEMORY[0x263F48D80])
    {
      char v13 = 13;
      goto LABEL_6;
    }
    if (result == *MEMORY[0x263F48D90])
    {
      char v13 = 14;
      goto LABEL_6;
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_5;
  }
  char v13 = 8;
LABEL_6:
  *a1 = v13;
  return result;
}

void *sub_2518E6B7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_25192BC50();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v6 = v1[1];
  uint64_t v8 = v1[2];
  unsigned int v9 = *((unsigned __int8 *)v1 + 32);
  switch(v9 >> 1)
  {
    case 1u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B578A8);
      sub_25192BC30();
      unint64_t v12 = sub_251866508();
      uint64_t v10 = MEMORY[0x2533A4F60](v5, v12);
      LOBYTE(v47) = v7 & 1;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.AirParticulateSizeCase;
      uint64_t result = (void *)sub_251904C44();
      goto LABEL_70;
    case 2u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57898);
      sub_25192BC30();
      unint64_t v13 = sub_25186721C();
      uint64_t v10 = MEMORY[0x2533A4F60](v5, v13);
      LOBYTE(v47) = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.AirQualityCase;
      uint64_t result = (void *)sub_251904BF0();
      goto LABEL_70;
    case 3u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B53D30);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FE0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.BatteryLevelCase;
      uint64_t result = (void *)sub_251904B9C();
      goto LABEL_70;
    case 4u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B53D30);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FE0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.BrightnessCase;
      uint64_t result = (void *)sub_251904B48();
      goto LABEL_70;
    case 5u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B576E0);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FC0](v5);
      LOBYTE(v47) = v7 & 1;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.CarbonDioxideDetectedCase;
      uint64_t result = (void *)sub_251904AF4();
      goto LABEL_70;
    case 6u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FD0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.CarbonDioxideLevelCase;
      uint64_t result = (void *)sub_251904AA0();
      goto LABEL_70;
    case 7u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FD0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.CarbonDioxidePeakLevelCase;
      uint64_t result = (void *)sub_251904A4C();
      goto LABEL_70;
    case 8u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B576E0);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FC0](v5);
      LOBYTE(v47) = v7 & 1;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.CarbonMonoxideDetectedCase;
      uint64_t result = (void *)sub_2519049F8();
      goto LABEL_70;
    case 9u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FD0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.CarbonMonoxideLevelCase;
      uint64_t result = (void *)sub_2519049A4();
      goto LABEL_70;
    case 0xAu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FD0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.CarbonMonoxidePeakLevelCase;
      uint64_t result = (void *)sub_251904950();
      goto LABEL_70;
    case 0xBu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57848);
      sub_25192BC30();
      unint64_t v14 = sub_251867678();
      uint64_t v10 = MEMORY[0x2533A4F60](v5, v14);
      LOBYTE(v47) = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.ChargingStateCase;
      uint64_t result = (void *)sub_2519048FC();
      goto LABEL_70;
    case 0xCu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B576E0);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FC0](v5);
      LOBYTE(v47) = v7 & 1;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.ChildLockEnabledCase;
      uint64_t result = (void *)sub_2519048A8();
      goto LABEL_70;
    case 0xDu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v15 = MEMORY[0x2533A4FD0](v5);
      sub_25192BC30();
      uint64_t v16 = MEMORY[0x2533A4FD0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      uint64_t v47 = v6;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.ColorCase;
      uint64_t result = (void *)sub_251904854();
      goto LABEL_65;
    case 0xEu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B576E0);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FC0](v5);
      LOBYTE(v47) = v7 & 1;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.ContactDetectedCase;
      uint64_t result = (void *)sub_251904800();
      goto LABEL_70;
    case 0xFu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57820);
      sub_25192BC30();
      unint64_t v17 = sub_251866DC0();
      uint64_t v10 = MEMORY[0x2533A4F60](v5, v17);
      LOBYTE(v47) = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.CurrentAirPurifierStateCase;
      uint64_t result = (void *)sub_2519047AC();
      goto LABEL_70;
    case 0x10u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B576C0);
      sub_25192BC30();
      unint64_t v18 = sub_251867F30();
      uint64_t v10 = MEMORY[0x2533A4F60](v5, v18);
      LOBYTE(v47) = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.CurrentDoorStateCase;
      uint64_t result = (void *)sub_251904758();
      goto LABEL_70;
    case 0x11u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B53D30);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FE0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.CurrentHorizontalTiltCase;
      uint64_t result = (void *)sub_251904704();
      goto LABEL_70;
    case 0x12u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B577A0);
      sub_25192BC30();
      unint64_t v19 = sub_251869454();
      uint64_t v10 = MEMORY[0x2533A4F60](v5, v19);
      LOBYTE(v47) = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.CurrentHumidifierDehumidifierModeCase;
      uint64_t result = (void *)sub_2519046B0();
      goto LABEL_70;
    case 0x13u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FD0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.CurrentHumidityCase;
      uint64_t result = (void *)sub_25190465C();
      goto LABEL_70;
    case 0x14u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B576A0);
      sub_25192BC30();
      unint64_t v20 = sub_251867AD4();
      uint64_t v10 = MEMORY[0x2533A4F60](v5, v20);
      LOBYTE(v47) = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.CurrentLockStateCase;
      uint64_t result = (void *)sub_251904608();
      goto LABEL_70;
    case 0x15u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B53D30);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FE0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.CurrentPositionCase;
      uint64_t result = (void *)sub_2519045B4();
      goto LABEL_70;
    case 0x16u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57688);
      sub_25192BC30();
      unint64_t v21 = sub_251868B9C();
      uint64_t v10 = MEMORY[0x2533A4F60](v5, v21);
      LOBYTE(v47) = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.CurrentSecuritySystemStateCase;
      uint64_t result = (void *)sub_251904560();
      goto LABEL_70;
    case 0x17u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FD0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.CurrentTemperatureCase;
      uint64_t result = (void *)sub_25190450C();
      goto LABEL_70;
    case 0x18u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57660);
      sub_25192BC30();
      unint64_t v22 = sub_251868FF8();
      uint64_t v10 = MEMORY[0x2533A4F60](v5, v22);
      LOBYTE(v47) = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.CurrentThermostatModeCase;
      uint64_t result = (void *)sub_2519044B8();
      goto LABEL_70;
    case 0x19u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B53D30);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FE0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.CurrentVerticalTiltCase;
      uint64_t result = (void *)sub_251904464();
      goto LABEL_70;
    case 0x1Au:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B576E0);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FC0](v5);
      LOBYTE(v47) = v7 & 1;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.FilterChangeNeededCase;
      uint64_t result = (void *)sub_251904410();
      goto LABEL_70;
    case 0x1Bu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FD0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.FilterLifeLevelCase;
      uint64_t result = (void *)sub_2519043BC();
      goto LABEL_70;
    case 0x1Cu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B577A0);
      sub_25192BC30();
      unint64_t v23 = sub_251869454();
      uint64_t v10 = MEMORY[0x2533A4F60](v5, v23);
      LOBYTE(v47) = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.HumidifierDehumidifierModeCase;
      uint64_t result = (void *)sub_251904368();
      goto LABEL_70;
    case 0x1Du:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B577A0);
      sub_25192BC30();
      unint64_t v24 = sub_251869454();
      uint64_t v15 = MEMORY[0x2533A4F60](v5, v24);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v16 = MEMORY[0x2533A4FD0](v5);
      LOBYTE(v47) = v7;
      sub_25192B750();
      uint64_t v47 = v6;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.HumidifierDehumidifierModeAndValueCase;
      uint64_t result = (void *)sub_251904314();
      goto LABEL_65;
    case 0x1Eu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B577A0);
      sub_25192BC30();
      unint64_t v25 = sub_251869454();
      uint64_t v26 = MEMORY[0x2533A4F60](v5, v25);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v27 = MEMORY[0x2533A4FD0](v5);
      sub_25192BC30();
      uint64_t v28 = MEMORY[0x2533A4FD0](v5);
      LOBYTE(v47) = v7;
      sub_25192B750();
      uint64_t v47 = v6;
      sub_25192B750();
      uint64_t v47 = v8;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase;
      uint64_t result = (void *)sub_2519042C0();
      goto LABEL_67;
    case 0x1Fu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B576E0);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FC0](v5);
      LOBYTE(v47) = v7 & 1;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.InUseCase;
      uint64_t result = (void *)sub_25190426C();
      goto LABEL_70;
    case 0x20u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B576E0);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FC0](v5);
      LOBYTE(v47) = v7 & 1;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.LeakDetectedCase;
      uint64_t result = (void *)sub_251904218();
      goto LABEL_70;
    case 0x21u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FD0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.LightLevelCase;
      uint64_t result = (void *)sub_2519041C4();
      goto LABEL_70;
    case 0x22u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B576E0);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FC0](v5);
      LOBYTE(v47) = v7 & 1;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.LowBatteryCase;
      uint64_t result = (void *)sub_251904170();
      goto LABEL_70;
    case 0x23u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B576E0);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FC0](v5);
      LOBYTE(v47) = v7 & 1;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.MotionDetectedCase;
      uint64_t result = (void *)sub_25190411C();
      goto LABEL_70;
    case 0x24u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B576E0);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FC0](v5);
      LOBYTE(v47) = v7 & 1;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.NaturalLightCase;
      uint64_t result = (void *)sub_2519040C8();
      goto LABEL_70;
    case 0x25u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FD0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.NitrogenDioxideDensityCase;
      uint64_t result = (void *)sub_251904074();
      goto LABEL_70;
    case 0x26u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B576E0);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FC0](v5);
      LOBYTE(v47) = v7 & 1;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.ObstructionDetectedCase;
      uint64_t result = (void *)sub_251904020();
      goto LABEL_70;
    case 0x27u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B576E0);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FC0](v5);
      LOBYTE(v47) = v7 & 1;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.OccupancyDetectedCase;
      uint64_t result = (void *)sub_251903FCC();
      goto LABEL_70;
    case 0x28u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FD0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.OzoneDensityCase;
      uint64_t result = (void *)sub_251903F78();
      goto LABEL_70;
    case 0x29u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FD0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.Pm10DensityCase;
      uint64_t result = (void *)sub_251903F24();
      goto LABEL_70;
    case 0x2Au:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FD0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.Pm2_5DensityCase;
      uint64_t result = (void *)sub_251903ED0();
      goto LABEL_70;
    case 0x2Bu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B576C0);
      sub_25192BC30();
      unint64_t v29 = sub_251867F30();
      uint64_t v10 = MEMORY[0x2533A4F60](v5, v29);
      LOBYTE(v47) = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.PositionStateCase;
      uint64_t result = (void *)sub_251903E7C();
      goto LABEL_70;
    case 0x2Cu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B576E0);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FC0](v5);
      LOBYTE(v47) = v7 & 1;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.PowerCase;
      uint64_t result = (void *)sub_251903E28();
      goto LABEL_70;
    case 0x2Du:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B53D30);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FE0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.RemainingDurationCase;
      uint64_t result = (void *)sub_251903DD4();
      goto LABEL_70;
    case 0x2Eu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57718);
      sub_25192BC30();
      unint64_t v30 = sub_2518698B0();
      uint64_t v10 = MEMORY[0x2533A4F60](v5, v30);
      LOBYTE(v47) = v7 & 1;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.RotationDirectionCase;
      uint64_t result = (void *)sub_251903D80();
      goto LABEL_70;
    case 0x2Fu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FD0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.RotationSpeedCase;
      uint64_t result = (void *)sub_251903D2C();
      goto LABEL_70;
    case 0x30u:
      uint64_t v46 = v1[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_251903B18();
      uint64_t v33 = v32;
      uint64_t v35 = v34;
      uint64_t v37 = v36;
      LOBYTE(v47) = v7;
      sub_25192B750();
      uint64_t v47 = v6;
      sub_25192B750();
      uint64_t v47 = v8;
      sub_25192B750();
      uint64_t v47 = v46;
      char v48 = v9 & 1;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.RvcCase;
      a1[4] = sub_251903C88();
      uint64_t result = (void *)swift_allocObject();
      *a1 = (uint64_t)result;
      result[2] = v31;
      result[3] = v33;
      result[4] = v35;
      result[5] = v37;
      return result;
    case 0x31u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B53D30);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FE0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.SetDurationCase;
      uint64_t result = (void *)sub_251901274();
      goto LABEL_70;
    case 0x32u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B576E0);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FC0](v5);
      LOBYTE(v47) = v7 & 1;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.SmokeDetectedCase;
      uint64_t result = (void *)sub_251901220();
      goto LABEL_70;
    case 0x33u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FD0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.SulphurDioxideDensityCase;
      uint64_t result = (void *)sub_2519011CC();
      goto LABEL_70;
    case 0x34u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B576E0);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FC0](v5);
      LOBYTE(v47) = v7 & 1;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.SwingModeEnabledCase;
      uint64_t result = (void *)sub_251901178();
      goto LABEL_70;
    case 0x35u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B576D0);
      sub_25192BC30();
      unint64_t v38 = sub_251866964();
      uint64_t v10 = MEMORY[0x2533A4F60](v5, v38);
      LOBYTE(v47) = v7 & 1;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.TargetAirPurifierStateCase;
      uint64_t result = (void *)sub_251901124();
      goto LABEL_70;
    case 0x36u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B576C0);
      sub_25192BC30();
      unint64_t v39 = sub_251867F30();
      uint64_t v10 = MEMORY[0x2533A4F60](v5, v39);
      LOBYTE(v47) = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.TargetDoorStateCase;
      uint64_t result = (void *)sub_2519010D0();
      goto LABEL_70;
    case 0x37u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B53D30);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FE0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.TargetHorizontalTiltCase;
      uint64_t result = (void *)sub_25190107C();
      goto LABEL_70;
    case 0x38u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FD0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.TargetHumidityCase;
      uint64_t result = (void *)sub_251901028();
      goto LABEL_70;
    case 0x39u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B576A0);
      sub_25192BC30();
      unint64_t v40 = sub_251867AD4();
      uint64_t v10 = MEMORY[0x2533A4F60](v5, v40);
      LOBYTE(v47) = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.TargetLockStateCase;
      uint64_t result = (void *)sub_251900FD4();
      goto LABEL_70;
    case 0x3Au:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B53D30);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FE0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.TargetPositionCase;
      uint64_t result = (void *)sub_251900F80();
      goto LABEL_70;
    case 0x3Bu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57688);
      sub_25192BC30();
      unint64_t v41 = sub_251868B9C();
      uint64_t v10 = MEMORY[0x2533A4F60](v5, v41);
      LOBYTE(v47) = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.TargetSecuritySystemStateCase;
      uint64_t result = (void *)sub_251900F2C();
      goto LABEL_70;
    case 0x3Cu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B53D30);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FE0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.TargetVerticalTiltCase;
      uint64_t result = (void *)sub_251900ED8();
      goto LABEL_70;
    case 0x3Du:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57660);
      sub_25192BC30();
      unint64_t v42 = sub_251868FF8();
      uint64_t v10 = MEMORY[0x2533A4F60](v5, v42);
      LOBYTE(v47) = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.ThermostatModeCase;
      uint64_t result = (void *)sub_251900E84();
      goto LABEL_70;
    case 0x3Eu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57660);
      sub_25192BC30();
      unint64_t v43 = sub_251868FF8();
      uint64_t v15 = MEMORY[0x2533A4F60](v5, v43);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v16 = MEMORY[0x2533A4FD0](v5);
      LOBYTE(v47) = v7;
      sub_25192B750();
      uint64_t v47 = v6;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.ThermostatModeAndValueCase;
      uint64_t result = (void *)sub_251900E30();
LABEL_65:
      a1[4] = (uint64_t)result;
      *a1 = v15;
      a1[1] = v16;
      return result;
    case 0x3Fu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57660);
      sub_25192BC30();
      unint64_t v44 = sub_251868FF8();
      uint64_t v26 = MEMORY[0x2533A4F60](v5, v44);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v27 = MEMORY[0x2533A4FD0](v5);
      sub_25192BC30();
      uint64_t v28 = MEMORY[0x2533A4FD0](v5);
      LOBYTE(v47) = v7;
      sub_25192B750();
      uint64_t v47 = v6;
      sub_25192B750();
      uint64_t v47 = v8;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.ThermostatModeAndRangeCase;
      uint64_t result = (void *)sub_251900DDC();
LABEL_67:
      a1[4] = (uint64_t)result;
      *a1 = v26;
      a1[1] = v27;
      a1[2] = v28;
      return result;
    case 0x40u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FD0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.VolatileOrganicCompoundDensityCase;
      uint64_t result = (void *)sub_251900D88();
      goto LABEL_70;
    case 0x41u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FD0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.WaterLevelCase;
      uint64_t result = (void *)sub_251900D34();
      goto LABEL_70;
    default:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
      sub_25192BC30();
      uint64_t v10 = MEMORY[0x2533A4FD0](v5);
      uint64_t v47 = v7;
      sub_25192B750();
      a1[3] = (uint64_t)&type metadata for Attribute.AirParticulateDensityCase;
      uint64_t result = (void *)sub_251904C98();
LABEL_70:
      a1[4] = (uint64_t)result;
      *a1 = v10;
      return result;
  }
}

uint64_t sub_2518E8454(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v540 = v1;
  uint64_t v539 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B578C8);
  uint64_t v538 = *(void *)(v539 - 8);
  MEMORY[0x270FA5388](v539);
  v516 = (char *)v406 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v537 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B578D0);
  uint64_t v536 = *(void *)(v537 - 8);
  MEMORY[0x270FA5388](v537);
  v603 = (char *)v406 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v535 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B578D8);
  uint64_t v534 = *(void *)(v535 - 8);
  MEMORY[0x270FA5388](v535);
  v602 = (char *)v406 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v533 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B578E0);
  uint64_t v532 = *(void *)(v533 - 8);
  MEMORY[0x270FA5388](v533);
  v601 = (char *)v406 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v531 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B578E8);
  uint64_t v530 = *(void *)(v531 - 8);
  MEMORY[0x270FA5388](v531);
  v600 = (char *)v406 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v529 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B578F0);
  uint64_t v528 = *(void *)(v529 - 8);
  MEMORY[0x270FA5388](v529);
  v599 = (char *)v406 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v527 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B578F8);
  uint64_t v526 = *(void *)(v527 - 8);
  MEMORY[0x270FA5388](v527);
  v598 = (char *)v406 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v525 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57900);
  uint64_t v524 = *(void *)(v525 - 8);
  MEMORY[0x270FA5388](v525);
  v597 = (char *)v406 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v523 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57908);
  uint64_t v522 = *(void *)(v523 - 8);
  MEMORY[0x270FA5388](v523);
  v596 = (char *)v406 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v521 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57910);
  uint64_t v520 = *(void *)(v521 - 8);
  MEMORY[0x270FA5388](v521);
  v595 = (char *)v406 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v519 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57918);
  uint64_t v518 = *(void *)(v519 - 8);
  MEMORY[0x270FA5388](v519);
  v594 = (char *)v406 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v517 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57920);
  uint64_t v515 = *(void *)(v517 - 8);
  MEMORY[0x270FA5388](v517);
  v589 = (char *)v406 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v514 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57928);
  uint64_t v513 = *(void *)(v514 - 8);
  MEMORY[0x270FA5388](v514);
  v585 = (char *)v406 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v512 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57930);
  uint64_t v511 = *(void *)(v512 - 8);
  MEMORY[0x270FA5388](v512);
  v581 = (char *)v406 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v510 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57938);
  uint64_t v509 = *(void *)(v510 - 8);
  MEMORY[0x270FA5388](v510);
  v577 = (char *)v406 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v508 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57940);
  uint64_t v507 = *(void *)(v508 - 8);
  MEMORY[0x270FA5388](v508);
  v573 = (char *)v406 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v506 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57948);
  uint64_t v505 = *(void *)(v506 - 8);
  MEMORY[0x270FA5388](v506);
  v570 = (char *)v406 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v504 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57950);
  uint64_t v503 = *(void *)(v504 - 8);
  MEMORY[0x270FA5388](v504);
  v567 = (char *)v406 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v502 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57958);
  uint64_t v501 = *(void *)(v502 - 8);
  MEMORY[0x270FA5388](v502);
  v564 = (char *)v406 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v500 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57960);
  uint64_t v499 = *(void *)(v500 - 8);
  MEMORY[0x270FA5388](v500);
  v561 = (char *)v406 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v498 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57968);
  uint64_t v497 = *(void *)(v498 - 8);
  MEMORY[0x270FA5388](v498);
  v558 = (char *)v406 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v496 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57970);
  uint64_t v495 = *(void *)(v496 - 8);
  MEMORY[0x270FA5388](v496);
  v556 = (char *)v406 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v494 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57978);
  uint64_t v493 = *(void *)(v494 - 8);
  MEMORY[0x270FA5388](v494);
  v553 = (char *)v406 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v492 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57980);
  uint64_t v491 = *(void *)(v492 - 8);
  MEMORY[0x270FA5388](v492);
  v551 = (char *)v406 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v490 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57988);
  uint64_t v489 = *(void *)(v490 - 8);
  MEMORY[0x270FA5388](v490);
  v548 = (char *)v406 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v488 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57990);
  uint64_t v487 = *(void *)(v488 - 8);
  MEMORY[0x270FA5388](v488);
  v546 = (char *)v406 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v486 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57998);
  uint64_t v485 = *(void *)(v486 - 8);
  MEMORY[0x270FA5388](v486);
  v544 = (char *)v406 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v484 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B579A0);
  uint64_t v483 = *(void *)(v484 - 8);
  MEMORY[0x270FA5388](v484);
  v542 = (char *)v406 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v482 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B579A8);
  uint64_t v481 = *(void *)(v482 - 8);
  MEMORY[0x270FA5388](v482);
  v541 = (char *)v406 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v480 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B579B0);
  uint64_t v479 = *(void *)(v480 - 8);
  MEMORY[0x270FA5388](v480);
  v543 = (char *)v406 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v478 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B579B8);
  uint64_t v477 = *(void *)(v478 - 8);
  MEMORY[0x270FA5388](v478);
  v545 = (char *)v406 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v476 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B579C0);
  uint64_t v475 = *(void *)(v476 - 8);
  MEMORY[0x270FA5388](v476);
  v547 = (char *)v406 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v474 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B579C8);
  uint64_t v473 = *(void *)(v474 - 8);
  MEMORY[0x270FA5388](v474);
  v549 = (char *)v406 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v472 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B579D0);
  uint64_t v471 = *(void *)(v472 - 8);
  MEMORY[0x270FA5388](v472);
  v550 = (char *)v406 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v470 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B579D8);
  uint64_t v469 = *(void *)(v470 - 8);
  MEMORY[0x270FA5388](v470);
  v552 = (char *)v406 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B579E0);
  uint64_t v467 = *(void *)(v37 - 8);
  uint64_t v468 = v37;
  MEMORY[0x270FA5388](v37);
  v554 = (char *)v406 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B579E8);
  uint64_t v465 = *(void *)(v39 - 8);
  uint64_t v466 = v39;
  MEMORY[0x270FA5388](v39);
  v555 = (char *)v406 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B579F0);
  uint64_t v463 = *(void *)(v41 - 8);
  uint64_t v464 = v41;
  MEMORY[0x270FA5388](v41);
  v557 = (char *)v406 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B579F8);
  uint64_t v461 = *(void *)(v43 - 8);
  uint64_t v462 = v43;
  MEMORY[0x270FA5388](v43);
  v559 = (char *)v406 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57A00);
  uint64_t v459 = *(void *)(v45 - 8);
  uint64_t v460 = v45;
  MEMORY[0x270FA5388](v45);
  v560 = (char *)v406 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57A08);
  uint64_t v457 = *(void *)(v47 - 8);
  uint64_t v458 = v47;
  MEMORY[0x270FA5388](v47);
  v562 = (char *)v406 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57A10);
  uint64_t v455 = *(void *)(v49 - 8);
  uint64_t v456 = v49;
  MEMORY[0x270FA5388](v49);
  v563 = (char *)v406 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57A18);
  uint64_t v453 = *(void *)(v51 - 8);
  uint64_t v454 = v51;
  MEMORY[0x270FA5388](v51);
  v565 = (char *)v406 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57A20);
  uint64_t v451 = *(void *)(v53 - 8);
  uint64_t v452 = v53;
  MEMORY[0x270FA5388](v53);
  v566 = (char *)v406 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57A28);
  uint64_t v449 = *(void *)(v55 - 8);
  uint64_t v450 = v55;
  MEMORY[0x270FA5388](v55);
  v568 = (char *)v406 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57A30);
  uint64_t v447 = *(void *)(v57 - 8);
  uint64_t v448 = v57;
  MEMORY[0x270FA5388](v57);
  v569 = (char *)v406 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57A38);
  uint64_t v445 = *(void *)(v59 - 8);
  uint64_t v446 = v59;
  MEMORY[0x270FA5388](v59);
  v571 = (char *)v406 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57A40);
  uint64_t v443 = *(void *)(v61 - 8);
  uint64_t v444 = v61;
  MEMORY[0x270FA5388](v61);
  v572 = (char *)v406 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57A48);
  uint64_t v441 = *(void *)(v63 - 8);
  uint64_t v442 = v63;
  MEMORY[0x270FA5388](v63);
  v575 = (char *)v406 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57A50);
  uint64_t v439 = *(void *)(v65 - 8);
  uint64_t v440 = v65;
  MEMORY[0x270FA5388](v65);
  v576 = (char *)v406 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57A58);
  uint64_t v437 = *(void *)(v67 - 8);
  uint64_t v438 = v67;
  MEMORY[0x270FA5388](v67);
  v578 = (char *)v406 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57A60);
  uint64_t v435 = *(void *)(v69 - 8);
  uint64_t v436 = v69;
  MEMORY[0x270FA5388](v69);
  v579 = (char *)v406 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57A68);
  uint64_t v433 = *(void *)(v71 - 8);
  uint64_t v434 = v71;
  MEMORY[0x270FA5388](v71);
  v580 = (char *)v406 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57A70);
  uint64_t v431 = *(void *)(v73 - 8);
  uint64_t v432 = v73;
  MEMORY[0x270FA5388](v73);
  v582 = (char *)v406 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57A78);
  uint64_t v429 = *(void *)(v75 - 8);
  uint64_t v430 = v75;
  MEMORY[0x270FA5388](v75);
  v583 = (char *)v406 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57A80);
  uint64_t v427 = *(void *)(v77 - 8);
  uint64_t v428 = v77;
  MEMORY[0x270FA5388](v77);
  v584 = (char *)v406 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57A88);
  uint64_t v425 = *(void *)(v79 - 8);
  uint64_t v426 = v79;
  MEMORY[0x270FA5388](v79);
  v586 = (char *)v406 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57A90);
  uint64_t v423 = *(void *)(v81 - 8);
  uint64_t v424 = v81;
  MEMORY[0x270FA5388](v81);
  v587 = (char *)v406 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57A98);
  uint64_t v421 = *(void *)(v83 - 8);
  uint64_t v422 = v83;
  MEMORY[0x270FA5388](v83);
  v588 = (char *)v406 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57AA0);
  uint64_t v419 = *(void *)(v85 - 8);
  uint64_t v420 = v85;
  MEMORY[0x270FA5388](v85);
  v590 = (char *)v406 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57AA8);
  uint64_t v417 = *(void *)(v87 - 8);
  uint64_t v418 = v87;
  MEMORY[0x270FA5388](v87);
  v591 = (char *)v406 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57AB0);
  uint64_t v415 = *(void *)(v89 - 8);
  uint64_t v416 = v89;
  MEMORY[0x270FA5388](v89);
  v592 = (char *)v406 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57AB8);
  uint64_t v413 = *(void *)(v91 - 8);
  uint64_t v414 = v91;
  MEMORY[0x270FA5388](v91);
  v593 = (char *)v406 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57AC0);
  uint64_t v411 = *(void *)(v93 - 8);
  uint64_t v412 = v93;
  MEMORY[0x270FA5388](v93);
  unint64_t v95 = (char *)v406 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57AC8);
  uint64_t v409 = *(void *)(v96 - 8);
  uint64_t v410 = v96;
  MEMORY[0x270FA5388](v96);
  unint64_t v98 = (char *)v406 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v99 = sub_251904CEC();
  sub_25192BAA0();
  unint64_t v100 = sub_251904D40();
  sub_25192BAA0();
  unint64_t v101 = sub_251904D94();
  sub_25192BAA0();
  unint64_t v660 = sub_251904DE8();
  sub_25192BAA0();
  unint64_t v663 = sub_251904E3C();
  sub_25192BAA0();
  unint64_t v658 = sub_251904E90();
  sub_25192BAA0();
  unint64_t v665 = sub_251904EE4();
  sub_25192BAA0();
  unint64_t v662 = sub_251904F38();
  sub_25192BAA0();
  unint64_t v667 = sub_251904F8C();
  sub_25192BAA0();
  unint64_t v657 = sub_251904FE0();
  sub_25192BAA0();
  unint64_t v654 = sub_251905034();
  sub_25192BAA0();
  unint64_t v653 = sub_251905088();
  sub_25192BAA0();
  unint64_t v661 = sub_2519050DC();
  sub_25192BAA0();
  unint64_t v656 = sub_251905130();
  sub_25192BAA0();
  unint64_t v652 = sub_251905184();
  sub_25192BAA0();
  unint64_t v650 = sub_2519051D8();
  sub_25192BAA0();
  unint64_t v651 = sub_25190522C();
  sub_25192BAA0();
  unint64_t v648 = sub_251905280();
  sub_25192BAA0();
  unint64_t v647 = sub_2519052D4();
  sub_25192BAA0();
  unint64_t v649 = sub_251905328();
  sub_25192BAA0();
  unint64_t v646 = sub_25190537C();
  sub_25192BAA0();
  unint64_t v640 = sub_2519053D0();
  sub_25192BAA0();
  unint64_t v641 = sub_251905424();
  sub_25192BAA0();
  unint64_t v645 = sub_251905478();
  sub_25192BAA0();
  unint64_t v644 = sub_2519054CC();
  sub_25192BAA0();
  unint64_t v643 = sub_251905520();
  sub_25192BAA0();
  unint64_t v642 = sub_251905574();
  sub_25192BAA0();
  unint64_t v639 = sub_2519055C8();
  sub_25192BAA0();
  unint64_t v638 = sub_25190561C();
  sub_25192BAA0();
  unint64_t v637 = sub_251905670();
  sub_25192BAA0();
  unint64_t v636 = sub_2519056C4();
  sub_25192BAA0();
  unint64_t v634 = sub_251905718();
  sub_25192BAA0();
  unint64_t v635 = sub_25190576C();
  sub_25192BAA0();
  unint64_t v632 = sub_2519057C0();
  sub_25192BAA0();
  unint64_t v633 = sub_251905814();
  sub_25192BAA0();
  unint64_t v631 = sub_251905868();
  sub_25192BAA0();
  unint64_t v630 = sub_2519058BC();
  sub_25192BAA0();
  unint64_t v629 = sub_251905910();
  sub_25192BAA0();
  unint64_t v628 = sub_251905964();
  sub_25192BAA0();
  unint64_t v627 = sub_2519059B8();
  sub_25192BAA0();
  unint64_t v626 = sub_251905A0C();
  sub_25192BAA0();
  unint64_t v625 = sub_251905A60();
  sub_25192BAA0();
  unint64_t v623 = sub_251905AB4();
  sub_25192BAA0();
  unint64_t v624 = sub_251905B08();
  sub_25192BAA0();
  unint64_t v621 = sub_251905B5C();
  sub_25192BAA0();
  unint64_t v622 = sub_251905BB0();
  sub_25192BAA0();
  unint64_t v620 = sub_251905C04();
  sub_25192BAA0();
  unint64_t v618 = sub_251905C58();
  sub_25192BAA0();
  unint64_t v619 = sub_251905CAC();
  sub_25192BAA0();
  unint64_t v617 = sub_251905D00();
  sub_25192BAA0();
  unint64_t v616 = sub_251905D54();
  sub_25192BAA0();
  unint64_t v615 = sub_251905DA8();
  sub_25192BAA0();
  unint64_t v613 = sub_251905DFC();
  sub_25192BAA0();
  unint64_t v614 = sub_251905E50();
  sub_25192BAA0();
  unint64_t v612 = sub_251905EA4();
  sub_25192BAA0();
  unint64_t v611 = sub_251905EF8();
  sub_25192BAA0();
  unint64_t v610 = sub_251905F4C();
  sub_25192BAA0();
  unint64_t v609 = sub_251905FA0();
  sub_25192BAA0();
  unint64_t v608 = sub_251905FF4();
  sub_25192BAA0();
  unint64_t v607 = sub_251906048();
  sub_25192BAA0();
  unint64_t v606 = sub_25190609C();
  sub_25192BAA0();
  unint64_t v605 = sub_2519060F0();
  sub_25192BAA0();
  unint64_t v604 = sub_251906144();
  sub_25192BAA0();
  unint64_t v574 = sub_251906198();
  sub_25192BAA0();
  v406[0] = sub_2519061EC();
  sub_25192BAA0();
  v406[1] = sub_251906240();
  sub_25192BAA0();
  unint64_t v102 = sub_2518E648C();
  v408 = v98;
  unint64_t v103 = v102;
  sub_25192BAC0();
  v4957 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  unint64_t v4956 = v99;
  v407 = v95;
  sub_25192BAB0();
  v4954 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4955 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  unint64_t v4952 = v99;
  unint64_t v4953 = v100;
  unint64_t v659 = v103;
  sub_25192BAB0();
  v4949 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4950 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4951 = &type metadata for Attribute.AirQualityCase.Resolver;
  unint64_t v4946 = v99;
  unint64_t v4947 = v100;
  unint64_t v4948 = v101;
  unint64_t v104 = v660;
  sub_25192BAB0();
  v4942 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4943 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4944 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4945 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  unint64_t v4938 = v99;
  unint64_t v4939 = v100;
  unint64_t v4940 = v101;
  unint64_t v105 = v101;
  unint64_t v664 = v101;
  unint64_t v4941 = v104;
  unint64_t v106 = v104;
  unint64_t v107 = v663;
  sub_25192BAB0();
  v4933 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4934 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4935 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4936 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4937 = &type metadata for Attribute.BrightnessCase.Resolver;
  unint64_t v4928 = v99;
  unint64_t v4929 = v100;
  unint64_t v4930 = v105;
  unint64_t v4931 = v106;
  unint64_t v108 = v106;
  unint64_t v4932 = v107;
  unint64_t v109 = v658;
  sub_25192BAB0();
  v4922 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4923 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4924 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4925 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4926 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4927 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  unint64_t v655 = v99;
  unint64_t v4916 = v99;
  unint64_t v110 = v100;
  unint64_t v666 = v100;
  unint64_t v4917 = v100;
  unint64_t v111 = v664;
  unint64_t v4918 = v664;
  unint64_t v4919 = v108;
  unint64_t v4920 = v107;
  unint64_t v4921 = v109;
  unint64_t v112 = v665;
  sub_25192BAB0();
  v4909 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4910 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4911 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4912 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4913 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4914 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4915 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  unint64_t v4902 = v99;
  unint64_t v4903 = v110;
  unint64_t v4904 = v111;
  unint64_t v113 = v111;
  unint64_t v114 = v660;
  unint64_t v4905 = v660;
  unint64_t v4906 = v107;
  unint64_t v4907 = v109;
  unint64_t v4908 = v112;
  unint64_t v115 = v662;
  sub_25192BAB0();
  v4894 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4895 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4896 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4897 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4898 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4899 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4900 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4901 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  unint64_t v4886 = v655;
  unint64_t v4887 = v666;
  unint64_t v4888 = v113;
  unint64_t v4889 = v114;
  unint64_t v4890 = v107;
  unint64_t v4891 = v109;
  unint64_t v116 = v665;
  unint64_t v4892 = v665;
  unint64_t v4893 = v115;
  unint64_t v117 = v667;
  sub_25192BAB0();
  v4877 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4878 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4879 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4880 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4881 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4882 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4883 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4884 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4885 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  unint64_t v118 = v655;
  unint64_t v4868 = v655;
  unint64_t v119 = v666;
  unint64_t v4869 = v666;
  unint64_t v120 = v664;
  unint64_t v4870 = v664;
  unint64_t v4871 = v660;
  unint64_t v4872 = v663;
  unint64_t v4873 = v109;
  unint64_t v4874 = v116;
  unint64_t v4875 = v662;
  unint64_t v4876 = v117;
  unint64_t v121 = v657;
  sub_25192BAB0();
  v4858 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4859 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4860 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4861 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4862 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4863 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4864 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4865 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4866 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4867 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  unint64_t v4848 = v118;
  unint64_t v4849 = v119;
  unint64_t v4850 = v120;
  unint64_t v122 = v660;
  unint64_t v4851 = v660;
  unint64_t v123 = v663;
  unint64_t v4852 = v663;
  unint64_t v4853 = v109;
  unint64_t v4854 = v665;
  unint64_t v4855 = v662;
  unint64_t v4856 = v667;
  unint64_t v4857 = v121;
  unint64_t v124 = v654;
  sub_25192BAB0();
  v4837 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4838 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4839 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4840 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4841 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4842 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4843 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4844 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4845 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4846 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v4847 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  unint64_t v125 = v655;
  unint64_t v4826 = v655;
  unint64_t v126 = v666;
  unint64_t v4827 = v666;
  unint64_t v127 = v664;
  unint64_t v4828 = v664;
  unint64_t v4829 = v122;
  unint64_t v4830 = v123;
  unint64_t v4831 = v658;
  unint64_t v4832 = v665;
  unint64_t v4833 = v662;
  unint64_t v4834 = v667;
  unint64_t v4835 = v121;
  unint64_t v4836 = v124;
  unint64_t v128 = v653;
  sub_25192BAB0();
  v4814 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4815 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4816 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4817 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4818 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4819 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4820 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4821 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4822 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4823 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v4824 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v4825 = &type metadata for Attribute.ChargingStateCase.Resolver;
  unint64_t v4802 = v125;
  unint64_t v4803 = v126;
  unint64_t v4804 = v127;
  unint64_t v4805 = v122;
  unint64_t v129 = v663;
  unint64_t v130 = v658;
  unint64_t v4806 = v663;
  unint64_t v4807 = v658;
  unint64_t v131 = v665;
  unint64_t v132 = v662;
  unint64_t v4808 = v665;
  unint64_t v4809 = v662;
  unint64_t v133 = v667;
  unint64_t v4810 = v667;
  unint64_t v4811 = v657;
  unint64_t v134 = v654;
  unint64_t v4812 = v654;
  unint64_t v4813 = v128;
  unint64_t v135 = v661;
  sub_25192BAB0();
  v4790 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4791 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4792 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4793 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4794 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4795 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4796 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4797 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4798 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v4799 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v4800 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v4801 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  unint64_t v4776 = v655;
  unint64_t v4777 = v666;
  unint64_t v136 = v664;
  unint64_t v4778 = v664;
  unint64_t v4779 = v660;
  unint64_t v4780 = v129;
  unint64_t v4781 = v130;
  unint64_t v4782 = v131;
  unint64_t v4783 = v132;
  unint64_t v137 = v131;
  unint64_t v4784 = v133;
  unint64_t v138 = v657;
  unint64_t v4785 = v657;
  unint64_t v4786 = v134;
  unint64_t v4787 = v653;
  unint64_t v4788 = v135;
  v4789 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  unint64_t v139 = v656;
  sub_25192BAB0();
  v4762 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4763 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4764 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4765 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4766 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4767 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4768 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4769 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4770 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4771 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v4772 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v4773 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v4774 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v4775 = &type metadata for Attribute.ColorCase.Resolver;
  unint64_t v140 = v655;
  unint64_t v141 = v666;
  unint64_t v4748 = v655;
  unint64_t v4749 = v666;
  unint64_t v142 = v660;
  unint64_t v4750 = v136;
  unint64_t v4751 = v660;
  unint64_t v143 = v663;
  unint64_t v4752 = v663;
  unint64_t v4753 = v658;
  unint64_t v4754 = v137;
  unint64_t v144 = v662;
  unint64_t v4755 = v662;
  unint64_t v4756 = v667;
  unint64_t v145 = v654;
  unint64_t v4757 = v138;
  unint64_t v4758 = v654;
  unint64_t v4759 = v653;
  unint64_t v4760 = v661;
  unint64_t v4761 = v139;
  unint64_t v146 = v652;
  sub_25192BAB0();
  v4733 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4734 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4735 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4736 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4737 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4738 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4739 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4740 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4741 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4742 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v4743 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v4744 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v4745 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v4746 = &type metadata for Attribute.ColorCase.Resolver;
  v4747 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  unint64_t v4718 = v140;
  unint64_t v4719 = v141;
  unint64_t v147 = v664;
  unint64_t v4720 = v664;
  unint64_t v4721 = v142;
  unint64_t v4722 = v143;
  unint64_t v148 = v658;
  unint64_t v4723 = v658;
  unint64_t v4724 = v665;
  unint64_t v4725 = v144;
  unint64_t v4726 = v667;
  unint64_t v4727 = v657;
  unint64_t v4728 = v145;
  unint64_t v149 = v653;
  unint64_t v4729 = v653;
  unint64_t v150 = v661;
  unint64_t v4730 = v661;
  unint64_t v4731 = v656;
  unint64_t v4732 = v146;
  unint64_t v151 = v650;
  sub_25192BAB0();
  v4702 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4703 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4704 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4705 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4706 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4707 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4708 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4709 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4710 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4711 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v4712 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v4713 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v4714 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v4715 = &type metadata for Attribute.ColorCase.Resolver;
  v4716 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v4717 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  unint64_t v152 = v655;
  unint64_t v4686 = v655;
  unint64_t v4687 = v666;
  unint64_t v4688 = v147;
  unint64_t v153 = v660;
  unint64_t v4689 = v660;
  unint64_t v4690 = v663;
  unint64_t v4691 = v148;
  unint64_t v154 = v665;
  unint64_t v4692 = v665;
  unint64_t v4693 = v662;
  unint64_t v4694 = v667;
  unint64_t v4695 = v657;
  unint64_t v4696 = v654;
  unint64_t v4697 = v149;
  unint64_t v4698 = v150;
  unint64_t v4699 = v656;
  unint64_t v4700 = v652;
  unint64_t v4701 = v151;
  unint64_t v155 = v651;
  sub_25192BAB0();
  v4669 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4670 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4671 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4672 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4673 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4674 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4675 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4676 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4677 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4678 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v4679 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v4680 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v4681 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v4682 = &type metadata for Attribute.ColorCase.Resolver;
  v4683 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v4684 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v4685 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  unint64_t v4652 = v152;
  unint64_t v156 = v666;
  unint64_t v4653 = v666;
  unint64_t v157 = v664;
  unint64_t v4654 = v664;
  unint64_t v4655 = v153;
  unint64_t v158 = v663;
  unint64_t v4656 = v663;
  unint64_t v159 = v658;
  unint64_t v4657 = v658;
  unint64_t v4658 = v154;
  unint64_t v4659 = v662;
  unint64_t v4660 = v667;
  unint64_t v160 = v657;
  unint64_t v4661 = v657;
  unint64_t v4662 = v654;
  unint64_t v161 = v653;
  unint64_t v4663 = v653;
  unint64_t v4664 = v661;
  unint64_t v4665 = v656;
  unint64_t v4666 = v652;
  unint64_t v4667 = v650;
  unint64_t v4668 = v155;
  unint64_t v162 = v648;
  sub_25192BAB0();
  v4634 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4635 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4636 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4637 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4638 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4639 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4640 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4641 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4642 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4643 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v4644 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v4645 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v4646 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v4647 = &type metadata for Attribute.ColorCase.Resolver;
  v4648 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v4649 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v4650 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v4651 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  unint64_t v4616 = v655;
  unint64_t v4617 = v156;
  unint64_t v4618 = v157;
  unint64_t v4619 = v660;
  unint64_t v4620 = v158;
  unint64_t v4621 = v159;
  unint64_t v163 = v665;
  unint64_t v4622 = v665;
  unint64_t v164 = v662;
  unint64_t v4623 = v662;
  unint64_t v165 = v667;
  unint64_t v4624 = v667;
  unint64_t v4625 = v160;
  unint64_t v166 = v654;
  unint64_t v4626 = v654;
  unint64_t v4627 = v161;
  unint64_t v4628 = v661;
  unint64_t v4629 = v656;
  unint64_t v4630 = v652;
  unint64_t v4631 = v650;
  unint64_t v4632 = v651;
  unint64_t v4633 = v162;
  unint64_t v167 = v647;
  sub_25192BAB0();
  v4597 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4598 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4599 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4600 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4601 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4602 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4603 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4604 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4605 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4606 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v4607 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v4608 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v4609 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v4610 = &type metadata for Attribute.ColorCase.Resolver;
  v4611 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v4612 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v4613 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v4614 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v4615 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  unint64_t v4578 = v655;
  unint64_t v4579 = v666;
  unint64_t v4580 = v664;
  unint64_t v168 = v660;
  unint64_t v4581 = v660;
  unint64_t v4582 = v663;
  unint64_t v4583 = v658;
  unint64_t v4584 = v163;
  unint64_t v4585 = v164;
  unint64_t v4586 = v165;
  unint64_t v4587 = v657;
  unint64_t v4588 = v166;
  unint64_t v4589 = v653;
  unint64_t v4590 = v661;
  unint64_t v169 = v656;
  unint64_t v4591 = v656;
  unint64_t v170 = v652;
  unint64_t v4592 = v652;
  unint64_t v4593 = v650;
  unint64_t v4594 = v651;
  unint64_t v4595 = v162;
  unint64_t v4596 = v167;
  unint64_t v171 = v649;
  sub_25192BAB0();
  v4558 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4559 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4560 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4561 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4562 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4563 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4564 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4565 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4566 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4567 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v4568 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v4569 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v4570 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v4571 = &type metadata for Attribute.ColorCase.Resolver;
  v4572 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v4573 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v4574 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v4575 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v4576 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v4577 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  unint64_t v172 = v655;
  unint64_t v4538 = v655;
  unint64_t v4539 = v666;
  unint64_t v4540 = v664;
  unint64_t v4541 = v168;
  unint64_t v4542 = v663;
  unint64_t v4543 = v658;
  unint64_t v4544 = v665;
  unint64_t v4545 = v164;
  unint64_t v4546 = v667;
  unint64_t v4547 = v657;
  unint64_t v4548 = v654;
  unint64_t v4549 = v653;
  unint64_t v4550 = v661;
  unint64_t v4551 = v169;
  unint64_t v4552 = v170;
  unint64_t v4553 = v650;
  unint64_t v4554 = v651;
  unint64_t v4555 = v648;
  unint64_t v4556 = v647;
  unint64_t v4557 = v171;
  unint64_t v173 = v646;
  sub_25192BAB0();
  v4517 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4518 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4519 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4520 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4521 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4522 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4523 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4524 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4525 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4526 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v4527 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v4528 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v4529 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v4530 = &type metadata for Attribute.ColorCase.Resolver;
  v4531 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v4532 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v4533 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v4534 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v4535 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v4536 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v4537 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  unint64_t v4496 = v172;
  unint64_t v174 = v666;
  unint64_t v4497 = v666;
  unint64_t v4498 = v664;
  unint64_t v175 = v660;
  unint64_t v4499 = v660;
  unint64_t v176 = v663;
  unint64_t v4500 = v663;
  unint64_t v4501 = v658;
  unint64_t v177 = v665;
  unint64_t v4502 = v665;
  unint64_t v4503 = v662;
  unint64_t v4504 = v667;
  unint64_t v4505 = v657;
  unint64_t v4506 = v654;
  unint64_t v178 = v653;
  unint64_t v4507 = v653;
  unint64_t v4508 = v661;
  unint64_t v4509 = v656;
  unint64_t v4510 = v652;
  unint64_t v4511 = v650;
  unint64_t v4512 = v651;
  unint64_t v4513 = v648;
  unint64_t v4514 = v647;
  unint64_t v4515 = v649;
  unint64_t v4516 = v173;
  unint64_t v179 = v640;
  sub_25192BAB0();
  v4474 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4475 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4476 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4477 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4478 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4479 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4480 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4481 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4482 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4483 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v4484 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v4485 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v4486 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v4487 = &type metadata for Attribute.ColorCase.Resolver;
  v4488 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v4489 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v4490 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v4491 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v4492 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v4493 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v4494 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v4495 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  unint64_t v4452 = v655;
  unint64_t v4453 = v174;
  unint64_t v4454 = v664;
  unint64_t v4455 = v175;
  unint64_t v4456 = v176;
  unint64_t v180 = v658;
  unint64_t v4457 = v658;
  unint64_t v4458 = v177;
  unint64_t v4459 = v662;
  unint64_t v181 = v667;
  unint64_t v4460 = v667;
  unint64_t v182 = v657;
  unint64_t v4461 = v657;
  unint64_t v183 = v654;
  unint64_t v4462 = v654;
  unint64_t v4463 = v178;
  unint64_t v184 = v661;
  unint64_t v4464 = v661;
  unint64_t v4465 = v656;
  unint64_t v4466 = v652;
  unint64_t v185 = v650;
  unint64_t v4467 = v650;
  unint64_t v4468 = v651;
  unint64_t v4469 = v648;
  unint64_t v4470 = v647;
  unint64_t v4471 = v649;
  unint64_t v4472 = v646;
  unint64_t v4473 = v179;
  unint64_t v186 = v641;
  sub_25192BAB0();
  v4429 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4430 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4431 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4432 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4433 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4434 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4435 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4436 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4437 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4438 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v4439 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v4440 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v4441 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v4442 = &type metadata for Attribute.ColorCase.Resolver;
  v4443 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v4444 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v4445 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v4446 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v4447 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v4448 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v4449 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v4450 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v4451 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  unint64_t v4406 = v655;
  unint64_t v4407 = v666;
  unint64_t v4408 = v664;
  unint64_t v4409 = v660;
  unint64_t v4410 = v663;
  unint64_t v4411 = v180;
  unint64_t v4412 = v665;
  unint64_t v187 = v662;
  unint64_t v4413 = v662;
  unint64_t v4414 = v181;
  unint64_t v4415 = v182;
  unint64_t v4416 = v183;
  unint64_t v188 = v653;
  unint64_t v4417 = v653;
  unint64_t v4418 = v184;
  unint64_t v4419 = v656;
  unint64_t v4420 = v652;
  unint64_t v4421 = v185;
  unint64_t v189 = v651;
  unint64_t v4422 = v651;
  unint64_t v190 = v648;
  unint64_t v4423 = v648;
  unint64_t v4424 = v647;
  unint64_t v4425 = v649;
  unint64_t v4426 = v646;
  unint64_t v191 = v640;
  unint64_t v4427 = v640;
  unint64_t v4428 = v186;
  unint64_t v192 = v645;
  sub_25192BAB0();
  v4382 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4383 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4384 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4385 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4386 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4387 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4388 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4389 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4390 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4391 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v4392 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v4393 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v4394 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v4395 = &type metadata for Attribute.ColorCase.Resolver;
  v4396 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v4397 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v4398 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v4399 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v4400 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v4401 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v4402 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v4403 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v4404 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v4405 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  unint64_t v4358 = v655;
  unint64_t v4359 = v666;
  unint64_t v4360 = v664;
  unint64_t v4361 = v660;
  unint64_t v4362 = v663;
  unint64_t v4363 = v658;
  unint64_t v4364 = v665;
  unint64_t v4365 = v187;
  unint64_t v4366 = v667;
  unint64_t v4367 = v657;
  unint64_t v4368 = v654;
  unint64_t v4369 = v188;
  unint64_t v4370 = v661;
  unint64_t v4371 = v656;
  unint64_t v193 = v652;
  unint64_t v4372 = v652;
  unint64_t v194 = v650;
  unint64_t v4373 = v650;
  unint64_t v4374 = v189;
  unint64_t v4375 = v190;
  unint64_t v4376 = v647;
  unint64_t v4377 = v649;
  unint64_t v4378 = v646;
  unint64_t v4379 = v191;
  unint64_t v195 = v641;
  unint64_t v4380 = v641;
  unint64_t v4381 = v192;
  unint64_t v196 = v644;
  sub_25192BAB0();
  v4333 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4334 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4335 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4336 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4337 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4338 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4339 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4340 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4341 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4342 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v4343 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v4344 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v4345 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v4346 = &type metadata for Attribute.ColorCase.Resolver;
  v4347 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v4348 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v4349 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v4350 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v4351 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v4352 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v4353 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v4354 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v4355 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v4356 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v4357 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  unint64_t v4308 = v655;
  unint64_t v4309 = v666;
  unint64_t v4310 = v664;
  unint64_t v197 = v660;
  unint64_t v4311 = v660;
  unint64_t v4312 = v663;
  unint64_t v4313 = v658;
  unint64_t v4314 = v665;
  unint64_t v4315 = v662;
  unint64_t v4316 = v667;
  unint64_t v198 = v657;
  unint64_t v4317 = v657;
  unint64_t v4318 = v654;
  unint64_t v199 = v653;
  unint64_t v4319 = v653;
  unint64_t v4320 = v661;
  unint64_t v4321 = v656;
  unint64_t v4322 = v193;
  unint64_t v4323 = v194;
  unint64_t v4324 = v651;
  unint64_t v200 = v648;
  unint64_t v4325 = v648;
  unint64_t v4326 = v647;
  unint64_t v4327 = v649;
  unint64_t v4328 = v646;
  unint64_t v4329 = v640;
  unint64_t v4330 = v195;
  unint64_t v4331 = v645;
  unint64_t v4332 = v196;
  unint64_t v201 = v643;
  sub_25192BAB0();
  v4282 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4283 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4284 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4285 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4286 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4287 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4288 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4289 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4290 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4291 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v4292 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v4293 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v4294 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v4295 = &type metadata for Attribute.ColorCase.Resolver;
  v4296 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v4297 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v4298 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v4299 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v4300 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v4301 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v4302 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v4303 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v4304 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v4305 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v4306 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v4307 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  unint64_t v4256 = v655;
  unint64_t v202 = v666;
  unint64_t v4257 = v666;
  unint64_t v4258 = v664;
  unint64_t v4259 = v197;
  unint64_t v4260 = v663;
  unint64_t v4261 = v658;
  unint64_t v4262 = v665;
  unint64_t v4263 = v662;
  unint64_t v4264 = v667;
  unint64_t v4265 = v198;
  unint64_t v203 = v654;
  unint64_t v4266 = v654;
  unint64_t v4267 = v199;
  unint64_t v4268 = v661;
  unint64_t v204 = v656;
  unint64_t v4269 = v656;
  unint64_t v4270 = v652;
  unint64_t v4271 = v650;
  unint64_t v4272 = v651;
  unint64_t v4273 = v200;
  unint64_t v205 = v647;
  unint64_t v4274 = v647;
  unint64_t v4275 = v649;
  unint64_t v4276 = v646;
  unint64_t v4277 = v640;
  unint64_t v4278 = v641;
  unint64_t v4279 = v645;
  unint64_t v4280 = v644;
  unint64_t v4281 = v201;
  unint64_t v206 = v642;
  sub_25192BAB0();
  v4229 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4230 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4231 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4232 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4233 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4234 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4235 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4236 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4237 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4238 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v4239 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v4240 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v4241 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v4242 = &type metadata for Attribute.ColorCase.Resolver;
  v4243 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v4244 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v4245 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v4246 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v4247 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v4248 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v4249 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v4250 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v4251 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v4252 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v4253 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v4254 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v4255 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  unint64_t v4202 = v655;
  unint64_t v4203 = v202;
  unint64_t v4204 = v664;
  unint64_t v4205 = v660;
  unint64_t v4206 = v663;
  unint64_t v207 = v658;
  unint64_t v4207 = v658;
  unint64_t v208 = v665;
  unint64_t v4208 = v665;
  unint64_t v4209 = v662;
  unint64_t v209 = v667;
  unint64_t v4210 = v667;
  unint64_t v4211 = v657;
  unint64_t v4212 = v203;
  unint64_t v4213 = v653;
  unint64_t v4214 = v661;
  unint64_t v4215 = v204;
  unint64_t v4216 = v652;
  unint64_t v4217 = v650;
  unint64_t v210 = v651;
  unint64_t v4218 = v651;
  unint64_t v211 = v648;
  unint64_t v4219 = v648;
  unint64_t v4220 = v205;
  unint64_t v212 = v649;
  unint64_t v4221 = v649;
  unint64_t v4222 = v646;
  unint64_t v4223 = v640;
  unint64_t v4224 = v641;
  unint64_t v4225 = v645;
  unint64_t v4226 = v644;
  unint64_t v4227 = v643;
  unint64_t v4228 = v206;
  unint64_t v213 = v639;
  sub_25192BAB0();
  v4174 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4175 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4176 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4177 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4178 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4179 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4180 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4181 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4182 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4183 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v4184 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v4185 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v4186 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v4187 = &type metadata for Attribute.ColorCase.Resolver;
  v4188 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v4189 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v4190 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v4191 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v4192 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v4193 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v4194 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v4195 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v4196 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v4197 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v4198 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v4199 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v4200 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v4201 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  unint64_t v4146 = v655;
  unint64_t v4147 = v666;
  unint64_t v4148 = v664;
  unint64_t v4149 = v660;
  unint64_t v4150 = v663;
  unint64_t v4151 = v207;
  unint64_t v4152 = v208;
  unint64_t v214 = v662;
  unint64_t v4153 = v662;
  unint64_t v4154 = v209;
  unint64_t v4155 = v657;
  unint64_t v4156 = v654;
  unint64_t v4157 = v653;
  unint64_t v4158 = v661;
  unint64_t v215 = v656;
  unint64_t v4159 = v656;
  unint64_t v4160 = v652;
  unint64_t v4161 = v650;
  unint64_t v4162 = v210;
  unint64_t v4163 = v211;
  unint64_t v216 = v647;
  unint64_t v4164 = v647;
  unint64_t v4165 = v212;
  unint64_t v217 = v646;
  unint64_t v4166 = v646;
  unint64_t v4167 = v640;
  unint64_t v4168 = v641;
  unint64_t v4169 = v645;
  unint64_t v4170 = v644;
  unint64_t v4171 = v643;
  unint64_t v4172 = v642;
  unint64_t v4173 = v213;
  unint64_t v218 = v638;
  sub_25192BAB0();
  v4117 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4118 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4119 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4120 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4121 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4122 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4123 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4124 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4125 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4126 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v4127 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v4128 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v4129 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v4130 = &type metadata for Attribute.ColorCase.Resolver;
  v4131 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v4132 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v4133 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v4134 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v4135 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v4136 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v4137 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v4138 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v4139 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v4140 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v4141 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v4142 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v4143 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v4144 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v4145 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  unint64_t v219 = v655;
  unint64_t v4088 = v655;
  unint64_t v4089 = v666;
  unint64_t v4090 = v664;
  unint64_t v4091 = v660;
  unint64_t v4092 = v663;
  unint64_t v4093 = v658;
  unint64_t v220 = v665;
  unint64_t v4094 = v665;
  unint64_t v4095 = v214;
  unint64_t v4096 = v667;
  unint64_t v4097 = v657;
  unint64_t v4098 = v654;
  unint64_t v4099 = v653;
  unint64_t v4100 = v661;
  unint64_t v4101 = v215;
  unint64_t v221 = v652;
  unint64_t v4102 = v652;
  unint64_t v4103 = v650;
  unint64_t v4104 = v651;
  unint64_t v4105 = v648;
  unint64_t v4106 = v216;
  unint64_t v222 = v649;
  unint64_t v4107 = v649;
  unint64_t v4108 = v217;
  unint64_t v223 = v640;
  unint64_t v4109 = v640;
  unint64_t v4110 = v641;
  unint64_t v4111 = v645;
  unint64_t v4112 = v644;
  unint64_t v4113 = v643;
  unint64_t v4114 = v642;
  unint64_t v4115 = v639;
  unint64_t v4116 = v218;
  unint64_t v224 = v637;
  sub_25192BAB0();
  v4058 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v4059 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v4060 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4061 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4062 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4063 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4064 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4065 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4066 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4067 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v4068 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v4069 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v4070 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v4071 = &type metadata for Attribute.ColorCase.Resolver;
  v4072 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v4073 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v4074 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v4075 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v4076 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v4077 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v4078 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v4079 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v4080 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v4081 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v4082 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v4083 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v4084 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v4085 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v4086 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v4087 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  unint64_t v4028 = v219;
  unint64_t v4029 = v666;
  unint64_t v225 = v664;
  unint64_t v4030 = v664;
  unint64_t v4031 = v660;
  unint64_t v4032 = v663;
  unint64_t v4033 = v658;
  unint64_t v4034 = v220;
  unint64_t v226 = v662;
  unint64_t v4035 = v662;
  unint64_t v4036 = v667;
  unint64_t v4037 = v657;
  unint64_t v4038 = v654;
  unint64_t v4039 = v653;
  unint64_t v4040 = v661;
  unint64_t v4041 = v656;
  unint64_t v4042 = v221;
  unint64_t v4043 = v650;
  unint64_t v4044 = v651;
  unint64_t v4045 = v648;
  unint64_t v4046 = v647;
  unint64_t v4047 = v222;
  unint64_t v4048 = v646;
  unint64_t v4049 = v223;
  unint64_t v4050 = v641;
  unint64_t v4051 = v645;
  unint64_t v4052 = v644;
  unint64_t v4053 = v643;
  unint64_t v4054 = v642;
  unint64_t v4055 = v639;
  unint64_t v4056 = v638;
  unint64_t v4057 = v224;
  unint64_t v227 = v636;
  sub_25192BAB0();
  v3997 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v3998 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v3999 = &type metadata for Attribute.AirQualityCase.Resolver;
  v4000 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v4001 = &type metadata for Attribute.BrightnessCase.Resolver;
  v4002 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v4003 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v4004 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v4005 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v4006 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v4007 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v4008 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v4009 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v4010 = &type metadata for Attribute.ColorCase.Resolver;
  v4011 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v4012 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v4013 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v4014 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v4015 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v4016 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v4017 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v4018 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v4019 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v4020 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v4021 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v4022 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v4023 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v4024 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v4025 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v4026 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v4027 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  unint64_t v3966 = v655;
  unint64_t v3967 = v666;
  unint64_t v3968 = v225;
  unint64_t v3969 = v660;
  unint64_t v3970 = v663;
  unint64_t v228 = v658;
  unint64_t v3971 = v658;
  unint64_t v3972 = v665;
  unint64_t v3973 = v226;
  unint64_t v3974 = v667;
  unint64_t v3975 = v657;
  unint64_t v3976 = v654;
  unint64_t v229 = v653;
  unint64_t v3977 = v653;
  unint64_t v3978 = v661;
  unint64_t v3979 = v656;
  unint64_t v230 = v652;
  unint64_t v3980 = v652;
  unint64_t v231 = v650;
  unint64_t v3981 = v650;
  unint64_t v3982 = v651;
  unint64_t v3983 = v648;
  unint64_t v3984 = v647;
  unint64_t v3985 = v649;
  unint64_t v3986 = v646;
  unint64_t v3987 = v223;
  unint64_t v232 = v641;
  unint64_t v3988 = v641;
  unint64_t v3989 = v645;
  unint64_t v3990 = v644;
  unint64_t v3991 = v643;
  unint64_t v3992 = v642;
  unint64_t v3993 = v639;
  unint64_t v3994 = v638;
  unint64_t v3995 = v637;
  unint64_t v3996 = v227;
  unint64_t v233 = v634;
  sub_25192BAB0();
  v3934 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v3935 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v3936 = &type metadata for Attribute.AirQualityCase.Resolver;
  v3937 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v3938 = &type metadata for Attribute.BrightnessCase.Resolver;
  v3939 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v3940 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v3941 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v3942 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v3943 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v3944 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v3945 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v3946 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v3947 = &type metadata for Attribute.ColorCase.Resolver;
  v3948 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v3949 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v3950 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v3951 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v3952 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v3953 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v3954 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v3955 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v3956 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v3957 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v3958 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v3959 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v3960 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v3961 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v3962 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v3963 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v3964 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v3965 = &type metadata for Attribute.InUseCase.Resolver;
  unint64_t v234 = v655;
  unint64_t v3902 = v655;
  unint64_t v3903 = v666;
  unint64_t v3904 = v664;
  unint64_t v3905 = v660;
  unint64_t v3906 = v663;
  unint64_t v3907 = v228;
  unint64_t v3908 = v665;
  unint64_t v3909 = v662;
  unint64_t v3910 = v667;
  unint64_t v3911 = v657;
  unint64_t v3912 = v654;
  unint64_t v3913 = v229;
  unint64_t v3914 = v661;
  unint64_t v3915 = v656;
  unint64_t v3916 = v230;
  unint64_t v3917 = v231;
  unint64_t v3918 = v651;
  unint64_t v3919 = v648;
  unint64_t v3920 = v647;
  unint64_t v3921 = v649;
  unint64_t v3922 = v646;
  unint64_t v235 = v640;
  unint64_t v3923 = v640;
  unint64_t v3924 = v232;
  unint64_t v3925 = v645;
  unint64_t v3926 = v644;
  unint64_t v3927 = v643;
  unint64_t v3928 = v642;
  unint64_t v3929 = v639;
  unint64_t v3930 = v638;
  unint64_t v3931 = v637;
  unint64_t v3932 = v636;
  unint64_t v3933 = v233;
  unint64_t v236 = v635;
  sub_25192BAB0();
  v3869 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v3870 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v3871 = &type metadata for Attribute.AirQualityCase.Resolver;
  v3872 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v3873 = &type metadata for Attribute.BrightnessCase.Resolver;
  v3874 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v3875 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v3876 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v3877 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v3878 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v3879 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v3880 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v3881 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v3882 = &type metadata for Attribute.ColorCase.Resolver;
  v3883 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v3884 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v3885 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v3886 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v3887 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v3888 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v3889 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v3890 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v3891 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v3892 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v3893 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v3894 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v3895 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v3896 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v3897 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v3898 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v3899 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v3900 = &type metadata for Attribute.InUseCase.Resolver;
  v3901 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  unint64_t v3836 = v234;
  unint64_t v3837 = v666;
  unint64_t v237 = v664;
  unint64_t v3838 = v664;
  unint64_t v238 = v660;
  unint64_t v3839 = v660;
  unint64_t v3840 = v663;
  unint64_t v239 = v228;
  unint64_t v3841 = v228;
  unint64_t v3842 = v665;
  unint64_t v3843 = v662;
  unint64_t v3844 = v667;
  unint64_t v3845 = v657;
  unint64_t v3846 = v654;
  unint64_t v3847 = v653;
  unint64_t v240 = v661;
  unint64_t v3848 = v661;
  unint64_t v3849 = v656;
  unint64_t v3850 = v652;
  unint64_t v241 = v650;
  unint64_t v3851 = v650;
  unint64_t v3852 = v651;
  unint64_t v3853 = v648;
  unint64_t v3854 = v647;
  unint64_t v3855 = v649;
  unint64_t v3856 = v646;
  unint64_t v3857 = v235;
  unint64_t v3858 = v641;
  unint64_t v3859 = v645;
  unint64_t v3860 = v644;
  unint64_t v3861 = v643;
  unint64_t v3862 = v642;
  unint64_t v3863 = v639;
  unint64_t v3864 = v638;
  unint64_t v3865 = v637;
  unint64_t v3866 = v636;
  unint64_t v3867 = v634;
  unint64_t v3868 = v236;
  unint64_t v242 = v632;
  sub_25192BAB0();
  v3802 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v3803 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v3804 = &type metadata for Attribute.AirQualityCase.Resolver;
  v3805 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v3806 = &type metadata for Attribute.BrightnessCase.Resolver;
  v3807 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v3808 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v3809 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v3810 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v3811 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v3812 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v3813 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v3814 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v3815 = &type metadata for Attribute.ColorCase.Resolver;
  v3816 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v3817 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v3818 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v3819 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v3820 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v3821 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v3822 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v3823 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v3824 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v3825 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v3826 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v3827 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v3828 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v3829 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v3830 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v3831 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v3832 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v3833 = &type metadata for Attribute.InUseCase.Resolver;
  v3834 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v3835 = &type metadata for Attribute.LightLevelCase.Resolver;
  unint64_t v3768 = v655;
  unint64_t v3769 = v666;
  unint64_t v3770 = v237;
  unint64_t v3771 = v238;
  unint64_t v3772 = v663;
  unint64_t v3773 = v239;
  unint64_t v3774 = v665;
  unint64_t v3775 = v662;
  unint64_t v3776 = v667;
  unint64_t v243 = v657;
  unint64_t v3777 = v657;
  unint64_t v3778 = v654;
  unint64_t v3779 = v653;
  unint64_t v3780 = v240;
  unint64_t v3781 = v656;
  unint64_t v3782 = v652;
  unint64_t v3783 = v241;
  unint64_t v244 = v651;
  unint64_t v3784 = v651;
  unint64_t v245 = v648;
  unint64_t v3785 = v648;
  unint64_t v3786 = v647;
  unint64_t v3787 = v649;
  unint64_t v3788 = v646;
  unint64_t v3789 = v640;
  unint64_t v3790 = v641;
  unint64_t v246 = v645;
  unint64_t v3791 = v645;
  unint64_t v3792 = v644;
  unint64_t v3793 = v643;
  unint64_t v3794 = v642;
  unint64_t v3795 = v639;
  unint64_t v3796 = v638;
  unint64_t v3797 = v637;
  unint64_t v247 = v636;
  unint64_t v3798 = v636;
  unint64_t v3799 = v634;
  unint64_t v248 = v635;
  unint64_t v3800 = v635;
  unint64_t v3801 = v242;
  unint64_t v249 = v633;
  sub_25192BAB0();
  v3733 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v3734 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v3735 = &type metadata for Attribute.AirQualityCase.Resolver;
  v3736 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v3737 = &type metadata for Attribute.BrightnessCase.Resolver;
  v3738 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v3739 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v3740 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v3741 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v3742 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v3743 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v3744 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v3745 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v3746 = &type metadata for Attribute.ColorCase.Resolver;
  v3747 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v3748 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v3749 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v3750 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v3751 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v3752 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v3753 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v3754 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v3755 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v3756 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v3757 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v3758 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v3759 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v3760 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v3761 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v3762 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v3763 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v3764 = &type metadata for Attribute.InUseCase.Resolver;
  v3765 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v3766 = &type metadata for Attribute.LightLevelCase.Resolver;
  v3767 = &type metadata for Attribute.LowBatteryCase.Resolver;
  unint64_t v3698 = v655;
  unint64_t v3699 = v666;
  unint64_t v3700 = v664;
  unint64_t v250 = v660;
  unint64_t v3701 = v660;
  unint64_t v3702 = v663;
  unint64_t v3703 = v658;
  unint64_t v3704 = v665;
  unint64_t v3705 = v662;
  unint64_t v3706 = v667;
  unint64_t v3707 = v243;
  unint64_t v3708 = v654;
  unint64_t v3709 = v653;
  unint64_t v3710 = v661;
  unint64_t v3711 = v656;
  unint64_t v3712 = v652;
  unint64_t v3713 = v650;
  unint64_t v3714 = v244;
  unint64_t v3715 = v245;
  unint64_t v3716 = v647;
  unint64_t v3717 = v649;
  unint64_t v3718 = v646;
  unint64_t v3719 = v640;
  unint64_t v3720 = v641;
  unint64_t v3721 = v246;
  unint64_t v251 = v644;
  unint64_t v3722 = v644;
  unint64_t v252 = v643;
  unint64_t v3723 = v643;
  unint64_t v3724 = v642;
  unint64_t v3725 = v639;
  unint64_t v3726 = v638;
  unint64_t v3727 = v637;
  unint64_t v3728 = v247;
  unint64_t v3729 = v634;
  unint64_t v3730 = v248;
  unint64_t v253 = v632;
  unint64_t v3731 = v632;
  unint64_t v3732 = v249;
  unint64_t v254 = v631;
  sub_25192BAB0();
  v3662 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v3663 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v3664 = &type metadata for Attribute.AirQualityCase.Resolver;
  v3665 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v3666 = &type metadata for Attribute.BrightnessCase.Resolver;
  v3667 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v3668 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v3669 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v3670 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v3671 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v3672 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v3673 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v3674 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v3675 = &type metadata for Attribute.ColorCase.Resolver;
  v3676 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v3677 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v3678 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v3679 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v3680 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v3681 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v3682 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v3683 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v3684 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v3685 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v3686 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v3687 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v3688 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v3689 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v3690 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v3691 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v3692 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v3693 = &type metadata for Attribute.InUseCase.Resolver;
  v3694 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v3695 = &type metadata for Attribute.LightLevelCase.Resolver;
  v3696 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v3697 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  unint64_t v3626 = v655;
  unint64_t v3627 = v666;
  unint64_t v3628 = v664;
  unint64_t v3629 = v250;
  unint64_t v3630 = v663;
  unint64_t v3631 = v658;
  unint64_t v3632 = v665;
  unint64_t v3633 = v662;
  unint64_t v3634 = v667;
  unint64_t v255 = v657;
  unint64_t v3635 = v657;
  unint64_t v3636 = v654;
  unint64_t v3637 = v653;
  unint64_t v3638 = v661;
  unint64_t v3639 = v656;
  unint64_t v3640 = v652;
  unint64_t v3641 = v650;
  unint64_t v256 = v651;
  unint64_t v3642 = v651;
  unint64_t v3643 = v648;
  unint64_t v3644 = v647;
  unint64_t v3645 = v649;
  unint64_t v3646 = v646;
  unint64_t v3647 = v640;
  unint64_t v3648 = v641;
  unint64_t v3649 = v645;
  unint64_t v3650 = v251;
  unint64_t v3651 = v252;
  unint64_t v257 = v642;
  unint64_t v3652 = v642;
  unint64_t v3653 = v639;
  unint64_t v3654 = v638;
  unint64_t v3655 = v637;
  unint64_t v3656 = v636;
  unint64_t v3657 = v634;
  unint64_t v3658 = v635;
  unint64_t v3659 = v253;
  unint64_t v3660 = v633;
  unint64_t v3661 = v254;
  unint64_t v258 = v630;
  sub_25192BAB0();
  v3589 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v3590 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v3591 = &type metadata for Attribute.AirQualityCase.Resolver;
  v3592 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v3593 = &type metadata for Attribute.BrightnessCase.Resolver;
  v3594 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v3595 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v3596 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v3597 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v3598 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v3599 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v3600 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v3601 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v3602 = &type metadata for Attribute.ColorCase.Resolver;
  v3603 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v3604 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v3605 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v3606 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v3607 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v3608 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v3609 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v3610 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v3611 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v3612 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v3613 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v3614 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v3615 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v3616 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v3617 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v3618 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v3619 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v3620 = &type metadata for Attribute.InUseCase.Resolver;
  v3621 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v3622 = &type metadata for Attribute.LightLevelCase.Resolver;
  v3623 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v3624 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v3625 = &type metadata for Attribute.NaturalLightCase.Resolver;
  unint64_t v3552 = v655;
  unint64_t v259 = v666;
  unint64_t v3553 = v666;
  unint64_t v3554 = v664;
  unint64_t v3555 = v660;
  unint64_t v3556 = v663;
  unint64_t v3557 = v658;
  unint64_t v3558 = v665;
  unint64_t v3559 = v662;
  unint64_t v3560 = v667;
  unint64_t v3561 = v255;
  unint64_t v260 = v654;
  unint64_t v3562 = v654;
  unint64_t v3563 = v653;
  unint64_t v3564 = v661;
  unint64_t v3565 = v656;
  unint64_t v3566 = v652;
  unint64_t v3567 = v650;
  unint64_t v3568 = v256;
  unint64_t v3569 = v648;
  unint64_t v261 = v647;
  unint64_t v3570 = v647;
  unint64_t v3571 = v649;
  unint64_t v3572 = v646;
  unint64_t v3573 = v640;
  unint64_t v3574 = v641;
  unint64_t v3575 = v645;
  unint64_t v3576 = v644;
  unint64_t v262 = v643;
  unint64_t v3577 = v643;
  unint64_t v3578 = v257;
  unint64_t v3579 = v639;
  unint64_t v3580 = v638;
  unint64_t v3581 = v637;
  unint64_t v3582 = v636;
  unint64_t v3583 = v634;
  unint64_t v3584 = v635;
  unint64_t v3585 = v632;
  unint64_t v3586 = v633;
  unint64_t v3587 = v631;
  unint64_t v3588 = v258;
  unint64_t v263 = v629;
  sub_25192BAB0();
  v3514 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v3515 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v3516 = &type metadata for Attribute.AirQualityCase.Resolver;
  v3517 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v3518 = &type metadata for Attribute.BrightnessCase.Resolver;
  v3519 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v3520 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v3521 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v3522 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v3523 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v3524 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v3525 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v3526 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v3527 = &type metadata for Attribute.ColorCase.Resolver;
  v3528 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v3529 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v3530 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v3531 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v3532 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v3533 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v3534 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v3535 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v3536 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v3537 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v3538 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v3539 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v3540 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v3541 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v3542 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v3543 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v3544 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v3545 = &type metadata for Attribute.InUseCase.Resolver;
  v3546 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v3547 = &type metadata for Attribute.LightLevelCase.Resolver;
  v3548 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v3549 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v3550 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v3551 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  unint64_t v3476 = v655;
  unint64_t v3477 = v259;
  unint64_t v3478 = v664;
  unint64_t v3479 = v660;
  unint64_t v3480 = v663;
  unint64_t v3481 = v658;
  unint64_t v3482 = v665;
  unint64_t v3483 = v662;
  unint64_t v3484 = v667;
  unint64_t v264 = v657;
  unint64_t v3485 = v657;
  unint64_t v3486 = v260;
  unint64_t v3487 = v653;
  unint64_t v3488 = v661;
  unint64_t v265 = v656;
  unint64_t v3489 = v656;
  unint64_t v3490 = v652;
  unint64_t v3491 = v650;
  unint64_t v3492 = v651;
  unint64_t v3493 = v648;
  unint64_t v3494 = v261;
  unint64_t v3495 = v649;
  unint64_t v3496 = v646;
  unint64_t v3497 = v640;
  unint64_t v3498 = v641;
  unint64_t v266 = v645;
  unint64_t v3499 = v645;
  unint64_t v3500 = v644;
  unint64_t v3501 = v262;
  unint64_t v3502 = v642;
  unint64_t v267 = v639;
  unint64_t v3503 = v639;
  unint64_t v3504 = v638;
  unint64_t v3505 = v637;
  unint64_t v3506 = v636;
  unint64_t v3507 = v634;
  unint64_t v3508 = v635;
  unint64_t v3509 = v632;
  unint64_t v3510 = v633;
  unint64_t v3511 = v631;
  unint64_t v3512 = v630;
  unint64_t v3513 = v263;
  unint64_t v268 = v628;
  sub_25192BAB0();
  v3437 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v3438 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v3439 = &type metadata for Attribute.AirQualityCase.Resolver;
  v3440 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v3441 = &type metadata for Attribute.BrightnessCase.Resolver;
  v3442 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v3443 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v3444 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v3445 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v3446 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v3447 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v3448 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v3449 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v3450 = &type metadata for Attribute.ColorCase.Resolver;
  v3451 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v3452 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v3453 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v3454 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v3455 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v3456 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v3457 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v3458 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v3459 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v3460 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v3461 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v3462 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v3463 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v3464 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v3465 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v3466 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v3467 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v3468 = &type metadata for Attribute.InUseCase.Resolver;
  v3469 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v3470 = &type metadata for Attribute.LightLevelCase.Resolver;
  v3471 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v3472 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v3473 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v3474 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v3475 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  unint64_t v3398 = v655;
  unint64_t v3399 = v666;
  unint64_t v3400 = v664;
  unint64_t v3401 = v660;
  unint64_t v3402 = v663;
  unint64_t v3403 = v658;
  unint64_t v3404 = v665;
  unint64_t v3405 = v662;
  unint64_t v3406 = v667;
  unint64_t v3407 = v264;
  unint64_t v3408 = v260;
  unint64_t v3409 = v653;
  unint64_t v3410 = v661;
  unint64_t v3411 = v265;
  unint64_t v269 = v652;
  unint64_t v3412 = v652;
  unint64_t v270 = v650;
  unint64_t v3413 = v650;
  unint64_t v271 = v651;
  unint64_t v3414 = v651;
  unint64_t v3415 = v648;
  unint64_t v3416 = v261;
  unint64_t v3417 = v649;
  unint64_t v3418 = v646;
  unint64_t v3419 = v640;
  unint64_t v3420 = v641;
  unint64_t v3421 = v266;
  unint64_t v3422 = v644;
  unint64_t v3423 = v643;
  unint64_t v3424 = v642;
  unint64_t v3425 = v267;
  unint64_t v3426 = v638;
  unint64_t v3427 = v637;
  unint64_t v3428 = v636;
  unint64_t v3429 = v634;
  unint64_t v3430 = v635;
  unint64_t v3431 = v632;
  unint64_t v3432 = v633;
  unint64_t v3433 = v631;
  unint64_t v3434 = v630;
  unint64_t v3435 = v629;
  unint64_t v3436 = v268;
  unint64_t v272 = v627;
  sub_25192BAB0();
  v3358 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v3359 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v3360 = &type metadata for Attribute.AirQualityCase.Resolver;
  v3361 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v3362 = &type metadata for Attribute.BrightnessCase.Resolver;
  v3363 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v3364 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v3365 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v3366 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v3367 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v3368 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v3369 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v3370 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v3371 = &type metadata for Attribute.ColorCase.Resolver;
  v3372 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v3373 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v3374 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v3375 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v3376 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v3377 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v3378 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v3379 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v3380 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v3381 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v3382 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v3383 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v3384 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v3385 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v3386 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v3387 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v3388 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v3389 = &type metadata for Attribute.InUseCase.Resolver;
  v3390 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v3391 = &type metadata for Attribute.LightLevelCase.Resolver;
  v3392 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v3393 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v3394 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v3395 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v3396 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v3397 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  unint64_t v3318 = v655;
  unint64_t v3319 = v666;
  unint64_t v3320 = v664;
  unint64_t v3321 = v660;
  unint64_t v3322 = v663;
  unint64_t v3323 = v658;
  unint64_t v3324 = v665;
  unint64_t v3325 = v662;
  unint64_t v3326 = v667;
  unint64_t v3327 = v657;
  unint64_t v3328 = v260;
  unint64_t v3329 = v653;
  unint64_t v3330 = v661;
  unint64_t v3331 = v656;
  unint64_t v3332 = v269;
  unint64_t v3333 = v270;
  unint64_t v3334 = v271;
  unint64_t v273 = v648;
  unint64_t v3335 = v648;
  unint64_t v3336 = v261;
  unint64_t v274 = v649;
  unint64_t v3337 = v649;
  unint64_t v3338 = v646;
  unint64_t v3339 = v640;
  unint64_t v3340 = v641;
  unint64_t v3341 = v645;
  unint64_t v3342 = v644;
  unint64_t v3343 = v643;
  unint64_t v3344 = v642;
  unint64_t v3345 = v639;
  unint64_t v3346 = v638;
  unint64_t v3347 = v637;
  unint64_t v3348 = v636;
  unint64_t v3349 = v634;
  unint64_t v3350 = v635;
  unint64_t v3351 = v632;
  unint64_t v3352 = v633;
  unint64_t v3353 = v631;
  unint64_t v275 = v630;
  unint64_t v3354 = v630;
  unint64_t v276 = v629;
  unint64_t v3355 = v629;
  unint64_t v3356 = v628;
  unint64_t v3357 = v272;
  unint64_t v277 = v626;
  sub_25192BAB0();
  v3277 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v3278 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v3279 = &type metadata for Attribute.AirQualityCase.Resolver;
  v3280 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v3281 = &type metadata for Attribute.BrightnessCase.Resolver;
  v3282 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v3283 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v3284 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v3285 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v3286 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v3287 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v3288 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v3289 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v3290 = &type metadata for Attribute.ColorCase.Resolver;
  v3291 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v3292 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v3293 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v3294 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v3295 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v3296 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v3297 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v3298 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v3299 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v3300 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v3301 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v3302 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v3303 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v3304 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v3305 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v3306 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v3307 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v3308 = &type metadata for Attribute.InUseCase.Resolver;
  v3309 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v3310 = &type metadata for Attribute.LightLevelCase.Resolver;
  v3311 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v3312 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v3313 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v3314 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v3315 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v3316 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v3317 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  unint64_t v3236 = v655;
  unint64_t v3237 = v666;
  unint64_t v3238 = v664;
  unint64_t v3239 = v660;
  unint64_t v3240 = v663;
  unint64_t v3241 = v658;
  unint64_t v3242 = v665;
  unint64_t v278 = v662;
  unint64_t v3243 = v662;
  unint64_t v3244 = v667;
  unint64_t v3245 = v657;
  unint64_t v3246 = v654;
  unint64_t v3247 = v653;
  unint64_t v3248 = v661;
  unint64_t v3249 = v656;
  unint64_t v3250 = v652;
  unint64_t v3251 = v650;
  unint64_t v3252 = v651;
  unint64_t v3253 = v273;
  unint64_t v3254 = v647;
  unint64_t v3255 = v274;
  unint64_t v3256 = v646;
  unint64_t v3257 = v640;
  unint64_t v3258 = v641;
  unint64_t v3259 = v645;
  unint64_t v3260 = v644;
  unint64_t v3261 = v643;
  unint64_t v3262 = v642;
  unint64_t v279 = v639;
  unint64_t v3263 = v639;
  unint64_t v280 = v638;
  unint64_t v3264 = v638;
  unint64_t v281 = v637;
  unint64_t v3265 = v637;
  unint64_t v3266 = v636;
  unint64_t v3267 = v634;
  unint64_t v3268 = v635;
  unint64_t v3269 = v632;
  unint64_t v3270 = v633;
  unint64_t v3271 = v631;
  unint64_t v3272 = v275;
  unint64_t v3273 = v276;
  unint64_t v282 = v628;
  unint64_t v3274 = v628;
  unint64_t v3275 = v627;
  unint64_t v3276 = v277;
  unint64_t v283 = v625;
  sub_25192BAB0();
  v3194 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v3195 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v3196 = &type metadata for Attribute.AirQualityCase.Resolver;
  v3197 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v3198 = &type metadata for Attribute.BrightnessCase.Resolver;
  v3199 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v3200 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v3201 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v3202 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v3203 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v3204 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v3205 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v3206 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v3207 = &type metadata for Attribute.ColorCase.Resolver;
  v3208 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v3209 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v3210 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v3211 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v3212 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v3213 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v3214 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v3215 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v3216 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v3217 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v3218 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v3219 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v3220 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v3221 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v3222 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v3223 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v3224 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v3225 = &type metadata for Attribute.InUseCase.Resolver;
  v3226 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v3227 = &type metadata for Attribute.LightLevelCase.Resolver;
  v3228 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v3229 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v3230 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v3231 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v3232 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v3233 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v3234 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v3235 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  unint64_t v3152 = v655;
  unint64_t v3153 = v666;
  unint64_t v3154 = v664;
  unint64_t v3155 = v660;
  unint64_t v284 = v663;
  unint64_t v3156 = v663;
  unint64_t v3157 = v658;
  unint64_t v3158 = v665;
  unint64_t v3159 = v278;
  unint64_t v3160 = v667;
  unint64_t v3161 = v657;
  unint64_t v3162 = v654;
  unint64_t v3163 = v653;
  unint64_t v3164 = v661;
  unint64_t v3165 = v656;
  unint64_t v3166 = v652;
  unint64_t v3167 = v650;
  unint64_t v3168 = v651;
  unint64_t v3169 = v648;
  unint64_t v3170 = v647;
  unint64_t v3171 = v649;
  unint64_t v285 = v646;
  unint64_t v3172 = v646;
  unint64_t v3173 = v640;
  unint64_t v3174 = v641;
  unint64_t v3175 = v645;
  unint64_t v3176 = v644;
  unint64_t v3177 = v643;
  unint64_t v3178 = v642;
  unint64_t v3179 = v279;
  unint64_t v3180 = v280;
  unint64_t v3181 = v281;
  unint64_t v3182 = v636;
  unint64_t v3183 = v634;
  unint64_t v3184 = v635;
  unint64_t v3185 = v632;
  unint64_t v3186 = v633;
  unint64_t v3187 = v631;
  unint64_t v3188 = v630;
  unint64_t v3189 = v629;
  unint64_t v3190 = v282;
  unint64_t v286 = v627;
  unint64_t v3191 = v627;
  unint64_t v287 = v626;
  unint64_t v3192 = v626;
  unint64_t v3193 = v283;
  unint64_t v288 = v623;
  sub_25192BAB0();
  v3109 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v3110 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v3111 = &type metadata for Attribute.AirQualityCase.Resolver;
  v3112 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v3113 = &type metadata for Attribute.BrightnessCase.Resolver;
  v3114 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v3115 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v3116 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v3117 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v3118 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v3119 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v3120 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v3121 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v3122 = &type metadata for Attribute.ColorCase.Resolver;
  v3123 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v3124 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v3125 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v3126 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v3127 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v3128 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v3129 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v3130 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v3131 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v3132 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v3133 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v3134 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v3135 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v3136 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v3137 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v3138 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v3139 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v3140 = &type metadata for Attribute.InUseCase.Resolver;
  v3141 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v3142 = &type metadata for Attribute.LightLevelCase.Resolver;
  v3143 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v3144 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v3145 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v3146 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v3147 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v3148 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v3149 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v3150 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v3151 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  unint64_t v289 = v655;
  unint64_t v3066 = v655;
  unint64_t v3067 = v666;
  unint64_t v3068 = v664;
  unint64_t v3069 = v660;
  unint64_t v3070 = v284;
  unint64_t v3071 = v658;
  unint64_t v3072 = v665;
  unint64_t v3073 = v662;
  unint64_t v3074 = v667;
  unint64_t v3075 = v657;
  unint64_t v3076 = v654;
  unint64_t v290 = v653;
  unint64_t v3077 = v653;
  unint64_t v3078 = v661;
  unint64_t v3079 = v656;
  unint64_t v291 = v652;
  unint64_t v3080 = v652;
  unint64_t v3081 = v650;
  unint64_t v3082 = v651;
  unint64_t v3083 = v648;
  unint64_t v3084 = v647;
  unint64_t v3085 = v649;
  unint64_t v3086 = v285;
  unint64_t v3087 = v640;
  unint64_t v3088 = v641;
  unint64_t v3089 = v645;
  unint64_t v3090 = v644;
  unint64_t v3091 = v643;
  unint64_t v3092 = v642;
  unint64_t v3093 = v639;
  unint64_t v3094 = v638;
  unint64_t v3095 = v637;
  unint64_t v3096 = v636;
  unint64_t v3097 = v634;
  unint64_t v3098 = v635;
  unint64_t v3099 = v632;
  unint64_t v3100 = v633;
  unint64_t v3101 = v631;
  unint64_t v3102 = v630;
  unint64_t v3103 = v629;
  unint64_t v3104 = v628;
  unint64_t v3105 = v286;
  unint64_t v3106 = v287;
  unint64_t v292 = v625;
  unint64_t v3107 = v625;
  unint64_t v3108 = v288;
  unint64_t v293 = v624;
  sub_25192BAB0();
  v3022 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v3023 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v3024 = &type metadata for Attribute.AirQualityCase.Resolver;
  v3025 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v3026 = &type metadata for Attribute.BrightnessCase.Resolver;
  v3027 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v3028 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v3029 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v3030 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v3031 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v3032 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v3033 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v3034 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v3035 = &type metadata for Attribute.ColorCase.Resolver;
  v3036 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v3037 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v3038 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v3039 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v3040 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v3041 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v3042 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v3043 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v3044 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v3045 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v3046 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v3047 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v3048 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v3049 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v3050 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v3051 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v3052 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v3053 = &type metadata for Attribute.InUseCase.Resolver;
  v3054 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v3055 = &type metadata for Attribute.LightLevelCase.Resolver;
  v3056 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v3057 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v3058 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v3059 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v3060 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v3061 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v3062 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v3063 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v3064 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v3065 = &type metadata for Attribute.PositionStateCase.Resolver;
  unint64_t v2978 = v289;
  unint64_t v2979 = v666;
  unint64_t v2980 = v664;
  unint64_t v2981 = v660;
  unint64_t v294 = v663;
  unint64_t v2982 = v663;
  unint64_t v2983 = v658;
  unint64_t v2984 = v665;
  unint64_t v2985 = v662;
  unint64_t v2986 = v667;
  unint64_t v2987 = v657;
  unint64_t v2988 = v654;
  unint64_t v2989 = v290;
  unint64_t v2990 = v661;
  unint64_t v2991 = v656;
  unint64_t v2992 = v291;
  unint64_t v2993 = v650;
  unint64_t v2994 = v651;
  unint64_t v2995 = v648;
  unint64_t v2996 = v647;
  unint64_t v2997 = v649;
  unint64_t v2998 = v285;
  unint64_t v295 = v640;
  unint64_t v2999 = v640;
  unint64_t v296 = v641;
  unint64_t v3000 = v641;
  unint64_t v3001 = v645;
  unint64_t v3002 = v644;
  unint64_t v3003 = v643;
  unint64_t v3004 = v642;
  unint64_t v3005 = v639;
  unint64_t v3006 = v638;
  unint64_t v3007 = v637;
  unint64_t v3008 = v636;
  unint64_t v297 = v634;
  unint64_t v3009 = v634;
  unint64_t v3010 = v635;
  unint64_t v3011 = v632;
  unint64_t v3012 = v633;
  unint64_t v3013 = v631;
  unint64_t v3014 = v630;
  unint64_t v3015 = v629;
  unint64_t v3016 = v628;
  unint64_t v3017 = v627;
  unint64_t v3018 = v626;
  unint64_t v3019 = v292;
  unint64_t v298 = v623;
  unint64_t v3020 = v623;
  unint64_t v3021 = v293;
  unint64_t v299 = v621;
  sub_25192BAB0();
  v2933 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v2934 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v2935 = &type metadata for Attribute.AirQualityCase.Resolver;
  v2936 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v2937 = &type metadata for Attribute.BrightnessCase.Resolver;
  v2938 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v2939 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v2940 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v2941 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v2942 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v2943 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v2944 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v2945 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v2946 = &type metadata for Attribute.ColorCase.Resolver;
  v2947 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v2948 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v2949 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v2950 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v2951 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v2952 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v2953 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v2954 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v2955 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v2956 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v2957 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v2958 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v2959 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v2960 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v2961 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v2962 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v2963 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v2964 = &type metadata for Attribute.InUseCase.Resolver;
  v2965 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v2966 = &type metadata for Attribute.LightLevelCase.Resolver;
  v2967 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v2968 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v2969 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v2970 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v2971 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v2972 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v2973 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v2974 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v2975 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v2976 = &type metadata for Attribute.PositionStateCase.Resolver;
  v2977 = &type metadata for Attribute.PowerCase.Resolver;
  unint64_t v2888 = v655;
  unint64_t v300 = v666;
  unint64_t v2889 = v666;
  unint64_t v2890 = v664;
  unint64_t v2891 = v660;
  unint64_t v2892 = v294;
  unint64_t v2893 = v658;
  unint64_t v2894 = v665;
  unint64_t v301 = v662;
  unint64_t v2895 = v662;
  unint64_t v2896 = v667;
  unint64_t v2897 = v657;
  unint64_t v2898 = v654;
  unint64_t v2899 = v653;
  unint64_t v2900 = v661;
  unint64_t v2901 = v656;
  unint64_t v2902 = v652;
  unint64_t v2903 = v650;
  unint64_t v2904 = v651;
  unint64_t v2905 = v648;
  unint64_t v2906 = v647;
  unint64_t v2907 = v649;
  unint64_t v2908 = v646;
  unint64_t v2909 = v295;
  unint64_t v2910 = v296;
  unint64_t v2911 = v645;
  unint64_t v2912 = v644;
  unint64_t v2913 = v643;
  unint64_t v2914 = v642;
  unint64_t v2915 = v639;
  unint64_t v2916 = v638;
  unint64_t v2917 = v637;
  unint64_t v302 = v636;
  unint64_t v2918 = v636;
  unint64_t v2919 = v297;
  unint64_t v2920 = v635;
  unint64_t v2921 = v632;
  unint64_t v2922 = v633;
  unint64_t v2923 = v631;
  unint64_t v2924 = v630;
  unint64_t v2925 = v629;
  unint64_t v2926 = v628;
  unint64_t v2927 = v627;
  unint64_t v2928 = v626;
  unint64_t v2929 = v625;
  unint64_t v2930 = v298;
  unint64_t v2931 = v624;
  unint64_t v2932 = v299;
  unint64_t v303 = v622;
  sub_25192BAB0();
  v2842 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v2843 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v2844 = &type metadata for Attribute.AirQualityCase.Resolver;
  v2845 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v2846 = &type metadata for Attribute.BrightnessCase.Resolver;
  v2847 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v2848 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v2849 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v2850 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v2851 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v2852 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v2853 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v2854 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v2855 = &type metadata for Attribute.ColorCase.Resolver;
  v2856 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v2857 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v2858 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v2859 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v2860 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v2861 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v2862 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v2863 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v2864 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v2865 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v2866 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v2867 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v2868 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v2869 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v2870 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v2871 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v2872 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v2873 = &type metadata for Attribute.InUseCase.Resolver;
  v2874 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v2875 = &type metadata for Attribute.LightLevelCase.Resolver;
  v2876 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v2877 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v2878 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v2879 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v2880 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v2881 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v2882 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v2883 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v2884 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v2885 = &type metadata for Attribute.PositionStateCase.Resolver;
  v2886 = &type metadata for Attribute.PowerCase.Resolver;
  v2887 = &type metadata for Attribute.RemainingDurationCase.Resolver;
  unint64_t v304 = v655;
  unint64_t v2796 = v655;
  unint64_t v2797 = v300;
  unint64_t v305 = v664;
  unint64_t v2798 = v664;
  unint64_t v2799 = v660;
  unint64_t v2800 = v663;
  unint64_t v2801 = v658;
  unint64_t v2802 = v665;
  unint64_t v2803 = v301;
  unint64_t v2804 = v667;
  unint64_t v2805 = v657;
  unint64_t v2806 = v654;
  unint64_t v2807 = v653;
  unint64_t v2808 = v661;
  unint64_t v2809 = v656;
  unint64_t v306 = v652;
  unint64_t v2810 = v652;
  unint64_t v2811 = v650;
  unint64_t v2812 = v651;
  unint64_t v2813 = v648;
  unint64_t v2814 = v647;
  unint64_t v2815 = v649;
  unint64_t v2816 = v646;
  unint64_t v2817 = v640;
  unint64_t v2818 = v296;
  unint64_t v2819 = v645;
  unint64_t v2820 = v644;
  unint64_t v2821 = v643;
  unint64_t v2822 = v642;
  unint64_t v2823 = v639;
  unint64_t v2824 = v638;
  unint64_t v2825 = v637;
  unint64_t v2826 = v302;
  unint64_t v2827 = v634;
  unint64_t v2828 = v635;
  unint64_t v2829 = v632;
  unint64_t v2830 = v633;
  unint64_t v2831 = v631;
  unint64_t v2832 = v630;
  unint64_t v2833 = v629;
  unint64_t v2834 = v628;
  unint64_t v2835 = v627;
  unint64_t v2836 = v626;
  unint64_t v2837 = v625;
  unint64_t v2838 = v623;
  unint64_t v2839 = v624;
  unint64_t v307 = v621;
  unint64_t v2840 = v621;
  unint64_t v2841 = v303;
  unint64_t v308 = v620;
  sub_25192BAB0();
  v2749 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v2750 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v2751 = &type metadata for Attribute.AirQualityCase.Resolver;
  v2752 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v2753 = &type metadata for Attribute.BrightnessCase.Resolver;
  v2754 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v2755 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v2756 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v2757 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v2758 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v2759 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v2760 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v2761 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v2762 = &type metadata for Attribute.ColorCase.Resolver;
  v2763 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v2764 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v2765 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v2766 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v2767 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v2768 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v2769 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v2770 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v2771 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v2772 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v2773 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v2774 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v2775 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v2776 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v2777 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v2778 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v2779 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v2780 = &type metadata for Attribute.InUseCase.Resolver;
  v2781 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v2782 = &type metadata for Attribute.LightLevelCase.Resolver;
  v2783 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v2784 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v2785 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v2786 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v2787 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v2788 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v2789 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v2790 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v2791 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v2792 = &type metadata for Attribute.PositionStateCase.Resolver;
  v2793 = &type metadata for Attribute.PowerCase.Resolver;
  v2794 = &type metadata for Attribute.RemainingDurationCase.Resolver;
  v2795 = &type metadata for Attribute.RotationDirectionCase.Resolver;
  unint64_t v2702 = v304;
  unint64_t v2703 = v666;
  unint64_t v2704 = v305;
  unint64_t v309 = v660;
  unint64_t v2705 = v660;
  unint64_t v2706 = v663;
  unint64_t v2707 = v658;
  unint64_t v2708 = v665;
  unint64_t v2709 = v662;
  unint64_t v2710 = v667;
  unint64_t v2711 = v657;
  unint64_t v2712 = v654;
  unint64_t v2713 = v653;
  unint64_t v2714 = v661;
  unint64_t v2715 = v656;
  unint64_t v2716 = v306;
  unint64_t v2717 = v650;
  unint64_t v2718 = v651;
  unint64_t v2719 = v648;
  unint64_t v2720 = v647;
  unint64_t v2721 = v649;
  unint64_t v310 = v646;
  unint64_t v2722 = v646;
  unint64_t v2723 = v640;
  unint64_t v2724 = v296;
  unint64_t v2725 = v645;
  unint64_t v2726 = v644;
  unint64_t v2727 = v643;
  unint64_t v2728 = v642;
  unint64_t v2729 = v639;
  unint64_t v2730 = v638;
  unint64_t v2731 = v637;
  unint64_t v311 = v636;
  unint64_t v2732 = v636;
  unint64_t v312 = v634;
  unint64_t v2733 = v634;
  unint64_t v2734 = v635;
  unint64_t v2735 = v632;
  unint64_t v2736 = v633;
  unint64_t v2737 = v631;
  unint64_t v2738 = v630;
  unint64_t v2739 = v629;
  unint64_t v2740 = v628;
  unint64_t v2741 = v627;
  unint64_t v2742 = v626;
  unint64_t v2743 = v625;
  unint64_t v2744 = v623;
  unint64_t v2745 = v624;
  unint64_t v2746 = v307;
  unint64_t v313 = v622;
  unint64_t v2747 = v622;
  unint64_t v2748 = v308;
  unint64_t v314 = v618;
  sub_25192BAB0();
  v2654 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v2655 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v2656 = &type metadata for Attribute.AirQualityCase.Resolver;
  v2657 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v2658 = &type metadata for Attribute.BrightnessCase.Resolver;
  v2659 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v2660 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v2661 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v2662 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v2663 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v2664 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v2665 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v2666 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v2667 = &type metadata for Attribute.ColorCase.Resolver;
  v2668 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v2669 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v2670 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v2671 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v2672 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v2673 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v2674 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v2675 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v2676 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v2677 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v2678 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v2679 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v2680 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v2681 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v2682 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v2683 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v2684 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v2685 = &type metadata for Attribute.InUseCase.Resolver;
  v2686 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v2687 = &type metadata for Attribute.LightLevelCase.Resolver;
  v2688 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v2689 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v2690 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v2691 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v2692 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v2693 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v2694 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v2695 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v2696 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v2697 = &type metadata for Attribute.PositionStateCase.Resolver;
  v2698 = &type metadata for Attribute.PowerCase.Resolver;
  v2699 = &type metadata for Attribute.RemainingDurationCase.Resolver;
  v2700 = &type metadata for Attribute.RotationDirectionCase.Resolver;
  v2701 = &type metadata for Attribute.RotationSpeedCase.Resolver;
  unint64_t v2606 = v655;
  unint64_t v2607 = v666;
  unint64_t v2608 = v664;
  unint64_t v2609 = v309;
  unint64_t v2610 = v663;
  unint64_t v2611 = v658;
  unint64_t v2612 = v665;
  unint64_t v2613 = v662;
  unint64_t v2614 = v667;
  unint64_t v2615 = v657;
  unint64_t v2616 = v654;
  unint64_t v315 = v653;
  unint64_t v2617 = v653;
  unint64_t v2618 = v661;
  unint64_t v2619 = v656;
  unint64_t v2620 = v652;
  unint64_t v2621 = v650;
  unint64_t v2622 = v651;
  unint64_t v2623 = v648;
  unint64_t v2624 = v647;
  unint64_t v2625 = v649;
  unint64_t v2626 = v310;
  unint64_t v2627 = v640;
  unint64_t v2628 = v641;
  unint64_t v2629 = v645;
  unint64_t v2630 = v644;
  unint64_t v2631 = v643;
  unint64_t v2632 = v642;
  unint64_t v2633 = v639;
  unint64_t v2634 = v638;
  unint64_t v2635 = v637;
  unint64_t v2636 = v311;
  unint64_t v2637 = v312;
  unint64_t v316 = v635;
  unint64_t v2638 = v635;
  unint64_t v317 = v632;
  unint64_t v2639 = v632;
  unint64_t v2640 = v633;
  unint64_t v2641 = v631;
  unint64_t v2642 = v630;
  unint64_t v2643 = v629;
  unint64_t v2644 = v628;
  unint64_t v2645 = v627;
  unint64_t v2646 = v626;
  unint64_t v2647 = v625;
  unint64_t v2648 = v623;
  unint64_t v2649 = v624;
  unint64_t v2650 = v621;
  unint64_t v2651 = v313;
  unint64_t v2652 = v620;
  unint64_t v2653 = v314;
  unint64_t v318 = v619;
  sub_25192BAB0();
  v2557 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v2558 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v2559 = &type metadata for Attribute.AirQualityCase.Resolver;
  v2560 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v2561 = &type metadata for Attribute.BrightnessCase.Resolver;
  v2562 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v2563 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v2564 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v2565 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v2566 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v2567 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v2568 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v2569 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v2570 = &type metadata for Attribute.ColorCase.Resolver;
  v2571 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v2572 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v2573 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v2574 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v2575 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v2576 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v2577 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v2578 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v2579 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v2580 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v2581 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v2582 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v2583 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v2584 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v2585 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v2586 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v2587 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v2588 = &type metadata for Attribute.InUseCase.Resolver;
  v2589 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v2590 = &type metadata for Attribute.LightLevelCase.Resolver;
  v2591 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v2592 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v2593 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v2594 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v2595 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v2596 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v2597 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v2598 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v2599 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v2600 = &type metadata for Attribute.PositionStateCase.Resolver;
  v2601 = &type metadata for Attribute.PowerCase.Resolver;
  v2602 = &type metadata for Attribute.RemainingDurationCase.Resolver;
  v2603 = &type metadata for Attribute.RotationDirectionCase.Resolver;
  v2604 = &type metadata for Attribute.RotationSpeedCase.Resolver;
  v2605 = &type metadata for Attribute.RvcCase.Resolver;
  unint64_t v2508 = v655;
  unint64_t v2509 = v666;
  unint64_t v2510 = v664;
  unint64_t v2511 = v660;
  unint64_t v2512 = v663;
  unint64_t v2513 = v658;
  unint64_t v2514 = v665;
  unint64_t v2515 = v662;
  unint64_t v2516 = v667;
  unint64_t v2517 = v657;
  unint64_t v2518 = v654;
  unint64_t v2519 = v315;
  unint64_t v2520 = v661;
  unint64_t v2521 = v656;
  unint64_t v2522 = v652;
  unint64_t v2523 = v650;
  unint64_t v2524 = v651;
  unint64_t v2525 = v648;
  unint64_t v2526 = v647;
  unint64_t v2527 = v649;
  unint64_t v2528 = v646;
  unint64_t v2529 = v640;
  unint64_t v2530 = v641;
  unint64_t v2531 = v645;
  unint64_t v2532 = v644;
  unint64_t v2533 = v643;
  unint64_t v2534 = v642;
  unint64_t v2535 = v639;
  unint64_t v2536 = v638;
  unint64_t v2537 = v637;
  unint64_t v2538 = v636;
  unint64_t v2539 = v312;
  unint64_t v2540 = v316;
  unint64_t v2541 = v317;
  unint64_t v319 = v633;
  unint64_t v2542 = v633;
  unint64_t v320 = v631;
  unint64_t v2543 = v631;
  unint64_t v2544 = v630;
  unint64_t v2545 = v629;
  unint64_t v2546 = v628;
  unint64_t v2547 = v627;
  unint64_t v2548 = v626;
  unint64_t v2549 = v625;
  unint64_t v2550 = v623;
  unint64_t v2551 = v624;
  unint64_t v2552 = v621;
  unint64_t v2553 = v622;
  unint64_t v2554 = v620;
  unint64_t v321 = v618;
  unint64_t v2555 = v618;
  unint64_t v2556 = v318;
  unint64_t v322 = v617;
  sub_25192BAB0();
  v2458 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v2459 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v2460 = &type metadata for Attribute.AirQualityCase.Resolver;
  v2461 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v2462 = &type metadata for Attribute.BrightnessCase.Resolver;
  v2463 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v2464 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v2465 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v2466 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v2467 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v2468 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v2469 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v2470 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v2471 = &type metadata for Attribute.ColorCase.Resolver;
  v2472 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v2473 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v2474 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v2475 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v2476 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v2477 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v2478 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v2479 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v2480 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v2481 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v2482 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v2483 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v2484 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v2485 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v2486 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v2487 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v2488 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v2489 = &type metadata for Attribute.InUseCase.Resolver;
  v2490 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v2491 = &type metadata for Attribute.LightLevelCase.Resolver;
  v2492 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v2493 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v2494 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v2495 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v2496 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v2497 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v2498 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v2499 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v2500 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v2501 = &type metadata for Attribute.PositionStateCase.Resolver;
  v2502 = &type metadata for Attribute.PowerCase.Resolver;
  v2503 = &type metadata for Attribute.RemainingDurationCase.Resolver;
  v2504 = &type metadata for Attribute.RotationDirectionCase.Resolver;
  v2505 = &type metadata for Attribute.RotationSpeedCase.Resolver;
  v2506 = &type metadata for Attribute.RvcCase.Resolver;
  v2507 = &type metadata for Attribute.SetDurationCase.Resolver;
  unint64_t v2408 = v655;
  unint64_t v323 = v666;
  unint64_t v2409 = v666;
  unint64_t v2410 = v664;
  unint64_t v2411 = v660;
  unint64_t v2412 = v663;
  unint64_t v324 = v658;
  unint64_t v2413 = v658;
  unint64_t v2414 = v665;
  unint64_t v2415 = v662;
  unint64_t v2416 = v667;
  unint64_t v2417 = v657;
  unint64_t v2418 = v654;
  unint64_t v2419 = v653;
  unint64_t v325 = v661;
  unint64_t v2420 = v661;
  unint64_t v2421 = v656;
  unint64_t v2422 = v652;
  unint64_t v2423 = v650;
  unint64_t v2424 = v651;
  unint64_t v2425 = v648;
  unint64_t v2426 = v647;
  unint64_t v2427 = v649;
  unint64_t v2428 = v646;
  unint64_t v2429 = v640;
  unint64_t v2430 = v641;
  unint64_t v2431 = v645;
  unint64_t v2432 = v644;
  unint64_t v2433 = v643;
  unint64_t v2434 = v642;
  unint64_t v2435 = v639;
  unint64_t v2436 = v638;
  unint64_t v2437 = v637;
  unint64_t v2438 = v636;
  unint64_t v2439 = v634;
  unint64_t v2440 = v635;
  unint64_t v2441 = v632;
  unint64_t v2442 = v319;
  unint64_t v2443 = v320;
  unint64_t v2444 = v630;
  unint64_t v2445 = v629;
  unint64_t v2446 = v628;
  unint64_t v2447 = v627;
  unint64_t v2448 = v626;
  unint64_t v2449 = v625;
  unint64_t v2450 = v623;
  unint64_t v2451 = v624;
  unint64_t v2452 = v621;
  unint64_t v2453 = v622;
  unint64_t v2454 = v620;
  unint64_t v2455 = v321;
  unint64_t v2456 = v619;
  unint64_t v2457 = v322;
  unint64_t v326 = v616;
  sub_25192BAB0();
  v2357 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v2358 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v2359 = &type metadata for Attribute.AirQualityCase.Resolver;
  v2360 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v2361 = &type metadata for Attribute.BrightnessCase.Resolver;
  v2362 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v2363 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v2364 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v2365 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v2366 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v2367 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v2368 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v2369 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v2370 = &type metadata for Attribute.ColorCase.Resolver;
  v2371 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v2372 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v2373 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v2374 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v2375 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v2376 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v2377 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v2378 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v2379 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v2380 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v2381 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v2382 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v2383 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v2384 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v2385 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v2386 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v2387 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v2388 = &type metadata for Attribute.InUseCase.Resolver;
  v2389 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v2390 = &type metadata for Attribute.LightLevelCase.Resolver;
  v2391 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v2392 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v2393 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v2394 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v2395 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v2396 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v2397 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v2398 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v2399 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v2400 = &type metadata for Attribute.PositionStateCase.Resolver;
  v2401 = &type metadata for Attribute.PowerCase.Resolver;
  v2402 = &type metadata for Attribute.RemainingDurationCase.Resolver;
  v2403 = &type metadata for Attribute.RotationDirectionCase.Resolver;
  v2404 = &type metadata for Attribute.RotationSpeedCase.Resolver;
  v2405 = &type metadata for Attribute.RvcCase.Resolver;
  v2406 = &type metadata for Attribute.SetDurationCase.Resolver;
  v2407 = &type metadata for Attribute.SmokeDetectedCase.Resolver;
  unint64_t v2306 = v655;
  unint64_t v2307 = v323;
  unint64_t v2308 = v664;
  unint64_t v2309 = v660;
  unint64_t v2310 = v663;
  unint64_t v2311 = v324;
  unint64_t v2312 = v665;
  unint64_t v2313 = v662;
  unint64_t v2314 = v667;
  unint64_t v2315 = v657;
  unint64_t v2316 = v654;
  unint64_t v2317 = v653;
  unint64_t v2318 = v325;
  unint64_t v2319 = v656;
  unint64_t v2320 = v652;
  unint64_t v2321 = v650;
  unint64_t v327 = v651;
  unint64_t v2322 = v651;
  unint64_t v2323 = v648;
  unint64_t v2324 = v647;
  unint64_t v2325 = v649;
  unint64_t v2326 = v646;
  unint64_t v2327 = v640;
  unint64_t v328 = v641;
  unint64_t v2328 = v641;
  unint64_t v329 = v645;
  unint64_t v2329 = v645;
  unint64_t v330 = v644;
  unint64_t v2330 = v644;
  unint64_t v331 = v643;
  unint64_t v2331 = v643;
  unint64_t v332 = v642;
  unint64_t v2332 = v642;
  unint64_t v2333 = v639;
  unint64_t v2334 = v638;
  unint64_t v2335 = v637;
  unint64_t v2336 = v636;
  unint64_t v2337 = v634;
  unint64_t v2338 = v635;
  unint64_t v2339 = v632;
  unint64_t v2340 = v633;
  unint64_t v2341 = v631;
  unint64_t v2342 = v630;
  unint64_t v2343 = v629;
  unint64_t v2344 = v628;
  unint64_t v2345 = v627;
  unint64_t v2346 = v626;
  unint64_t v2347 = v625;
  unint64_t v2348 = v623;
  unint64_t v2349 = v624;
  unint64_t v2350 = v621;
  unint64_t v2351 = v622;
  unint64_t v2352 = v620;
  unint64_t v2353 = v618;
  unint64_t v2354 = v619;
  unint64_t v2355 = v617;
  unint64_t v2356 = v326;
  unint64_t v333 = v615;
  sub_25192BAB0();
  v2254 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v2255 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v2256 = &type metadata for Attribute.AirQualityCase.Resolver;
  v2257 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v2258 = &type metadata for Attribute.BrightnessCase.Resolver;
  v2259 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v2260 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v2261 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v2262 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v2263 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v2264 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v2265 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v2266 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v2267 = &type metadata for Attribute.ColorCase.Resolver;
  v2268 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v2269 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v2270 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v2271 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v2272 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v2273 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v2274 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v2275 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v2276 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v2277 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v2278 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v2279 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v2280 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v2281 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v2282 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v2283 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v2284 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v2285 = &type metadata for Attribute.InUseCase.Resolver;
  v2286 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v2287 = &type metadata for Attribute.LightLevelCase.Resolver;
  v2288 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v2289 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v2290 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v2291 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v2292 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v2293 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v2294 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v2295 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v2296 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v2297 = &type metadata for Attribute.PositionStateCase.Resolver;
  v2298 = &type metadata for Attribute.PowerCase.Resolver;
  v2299 = &type metadata for Attribute.RemainingDurationCase.Resolver;
  v2300 = &type metadata for Attribute.RotationDirectionCase.Resolver;
  v2301 = &type metadata for Attribute.RotationSpeedCase.Resolver;
  v2302 = &type metadata for Attribute.RvcCase.Resolver;
  v2303 = &type metadata for Attribute.SetDurationCase.Resolver;
  v2304 = &type metadata for Attribute.SmokeDetectedCase.Resolver;
  v2305 = &type metadata for Attribute.SulphurDioxideDensityCase.Resolver;
  unint64_t v2202 = v655;
  unint64_t v2203 = v666;
  unint64_t v2204 = v664;
  unint64_t v2205 = v660;
  unint64_t v2206 = v663;
  unint64_t v2207 = v658;
  unint64_t v2208 = v665;
  unint64_t v2209 = v662;
  unint64_t v2210 = v667;
  unint64_t v2211 = v657;
  unint64_t v2212 = v654;
  unint64_t v2213 = v653;
  unint64_t v2214 = v661;
  unint64_t v2215 = v656;
  unint64_t v2216 = v652;
  unint64_t v2217 = v650;
  unint64_t v2218 = v327;
  unint64_t v334 = v648;
  unint64_t v2219 = v648;
  unint64_t v2220 = v647;
  unint64_t v2221 = v649;
  unint64_t v2222 = v646;
  unint64_t v2223 = v640;
  unint64_t v2224 = v328;
  unint64_t v2225 = v329;
  unint64_t v2226 = v330;
  unint64_t v2227 = v331;
  unint64_t v2228 = v332;
  unint64_t v2229 = v639;
  unint64_t v335 = v638;
  unint64_t v2230 = v638;
  unint64_t v2231 = v637;
  unint64_t v336 = v636;
  unint64_t v2232 = v636;
  unint64_t v2233 = v634;
  unint64_t v2234 = v635;
  unint64_t v2235 = v632;
  unint64_t v2236 = v633;
  unint64_t v2237 = v631;
  unint64_t v337 = v630;
  unint64_t v2238 = v630;
  unint64_t v2239 = v629;
  unint64_t v2240 = v628;
  unint64_t v2241 = v627;
  unint64_t v2242 = v626;
  unint64_t v2243 = v625;
  unint64_t v2244 = v623;
  unint64_t v2245 = v624;
  unint64_t v2246 = v621;
  unint64_t v2247 = v622;
  unint64_t v2248 = v620;
  unint64_t v2249 = v618;
  unint64_t v2250 = v619;
  unint64_t v2251 = v617;
  unint64_t v2252 = v616;
  unint64_t v2253 = v333;
  unint64_t v338 = v613;
  sub_25192BAB0();
  v2149 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v2150 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v2151 = &type metadata for Attribute.AirQualityCase.Resolver;
  v2152 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v2153 = &type metadata for Attribute.BrightnessCase.Resolver;
  v2154 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v2155 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v2156 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v2157 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v2158 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v2159 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v2160 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v2161 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v2162 = &type metadata for Attribute.ColorCase.Resolver;
  v2163 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v2164 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v2165 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v2166 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v2167 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v2168 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v2169 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v2170 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v2171 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v2172 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v2173 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v2174 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v2175 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v2176 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v2177 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v2178 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v2179 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v2180 = &type metadata for Attribute.InUseCase.Resolver;
  v2181 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v2182 = &type metadata for Attribute.LightLevelCase.Resolver;
  v2183 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v2184 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v2185 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v2186 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v2187 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v2188 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v2189 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v2190 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v2191 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v2192 = &type metadata for Attribute.PositionStateCase.Resolver;
  v2193 = &type metadata for Attribute.PowerCase.Resolver;
  v2194 = &type metadata for Attribute.RemainingDurationCase.Resolver;
  v2195 = &type metadata for Attribute.RotationDirectionCase.Resolver;
  v2196 = &type metadata for Attribute.RotationSpeedCase.Resolver;
  v2197 = &type metadata for Attribute.RvcCase.Resolver;
  v2198 = &type metadata for Attribute.SetDurationCase.Resolver;
  v2199 = &type metadata for Attribute.SmokeDetectedCase.Resolver;
  v2200 = &type metadata for Attribute.SulphurDioxideDensityCase.Resolver;
  v2201 = &type metadata for Attribute.SwingModeEnabledCase.Resolver;
  unint64_t v2096 = v655;
  unint64_t v2097 = v666;
  unint64_t v339 = v664;
  unint64_t v2098 = v664;
  unint64_t v2099 = v660;
  unint64_t v2100 = v663;
  unint64_t v2101 = v658;
  unint64_t v2102 = v665;
  unint64_t v2103 = v662;
  unint64_t v2104 = v667;
  unint64_t v2105 = v657;
  unint64_t v2106 = v654;
  unint64_t v2107 = v653;
  unint64_t v2108 = v661;
  unint64_t v2109 = v656;
  unint64_t v2110 = v652;
  unint64_t v2111 = v650;
  unint64_t v2112 = v651;
  unint64_t v2113 = v334;
  unint64_t v2114 = v647;
  unint64_t v2115 = v649;
  unint64_t v2116 = v646;
  unint64_t v2117 = v640;
  unint64_t v2118 = v641;
  unint64_t v2119 = v645;
  unint64_t v2120 = v644;
  unint64_t v2121 = v643;
  unint64_t v2122 = v642;
  unint64_t v2123 = v639;
  unint64_t v2124 = v335;
  unint64_t v2125 = v637;
  unint64_t v2126 = v336;
  unint64_t v2127 = v634;
  unint64_t v2128 = v635;
  unint64_t v2129 = v632;
  unint64_t v2130 = v633;
  unint64_t v2131 = v631;
  unint64_t v2132 = v337;
  unint64_t v340 = v629;
  unint64_t v2133 = v629;
  unint64_t v2134 = v628;
  unint64_t v2135 = v627;
  unint64_t v2136 = v626;
  unint64_t v2137 = v625;
  unint64_t v341 = v623;
  unint64_t v2138 = v623;
  unint64_t v2139 = v624;
  unint64_t v2140 = v621;
  unint64_t v342 = v622;
  unint64_t v2141 = v622;
  unint64_t v2142 = v620;
  unint64_t v2143 = v618;
  unint64_t v2144 = v619;
  unint64_t v2145 = v617;
  unint64_t v2146 = v616;
  unint64_t v2147 = v615;
  unint64_t v2148 = v338;
  unint64_t v343 = v614;
  sub_25192BAB0();
  v2042 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v2043 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v2044 = &type metadata for Attribute.AirQualityCase.Resolver;
  v2045 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v2046 = &type metadata for Attribute.BrightnessCase.Resolver;
  v2047 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v2048 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v2049 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v2050 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v2051 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v2052 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v2053 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v2054 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v2055 = &type metadata for Attribute.ColorCase.Resolver;
  v2056 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v2057 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v2058 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v2059 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v2060 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v2061 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v2062 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v2063 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v2064 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v2065 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v2066 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v2067 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v2068 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v2069 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v2070 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v2071 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v2072 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v2073 = &type metadata for Attribute.InUseCase.Resolver;
  v2074 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v2075 = &type metadata for Attribute.LightLevelCase.Resolver;
  v2076 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v2077 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v2078 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v2079 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v2080 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v2081 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v2082 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v2083 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v2084 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v2085 = &type metadata for Attribute.PositionStateCase.Resolver;
  v2086 = &type metadata for Attribute.PowerCase.Resolver;
  v2087 = &type metadata for Attribute.RemainingDurationCase.Resolver;
  v2088 = &type metadata for Attribute.RotationDirectionCase.Resolver;
  v2089 = &type metadata for Attribute.RotationSpeedCase.Resolver;
  v2090 = &type metadata for Attribute.RvcCase.Resolver;
  v2091 = &type metadata for Attribute.SetDurationCase.Resolver;
  v2092 = &type metadata for Attribute.SmokeDetectedCase.Resolver;
  v2093 = &type metadata for Attribute.SulphurDioxideDensityCase.Resolver;
  v2094 = &type metadata for Attribute.SwingModeEnabledCase.Resolver;
  v2095 = &type metadata for Attribute.TargetAirPurifierStateCase.Resolver;
  unint64_t v1988 = v655;
  unint64_t v1989 = v666;
  unint64_t v1990 = v339;
  unint64_t v344 = v660;
  unint64_t v1991 = v660;
  unint64_t v1992 = v663;
  unint64_t v1993 = v658;
  unint64_t v1994 = v665;
  unint64_t v1995 = v662;
  unint64_t v1996 = v667;
  unint64_t v345 = v657;
  unint64_t v1997 = v657;
  unint64_t v346 = v654;
  unint64_t v1998 = v654;
  unint64_t v1999 = v653;
  unint64_t v2000 = v661;
  unint64_t v2001 = v656;
  unint64_t v2002 = v652;
  unint64_t v2003 = v650;
  unint64_t v2004 = v651;
  unint64_t v2005 = v648;
  unint64_t v2006 = v647;
  unint64_t v2007 = v649;
  unint64_t v2008 = v646;
  unint64_t v2009 = v640;
  unint64_t v2010 = v641;
  unint64_t v2011 = v645;
  unint64_t v2012 = v644;
  unint64_t v2013 = v643;
  unint64_t v2014 = v642;
  unint64_t v2015 = v639;
  unint64_t v2016 = v638;
  unint64_t v2017 = v637;
  unint64_t v2018 = v636;
  unint64_t v2019 = v634;
  unint64_t v2020 = v635;
  unint64_t v2021 = v632;
  unint64_t v2022 = v633;
  unint64_t v2023 = v631;
  unint64_t v2024 = v630;
  unint64_t v2025 = v340;
  unint64_t v2026 = v628;
  unint64_t v2027 = v627;
  unint64_t v2028 = v626;
  unint64_t v2029 = v625;
  unint64_t v2030 = v341;
  unint64_t v2031 = v624;
  unint64_t v2032 = v621;
  unint64_t v2033 = v342;
  unint64_t v2034 = v620;
  unint64_t v2035 = v618;
  unint64_t v2036 = v619;
  unint64_t v2037 = v617;
  unint64_t v2038 = v616;
  unint64_t v2039 = v615;
  unint64_t v2040 = v613;
  unint64_t v2041 = v343;
  unint64_t v347 = v612;
  sub_25192BAB0();
  v1933 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v1934 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v1935 = &type metadata for Attribute.AirQualityCase.Resolver;
  v1936 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v1937 = &type metadata for Attribute.BrightnessCase.Resolver;
  v1938 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v1939 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v1940 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v1941 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v1942 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v1943 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v1944 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v1945 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v1946 = &type metadata for Attribute.ColorCase.Resolver;
  v1947 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v1948 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v1949 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v1950 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v1951 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v1952 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v1953 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v1954 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v1955 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v1956 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v1957 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v1958 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v1959 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v1960 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v1961 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v1962 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v1963 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v1964 = &type metadata for Attribute.InUseCase.Resolver;
  v1965 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v1966 = &type metadata for Attribute.LightLevelCase.Resolver;
  v1967 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v1968 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v1969 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v1970 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v1971 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v1972 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v1973 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v1974 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v1975 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v1976 = &type metadata for Attribute.PositionStateCase.Resolver;
  v1977 = &type metadata for Attribute.PowerCase.Resolver;
  v1978 = &type metadata for Attribute.RemainingDurationCase.Resolver;
  v1979 = &type metadata for Attribute.RotationDirectionCase.Resolver;
  v1980 = &type metadata for Attribute.RotationSpeedCase.Resolver;
  v1981 = &type metadata for Attribute.RvcCase.Resolver;
  v1982 = &type metadata for Attribute.SetDurationCase.Resolver;
  v1983 = &type metadata for Attribute.SmokeDetectedCase.Resolver;
  v1984 = &type metadata for Attribute.SulphurDioxideDensityCase.Resolver;
  v1985 = &type metadata for Attribute.SwingModeEnabledCase.Resolver;
  v1986 = &type metadata for Attribute.TargetAirPurifierStateCase.Resolver;
  v1987 = &type metadata for Attribute.TargetDoorStateCase.Resolver;
  unint64_t v1878 = v655;
  unint64_t v1879 = v666;
  unint64_t v1880 = v664;
  unint64_t v1881 = v344;
  unint64_t v1882 = v663;
  unint64_t v1883 = v658;
  unint64_t v1884 = v665;
  unint64_t v1885 = v662;
  unint64_t v348 = v667;
  unint64_t v1886 = v667;
  unint64_t v1887 = v345;
  unint64_t v1888 = v346;
  unint64_t v1889 = v653;
  unint64_t v1890 = v661;
  unint64_t v349 = v656;
  unint64_t v1891 = v656;
  unint64_t v1892 = v652;
  unint64_t v1893 = v650;
  unint64_t v1894 = v651;
  unint64_t v1895 = v648;
  unint64_t v350 = v647;
  unint64_t v1896 = v647;
  unint64_t v351 = v649;
  unint64_t v1897 = v649;
  unint64_t v1898 = v646;
  unint64_t v1899 = v640;
  unint64_t v1900 = v641;
  unint64_t v1901 = v645;
  unint64_t v1902 = v644;
  unint64_t v1903 = v643;
  unint64_t v1904 = v642;
  unint64_t v1905 = v639;
  unint64_t v1906 = v638;
  unint64_t v1907 = v637;
  unint64_t v1908 = v636;
  unint64_t v1909 = v634;
  unint64_t v1910 = v635;
  unint64_t v1911 = v632;
  unint64_t v1912 = v633;
  unint64_t v1913 = v631;
  unint64_t v1914 = v630;
  unint64_t v1915 = v629;
  unint64_t v1916 = v628;
  unint64_t v1917 = v627;
  unint64_t v1918 = v626;
  unint64_t v1919 = v625;
  unint64_t v1920 = v623;
  unint64_t v1921 = v624;
  unint64_t v1922 = v621;
  unint64_t v1923 = v622;
  unint64_t v1924 = v620;
  unint64_t v1925 = v618;
  unint64_t v1926 = v619;
  unint64_t v1927 = v617;
  unint64_t v1928 = v616;
  unint64_t v1929 = v615;
  unint64_t v1930 = v613;
  unint64_t v1931 = v614;
  unint64_t v1932 = v347;
  unint64_t v352 = v611;
  sub_25192BAB0();
  v1822 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v1823 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v1824 = &type metadata for Attribute.AirQualityCase.Resolver;
  v1825 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v1826 = &type metadata for Attribute.BrightnessCase.Resolver;
  v1827 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v1828 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v1829 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v1830 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v1831 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v1832 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v1833 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v1834 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v1835 = &type metadata for Attribute.ColorCase.Resolver;
  v1836 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v1837 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v1838 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v1839 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v1840 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v1841 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v1842 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v1843 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v1844 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v1845 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v1846 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v1847 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v1848 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v1849 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v1850 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v1851 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v1852 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v1853 = &type metadata for Attribute.InUseCase.Resolver;
  v1854 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v1855 = &type metadata for Attribute.LightLevelCase.Resolver;
  v1856 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v1857 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v1858 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v1859 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v1860 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v1861 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v1862 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v1863 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v1864 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v1865 = &type metadata for Attribute.PositionStateCase.Resolver;
  v1866 = &type metadata for Attribute.PowerCase.Resolver;
  v1867 = &type metadata for Attribute.RemainingDurationCase.Resolver;
  v1868 = &type metadata for Attribute.RotationDirectionCase.Resolver;
  v1869 = &type metadata for Attribute.RotationSpeedCase.Resolver;
  v1870 = &type metadata for Attribute.RvcCase.Resolver;
  v1871 = &type metadata for Attribute.SetDurationCase.Resolver;
  v1872 = &type metadata for Attribute.SmokeDetectedCase.Resolver;
  v1873 = &type metadata for Attribute.SulphurDioxideDensityCase.Resolver;
  v1874 = &type metadata for Attribute.SwingModeEnabledCase.Resolver;
  v1875 = &type metadata for Attribute.TargetAirPurifierStateCase.Resolver;
  v1876 = &type metadata for Attribute.TargetDoorStateCase.Resolver;
  v1877 = &type metadata for Attribute.TargetHorizontalTiltCase.Resolver;
  unint64_t v1766 = v655;
  unint64_t v1767 = v666;
  unint64_t v1768 = v664;
  unint64_t v1769 = v660;
  unint64_t v353 = v663;
  unint64_t v1770 = v663;
  unint64_t v1771 = v658;
  unint64_t v1772 = v665;
  unint64_t v1773 = v662;
  unint64_t v1774 = v348;
  unint64_t v1775 = v657;
  unint64_t v1776 = v654;
  unint64_t v1777 = v653;
  unint64_t v1778 = v661;
  unint64_t v1779 = v349;
  unint64_t v1780 = v652;
  unint64_t v1781 = v650;
  unint64_t v1782 = v651;
  unint64_t v1783 = v648;
  unint64_t v1784 = v350;
  unint64_t v1785 = v351;
  unint64_t v1786 = v646;
  unint64_t v354 = v640;
  unint64_t v1787 = v640;
  unint64_t v1788 = v641;
  unint64_t v1789 = v645;
  unint64_t v1790 = v644;
  unint64_t v1791 = v643;
  unint64_t v1792 = v642;
  unint64_t v355 = v639;
  unint64_t v1793 = v639;
  unint64_t v1794 = v638;
  unint64_t v356 = v637;
  unint64_t v1795 = v637;
  unint64_t v1796 = v636;
  unint64_t v1797 = v634;
  unint64_t v1798 = v635;
  unint64_t v1799 = v632;
  unint64_t v1800 = v633;
  unint64_t v1801 = v631;
  unint64_t v1802 = v630;
  unint64_t v1803 = v629;
  unint64_t v357 = v628;
  unint64_t v1804 = v628;
  unint64_t v358 = v627;
  unint64_t v1805 = v627;
  unint64_t v1806 = v626;
  unint64_t v1807 = v625;
  unint64_t v1808 = v623;
  unint64_t v1809 = v624;
  unint64_t v1810 = v621;
  unint64_t v1811 = v622;
  unint64_t v1812 = v620;
  unint64_t v1813 = v618;
  unint64_t v1814 = v619;
  unint64_t v1815 = v617;
  unint64_t v1816 = v616;
  unint64_t v1817 = v615;
  unint64_t v1818 = v613;
  unint64_t v1819 = v614;
  unint64_t v1820 = v612;
  unint64_t v1821 = v352;
  unint64_t v359 = v610;
  sub_25192BAB0();
  v1709 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v1710 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v1711 = &type metadata for Attribute.AirQualityCase.Resolver;
  v1712 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v1713 = &type metadata for Attribute.BrightnessCase.Resolver;
  v1714 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v1715 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v1716 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v1717 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v1718 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v1719 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v1720 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v1721 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v1722 = &type metadata for Attribute.ColorCase.Resolver;
  v1723 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v1724 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v1725 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v1726 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v1727 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v1728 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v1729 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v1730 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v1731 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v1732 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v1733 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v1734 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v1735 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v1736 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v1737 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v1738 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v1739 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v1740 = &type metadata for Attribute.InUseCase.Resolver;
  v1741 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v1742 = &type metadata for Attribute.LightLevelCase.Resolver;
  v1743 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v1744 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v1745 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v1746 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v1747 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v1748 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v1749 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v1750 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v1751 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v1752 = &type metadata for Attribute.PositionStateCase.Resolver;
  v1753 = &type metadata for Attribute.PowerCase.Resolver;
  v1754 = &type metadata for Attribute.RemainingDurationCase.Resolver;
  v1755 = &type metadata for Attribute.RotationDirectionCase.Resolver;
  v1756 = &type metadata for Attribute.RotationSpeedCase.Resolver;
  v1757 = &type metadata for Attribute.RvcCase.Resolver;
  v1758 = &type metadata for Attribute.SetDurationCase.Resolver;
  v1759 = &type metadata for Attribute.SmokeDetectedCase.Resolver;
  v1760 = &type metadata for Attribute.SulphurDioxideDensityCase.Resolver;
  v1761 = &type metadata for Attribute.SwingModeEnabledCase.Resolver;
  v1762 = &type metadata for Attribute.TargetAirPurifierStateCase.Resolver;
  v1763 = &type metadata for Attribute.TargetDoorStateCase.Resolver;
  v1764 = &type metadata for Attribute.TargetHorizontalTiltCase.Resolver;
  v1765 = &type metadata for Attribute.TargetHumidityCase.Resolver;
  unint64_t v1652 = v655;
  unint64_t v1653 = v666;
  unint64_t v1654 = v664;
  unint64_t v1655 = v660;
  unint64_t v1656 = v353;
  unint64_t v1657 = v658;
  unint64_t v360 = v665;
  unint64_t v1658 = v665;
  unint64_t v1659 = v662;
  unint64_t v1660 = v667;
  unint64_t v1661 = v657;
  unint64_t v1662 = v654;
  unint64_t v1663 = v653;
  unint64_t v1664 = v661;
  unint64_t v1665 = v656;
  unint64_t v1666 = v652;
  unint64_t v1667 = v650;
  unint64_t v1668 = v651;
  unint64_t v1669 = v648;
  unint64_t v1670 = v647;
  unint64_t v1671 = v649;
  unint64_t v1672 = v646;
  unint64_t v1673 = v354;
  unint64_t v1674 = v641;
  unint64_t v1675 = v645;
  unint64_t v1676 = v644;
  unint64_t v1677 = v643;
  unint64_t v1678 = v642;
  unint64_t v1679 = v355;
  unint64_t v1680 = v638;
  unint64_t v1681 = v356;
  unint64_t v1682 = v636;
  unint64_t v1683 = v634;
  unint64_t v1684 = v635;
  unint64_t v1685 = v632;
  unint64_t v1686 = v633;
  unint64_t v1687 = v631;
  unint64_t v1688 = v630;
  unint64_t v1689 = v629;
  unint64_t v1690 = v357;
  unint64_t v1691 = v358;
  unint64_t v361 = v626;
  unint64_t v1692 = v626;
  unint64_t v1693 = v625;
  unint64_t v1694 = v623;
  unint64_t v362 = v624;
  unint64_t v1695 = v624;
  unint64_t v363 = v621;
  unint64_t v1696 = v621;
  unint64_t v1697 = v622;
  unint64_t v364 = v620;
  unint64_t v1698 = v620;
  unint64_t v1699 = v618;
  unint64_t v365 = v619;
  unint64_t v1700 = v619;
  unint64_t v1701 = v617;
  unint64_t v1702 = v616;
  unint64_t v1703 = v615;
  unint64_t v1704 = v613;
  unint64_t v1705 = v614;
  unint64_t v1706 = v612;
  unint64_t v1707 = v611;
  unint64_t v1708 = v359;
  unint64_t v366 = v609;
  sub_25192BAB0();
  v1594 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v1595 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v1596 = &type metadata for Attribute.AirQualityCase.Resolver;
  v1597 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v1598 = &type metadata for Attribute.BrightnessCase.Resolver;
  v1599 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v1600 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v1601 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v1602 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v1603 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v1604 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v1605 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v1606 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v1607 = &type metadata for Attribute.ColorCase.Resolver;
  v1608 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v1609 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v1610 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v1611 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v1612 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v1613 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v1614 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v1615 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v1616 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v1617 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v1618 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v1619 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v1620 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v1621 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v1622 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v1623 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v1624 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v1625 = &type metadata for Attribute.InUseCase.Resolver;
  v1626 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v1627 = &type metadata for Attribute.LightLevelCase.Resolver;
  v1628 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v1629 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v1630 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v1631 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v1632 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v1633 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v1634 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v1635 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v1636 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v1637 = &type metadata for Attribute.PositionStateCase.Resolver;
  v1638 = &type metadata for Attribute.PowerCase.Resolver;
  v1639 = &type metadata for Attribute.RemainingDurationCase.Resolver;
  v1640 = &type metadata for Attribute.RotationDirectionCase.Resolver;
  v1641 = &type metadata for Attribute.RotationSpeedCase.Resolver;
  v1642 = &type metadata for Attribute.RvcCase.Resolver;
  v1643 = &type metadata for Attribute.SetDurationCase.Resolver;
  v1644 = &type metadata for Attribute.SmokeDetectedCase.Resolver;
  v1645 = &type metadata for Attribute.SulphurDioxideDensityCase.Resolver;
  v1646 = &type metadata for Attribute.SwingModeEnabledCase.Resolver;
  v1647 = &type metadata for Attribute.TargetAirPurifierStateCase.Resolver;
  v1648 = &type metadata for Attribute.TargetDoorStateCase.Resolver;
  v1649 = &type metadata for Attribute.TargetHorizontalTiltCase.Resolver;
  v1650 = &type metadata for Attribute.TargetHumidityCase.Resolver;
  v1651 = &type metadata for Attribute.TargetLockStateCase.Resolver;
  unint64_t v367 = v655;
  unint64_t v1536 = v655;
  unint64_t v1537 = v666;
  unint64_t v1538 = v664;
  unint64_t v1539 = v660;
  unint64_t v1540 = v663;
  unint64_t v1541 = v658;
  unint64_t v1542 = v360;
  unint64_t v1543 = v662;
  unint64_t v1544 = v667;
  unint64_t v1545 = v657;
  unint64_t v1546 = v654;
  unint64_t v1547 = v653;
  unint64_t v1548 = v661;
  unint64_t v1549 = v656;
  unint64_t v1550 = v652;
  unint64_t v1551 = v650;
  unint64_t v1552 = v651;
  unint64_t v1553 = v648;
  unint64_t v1554 = v647;
  unint64_t v1555 = v649;
  unint64_t v1556 = v646;
  unint64_t v1557 = v640;
  unint64_t v1558 = v641;
  unint64_t v1559 = v645;
  unint64_t v1560 = v644;
  unint64_t v1561 = v643;
  unint64_t v1562 = v642;
  unint64_t v1563 = v639;
  unint64_t v1564 = v638;
  unint64_t v1565 = v637;
  unint64_t v1566 = v636;
  unint64_t v1567 = v634;
  unint64_t v368 = v635;
  unint64_t v1568 = v635;
  unint64_t v1569 = v632;
  unint64_t v1570 = v633;
  unint64_t v1571 = v631;
  unint64_t v1572 = v630;
  unint64_t v1573 = v629;
  unint64_t v1574 = v628;
  unint64_t v1575 = v627;
  unint64_t v1576 = v361;
  unint64_t v1577 = v625;
  unint64_t v1578 = v623;
  unint64_t v1579 = v362;
  unint64_t v1580 = v363;
  unint64_t v1581 = v622;
  unint64_t v1582 = v364;
  unint64_t v1583 = v618;
  unint64_t v1584 = v365;
  unint64_t v369 = v617;
  unint64_t v1585 = v617;
  unint64_t v1586 = v616;
  unint64_t v1587 = v615;
  unint64_t v1588 = v613;
  unint64_t v1589 = v614;
  unint64_t v1590 = v612;
  unint64_t v1591 = v611;
  unint64_t v1592 = v610;
  unint64_t v1593 = v366;
  unint64_t v370 = v608;
  sub_25192BAB0();
  v1477 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v1478 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v1479 = &type metadata for Attribute.AirQualityCase.Resolver;
  v1480 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v1481 = &type metadata for Attribute.BrightnessCase.Resolver;
  v1482 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v1483 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v1484 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v1485 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v1486 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v1487 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v1488 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v1489 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v1490 = &type metadata for Attribute.ColorCase.Resolver;
  v1491 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v1492 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v1493 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v1494 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v1495 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v1496 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v1497 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v1498 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v1499 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v1500 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v1501 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v1502 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v1503 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v1504 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v1505 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v1506 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v1507 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v1508 = &type metadata for Attribute.InUseCase.Resolver;
  v1509 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v1510 = &type metadata for Attribute.LightLevelCase.Resolver;
  v1511 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v1512 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v1513 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v1514 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v1515 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v1516 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v1517 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v1518 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v1519 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v1520 = &type metadata for Attribute.PositionStateCase.Resolver;
  v1521 = &type metadata for Attribute.PowerCase.Resolver;
  v1522 = &type metadata for Attribute.RemainingDurationCase.Resolver;
  v1523 = &type metadata for Attribute.RotationDirectionCase.Resolver;
  v1524 = &type metadata for Attribute.RotationSpeedCase.Resolver;
  v1525 = &type metadata for Attribute.RvcCase.Resolver;
  v1526 = &type metadata for Attribute.SetDurationCase.Resolver;
  v1527 = &type metadata for Attribute.SmokeDetectedCase.Resolver;
  v1528 = &type metadata for Attribute.SulphurDioxideDensityCase.Resolver;
  v1529 = &type metadata for Attribute.SwingModeEnabledCase.Resolver;
  v1530 = &type metadata for Attribute.TargetAirPurifierStateCase.Resolver;
  v1531 = &type metadata for Attribute.TargetDoorStateCase.Resolver;
  v1532 = &type metadata for Attribute.TargetHorizontalTiltCase.Resolver;
  v1533 = &type metadata for Attribute.TargetHumidityCase.Resolver;
  v1534 = &type metadata for Attribute.TargetLockStateCase.Resolver;
  v1535 = &type metadata for Attribute.TargetPositionCase.Resolver;
  unint64_t v1418 = v367;
  unint64_t v1419 = v666;
  unint64_t v1420 = v664;
  unint64_t v1421 = v660;
  unint64_t v1422 = v663;
  unint64_t v1423 = v658;
  unint64_t v371 = v665;
  unint64_t v1424 = v665;
  unint64_t v1425 = v662;
  unint64_t v372 = v667;
  unint64_t v1426 = v667;
  unint64_t v1427 = v657;
  unint64_t v1428 = v654;
  unint64_t v1429 = v653;
  unint64_t v1430 = v661;
  unint64_t v1431 = v656;
  unint64_t v1432 = v652;
  unint64_t v373 = v650;
  unint64_t v1433 = v650;
  unint64_t v1434 = v651;
  unint64_t v1435 = v648;
  unint64_t v1436 = v647;
  unint64_t v1437 = v649;
  unint64_t v1438 = v646;
  unint64_t v1439 = v640;
  unint64_t v1440 = v641;
  unint64_t v1441 = v645;
  unint64_t v1442 = v644;
  unint64_t v1443 = v643;
  unint64_t v1444 = v642;
  unint64_t v1445 = v639;
  unint64_t v1446 = v638;
  unint64_t v1447 = v637;
  unint64_t v1448 = v636;
  unint64_t v1449 = v634;
  unint64_t v1450 = v368;
  unint64_t v374 = v632;
  unint64_t v1451 = v632;
  unint64_t v1452 = v633;
  unint64_t v1453 = v631;
  unint64_t v1454 = v630;
  unint64_t v1455 = v629;
  unint64_t v1456 = v628;
  unint64_t v1457 = v627;
  unint64_t v1458 = v626;
  unint64_t v1459 = v625;
  unint64_t v1460 = v623;
  unint64_t v1461 = v624;
  unint64_t v1462 = v621;
  unint64_t v1463 = v622;
  unint64_t v1464 = v620;
  unint64_t v1465 = v618;
  unint64_t v1466 = v619;
  unint64_t v1467 = v369;
  unint64_t v1468 = v616;
  unint64_t v1469 = v615;
  unint64_t v1470 = v613;
  unint64_t v1471 = v614;
  unint64_t v1472 = v612;
  unint64_t v1473 = v611;
  unint64_t v1474 = v610;
  unint64_t v1475 = v609;
  unint64_t v1476 = v370;
  unint64_t v375 = v607;
  sub_25192BAB0();
  v1358 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v1359 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v1360 = &type metadata for Attribute.AirQualityCase.Resolver;
  v1361 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v1362 = &type metadata for Attribute.BrightnessCase.Resolver;
  v1363 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v1364 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v1365 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v1366 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v1367 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v1368 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v1369 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v1370 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v1371 = &type metadata for Attribute.ColorCase.Resolver;
  v1372 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v1373 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v1374 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v1375 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v1376 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v1377 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v1378 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v1379 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v1380 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v1381 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v1382 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v1383 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v1384 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v1385 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v1386 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v1387 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v1388 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v1389 = &type metadata for Attribute.InUseCase.Resolver;
  v1390 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v1391 = &type metadata for Attribute.LightLevelCase.Resolver;
  v1392 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v1393 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v1394 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v1395 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v1396 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v1397 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v1398 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v1399 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v1400 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v1401 = &type metadata for Attribute.PositionStateCase.Resolver;
  v1402 = &type metadata for Attribute.PowerCase.Resolver;
  v1403 = &type metadata for Attribute.RemainingDurationCase.Resolver;
  v1404 = &type metadata for Attribute.RotationDirectionCase.Resolver;
  v1405 = &type metadata for Attribute.RotationSpeedCase.Resolver;
  v1406 = &type metadata for Attribute.RvcCase.Resolver;
  v1407 = &type metadata for Attribute.SetDurationCase.Resolver;
  v1408 = &type metadata for Attribute.SmokeDetectedCase.Resolver;
  v1409 = &type metadata for Attribute.SulphurDioxideDensityCase.Resolver;
  v1410 = &type metadata for Attribute.SwingModeEnabledCase.Resolver;
  v1411 = &type metadata for Attribute.TargetAirPurifierStateCase.Resolver;
  v1412 = &type metadata for Attribute.TargetDoorStateCase.Resolver;
  v1413 = &type metadata for Attribute.TargetHorizontalTiltCase.Resolver;
  v1414 = &type metadata for Attribute.TargetHumidityCase.Resolver;
  v1415 = &type metadata for Attribute.TargetLockStateCase.Resolver;
  v1416 = &type metadata for Attribute.TargetPositionCase.Resolver;
  v1417 = &type metadata for Attribute.TargetSecuritySystemStateCase.Resolver;
  unint64_t v1298 = v655;
  unint64_t v1299 = v666;
  unint64_t v1300 = v664;
  unint64_t v1301 = v660;
  unint64_t v1302 = v663;
  unint64_t v1303 = v658;
  unint64_t v1304 = v371;
  unint64_t v1305 = v662;
  unint64_t v1306 = v372;
  unint64_t v1307 = v657;
  unint64_t v1308 = v654;
  unint64_t v1309 = v653;
  unint64_t v1310 = v661;
  unint64_t v1311 = v656;
  unint64_t v1312 = v652;
  unint64_t v1313 = v373;
  unint64_t v1314 = v651;
  unint64_t v1315 = v648;
  unint64_t v1316 = v647;
  unint64_t v1317 = v649;
  unint64_t v376 = v646;
  unint64_t v1318 = v646;
  unint64_t v1319 = v640;
  unint64_t v1320 = v641;
  unint64_t v1321 = v645;
  unint64_t v1322 = v644;
  unint64_t v1323 = v643;
  unint64_t v1324 = v642;
  unint64_t v1325 = v639;
  unint64_t v377 = v638;
  unint64_t v1326 = v638;
  unint64_t v378 = v637;
  unint64_t v1327 = v637;
  unint64_t v1328 = v636;
  unint64_t v1329 = v634;
  unint64_t v1330 = v635;
  unint64_t v1331 = v374;
  unint64_t v379 = v633;
  unint64_t v1332 = v633;
  unint64_t v1333 = v631;
  unint64_t v1334 = v630;
  unint64_t v1335 = v629;
  unint64_t v1336 = v628;
  unint64_t v1337 = v627;
  unint64_t v1338 = v626;
  unint64_t v380 = v625;
  unint64_t v1339 = v625;
  unint64_t v1340 = v623;
  unint64_t v1341 = v624;
  unint64_t v1342 = v621;
  unint64_t v1343 = v622;
  unint64_t v1344 = v620;
  unint64_t v1345 = v618;
  unint64_t v1346 = v619;
  unint64_t v1347 = v617;
  unint64_t v1348 = v616;
  unint64_t v1349 = v615;
  unint64_t v1350 = v613;
  unint64_t v1351 = v614;
  unint64_t v1352 = v612;
  unint64_t v1353 = v611;
  unint64_t v1354 = v610;
  unint64_t v1355 = v609;
  unint64_t v1356 = v608;
  unint64_t v1357 = v375;
  unint64_t v381 = v606;
  sub_25192BAB0();
  v1237 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v1238 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v1239 = &type metadata for Attribute.AirQualityCase.Resolver;
  v1240 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v1241 = &type metadata for Attribute.BrightnessCase.Resolver;
  v1242 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v1243 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v1244 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v1245 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v1246 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v1247 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v1248 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v1249 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v1250 = &type metadata for Attribute.ColorCase.Resolver;
  v1251 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v1252 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v1253 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v1254 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v1255 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v1256 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v1257 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v1258 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v1259 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v1260 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v1261 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v1262 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v1263 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v1264 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v1265 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v1266 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v1267 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v1268 = &type metadata for Attribute.InUseCase.Resolver;
  v1269 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v1270 = &type metadata for Attribute.LightLevelCase.Resolver;
  v1271 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v1272 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v1273 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v1274 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v1275 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v1276 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v1277 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v1278 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v1279 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v1280 = &type metadata for Attribute.PositionStateCase.Resolver;
  v1281 = &type metadata for Attribute.PowerCase.Resolver;
  v1282 = &type metadata for Attribute.RemainingDurationCase.Resolver;
  v1283 = &type metadata for Attribute.RotationDirectionCase.Resolver;
  v1284 = &type metadata for Attribute.RotationSpeedCase.Resolver;
  v1285 = &type metadata for Attribute.RvcCase.Resolver;
  v1286 = &type metadata for Attribute.SetDurationCase.Resolver;
  v1287 = &type metadata for Attribute.SmokeDetectedCase.Resolver;
  v1288 = &type metadata for Attribute.SulphurDioxideDensityCase.Resolver;
  v1289 = &type metadata for Attribute.SwingModeEnabledCase.Resolver;
  v1290 = &type metadata for Attribute.TargetAirPurifierStateCase.Resolver;
  v1291 = &type metadata for Attribute.TargetDoorStateCase.Resolver;
  v1292 = &type metadata for Attribute.TargetHorizontalTiltCase.Resolver;
  v1293 = &type metadata for Attribute.TargetHumidityCase.Resolver;
  v1294 = &type metadata for Attribute.TargetLockStateCase.Resolver;
  v1295 = &type metadata for Attribute.TargetPositionCase.Resolver;
  v1296 = &type metadata for Attribute.TargetSecuritySystemStateCase.Resolver;
  v1297 = &type metadata for Attribute.TargetVerticalTiltCase.Resolver;
  unint64_t v1176 = v655;
  unint64_t v1177 = v666;
  unint64_t v1178 = v664;
  unint64_t v1179 = v660;
  unint64_t v1180 = v663;
  unint64_t v1181 = v658;
  unint64_t v1182 = v665;
  unint64_t v382 = v662;
  unint64_t v1183 = v662;
  unint64_t v1184 = v667;
  unint64_t v1185 = v657;
  unint64_t v1186 = v654;
  unint64_t v1187 = v653;
  unint64_t v1188 = v661;
  unint64_t v1189 = v656;
  unint64_t v1190 = v652;
  unint64_t v1191 = v650;
  unint64_t v1192 = v651;
  unint64_t v1193 = v648;
  unint64_t v1194 = v647;
  unint64_t v1195 = v649;
  unint64_t v1196 = v376;
  unint64_t v1197 = v640;
  unint64_t v1198 = v641;
  unint64_t v1199 = v645;
  unint64_t v1200 = v644;
  unint64_t v1201 = v643;
  unint64_t v1202 = v642;
  unint64_t v1203 = v639;
  unint64_t v1204 = v377;
  unint64_t v1205 = v378;
  unint64_t v1206 = v636;
  unint64_t v1207 = v634;
  unint64_t v1208 = v635;
  unint64_t v1209 = v632;
  unint64_t v1210 = v379;
  unint64_t v1211 = v631;
  unint64_t v1212 = v630;
  unint64_t v1213 = v629;
  unint64_t v1214 = v628;
  unint64_t v1215 = v627;
  unint64_t v1216 = v626;
  unint64_t v1217 = v380;
  unint64_t v383 = v623;
  unint64_t v1218 = v623;
  unint64_t v384 = v624;
  unint64_t v1219 = v624;
  unint64_t v1220 = v621;
  unint64_t v1221 = v622;
  unint64_t v1222 = v620;
  unint64_t v1223 = v618;
  unint64_t v1224 = v619;
  unint64_t v1225 = v617;
  unint64_t v1226 = v616;
  unint64_t v1227 = v615;
  unint64_t v1228 = v613;
  unint64_t v1229 = v614;
  unint64_t v1230 = v612;
  unint64_t v1231 = v611;
  unint64_t v1232 = v610;
  unint64_t v1233 = v609;
  unint64_t v1234 = v608;
  unint64_t v1235 = v607;
  unint64_t v1236 = v381;
  unint64_t v385 = v605;
  sub_25192BAB0();
  v1114 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v1115 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v1116 = &type metadata for Attribute.AirQualityCase.Resolver;
  v1117 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v1118 = &type metadata for Attribute.BrightnessCase.Resolver;
  v1119 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v1120 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v1121 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v1122 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v1123 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v1124 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v1125 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v1126 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v1127 = &type metadata for Attribute.ColorCase.Resolver;
  v1128 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v1129 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v1130 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v1131 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v1132 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v1133 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v1134 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v1135 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v1136 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v1137 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v1138 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v1139 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v1140 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v1141 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v1142 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v1143 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v1144 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v1145 = &type metadata for Attribute.InUseCase.Resolver;
  v1146 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v1147 = &type metadata for Attribute.LightLevelCase.Resolver;
  v1148 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v1149 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v1150 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v1151 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v1152 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v1153 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v1154 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v1155 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v1156 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v1157 = &type metadata for Attribute.PositionStateCase.Resolver;
  v1158 = &type metadata for Attribute.PowerCase.Resolver;
  v1159 = &type metadata for Attribute.RemainingDurationCase.Resolver;
  v1160 = &type metadata for Attribute.RotationDirectionCase.Resolver;
  v1161 = &type metadata for Attribute.RotationSpeedCase.Resolver;
  v1162 = &type metadata for Attribute.RvcCase.Resolver;
  v1163 = &type metadata for Attribute.SetDurationCase.Resolver;
  v1164 = &type metadata for Attribute.SmokeDetectedCase.Resolver;
  v1165 = &type metadata for Attribute.SulphurDioxideDensityCase.Resolver;
  v1166 = &type metadata for Attribute.SwingModeEnabledCase.Resolver;
  v1167 = &type metadata for Attribute.TargetAirPurifierStateCase.Resolver;
  v1168 = &type metadata for Attribute.TargetDoorStateCase.Resolver;
  v1169 = &type metadata for Attribute.TargetHorizontalTiltCase.Resolver;
  v1170 = &type metadata for Attribute.TargetHumidityCase.Resolver;
  v1171 = &type metadata for Attribute.TargetLockStateCase.Resolver;
  v1172 = &type metadata for Attribute.TargetPositionCase.Resolver;
  v1173 = &type metadata for Attribute.TargetSecuritySystemStateCase.Resolver;
  v1174 = &type metadata for Attribute.TargetVerticalTiltCase.Resolver;
  v1175 = &type metadata for Attribute.ThermostatModeCase.Resolver;
  unint64_t v1052 = v655;
  unint64_t v1053 = v666;
  unint64_t v1054 = v664;
  unint64_t v1055 = v660;
  unint64_t v386 = v663;
  unint64_t v1056 = v663;
  unint64_t v1057 = v658;
  unint64_t v1058 = v665;
  unint64_t v1059 = v382;
  unint64_t v1060 = v667;
  unint64_t v1061 = v657;
  unint64_t v1062 = v654;
  unint64_t v387 = v653;
  unint64_t v1063 = v653;
  unint64_t v1064 = v661;
  unint64_t v1065 = v656;
  unint64_t v388 = v652;
  unint64_t v1066 = v652;
  unint64_t v1067 = v650;
  unint64_t v1068 = v651;
  unint64_t v1069 = v648;
  unint64_t v1070 = v647;
  unint64_t v1071 = v649;
  unint64_t v1072 = v646;
  unint64_t v389 = v640;
  unint64_t v1073 = v640;
  unint64_t v1074 = v641;
  unint64_t v1075 = v645;
  unint64_t v1076 = v644;
  unint64_t v1077 = v643;
  unint64_t v1078 = v642;
  unint64_t v1079 = v639;
  unint64_t v1080 = v638;
  unint64_t v1081 = v637;
  unint64_t v1082 = v636;
  unint64_t v1083 = v634;
  unint64_t v1084 = v635;
  unint64_t v1085 = v632;
  unint64_t v1086 = v633;
  unint64_t v1087 = v631;
  unint64_t v1088 = v630;
  unint64_t v1089 = v629;
  unint64_t v1090 = v628;
  unint64_t v1091 = v627;
  unint64_t v1092 = v626;
  unint64_t v1093 = v625;
  unint64_t v1094 = v383;
  unint64_t v1095 = v384;
  unint64_t v1096 = v621;
  unint64_t v1097 = v622;
  unint64_t v1098 = v620;
  unint64_t v1099 = v618;
  unint64_t v1100 = v619;
  unint64_t v1101 = v617;
  unint64_t v1102 = v616;
  unint64_t v1103 = v615;
  unint64_t v1104 = v613;
  unint64_t v1105 = v614;
  unint64_t v1106 = v612;
  unint64_t v1107 = v611;
  unint64_t v1108 = v610;
  unint64_t v1109 = v609;
  unint64_t v1110 = v608;
  unint64_t v1111 = v607;
  unint64_t v1112 = v606;
  unint64_t v1113 = v385;
  unint64_t v390 = v604;
  sub_25192BAB0();
  v989 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v990 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v991 = &type metadata for Attribute.AirQualityCase.Resolver;
  v992 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v993 = &type metadata for Attribute.BrightnessCase.Resolver;
  v994 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v995 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v996 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v997 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v998 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v999 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v1000 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v1001 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v1002 = &type metadata for Attribute.ColorCase.Resolver;
  v1003 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v1004 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v1005 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v1006 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v1007 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v1008 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v1009 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v1010 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v1011 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v1012 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v1013 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v1014 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v1015 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v1016 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v1017 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v1018 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v1019 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v1020 = &type metadata for Attribute.InUseCase.Resolver;
  v1021 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v1022 = &type metadata for Attribute.LightLevelCase.Resolver;
  v1023 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v1024 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v1025 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v1026 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v1027 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v1028 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v1029 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v1030 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v1031 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v1032 = &type metadata for Attribute.PositionStateCase.Resolver;
  v1033 = &type metadata for Attribute.PowerCase.Resolver;
  v1034 = &type metadata for Attribute.RemainingDurationCase.Resolver;
  v1035 = &type metadata for Attribute.RotationDirectionCase.Resolver;
  v1036 = &type metadata for Attribute.RotationSpeedCase.Resolver;
  v1037 = &type metadata for Attribute.RvcCase.Resolver;
  v1038 = &type metadata for Attribute.SetDurationCase.Resolver;
  v1039 = &type metadata for Attribute.SmokeDetectedCase.Resolver;
  v1040 = &type metadata for Attribute.SulphurDioxideDensityCase.Resolver;
  v1041 = &type metadata for Attribute.SwingModeEnabledCase.Resolver;
  v1042 = &type metadata for Attribute.TargetAirPurifierStateCase.Resolver;
  v1043 = &type metadata for Attribute.TargetDoorStateCase.Resolver;
  v1044 = &type metadata for Attribute.TargetHorizontalTiltCase.Resolver;
  v1045 = &type metadata for Attribute.TargetHumidityCase.Resolver;
  v1046 = &type metadata for Attribute.TargetLockStateCase.Resolver;
  v1047 = &type metadata for Attribute.TargetPositionCase.Resolver;
  v1048 = &type metadata for Attribute.TargetSecuritySystemStateCase.Resolver;
  v1049 = &type metadata for Attribute.TargetVerticalTiltCase.Resolver;
  v1050 = &type metadata for Attribute.ThermostatModeCase.Resolver;
  v1051 = &type metadata for Attribute.ThermostatModeAndValueCase.Resolver;
  unint64_t v391 = v655;
  unint64_t v926 = v655;
  unint64_t v927 = v666;
  unint64_t v928 = v664;
  unint64_t v929 = v660;
  unint64_t v930 = v386;
  unint64_t v931 = v658;
  unint64_t v932 = v665;
  unint64_t v933 = v662;
  unint64_t v934 = v667;
  unint64_t v935 = v657;
  unint64_t v936 = v654;
  unint64_t v937 = v387;
  unint64_t v938 = v661;
  unint64_t v939 = v656;
  unint64_t v940 = v388;
  unint64_t v392 = v650;
  unint64_t v941 = v650;
  unint64_t v942 = v651;
  unint64_t v943 = v648;
  unint64_t v944 = v647;
  unint64_t v945 = v649;
  unint64_t v946 = v646;
  unint64_t v947 = v389;
  unint64_t v948 = v641;
  unint64_t v949 = v645;
  unint64_t v950 = v644;
  unint64_t v951 = v643;
  unint64_t v952 = v642;
  unint64_t v953 = v639;
  unint64_t v954 = v638;
  unint64_t v955 = v637;
  unint64_t v956 = v636;
  unint64_t v393 = v634;
  unint64_t v957 = v634;
  unint64_t v958 = v635;
  unint64_t v959 = v632;
  unint64_t v960 = v633;
  unint64_t v394 = v631;
  unint64_t v961 = v631;
  unint64_t v962 = v630;
  unint64_t v963 = v629;
  unint64_t v964 = v628;
  unint64_t v965 = v627;
  unint64_t v966 = v626;
  unint64_t v967 = v625;
  unint64_t v968 = v623;
  unint64_t v969 = v624;
  unint64_t v395 = v621;
  unint64_t v970 = v621;
  unint64_t v971 = v622;
  unint64_t v396 = v620;
  unint64_t v972 = v620;
  unint64_t v973 = v618;
  unint64_t v974 = v619;
  unint64_t v975 = v617;
  unint64_t v976 = v616;
  unint64_t v977 = v615;
  unint64_t v978 = v613;
  unint64_t v979 = v614;
  unint64_t v980 = v612;
  unint64_t v981 = v611;
  unint64_t v982 = v610;
  unint64_t v983 = v609;
  unint64_t v984 = v608;
  unint64_t v985 = v607;
  unint64_t v986 = v606;
  unint64_t v987 = v605;
  unint64_t v988 = v390;
  unint64_t v397 = v574;
  sub_25192BAB0();
  v862 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v863 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v864 = &type metadata for Attribute.AirQualityCase.Resolver;
  v865 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v866 = &type metadata for Attribute.BrightnessCase.Resolver;
  v867 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v868 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v869 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v870 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v871 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v872 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v873 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v874 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v875 = &type metadata for Attribute.ColorCase.Resolver;
  v876 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v877 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v878 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v879 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v880 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v881 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v882 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v883 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v884 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v885 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v886 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v887 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v888 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v889 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v890 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v891 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v892 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v893 = &type metadata for Attribute.InUseCase.Resolver;
  v894 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v895 = &type metadata for Attribute.LightLevelCase.Resolver;
  v896 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v897 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v898 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v899 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v900 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v901 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v902 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v903 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v904 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v905 = &type metadata for Attribute.PositionStateCase.Resolver;
  v906 = &type metadata for Attribute.PowerCase.Resolver;
  v907 = &type metadata for Attribute.RemainingDurationCase.Resolver;
  v908 = &type metadata for Attribute.RotationDirectionCase.Resolver;
  v909 = &type metadata for Attribute.RotationSpeedCase.Resolver;
  v910 = &type metadata for Attribute.RvcCase.Resolver;
  v911 = &type metadata for Attribute.SetDurationCase.Resolver;
  v912 = &type metadata for Attribute.SmokeDetectedCase.Resolver;
  v913 = &type metadata for Attribute.SulphurDioxideDensityCase.Resolver;
  v914 = &type metadata for Attribute.SwingModeEnabledCase.Resolver;
  v915 = &type metadata for Attribute.TargetAirPurifierStateCase.Resolver;
  v916 = &type metadata for Attribute.TargetDoorStateCase.Resolver;
  v917 = &type metadata for Attribute.TargetHorizontalTiltCase.Resolver;
  v918 = &type metadata for Attribute.TargetHumidityCase.Resolver;
  v919 = &type metadata for Attribute.TargetLockStateCase.Resolver;
  v920 = &type metadata for Attribute.TargetPositionCase.Resolver;
  v921 = &type metadata for Attribute.TargetSecuritySystemStateCase.Resolver;
  v922 = &type metadata for Attribute.TargetVerticalTiltCase.Resolver;
  v923 = &type metadata for Attribute.ThermostatModeCase.Resolver;
  v924 = &type metadata for Attribute.ThermostatModeAndValueCase.Resolver;
  v925 = &type metadata for Attribute.ThermostatModeAndRangeCase.Resolver;
  unint64_t v798 = v391;
  unint64_t v799 = v666;
  unint64_t v800 = v664;
  unint64_t v801 = v660;
  unint64_t v802 = v663;
  unint64_t v803 = v658;
  unint64_t v804 = v665;
  unint64_t v805 = v662;
  unint64_t v806 = v667;
  unint64_t v807 = v657;
  unint64_t v808 = v654;
  unint64_t v809 = v653;
  unint64_t v398 = v661;
  unint64_t v810 = v661;
  unint64_t v811 = v656;
  unint64_t v812 = v652;
  unint64_t v813 = v392;
  unint64_t v814 = v651;
  unint64_t v815 = v648;
  unint64_t v816 = v647;
  unint64_t v817 = v649;
  unint64_t v818 = v646;
  unint64_t v819 = v640;
  unint64_t v820 = v641;
  unint64_t v821 = v645;
  unint64_t v822 = v644;
  unint64_t v823 = v643;
  unint64_t v824 = v642;
  unint64_t v825 = v639;
  unint64_t v826 = v638;
  unint64_t v827 = v637;
  unint64_t v828 = v636;
  unint64_t v829 = v393;
  unint64_t v830 = v635;
  unint64_t v831 = v632;
  unint64_t v832 = v633;
  unint64_t v833 = v394;
  unint64_t v834 = v630;
  unint64_t v835 = v629;
  unint64_t v836 = v628;
  unint64_t v837 = v627;
  unint64_t v838 = v626;
  unint64_t v839 = v625;
  unint64_t v840 = v623;
  unint64_t v841 = v624;
  unint64_t v842 = v395;
  unint64_t v843 = v622;
  unint64_t v844 = v396;
  unint64_t v399 = v618;
  unint64_t v845 = v618;
  unint64_t v846 = v619;
  unint64_t v847 = v617;
  unint64_t v400 = v616;
  unint64_t v848 = v616;
  unint64_t v401 = v615;
  unint64_t v849 = v615;
  unint64_t v402 = v613;
  unint64_t v850 = v613;
  unint64_t v851 = v614;
  unint64_t v852 = v612;
  unint64_t v853 = v611;
  unint64_t v854 = v610;
  unint64_t v855 = v609;
  unint64_t v856 = v608;
  unint64_t v857 = v607;
  unint64_t v858 = v606;
  unint64_t v859 = v605;
  unint64_t v860 = v604;
  unint64_t v861 = v397;
  uint64_t v403 = v406[0];
  v404 = v516;
  sub_25192BAB0();
  v733 = &type metadata for Attribute.AirParticulateDensityCase.Resolver;
  v734 = &type metadata for Attribute.AirParticulateSizeCase.Resolver;
  v735 = &type metadata for Attribute.AirQualityCase.Resolver;
  v736 = &type metadata for Attribute.BatteryLevelCase.Resolver;
  v737 = &type metadata for Attribute.BrightnessCase.Resolver;
  v738 = &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
  v739 = &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
  v740 = &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
  v741 = &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
  v742 = &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
  v743 = &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
  v744 = &type metadata for Attribute.ChargingStateCase.Resolver;
  v745 = &type metadata for Attribute.ChildLockEnabledCase.Resolver;
  v746 = &type metadata for Attribute.ColorCase.Resolver;
  v747 = &type metadata for Attribute.ContactDetectedCase.Resolver;
  v748 = &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
  v749 = &type metadata for Attribute.CurrentDoorStateCase.Resolver;
  v750 = &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
  v751 = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
  v752 = &type metadata for Attribute.CurrentHumidityCase.Resolver;
  v753 = &type metadata for Attribute.CurrentLockStateCase.Resolver;
  v754 = &type metadata for Attribute.CurrentPositionCase.Resolver;
  v755 = &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
  v756 = &type metadata for Attribute.CurrentTemperatureCase.Resolver;
  v757 = &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
  v758 = &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
  v759 = &type metadata for Attribute.FilterChangeNeededCase.Resolver;
  v760 = &type metadata for Attribute.FilterLifeLevelCase.Resolver;
  v761 = &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
  v762 = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
  v763 = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
  v764 = &type metadata for Attribute.InUseCase.Resolver;
  v765 = &type metadata for Attribute.LeakDetectedCase.Resolver;
  v766 = &type metadata for Attribute.LightLevelCase.Resolver;
  v767 = &type metadata for Attribute.LowBatteryCase.Resolver;
  v768 = &type metadata for Attribute.MotionDetectedCase.Resolver;
  v769 = &type metadata for Attribute.NaturalLightCase.Resolver;
  v770 = &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
  v771 = &type metadata for Attribute.ObstructionDetectedCase.Resolver;
  v772 = &type metadata for Attribute.OccupancyDetectedCase.Resolver;
  v773 = &type metadata for Attribute.OzoneDensityCase.Resolver;
  v774 = &type metadata for Attribute.Pm10DensityCase.Resolver;
  v775 = &type metadata for Attribute.Pm2_5DensityCase.Resolver;
  v776 = &type metadata for Attribute.PositionStateCase.Resolver;
  v777 = &type metadata for Attribute.PowerCase.Resolver;
  v778 = &type metadata for Attribute.RemainingDurationCase.Resolver;
  v779 = &type metadata for Attribute.RotationDirectionCase.Resolver;
  v780 = &type metadata for Attribute.RotationSpeedCase.Resolver;
  v781 = &type metadata for Attribute.RvcCase.Resolver;
  v782 = &type metadata for Attribute.SetDurationCase.Resolver;
  v783 = &type metadata for Attribute.SmokeDetectedCase.Resolver;
  v784 = &type metadata for Attribute.SulphurDioxideDensityCase.Resolver;
  v785 = &type metadata for Attribute.SwingModeEnabledCase.Resolver;
  v786 = &type metadata for Attribute.TargetAirPurifierStateCase.Resolver;
  v787 = &type metadata for Attribute.TargetDoorStateCase.Resolver;
  v788 = &type metadata for Attribute.TargetHorizontalTiltCase.Resolver;
  v789 = &type metadata for Attribute.TargetHumidityCase.Resolver;
  v790 = &type metadata for Attribute.TargetLockStateCase.Resolver;
  v791 = &type metadata for Attribute.TargetPositionCase.Resolver;
  v792 = &type metadata for Attribute.TargetSecuritySystemStateCase.Resolver;
  v793 = &type metadata for Attribute.TargetVerticalTiltCase.Resolver;
  v794 = &type metadata for Attribute.ThermostatModeCase.Resolver;
  v795 = &type metadata for Attribute.ThermostatModeAndValueCase.Resolver;
  v796 = &type metadata for Attribute.ThermostatModeAndRangeCase.Resolver;
  v797 = &type metadata for Attribute.VolatileOrganicCompoundDensityCase.Resolver;
  unint64_t v668 = v655;
  unint64_t v669 = v666;
  unint64_t v670 = v664;
  unint64_t v671 = v660;
  unint64_t v672 = v663;
  unint64_t v673 = v658;
  unint64_t v674 = v665;
  unint64_t v675 = v662;
  unint64_t v676 = v667;
  unint64_t v677 = v657;
  unint64_t v678 = v654;
  unint64_t v679 = v653;
  unint64_t v680 = v398;
  unint64_t v681 = v656;
  unint64_t v682 = v652;
  unint64_t v683 = v650;
  unint64_t v684 = v651;
  unint64_t v685 = v648;
  unint64_t v686 = v647;
  unint64_t v687 = v649;
  unint64_t v688 = v646;
  unint64_t v689 = v640;
  unint64_t v690 = v641;
  unint64_t v691 = v645;
  unint64_t v692 = v644;
  unint64_t v693 = v643;
  unint64_t v694 = v642;
  unint64_t v695 = v639;
  unint64_t v696 = v638;
  unint64_t v697 = v637;
  unint64_t v698 = v636;
  unint64_t v699 = v634;
  unint64_t v700 = v635;
  unint64_t v701 = v632;
  unint64_t v702 = v633;
  unint64_t v703 = v631;
  unint64_t v704 = v630;
  unint64_t v705 = v629;
  unint64_t v706 = v628;
  unint64_t v707 = v627;
  unint64_t v708 = v626;
  unint64_t v709 = v625;
  unint64_t v710 = v623;
  unint64_t v711 = v624;
  unint64_t v712 = v621;
  unint64_t v713 = v622;
  unint64_t v714 = v620;
  unint64_t v715 = v399;
  unint64_t v716 = v619;
  unint64_t v717 = v617;
  unint64_t v718 = v400;
  unint64_t v719 = v401;
  unint64_t v720 = v402;
  unint64_t v721 = v614;
  unint64_t v722 = v612;
  unint64_t v723 = v611;
  unint64_t v724 = v610;
  unint64_t v725 = v609;
  unint64_t v726 = v608;
  unint64_t v727 = v607;
  unint64_t v728 = v606;
  unint64_t v729 = v605;
  unint64_t v730 = v604;
  unint64_t v731 = v574;
  uint64_t v732 = v403;
  sub_25192BAB0();
  (*(void (**)(char *, uint64_t))(v538 + 8))(v404, v539);
  (*(void (**)(char *, uint64_t))(v536 + 8))(v603, v537);
  (*(void (**)(char *, uint64_t))(v534 + 8))(v602, v535);
  (*(void (**)(char *, uint64_t))(v532 + 8))(v601, v533);
  (*(void (**)(char *, uint64_t))(v530 + 8))(v600, v531);
  (*(void (**)(char *, uint64_t))(v528 + 8))(v599, v529);
  (*(void (**)(char *, uint64_t))(v526 + 8))(v598, v527);
  (*(void (**)(char *, uint64_t))(v524 + 8))(v597, v525);
  (*(void (**)(char *, uint64_t))(v522 + 8))(v596, v523);
  (*(void (**)(char *, uint64_t))(v520 + 8))(v595, v521);
  (*(void (**)(char *, uint64_t))(v518 + 8))(v594, v519);
  (*(void (**)(char *, uint64_t))(v515 + 8))(v589, v517);
  (*(void (**)(char *, uint64_t))(v513 + 8))(v585, v514);
  (*(void (**)(char *, uint64_t))(v511 + 8))(v581, v512);
  (*(void (**)(char *, uint64_t))(v509 + 8))(v577, v510);
  (*(void (**)(char *, uint64_t))(v507 + 8))(v573, v508);
  (*(void (**)(char *, uint64_t))(v505 + 8))(v570, v506);
  (*(void (**)(char *, uint64_t))(v503 + 8))(v567, v504);
  (*(void (**)(char *, uint64_t))(v501 + 8))(v564, v502);
  (*(void (**)(char *, uint64_t))(v499 + 8))(v561, v500);
  (*(void (**)(char *, uint64_t))(v497 + 8))(v558, v498);
  (*(void (**)(char *, uint64_t))(v495 + 8))(v556, v496);
  (*(void (**)(char *, uint64_t))(v493 + 8))(v553, v494);
  (*(void (**)(char *, uint64_t))(v491 + 8))(v551, v492);
  (*(void (**)(char *, uint64_t))(v489 + 8))(v548, v490);
  (*(void (**)(char *, uint64_t))(v487 + 8))(v546, v488);
  (*(void (**)(char *, uint64_t))(v485 + 8))(v544, v486);
  (*(void (**)(char *, uint64_t))(v483 + 8))(v542, v484);
  (*(void (**)(char *, uint64_t))(v481 + 8))(v541, v482);
  (*(void (**)(char *, uint64_t))(v479 + 8))(v543, v480);
  (*(void (**)(char *, uint64_t))(v477 + 8))(v545, v478);
  (*(void (**)(char *, uint64_t))(v475 + 8))(v547, v476);
  (*(void (**)(char *, uint64_t))(v473 + 8))(v549, v474);
  (*(void (**)(char *, uint64_t))(v471 + 8))(v550, v472);
  (*(void (**)(char *, uint64_t))(v469 + 8))(v552, v470);
  (*(void (**)(char *, uint64_t))(v467 + 8))(v554, v468);
  (*(void (**)(char *, uint64_t))(v465 + 8))(v555, v466);
  (*(void (**)(char *, uint64_t))(v463 + 8))(v557, v464);
  (*(void (**)(char *, uint64_t))(v461 + 8))(v559, v462);
  (*(void (**)(char *, uint64_t))(v459 + 8))(v560, v460);
  (*(void (**)(char *, uint64_t))(v457 + 8))(v562, v458);
  (*(void (**)(char *, uint64_t))(v455 + 8))(v563, v456);
  (*(void (**)(char *, uint64_t))(v453 + 8))(v565, v454);
  (*(void (**)(char *, uint64_t))(v451 + 8))(v566, v452);
  (*(void (**)(char *, uint64_t))(v449 + 8))(v568, v450);
  (*(void (**)(char *, uint64_t))(v447 + 8))(v569, v448);
  (*(void (**)(char *, uint64_t))(v445 + 8))(v571, v446);
  (*(void (**)(char *, uint64_t))(v443 + 8))(v572, v444);
  (*(void (**)(char *, uint64_t))(v441 + 8))(v575, v442);
  (*(void (**)(char *, uint64_t))(v439 + 8))(v576, v440);
  (*(void (**)(char *, uint64_t))(v437 + 8))(v578, v438);
  (*(void (**)(char *, uint64_t))(v435 + 8))(v579, v436);
  (*(void (**)(char *, uint64_t))(v433 + 8))(v580, v434);
  (*(void (**)(char *, uint64_t))(v431 + 8))(v582, v432);
  (*(void (**)(char *, uint64_t))(v429 + 8))(v583, v430);
  (*(void (**)(char *, uint64_t))(v427 + 8))(v584, v428);
  (*(void (**)(char *, uint64_t))(v425 + 8))(v586, v426);
  (*(void (**)(char *, uint64_t))(v423 + 8))(v587, v424);
  (*(void (**)(char *, uint64_t))(v421 + 8))(v588, v422);
  (*(void (**)(char *, uint64_t))(v419 + 8))(v590, v420);
  (*(void (**)(char *, uint64_t))(v417 + 8))(v591, v418);
  (*(void (**)(char *, uint64_t))(v415 + 8))(v592, v416);
  (*(void (**)(char *, uint64_t))(v413 + 8))(v593, v414);
  (*(void (**)(char *, uint64_t))(v411 + 8))(v407, v412);
  return (*(uint64_t (**)(char *, uint64_t))(v409 + 8))(v408, v410);
}

uint64_t sub_2518F6930(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A708);
}

uint64_t sub_2518F6954(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518F6978, 0, 0);
}

uint64_t sub_2518F6978()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 0;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518F69F0@<X0>(uint64_t *a1@<X8>)
{
  return sub_251900AF8(&qword_269B57648, MEMORY[0x263EFB8B8], a1);
}

uint64_t sub_2518F6A10(uint64_t a1)
{
  unint64_t v2 = sub_251918570();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F6A5C()
{
  sub_251918570();
  return sub_25192B600();
}

uint64_t sub_2518F6AA8()
{
  uint64_t v0 = qword_269B571C8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F6AE0@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B531F0, (uint64_t)qword_269B5A708, a1);
}

uint64_t sub_2518F6B04(uint64_t a1)
{
  unint64_t v2 = sub_251906EF8();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F6B54(uint64_t a1)
{
  unint64_t v2 = sub_251906CA8();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F6BA0(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A720);
}

uint64_t sub_2518F6BC4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518F6BE8, 0, 0);
}

uint64_t sub_2518F6BE8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 2;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518F6C64@<X0>(uint64_t *a1@<X8>)
{
  return sub_2518FFE38(&qword_269B578A8, (uint64_t (*)(uint64_t))sub_251866508, a1);
}

uint64_t sub_2518F6C8C(uint64_t a1)
{
  unint64_t v2 = sub_25191851C();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F6CD8()
{
  sub_25191851C();
  return sub_25192B600();
}

uint64_t sub_2518F6D24()
{
  uint64_t v0 = qword_269B571D8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F6D5C@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B531F8, (uint64_t)qword_269B5A720, a1);
}

uint64_t sub_2518F6D80(uint64_t a1)
{
  unint64_t v2 = sub_251907250();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F6DCC(uint64_t a1)
{
  unint64_t v2 = sub_251907000();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F6E18(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A738);
}

uint64_t sub_2518F6E3C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518F6E60, 0, 0);
}

uint64_t sub_2518F6E60()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 4;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518F6EDC@<X0>(uint64_t *a1@<X8>)
{
  return sub_2518FFE38(&qword_269B57898, (uint64_t (*)(uint64_t))sub_25186721C, a1);
}

uint64_t sub_2518F6F04(uint64_t a1)
{
  unint64_t v2 = sub_2519184C8();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F6F50()
{
  sub_2519184C8();
  return sub_25192B600();
}

uint64_t sub_2518F6F9C()
{
  uint64_t v0 = qword_269B571E8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F6FD4@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53200, (uint64_t)qword_269B5A738, a1);
}

uint64_t sub_2518F6FF8(uint64_t a1)
{
  unint64_t v2 = sub_2519075A8();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F7044(uint64_t a1)
{
  unint64_t v2 = sub_251907358();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F7090(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A750);
}

uint64_t sub_2518F70B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518F70DC, 0, 0);
}

uint64_t sub_2518F70DC()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 6;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518F7158@<X0>(uint64_t *a1@<X8>)
{
  return sub_251900AF8(&qword_269B53D30, MEMORY[0x263EFB8C0], a1);
}

uint64_t sub_2518F7178(uint64_t a1)
{
  unint64_t v2 = sub_251918474();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F71C4()
{
  sub_251918474();
  return sub_25192B600();
}

uint64_t sub_2518F7210()
{
  uint64_t v0 = qword_269B571F8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F7248@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53208, (uint64_t)qword_269B5A750, a1);
}

uint64_t sub_2518F726C(uint64_t a1)
{
  unint64_t v2 = sub_251907900();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F72B8(uint64_t a1)
{
  unint64_t v2 = sub_2519076B0();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F7304(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A768);
}

uint64_t sub_2518F7328(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518F734C, 0, 0);
}

uint64_t sub_2518F734C()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 8;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518F73C8(uint64_t a1)
{
  unint64_t v2 = sub_251918420();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F7414()
{
  sub_251918420();
  return sub_25192B600();
}

uint64_t sub_2518F7460()
{
  uint64_t v0 = qword_269B57208;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F7498@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53210, (uint64_t)qword_269B5A768, a1);
}

uint64_t sub_2518F74BC(uint64_t a1)
{
  unint64_t v2 = sub_251907C58();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F7508(uint64_t a1)
{
  unint64_t v2 = sub_251907A08();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F7554(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A780);
}

uint64_t sub_2518F7578(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518F759C, 0, 0);
}

uint64_t sub_2518F759C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 10;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518F7618@<X0>(uint64_t *a1@<X8>)
{
  return sub_251900AF8(&qword_269B576E0, MEMORY[0x263EFB8B0], a1);
}

uint64_t sub_2518F7638(uint64_t a1)
{
  unint64_t v2 = sub_2519183CC();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F7684()
{
  sub_2519183CC();
  return sub_25192B600();
}

uint64_t sub_2518F76D0()
{
  uint64_t v0 = qword_269B57218;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F7708@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53218, (uint64_t)qword_269B5A780, a1);
}

uint64_t sub_2518F772C(uint64_t a1)
{
  unint64_t v2 = sub_251907FB0();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F7778(uint64_t a1)
{
  unint64_t v2 = sub_251907D60();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F77C4(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A798);
}

uint64_t sub_2518F77E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518F780C, 0, 0);
}

uint64_t sub_2518F780C()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 12;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518F7888(uint64_t a1)
{
  unint64_t v2 = sub_251918378();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F78D4()
{
  sub_251918378();
  return sub_25192B600();
}

uint64_t sub_2518F7920()
{
  uint64_t v0 = qword_269B57228;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F7958@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53220, (uint64_t)qword_269B5A798, a1);
}

uint64_t sub_2518F797C(uint64_t a1)
{
  unint64_t v2 = sub_251908308();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F79C8(uint64_t a1)
{
  unint64_t v2 = sub_2519080B8();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F7A14(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A7B0);
}

uint64_t sub_2518F7A38(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518F7A5C, 0, 0);
}

uint64_t sub_2518F7A5C()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 14;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518F7AD8(uint64_t a1)
{
  unint64_t v2 = sub_251918324();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F7B24()
{
  sub_251918324();
  return sub_25192B600();
}

uint64_t sub_2518F7B70()
{
  uint64_t v0 = qword_269B57238;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F7BA8@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53228, (uint64_t)qword_269B5A7B0, a1);
}

uint64_t sub_2518F7BCC(uint64_t a1)
{
  unint64_t v2 = sub_251908660();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F7C18(uint64_t a1)
{
  unint64_t v2 = sub_251908410();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F7C64(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A7C8);
}

uint64_t sub_2518F7C88(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518F7CAC, 0, 0);
}

uint64_t sub_2518F7CAC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 16;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518F7D28(uint64_t a1)
{
  unint64_t v2 = sub_2519182D0();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F7D74()
{
  sub_2519182D0();
  return sub_25192B600();
}

uint64_t sub_2518F7DC0()
{
  uint64_t v0 = qword_269B57248;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F7DF8@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53230, (uint64_t)qword_269B5A7C8, a1);
}

uint64_t sub_2518F7E1C(uint64_t a1)
{
  unint64_t v2 = sub_2519089B8();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F7E68(uint64_t a1)
{
  unint64_t v2 = sub_251908768();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F7EB4(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A7E0);
}

uint64_t sub_2518F7ED8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518F7EFC, 0, 0);
}

uint64_t sub_2518F7EFC()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 18;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518F7F78(uint64_t a1)
{
  unint64_t v2 = sub_25191827C();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F7FC4()
{
  sub_25191827C();
  return sub_25192B600();
}

uint64_t sub_2518F8010()
{
  uint64_t v0 = qword_269B57258;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F8048@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53238, (uint64_t)qword_269B5A7E0, a1);
}

uint64_t sub_2518F806C(uint64_t a1)
{
  unint64_t v2 = sub_251908D10();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F80B8(uint64_t a1)
{
  unint64_t v2 = sub_251908AC0();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F8104(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A7F8);
}

uint64_t sub_2518F8128(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518F814C, 0, 0);
}

uint64_t sub_2518F814C()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 20;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518F81C8(uint64_t a1)
{
  unint64_t v2 = sub_251918228();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F8214()
{
  sub_251918228();
  return sub_25192B600();
}

uint64_t sub_2518F8260()
{
  uint64_t v0 = qword_269B57268;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F8298@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53240, (uint64_t)qword_269B5A7F8, a1);
}

uint64_t sub_2518F82BC(uint64_t a1)
{
  unint64_t v2 = sub_251909068();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F8308(uint64_t a1)
{
  unint64_t v2 = sub_251908E18();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F8354(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A810);
}

uint64_t sub_2518F8380(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518F83A4, 0, 0);
}

uint64_t sub_2518F83A4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 22;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518F8420@<X0>(uint64_t *a1@<X8>)
{
  return sub_2518FFE38(&qword_269B57848, (uint64_t (*)(uint64_t))sub_251867678, a1);
}

uint64_t sub_2518F8448(uint64_t a1)
{
  unint64_t v2 = sub_2519181D4();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F8494()
{
  sub_2519181D4();
  return sub_25192B600();
}

uint64_t sub_2518F84E0()
{
  uint64_t v0 = qword_269B57278;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F8518@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53248, (uint64_t)qword_269B5A810, a1);
}

uint64_t sub_2518F853C(uint64_t a1)
{
  unint64_t v2 = sub_2519093C0();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F8588(uint64_t a1)
{
  unint64_t v2 = sub_251909170();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F85D4(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A828);
}

uint64_t sub_2518F85F8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518F861C, 0, 0);
}

uint64_t sub_2518F861C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 24;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518F8698(uint64_t a1)
{
  unint64_t v2 = sub_251918180();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F86E4()
{
  sub_251918180();
  return sub_25192B600();
}

uint64_t sub_2518F8730()
{
  uint64_t v0 = qword_269B57288;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F8768@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53250, (uint64_t)qword_269B5A828, a1);
}

uint64_t sub_2518F878C(uint64_t a1)
{
  unint64_t v2 = sub_251909718();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F87D8(uint64_t a1)
{
  unint64_t v2 = sub_2519094C8();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F8824(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A840);
}

uint64_t sub_2518F8840(uint64_t a1, _OWORD *a2)
{
  *(void *)(v2 + 24) = a1;
  *(_OWORD *)(v2 + 32) = *a2;
  return MEMORY[0x270FA2498](sub_2518F8868, 0, 0);
}

uint64_t sub_2518F8868()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  uint64_t v2 = v0[2];
  sub_25192B740();
  uint64_t v3 = v0[2];
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 26;
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_2518F890C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_25192BC50();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
  sub_25192BC30();
  uint64_t v5 = MEMORY[0x2533A4FD0](v4);
  sub_25192BC30();
  uint64_t result = MEMORY[0x2533A4FD0](v4);
  *a1 = v5;
  a1[1] = result;
  return result;
}

uint64_t sub_2518F89D8(uint64_t a1)
{
  unint64_t v2 = sub_25191812C();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F8A24()
{
  sub_25191812C();
  return sub_25192B600();
}

uint64_t sub_2518F8A70()
{
  uint64_t v0 = qword_269B57298;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F8AA8@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53258, (uint64_t)qword_269B5A840, a1);
}

uint64_t sub_2518F8ACC(uint64_t a1)
{
  unint64_t v2 = sub_251909A70();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F8B18(uint64_t a1)
{
  unint64_t v2 = sub_251909820();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F8B64(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A858);
}

uint64_t sub_2518F8B90(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518F8BB4, 0, 0);
}

uint64_t sub_2518F8BB4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 28;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518F8C30(uint64_t a1)
{
  unint64_t v2 = sub_2519180D8();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F8C7C()
{
  sub_2519180D8();
  return sub_25192B600();
}

uint64_t sub_2518F8CC8()
{
  uint64_t v0 = qword_269B572A8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F8D00@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53260, (uint64_t)qword_269B5A858, a1);
}

uint64_t sub_2518F8D24(uint64_t a1)
{
  unint64_t v2 = sub_251909DC8();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F8D70(uint64_t a1)
{
  unint64_t v2 = sub_251909B78();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F8DBC(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A870);
}

uint64_t sub_2518F8DE0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518F8E04, 0, 0);
}

uint64_t sub_2518F8E04()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 30;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518F8E80@<X0>(uint64_t *a1@<X8>)
{
  return sub_2518FFE38(&qword_269B57820, (uint64_t (*)(uint64_t))sub_251866DC0, a1);
}

uint64_t sub_2518F8EA8(uint64_t a1)
{
  unint64_t v2 = sub_251918084();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F8EF4()
{
  sub_251918084();
  return sub_25192B600();
}

uint64_t sub_2518F8F40()
{
  uint64_t v0 = qword_269B572B8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F8F78@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53268, (uint64_t)qword_269B5A870, a1);
}

uint64_t sub_2518F8F9C(uint64_t a1)
{
  unint64_t v2 = sub_25190A120();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F8FE8(uint64_t a1)
{
  unint64_t v2 = sub_251909ED0();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F9034(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A888);
}

uint64_t sub_2518F9058(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518F907C, 0, 0);
}

uint64_t sub_2518F907C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 32;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518F90F8@<X0>(uint64_t *a1@<X8>)
{
  return sub_2518FFE38(&qword_269B576C0, (uint64_t (*)(uint64_t))sub_251867F30, a1);
}

uint64_t sub_2518F9120(uint64_t a1)
{
  unint64_t v2 = sub_251918030();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F916C()
{
  sub_251918030();
  return sub_25192B600();
}

uint64_t sub_2518F91B8()
{
  uint64_t v0 = qword_269B572C8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F91F0@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53270, (uint64_t)qword_269B5A888, a1);
}

uint64_t sub_2518F9214(uint64_t a1)
{
  unint64_t v2 = sub_25190A478();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F9260(uint64_t a1)
{
  unint64_t v2 = sub_25190A228();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F92AC(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A8A0);
}

uint64_t sub_2518F92D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518F92F4, 0, 0);
}

uint64_t sub_2518F92F4()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 34;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518F9370(uint64_t a1)
{
  unint64_t v2 = sub_251917FDC();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F93BC()
{
  sub_251917FDC();
  return sub_25192B600();
}

uint64_t sub_2518F9408()
{
  uint64_t v0 = qword_269B572D8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F9440@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53278, (uint64_t)qword_269B5A8A0, a1);
}

uint64_t sub_2518F9464(uint64_t a1)
{
  unint64_t v2 = sub_25190A7D0();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F94B0(uint64_t a1)
{
  unint64_t v2 = sub_25190A580();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F94FC(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A8B8);
}

uint64_t sub_2518F9520(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518F9544, 0, 0);
}

uint64_t sub_2518F9544()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 36;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518F95C0@<X0>(uint64_t *a1@<X8>)
{
  return sub_2518FFE38(&qword_269B577A0, (uint64_t (*)(uint64_t))sub_251869454, a1);
}

uint64_t sub_2518F95EC(uint64_t a1)
{
  unint64_t v2 = sub_251917F88();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F9638()
{
  sub_251917F88();
  return sub_25192B600();
}

uint64_t sub_2518F9684()
{
  uint64_t v0 = qword_269B572E8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F96BC@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53280, (uint64_t)qword_269B5A8B8, a1);
}

uint64_t sub_2518F96E0(uint64_t a1)
{
  unint64_t v2 = sub_25190AB28();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F972C(uint64_t a1)
{
  unint64_t v2 = sub_25190A8D8();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F9778(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A8D0);
}

uint64_t sub_2518F97A4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518F97C8, 0, 0);
}

uint64_t sub_2518F97C8()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 38;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518F9844(uint64_t a1)
{
  unint64_t v2 = sub_251917F34();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F9890()
{
  sub_251917F34();
  return sub_25192B600();
}

uint64_t sub_2518F98DC()
{
  uint64_t v0 = qword_269B572F8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F9914@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53288, (uint64_t)qword_269B5A8D0, a1);
}

uint64_t sub_2518F9938(uint64_t a1)
{
  unint64_t v2 = sub_25190AE80();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F9984(uint64_t a1)
{
  unint64_t v2 = sub_25190AC30();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F99D0(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A8E8);
}

uint64_t sub_2518F99F4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518F9A18, 0, 0);
}

uint64_t sub_2518F9A18()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 40;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518F9A94@<X0>(uint64_t *a1@<X8>)
{
  return sub_2518FFE38(&qword_269B576A0, (uint64_t (*)(uint64_t))sub_251867AD4, a1);
}

uint64_t sub_2518F9ABC(uint64_t a1)
{
  unint64_t v2 = sub_251917EE0();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F9B08()
{
  sub_251917EE0();
  return sub_25192B600();
}

uint64_t sub_2518F9B54()
{
  uint64_t v0 = qword_269B57308;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F9B8C@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53290, (uint64_t)qword_269B5A8E8, a1);
}

uint64_t sub_2518F9BB0(uint64_t a1)
{
  unint64_t v2 = sub_25190B1D8();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F9BFC(uint64_t a1)
{
  unint64_t v2 = sub_25190AF88();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F9C48(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A900);
}

uint64_t sub_2518F9C74(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518F9C98, 0, 0);
}

uint64_t sub_2518F9C98()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 42;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518F9D14(uint64_t a1)
{
  unint64_t v2 = sub_251917E8C();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F9D60()
{
  sub_251917E8C();
  return sub_25192B600();
}

uint64_t sub_2518F9DAC()
{
  uint64_t v0 = qword_269B57318;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518F9DE4@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53298, (uint64_t)qword_269B5A900, a1);
}

uint64_t sub_2518F9E08(uint64_t a1)
{
  unint64_t v2 = sub_25190B530();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518F9E54(uint64_t a1)
{
  unint64_t v2 = sub_25190B2E0();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518F9EA0(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A918);
}

uint64_t sub_2518F9EC4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518F9EE8, 0, 0);
}

uint64_t sub_2518F9EE8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 44;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518F9F64@<X0>(uint64_t *a1@<X8>)
{
  return sub_2518FFE38(&qword_269B57688, (uint64_t (*)(uint64_t))sub_251868B9C, a1);
}

uint64_t sub_2518F9F8C(uint64_t a1)
{
  unint64_t v2 = sub_251917E38();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518F9FD8()
{
  sub_251917E38();
  return sub_25192B600();
}

uint64_t sub_2518FA024()
{
  uint64_t v0 = qword_269B57328;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FA05C@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B532A0, (uint64_t)qword_269B5A918, a1);
}

uint64_t sub_2518FA080(uint64_t a1)
{
  unint64_t v2 = sub_25190B888();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FA0CC(uint64_t a1)
{
  unint64_t v2 = sub_25190B638();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FA118(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A930);
}

uint64_t sub_2518FA13C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518FA160, 0, 0);
}

uint64_t sub_2518FA160()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 46;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518FA1DC(uint64_t a1)
{
  unint64_t v2 = sub_251917DE4();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FA228()
{
  sub_251917DE4();
  return sub_25192B600();
}

uint64_t sub_2518FA274()
{
  uint64_t v0 = qword_269B57338;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FA2AC@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B532A8, (uint64_t)qword_269B5A930, a1);
}

uint64_t sub_2518FA2D0(uint64_t a1)
{
  unint64_t v2 = sub_25190BBE0();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FA31C(uint64_t a1)
{
  unint64_t v2 = sub_25190B990();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FA368(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A948);
}

uint64_t sub_2518FA38C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518FA3B0, 0, 0);
}

uint64_t sub_2518FA3B0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 48;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518FA42C@<X0>(uint64_t *a1@<X8>)
{
  return sub_2518FFE38(&qword_269B57660, (uint64_t (*)(uint64_t))sub_251868FF8, a1);
}

uint64_t sub_2518FA458(uint64_t a1)
{
  unint64_t v2 = sub_251917D90();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FA4A4()
{
  sub_251917D90();
  return sub_25192B600();
}

uint64_t sub_2518FA4F0()
{
  uint64_t v0 = qword_269B57348;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FA528@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B532B0, (uint64_t)qword_269B5A948, a1);
}

uint64_t sub_2518FA54C(uint64_t a1)
{
  unint64_t v2 = sub_25190BF38();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FA598(uint64_t a1)
{
  unint64_t v2 = sub_25190BCE8();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FA5E4(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A960);
}

uint64_t sub_2518FA608(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518FA62C, 0, 0);
}

uint64_t sub_2518FA62C()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 50;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518FA6A8(uint64_t a1)
{
  unint64_t v2 = sub_251917D3C();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FA6F4()
{
  sub_251917D3C();
  return sub_25192B600();
}

uint64_t sub_2518FA740()
{
  uint64_t v0 = qword_269B57358;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FA778@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B532B8, (uint64_t)qword_269B5A960, a1);
}

uint64_t sub_2518FA79C(uint64_t a1)
{
  unint64_t v2 = sub_25190C290();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FA7E8(uint64_t a1)
{
  unint64_t v2 = sub_25190C040();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FA834(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A978);
}

uint64_t sub_2518FA858(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518FA87C, 0, 0);
}

uint64_t sub_2518FA87C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 52;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518FA8F8(uint64_t a1)
{
  unint64_t v2 = sub_251917CE8();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FA944()
{
  sub_251917CE8();
  return sub_25192B600();
}

uint64_t sub_2518FA990()
{
  uint64_t v0 = qword_269B57368;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FA9C8@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B532C0, (uint64_t)qword_269B5A978, a1);
}

uint64_t sub_2518FA9EC(uint64_t a1)
{
  unint64_t v2 = sub_25190C5E8();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FAA38(uint64_t a1)
{
  unint64_t v2 = sub_25190C398();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FAA84(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A990);
}

uint64_t sub_2518FAAB0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518FAAD4, 0, 0);
}

uint64_t sub_2518FAAD4()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 54;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518FAB50(uint64_t a1)
{
  unint64_t v2 = sub_251917C94();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FAB9C()
{
  sub_251917C94();
  return sub_25192B600();
}

uint64_t sub_2518FABE8()
{
  uint64_t v0 = qword_269B57378;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FAC20@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B532C8, (uint64_t)qword_269B5A990, a1);
}

uint64_t sub_2518FAC44(uint64_t a1)
{
  unint64_t v2 = sub_25190C940();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FAC90(uint64_t a1)
{
  unint64_t v2 = sub_25190C6F0();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FACDC(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A9A8);
}

uint64_t sub_2518FAD00(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518FAD24, 0, 0);
}

uint64_t sub_2518FAD24()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 56;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518FADA0(uint64_t a1)
{
  unint64_t v2 = sub_251917C40();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FADEC()
{
  sub_251917C40();
  return sub_25192B600();
}

uint64_t sub_2518FAE38()
{
  uint64_t v0 = qword_269B57388;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FAE70@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B532D0, (uint64_t)qword_269B5A9A8, a1);
}

uint64_t sub_2518FAE94(uint64_t a1)
{
  unint64_t v2 = sub_25190CC98();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FAEE0(uint64_t a1)
{
  unint64_t v2 = sub_25190CA48();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FAF2C(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A9C0);
}

uint64_t sub_2518FAF50(uint64_t a1, _OWORD *a2)
{
  *(void *)(v2 + 24) = a1;
  *(_OWORD *)(v2 + 32) = *a2;
  return MEMORY[0x270FA2498](sub_2518FAF78, 0, 0);
}

uint64_t sub_2518FAF78()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_25192B740();
  uint64_t v2 = *(unsigned __int8 *)(v0 + 48);
  sub_25192B740();
  uint64_t v3 = *(void *)(v0 + 16);
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 58;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_2518FB01C@<X0>(uint64_t *a1@<X8>)
{
  return sub_251900194(&qword_269B577A0, (uint64_t (*)(uint64_t))sub_251869454, a1);
}

uint64_t sub_2518FB03C(uint64_t a1)
{
  unint64_t v2 = sub_251917BEC();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FB088()
{
  sub_251917BEC();
  return sub_25192B600();
}

uint64_t sub_2518FB0D4()
{
  uint64_t v0 = qword_269B57398;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FB10C@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B532D8, (uint64_t)qword_269B5A9C0, a1);
}

uint64_t sub_2518FB130(uint64_t a1)
{
  unint64_t v2 = sub_25190CFF0();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FB17C(uint64_t a1)
{
  unint64_t v2 = sub_25190CDA0();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FB1C8(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A9D8);
}

uint64_t sub_2518FB1EC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(_OWORD *)(v2 + 32) = *(_OWORD *)a2;
  *(void *)(v2 + 48) = *(void *)(a2 + 16);
  return MEMORY[0x270FA2498](sub_2518FB21C, 0, 0);
}

uint64_t sub_2518FB21C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_25192B740();
  uint64_t v2 = *(unsigned __int8 *)(v0 + 56);
  sub_25192B740();
  uint64_t v3 = *(void *)(v0 + 16);
  sub_25192B740();
  uint64_t v4 = *(void *)(v0 + 16);
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 60;
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_2518FB2D0@<X0>(uint64_t *a1@<X8>)
{
  return sub_251900530(&qword_269B577A0, (uint64_t (*)(uint64_t))sub_251869454, a1);
}

uint64_t sub_2518FB2F0(uint64_t a1)
{
  unint64_t v2 = sub_251917B98();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FB33C()
{
  sub_251917B98();
  return sub_25192B600();
}

uint64_t sub_2518FB388()
{
  uint64_t v0 = qword_269B573A8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FB3C0@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B532E0, (uint64_t)qword_269B5A9D8, a1);
}

uint64_t sub_2518FB3E4(uint64_t a1)
{
  unint64_t v2 = sub_25190D348();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FB430(uint64_t a1)
{
  unint64_t v2 = sub_25190D0F8();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FB47C(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5A9F0);
}

uint64_t sub_2518FB498(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518FB4BC, 0, 0);
}

uint64_t sub_2518FB4BC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 62;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518FB538(uint64_t a1)
{
  unint64_t v2 = sub_251917B44();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FB584()
{
  sub_251917B44();
  return sub_25192B600();
}

uint64_t sub_2518FB5D0()
{
  uint64_t v0 = qword_269B573B8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FB608@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B532E8, (uint64_t)qword_269B5A9F0, a1);
}

uint64_t sub_2518FB62C(uint64_t a1)
{
  unint64_t v2 = sub_25190D6A0();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FB678(uint64_t a1)
{
  unint64_t v2 = sub_25190D450();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FB6C4(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AA08);
}

uint64_t sub_2518FB6EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518FB710, 0, 0);
}

uint64_t sub_2518FB710()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 64;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518FB78C(uint64_t a1)
{
  unint64_t v2 = sub_251917AF0();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FB7D8()
{
  sub_251917AF0();
  return sub_25192B600();
}

uint64_t sub_2518FB824()
{
  uint64_t v0 = qword_269B573C8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FB85C@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B532F0, (uint64_t)qword_269B5AA08, a1);
}

uint64_t sub_2518FB880(uint64_t a1)
{
  unint64_t v2 = sub_25190D9F8();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FB8CC(uint64_t a1)
{
  unint64_t v2 = sub_25190D7A8();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FB918(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AA20);
}

uint64_t sub_2518FB93C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518FB960, 0, 0);
}

uint64_t sub_2518FB960()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 66;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518FB9DC(uint64_t a1)
{
  unint64_t v2 = sub_251917A9C();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FBA28()
{
  sub_251917A9C();
  return sub_25192B600();
}

uint64_t sub_2518FBA74()
{
  uint64_t v0 = qword_269B573D8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FBAAC@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B532F8, (uint64_t)qword_269B5AA20, a1);
}

uint64_t sub_2518FBAD0(uint64_t a1)
{
  unint64_t v2 = sub_25190DD50();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FBB1C(uint64_t a1)
{
  unint64_t v2 = sub_25190DB00();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FBB68(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AA38);
}

uint64_t sub_2518FBB8C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518FBBB0, 0, 0);
}

uint64_t sub_2518FBBB0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 68;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518FBC2C(uint64_t a1)
{
  unint64_t v2 = sub_251917A48();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FBC78()
{
  sub_251917A48();
  return sub_25192B600();
}

uint64_t sub_2518FBCC4()
{
  uint64_t v0 = qword_269B573E8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FBCFC@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53300, (uint64_t)qword_269B5AA38, a1);
}

uint64_t sub_2518FBD20(uint64_t a1)
{
  unint64_t v2 = sub_25190E0A8();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FBD6C(uint64_t a1)
{
  unint64_t v2 = sub_25190DE58();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FBDB8(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AA50);
}

uint64_t sub_2518FBDE4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518FBE08, 0, 0);
}

uint64_t sub_2518FBE08()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 70;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518FBE84(uint64_t a1)
{
  unint64_t v2 = sub_2519179F4();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FBED0()
{
  sub_2519179F4();
  return sub_25192B600();
}

uint64_t sub_2518FBF1C()
{
  uint64_t v0 = qword_269B573F8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FBF54@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53308, (uint64_t)qword_269B5AA50, a1);
}

uint64_t sub_2518FBF78(uint64_t a1)
{
  unint64_t v2 = sub_25190E400();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FBFC4(uint64_t a1)
{
  unint64_t v2 = sub_25190E1B0();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FC010(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AA68);
}

uint64_t sub_2518FC038(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518FC05C, 0, 0);
}

uint64_t sub_2518FC05C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 72;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518FC0D8(uint64_t a1)
{
  unint64_t v2 = sub_2519179A0();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FC124()
{
  sub_2519179A0();
  return sub_25192B600();
}

uint64_t sub_2518FC170()
{
  uint64_t v0 = qword_269B57408;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FC1A8@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53310, (uint64_t)qword_269B5AA68, a1);
}

uint64_t sub_2518FC1CC(uint64_t a1)
{
  unint64_t v2 = sub_25190E758();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FC218(uint64_t a1)
{
  unint64_t v2 = sub_25190E508();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FC264(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AA80);
}

uint64_t sub_2518FC288(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518FC2AC, 0, 0);
}

uint64_t sub_2518FC2AC()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 74;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518FC328(uint64_t a1)
{
  unint64_t v2 = sub_25191794C();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FC374()
{
  sub_25191794C();
  return sub_25192B600();
}

uint64_t sub_2518FC3C0()
{
  uint64_t v0 = qword_269B57418;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FC3F8@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53318, (uint64_t)qword_269B5AA80, a1);
}

uint64_t sub_2518FC41C(uint64_t a1)
{
  unint64_t v2 = sub_25190EAB0();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FC468(uint64_t a1)
{
  unint64_t v2 = sub_25190E860();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FC4B4(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AA98);
}

uint64_t sub_2518FC4D8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518FC4FC, 0, 0);
}

uint64_t sub_2518FC4FC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 76;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518FC578(uint64_t a1)
{
  unint64_t v2 = sub_2519178F8();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FC5C4()
{
  sub_2519178F8();
  return sub_25192B600();
}

uint64_t sub_2518FC610()
{
  uint64_t v0 = qword_269B57428;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FC648@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53320, (uint64_t)qword_269B5AA98, a1);
}

uint64_t sub_2518FC66C(uint64_t a1)
{
  unint64_t v2 = sub_25190EE08();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FC6B8(uint64_t a1)
{
  unint64_t v2 = sub_25190EBB8();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FC704(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AAB0);
}

uint64_t sub_2518FC728(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518FC74C, 0, 0);
}

uint64_t sub_2518FC74C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 78;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518FC7C8(uint64_t a1)
{
  unint64_t v2 = sub_2519178A4();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FC814()
{
  sub_2519178A4();
  return sub_25192B600();
}

uint64_t sub_2518FC860()
{
  uint64_t v0 = qword_269B57438;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FC898@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53328, (uint64_t)qword_269B5AAB0, a1);
}

uint64_t sub_2518FC8BC(uint64_t a1)
{
  unint64_t v2 = sub_25190F160();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FC908(uint64_t a1)
{
  unint64_t v2 = sub_25190EF10();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FC954(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AAC8);
}

uint64_t sub_2518FC97C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518FC9A0, 0, 0);
}

uint64_t sub_2518FC9A0()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 80;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518FCA1C(uint64_t a1)
{
  unint64_t v2 = sub_251917850();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FCA68()
{
  sub_251917850();
  return sub_25192B600();
}

uint64_t sub_2518FCAB4()
{
  uint64_t v0 = qword_269B57448;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FCAEC@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53330, (uint64_t)qword_269B5AAC8, a1);
}

uint64_t sub_2518FCB10(uint64_t a1)
{
  unint64_t v2 = sub_25190F4B8();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FCB5C(uint64_t a1)
{
  unint64_t v2 = sub_25190F268();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FCBA8(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AAE0);
}

uint64_t sub_2518FCBD0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518FCBF4, 0, 0);
}

uint64_t sub_2518FCBF4()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 82;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518FCC70(uint64_t a1)
{
  unint64_t v2 = sub_2519177FC();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FCCBC()
{
  sub_2519177FC();
  return sub_25192B600();
}

uint64_t sub_2518FCD08()
{
  uint64_t v0 = qword_269B57458;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FCD40@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53338, (uint64_t)qword_269B5AAE0, a1);
}

uint64_t sub_2518FCD64(uint64_t a1)
{
  unint64_t v2 = sub_25190F810();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FCDB0(uint64_t a1)
{
  unint64_t v2 = sub_25190F5C0();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FCDFC(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AAF8);
}

uint64_t sub_2518FCE24(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518FCE48, 0, 0);
}

uint64_t sub_2518FCE48()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 84;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518FCEC4(uint64_t a1)
{
  unint64_t v2 = sub_2519177A8();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FCF10()
{
  sub_2519177A8();
  return sub_25192B600();
}

uint64_t sub_2518FCF5C()
{
  uint64_t v0 = qword_269B57468;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FCF94@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53340, (uint64_t)qword_269B5AAF8, a1);
}

uint64_t sub_2518FCFB8(uint64_t a1)
{
  unint64_t v2 = sub_25190FB68();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FD004(uint64_t a1)
{
  unint64_t v2 = sub_25190F918();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FD050(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AB10);
}

uint64_t sub_2518FD07C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518FD0A0, 0, 0);
}

uint64_t sub_2518FD0A0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 86;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518FD11C(uint64_t a1)
{
  unint64_t v2 = sub_251917754();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FD168()
{
  sub_251917754();
  return sub_25192B600();
}

uint64_t sub_2518FD1B4()
{
  uint64_t v0 = qword_269B57478;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FD1EC@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53348, (uint64_t)qword_269B5AB10, a1);
}

uint64_t sub_2518FD210(uint64_t a1)
{
  unint64_t v2 = sub_25190FEC0();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FD25C(uint64_t a1)
{
  unint64_t v2 = sub_25190FC70();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FD2A8(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AB28);
}

uint64_t sub_2518FD2C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518FD2E8, 0, 0);
}

uint64_t sub_2518FD2E8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 88;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518FD364(uint64_t a1)
{
  unint64_t v2 = sub_251917700();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FD3B0()
{
  sub_251917700();
  return sub_25192B600();
}

uint64_t sub_2518FD3FC()
{
  uint64_t v0 = qword_269B57488;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FD434@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53350, (uint64_t)qword_269B5AB28, a1);
}

uint64_t sub_2518FD458(uint64_t a1)
{
  unint64_t v2 = sub_251910218();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FD4A4(uint64_t a1)
{
  unint64_t v2 = sub_25190FFC8();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FD4F0(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AB40);
}

uint64_t sub_2518FD514(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518FD538, 0, 0);
}

uint64_t sub_2518FD538()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 90;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518FD5B4(uint64_t a1)
{
  unint64_t v2 = sub_2519176AC();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FD600()
{
  sub_2519176AC();
  return sub_25192B600();
}

uint64_t sub_2518FD64C()
{
  uint64_t v0 = qword_269B57498;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FD684@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53358, (uint64_t)qword_269B5AB40, a1);
}

uint64_t sub_2518FD6A8(uint64_t a1)
{
  unint64_t v2 = sub_251910570();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FD6F4(uint64_t a1)
{
  unint64_t v2 = sub_251910320();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FD740(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AB58);
}

uint64_t sub_2518FD764(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518FD788, 0, 0);
}

uint64_t sub_2518FD788()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 92;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518FD804@<X0>(uint64_t *a1@<X8>)
{
  return sub_2518FFE38(&qword_269B57718, (uint64_t (*)(uint64_t))sub_2518698B0, a1);
}

uint64_t sub_2518FD82C(uint64_t a1)
{
  unint64_t v2 = sub_251917658();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FD878()
{
  sub_251917658();
  return sub_25192B600();
}

uint64_t sub_2518FD8C4()
{
  uint64_t v0 = qword_269B574A8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FD8FC@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53360, (uint64_t)qword_269B5AB58, a1);
}

uint64_t sub_2518FD920(uint64_t a1)
{
  unint64_t v2 = sub_2519108C8();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FD96C(uint64_t a1)
{
  unint64_t v2 = sub_251910678();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FD9B8(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AB70);
}

uint64_t sub_2518FD9E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518FDA08, 0, 0);
}

uint64_t sub_2518FDA08()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 94;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518FDA84(uint64_t a1)
{
  unint64_t v2 = sub_251917604();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FDAD0()
{
  sub_251917604();
  return sub_25192B600();
}

uint64_t sub_2518FDB1C()
{
  uint64_t v0 = qword_269B574B8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FDB54@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53368, (uint64_t)qword_269B5AB70, a1);
}

uint64_t sub_2518FDB78(uint64_t a1)
{
  unint64_t v2 = sub_251910C20();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FDBC4(uint64_t a1)
{
  unint64_t v2 = sub_2519109D0();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FDC10(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AB88);
}

uint64_t sub_2518FDC28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return MEMORY[0x270FA2498](sub_2518FDC50, 0, 0);
}

uint64_t sub_2518FDC50()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_25192B740();
  uint64_t v2 = *(unsigned __int8 *)(v0 + 25);
  sub_25192B740();
  uint64_t v3 = *(void *)(v0 + 16);
  sub_25192B740();
  uint64_t v4 = *(void *)(v0 + 16);
  sub_25192B740();
  uint64_t v5 = *(void *)(v0 + 16);
  char v6 = *(unsigned char *)(v0 + 24) | 0x60;
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  *(unsigned char *)(v1 + 32) = v6;
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_2518FDD24(uint64_t a1, long long *a2)
{
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  long long v6 = *a2;
  *(_OWORD *)(v5 + 56) = a2[1];
  *(void *)(v5 + 8) = sub_2517EDE20;
  *(_OWORD *)(v5 + 40) = v6;
  *(void *)(v5 + 32) = a1;
  return MEMORY[0x270FA2498](sub_2518FDC50, 0, 0);
}

uint64_t sub_2518FDDE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_251903B18();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t sub_2518FDE0C(uint64_t a1)
{
  unint64_t v2 = sub_2519175B0();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FDE58()
{
  sub_2519175B0();
  return sub_25192B600();
}

uint64_t sub_2518FDEA4()
{
  uint64_t v0 = *(void *)aAttributeRvc;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FDEDC@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53370, (uint64_t)qword_269B5AB88, a1);
}

uint64_t sub_2518FDF00(uint64_t a1)
{
  unint64_t v2 = sub_251910F78();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FDF4C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B539B8);
  MEMORY[0x270FA5388](v0 - 8);
  unint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B539C0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25192BC50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  sub_25192BC30();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  uint64_t v8 = sub_25192B920();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
  return sub_25192B940();
}

uint64_t sub_2518FE10C(uint64_t a1)
{
  unint64_t v2 = sub_251910D28();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FE158(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5ABA0);
}

uint64_t sub_2518FE180(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518FE1A4, 0, 0);
}

uint64_t sub_2518FE1A4()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 98;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518FE220(uint64_t a1)
{
  unint64_t v2 = sub_25191755C();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FE26C()
{
  sub_25191755C();
  return sub_25192B600();
}

uint64_t sub_2518FE2B8()
{
  uint64_t v0 = qword_269B574D8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FE2F0@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53378, (uint64_t)qword_269B5ABA0, a1);
}

uint64_t sub_2518FE314(uint64_t a1)
{
  unint64_t v2 = sub_2519112D0();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FE360(uint64_t a1)
{
  unint64_t v2 = sub_251911080();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FE3AC(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5ABB8);
}

uint64_t sub_2518FE3D8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518FE3FC, 0, 0);
}

uint64_t sub_2518FE3FC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 100;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518FE478(uint64_t a1)
{
  unint64_t v2 = sub_251917508();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FE4C4()
{
  sub_251917508();
  return sub_25192B600();
}

uint64_t sub_2518FE510()
{
  uint64_t v0 = qword_269B574E8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FE548@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53380, (uint64_t)qword_269B5ABB8, a1);
}

uint64_t sub_2518FE56C(uint64_t a1)
{
  unint64_t v2 = sub_251911628();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FE5B8(uint64_t a1)
{
  unint64_t v2 = sub_2519113D8();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FE604(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5ABD0);
}

uint64_t sub_2518FE628(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518FE64C, 0, 0);
}

uint64_t sub_2518FE64C()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 102;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518FE6C8(uint64_t a1)
{
  unint64_t v2 = sub_2519174B4();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FE714()
{
  sub_2519174B4();
  return sub_25192B600();
}

uint64_t sub_2518FE760()
{
  uint64_t v0 = qword_269B574F8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FE798@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53388, (uint64_t)qword_269B5ABD0, a1);
}

uint64_t sub_2518FE7BC(uint64_t a1)
{
  unint64_t v2 = sub_251911980();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FE808(uint64_t a1)
{
  unint64_t v2 = sub_251911730();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FE854(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5ABE8);
}

uint64_t sub_2518FE878(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518FE89C, 0, 0);
}

uint64_t sub_2518FE89C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 104;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518FE918(uint64_t a1)
{
  unint64_t v2 = sub_251917460();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FE964()
{
  sub_251917460();
  return sub_25192B600();
}

uint64_t sub_2518FE9B0()
{
  uint64_t v0 = qword_269B57508;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FE9E8@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53390, (uint64_t)qword_269B5ABE8, a1);
}

uint64_t sub_2518FEA0C(uint64_t a1)
{
  unint64_t v2 = sub_251911CD8();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FEA58(uint64_t a1)
{
  unint64_t v2 = sub_251911A88();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FEAA4(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AC00);
}

uint64_t sub_2518FEAC8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518FEAEC, 0, 0);
}

uint64_t sub_2518FEAEC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 106;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518FEB68@<X0>(uint64_t *a1@<X8>)
{
  return sub_2518FFE38(&qword_269B576D0, (uint64_t (*)(uint64_t))sub_251866964, a1);
}

uint64_t sub_2518FEB90(uint64_t a1)
{
  unint64_t v2 = sub_25191740C();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FEBDC()
{
  sub_25191740C();
  return sub_25192B600();
}

uint64_t sub_2518FEC28()
{
  uint64_t v0 = qword_269B57518;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FEC60@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B53398, (uint64_t)qword_269B5AC00, a1);
}

uint64_t sub_2518FEC84(uint64_t a1)
{
  unint64_t v2 = sub_251912030();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FECD0(uint64_t a1)
{
  unint64_t v2 = sub_251911DE0();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FED1C(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AC18);
}

uint64_t sub_2518FED48(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518FED6C, 0, 0);
}

uint64_t sub_2518FED6C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 108;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518FEDE8(uint64_t a1)
{
  unint64_t v2 = sub_2519173B8();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FEE34()
{
  sub_2519173B8();
  return sub_25192B600();
}

uint64_t sub_2518FEE80()
{
  uint64_t v0 = qword_269B57528;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FEEB8@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B533A0, (uint64_t)qword_269B5AC18, a1);
}

uint64_t sub_2518FEEDC(uint64_t a1)
{
  unint64_t v2 = sub_251912388();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FEF28(uint64_t a1)
{
  unint64_t v2 = sub_251912138();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FEF74(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AC30);
}

uint64_t sub_2518FEF98(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518FEFBC, 0, 0);
}

uint64_t sub_2518FEFBC()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 110;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518FF038(uint64_t a1)
{
  unint64_t v2 = sub_251917364();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FF084()
{
  sub_251917364();
  return sub_25192B600();
}

uint64_t sub_2518FF0D0()
{
  uint64_t v0 = qword_269B57538;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FF108@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B533A8, (uint64_t)qword_269B5AC30, a1);
}

uint64_t sub_2518FF12C(uint64_t a1)
{
  unint64_t v2 = sub_2519126E0();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FF178(uint64_t a1)
{
  unint64_t v2 = sub_251912490();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FF1C4(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AC48);
}

uint64_t sub_2518FF1F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518FF214, 0, 0);
}

uint64_t sub_2518FF214()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 112;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518FF290(uint64_t a1)
{
  unint64_t v2 = sub_251917310();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FF2DC()
{
  sub_251917310();
  return sub_25192B600();
}

uint64_t sub_2518FF328()
{
  uint64_t v0 = qword_269B57548;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FF360@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B533B0, (uint64_t)qword_269B5AC48, a1);
}

uint64_t sub_2518FF384(uint64_t a1)
{
  unint64_t v2 = sub_251912A38();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FF3D0(uint64_t a1)
{
  unint64_t v2 = sub_2519127E8();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FF41C(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AC60);
}

uint64_t sub_2518FF448(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518FF46C, 0, 0);
}

uint64_t sub_2518FF46C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 114;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518FF4E8(uint64_t a1)
{
  unint64_t v2 = sub_2519172BC();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FF534()
{
  sub_2519172BC();
  return sub_25192B600();
}

uint64_t sub_2518FF580()
{
  uint64_t v0 = qword_269B57558;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FF5B8@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B533B8, (uint64_t)qword_269B5AC60, a1);
}

uint64_t sub_2518FF5DC(uint64_t a1)
{
  unint64_t v2 = sub_251912D90();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FF628(uint64_t a1)
{
  unint64_t v2 = sub_251912B40();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FF674(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AC78);
}

uint64_t sub_2518FF6A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518FF6C4, 0, 0);
}

uint64_t sub_2518FF6C4()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 116;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518FF740(uint64_t a1)
{
  unint64_t v2 = sub_251917268();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FF78C()
{
  sub_251917268();
  return sub_25192B600();
}

uint64_t sub_2518FF7D8()
{
  uint64_t v0 = qword_269B57568;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FF810@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B533C0, (uint64_t)qword_269B5AC78, a1);
}

uint64_t sub_2518FF834(uint64_t a1)
{
  unint64_t v2 = sub_2519130E8();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FF880(uint64_t a1)
{
  unint64_t v2 = sub_251912E98();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FF8CC(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AC90);
}

uint64_t sub_2518FF8F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518FF914, 0, 0);
}

uint64_t sub_2518FF914()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 118;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518FF990(uint64_t a1)
{
  unint64_t v2 = sub_251917214();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FF9DC()
{
  sub_251917214();
  return sub_25192B600();
}

uint64_t sub_2518FFA28()
{
  uint64_t v0 = qword_269B57578;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FFA60@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B533C8, (uint64_t)qword_269B5AC90, a1);
}

uint64_t sub_2518FFA84(uint64_t a1)
{
  unint64_t v2 = sub_251913440();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FFAD0(uint64_t a1)
{
  unint64_t v2 = sub_2519131F0();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FFB1C(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5ACA8);
}

uint64_t sub_2518FFB40(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_2518FFB64, 0, 0);
}

uint64_t sub_2518FFB64()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 120;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2518FFBE0(uint64_t a1)
{
  unint64_t v2 = sub_2519171C0();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FFC2C()
{
  sub_2519171C0();
  return sub_25192B600();
}

uint64_t sub_2518FFC78()
{
  uint64_t v0 = qword_269B57588;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FFCB0@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B533D0, (uint64_t)qword_269B5ACA8, a1);
}

uint64_t sub_2518FFCD4(uint64_t a1)
{
  unint64_t v2 = sub_251913798();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2518FFD20(uint64_t a1)
{
  unint64_t v2 = sub_251913548();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2518FFD6C(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5ACC0);
}

uint64_t sub_2518FFD98(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2518FFDBC, 0, 0);
}

uint64_t sub_2518FFDBC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25192B740();
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 122;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2518FFE38@<X0>(uint64_t *a1@<X2>, uint64_t (*a2)(uint64_t)@<X5>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_25192BC50();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v9 = sub_25192BC30();
  uint64_t v10 = a2(v9);
  uint64_t result = MEMORY[0x2533A4F60](v8, v10);
  *a3 = result;
  return result;
}

uint64_t sub_2518FFEF8(uint64_t a1)
{
  unint64_t v2 = sub_25191716C();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2518FFF44()
{
  sub_25191716C();
  return sub_25192B600();
}

uint64_t sub_2518FFF90()
{
  uint64_t v0 = qword_269B57598;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2518FFFC8@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B533D8, (uint64_t)qword_269B5ACC0, a1);
}

uint64_t sub_2518FFFEC(uint64_t a1)
{
  unint64_t v2 = sub_251913AF0();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_251900038(uint64_t a1)
{
  unint64_t v2 = sub_2519138A0();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_251900084(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5ACD8);
}

uint64_t sub_2519000A8(uint64_t a1, _OWORD *a2)
{
  *(void *)(v2 + 24) = a1;
  *(_OWORD *)(v2 + 32) = *a2;
  return MEMORY[0x270FA2498](sub_2519000D0, 0, 0);
}

uint64_t sub_2519000D0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_25192B740();
  uint64_t v2 = *(unsigned __int8 *)(v0 + 48);
  sub_25192B740();
  uint64_t v3 = *(void *)(v0 + 16);
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 124;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_251900174@<X0>(uint64_t *a1@<X8>)
{
  return sub_251900194(&qword_269B57660, (uint64_t (*)(uint64_t))sub_251868FF8, a1);
}

uint64_t sub_251900194@<X0>(uint64_t *a1@<X2>, uint64_t (*a2)(uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_25192BC50();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v9 = sub_25192BC30();
  uint64_t v10 = a2(v9);
  uint64_t v11 = MEMORY[0x2533A4F60](v8, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
  sub_25192BC30();
  uint64_t result = MEMORY[0x2533A4FD0](v8);
  *a3 = v11;
  a3[1] = result;
  return result;
}

uint64_t sub_25190027C(uint64_t a1)
{
  unint64_t v2 = sub_251917118();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2519002C8()
{
  sub_251917118();
  return sub_25192B600();
}

uint64_t sub_251900314()
{
  uint64_t v0 = qword_269B575A8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_25190034C@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B533E0, (uint64_t)qword_269B5ACD8, a1);
}

uint64_t sub_251900370(uint64_t a1)
{
  unint64_t v2 = sub_251913E48();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2519003BC(uint64_t a1)
{
  unint64_t v2 = sub_251913BF8();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_251900408(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5ACF0);
}

uint64_t sub_25190042C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(_OWORD *)(v2 + 32) = *(_OWORD *)a2;
  *(void *)(v2 + 48) = *(void *)(a2 + 16);
  return MEMORY[0x270FA2498](sub_25190045C, 0, 0);
}

uint64_t sub_25190045C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_25192B740();
  uint64_t v2 = *(unsigned __int8 *)(v0 + 56);
  sub_25192B740();
  uint64_t v3 = *(void *)(v0 + 16);
  sub_25192B740();
  uint64_t v4 = *(void *)(v0 + 16);
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 126;
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_251900510@<X0>(uint64_t *a1@<X8>)
{
  return sub_251900530(&qword_269B57660, (uint64_t (*)(uint64_t))sub_251868FF8, a1);
}

uint64_t sub_251900530@<X0>(uint64_t *a1@<X2>, uint64_t (*a2)(uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_25192BC50();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v9 = sub_25192BC30();
  uint64_t v10 = a2(v9);
  uint64_t v11 = MEMORY[0x2533A4F60](v8, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B57648);
  sub_25192BC30();
  uint64_t v12 = MEMORY[0x2533A4FD0](v8);
  sub_25192BC30();
  uint64_t result = MEMORY[0x2533A4FD0](v8);
  *a3 = v11;
  a3[1] = v12;
  a3[2] = result;
  return result;
}

uint64_t sub_251900658(uint64_t a1)
{
  unint64_t v2 = sub_2519170C4();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2519006A4()
{
  sub_2519170C4();
  return sub_25192B600();
}

uint64_t sub_2519006F0()
{
  uint64_t v0 = qword_269B575B8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_251900728@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B533E8, (uint64_t)qword_269B5ACF0, a1);
}

uint64_t sub_25190074C(uint64_t a1)
{
  unint64_t v2 = sub_2519141A0();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_251900798(uint64_t a1)
{
  unint64_t v2 = sub_251913F50();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_2519007E4(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AD08);
}

uint64_t sub_251900808(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_25190082C, 0, 0);
}

uint64_t sub_25190082C()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 0x80;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2519008A8(uint64_t a1)
{
  unint64_t v2 = sub_251917070();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_2519008F4()
{
  sub_251917070();
  return sub_25192B600();
}

uint64_t sub_251900940()
{
  uint64_t v0 = qword_269B575C8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_251900978@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B533F0, (uint64_t)qword_269B5AD08, a1);
}

uint64_t sub_25190099C(uint64_t a1)
{
  unint64_t v2 = sub_2519144F8();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_2519009E8(uint64_t a1)
{
  unint64_t v2 = sub_2519142A8();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t sub_251900A34(uint64_t a1)
{
  return sub_2517E01E4(a1, qword_269B5AD20);
}

uint64_t sub_251900A58(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_251900A7C, 0, 0);
}

uint64_t sub_251900A7C()
{
  uint64_t v1 = v0[3];
  sub_25192B740();
  *(void *)uint64_t v1 = v0[2];
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = -126;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_251900AF8@<X0>(uint64_t *a1@<X2>, uint64_t (*a2)(char *)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_25192BC50();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  sub_25192BC30();
  uint64_t result = a2(v8);
  *a3 = result;
  return result;
}

uint64_t sub_251900B9C(uint64_t a1)
{
  unint64_t v2 = sub_25191701C();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t sub_251900BE8()
{
  sub_25191701C();
  return sub_25192B600();
}

uint64_t sub_251900C34()
{
  uint64_t v0 = qword_269B575D8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_251900C6C@<X0>(uint64_t a1@<X8>)
{
  return sub_2517E04C8(&qword_269B533F8, (uint64_t)qword_269B5AD20, a1);
}

uint64_t sub_251900C90(uint64_t a1)
{
  unint64_t v2 = sub_251914850();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_251900CDC(uint64_t a1)
{
  unint64_t v2 = sub_251914600();
  return MEMORY[0x270EE1D98](a1, v2);
}

unint64_t sub_251900D34()
{
  unint64_t result = qword_269B57650;
  if (!qword_269B57650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57650);
  }
  return result;
}

unint64_t sub_251900D88()
{
  unint64_t result = qword_269B57658;
  if (!qword_269B57658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57658);
  }
  return result;
}

unint64_t sub_251900DDC()
{
  unint64_t result = qword_269B57668;
  if (!qword_269B57668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57668);
  }
  return result;
}

unint64_t sub_251900E30()
{
  unint64_t result = qword_269B57670;
  if (!qword_269B57670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57670);
  }
  return result;
}

unint64_t sub_251900E84()
{
  unint64_t result = qword_269B57678;
  if (!qword_269B57678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57678);
  }
  return result;
}

unint64_t sub_251900ED8()
{
  unint64_t result = qword_269B57680;
  if (!qword_269B57680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57680);
  }
  return result;
}

unint64_t sub_251900F2C()
{
  unint64_t result = qword_269B57690;
  if (!qword_269B57690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57690);
  }
  return result;
}

unint64_t sub_251900F80()
{
  unint64_t result = qword_269B57698;
  if (!qword_269B57698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57698);
  }
  return result;
}

unint64_t sub_251900FD4()
{
  unint64_t result = qword_269B576A8;
  if (!qword_269B576A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B576A8);
  }
  return result;
}

unint64_t sub_251901028()
{
  unint64_t result = qword_269B576B0;
  if (!qword_269B576B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B576B0);
  }
  return result;
}

unint64_t sub_25190107C()
{
  unint64_t result = qword_269B576B8;
  if (!qword_269B576B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B576B8);
  }
  return result;
}

unint64_t sub_2519010D0()
{
  unint64_t result = qword_269B576C8;
  if (!qword_269B576C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B576C8);
  }
  return result;
}

unint64_t sub_251901124()
{
  unint64_t result = qword_269B576D8;
  if (!qword_269B576D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B576D8);
  }
  return result;
}

unint64_t sub_251901178()
{
  unint64_t result = qword_269B576E8;
  if (!qword_269B576E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B576E8);
  }
  return result;
}

unint64_t sub_2519011CC()
{
  unint64_t result = qword_269B576F0;
  if (!qword_269B576F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B576F0);
  }
  return result;
}

unint64_t sub_251901220()
{
  unint64_t result = qword_269B576F8;
  if (!qword_269B576F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B576F8);
  }
  return result;
}

unint64_t sub_251901274()
{
  unint64_t result = qword_269B57700;
  if (!qword_269B57700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57700);
  }
  return result;
}

uint64_t sub_2519012C8(void **a1)
{
  uint64_t v2 = *(void *)(sub_25192CF70() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_251902A24(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_251901370(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_251901370(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v151 = sub_25192CF70();
  uint64_t v4 = *(void **)(v151 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v151);
  unint64_t v138 = (char *)&v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  unint64_t v152 = (char *)&v132 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  unint64_t v147 = (char *)&v132 - v10;
  MEMORY[0x270FA5388](v9);
  unint64_t v148 = (char *)&v132 - v11;
  uint64_t v12 = a1[1];
  uint64_t result = sub_25192D7E0();
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_144;
    }
    if (v12) {
      return sub_251901EFC(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_152;
  }
  uint64_t v134 = result;
  unint64_t v141 = v4;
  if (v12 < 2)
  {
    uint64_t v19 = (char *)MEMORY[0x263F8EE78];
    unint64_t v140 = MEMORY[0x263F8EE78]
         + ((*((unsigned __int8 *)v4 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v4 + 80));
    uint64_t v133 = MEMORY[0x263F8EE78];
    if (v12 != 1)
    {
      unint64_t v22 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_109:
      if (v22 >= 2)
      {
        uint64_t v125 = *a1;
        do
        {
          unint64_t v126 = v22 - 2;
          if (v22 < 2) {
            goto LABEL_139;
          }
          if (!v125) {
            goto LABEL_151;
          }
          unint64_t v127 = v19;
          uint64_t v128 = *(void *)&v19[16 * v126 + 32];
          uint64_t v129 = *(void *)&v19[16 * v22 + 24];
          sub_2519021EC(v125 + v141[9] * v128, v125 + v141[9] * *(void *)&v19[16 * v22 + 16], v125 + v141[9] * v129, v140);
          if (v2) {
            break;
          }
          if (v129 < v128) {
            goto LABEL_140;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v127 = sub_251902A10((uint64_t)v19);
          }
          if (v126 >= *((void *)v127 + 2)) {
            goto LABEL_141;
          }
          unint64_t v130 = &v127[16 * v126 + 32];
          *(void *)unint64_t v130 = v128;
          *((void *)v130 + 1) = v129;
          unint64_t v131 = *((void *)v127 + 2);
          if (v22 > v131) {
            goto LABEL_142;
          }
          uint64_t v19 = v127;
          memmove(&v127[16 * v22 + 16], &v127[16 * v22 + 32], 16 * (v131 - v22));
          *((void *)v127 + 2) = v131 - 1;
          unint64_t v22 = v131 - 1;
        }
        while (v131 > 2);
      }
LABEL_120:
      swift_bridgeObjectRelease();
      *(void *)(v133 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v15 = 1;
  }
  else
  {
    uint64_t v15 = v12;
    uint64_t v16 = v14 >> 1;
    uint64_t v17 = sub_25192D400();
    *(void *)(v17 + 16) = v16;
    uint64_t v4 = v141;
    unint64_t v18 = (*((unsigned __int8 *)v4 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v4 + 80);
    uint64_t v133 = v17;
    unint64_t v140 = v17 + v18;
  }
  uint64_t v20 = 0;
  unint64_t v145 = (void (**)(char *, uint64_t))(v4 + 1);
  unint64_t v146 = v4 + 2;
  unint64_t v156 = (void (**)(char *, uint64_t, uint64_t))(v4 + 4);
  uint64_t v19 = (char *)MEMORY[0x263F8EE78];
  unint64_t v149 = a1;
  uint64_t v21 = v15;
  while (1)
  {
    uint64_t v23 = v20;
    uint64_t v24 = v20 + 1;
    unint64_t v136 = v19;
    if (v20 + 1 >= v21)
    {
      uint64_t v34 = v20 + 1;
      uint64_t v44 = v141;
    }
    else
    {
      uint64_t v25 = *a1;
      uint64_t v26 = v20;
      uint64_t v139 = v20;
      uint64_t v157 = v141[9];
      uint64_t v27 = v157;
      uint64_t v143 = v25;
      uint64_t v28 = (void (*)(char *, uint64_t, uint64_t))v141[2];
      uint64_t v29 = v151;
      uint64_t v155 = v21;
      v28(v148, v25 + v157 * v24, v151);
      uint64_t v30 = v25 + v27 * v26;
      uint64_t v31 = v147;
      v28(v147, v30, v29);
      uint64_t v32 = v148;
      int v154 = sub_25192CF60();
      LODWORD(v153) = sub_25192CF60();
      uint64_t v33 = (void (*)(char *, uint64_t))v141[1];
      v33(v31, v29);
      v33(v32, v29);
      uint64_t v21 = v155;
      uint64_t v34 = v139 + 2;
      if (v139 + 2 >= v155)
      {
        uint64_t v44 = v141;
      }
      else
      {
        uint64_t v137 = v2;
        uint64_t v150 = v157 * v24;
        uint64_t v35 = v143;
        uint64_t v36 = v139 + 2;
        uint64_t v144 = v157 * (v139 + 2);
        uint64_t v37 = v151;
        while (1)
        {
          int v38 = (unsigned __int16)v154 < (unsigned __int16)v153;
          uint64_t v39 = v148;
          v28(v148, v35 + v144, v37);
          uint64_t v40 = v147;
          v28(v147, v35 + v150, v37);
          unsigned int v41 = (unsigned __int16)sub_25192CF60();
          BOOL v42 = v41 >= (unsigned __int16)sub_25192CF60();
          uint64_t v37 = v151;
          int v43 = v42;
          v33(v40, v151);
          v33(v39, v37);
          if (v38 == v43) {
            break;
          }
          v35 += v157;
          ++v36;
          uint64_t v21 = v155;
          if (v155 == v36)
          {
            uint64_t v34 = v155;
            uint64_t v2 = v137;
            uint64_t v44 = v141;
            a1 = v149;
            goto LABEL_28;
          }
        }
        uint64_t v2 = v137;
        uint64_t v44 = v141;
        a1 = v149;
        uint64_t v34 = v36;
        uint64_t v21 = v155;
      }
LABEL_28:
      uint64_t v23 = v139;
      if ((unsigned __int16)v154 < (unsigned __int16)v153)
      {
        if (v34 < v139) {
          goto LABEL_145;
        }
        if (v139 < v34)
        {
          uint64_t v45 = 0;
          uint64_t v46 = v157 * (v34 - 1);
          uint64_t v47 = v34 * v157;
          uint64_t v48 = v34;
          uint64_t v49 = v139;
          uint64_t v50 = v139 * v157;
          uint64_t v51 = v157;
          uint64_t v150 = v48;
          do
          {
            if (v49 != v48 + v45 - 1)
            {
              if (!v143) {
                goto LABEL_150;
              }
              uint64_t v137 = v2;
              unint64_t v53 = v143 + v50;
              uint64_t v54 = v143 + v46;
              uint64_t v55 = v143;
              uint64_t v56 = *v156;
              (*v156)(v138, v143 + v50, v151);
              if (v50 < v46 || v53 >= v55 + v47)
              {
                uint64_t v52 = v151;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v52 = v151;
                if (v50 != v46) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              v56((char *)v54, (uint64_t)v138, v52);
              uint64_t v44 = v141;
              uint64_t v2 = v137;
              uint64_t v51 = v157;
            }
            ++v49;
            --v45;
            uint64_t v48 = v150;
            v46 -= v51;
            v47 -= v51;
            v50 += v51;
          }
          while (v49 < v150 + v45);
          a1 = v149;
          uint64_t v34 = v150;
          uint64_t v23 = v139;
          uint64_t v21 = v155;
        }
      }
    }
    if (v34 < v21)
    {
      if (__OFSUB__(v34, v23)) {
        goto LABEL_143;
      }
      if (v34 - v23 < v134) {
        break;
      }
    }
LABEL_60:
    if (v34 < v23) {
      goto LABEL_138;
    }
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v19 = v136;
    }
    else {
      uint64_t v19 = sub_2519027D4(0, *((void *)v136 + 2) + 1, 1, v136);
    }
    unint64_t v76 = *((void *)v19 + 2);
    unint64_t v75 = *((void *)v19 + 3);
    unint64_t v22 = v76 + 1;
    if (v76 >= v75 >> 1) {
      uint64_t v19 = sub_2519027D4((char *)(v75 > 1), v76 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v22;
    uint64_t v77 = v19 + 32;
    uint64_t v78 = &v19[16 * v76 + 32];
    *(void *)uint64_t v78 = v23;
    *((void *)v78 + 1) = v34;
    uint64_t v150 = v34;
    if (v76)
    {
      while (1)
      {
        unint64_t v79 = v22 - 1;
        if (v22 >= 4)
        {
          uint64_t v84 = &v77[16 * v22];
          uint64_t v85 = *((void *)v84 - 8);
          uint64_t v86 = *((void *)v84 - 7);
          BOOL v90 = __OFSUB__(v86, v85);
          uint64_t v87 = v86 - v85;
          if (v90) {
            goto LABEL_127;
          }
          uint64_t v89 = *((void *)v84 - 6);
          uint64_t v88 = *((void *)v84 - 5);
          BOOL v90 = __OFSUB__(v88, v89);
          uint64_t v82 = v88 - v89;
          char v83 = v90;
          if (v90) {
            goto LABEL_128;
          }
          unint64_t v91 = v22 - 2;
          uint64_t v92 = &v77[16 * v22 - 32];
          uint64_t v94 = *(void *)v92;
          uint64_t v93 = *((void *)v92 + 1);
          BOOL v90 = __OFSUB__(v93, v94);
          uint64_t v95 = v93 - v94;
          if (v90) {
            goto LABEL_130;
          }
          BOOL v90 = __OFADD__(v82, v95);
          uint64_t v96 = v82 + v95;
          if (v90) {
            goto LABEL_133;
          }
          if (v96 >= v87)
          {
            unint64_t v114 = &v77[16 * v79];
            uint64_t v116 = *(void *)v114;
            uint64_t v115 = *((void *)v114 + 1);
            BOOL v90 = __OFSUB__(v115, v116);
            uint64_t v117 = v115 - v116;
            if (v90) {
              goto LABEL_137;
            }
            BOOL v107 = v82 < v117;
            goto LABEL_97;
          }
        }
        else
        {
          if (v22 != 3)
          {
            uint64_t v108 = *((void *)v19 + 4);
            uint64_t v109 = *((void *)v19 + 5);
            BOOL v90 = __OFSUB__(v109, v108);
            uint64_t v101 = v109 - v108;
            char v102 = v90;
            goto LABEL_91;
          }
          uint64_t v81 = *((void *)v19 + 4);
          uint64_t v80 = *((void *)v19 + 5);
          BOOL v90 = __OFSUB__(v80, v81);
          uint64_t v82 = v80 - v81;
          char v83 = v90;
        }
        if (v83) {
          goto LABEL_129;
        }
        unint64_t v91 = v22 - 2;
        uint64_t v97 = &v77[16 * v22 - 32];
        uint64_t v99 = *(void *)v97;
        uint64_t v98 = *((void *)v97 + 1);
        BOOL v100 = __OFSUB__(v98, v99);
        uint64_t v101 = v98 - v99;
        char v102 = v100;
        if (v100) {
          goto LABEL_132;
        }
        unint64_t v103 = &v77[16 * v79];
        uint64_t v105 = *(void *)v103;
        uint64_t v104 = *((void *)v103 + 1);
        BOOL v90 = __OFSUB__(v104, v105);
        uint64_t v106 = v104 - v105;
        if (v90) {
          goto LABEL_135;
        }
        if (__OFADD__(v101, v106)) {
          goto LABEL_136;
        }
        if (v101 + v106 >= v82)
        {
          BOOL v107 = v82 < v106;
LABEL_97:
          if (v107) {
            unint64_t v79 = v91;
          }
          goto LABEL_99;
        }
LABEL_91:
        if (v102) {
          goto LABEL_131;
        }
        unint64_t v110 = &v77[16 * v79];
        uint64_t v112 = *(void *)v110;
        uint64_t v111 = *((void *)v110 + 1);
        BOOL v90 = __OFSUB__(v111, v112);
        uint64_t v113 = v111 - v112;
        if (v90) {
          goto LABEL_134;
        }
        if (v113 < v101) {
          goto LABEL_15;
        }
LABEL_99:
        unint64_t v118 = v79 - 1;
        if (v79 - 1 >= v22)
        {
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
          goto LABEL_147;
        }
        uint64_t v119 = *a1;
        if (!*a1) {
          goto LABEL_149;
        }
        unint64_t v120 = &v77[16 * v118];
        uint64_t v121 = *(void *)v120;
        unint64_t v122 = &v77[16 * v79];
        uint64_t v123 = *((void *)v122 + 1);
        sub_2519021EC(v119 + v141[9] * *(void *)v120, v119 + v141[9] * *(void *)v122, v119 + v141[9] * v123, v140);
        if (v2) {
          goto LABEL_120;
        }
        if (v123 < v121) {
          goto LABEL_124;
        }
        if (v79 > *((void *)v19 + 2)) {
          goto LABEL_125;
        }
        *(void *)unint64_t v120 = v121;
        *(void *)&v77[16 * v118 + 8] = v123;
        unint64_t v124 = *((void *)v19 + 2);
        if (v79 >= v124) {
          goto LABEL_126;
        }
        unint64_t v22 = v124 - 1;
        memmove(&v77[16 * v79], v122 + 16, 16 * (v124 - 1 - v79));
        *((void *)v19 + 2) = v124 - 1;
        a1 = v149;
        if (v124 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v22 = 1;
LABEL_15:
    uint64_t v21 = a1[1];
    uint64_t v20 = v150;
    if (v150 >= v21) {
      goto LABEL_109;
    }
  }
  if (__OFADD__(v23, v134)) {
    goto LABEL_146;
  }
  if (v23 + v134 >= v21) {
    uint64_t v57 = v21;
  }
  else {
    uint64_t v57 = v23 + v134;
  }
  if (v57 >= v23)
  {
    if (v34 != v57)
    {
      uint64_t v139 = v23;
      uint64_t v137 = v2;
      uint64_t v58 = v44[9];
      unint64_t v142 = (void (*)(char *, uint64_t, uint64_t))v44[2];
      uint64_t v143 = v58;
      uint64_t v157 = v58 * (v34 - 1);
      uint64_t v59 = v34 * v58;
      uint64_t v135 = v57;
      do
      {
        uint64_t v61 = 0;
        uint64_t v62 = v139;
        uint64_t v63 = v151;
        uint64_t v150 = v34;
        uint64_t v144 = v59;
        while (1)
        {
          uint64_t v153 = v62;
          uint64_t v64 = v149;
          uint64_t v65 = *v149;
          uint64_t v66 = v59 + v61 + *v149;
          uint64_t v67 = v148;
          uint64_t v68 = v142;
          v142(v148, v66, v63);
          uint64_t v69 = v157 + v61 + v65;
          uint64_t v70 = v147;
          v68(v147, v69, v63);
          LOWORD(v155) = sub_25192CF60();
          LODWORD(v155) = (unsigned __int16)v155;
          int v154 = sub_25192CF60();
          uint64_t v71 = *v145;
          (*v145)(v70, v63);
          v71(v67, v63);
          if (v155 >= (unsigned __int16)v154) {
            break;
          }
          uint64_t v72 = *v64;
          if (!*v64) {
            goto LABEL_148;
          }
          uint64_t v59 = v144;
          uint64_t v73 = (char *)(v72 + v157 + v61);
          uint64_t v74 = *v156;
          uint64_t v63 = v151;
          (*v156)(v152, v72 + v144 + v61, v151);
          swift_arrayInitWithTakeFrontToBack();
          v74(v73, (uint64_t)v152, v63);
          v61 -= v143;
          uint64_t v62 = v153 + 1;
          uint64_t v60 = v150;
          if (v150 == v153 + 1) {
            goto LABEL_53;
          }
        }
        uint64_t v60 = v150;
        uint64_t v59 = v144;
LABEL_53:
        uint64_t v34 = v60 + 1;
        v157 += v143;
        v59 += v143;
      }
      while (v34 != v135);
      uint64_t v34 = v135;
      uint64_t v2 = v137;
      a1 = v149;
      uint64_t v23 = v139;
    }
    goto LABEL_60;
  }
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  uint64_t result = sub_25192D690();
  __break(1u);
  return result;
}

uint64_t sub_251901EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v36 = a1;
  uint64_t v7 = sub_25192CF70();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v47 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unsigned int v41 = (char *)&v34 - v11;
  uint64_t result = MEMORY[0x270FA5388](v10);
  uint64_t v40 = (char *)&v34 - v14;
  uint64_t v45 = a3;
  uint64_t v35 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v15 = v13 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    uint64_t v37 = (void (**)(char *, uint64_t))(v15 - 8);
    int v38 = v16;
    uint64_t v39 = v15;
    uint64_t v46 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v18 = v17 * (v45 - 1);
    uint64_t v42 = v17;
    uint64_t v19 = v17 * v45;
    uint64_t v50 = a4;
LABEL_5:
    uint64_t v20 = 0;
    uint64_t v48 = v36;
    uint64_t v43 = v19;
    uint64_t v44 = v18;
    while (1)
    {
      uint64_t v21 = *v50;
      uint64_t v22 = v19 + v20 + *v50;
      uint64_t v23 = v40;
      uint64_t v24 = v38;
      v38(v40, v22, v7);
      uint64_t v25 = v18 + v20 + v21;
      uint64_t v26 = v7;
      uint64_t v27 = v41;
      v24(v41, v25, v26);
      LOWORD(v49) = sub_25192CF60();
      unsigned int v49 = (unsigned __int16)v49;
      LOWORD(v21) = sub_25192CF60();
      uint64_t v28 = *v37;
      uint64_t v29 = v27;
      uint64_t v7 = v26;
      uint64_t v18 = v44;
      (*v37)(v29, v7);
      uint64_t v30 = v23;
      uint64_t v19 = v43;
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v30, v7);
      if (v49 >= (unsigned __int16)v21)
      {
LABEL_4:
        v18 += v42;
        v19 += v42;
        if (++v45 == v35) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v31 = *v50;
      if (!*v50) {
        break;
      }
      uint64_t v32 = v31 + v18 + v20;
      uint64_t v33 = *v46;
      (*v46)(v47, v31 + v19 + v20, v7);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v33)(v32, v47, v7);
      v20 -= v42;
      if (v45 == ++v48) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2519021EC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_25192CF70();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v64 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v63 = (char *)&v55 - v12;
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_72;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_73;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v68 = a1;
  unint64_t v67 = a4;
  uint64_t v17 = v15 / v14;
  unint64_t v59 = a4;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v20 = v17 * v14;
      unint64_t v21 = v59;
      if (v59 < a2 || a2 + v20 <= v59)
      {
        swift_arrayInitWithTakeFrontToBack();
        uint64_t v22 = v9;
      }
      else
      {
        uint64_t v22 = v9;
        if (v59 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v38 = v21 + v20;
      unint64_t v66 = v21 + v20;
      unint64_t v68 = a2;
      if (v20 >= 1 && a1 < a2)
      {
        uint64_t v40 = -v14;
        uint64_t v42 = *(void (**)(char *))(v22 + 16);
        uint64_t v41 = v22 + 16;
        uint64_t v57 = (void (**)(char *, uint64_t))(v41 - 8);
        uint64_t v58 = v42;
        uint64_t v62 = v41;
        unint64_t v56 = a1;
        uint64_t v43 = v63;
        do
        {
          unint64_t v65 = a3;
          unint64_t v61 = a3 + v40;
          uint64_t v44 = v58;
          ((void (*)(char *, unint64_t, uint64_t))v58)(v43, v38 + v40, v8);
          uint64_t v45 = v64;
          uint64_t v60 = (void (*)(void, void, void))(a2 + v40);
          v44(v64);
          unsigned int v46 = (unsigned __int16)sub_25192CF60();
          LOWORD(v44) = sub_25192CF60();
          uint64_t v47 = v40;
          uint64_t v48 = *v57;
          (*v57)(v45, v8);
          v48(v43, v8);
          if (v46 >= (unsigned __int16)v44)
          {
            unint64_t v52 = v66;
            v66 += v47;
            a3 = v61;
            BOOL v53 = v65 < v52 || v61 >= v52;
            uint64_t v40 = v47;
            if (v53)
            {
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v50 = (void (*)(void, void, void))a2;
              unint64_t v49 = v59;
            }
            else
            {
              unint64_t v49 = v59;
              if (v65 != v52) {
                swift_arrayInitWithTakeBackToFront();
              }
              uint64_t v50 = (void (*)(void, void, void))a2;
            }
            unint64_t v51 = v56;
          }
          else
          {
            uint64_t v40 = v47;
            a3 = v61;
            if (v65 < a2 || v61 >= a2)
            {
              uint64_t v50 = v60;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v49 = v59;
              unint64_t v51 = v56;
            }
            else
            {
              unint64_t v49 = v59;
              uint64_t v50 = v60;
              unint64_t v51 = v56;
              if (v65 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v68 += v40;
          }
          unint64_t v38 = v66;
          if (v66 <= v49) {
            break;
          }
          a2 = (unint64_t)v50;
        }
        while ((unint64_t)v50 > v51);
      }
      goto LABEL_70;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    unint64_t v19 = v59;
    if (v59 < a1 || a1 + v18 <= v59)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v59 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v61 = v19 + v18;
    unint64_t v66 = v19 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      unint64_t v24 = v19;
      uint64_t v60 = *(void (**)(void, void, void))(v9 + 16);
      uint64_t v62 = v9 + 16;
      uint64_t v58 = (void (*)(char *))(v9 + 8);
      unint64_t v65 = a3;
      uint64_t v25 = v63;
      uint64_t v26 = (void (**)(char *, uint64_t))(v9 + 8);
      do
      {
        uint64_t v27 = v14;
        uint64_t v28 = (void (*)(char *, unint64_t, uint64_t))v60;
        v60(v25, a2, v8);
        uint64_t v29 = v64;
        v28(v64, v24, v8);
        LODWORD(v28) = (unsigned __int16)sub_25192CF60();
        unsigned __int16 v30 = sub_25192CF60();
        uint64_t v31 = *v26;
        (*v26)(v29, v8);
        v31(v25, v8);
        unint64_t v32 = v68;
        if (v28 >= v30)
        {
          uint64_t v14 = v27;
          unint64_t v36 = v67 + v27;
          if (v68 < v67 || v68 >= v36)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v35 = v65;
          }
          else
          {
            unint64_t v35 = v65;
            if (v68 != v67) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v67 = v36;
          unint64_t v33 = a2;
        }
        else
        {
          uint64_t v14 = v27;
          unint64_t v33 = a2 + v27;
          if (v68 < a2 || v68 >= v33)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v35 = v65;
          }
          else
          {
            unint64_t v35 = v65;
            if (v68 == a2) {
              unint64_t v32 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        unint64_t v68 = v32 + v14;
        unint64_t v24 = v67;
        if (v67 >= v61) {
          break;
        }
        a2 = v33;
      }
      while (v33 < v35);
    }
LABEL_70:
    sub_2519028D0(&v68, &v67, (uint64_t *)&v66);
    return 1;
  }
LABEL_74:
  uint64_t result = sub_25192D6F0();
  __break(1u);
  return result;
}

char *sub_2519027D4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B57D00);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_2519028D0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_25192CF70();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_25192D6F0();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_251902A10(uint64_t a1)
{
  return sub_2519027D4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_251902A24(void *a1)
{
  return sub_2518C38A8(0, a1[2], 0, a1);
}

uint64_t sub_251902A38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t *)a1;
  uint64_t v2 = *(uint64_t *)(a1 + 8);
  uint64_t v5 = *(void **)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  unsigned int v6 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v7 = *(uint64_t *)a2;
  uint64_t v8 = *(uint64_t *)(a2 + 8);
  uint64_t v10 = *(uint64_t *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  unsigned int v11 = *(unsigned __int8 *)(a2 + 32);
  switch(v6 >> 1)
  {
    case 1u:
      if ((v11 & 0xFE) != 2) {
        goto LABEL_178;
      }
      uint64_t v41 = *(void *)(a2 + 24);
      BOOL v12 = (*(void *)a1 & 1) == 0;
      uint64_t v13 = 0x3031657A6973;
      uint64_t v14 = 0x355F32657A6973;
      if (v3) {
        unint64_t v15 = 0x3031657A6973;
      }
      else {
        unint64_t v15 = 0x355F32657A6973;
      }
      unint64_t v16 = 0xE600000000000000;
      unint64_t v17 = 0xE700000000000000;
      goto LABEL_131;
    case 2u:
      if ((v11 & 0xFE) != 4) {
        goto LABEL_178;
      }
      char v18 = sub_2517D9504(*(void *)a1, *(void *)a2);
      goto LABEL_161;
    case 3u:
      if ((v11 & 0xFE) != 6) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 4u:
      if ((v11 & 0xFE) != 8) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 5u:
      if ((v11 & 0xFE) != 0xA) {
        goto LABEL_178;
      }
      goto LABEL_125;
    case 6u:
      if ((v11 & 0xFE) != 0xC) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 7u:
      if ((v11 & 0xFE) != 0xE) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 8u:
      if ((v11 & 0xFE) != 0x10) {
        goto LABEL_178;
      }
      goto LABEL_125;
    case 9u:
      if ((v11 & 0xFE) != 0x12) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 0xAu:
      if ((v11 & 0xFE) != 0x14) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 0xBu:
      if ((v11 & 0xFE) != 0x16) {
        goto LABEL_178;
      }
      char v18 = sub_2517D96E8(*(void *)a1, *(void *)a2);
      goto LABEL_161;
    case 0xCu:
      if ((v11 & 0xFE) != 0x18) {
        goto LABEL_178;
      }
      goto LABEL_125;
    case 0xDu:
      if ((v11 & 0xFE) != 0x1A) {
        goto LABEL_178;
      }
      sub_251808B8C(*(void *)a1, v2, (uint64_t)v5, v4, v6);
      sub_251808B8C(v7, v8, v10, v9, v11);
      char v19 = *(double *)&v2 == *(double *)&v8;
      if (*(double *)&v3 != *(double *)&v7) {
        char v19 = 0;
      }
      return v19 & 1;
    case 0xEu:
      if ((v11 & 0xFE) != 0x1C) {
        goto LABEL_178;
      }
      goto LABEL_125;
    case 0xFu:
      if ((v11 & 0xFE) != 0x1E) {
        goto LABEL_178;
      }
      char v18 = sub_2517D9814(*(void *)a1, *(void *)a2);
      goto LABEL_161;
    case 0x10u:
      if ((v11 & 0xFE) != 0x20) {
        goto LABEL_178;
      }
      goto LABEL_146;
    case 0x11u:
      if ((v11 & 0xFE) != 0x22) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 0x12u:
      if ((v11 & 0xFE) != 0x24) {
        goto LABEL_178;
      }
      goto LABEL_64;
    case 0x13u:
      if ((v11 & 0xFE) != 0x26) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 0x14u:
      if ((v11 & 0xFE) != 0x28) {
        goto LABEL_178;
      }
      goto LABEL_152;
    case 0x15u:
      if ((v11 & 0xFE) != 0x2A) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 0x16u:
      if ((v11 & 0xFE) != 0x2C) {
        goto LABEL_178;
      }
      goto LABEL_156;
    case 0x17u:
      if ((v11 & 0xFE) != 0x2E) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 0x18u:
      if ((v11 & 0xFE) != 0x30) {
        goto LABEL_178;
      }
      goto LABEL_160;
    case 0x19u:
      if ((v11 & 0xFE) != 0x32) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 0x1Au:
      if ((v11 & 0xFE) != 0x34) {
        goto LABEL_178;
      }
      goto LABEL_125;
    case 0x1Bu:
      if ((v11 & 0xFE) != 0x36) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 0x1Cu:
      if ((v11 & 0xFE) != 0x38) {
        goto LABEL_178;
      }
LABEL_64:
      char v18 = sub_2517D9AC4(*(void *)a1, *(void *)a2);
      goto LABEL_161;
    case 0x1Du:
      if ((v11 & 0xFE) != 0x3A) {
        goto LABEL_178;
      }
      double v20 = *(double *)(a1 + 8);
      char v21 = sub_2517D9AC4(*(void *)a1, *(void *)a2);
      goto LABEL_164;
    case 0x1Eu:
      if ((v11 & 0xFE) != 0x3C) {
        goto LABEL_178;
      }
      double v22 = *(double *)(a1 + 16);
      double v23 = *(double *)(a1 + 8);
      double v24 = *(double *)(a2 + 8);
      char v25 = sub_2517D9AC4(*(void *)a1, *(void *)a2);
      goto LABEL_167;
    case 0x1Fu:
      if ((v11 & 0xFE) != 0x3E) {
        goto LABEL_178;
      }
      goto LABEL_125;
    case 0x20u:
      if ((v11 & 0xFE) != 0x40) {
        goto LABEL_178;
      }
      goto LABEL_125;
    case 0x21u:
      if ((v11 & 0xFE) != 0x42) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 0x22u:
      if ((v11 & 0xFE) != 0x44) {
        goto LABEL_178;
      }
      goto LABEL_125;
    case 0x23u:
      if ((v11 & 0xFE) != 0x46) {
        goto LABEL_178;
      }
      goto LABEL_125;
    case 0x24u:
      if ((v11 & 0xFE) != 0x48) {
        goto LABEL_178;
      }
      goto LABEL_125;
    case 0x25u:
      if ((v11 & 0xFE) != 0x4A) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 0x26u:
      if ((v11 & 0xFE) != 0x4C) {
        goto LABEL_178;
      }
      goto LABEL_125;
    case 0x27u:
      if ((v11 & 0xFE) != 0x4E) {
        goto LABEL_178;
      }
      goto LABEL_125;
    case 0x28u:
      if ((v11 & 0xFE) != 0x50) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 0x29u:
      if ((v11 & 0xFE) != 0x52) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 0x2Au:
      if ((v11 & 0xFE) != 0x54) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 0x2Bu:
      if ((v11 & 0xFE) != 0x56) {
        goto LABEL_178;
      }
      goto LABEL_146;
    case 0x2Cu:
      if ((v11 & 0xFE) != 0x58) {
        goto LABEL_178;
      }
      goto LABEL_125;
    case 0x2Du:
      if ((v11 & 0xFE) != 0x5A) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 0x2Eu:
      if ((v11 & 0xFE) != 0x5C) {
        goto LABEL_178;
      }
      uint64_t v41 = *(void *)(a2 + 24);
      if (v3) {
        unint64_t v15 = 0xD000000000000010;
      }
      else {
        unint64_t v15 = 0x7369776B636F6C63;
      }
      unint64_t v26 = 0x800000025194A8B0;
      if (v3) {
        unint64_t v27 = 0x800000025194A8B0;
      }
      else {
        unint64_t v27 = 0xE900000000000065;
      }
      if (v7) {
        unint64_t v28 = 0xD000000000000010;
      }
      else {
        unint64_t v28 = 0x7369776B636F6C63;
      }
      if ((v7 & 1) == 0) {
        unint64_t v26 = 0xE900000000000065;
      }
      goto LABEL_140;
    case 0x2Fu:
      if ((v11 & 0xFE) != 0x5E) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 0x30u:
      if ((v11 & 0xFE) != 0x60)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_178:
        sub_251808BD8(v7, v8, v10, v9, v11);
        goto LABEL_179;
      }
      uint64_t v42 = *(void *)(a2 + 24);
      unint64_t v36 = RobotVacuumCleanerRunState.rawValue.getter();
      uint64_t v38 = v29;
      if (v36 == RobotVacuumCleanerRunState.rawValue.getter() && v38 == v30)
      {
        uint64_t v9 = v42;
        sub_251808BD8(v7, v8, v10, v42, v11);
        sub_251808BD8(v3, v2, (uint64_t)v5, v4, v6);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v37 = sub_25192D810();
        sub_251808BD8(v7, v8, v10, v42, v11);
        sub_251808BD8(v3, v2, (uint64_t)v5, v4, v6);
        swift_bridgeObjectRelease();
        uint64_t v9 = v42;
        swift_bridgeObjectRelease();
        if ((v37 & 1) == 0)
        {
LABEL_179:
          sub_251808B8C(v3, v2, (uint64_t)v5, v4, v6);
          uint64_t v32 = v7;
          uint64_t v33 = v8;
          uint64_t v34 = v10;
LABEL_180:
          sub_251808B8C(v32, v33, v34, v9, v11);
          goto LABEL_181;
        }
      }
      if ((sub_251898750(v2, v8) & 1) == 0) {
        goto LABEL_179;
      }
      if (!v5)
      {
        swift_bridgeObjectRetain();
        sub_251808B8C(v3, v2, 0, v4, v6);
        sub_251808B8C(v7, v8, v10, v9, v11);
        if (*(double *)&v10 != 0.0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_181;
        }
        goto LABEL_191;
      }
      if (*(double *)&v10 == 0.0)
      {
        sub_251808B8C(v3, v2, (uint64_t)v5, v4, v6);
        uint64_t v32 = v7;
        uint64_t v33 = v8;
        uint64_t v34 = 0;
        goto LABEL_180;
      }
      BOOL v40 = sub_251898B10(v5, (void *)v10);
      sub_251808B8C(v3, v2, (uint64_t)v5, v4, v6);
      sub_251808B8C(v7, v8, v10, v9, v11);
      if (!v40) {
        goto LABEL_181;
      }
LABEL_191:
      if (v6)
      {
        if (v11) {
          goto LABEL_197;
        }
LABEL_181:
        char v19 = 0;
        return v19 & 1;
      }
      if ((v11 & 1) != 0 || v4 != v42) {
        goto LABEL_181;
      }
LABEL_197:
      char v19 = 1;
      return v19 & 1;
    case 0x31u:
      if ((v11 & 0xFE) != 0x62) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 0x32u:
      if ((v11 & 0xFE) != 0x64) {
        goto LABEL_178;
      }
      goto LABEL_125;
    case 0x33u:
      if ((v11 & 0xFE) != 0x66) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 0x34u:
      if ((v11 & 0xFE) != 0x68) {
        goto LABEL_178;
      }
LABEL_125:
      sub_251808B8C(v3, v2, (uint64_t)v5, v4, v6);
      sub_251808B8C(v7, v8, v10, v9, v11);
      char v19 = ((v3 & 1) == 0) ^ v7;
      return v19 & 1;
    case 0x35u:
      if ((v11 & 0xFE) != 0x6A) {
        goto LABEL_178;
      }
      uint64_t v41 = *(void *)(a2 + 24);
      BOOL v12 = (*(void *)a1 & 1) == 0;
      uint64_t v13 = 0x6974616D6F747561;
      uint64_t v14 = 0x6C61756E616DLL;
      if (v3) {
        unint64_t v15 = 0x6974616D6F747561;
      }
      else {
        unint64_t v15 = 0x6C61756E616DLL;
      }
      unint64_t v16 = 0xE900000000000063;
      unint64_t v17 = 0xE600000000000000;
LABEL_131:
      if (v12) {
        unint64_t v27 = v17;
      }
      else {
        unint64_t v27 = v16;
      }
      if (v7) {
        unint64_t v28 = v13;
      }
      else {
        unint64_t v28 = v14;
      }
      if (v7) {
        unint64_t v26 = v16;
      }
      else {
        unint64_t v26 = v17;
      }
LABEL_140:
      if (v15 == v28 && v27 == v26)
      {
        swift_bridgeObjectRelease_n();
        sub_251808B8C(v3, v2, (uint64_t)v5, v4, v6);
        sub_251808B8C(v7, v8, v10, v41, v11);
        char v19 = 1;
      }
      else
      {
        char v39 = sub_25192D810();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_251808B8C(v3, v2, (uint64_t)v5, v4, v6);
        sub_251808B8C(v7, v8, v10, v41, v11);
        char v19 = v39;
      }
      return v19 & 1;
    case 0x36u:
      if ((v11 & 0xFE) != 0x6C) {
        goto LABEL_178;
      }
LABEL_146:
      char v18 = sub_2517D9918(*(void *)a1, *(void *)a2);
      goto LABEL_161;
    case 0x37u:
      if ((v11 & 0xFE) != 0x6E) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 0x38u:
      if ((v11 & 0xFE) != 0x70) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 0x39u:
      if ((v11 & 0xFE) != 0x72) {
        goto LABEL_178;
      }
LABEL_152:
      char v18 = sub_2517D926C(*(void *)a1, *(void *)a2);
      goto LABEL_161;
    case 0x3Au:
      if ((v11 & 0xFE) != 0x74) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 0x3Bu:
      if ((v11 & 0xFE) != 0x76) {
        goto LABEL_178;
      }
LABEL_156:
      char v18 = sub_2517D9C90(*(void *)a1, *(void *)a2);
      goto LABEL_161;
    case 0x3Cu:
      if ((v11 & 0xFE) == 0x78) {
        goto LABEL_158;
      }
      goto LABEL_178;
    case 0x3Du:
      if ((v11 & 0xFE) != 0x7A) {
        goto LABEL_178;
      }
LABEL_160:
      char v18 = sub_2517D9E2C(*(void *)a1, *(void *)a2);
LABEL_161:
      char v43 = v18;
      sub_251808B8C(v3, v2, (uint64_t)v5, v4, v6);
      sub_251808B8C(v7, v8, v10, v9, v11);
      char v19 = v43;
      return v19 & 1;
    case 0x3Eu:
      if ((v11 & 0xFE) != 0x7C) {
        goto LABEL_178;
      }
      double v20 = *(double *)(a1 + 8);
      char v21 = sub_2517D9E2C(*(void *)a1, *(void *)a2);
LABEL_164:
      char v44 = v21;
      sub_251808B8C(v3, v2, (uint64_t)v5, v4, v6);
      sub_251808B8C(v7, v8, v10, v9, v11);
      char v19 = v20 == *(double *)&v8;
      goto LABEL_169;
    case 0x3Fu:
      if ((v11 & 0xFE) != 0x7E) {
        goto LABEL_178;
      }
      double v22 = *(double *)(a1 + 16);
      double v23 = *(double *)(a1 + 8);
      double v24 = *(double *)(a2 + 8);
      char v25 = sub_2517D9E2C(*(void *)a1, *(void *)a2);
LABEL_167:
      char v44 = v25;
      sub_251808B8C(v3, v2, (uint64_t)v5, v4, v6);
      sub_251808B8C(v7, v8, v10, v9, v11);
      char v19 = v22 == *(double *)&v10;
      if (v23 != v24) {
        char v19 = 0;
      }
LABEL_169:
      if ((v44 & 1) == 0) {
        char v19 = 0;
      }
      return v19 & 1;
    case 0x40u:
      if ((v11 & 0xFE) != 0x80) {
        goto LABEL_178;
      }
      goto LABEL_158;
    case 0x41u:
      if ((v11 & 0xFE) == 0x82) {
        goto LABEL_158;
      }
      goto LABEL_178;
    default:
      if (v11 >= 2) {
        goto LABEL_178;
      }
LABEL_158:
      sub_251808B8C(*(void *)a1, v2, (uint64_t)v5, v4, v6);
      sub_251808B8C(v7, v8, v10, v9, v11);
      char v19 = v3 == v7;
      return v19 & 1;
  }
}

uint64_t sub_251903620()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B536E8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_25193C480;
  unint64_t v1 = sub_251904C98();
  *(void *)(v0 + 32) = &type metadata for Attribute.AirParticulateDensityCase;
  *(void *)(v0 + 40) = v1;
  unint64_t v2 = sub_251904C44();
  *(void *)(v0 + 48) = &type metadata for Attribute.AirParticulateSizeCase;
  *(void *)(v0 + 56) = v2;
  unint64_t v3 = sub_251904BF0();
  *(void *)(v0 + 64) = &type metadata for Attribute.AirQualityCase;
  *(void *)(v0 + 72) = v3;
  unint64_t v4 = sub_251904B9C();
  *(void *)(v0 + 80) = &type metadata for Attribute.BatteryLevelCase;
  *(void *)(v0 + 88) = v4;
  unint64_t v5 = sub_251904B48();
  *(void *)(v0 + 96) = &type metadata for Attribute.BrightnessCase;
  *(void *)(v0 + 104) = v5;
  unint64_t v6 = sub_251904AF4();
  *(void *)(v0 + 112) = &type metadata for Attribute.CarbonDioxideDetectedCase;
  *(void *)(v0 + 120) = v6;
  unint64_t v7 = sub_251904AA0();
  *(void *)(v0 + 128) = &type metadata for Attribute.CarbonDioxideLevelCase;
  *(void *)(v0 + 136) = v7;
  unint64_t v8 = sub_251904A4C();
  *(void *)(v0 + 144) = &type metadata for Attribute.CarbonDioxidePeakLevelCase;
  *(void *)(v0 + 152) = v8;
  unint64_t v9 = sub_2519049F8();
  *(void *)(v0 + 160) = &type metadata for Attribute.CarbonMonoxideDetectedCase;
  *(void *)(v0 + 168) = v9;
  unint64_t v10 = sub_2519049A4();
  *(void *)(v0 + 176) = &type metadata for Attribute.CarbonMonoxideLevelCase;
  *(void *)(v0 + 184) = v10;
  unint64_t v11 = sub_251904950();
  *(void *)(v0 + 192) = &type metadata for Attribute.CarbonMonoxidePeakLevelCase;
  *(void *)(v0 + 200) = v11;
  unint64_t v12 = sub_2519048FC();
  *(void *)(v0 + 208) = &type metadata for Attribute.ChargingStateCase;
  *(void *)(v0 + 216) = v12;
  unint64_t v13 = sub_2519048A8();
  *(void *)(v0 + 224) = &type metadata for Attribute.ChildLockEnabledCase;
  *(void *)(v0 + 232) = v13;
  unint64_t v14 = sub_251904854();
  *(void *)(v0 + 240) = &type metadata for Attribute.ColorCase;
  *(void *)(v0 + 248) = v14;
  unint64_t v15 = sub_251904800();
  *(void *)(v0 + 256) = &type metadata for Attribute.ContactDetectedCase;
  *(void *)(v0 + 264) = v15;
  unint64_t v16 = sub_2519047AC();
  *(void *)(v0 + 272) = &type metadata for Attribute.CurrentAirPurifierStateCase;
  *(void *)(v0 + 280) = v16;
  unint64_t v17 = sub_251904758();
  *(void *)(v0 + 288) = &type metadata for Attribute.CurrentDoorStateCase;
  *(void *)(v0 + 296) = v17;
  unint64_t v18 = sub_251904704();
  *(void *)(v0 + 304) = &type metadata for Attribute.CurrentHorizontalTiltCase;
  *(void *)(v0 + 312) = v18;
  unint64_t v19 = sub_2519046B0();
  *(void *)(v0 + 320) = &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase;
  *(void *)(v0 + 328) = v19;
  unint64_t v20 = sub_25190465C();
  *(void *)(v0 + 336) = &type metadata for Attribute.CurrentHumidityCase;
  *(void *)(v0 + 344) = v20;
  unint64_t v21 = sub_251904608();
  *(void *)(v0 + 352) = &type metadata for Attribute.CurrentLockStateCase;
  *(void *)(v0 + 360) = v21;
  unint64_t v22 = sub_2519045B4();
  *(void *)(v0 + 368) = &type metadata for Attribute.CurrentPositionCase;
  *(void *)(v0 + 376) = v22;
  unint64_t v23 = sub_251904560();
  *(void *)(v0 + 384) = &type metadata for Attribute.CurrentSecuritySystemStateCase;
  *(void *)(v0 + 392) = v23;
  unint64_t v24 = sub_25190450C();
  *(void *)(v0 + 400) = &type metadata for Attribute.CurrentTemperatureCase;
  *(void *)(v0 + 408) = v24;
  unint64_t v25 = sub_2519044B8();
  *(void *)(v0 + 416) = &type metadata for Attribute.CurrentThermostatModeCase;
  *(void *)(v0 + 424) = v25;
  unint64_t v26 = sub_251904464();
  *(void *)(v0 + 432) = &type metadata for Attribute.CurrentVerticalTiltCase;
  *(void *)(v0 + 440) = v26;
  unint64_t v27 = sub_251904410();
  *(void *)(v0 + 448) = &type metadata for Attribute.FilterChangeNeededCase;
  *(void *)(v0 + 456) = v27;
  unint64_t v28 = sub_2519043BC();
  *(void *)(v0 + 464) = &type metadata for Attribute.FilterLifeLevelCase;
  *(void *)(v0 + 472) = v28;
  unint64_t v29 = sub_251904368();
  *(void *)(v0 + 480) = &type metadata for Attribute.HumidifierDehumidifierModeCase;
  *(void *)(v0 + 488) = v29;
  unint64_t v30 = sub_251904314();
  *(void *)(v0 + 496) = &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase;
  *(void *)(v0 + 504) = v30;
  unint64_t v31 = sub_2519042C0();
  *(void *)(v0 + 512) = &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase;
  *(void *)(v0 + 520) = v31;
  unint64_t v32 = sub_25190426C();
  *(void *)(v0 + 528) = &type metadata for Attribute.InUseCase;
  *(void *)(v0 + 536) = v32;
  unint64_t v33 = sub_251904218();
  *(void *)(v0 + 544) = &type metadata for Attribute.LeakDetectedCase;
  *(void *)(v0 + 552) = v33;
  unint64_t v34 = sub_2519041C4();
  *(void *)(v0 + 560) = &type metadata for Attribute.LightLevelCase;
  *(void *)(v0 + 568) = v34;
  unint64_t v35 = sub_251904170();
  *(void *)(v0 + 576) = &type metadata for Attribute.LowBatteryCase;
  *(void *)(v0 + 584) = v35;
  unint64_t v36 = sub_25190411C();
  *(void *)(v0 + 592) = &type metadata for Attribute.MotionDetectedCase;
  *(void *)(v0 + 600) = v36;
  unint64_t v37 = sub_2519040C8();
  *(void *)(v0 + 608) = &type metadata for Attribute.NaturalLightCase;
  *(void *)(v0 + 616) = v37;
  unint64_t v38 = sub_251904074();
  *(void *)(v0 + 624) = &type metadata for Attribute.NitrogenDioxideDensityCase;
  *(void *)(v0 + 632) = v38;
  unint64_t v39 = sub_251904020();
  *(void *)(v0 + 640) = &type metadata for Attribute.ObstructionDetectedCase;
  *(void *)(v0 + 648) = v39;
  unint64_t v40 = sub_251903FCC();
  *(void *)(v0 + 656) = &type metadata for Attribute.OccupancyDetectedCase;
  *(void *)(v0 + 664) = v40;
  unint64_t v41 = sub_251903F78();
  *(void *)(v0 + 672) = &type metadata for Attribute.OzoneDensityCase;
  *(void *)(v0 + 680) = v41;
  unint64_t v42 = sub_251903F24();
  *(void *)(v0 + 688) = &type metadata for Attribute.Pm10DensityCase;
  *(void *)(v0 + 696) = v42;
  unint64_t v43 = sub_251903ED0();
  *(void *)(v0 + 704) = &type metadata for Attribute.Pm2_5DensityCase;
  *(void *)(v0 + 712) = v43;
  unint64_t v44 = sub_251903E7C();
  *(void *)(v0 + 720) = &type metadata for Attribute.PositionStateCase;
  *(void *)(v0 + 728) = v44;
  unint64_t v45 = sub_251903E28();
  *(void *)(v0 + 736) = &type metadata for Attribute.PowerCase;
  *(void *)(v0 + 744) = v45;
  unint64_t v46 = sub_251903DD4();
  *(void *)(v0 + 752) = &type metadata for Attribute.RemainingDurationCase;
  *(void *)(v0 + 760) = v46;
  unint64_t v47 = sub_251903D80();
  *(void *)(v0 + 768) = &type metadata for Attribute.RotationDirectionCase;
  *(void *)(v0 + 776) = v47;
  unint64_t v48 = sub_251903D2C();
  *(void *)(v0 + 784) = &type metadata for Attribute.RotationSpeedCase;
  *(void *)(v0 + 792) = v48;
  unint64_t v49 = sub_251903C88();
  *(void *)(v0 + 800) = &type metadata for Attribute.RvcCase;
  *(void *)(v0 + 808) = v49;
  unint64_t v50 = sub_251901274();
  *(void *)(v0 + 816) = &type metadata for Attribute.SetDurationCase;
  *(void *)(v0 + 824) = v50;
  unint64_t v51 = sub_251901220();
  *(void *)(v0 + 832) = &type metadata for Attribute.SmokeDetectedCase;
  *(void *)(v0 + 840) = v51;
  unint64_t v52 = sub_2519011CC();
  *(void *)(v0 + 848) = &type metadata for Attribute.SulphurDioxideDensityCase;
  *(void *)(v0 + 856) = v52;
  unint64_t v53 = sub_251901178();
  *(void *)(v0 + 864) = &type metadata for Attribute.SwingModeEnabledCase;
  *(void *)(v0 + 872) = v53;
  unint64_t v54 = sub_251901124();
  *(void *)(v0 + 880) = &type metadata for Attribute.TargetAirPurifierStateCase;
  *(void *)(v0 + 888) = v54;
  unint64_t v55 = sub_2519010D0();
  *(void *)(v0 + 896) = &type metadata for Attribute.TargetDoorStateCase;
  *(void *)(v0 + 904) = v55;
  unint64_t v56 = sub_25190107C();
  *(void *)(v0 + 912) = &type metadata for Attribute.TargetHorizontalTiltCase;
  *(void *)(v0 + 920) = v56;
  unint64_t v57 = sub_251901028();
  *(void *)(v0 + 928) = &type metadata for Attribute.TargetHumidityCase;
  *(void *)(v0 + 936) = v57;
  unint64_t v58 = sub_251900FD4();
  *(void *)(v0 + 944) = &type metadata for Attribute.TargetLockStateCase;
  *(void *)(v0 + 952) = v58;
  unint64_t v59 = sub_251900F80();
  *(void *)(v0 + 960) = &type metadata for Attribute.TargetPositionCase;
  *(void *)(v0 + 968) = v59;
  unint64_t v60 = sub_251900F2C();
  *(void *)(v0 + 976) = &type metadata for Attribute.TargetSecuritySystemStateCase;
  *(void *)(v0 + 984) = v60;
  unint64_t v61 = sub_251900ED8();
  *(void *)(v0 + 992) = &type metadata for Attribute.TargetVerticalTiltCase;
  *(void *)(v0 + 1000) = v61;
  unint64_t v62 = sub_251900E84();
  *(void *)(v0 + 1008) = &type metadata for Attribute.ThermostatModeCase;
  *(void *)(v0 + 1016) = v62;
  unint64_t v63 = sub_251900E30();
  *(void *)(v0 + 1024) = &type metadata for Attribute.ThermostatModeAndValueCase;
  *(void *)(v0 + 1032) = v63;
  unint64_t v64 = sub_251900DDC();
  *(void *)(v0 + 1040) = &type metadata for Attribute.ThermostatModeAndRangeCase;
  *(void *)(v0 + 1048) = v64;
  unint64_t v65 = sub_251900D88();
  *(void *)(v0 + 1056) = &type metadata for Attribute.VolatileOrganicCompoundDensityCase;
  *(void *)(v0 + 1064) = v65;
  unint64_t v66 = sub_251900D34();
  *(void *)(v0 + 1072) = &type metadata for Attribute.WaterLevelCase;
  *(void *)(v0 + 1080) = v66;
  return v0;
}

uint64_t sub_251903B18()
{
  uint64_t v0 = sub_25192BC50();
  MEMORY[0x270FA5388](v0 - 8);
  unint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B55140);
  sub_25192BC30();
  unint64_t v3 = sub_25185E614();
  uint64_t v4 = MEMORY[0x2533A4F60](v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B55150);
  sub_25192BC30();
  unint64_t v5 = sub_25185E668();
  MEMORY[0x2533A4F60](v2, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B578C0);
  sub_25192BC30();
  MEMORY[0x2533A4FE0](v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B55130);
  sub_25192BC30();
  MEMORY[0x2533A4FE0](v2);
  return v4;
}

unint64_t sub_251903C88()
{
  unint64_t result = qword_269B57708;
  if (!qword_269B57708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57708);
  }
  return result;
}

uint64_t sub_251903CDC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

unint64_t sub_251903D2C()
{
  unint64_t result = qword_269B57710;
  if (!qword_269B57710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57710);
  }
  return result;
}

unint64_t sub_251903D80()
{
  unint64_t result = qword_269B57720;
  if (!qword_269B57720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57720);
  }
  return result;
}

unint64_t sub_251903DD4()
{
  unint64_t result = qword_269B57728;
  if (!qword_269B57728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57728);
  }
  return result;
}

unint64_t sub_251903E28()
{
  unint64_t result = qword_269B57730;
  if (!qword_269B57730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57730);
  }
  return result;
}

unint64_t sub_251903E7C()
{
  unint64_t result = qword_269B57738;
  if (!qword_269B57738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57738);
  }
  return result;
}

unint64_t sub_251903ED0()
{
  unint64_t result = qword_269B57740;
  if (!qword_269B57740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57740);
  }
  return result;
}

unint64_t sub_251903F24()
{
  unint64_t result = qword_269B57748;
  if (!qword_269B57748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57748);
  }
  return result;
}

unint64_t sub_251903F78()
{
  unint64_t result = qword_269B57750;
  if (!qword_269B57750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57750);
  }
  return result;
}

unint64_t sub_251903FCC()
{
  unint64_t result = qword_269B57758;
  if (!qword_269B57758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57758);
  }
  return result;
}

unint64_t sub_251904020()
{
  unint64_t result = qword_269B57760;
  if (!qword_269B57760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57760);
  }
  return result;
}

unint64_t sub_251904074()
{
  unint64_t result = qword_269B57768;
  if (!qword_269B57768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57768);
  }
  return result;
}

unint64_t sub_2519040C8()
{
  unint64_t result = qword_269B57770;
  if (!qword_269B57770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57770);
  }
  return result;
}

unint64_t sub_25190411C()
{
  unint64_t result = qword_269B57778;
  if (!qword_269B57778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57778);
  }
  return result;
}

unint64_t sub_251904170()
{
  unint64_t result = qword_269B57780;
  if (!qword_269B57780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57780);
  }
  return result;
}

unint64_t sub_2519041C4()
{
  unint64_t result = qword_269B57788;
  if (!qword_269B57788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57788);
  }
  return result;
}

unint64_t sub_251904218()
{
  unint64_t result = qword_269B57790;
  if (!qword_269B57790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57790);
  }
  return result;
}

unint64_t sub_25190426C()
{
  unint64_t result = qword_269B57798;
  if (!qword_269B57798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57798);
  }
  return result;
}

unint64_t sub_2519042C0()
{
  unint64_t result = qword_269B577A8;
  if (!qword_269B577A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B577A8);
  }
  return result;
}

unint64_t sub_251904314()
{
  unint64_t result = qword_269B577B0;
  if (!qword_269B577B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B577B0);
  }
  return result;
}

unint64_t sub_251904368()
{
  unint64_t result = qword_269B577B8;
  if (!qword_269B577B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B577B8);
  }
  return result;
}

unint64_t sub_2519043BC()
{
  unint64_t result = qword_269B577C0;
  if (!qword_269B577C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B577C0);
  }
  return result;
}

unint64_t sub_251904410()
{
  unint64_t result = qword_269B577C8;
  if (!qword_269B577C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B577C8);
  }
  return result;
}

unint64_t sub_251904464()
{
  unint64_t result = qword_269B577D0;
  if (!qword_269B577D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B577D0);
  }
  return result;
}

unint64_t sub_2519044B8()
{
  unint64_t result = qword_269B577D8;
  if (!qword_269B577D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B577D8);
  }
  return result;
}

unint64_t sub_25190450C()
{
  unint64_t result = qword_269B577E0;
  if (!qword_269B577E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B577E0);
  }
  return result;
}

unint64_t sub_251904560()
{
  unint64_t result = qword_269B577E8;
  if (!qword_269B577E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B577E8);
  }
  return result;
}

unint64_t sub_2519045B4()
{
  unint64_t result = qword_269B577F0;
  if (!qword_269B577F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B577F0);
  }
  return result;
}

unint64_t sub_251904608()
{
  unint64_t result = qword_269B577F8;
  if (!qword_269B577F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B577F8);
  }
  return result;
}

unint64_t sub_25190465C()
{
  unint64_t result = qword_269B57800;
  if (!qword_269B57800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57800);
  }
  return result;
}

unint64_t sub_2519046B0()
{
  unint64_t result = qword_269B57808;
  if (!qword_269B57808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57808);
  }
  return result;
}

unint64_t sub_251904704()
{
  unint64_t result = qword_269B57810;
  if (!qword_269B57810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57810);
  }
  return result;
}

unint64_t sub_251904758()
{
  unint64_t result = qword_269B57818;
  if (!qword_269B57818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57818);
  }
  return result;
}

unint64_t sub_2519047AC()
{
  unint64_t result = qword_269B57828;
  if (!qword_269B57828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57828);
  }
  return result;
}

unint64_t sub_251904800()
{
  unint64_t result = qword_269B57830;
  if (!qword_269B57830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57830);
  }
  return result;
}

unint64_t sub_251904854()
{
  unint64_t result = qword_269B57838;
  if (!qword_269B57838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57838);
  }
  return result;
}

unint64_t sub_2519048A8()
{
  unint64_t result = qword_269B57840;
  if (!qword_269B57840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57840);
  }
  return result;
}

unint64_t sub_2519048FC()
{
  unint64_t result = qword_269B57850;
  if (!qword_269B57850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57850);
  }
  return result;
}

unint64_t sub_251904950()
{
  unint64_t result = qword_269B57858;
  if (!qword_269B57858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57858);
  }
  return result;
}

unint64_t sub_2519049A4()
{
  unint64_t result = qword_269B57860;
  if (!qword_269B57860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57860);
  }
  return result;
}

unint64_t sub_2519049F8()
{
  unint64_t result = qword_269B57868;
  if (!qword_269B57868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57868);
  }
  return result;
}

unint64_t sub_251904A4C()
{
  unint64_t result = qword_269B57870;
  if (!qword_269B57870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57870);
  }
  return result;
}

unint64_t sub_251904AA0()
{
  unint64_t result = qword_269B57878;
  if (!qword_269B57878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57878);
  }
  return result;
}

unint64_t sub_251904AF4()
{
  unint64_t result = qword_269B57880;
  if (!qword_269B57880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57880);
  }
  return result;
}

unint64_t sub_251904B48()
{
  unint64_t result = qword_269B57888;
  if (!qword_269B57888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57888);
  }
  return result;
}

unint64_t sub_251904B9C()
{
  unint64_t result = qword_269B57890;
  if (!qword_269B57890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57890);
  }
  return result;
}

unint64_t sub_251904BF0()
{
  unint64_t result = qword_269B578A0;
  if (!qword_269B578A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B578A0);
  }
  return result;
}

unint64_t sub_251904C44()
{
  unint64_t result = qword_269B578B0;
  if (!qword_269B578B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B578B0);
  }
  return result;
}

unint64_t sub_251904C98()
{
  unint64_t result = qword_269B578B8;
  if (!qword_269B578B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B578B8);
  }
  return result;
}

unint64_t sub_251904CEC()
{
  unint64_t result = qword_269B57AD0;
  if (!qword_269B57AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57AD0);
  }
  return result;
}

unint64_t sub_251904D40()
{
  unint64_t result = qword_269B57AD8;
  if (!qword_269B57AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57AD8);
  }
  return result;
}

unint64_t sub_251904D94()
{
  unint64_t result = qword_269B57AE0;
  if (!qword_269B57AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57AE0);
  }
  return result;
}

unint64_t sub_251904DE8()
{
  unint64_t result = qword_269B57AE8;
  if (!qword_269B57AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57AE8);
  }
  return result;
}

unint64_t sub_251904E3C()
{
  unint64_t result = qword_269B57AF0;
  if (!qword_269B57AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57AF0);
  }
  return result;
}

unint64_t sub_251904E90()
{
  unint64_t result = qword_269B57AF8;
  if (!qword_269B57AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57AF8);
  }
  return result;
}

unint64_t sub_251904EE4()
{
  unint64_t result = qword_269B57B00;
  if (!qword_269B57B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57B00);
  }
  return result;
}

unint64_t sub_251904F38()
{
  unint64_t result = qword_269B57B08;
  if (!qword_269B57B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57B08);
  }
  return result;
}

unint64_t sub_251904F8C()
{
  unint64_t result = qword_269B57B10;
  if (!qword_269B57B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57B10);
  }
  return result;
}

unint64_t sub_251904FE0()
{
  unint64_t result = qword_269B57B18;
  if (!qword_269B57B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57B18);
  }
  return result;
}

unint64_t sub_251905034()
{
  unint64_t result = qword_269B57B20;
  if (!qword_269B57B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57B20);
  }
  return result;
}

unint64_t sub_251905088()
{
  unint64_t result = qword_269B57B28;
  if (!qword_269B57B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57B28);
  }
  return result;
}

unint64_t sub_2519050DC()
{
  unint64_t result = qword_269B57B30;
  if (!qword_269B57B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57B30);
  }
  return result;
}

unint64_t sub_251905130()
{
  unint64_t result = qword_269B57B38;
  if (!qword_269B57B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57B38);
  }
  return result;
}

unint64_t sub_251905184()
{
  unint64_t result = qword_269B57B40;
  if (!qword_269B57B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57B40);
  }
  return result;
}

unint64_t sub_2519051D8()
{
  unint64_t result = qword_269B57B48;
  if (!qword_269B57B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57B48);
  }
  return result;
}

unint64_t sub_25190522C()
{
  unint64_t result = qword_269B57B50;
  if (!qword_269B57B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57B50);
  }
  return result;
}

unint64_t sub_251905280()
{
  unint64_t result = qword_269B57B58;
  if (!qword_269B57B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57B58);
  }
  return result;
}

unint64_t sub_2519052D4()
{
  unint64_t result = qword_269B57B60;
  if (!qword_269B57B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57B60);
  }
  return result;
}

unint64_t sub_251905328()
{
  unint64_t result = qword_269B57B68;
  if (!qword_269B57B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57B68);
  }
  return result;
}

unint64_t sub_25190537C()
{
  unint64_t result = qword_269B57B70;
  if (!qword_269B57B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57B70);
  }
  return result;
}

unint64_t sub_2519053D0()
{
  unint64_t result = qword_269B57B78;
  if (!qword_269B57B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57B78);
  }
  return result;
}

unint64_t sub_251905424()
{
  unint64_t result = qword_269B57B80;
  if (!qword_269B57B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57B80);
  }
  return result;
}

unint64_t sub_251905478()
{
  unint64_t result = qword_269B57B88;
  if (!qword_269B57B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57B88);
  }
  return result;
}

unint64_t sub_2519054CC()
{
  unint64_t result = qword_269B57B90;
  if (!qword_269B57B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57B90);
  }
  return result;
}

unint64_t sub_251905520()
{
  unint64_t result = qword_269B57B98;
  if (!qword_269B57B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57B98);
  }
  return result;
}

unint64_t sub_251905574()
{
  unint64_t result = qword_269B57BA0;
  if (!qword_269B57BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57BA0);
  }
  return result;
}

unint64_t sub_2519055C8()
{
  unint64_t result = qword_269B57BA8;
  if (!qword_269B57BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57BA8);
  }
  return result;
}

unint64_t sub_25190561C()
{
  unint64_t result = qword_269B57BB0;
  if (!qword_269B57BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57BB0);
  }
  return result;
}

unint64_t sub_251905670()
{
  unint64_t result = qword_269B57BB8;
  if (!qword_269B57BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57BB8);
  }
  return result;
}

unint64_t sub_2519056C4()
{
  unint64_t result = qword_269B57BC0;
  if (!qword_269B57BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57BC0);
  }
  return result;
}

unint64_t sub_251905718()
{
  unint64_t result = qword_269B57BC8;
  if (!qword_269B57BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57BC8);
  }
  return result;
}

unint64_t sub_25190576C()
{
  unint64_t result = qword_269B57BD0;
  if (!qword_269B57BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57BD0);
  }
  return result;
}

unint64_t sub_2519057C0()
{
  unint64_t result = qword_269B57BD8;
  if (!qword_269B57BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57BD8);
  }
  return result;
}

unint64_t sub_251905814()
{
  unint64_t result = qword_269B57BE0;
  if (!qword_269B57BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57BE0);
  }
  return result;
}

unint64_t sub_251905868()
{
  unint64_t result = qword_269B57BE8;
  if (!qword_269B57BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57BE8);
  }
  return result;
}

unint64_t sub_2519058BC()
{
  unint64_t result = qword_269B57BF0;
  if (!qword_269B57BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57BF0);
  }
  return result;
}

unint64_t sub_251905910()
{
  unint64_t result = qword_269B57BF8;
  if (!qword_269B57BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57BF8);
  }
  return result;
}

unint64_t sub_251905964()
{
  unint64_t result = qword_269B57C00;
  if (!qword_269B57C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57C00);
  }
  return result;
}

unint64_t sub_2519059B8()
{
  unint64_t result = qword_269B57C08;
  if (!qword_269B57C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57C08);
  }
  return result;
}

unint64_t sub_251905A0C()
{
  unint64_t result = qword_269B57C10;
  if (!qword_269B57C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57C10);
  }
  return result;
}

unint64_t sub_251905A60()
{
  unint64_t result = qword_269B57C18;
  if (!qword_269B57C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57C18);
  }
  return result;
}

unint64_t sub_251905AB4()
{
  unint64_t result = qword_269B57C20;
  if (!qword_269B57C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57C20);
  }
  return result;
}

unint64_t sub_251905B08()
{
  unint64_t result = qword_269B57C28;
  if (!qword_269B57C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57C28);
  }
  return result;
}

unint64_t sub_251905B5C()
{
  unint64_t result = qword_269B57C30;
  if (!qword_269B57C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57C30);
  }
  return result;
}

unint64_t sub_251905BB0()
{
  unint64_t result = qword_269B57C38;
  if (!qword_269B57C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57C38);
  }
  return result;
}

unint64_t sub_251905C04()
{
  unint64_t result = qword_269B57C40;
  if (!qword_269B57C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57C40);
  }
  return result;
}

unint64_t sub_251905C58()
{
  unint64_t result = qword_269B57C48;
  if (!qword_269B57C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57C48);
  }
  return result;
}

unint64_t sub_251905CAC()
{
  unint64_t result = qword_269B57C50;
  if (!qword_269B57C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57C50);
  }
  return result;
}

unint64_t sub_251905D00()
{
  unint64_t result = qword_269B57C58;
  if (!qword_269B57C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57C58);
  }
  return result;
}

unint64_t sub_251905D54()
{
  unint64_t result = qword_269B57C60;
  if (!qword_269B57C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57C60);
  }
  return result;
}

unint64_t sub_251905DA8()
{
  unint64_t result = qword_269B57C68;
  if (!qword_269B57C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57C68);
  }
  return result;
}

unint64_t sub_251905DFC()
{
  unint64_t result = qword_269B57C70;
  if (!qword_269B57C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57C70);
  }
  return result;
}

unint64_t sub_251905E50()
{
  unint64_t result = qword_269B57C78;
  if (!qword_269B57C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57C78);
  }
  return result;
}

unint64_t sub_251905EA4()
{
  unint64_t result = qword_269B57C80;
  if (!qword_269B57C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57C80);
  }
  return result;
}

unint64_t sub_251905EF8()
{
  unint64_t result = qword_269B57C88;
  if (!qword_269B57C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57C88);
  }
  return result;
}

unint64_t sub_251905F4C()
{
  unint64_t result = qword_269B57C90;
  if (!qword_269B57C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57C90);
  }
  return result;
}

unint64_t sub_251905FA0()
{
  unint64_t result = qword_269B57C98;
  if (!qword_269B57C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57C98);
  }
  return result;
}

unint64_t sub_251905FF4()
{
  unint64_t result = qword_269B57CA0;
  if (!qword_269B57CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57CA0);
  }
  return result;
}

unint64_t sub_251906048()
{
  unint64_t result = qword_269B57CA8;
  if (!qword_269B57CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57CA8);
  }
  return result;
}

unint64_t sub_25190609C()
{
  unint64_t result = qword_269B57CB0;
  if (!qword_269B57CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57CB0);
  }
  return result;
}

unint64_t sub_2519060F0()
{
  unint64_t result = qword_269B57CB8;
  if (!qword_269B57CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57CB8);
  }
  return result;
}

unint64_t sub_251906144()
{
  unint64_t result = qword_269B57CC0;
  if (!qword_269B57CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57CC0);
  }
  return result;
}

unint64_t sub_251906198()
{
  unint64_t result = qword_269B57CC8;
  if (!qword_269B57CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57CC8);
  }
  return result;
}

unint64_t sub_2519061EC()
{
  unint64_t result = qword_269B57CD0;
  if (!qword_269B57CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57CD0);
  }
  return result;
}

unint64_t sub_251906240()
{
  unint64_t result = qword_269B57CD8;
  if (!qword_269B57CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57CD8);
  }
  return result;
}

uint64_t sub_251906294(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57CF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2519062FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B57CF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for Attribute.WaterLevelCase()
{
  return &type metadata for Attribute.WaterLevelCase;
}

ValueMetadata *type metadata accessor for Attribute.WaterLevelCase.Resolver()
{
  return &type metadata for Attribute.WaterLevelCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.VolatileOrganicCompoundDensityCase()
{
  return &type metadata for Attribute.VolatileOrganicCompoundDensityCase;
}

ValueMetadata *type metadata accessor for Attribute.VolatileOrganicCompoundDensityCase.Resolver()
{
  return &type metadata for Attribute.VolatileOrganicCompoundDensityCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.ThermostatModeAndRangeCase()
{
  return &type metadata for Attribute.ThermostatModeAndRangeCase;
}

ValueMetadata *type metadata accessor for Attribute.ThermostatModeAndRangeCase.Resolver()
{
  return &type metadata for Attribute.ThermostatModeAndRangeCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.ThermostatModeAndValueCase()
{
  return &type metadata for Attribute.ThermostatModeAndValueCase;
}

ValueMetadata *type metadata accessor for Attribute.ThermostatModeAndValueCase.Resolver()
{
  return &type metadata for Attribute.ThermostatModeAndValueCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.ThermostatModeCase()
{
  return &type metadata for Attribute.ThermostatModeCase;
}

ValueMetadata *type metadata accessor for Attribute.ThermostatModeCase.Resolver()
{
  return &type metadata for Attribute.ThermostatModeCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.TargetVerticalTiltCase()
{
  return &type metadata for Attribute.TargetVerticalTiltCase;
}

ValueMetadata *type metadata accessor for Attribute.TargetVerticalTiltCase.Resolver()
{
  return &type metadata for Attribute.TargetVerticalTiltCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.TargetSecuritySystemStateCase()
{
  return &type metadata for Attribute.TargetSecuritySystemStateCase;
}

ValueMetadata *type metadata accessor for Attribute.TargetSecuritySystemStateCase.Resolver()
{
  return &type metadata for Attribute.TargetSecuritySystemStateCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.TargetPositionCase()
{
  return &type metadata for Attribute.TargetPositionCase;
}

ValueMetadata *type metadata accessor for Attribute.TargetPositionCase.Resolver()
{
  return &type metadata for Attribute.TargetPositionCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.TargetLockStateCase()
{
  return &type metadata for Attribute.TargetLockStateCase;
}

ValueMetadata *type metadata accessor for Attribute.TargetLockStateCase.Resolver()
{
  return &type metadata for Attribute.TargetLockStateCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.TargetHumidityCase()
{
  return &type metadata for Attribute.TargetHumidityCase;
}

ValueMetadata *type metadata accessor for Attribute.TargetHumidityCase.Resolver()
{
  return &type metadata for Attribute.TargetHumidityCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.TargetHorizontalTiltCase()
{
  return &type metadata for Attribute.TargetHorizontalTiltCase;
}

ValueMetadata *type metadata accessor for Attribute.TargetHorizontalTiltCase.Resolver()
{
  return &type metadata for Attribute.TargetHorizontalTiltCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.TargetDoorStateCase()
{
  return &type metadata for Attribute.TargetDoorStateCase;
}

ValueMetadata *type metadata accessor for Attribute.TargetDoorStateCase.Resolver()
{
  return &type metadata for Attribute.TargetDoorStateCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.TargetAirPurifierStateCase()
{
  return &type metadata for Attribute.TargetAirPurifierStateCase;
}

ValueMetadata *type metadata accessor for Attribute.TargetAirPurifierStateCase.Resolver()
{
  return &type metadata for Attribute.TargetAirPurifierStateCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.SwingModeEnabledCase()
{
  return &type metadata for Attribute.SwingModeEnabledCase;
}

ValueMetadata *type metadata accessor for Attribute.SwingModeEnabledCase.Resolver()
{
  return &type metadata for Attribute.SwingModeEnabledCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.SulphurDioxideDensityCase()
{
  return &type metadata for Attribute.SulphurDioxideDensityCase;
}

ValueMetadata *type metadata accessor for Attribute.SulphurDioxideDensityCase.Resolver()
{
  return &type metadata for Attribute.SulphurDioxideDensityCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.SmokeDetectedCase()
{
  return &type metadata for Attribute.SmokeDetectedCase;
}

ValueMetadata *type metadata accessor for Attribute.SmokeDetectedCase.Resolver()
{
  return &type metadata for Attribute.SmokeDetectedCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.SetDurationCase()
{
  return &type metadata for Attribute.SetDurationCase;
}

ValueMetadata *type metadata accessor for Attribute.SetDurationCase.Resolver()
{
  return &type metadata for Attribute.SetDurationCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.RvcCase()
{
  return &type metadata for Attribute.RvcCase;
}

ValueMetadata *type metadata accessor for Attribute.RvcCase.Resolver()
{
  return &type metadata for Attribute.RvcCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.RotationSpeedCase()
{
  return &type metadata for Attribute.RotationSpeedCase;
}

ValueMetadata *type metadata accessor for Attribute.RotationSpeedCase.Resolver()
{
  return &type metadata for Attribute.RotationSpeedCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.RotationDirectionCase()
{
  return &type metadata for Attribute.RotationDirectionCase;
}

ValueMetadata *type metadata accessor for Attribute.RotationDirectionCase.Resolver()
{
  return &type metadata for Attribute.RotationDirectionCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.RemainingDurationCase()
{
  return &type metadata for Attribute.RemainingDurationCase;
}

ValueMetadata *type metadata accessor for Attribute.RemainingDurationCase.Resolver()
{
  return &type metadata for Attribute.RemainingDurationCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.PowerCase()
{
  return &type metadata for Attribute.PowerCase;
}

ValueMetadata *type metadata accessor for Attribute.PowerCase.Resolver()
{
  return &type metadata for Attribute.PowerCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.PositionStateCase()
{
  return &type metadata for Attribute.PositionStateCase;
}

ValueMetadata *type metadata accessor for Attribute.PositionStateCase.Resolver()
{
  return &type metadata for Attribute.PositionStateCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.Pm2_5DensityCase()
{
  return &type metadata for Attribute.Pm2_5DensityCase;
}

ValueMetadata *type metadata accessor for Attribute.Pm2_5DensityCase.Resolver()
{
  return &type metadata for Attribute.Pm2_5DensityCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.Pm10DensityCase()
{
  return &type metadata for Attribute.Pm10DensityCase;
}

ValueMetadata *type metadata accessor for Attribute.Pm10DensityCase.Resolver()
{
  return &type metadata for Attribute.Pm10DensityCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.OzoneDensityCase()
{
  return &type metadata for Attribute.OzoneDensityCase;
}

ValueMetadata *type metadata accessor for Attribute.OzoneDensityCase.Resolver()
{
  return &type metadata for Attribute.OzoneDensityCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.OccupancyDetectedCase()
{
  return &type metadata for Attribute.OccupancyDetectedCase;
}

ValueMetadata *type metadata accessor for Attribute.OccupancyDetectedCase.Resolver()
{
  return &type metadata for Attribute.OccupancyDetectedCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.ObstructionDetectedCase()
{
  return &type metadata for Attribute.ObstructionDetectedCase;
}

ValueMetadata *type metadata accessor for Attribute.ObstructionDetectedCase.Resolver()
{
  return &type metadata for Attribute.ObstructionDetectedCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.NitrogenDioxideDensityCase()
{
  return &type metadata for Attribute.NitrogenDioxideDensityCase;
}

ValueMetadata *type metadata accessor for Attribute.NitrogenDioxideDensityCase.Resolver()
{
  return &type metadata for Attribute.NitrogenDioxideDensityCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.NaturalLightCase()
{
  return &type metadata for Attribute.NaturalLightCase;
}

ValueMetadata *type metadata accessor for Attribute.NaturalLightCase.Resolver()
{
  return &type metadata for Attribute.NaturalLightCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.MotionDetectedCase()
{
  return &type metadata for Attribute.MotionDetectedCase;
}

ValueMetadata *type metadata accessor for Attribute.MotionDetectedCase.Resolver()
{
  return &type metadata for Attribute.MotionDetectedCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.LowBatteryCase()
{
  return &type metadata for Attribute.LowBatteryCase;
}

ValueMetadata *type metadata accessor for Attribute.LowBatteryCase.Resolver()
{
  return &type metadata for Attribute.LowBatteryCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.LightLevelCase()
{
  return &type metadata for Attribute.LightLevelCase;
}

ValueMetadata *type metadata accessor for Attribute.LightLevelCase.Resolver()
{
  return &type metadata for Attribute.LightLevelCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.LeakDetectedCase()
{
  return &type metadata for Attribute.LeakDetectedCase;
}

ValueMetadata *type metadata accessor for Attribute.LeakDetectedCase.Resolver()
{
  return &type metadata for Attribute.LeakDetectedCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.InUseCase()
{
  return &type metadata for Attribute.InUseCase;
}

ValueMetadata *type metadata accessor for Attribute.InUseCase.Resolver()
{
  return &type metadata for Attribute.InUseCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.HumidifierDehumidifierModeAndRangeCase()
{
  return &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase;
}

ValueMetadata *type metadata accessor for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver()
{
  return &type metadata for Attribute.HumidifierDehumidifierModeAndRangeCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.HumidifierDehumidifierModeAndValueCase()
{
  return &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase;
}

ValueMetadata *type metadata accessor for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver()
{
  return &type metadata for Attribute.HumidifierDehumidifierModeAndValueCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.HumidifierDehumidifierModeCase()
{
  return &type metadata for Attribute.HumidifierDehumidifierModeCase;
}

ValueMetadata *type metadata accessor for Attribute.HumidifierDehumidifierModeCase.Resolver()
{
  return &type metadata for Attribute.HumidifierDehumidifierModeCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.FilterLifeLevelCase()
{
  return &type metadata for Attribute.FilterLifeLevelCase;
}

ValueMetadata *type metadata accessor for Attribute.FilterLifeLevelCase.Resolver()
{
  return &type metadata for Attribute.FilterLifeLevelCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.FilterChangeNeededCase()
{
  return &type metadata for Attribute.FilterChangeNeededCase;
}

ValueMetadata *type metadata accessor for Attribute.FilterChangeNeededCase.Resolver()
{
  return &type metadata for Attribute.FilterChangeNeededCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.CurrentVerticalTiltCase()
{
  return &type metadata for Attribute.CurrentVerticalTiltCase;
}

ValueMetadata *type metadata accessor for Attribute.CurrentVerticalTiltCase.Resolver()
{
  return &type metadata for Attribute.CurrentVerticalTiltCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.CurrentThermostatModeCase()
{
  return &type metadata for Attribute.CurrentThermostatModeCase;
}

ValueMetadata *type metadata accessor for Attribute.CurrentThermostatModeCase.Resolver()
{
  return &type metadata for Attribute.CurrentThermostatModeCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.CurrentTemperatureCase()
{
  return &type metadata for Attribute.CurrentTemperatureCase;
}

ValueMetadata *type metadata accessor for Attribute.CurrentTemperatureCase.Resolver()
{
  return &type metadata for Attribute.CurrentTemperatureCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.CurrentSecuritySystemStateCase()
{
  return &type metadata for Attribute.CurrentSecuritySystemStateCase;
}

ValueMetadata *type metadata accessor for Attribute.CurrentSecuritySystemStateCase.Resolver()
{
  return &type metadata for Attribute.CurrentSecuritySystemStateCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.CurrentPositionCase()
{
  return &type metadata for Attribute.CurrentPositionCase;
}

ValueMetadata *type metadata accessor for Attribute.CurrentPositionCase.Resolver()
{
  return &type metadata for Attribute.CurrentPositionCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.CurrentLockStateCase()
{
  return &type metadata for Attribute.CurrentLockStateCase;
}

ValueMetadata *type metadata accessor for Attribute.CurrentLockStateCase.Resolver()
{
  return &type metadata for Attribute.CurrentLockStateCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.CurrentHumidityCase()
{
  return &type metadata for Attribute.CurrentHumidityCase;
}

ValueMetadata *type metadata accessor for Attribute.CurrentHumidityCase.Resolver()
{
  return &type metadata for Attribute.CurrentHumidityCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.CurrentHumidifierDehumidifierModeCase()
{
  return &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase;
}

ValueMetadata *type metadata accessor for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver()
{
  return &type metadata for Attribute.CurrentHumidifierDehumidifierModeCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.CurrentHorizontalTiltCase()
{
  return &type metadata for Attribute.CurrentHorizontalTiltCase;
}

ValueMetadata *type metadata accessor for Attribute.CurrentHorizontalTiltCase.Resolver()
{
  return &type metadata for Attribute.CurrentHorizontalTiltCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.CurrentDoorStateCase()
{
  return &type metadata for Attribute.CurrentDoorStateCase;
}

ValueMetadata *type metadata accessor for Attribute.CurrentDoorStateCase.Resolver()
{
  return &type metadata for Attribute.CurrentDoorStateCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.CurrentAirPurifierStateCase()
{
  return &type metadata for Attribute.CurrentAirPurifierStateCase;
}

ValueMetadata *type metadata accessor for Attribute.CurrentAirPurifierStateCase.Resolver()
{
  return &type metadata for Attribute.CurrentAirPurifierStateCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.ContactDetectedCase()
{
  return &type metadata for Attribute.ContactDetectedCase;
}

ValueMetadata *type metadata accessor for Attribute.ContactDetectedCase.Resolver()
{
  return &type metadata for Attribute.ContactDetectedCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.ColorCase()
{
  return &type metadata for Attribute.ColorCase;
}

ValueMetadata *type metadata accessor for Attribute.ColorCase.Resolver()
{
  return &type metadata for Attribute.ColorCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.ChildLockEnabledCase()
{
  return &type metadata for Attribute.ChildLockEnabledCase;
}

ValueMetadata *type metadata accessor for Attribute.ChildLockEnabledCase.Resolver()
{
  return &type metadata for Attribute.ChildLockEnabledCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.ChargingStateCase()
{
  return &type metadata for Attribute.ChargingStateCase;
}

ValueMetadata *type metadata accessor for Attribute.ChargingStateCase.Resolver()
{
  return &type metadata for Attribute.ChargingStateCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.CarbonMonoxidePeakLevelCase()
{
  return &type metadata for Attribute.CarbonMonoxidePeakLevelCase;
}

ValueMetadata *type metadata accessor for Attribute.CarbonMonoxidePeakLevelCase.Resolver()
{
  return &type metadata for Attribute.CarbonMonoxidePeakLevelCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.CarbonMonoxideLevelCase()
{
  return &type metadata for Attribute.CarbonMonoxideLevelCase;
}

ValueMetadata *type metadata accessor for Attribute.CarbonMonoxideLevelCase.Resolver()
{
  return &type metadata for Attribute.CarbonMonoxideLevelCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.CarbonMonoxideDetectedCase()
{
  return &type metadata for Attribute.CarbonMonoxideDetectedCase;
}

ValueMetadata *type metadata accessor for Attribute.CarbonMonoxideDetectedCase.Resolver()
{
  return &type metadata for Attribute.CarbonMonoxideDetectedCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.CarbonDioxidePeakLevelCase()
{
  return &type metadata for Attribute.CarbonDioxidePeakLevelCase;
}

ValueMetadata *type metadata accessor for Attribute.CarbonDioxidePeakLevelCase.Resolver()
{
  return &type metadata for Attribute.CarbonDioxidePeakLevelCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.CarbonDioxideLevelCase()
{
  return &type metadata for Attribute.CarbonDioxideLevelCase;
}

ValueMetadata *type metadata accessor for Attribute.CarbonDioxideLevelCase.Resolver()
{
  return &type metadata for Attribute.CarbonDioxideLevelCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.CarbonDioxideDetectedCase()
{
  return &type metadata for Attribute.CarbonDioxideDetectedCase;
}

ValueMetadata *type metadata accessor for Attribute.CarbonDioxideDetectedCase.Resolver()
{
  return &type metadata for Attribute.CarbonDioxideDetectedCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.BrightnessCase()
{
  return &type metadata for Attribute.BrightnessCase;
}

ValueMetadata *type metadata accessor for Attribute.BrightnessCase.Resolver()
{
  return &type metadata for Attribute.BrightnessCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.BatteryLevelCase()
{
  return &type metadata for Attribute.BatteryLevelCase;
}

ValueMetadata *type metadata accessor for Attribute.BatteryLevelCase.Resolver()
{
  return &type metadata for Attribute.BatteryLevelCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.AirQualityCase()
{
  return &type metadata for Attribute.AirQualityCase;
}

ValueMetadata *type metadata accessor for Attribute.AirQualityCase.Resolver()
{
  return &type metadata for Attribute.AirQualityCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.AirParticulateSizeCase()
{
  return &type metadata for Attribute.AirParticulateSizeCase;
}

ValueMetadata *type metadata accessor for Attribute.AirParticulateSizeCase.Resolver()
{
  return &type metadata for Attribute.AirParticulateSizeCase.Resolver;
}

ValueMetadata *type metadata accessor for Attribute.AirParticulateDensityCase()
{
  return &type metadata for Attribute.AirParticulateDensityCase;
}

ValueMetadata *type metadata accessor for Attribute.AirParticulateDensityCase.Resolver()
{
  return &type metadata for Attribute.AirParticulateDensityCase.Resolver;
}

uint64_t sub_251906BB8()
{
  return sub_2517E2990(&qword_269B57D10, &qword_269B57D18);
}

unint64_t sub_251906BF8()
{
  unint64_t result = qword_269B57D20;
  if (!qword_269B57D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57D20);
  }
  return result;
}

unint64_t sub_251906C50()
{
  unint64_t result = qword_269B57D28;
  if (!qword_269B57D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57D28);
  }
  return result;
}

unint64_t sub_251906CA8()
{
  unint64_t result = qword_269B57D30;
  if (!qword_269B57D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57D30);
  }
  return result;
}

unint64_t sub_251906D00()
{
  unint64_t result = qword_269B57D38;
  if (!qword_269B57D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57D38);
  }
  return result;
}

unint64_t sub_251906D58()
{
  unint64_t result = qword_269B57D40;
  if (!qword_269B57D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57D40);
  }
  return result;
}

unint64_t sub_251906DB4()
{
  unint64_t result = qword_269B57D48;
  if (!qword_269B57D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57D48);
  }
  return result;
}

unint64_t sub_251906E0C()
{
  unint64_t result = qword_269B57D50;
  if (!qword_269B57D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57D50);
  }
  return result;
}

unint64_t sub_251906E64()
{
  unint64_t result = qword_269B57D58;
  if (!qword_269B57D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57D58);
  }
  return result;
}

uint64_t sub_251906EB8()
{
  return sub_2517E2990(&qword_269B57D60, &qword_269B57D68);
}

unint64_t sub_251906EF8()
{
  unint64_t result = qword_269B57D70;
  if (!qword_269B57D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57D70);
  }
  return result;
}

unint64_t sub_251906F50()
{
  unint64_t result = qword_269B57D78;
  if (!qword_269B57D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57D78);
  }
  return result;
}

unint64_t sub_251906FA8()
{
  unint64_t result = qword_269B57D80;
  if (!qword_269B57D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57D80);
  }
  return result;
}

unint64_t sub_251907000()
{
  unint64_t result = qword_269B57D88;
  if (!qword_269B57D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57D88);
  }
  return result;
}

unint64_t sub_251907058()
{
  unint64_t result = qword_269B57D90;
  if (!qword_269B57D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57D90);
  }
  return result;
}

unint64_t sub_2519070B0()
{
  unint64_t result = qword_269B57D98;
  if (!qword_269B57D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57D98);
  }
  return result;
}

unint64_t sub_25190710C()
{
  unint64_t result = qword_269B57DA0;
  if (!qword_269B57DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57DA0);
  }
  return result;
}

unint64_t sub_251907164()
{
  unint64_t result = qword_269B57DA8;
  if (!qword_269B57DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57DA8);
  }
  return result;
}

unint64_t sub_2519071BC()
{
  unint64_t result = qword_269B57DB0;
  if (!qword_269B57DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57DB0);
  }
  return result;
}

uint64_t sub_251907210()
{
  return sub_2517E2990(&qword_269B57DB8, &qword_269B57DC0);
}

unint64_t sub_251907250()
{
  unint64_t result = qword_269B57DC8;
  if (!qword_269B57DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57DC8);
  }
  return result;
}

unint64_t sub_2519072A8()
{
  unint64_t result = qword_269B57DD0;
  if (!qword_269B57DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57DD0);
  }
  return result;
}

unint64_t sub_251907300()
{
  unint64_t result = qword_269B57DD8;
  if (!qword_269B57DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57DD8);
  }
  return result;
}

unint64_t sub_251907358()
{
  unint64_t result = qword_269B57DE0;
  if (!qword_269B57DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57DE0);
  }
  return result;
}

unint64_t sub_2519073B0()
{
  unint64_t result = qword_269B57DE8;
  if (!qword_269B57DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57DE8);
  }
  return result;
}

unint64_t sub_251907408()
{
  unint64_t result = qword_269B57DF0;
  if (!qword_269B57DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57DF0);
  }
  return result;
}

unint64_t sub_251907464()
{
  unint64_t result = qword_269B57DF8;
  if (!qword_269B57DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57DF8);
  }
  return result;
}

unint64_t sub_2519074BC()
{
  unint64_t result = qword_269B57E00;
  if (!qword_269B57E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57E00);
  }
  return result;
}

unint64_t sub_251907514()
{
  unint64_t result = qword_269B57E08;
  if (!qword_269B57E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57E08);
  }
  return result;
}

uint64_t sub_251907568()
{
  return sub_2517E2990(&qword_269B57E10, &qword_269B57E18);
}

unint64_t sub_2519075A8()
{
  unint64_t result = qword_269B57E20;
  if (!qword_269B57E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57E20);
  }
  return result;
}

unint64_t sub_251907600()
{
  unint64_t result = qword_269B57E28;
  if (!qword_269B57E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57E28);
  }
  return result;
}

unint64_t sub_251907658()
{
  unint64_t result = qword_269B57E30;
  if (!qword_269B57E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57E30);
  }
  return result;
}

unint64_t sub_2519076B0()
{
  unint64_t result = qword_269B57E38;
  if (!qword_269B57E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57E38);
  }
  return result;
}

unint64_t sub_251907708()
{
  unint64_t result = qword_269B57E40;
  if (!qword_269B57E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57E40);
  }
  return result;
}

unint64_t sub_251907760()
{
  unint64_t result = qword_269B57E48;
  if (!qword_269B57E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57E48);
  }
  return result;
}

unint64_t sub_2519077BC()
{
  unint64_t result = qword_269B57E50;
  if (!qword_269B57E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57E50);
  }
  return result;
}

unint64_t sub_251907814()
{
  unint64_t result = qword_269B57E58;
  if (!qword_269B57E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57E58);
  }
  return result;
}

unint64_t sub_25190786C()
{
  unint64_t result = qword_269B57E60;
  if (!qword_269B57E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57E60);
  }
  return result;
}

uint64_t sub_2519078C0()
{
  return sub_2517E2990(&qword_269B57E68, &qword_269B57E70);
}

unint64_t sub_251907900()
{
  unint64_t result = qword_269B57E78;
  if (!qword_269B57E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57E78);
  }
  return result;
}

unint64_t sub_251907958()
{
  unint64_t result = qword_269B57E80;
  if (!qword_269B57E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57E80);
  }
  return result;
}

unint64_t sub_2519079B0()
{
  unint64_t result = qword_269B57E88;
  if (!qword_269B57E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57E88);
  }
  return result;
}

unint64_t sub_251907A08()
{
  unint64_t result = qword_269B57E90;
  if (!qword_269B57E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57E90);
  }
  return result;
}

unint64_t sub_251907A60()
{
  unint64_t result = qword_269B57E98;
  if (!qword_269B57E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57E98);
  }
  return result;
}

unint64_t sub_251907AB8()
{
  unint64_t result = qword_269B57EA0;
  if (!qword_269B57EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57EA0);
  }
  return result;
}

unint64_t sub_251907B14()
{
  unint64_t result = qword_269B57EA8;
  if (!qword_269B57EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57EA8);
  }
  return result;
}

unint64_t sub_251907B6C()
{
  unint64_t result = qword_269B57EB0;
  if (!qword_269B57EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57EB0);
  }
  return result;
}

unint64_t sub_251907BC4()
{
  unint64_t result = qword_269B57EB8;
  if (!qword_269B57EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57EB8);
  }
  return result;
}

uint64_t sub_251907C18()
{
  return sub_2517E2990(&qword_269B57EC0, &qword_269B57EC8);
}

unint64_t sub_251907C58()
{
  unint64_t result = qword_269B57ED0;
  if (!qword_269B57ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57ED0);
  }
  return result;
}

unint64_t sub_251907CB0()
{
  unint64_t result = qword_269B57ED8;
  if (!qword_269B57ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57ED8);
  }
  return result;
}

unint64_t sub_251907D08()
{
  unint64_t result = qword_269B57EE0;
  if (!qword_269B57EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57EE0);
  }
  return result;
}

unint64_t sub_251907D60()
{
  unint64_t result = qword_269B57EE8;
  if (!qword_269B57EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57EE8);
  }
  return result;
}

unint64_t sub_251907DB8()
{
  unint64_t result = qword_269B57EF0;
  if (!qword_269B57EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57EF0);
  }
  return result;
}

unint64_t sub_251907E10()
{
  unint64_t result = qword_269B57EF8;
  if (!qword_269B57EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57EF8);
  }
  return result;
}

unint64_t sub_251907E6C()
{
  unint64_t result = qword_269B57F00;
  if (!qword_269B57F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57F00);
  }
  return result;
}

unint64_t sub_251907EC4()
{
  unint64_t result = qword_269B57F08;
  if (!qword_269B57F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57F08);
  }
  return result;
}

unint64_t sub_251907F1C()
{
  unint64_t result = qword_269B57F10;
  if (!qword_269B57F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57F10);
  }
  return result;
}

uint64_t sub_251907F70()
{
  return sub_2517E2990(&qword_269B57F18, &qword_269B57F20);
}

unint64_t sub_251907FB0()
{
  unint64_t result = qword_269B57F28;
  if (!qword_269B57F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57F28);
  }
  return result;
}

unint64_t sub_251908008()
{
  unint64_t result = qword_269B57F30;
  if (!qword_269B57F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57F30);
  }
  return result;
}

unint64_t sub_251908060()
{
  unint64_t result = qword_269B57F38;
  if (!qword_269B57F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57F38);
  }
  return result;
}

unint64_t sub_2519080B8()
{
  unint64_t result = qword_269B57F40;
  if (!qword_269B57F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57F40);
  }
  return result;
}

unint64_t sub_251908110()
{
  unint64_t result = qword_269B57F48;
  if (!qword_269B57F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57F48);
  }
  return result;
}

unint64_t sub_251908168()
{
  unint64_t result = qword_269B57F50;
  if (!qword_269B57F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57F50);
  }
  return result;
}

unint64_t sub_2519081C4()
{
  unint64_t result = qword_269B57F58;
  if (!qword_269B57F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57F58);
  }
  return result;
}

unint64_t sub_25190821C()
{
  unint64_t result = qword_269B57F60;
  if (!qword_269B57F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57F60);
  }
  return result;
}

unint64_t sub_251908274()
{
  unint64_t result = qword_269B57F68;
  if (!qword_269B57F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57F68);
  }
  return result;
}

uint64_t sub_2519082C8()
{
  return sub_2517E2990(&qword_269B57F70, &qword_269B57F78);
}

unint64_t sub_251908308()
{
  unint64_t result = qword_269B57F80;
  if (!qword_269B57F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57F80);
  }
  return result;
}

unint64_t sub_251908360()
{
  unint64_t result = qword_269B57F88;
  if (!qword_269B57F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57F88);
  }
  return result;
}

unint64_t sub_2519083B8()
{
  unint64_t result = qword_269B57F90;
  if (!qword_269B57F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57F90);
  }
  return result;
}

unint64_t sub_251908410()
{
  unint64_t result = qword_269B57F98;
  if (!qword_269B57F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57F98);
  }
  return result;
}

unint64_t sub_251908468()
{
  unint64_t result = qword_269B57FA0;
  if (!qword_269B57FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57FA0);
  }
  return result;
}

unint64_t sub_2519084C0()
{
  unint64_t result = qword_269B57FA8;
  if (!qword_269B57FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57FA8);
  }
  return result;
}

unint64_t sub_25190851C()
{
  unint64_t result = qword_269B57FB0;
  if (!qword_269B57FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57FB0);
  }
  return result;
}

unint64_t sub_251908574()
{
  unint64_t result = qword_269B57FB8;
  if (!qword_269B57FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57FB8);
  }
  return result;
}

unint64_t sub_2519085CC()
{
  unint64_t result = qword_269B57FC0;
  if (!qword_269B57FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57FC0);
  }
  return result;
}

uint64_t sub_251908620()
{
  return sub_2517E2990(&qword_269B57FC8, &qword_269B57FD0);
}

unint64_t sub_251908660()
{
  unint64_t result = qword_269B57FD8;
  if (!qword_269B57FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57FD8);
  }
  return result;
}

unint64_t sub_2519086B8()
{
  unint64_t result = qword_269B57FE0;
  if (!qword_269B57FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57FE0);
  }
  return result;
}

unint64_t sub_251908710()
{
  unint64_t result = qword_269B57FE8;
  if (!qword_269B57FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57FE8);
  }
  return result;
}

unint64_t sub_251908768()
{
  unint64_t result = qword_269B57FF0;
  if (!qword_269B57FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57FF0);
  }
  return result;
}

unint64_t sub_2519087C0()
{
  unint64_t result = qword_269B57FF8;
  if (!qword_269B57FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B57FF8);
  }
  return result;
}

unint64_t sub_251908818()
{
  unint64_t result = qword_269B58000;
  if (!qword_269B58000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58000);
  }
  return result;
}

unint64_t sub_251908874()
{
  unint64_t result = qword_269B58008;
  if (!qword_269B58008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58008);
  }
  return result;
}

unint64_t sub_2519088CC()
{
  unint64_t result = qword_269B58010;
  if (!qword_269B58010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58010);
  }
  return result;
}

unint64_t sub_251908924()
{
  unint64_t result = qword_269B58018;
  if (!qword_269B58018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58018);
  }
  return result;
}

uint64_t sub_251908978()
{
  return sub_2517E2990(&qword_269B58020, &qword_269B58028);
}

unint64_t sub_2519089B8()
{
  unint64_t result = qword_269B58030;
  if (!qword_269B58030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58030);
  }
  return result;
}

unint64_t sub_251908A10()
{
  unint64_t result = qword_269B58038;
  if (!qword_269B58038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58038);
  }
  return result;
}

unint64_t sub_251908A68()
{
  unint64_t result = qword_269B58040;
  if (!qword_269B58040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58040);
  }
  return result;
}

unint64_t sub_251908AC0()
{
  unint64_t result = qword_269B58048;
  if (!qword_269B58048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58048);
  }
  return result;
}

unint64_t sub_251908B18()
{
  unint64_t result = qword_269B58050;
  if (!qword_269B58050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58050);
  }
  return result;
}

unint64_t sub_251908B70()
{
  unint64_t result = qword_269B58058;
  if (!qword_269B58058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58058);
  }
  return result;
}

unint64_t sub_251908BCC()
{
  unint64_t result = qword_269B58060;
  if (!qword_269B58060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58060);
  }
  return result;
}

unint64_t sub_251908C24()
{
  unint64_t result = qword_269B58068;
  if (!qword_269B58068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58068);
  }
  return result;
}

unint64_t sub_251908C7C()
{
  unint64_t result = qword_269B58070;
  if (!qword_269B58070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58070);
  }
  return result;
}

uint64_t sub_251908CD0()
{
  return sub_2517E2990(&qword_269B58078, &qword_269B58080);
}

unint64_t sub_251908D10()
{
  unint64_t result = qword_269B58088;
  if (!qword_269B58088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58088);
  }
  return result;
}

unint64_t sub_251908D68()
{
  unint64_t result = qword_269B58090;
  if (!qword_269B58090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58090);
  }
  return result;
}

unint64_t sub_251908DC0()
{
  unint64_t result = qword_269B58098;
  if (!qword_269B58098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58098);
  }
  return result;
}

unint64_t sub_251908E18()
{
  unint64_t result = qword_269B580A0;
  if (!qword_269B580A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B580A0);
  }
  return result;
}

unint64_t sub_251908E70()
{
  unint64_t result = qword_269B580A8;
  if (!qword_269B580A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B580A8);
  }
  return result;
}

unint64_t sub_251908EC8()
{
  unint64_t result = qword_269B580B0;
  if (!qword_269B580B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B580B0);
  }
  return result;
}

unint64_t sub_251908F24()
{
  unint64_t result = qword_269B580B8;
  if (!qword_269B580B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B580B8);
  }
  return result;
}

unint64_t sub_251908F7C()
{
  unint64_t result = qword_269B580C0;
  if (!qword_269B580C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B580C0);
  }
  return result;
}

unint64_t sub_251908FD4()
{
  unint64_t result = qword_269B580C8;
  if (!qword_269B580C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B580C8);
  }
  return result;
}

uint64_t sub_251909028()
{
  return sub_2517E2990(&qword_269B580D0, &qword_269B580D8);
}

unint64_t sub_251909068()
{
  unint64_t result = qword_269B580E0;
  if (!qword_269B580E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B580E0);
  }
  return result;
}

unint64_t sub_2519090C0()
{
  unint64_t result = qword_269B580E8;
  if (!qword_269B580E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B580E8);
  }
  return result;
}

unint64_t sub_251909118()
{
  unint64_t result = qword_269B580F0;
  if (!qword_269B580F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B580F0);
  }
  return result;
}

unint64_t sub_251909170()
{
  unint64_t result = qword_269B580F8;
  if (!qword_269B580F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B580F8);
  }
  return result;
}

unint64_t sub_2519091C8()
{
  unint64_t result = qword_269B58100;
  if (!qword_269B58100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58100);
  }
  return result;
}

unint64_t sub_251909220()
{
  unint64_t result = qword_269B58108;
  if (!qword_269B58108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58108);
  }
  return result;
}

unint64_t sub_25190927C()
{
  unint64_t result = qword_269B58110;
  if (!qword_269B58110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58110);
  }
  return result;
}

unint64_t sub_2519092D4()
{
  unint64_t result = qword_269B58118;
  if (!qword_269B58118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58118);
  }
  return result;
}

unint64_t sub_25190932C()
{
  unint64_t result = qword_269B58120;
  if (!qword_269B58120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58120);
  }
  return result;
}

uint64_t sub_251909380()
{
  return sub_2517E2990(&qword_269B58128, &qword_269B58130);
}

unint64_t sub_2519093C0()
{
  unint64_t result = qword_269B58138;
  if (!qword_269B58138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58138);
  }
  return result;
}

unint64_t sub_251909418()
{
  unint64_t result = qword_269B58140;
  if (!qword_269B58140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58140);
  }
  return result;
}

unint64_t sub_251909470()
{
  unint64_t result = qword_269B58148;
  if (!qword_269B58148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58148);
  }
  return result;
}

unint64_t sub_2519094C8()
{
  unint64_t result = qword_269B58150;
  if (!qword_269B58150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58150);
  }
  return result;
}

unint64_t sub_251909520()
{
  unint64_t result = qword_269B58158;
  if (!qword_269B58158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58158);
  }
  return result;
}

unint64_t sub_251909578()
{
  unint64_t result = qword_269B58160;
  if (!qword_269B58160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58160);
  }
  return result;
}

unint64_t sub_2519095D4()
{
  unint64_t result = qword_269B58168;
  if (!qword_269B58168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58168);
  }
  return result;
}

unint64_t sub_25190962C()
{
  unint64_t result = qword_269B58170;
  if (!qword_269B58170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58170);
  }
  return result;
}

unint64_t sub_251909684()
{
  unint64_t result = qword_269B58178;
  if (!qword_269B58178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58178);
  }
  return result;
}

uint64_t sub_2519096D8()
{
  return sub_2517E2990(&qword_269B58180, &qword_269B58188);
}

unint64_t sub_251909718()
{
  unint64_t result = qword_269B58190;
  if (!qword_269B58190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58190);
  }
  return result;
}

unint64_t sub_251909770()
{
  unint64_t result = qword_269B58198;
  if (!qword_269B58198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58198);
  }
  return result;
}

unint64_t sub_2519097C8()
{
  unint64_t result = qword_269B581A0;
  if (!qword_269B581A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B581A0);
  }
  return result;
}

unint64_t sub_251909820()
{
  unint64_t result = qword_269B581A8;
  if (!qword_269B581A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B581A8);
  }
  return result;
}

unint64_t sub_251909878()
{
  unint64_t result = qword_269B581B0;
  if (!qword_269B581B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B581B0);
  }
  return result;
}

unint64_t sub_2519098D0()
{
  unint64_t result = qword_269B581B8;
  if (!qword_269B581B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B581B8);
  }
  return result;
}

unint64_t sub_25190992C()
{
  unint64_t result = qword_269B581C0;
  if (!qword_269B581C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B581C0);
  }
  return result;
}

unint64_t sub_251909984()
{
  unint64_t result = qword_269B581C8;
  if (!qword_269B581C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B581C8);
  }
  return result;
}

unint64_t sub_2519099DC()
{
  unint64_t result = qword_269B581D0;
  if (!qword_269B581D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B581D0);
  }
  return result;
}

uint64_t sub_251909A30()
{
  return sub_2517E2990(&qword_269B581D8, &qword_269B581E0);
}

unint64_t sub_251909A70()
{
  unint64_t result = qword_269B581E8;
  if (!qword_269B581E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B581E8);
  }
  return result;
}

unint64_t sub_251909AC8()
{
  unint64_t result = qword_269B581F0;
  if (!qword_269B581F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B581F0);
  }
  return result;
}

unint64_t sub_251909B20()
{
  unint64_t result = qword_269B581F8;
  if (!qword_269B581F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B581F8);
  }
  return result;
}

unint64_t sub_251909B78()
{
  unint64_t result = qword_269B58200;
  if (!qword_269B58200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58200);
  }
  return result;
}

unint64_t sub_251909BD0()
{
  unint64_t result = qword_269B58208;
  if (!qword_269B58208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58208);
  }
  return result;
}

unint64_t sub_251909C28()
{
  unint64_t result = qword_269B58210;
  if (!qword_269B58210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58210);
  }
  return result;
}

unint64_t sub_251909C84()
{
  unint64_t result = qword_269B58218;
  if (!qword_269B58218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58218);
  }
  return result;
}

unint64_t sub_251909CDC()
{
  unint64_t result = qword_269B58220;
  if (!qword_269B58220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58220);
  }
  return result;
}

unint64_t sub_251909D34()
{
  unint64_t result = qword_269B58228;
  if (!qword_269B58228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58228);
  }
  return result;
}

uint64_t sub_251909D88()
{
  return sub_2517E2990(&qword_269B58230, &qword_269B58238);
}

unint64_t sub_251909DC8()
{
  unint64_t result = qword_269B58240;
  if (!qword_269B58240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58240);
  }
  return result;
}

unint64_t sub_251909E20()
{
  unint64_t result = qword_269B58248;
  if (!qword_269B58248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58248);
  }
  return result;
}

unint64_t sub_251909E78()
{
  unint64_t result = qword_269B58250;
  if (!qword_269B58250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58250);
  }
  return result;
}

unint64_t sub_251909ED0()
{
  unint64_t result = qword_269B58258;
  if (!qword_269B58258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58258);
  }
  return result;
}

unint64_t sub_251909F28()
{
  unint64_t result = qword_269B58260;
  if (!qword_269B58260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58260);
  }
  return result;
}

unint64_t sub_251909F80()
{
  unint64_t result = qword_269B58268;
  if (!qword_269B58268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58268);
  }
  return result;
}

unint64_t sub_251909FDC()
{
  unint64_t result = qword_269B58270;
  if (!qword_269B58270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58270);
  }
  return result;
}

unint64_t sub_25190A034()
{
  unint64_t result = qword_269B58278;
  if (!qword_269B58278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58278);
  }
  return result;
}

unint64_t sub_25190A08C()
{
  unint64_t result = qword_269B58280;
  if (!qword_269B58280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58280);
  }
  return result;
}

uint64_t sub_25190A0E0()
{
  return sub_2517E2990(&qword_269B58288, &qword_269B58290);
}

unint64_t sub_25190A120()
{
  unint64_t result = qword_269B58298;
  if (!qword_269B58298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58298);
  }
  return result;
}

unint64_t sub_25190A178()
{
  unint64_t result = qword_269B582A0;
  if (!qword_269B582A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B582A0);
  }
  return result;
}

unint64_t sub_25190A1D0()
{
  unint64_t result = qword_269B582A8;
  if (!qword_269B582A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B582A8);
  }
  return result;
}

unint64_t sub_25190A228()
{
  unint64_t result = qword_269B582B0;
  if (!qword_269B582B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B582B0);
  }
  return result;
}

unint64_t sub_25190A280()
{
  unint64_t result = qword_269B582B8;
  if (!qword_269B582B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B582B8);
  }
  return result;
}

unint64_t sub_25190A2D8()
{
  unint64_t result = qword_269B582C0;
  if (!qword_269B582C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B582C0);
  }
  return result;
}

unint64_t sub_25190A334()
{
  unint64_t result = qword_269B582C8;
  if (!qword_269B582C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B582C8);
  }
  return result;
}

unint64_t sub_25190A38C()
{
  unint64_t result = qword_269B582D0;
  if (!qword_269B582D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B582D0);
  }
  return result;
}

unint64_t sub_25190A3E4()
{
  unint64_t result = qword_269B582D8;
  if (!qword_269B582D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B582D8);
  }
  return result;
}

uint64_t sub_25190A438()
{
  return sub_2517E2990(&qword_269B582E0, &qword_269B582E8);
}

unint64_t sub_25190A478()
{
  unint64_t result = qword_269B582F0;
  if (!qword_269B582F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B582F0);
  }
  return result;
}

unint64_t sub_25190A4D0()
{
  unint64_t result = qword_269B582F8;
  if (!qword_269B582F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B582F8);
  }
  return result;
}

unint64_t sub_25190A528()
{
  unint64_t result = qword_269B58300;
  if (!qword_269B58300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58300);
  }
  return result;
}

unint64_t sub_25190A580()
{
  unint64_t result = qword_269B58308;
  if (!qword_269B58308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58308);
  }
  return result;
}

unint64_t sub_25190A5D8()
{
  unint64_t result = qword_269B58310;
  if (!qword_269B58310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58310);
  }
  return result;
}

unint64_t sub_25190A630()
{
  unint64_t result = qword_269B58318;
  if (!qword_269B58318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58318);
  }
  return result;
}

unint64_t sub_25190A68C()
{
  unint64_t result = qword_269B58320;
  if (!qword_269B58320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58320);
  }
  return result;
}

unint64_t sub_25190A6E4()
{
  unint64_t result = qword_269B58328;
  if (!qword_269B58328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58328);
  }
  return result;
}

unint64_t sub_25190A73C()
{
  unint64_t result = qword_269B58330;
  if (!qword_269B58330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58330);
  }
  return result;
}

uint64_t sub_25190A790()
{
  return sub_2517E2990(&qword_269B58338, &qword_269B58340);
}

unint64_t sub_25190A7D0()
{
  unint64_t result = qword_269B58348;
  if (!qword_269B58348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58348);
  }
  return result;
}

unint64_t sub_25190A828()
{
  unint64_t result = qword_269B58350;
  if (!qword_269B58350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58350);
  }
  return result;
}

unint64_t sub_25190A880()
{
  unint64_t result = qword_269B58358;
  if (!qword_269B58358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58358);
  }
  return result;
}

unint64_t sub_25190A8D8()
{
  unint64_t result = qword_269B58360;
  if (!qword_269B58360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58360);
  }
  return result;
}

unint64_t sub_25190A930()
{
  unint64_t result = qword_269B58368;
  if (!qword_269B58368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58368);
  }
  return result;
}

unint64_t sub_25190A988()
{
  unint64_t result = qword_269B58370;
  if (!qword_269B58370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58370);
  }
  return result;
}

unint64_t sub_25190A9E4()
{
  unint64_t result = qword_269B58378;
  if (!qword_269B58378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58378);
  }
  return result;
}

unint64_t sub_25190AA3C()
{
  unint64_t result = qword_269B58380;
  if (!qword_269B58380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58380);
  }
  return result;
}

unint64_t sub_25190AA94()
{
  unint64_t result = qword_269B58388;
  if (!qword_269B58388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58388);
  }
  return result;
}

uint64_t sub_25190AAE8()
{
  return sub_2517E2990(&qword_269B58390, &qword_269B58398);
}

unint64_t sub_25190AB28()
{
  unint64_t result = qword_269B583A0;
  if (!qword_269B583A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B583A0);
  }
  return result;
}

unint64_t sub_25190AB80()
{
  unint64_t result = qword_269B583A8;
  if (!qword_269B583A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B583A8);
  }
  return result;
}

unint64_t sub_25190ABD8()
{
  unint64_t result = qword_269B583B0;
  if (!qword_269B583B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B583B0);
  }
  return result;
}

unint64_t sub_25190AC30()
{
  unint64_t result = qword_269B583B8;
  if (!qword_269B583B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B583B8);
  }
  return result;
}

unint64_t sub_25190AC88()
{
  unint64_t result = qword_269B583C0;
  if (!qword_269B583C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B583C0);
  }
  return result;
}

unint64_t sub_25190ACE0()
{
  unint64_t result = qword_269B583C8;
  if (!qword_269B583C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B583C8);
  }
  return result;
}

unint64_t sub_25190AD3C()
{
  unint64_t result = qword_269B583D0;
  if (!qword_269B583D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B583D0);
  }
  return result;
}

unint64_t sub_25190AD94()
{
  unint64_t result = qword_269B583D8;
  if (!qword_269B583D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B583D8);
  }
  return result;
}

unint64_t sub_25190ADEC()
{
  unint64_t result = qword_269B583E0;
  if (!qword_269B583E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B583E0);
  }
  return result;
}

uint64_t sub_25190AE40()
{
  return sub_2517E2990(&qword_269B583E8, &qword_269B583F0);
}

unint64_t sub_25190AE80()
{
  unint64_t result = qword_269B583F8;
  if (!qword_269B583F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B583F8);
  }
  return result;
}

unint64_t sub_25190AED8()
{
  unint64_t result = qword_269B58400;
  if (!qword_269B58400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58400);
  }
  return result;
}

unint64_t sub_25190AF30()
{
  unint64_t result = qword_269B58408;
  if (!qword_269B58408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58408);
  }
  return result;
}

unint64_t sub_25190AF88()
{
  unint64_t result = qword_269B58410;
  if (!qword_269B58410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58410);
  }
  return result;
}

unint64_t sub_25190AFE0()
{
  unint64_t result = qword_269B58418;
  if (!qword_269B58418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58418);
  }
  return result;
}

unint64_t sub_25190B038()
{
  unint64_t result = qword_269B58420;
  if (!qword_269B58420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58420);
  }
  return result;
}

unint64_t sub_25190B094()
{
  unint64_t result = qword_269B58428;
  if (!qword_269B58428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58428);
  }
  return result;
}

unint64_t sub_25190B0EC()
{
  unint64_t result = qword_269B58430;
  if (!qword_269B58430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58430);
  }
  return result;
}

unint64_t sub_25190B144()
{
  unint64_t result = qword_269B58438;
  if (!qword_269B58438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58438);
  }
  return result;
}

uint64_t sub_25190B198()
{
  return sub_2517E2990(&qword_269B58440, &qword_269B58448);
}

unint64_t sub_25190B1D8()
{
  unint64_t result = qword_269B58450;
  if (!qword_269B58450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58450);
  }
  return result;
}

unint64_t sub_25190B230()
{
  unint64_t result = qword_269B58458;
  if (!qword_269B58458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58458);
  }
  return result;
}

unint64_t sub_25190B288()
{
  unint64_t result = qword_269B58460;
  if (!qword_269B58460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58460);
  }
  return result;
}

unint64_t sub_25190B2E0()
{
  unint64_t result = qword_269B58468;
  if (!qword_269B58468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58468);
  }
  return result;
}

unint64_t sub_25190B338()
{
  unint64_t result = qword_269B58470;
  if (!qword_269B58470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58470);
  }
  return result;
}

unint64_t sub_25190B390()
{
  unint64_t result = qword_269B58478;
  if (!qword_269B58478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58478);
  }
  return result;
}

unint64_t sub_25190B3EC()
{
  unint64_t result = qword_269B58480;
  if (!qword_269B58480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58480);
  }
  return result;
}

unint64_t sub_25190B444()
{
  unint64_t result = qword_269B58488;
  if (!qword_269B58488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58488);
  }
  return result;
}

unint64_t sub_25190B49C()
{
  unint64_t result = qword_269B58490;
  if (!qword_269B58490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58490);
  }
  return result;
}

uint64_t sub_25190B4F0()
{
  return sub_2517E2990(&qword_269B58498, &qword_269B584A0);
}

unint64_t sub_25190B530()
{
  unint64_t result = qword_269B584A8;
  if (!qword_269B584A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B584A8);
  }
  return result;
}

unint64_t sub_25190B588()
{
  unint64_t result = qword_269B584B0;
  if (!qword_269B584B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B584B0);
  }
  return result;
}

unint64_t sub_25190B5E0()
{
  unint64_t result = qword_269B584B8;
  if (!qword_269B584B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B584B8);
  }
  return result;
}

unint64_t sub_25190B638()
{
  unint64_t result = qword_269B584C0;
  if (!qword_269B584C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B584C0);
  }
  return result;
}

unint64_t sub_25190B690()
{
  unint64_t result = qword_269B584C8;
  if (!qword_269B584C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B584C8);
  }
  return result;
}

unint64_t sub_25190B6E8()
{
  unint64_t result = qword_269B584D0;
  if (!qword_269B584D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B584D0);
  }
  return result;
}

unint64_t sub_25190B744()
{
  unint64_t result = qword_269B584D8;
  if (!qword_269B584D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B584D8);
  }
  return result;
}

unint64_t sub_25190B79C()
{
  unint64_t result = qword_269B584E0;
  if (!qword_269B584E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B584E0);
  }
  return result;
}

unint64_t sub_25190B7F4()
{
  unint64_t result = qword_269B584E8;
  if (!qword_269B584E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B584E8);
  }
  return result;
}

uint64_t sub_25190B848()
{
  return sub_2517E2990(&qword_269B584F0, &qword_269B584F8);
}

unint64_t sub_25190B888()
{
  unint64_t result = qword_269B58500;
  if (!qword_269B58500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58500);
  }
  return result;
}

unint64_t sub_25190B8E0()
{
  unint64_t result = qword_269B58508;
  if (!qword_269B58508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58508);
  }
  return result;
}

unint64_t sub_25190B938()
{
  unint64_t result = qword_269B58510;
  if (!qword_269B58510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58510);
  }
  return result;
}

unint64_t sub_25190B990()
{
  unint64_t result = qword_269B58518;
  if (!qword_269B58518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58518);
  }
  return result;
}

unint64_t sub_25190B9E8()
{
  unint64_t result = qword_269B58520;
  if (!qword_269B58520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58520);
  }
  return result;
}

unint64_t sub_25190BA40()
{
  unint64_t result = qword_269B58528;
  if (!qword_269B58528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58528);
  }
  return result;
}

unint64_t sub_25190BA9C()
{
  unint64_t result = qword_269B58530;
  if (!qword_269B58530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58530);
  }
  return result;
}

unint64_t sub_25190BAF4()
{
  unint64_t result = qword_269B58538;
  if (!qword_269B58538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58538);
  }
  return result;
}

unint64_t sub_25190BB4C()
{
  unint64_t result = qword_269B58540;
  if (!qword_269B58540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58540);
  }
  return result;
}

uint64_t sub_25190BBA0()
{
  return sub_2517E2990(&qword_269B58548, &qword_269B58550);
}

unint64_t sub_25190BBE0()
{
  unint64_t result = qword_269B58558;
  if (!qword_269B58558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58558);
  }
  return result;
}

unint64_t sub_25190BC38()
{
  unint64_t result = qword_269B58560;
  if (!qword_269B58560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58560);
  }
  return result;
}

unint64_t sub_25190BC90()
{
  unint64_t result = qword_269B58568;
  if (!qword_269B58568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58568);
  }
  return result;
}

unint64_t sub_25190BCE8()
{
  unint64_t result = qword_269B58570;
  if (!qword_269B58570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58570);
  }
  return result;
}

unint64_t sub_25190BD40()
{
  unint64_t result = qword_269B58578;
  if (!qword_269B58578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58578);
  }
  return result;
}

unint64_t sub_25190BD98()
{
  unint64_t result = qword_269B58580;
  if (!qword_269B58580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58580);
  }
  return result;
}

unint64_t sub_25190BDF4()
{
  unint64_t result = qword_269B58588;
  if (!qword_269B58588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58588);
  }
  return result;
}

unint64_t sub_25190BE4C()
{
  unint64_t result = qword_269B58590;
  if (!qword_269B58590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58590);
  }
  return result;
}

unint64_t sub_25190BEA4()
{
  unint64_t result = qword_269B58598;
  if (!qword_269B58598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58598);
  }
  return result;
}

uint64_t sub_25190BEF8()
{
  return sub_2517E2990(&qword_269B585A0, &qword_269B585A8);
}

unint64_t sub_25190BF38()
{
  unint64_t result = qword_269B585B0;
  if (!qword_269B585B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B585B0);
  }
  return result;
}

unint64_t sub_25190BF90()
{
  unint64_t result = qword_269B585B8;
  if (!qword_269B585B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B585B8);
  }
  return result;
}

unint64_t sub_25190BFE8()
{
  unint64_t result = qword_269B585C0;
  if (!qword_269B585C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B585C0);
  }
  return result;
}

unint64_t sub_25190C040()
{
  unint64_t result = qword_269B585C8;
  if (!qword_269B585C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B585C8);
  }
  return result;
}

unint64_t sub_25190C098()
{
  unint64_t result = qword_269B585D0;
  if (!qword_269B585D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B585D0);
  }
  return result;
}

unint64_t sub_25190C0F0()
{
  unint64_t result = qword_269B585D8;
  if (!qword_269B585D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B585D8);
  }
  return result;
}

unint64_t sub_25190C14C()
{
  unint64_t result = qword_269B585E0;
  if (!qword_269B585E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B585E0);
  }
  return result;
}

unint64_t sub_25190C1A4()
{
  unint64_t result = qword_269B585E8;
  if (!qword_269B585E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B585E8);
  }
  return result;
}

unint64_t sub_25190C1FC()
{
  unint64_t result = qword_269B585F0;
  if (!qword_269B585F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B585F0);
  }
  return result;
}

uint64_t sub_25190C250()
{
  return sub_2517E2990(&qword_269B585F8, &qword_269B58600);
}

unint64_t sub_25190C290()
{
  unint64_t result = qword_269B58608;
  if (!qword_269B58608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58608);
  }
  return result;
}

unint64_t sub_25190C2E8()
{
  unint64_t result = qword_269B58610;
  if (!qword_269B58610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58610);
  }
  return result;
}

unint64_t sub_25190C340()
{
  unint64_t result = qword_269B58618;
  if (!qword_269B58618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58618);
  }
  return result;
}

unint64_t sub_25190C398()
{
  unint64_t result = qword_269B58620;
  if (!qword_269B58620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58620);
  }
  return result;
}

unint64_t sub_25190C3F0()
{
  unint64_t result = qword_269B58628;
  if (!qword_269B58628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58628);
  }
  return result;
}

unint64_t sub_25190C448()
{
  unint64_t result = qword_269B58630;
  if (!qword_269B58630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58630);
  }
  return result;
}

unint64_t sub_25190C4A4()
{
  unint64_t result = qword_269B58638;
  if (!qword_269B58638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58638);
  }
  return result;
}

unint64_t sub_25190C4FC()
{
  unint64_t result = qword_269B58640;
  if (!qword_269B58640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58640);
  }
  return result;
}

unint64_t sub_25190C554()
{
  unint64_t result = qword_269B58648;
  if (!qword_269B58648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58648);
  }
  return result;
}

uint64_t sub_25190C5A8()
{
  return sub_2517E2990(&qword_269B58650, &qword_269B58658);
}

unint64_t sub_25190C5E8()
{
  unint64_t result = qword_269B58660;
  if (!qword_269B58660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58660);
  }
  return result;
}

unint64_t sub_25190C640()
{
  unint64_t result = qword_269B58668;
  if (!qword_269B58668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58668);
  }
  return result;
}

unint64_t sub_25190C698()
{
  unint64_t result = qword_269B58670;
  if (!qword_269B58670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58670);
  }
  return result;
}

unint64_t sub_25190C6F0()
{
  unint64_t result = qword_269B58678;
  if (!qword_269B58678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58678);
  }
  return result;
}

unint64_t sub_25190C748()
{
  unint64_t result = qword_269B58680;
  if (!qword_269B58680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58680);
  }
  return result;
}

unint64_t sub_25190C7A0()
{
  unint64_t result = qword_269B58688;
  if (!qword_269B58688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58688);
  }
  return result;
}

unint64_t sub_25190C7FC()
{
  unint64_t result = qword_269B58690;
  if (!qword_269B58690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58690);
  }
  return result;
}

unint64_t sub_25190C854()
{
  unint64_t result = qword_269B58698;
  if (!qword_269B58698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58698);
  }
  return result;
}

unint64_t sub_25190C8AC()
{
  unint64_t result = qword_269B586A0;
  if (!qword_269B586A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B586A0);
  }
  return result;
}

uint64_t sub_25190C900()
{
  return sub_2517E2990(&qword_269B586A8, &qword_269B586B0);
}

unint64_t sub_25190C940()
{
  unint64_t result = qword_269B586B8;
  if (!qword_269B586B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B586B8);
  }
  return result;
}

unint64_t sub_25190C998()
{
  unint64_t result = qword_269B586C0;
  if (!qword_269B586C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B586C0);
  }
  return result;
}

unint64_t sub_25190C9F0()
{
  unint64_t result = qword_269B586C8;
  if (!qword_269B586C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B586C8);
  }
  return result;
}

unint64_t sub_25190CA48()
{
  unint64_t result = qword_269B586D0;
  if (!qword_269B586D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B586D0);
  }
  return result;
}

unint64_t sub_25190CAA0()
{
  unint64_t result = qword_269B586D8;
  if (!qword_269B586D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B586D8);
  }
  return result;
}

unint64_t sub_25190CAF8()
{
  unint64_t result = qword_269B586E0;
  if (!qword_269B586E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B586E0);
  }
  return result;
}

unint64_t sub_25190CB54()
{
  unint64_t result = qword_269B586E8;
  if (!qword_269B586E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B586E8);
  }
  return result;
}

unint64_t sub_25190CBAC()
{
  unint64_t result = qword_269B586F0;
  if (!qword_269B586F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B586F0);
  }
  return result;
}

unint64_t sub_25190CC04()
{
  unint64_t result = qword_269B586F8;
  if (!qword_269B586F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B586F8);
  }
  return result;
}

uint64_t sub_25190CC58()
{
  return sub_2517E2990(&qword_269B58700, &qword_269B58708);
}

unint64_t sub_25190CC98()
{
  unint64_t result = qword_269B58710;
  if (!qword_269B58710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58710);
  }
  return result;
}

unint64_t sub_25190CCF0()
{
  unint64_t result = qword_269B58718;
  if (!qword_269B58718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58718);
  }
  return result;
}

unint64_t sub_25190CD48()
{
  unint64_t result = qword_269B58720;
  if (!qword_269B58720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58720);
  }
  return result;
}

unint64_t sub_25190CDA0()
{
  unint64_t result = qword_269B58728;
  if (!qword_269B58728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58728);
  }
  return result;
}

unint64_t sub_25190CDF8()
{
  unint64_t result = qword_269B58730;
  if (!qword_269B58730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58730);
  }
  return result;
}

unint64_t sub_25190CE50()
{
  unint64_t result = qword_269B58738;
  if (!qword_269B58738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58738);
  }
  return result;
}

unint64_t sub_25190CEAC()
{
  unint64_t result = qword_269B58740;
  if (!qword_269B58740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58740);
  }
  return result;
}

unint64_t sub_25190CF04()
{
  unint64_t result = qword_269B58748;
  if (!qword_269B58748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58748);
  }
  return result;
}

unint64_t sub_25190CF5C()
{
  unint64_t result = qword_269B58750;
  if (!qword_269B58750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58750);
  }
  return result;
}

uint64_t sub_25190CFB0()
{
  return sub_2517E2990(&qword_269B58758, &qword_269B58760);
}

unint64_t sub_25190CFF0()
{
  unint64_t result = qword_269B58768;
  if (!qword_269B58768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58768);
  }
  return result;
}

unint64_t sub_25190D048()
{
  unint64_t result = qword_269B58770;
  if (!qword_269B58770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58770);
  }
  return result;
}

unint64_t sub_25190D0A0()
{
  unint64_t result = qword_269B58778;
  if (!qword_269B58778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58778);
  }
  return result;
}

unint64_t sub_25190D0F8()
{
  unint64_t result = qword_269B58780;
  if (!qword_269B58780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58780);
  }
  return result;
}

unint64_t sub_25190D150()
{
  unint64_t result = qword_269B58788;
  if (!qword_269B58788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58788);
  }
  return result;
}

unint64_t sub_25190D1A8()
{
  unint64_t result = qword_269B58790;
  if (!qword_269B58790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58790);
  }
  return result;
}

unint64_t sub_25190D204()
{
  unint64_t result = qword_269B58798;
  if (!qword_269B58798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58798);
  }
  return result;
}

unint64_t sub_25190D25C()
{
  unint64_t result = qword_269B587A0;
  if (!qword_269B587A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B587A0);
  }
  return result;
}

unint64_t sub_25190D2B4()
{
  unint64_t result = qword_269B587A8;
  if (!qword_269B587A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B587A8);
  }
  return result;
}

uint64_t sub_25190D308()
{
  return sub_2517E2990(&qword_269B587B0, &qword_269B587B8);
}

unint64_t sub_25190D348()
{
  unint64_t result = qword_269B587C0;
  if (!qword_269B587C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B587C0);
  }
  return result;
}

unint64_t sub_25190D3A0()
{
  unint64_t result = qword_269B587C8;
  if (!qword_269B587C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B587C8);
  }
  return result;
}

unint64_t sub_25190D3F8()
{
  unint64_t result = qword_269B587D0;
  if (!qword_269B587D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B587D0);
  }
  return result;
}

unint64_t sub_25190D450()
{
  unint64_t result = qword_269B587D8;
  if (!qword_269B587D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B587D8);
  }
  return result;
}

unint64_t sub_25190D4A8()
{
  unint64_t result = qword_269B587E0;
  if (!qword_269B587E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B587E0);
  }
  return result;
}

unint64_t sub_25190D500()
{
  unint64_t result = qword_269B587E8;
  if (!qword_269B587E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B587E8);
  }
  return result;
}

unint64_t sub_25190D55C()
{
  unint64_t result = qword_269B587F0;
  if (!qword_269B587F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B587F0);
  }
  return result;
}

unint64_t sub_25190D5B4()
{
  unint64_t result = qword_269B587F8;
  if (!qword_269B587F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B587F8);
  }
  return result;
}

unint64_t sub_25190D60C()
{
  unint64_t result = qword_269B58800;
  if (!qword_269B58800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58800);
  }
  return result;
}

uint64_t sub_25190D660()
{
  return sub_2517E2990(&qword_269B58808, &qword_269B58810);
}

unint64_t sub_25190D6A0()
{
  unint64_t result = qword_269B58818;
  if (!qword_269B58818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58818);
  }
  return result;
}

unint64_t sub_25190D6F8()
{
  unint64_t result = qword_269B58820;
  if (!qword_269B58820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58820);
  }
  return result;
}

unint64_t sub_25190D750()
{
  unint64_t result = qword_269B58828;
  if (!qword_269B58828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58828);
  }
  return result;
}

unint64_t sub_25190D7A8()
{
  unint64_t result = qword_269B58830;
  if (!qword_269B58830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58830);
  }
  return result;
}

unint64_t sub_25190D800()
{
  unint64_t result = qword_269B58838;
  if (!qword_269B58838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58838);
  }
  return result;
}

unint64_t sub_25190D858()
{
  unint64_t result = qword_269B58840;
  if (!qword_269B58840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58840);
  }
  return result;
}

unint64_t sub_25190D8B4()
{
  unint64_t result = qword_269B58848;
  if (!qword_269B58848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58848);
  }
  return result;
}

unint64_t sub_25190D90C()
{
  unint64_t result = qword_269B58850;
  if (!qword_269B58850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58850);
  }
  return result;
}

unint64_t sub_25190D964()
{
  unint64_t result = qword_269B58858;
  if (!qword_269B58858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58858);
  }
  return result;
}

uint64_t sub_25190D9B8()
{
  return sub_2517E2990(&qword_269B58860, &qword_269B58868);
}

unint64_t sub_25190D9F8()
{
  unint64_t result = qword_269B58870;
  if (!qword_269B58870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58870);
  }
  return result;
}

unint64_t sub_25190DA50()
{
  unint64_t result = qword_269B58878;
  if (!qword_269B58878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58878);
  }
  return result;
}

unint64_t sub_25190DAA8()
{
  unint64_t result = qword_269B58880;
  if (!qword_269B58880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58880);
  }
  return result;
}

unint64_t sub_25190DB00()
{
  unint64_t result = qword_269B58888;
  if (!qword_269B58888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58888);
  }
  return result;
}

unint64_t sub_25190DB58()
{
  unint64_t result = qword_269B58890;
  if (!qword_269B58890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58890);
  }
  return result;
}

unint64_t sub_25190DBB0()
{
  unint64_t result = qword_269B58898;
  if (!qword_269B58898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58898);
  }
  return result;
}

unint64_t sub_25190DC0C()
{
  unint64_t result = qword_269B588A0;
  if (!qword_269B588A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B588A0);
  }
  return result;
}

unint64_t sub_25190DC64()
{
  unint64_t result = qword_269B588A8;
  if (!qword_269B588A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B588A8);
  }
  return result;
}

unint64_t sub_25190DCBC()
{
  unint64_t result = qword_269B588B0;
  if (!qword_269B588B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B588B0);
  }
  return result;
}

uint64_t sub_25190DD10()
{
  return sub_2517E2990(&qword_269B588B8, &qword_269B588C0);
}

unint64_t sub_25190DD50()
{
  unint64_t result = qword_269B588C8;
  if (!qword_269B588C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B588C8);
  }
  return result;
}

unint64_t sub_25190DDA8()
{
  unint64_t result = qword_269B588D0;
  if (!qword_269B588D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B588D0);
  }
  return result;
}

unint64_t sub_25190DE00()
{
  unint64_t result = qword_269B588D8;
  if (!qword_269B588D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B588D8);
  }
  return result;
}

unint64_t sub_25190DE58()
{
  unint64_t result = qword_269B588E0;
  if (!qword_269B588E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B588E0);
  }
  return result;
}

unint64_t sub_25190DEB0()
{
  unint64_t result = qword_269B588E8;
  if (!qword_269B588E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B588E8);
  }
  return result;
}

unint64_t sub_25190DF08()
{
  unint64_t result = qword_269B588F0;
  if (!qword_269B588F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B588F0);
  }
  return result;
}

unint64_t sub_25190DF64()
{
  unint64_t result = qword_269B588F8;
  if (!qword_269B588F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B588F8);
  }
  return result;
}

unint64_t sub_25190DFBC()
{
  unint64_t result = qword_269B58900;
  if (!qword_269B58900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58900);
  }
  return result;
}

unint64_t sub_25190E014()
{
  unint64_t result = qword_269B58908;
  if (!qword_269B58908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58908);
  }
  return result;
}

uint64_t sub_25190E068()
{
  return sub_2517E2990(&qword_269B58910, &qword_269B58918);
}

unint64_t sub_25190E0A8()
{
  unint64_t result = qword_269B58920;
  if (!qword_269B58920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58920);
  }
  return result;
}

unint64_t sub_25190E100()
{
  unint64_t result = qword_269B58928;
  if (!qword_269B58928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58928);
  }
  return result;
}

unint64_t sub_25190E158()
{
  unint64_t result = qword_269B58930;
  if (!qword_269B58930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58930);
  }
  return result;
}

unint64_t sub_25190E1B0()
{
  unint64_t result = qword_269B58938;
  if (!qword_269B58938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58938);
  }
  return result;
}

unint64_t sub_25190E208()
{
  unint64_t result = qword_269B58940;
  if (!qword_269B58940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58940);
  }
  return result;
}

unint64_t sub_25190E260()
{
  unint64_t result = qword_269B58948;
  if (!qword_269B58948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58948);
  }
  return result;
}

unint64_t sub_25190E2BC()
{
  unint64_t result = qword_269B58950;
  if (!qword_269B58950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58950);
  }
  return result;
}

unint64_t sub_25190E314()
{
  unint64_t result = qword_269B58958;
  if (!qword_269B58958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58958);
  }
  return result;
}

unint64_t sub_25190E36C()
{
  unint64_t result = qword_269B58960;
  if (!qword_269B58960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58960);
  }
  return result;
}

uint64_t sub_25190E3C0()
{
  return sub_2517E2990(&qword_269B58968, &qword_269B58970);
}

unint64_t sub_25190E400()
{
  unint64_t result = qword_269B58978;
  if (!qword_269B58978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58978);
  }
  return result;
}

unint64_t sub_25190E458()
{
  unint64_t result = qword_269B58980;
  if (!qword_269B58980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58980);
  }
  return result;
}

unint64_t sub_25190E4B0()
{
  unint64_t result = qword_269B58988;
  if (!qword_269B58988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58988);
  }
  return result;
}

unint64_t sub_25190E508()
{
  unint64_t result = qword_269B58990;
  if (!qword_269B58990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58990);
  }
  return result;
}

unint64_t sub_25190E560()
{
  unint64_t result = qword_269B58998;
  if (!qword_269B58998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58998);
  }
  return result;
}

unint64_t sub_25190E5B8()
{
  unint64_t result = qword_269B589A0;
  if (!qword_269B589A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B589A0);
  }
  return result;
}

unint64_t sub_25190E614()
{
  unint64_t result = qword_269B589A8;
  if (!qword_269B589A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B589A8);
  }
  return result;
}

unint64_t sub_25190E66C()
{
  unint64_t result = qword_269B589B0;
  if (!qword_269B589B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B589B0);
  }
  return result;
}

unint64_t sub_25190E6C4()
{
  unint64_t result = qword_269B589B8;
  if (!qword_269B589B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B589B8);
  }
  return result;
}

uint64_t sub_25190E718()
{
  return sub_2517E2990(&qword_269B589C0, &qword_269B589C8);
}

unint64_t sub_25190E758()
{
  unint64_t result = qword_269B589D0;
  if (!qword_269B589D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B589D0);
  }
  return result;
}

unint64_t sub_25190E7B0()
{
  unint64_t result = qword_269B589D8;
  if (!qword_269B589D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B589D8);
  }
  return result;
}

unint64_t sub_25190E808()
{
  unint64_t result = qword_269B589E0;
  if (!qword_269B589E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B589E0);
  }
  return result;
}

unint64_t sub_25190E860()
{
  unint64_t result = qword_269B589E8;
  if (!qword_269B589E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B589E8);
  }
  return result;
}

unint64_t sub_25190E8B8()
{
  unint64_t result = qword_269B589F0;
  if (!qword_269B589F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B589F0);
  }
  return result;
}

unint64_t sub_25190E910()
{
  unint64_t result = qword_269B589F8;
  if (!qword_269B589F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B589F8);
  }
  return result;
}

unint64_t sub_25190E96C()
{
  unint64_t result = qword_269B58A00;
  if (!qword_269B58A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58A00);
  }
  return result;
}

unint64_t sub_25190E9C4()
{
  unint64_t result = qword_269B58A08;
  if (!qword_269B58A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58A08);
  }
  return result;
}

unint64_t sub_25190EA1C()
{
  unint64_t result = qword_269B58A10;
  if (!qword_269B58A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58A10);
  }
  return result;
}

uint64_t sub_25190EA70()
{
  return sub_2517E2990(&qword_269B58A18, &qword_269B58A20);
}

unint64_t sub_25190EAB0()
{
  unint64_t result = qword_269B58A28;
  if (!qword_269B58A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58A28);
  }
  return result;
}

unint64_t sub_25190EB08()
{
  unint64_t result = qword_269B58A30;
  if (!qword_269B58A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58A30);
  }
  return result;
}

unint64_t sub_25190EB60()
{
  unint64_t result = qword_269B58A38;
  if (!qword_269B58A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58A38);
  }
  return result;
}

unint64_t sub_25190EBB8()
{
  unint64_t result = qword_269B58A40;
  if (!qword_269B58A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58A40);
  }
  return result;
}

unint64_t sub_25190EC10()
{
  unint64_t result = qword_269B58A48;
  if (!qword_269B58A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58A48);
  }
  return result;
}

unint64_t sub_25190EC68()
{
  unint64_t result = qword_269B58A50;
  if (!qword_269B58A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58A50);
  }
  return result;
}

unint64_t sub_25190ECC4()
{
  unint64_t result = qword_269B58A58;
  if (!qword_269B58A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58A58);
  }
  return result;
}

unint64_t sub_25190ED1C()
{
  unint64_t result = qword_269B58A60;
  if (!qword_269B58A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58A60);
  }
  return result;
}

unint64_t sub_25190ED74()
{
  unint64_t result = qword_269B58A68;
  if (!qword_269B58A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58A68);
  }
  return result;
}

uint64_t sub_25190EDC8()
{
  return sub_2517E2990(&qword_269B58A70, &qword_269B58A78);
}

unint64_t sub_25190EE08()
{
  unint64_t result = qword_269B58A80;
  if (!qword_269B58A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58A80);
  }
  return result;
}

unint64_t sub_25190EE60()
{
  unint64_t result = qword_269B58A88;
  if (!qword_269B58A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58A88);
  }
  return result;
}

unint64_t sub_25190EEB8()
{
  unint64_t result = qword_269B58A90;
  if (!qword_269B58A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58A90);
  }
  return result;
}

unint64_t sub_25190EF10()
{
  unint64_t result = qword_269B58A98;
  if (!qword_269B58A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58A98);
  }
  return result;
}

unint64_t sub_25190EF68()
{
  unint64_t result = qword_269B58AA0;
  if (!qword_269B58AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58AA0);
  }
  return result;
}

unint64_t sub_25190EFC0()
{
  unint64_t result = qword_269B58AA8;
  if (!qword_269B58AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58AA8);
  }
  return result;
}

unint64_t sub_25190F01C()
{
  unint64_t result = qword_269B58AB0;
  if (!qword_269B58AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58AB0);
  }
  return result;
}

unint64_t sub_25190F074()
{
  unint64_t result = qword_269B58AB8;
  if (!qword_269B58AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58AB8);
  }
  return result;
}

unint64_t sub_25190F0CC()
{
  unint64_t result = qword_269B58AC0;
  if (!qword_269B58AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58AC0);
  }
  return result;
}

uint64_t sub_25190F120()
{
  return sub_2517E2990(&qword_269B58AC8, &qword_269B58AD0);
}

unint64_t sub_25190F160()
{
  unint64_t result = qword_269B58AD8;
  if (!qword_269B58AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58AD8);
  }
  return result;
}

unint64_t sub_25190F1B8()
{
  unint64_t result = qword_269B58AE0;
  if (!qword_269B58AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58AE0);
  }
  return result;
}

unint64_t sub_25190F210()
{
  unint64_t result = qword_269B58AE8;
  if (!qword_269B58AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58AE8);
  }
  return result;
}

unint64_t sub_25190F268()
{
  unint64_t result = qword_269B58AF0;
  if (!qword_269B58AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58AF0);
  }
  return result;
}

unint64_t sub_25190F2C0()
{
  unint64_t result = qword_269B58AF8;
  if (!qword_269B58AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58AF8);
  }
  return result;
}

unint64_t sub_25190F318()
{
  unint64_t result = qword_269B58B00;
  if (!qword_269B58B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58B00);
  }
  return result;
}

unint64_t sub_25190F374()
{
  unint64_t result = qword_269B58B08;
  if (!qword_269B58B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58B08);
  }
  return result;
}

unint64_t sub_25190F3CC()
{
  unint64_t result = qword_269B58B10;
  if (!qword_269B58B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58B10);
  }
  return result;
}

unint64_t sub_25190F424()
{
  unint64_t result = qword_269B58B18;
  if (!qword_269B58B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58B18);
  }
  return result;
}

uint64_t sub_25190F478()
{
  return sub_2517E2990(&qword_269B58B20, &qword_269B58B28);
}

unint64_t sub_25190F4B8()
{
  unint64_t result = qword_269B58B30;
  if (!qword_269B58B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58B30);
  }
  return result;
}

unint64_t sub_25190F510()
{
  unint64_t result = qword_269B58B38;
  if (!qword_269B58B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58B38);
  }
  return result;
}

unint64_t sub_25190F568()
{
  unint64_t result = qword_269B58B40;
  if (!qword_269B58B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58B40);
  }
  return result;
}

unint64_t sub_25190F5C0()
{
  unint64_t result = qword_269B58B48;
  if (!qword_269B58B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58B48);
  }
  return result;
}

unint64_t sub_25190F618()
{
  unint64_t result = qword_269B58B50;
  if (!qword_269B58B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58B50);
  }
  return result;
}

unint64_t sub_25190F670()
{
  unint64_t result = qword_269B58B58;
  if (!qword_269B58B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58B58);
  }
  return result;
}

unint64_t sub_25190F6CC()
{
  unint64_t result = qword_269B58B60;
  if (!qword_269B58B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58B60);
  }
  return result;
}

unint64_t sub_25190F724()
{
  unint64_t result = qword_269B58B68;
  if (!qword_269B58B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58B68);
  }
  return result;
}

unint64_t sub_25190F77C()
{
  unint64_t result = qword_269B58B70;
  if (!qword_269B58B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58B70);
  }
  return result;
}

uint64_t sub_25190F7D0()
{
  return sub_2517E2990(&qword_269B58B78, &qword_269B58B80);
}

unint64_t sub_25190F810()
{
  unint64_t result = qword_269B58B88;
  if (!qword_269B58B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58B88);
  }
  return result;
}

unint64_t sub_25190F868()
{
  unint64_t result = qword_269B58B90;
  if (!qword_269B58B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58B90);
  }
  return result;
}

unint64_t sub_25190F8C0()
{
  unint64_t result = qword_269B58B98;
  if (!qword_269B58B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58B98);
  }
  return result;
}

unint64_t sub_25190F918()
{
  unint64_t result = qword_269B58BA0;
  if (!qword_269B58BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58BA0);
  }
  return result;
}

unint64_t sub_25190F970()
{
  unint64_t result = qword_269B58BA8;
  if (!qword_269B58BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58BA8);
  }
  return result;
}

unint64_t sub_25190F9C8()
{
  unint64_t result = qword_269B58BB0;
  if (!qword_269B58BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58BB0);
  }
  return result;
}

unint64_t sub_25190FA24()
{
  unint64_t result = qword_269B58BB8;
  if (!qword_269B58BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58BB8);
  }
  return result;
}

unint64_t sub_25190FA7C()
{
  unint64_t result = qword_269B58BC0;
  if (!qword_269B58BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58BC0);
  }
  return result;
}

unint64_t sub_25190FAD4()
{
  unint64_t result = qword_269B58BC8;
  if (!qword_269B58BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58BC8);
  }
  return result;
}

uint64_t sub_25190FB28()
{
  return sub_2517E2990(&qword_269B58BD0, &qword_269B58BD8);
}

unint64_t sub_25190FB68()
{
  unint64_t result = qword_269B58BE0;
  if (!qword_269B58BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58BE0);
  }
  return result;
}

unint64_t sub_25190FBC0()
{
  unint64_t result = qword_269B58BE8;
  if (!qword_269B58BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58BE8);
  }
  return result;
}

unint64_t sub_25190FC18()
{
  unint64_t result = qword_269B58BF0;
  if (!qword_269B58BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58BF0);
  }
  return result;
}

unint64_t sub_25190FC70()
{
  unint64_t result = qword_269B58BF8;
  if (!qword_269B58BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58BF8);
  }
  return result;
}

unint64_t sub_25190FCC8()
{
  unint64_t result = qword_269B58C00;
  if (!qword_269B58C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58C00);
  }
  return result;
}

unint64_t sub_25190FD20()
{
  unint64_t result = qword_269B58C08;
  if (!qword_269B58C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58C08);
  }
  return result;
}

unint64_t sub_25190FD7C()
{
  unint64_t result = qword_269B58C10;
  if (!qword_269B58C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58C10);
  }
  return result;
}

unint64_t sub_25190FDD4()
{
  unint64_t result = qword_269B58C18;
  if (!qword_269B58C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58C18);
  }
  return result;
}

unint64_t sub_25190FE2C()
{
  unint64_t result = qword_269B58C20;
  if (!qword_269B58C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58C20);
  }
  return result;
}

uint64_t sub_25190FE80()
{
  return sub_2517E2990(&qword_269B58C28, &qword_269B58C30);
}

unint64_t sub_25190FEC0()
{
  unint64_t result = qword_269B58C38;
  if (!qword_269B58C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58C38);
  }
  return result;
}

unint64_t sub_25190FF18()
{
  unint64_t result = qword_269B58C40;
  if (!qword_269B58C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58C40);
  }
  return result;
}

unint64_t sub_25190FF70()
{
  unint64_t result = qword_269B58C48;
  if (!qword_269B58C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58C48);
  }
  return result;
}

unint64_t sub_25190FFC8()
{
  unint64_t result = qword_269B58C50;
  if (!qword_269B58C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58C50);
  }
  return result;
}

unint64_t sub_251910020()
{
  unint64_t result = qword_269B58C58;
  if (!qword_269B58C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58C58);
  }
  return result;
}

unint64_t sub_251910078()
{
  unint64_t result = qword_269B58C60;
  if (!qword_269B58C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58C60);
  }
  return result;
}

unint64_t sub_2519100D4()
{
  unint64_t result = qword_269B58C68;
  if (!qword_269B58C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58C68);
  }
  return result;
}

unint64_t sub_25191012C()
{
  unint64_t result = qword_269B58C70;
  if (!qword_269B58C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58C70);
  }
  return result;
}

unint64_t sub_251910184()
{
  unint64_t result = qword_269B58C78;
  if (!qword_269B58C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58C78);
  }
  return result;
}

uint64_t sub_2519101D8()
{
  return sub_2517E2990(&qword_269B58C80, &qword_269B58C88);
}

unint64_t sub_251910218()
{
  unint64_t result = qword_269B58C90;
  if (!qword_269B58C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58C90);
  }
  return result;
}

unint64_t sub_251910270()
{
  unint64_t result = qword_269B58C98;
  if (!qword_269B58C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58C98);
  }
  return result;
}

unint64_t sub_2519102C8()
{
  unint64_t result = qword_269B58CA0;
  if (!qword_269B58CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58CA0);
  }
  return result;
}

unint64_t sub_251910320()
{
  unint64_t result = qword_269B58CA8;
  if (!qword_269B58CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58CA8);
  }
  return result;
}

unint64_t sub_251910378()
{
  unint64_t result = qword_269B58CB0;
  if (!qword_269B58CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58CB0);
  }
  return result;
}

unint64_t sub_2519103D0()
{
  unint64_t result = qword_269B58CB8;
  if (!qword_269B58CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58CB8);
  }
  return result;
}

unint64_t sub_25191042C()
{
  unint64_t result = qword_269B58CC0;
  if (!qword_269B58CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58CC0);
  }
  return result;
}

unint64_t sub_251910484()
{
  unint64_t result = qword_269B58CC8;
  if (!qword_269B58CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58CC8);
  }
  return result;
}

unint64_t sub_2519104DC()
{
  unint64_t result = qword_269B58CD0;
  if (!qword_269B58CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58CD0);
  }
  return result;
}

uint64_t sub_251910530()
{
  return sub_2517E2990(&qword_269B58CD8, &qword_269B58CE0);
}

unint64_t sub_251910570()
{
  unint64_t result = qword_269B58CE8;
  if (!qword_269B58CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58CE8);
  }
  return result;
}

unint64_t sub_2519105C8()
{
  unint64_t result = qword_269B58CF0;
  if (!qword_269B58CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58CF0);
  }
  return result;
}

unint64_t sub_251910620()
{
  unint64_t result = qword_269B58CF8;
  if (!qword_269B58CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58CF8);
  }
  return result;
}

unint64_t sub_251910678()
{
  unint64_t result = qword_269B58D00;
  if (!qword_269B58D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58D00);
  }
  return result;
}

unint64_t sub_2519106D0()
{
  unint64_t result = qword_269B58D08;
  if (!qword_269B58D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58D08);
  }
  return result;
}

unint64_t sub_251910728()
{
  unint64_t result = qword_269B58D10;
  if (!qword_269B58D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58D10);
  }
  return result;
}

unint64_t sub_251910784()
{
  unint64_t result = qword_269B58D18;
  if (!qword_269B58D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58D18);
  }
  return result;
}

unint64_t sub_2519107DC()
{
  unint64_t result = qword_269B58D20;
  if (!qword_269B58D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58D20);
  }
  return result;
}

unint64_t sub_251910834()
{
  unint64_t result = qword_269B58D28;
  if (!qword_269B58D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58D28);
  }
  return result;
}

uint64_t sub_251910888()
{
  return sub_2517E2990(&qword_269B58D30, &qword_269B58D38);
}

unint64_t sub_2519108C8()
{
  unint64_t result = qword_269B58D40;
  if (!qword_269B58D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58D40);
  }
  return result;
}

unint64_t sub_251910920()
{
  unint64_t result = qword_269B58D48;
  if (!qword_269B58D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58D48);
  }
  return result;
}

unint64_t sub_251910978()
{
  unint64_t result = qword_269B58D50;
  if (!qword_269B58D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58D50);
  }
  return result;
}

unint64_t sub_2519109D0()
{
  unint64_t result = qword_269B58D58;
  if (!qword_269B58D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58D58);
  }
  return result;
}

unint64_t sub_251910A28()
{
  unint64_t result = qword_269B58D60;
  if (!qword_269B58D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58D60);
  }
  return result;
}

unint64_t sub_251910A80()
{
  unint64_t result = qword_269B58D68;
  if (!qword_269B58D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58D68);
  }
  return result;
}

unint64_t sub_251910ADC()
{
  unint64_t result = qword_269B58D70;
  if (!qword_269B58D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58D70);
  }
  return result;
}

unint64_t sub_251910B34()
{
  unint64_t result = qword_269B58D78;
  if (!qword_269B58D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58D78);
  }
  return result;
}

unint64_t sub_251910B8C()
{
  unint64_t result = qword_269B58D80;
  if (!qword_269B58D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58D80);
  }
  return result;
}

uint64_t sub_251910BE0()
{
  return sub_2517E2990(&qword_269B58D88, &qword_269B58D90);
}

unint64_t sub_251910C20()
{
  unint64_t result = qword_269B58D98;
  if (!qword_269B58D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58D98);
  }
  return result;
}

unint64_t sub_251910C78()
{
  unint64_t result = qword_269B58DA0;
  if (!qword_269B58DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58DA0);
  }
  return result;
}

unint64_t sub_251910CD0()
{
  unint64_t result = qword_269B58DA8;
  if (!qword_269B58DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58DA8);
  }
  return result;
}

unint64_t sub_251910D28()
{
  unint64_t result = qword_269B58DB0;
  if (!qword_269B58DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58DB0);
  }
  return result;
}

unint64_t sub_251910D80()
{
  unint64_t result = qword_269B58DB8;
  if (!qword_269B58DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58DB8);
  }
  return result;
}

unint64_t sub_251910DD8()
{
  unint64_t result = qword_269B58DC0;
  if (!qword_269B58DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58DC0);
  }
  return result;
}

unint64_t sub_251910E34()
{
  unint64_t result = qword_269B58DC8;
  if (!qword_269B58DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58DC8);
  }
  return result;
}

unint64_t sub_251910E8C()
{
  unint64_t result = qword_269B58DD0;
  if (!qword_269B58DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58DD0);
  }
  return result;
}

unint64_t sub_251910EE4()
{
  unint64_t result = qword_269B58DD8;
  if (!qword_269B58DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58DD8);
  }
  return result;
}

uint64_t sub_251910F38()
{
  return sub_2517E2990(&qword_269B58DE0, &qword_269B58DE8);
}

unint64_t sub_251910F78()
{
  unint64_t result = qword_269B58DF0;
  if (!qword_269B58DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58DF0);
  }
  return result;
}

unint64_t sub_251910FD0()
{
  unint64_t result = qword_269B58DF8;
  if (!qword_269B58DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58DF8);
  }
  return result;
}

unint64_t sub_251911028()
{
  unint64_t result = qword_269B58E00;
  if (!qword_269B58E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58E00);
  }
  return result;
}

unint64_t sub_251911080()
{
  unint64_t result = qword_269B58E08;
  if (!qword_269B58E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58E08);
  }
  return result;
}

unint64_t sub_2519110D8()
{
  unint64_t result = qword_269B58E10;
  if (!qword_269B58E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58E10);
  }
  return result;
}

unint64_t sub_251911130()
{
  unint64_t result = qword_269B58E18;
  if (!qword_269B58E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58E18);
  }
  return result;
}

unint64_t sub_25191118C()
{
  unint64_t result = qword_269B58E20;
  if (!qword_269B58E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58E20);
  }
  return result;
}

unint64_t sub_2519111E4()
{
  unint64_t result = qword_269B58E28;
  if (!qword_269B58E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58E28);
  }
  return result;
}

unint64_t sub_25191123C()
{
  unint64_t result = qword_269B58E30;
  if (!qword_269B58E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58E30);
  }
  return result;
}

uint64_t sub_251911290()
{
  return sub_2517E2990(&qword_269B58E38, &qword_269B58E40);
}

unint64_t sub_2519112D0()
{
  unint64_t result = qword_269B58E48;
  if (!qword_269B58E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58E48);
  }
  return result;
}

unint64_t sub_251911328()
{
  unint64_t result = qword_269B58E50;
  if (!qword_269B58E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58E50);
  }
  return result;
}

unint64_t sub_251911380()
{
  unint64_t result = qword_269B58E58;
  if (!qword_269B58E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58E58);
  }
  return result;
}

unint64_t sub_2519113D8()
{
  unint64_t result = qword_269B58E60;
  if (!qword_269B58E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58E60);
  }
  return result;
}

unint64_t sub_251911430()
{
  unint64_t result = qword_269B58E68;
  if (!qword_269B58E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58E68);
  }
  return result;
}

unint64_t sub_251911488()
{
  unint64_t result = qword_269B58E70;
  if (!qword_269B58E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58E70);
  }
  return result;
}

unint64_t sub_2519114E4()
{
  unint64_t result = qword_269B58E78;
  if (!qword_269B58E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58E78);
  }
  return result;
}

unint64_t sub_25191153C()
{
  unint64_t result = qword_269B58E80;
  if (!qword_269B58E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58E80);
  }
  return result;
}

unint64_t sub_251911594()
{
  unint64_t result = qword_269B58E88;
  if (!qword_269B58E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58E88);
  }
  return result;
}

uint64_t sub_2519115E8()
{
  return sub_2517E2990(&qword_269B58E90, &qword_269B58E98);
}

unint64_t sub_251911628()
{
  unint64_t result = qword_269B58EA0;
  if (!qword_269B58EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58EA0);
  }
  return result;
}

unint64_t sub_251911680()
{
  unint64_t result = qword_269B58EA8;
  if (!qword_269B58EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58EA8);
  }
  return result;
}

unint64_t sub_2519116D8()
{
  unint64_t result = qword_269B58EB0;
  if (!qword_269B58EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58EB0);
  }
  return result;
}

unint64_t sub_251911730()
{
  unint64_t result = qword_269B58EB8;
  if (!qword_269B58EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58EB8);
  }
  return result;
}

unint64_t sub_251911788()
{
  unint64_t result = qword_269B58EC0;
  if (!qword_269B58EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58EC0);
  }
  return result;
}

unint64_t sub_2519117E0()
{
  unint64_t result = qword_269B58EC8;
  if (!qword_269B58EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58EC8);
  }
  return result;
}

unint64_t sub_25191183C()
{
  unint64_t result = qword_269B58ED0;
  if (!qword_269B58ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58ED0);
  }
  return result;
}

unint64_t sub_251911894()
{
  unint64_t result = qword_269B58ED8;
  if (!qword_269B58ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58ED8);
  }
  return result;
}

unint64_t sub_2519118EC()
{
  unint64_t result = qword_269B58EE0;
  if (!qword_269B58EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58EE0);
  }
  return result;
}

uint64_t sub_251911940()
{
  return sub_2517E2990(&qword_269B58EE8, &qword_269B58EF0);
}

unint64_t sub_251911980()
{
  unint64_t result = qword_269B58EF8;
  if (!qword_269B58EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58EF8);
  }
  return result;
}

unint64_t sub_2519119D8()
{
  unint64_t result = qword_269B58F00;
  if (!qword_269B58F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58F00);
  }
  return result;
}

unint64_t sub_251911A30()
{
  unint64_t result = qword_269B58F08;
  if (!qword_269B58F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58F08);
  }
  return result;
}

unint64_t sub_251911A88()
{
  unint64_t result = qword_269B58F10;
  if (!qword_269B58F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58F10);
  }
  return result;
}

unint64_t sub_251911AE0()
{
  unint64_t result = qword_269B58F18;
  if (!qword_269B58F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58F18);
  }
  return result;
}

unint64_t sub_251911B38()
{
  unint64_t result = qword_269B58F20;
  if (!qword_269B58F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58F20);
  }
  return result;
}

unint64_t sub_251911B94()
{
  unint64_t result = qword_269B58F28;
  if (!qword_269B58F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58F28);
  }
  return result;
}

unint64_t sub_251911BEC()
{
  unint64_t result = qword_269B58F30;
  if (!qword_269B58F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58F30);
  }
  return result;
}

unint64_t sub_251911C44()
{
  unint64_t result = qword_269B58F38;
  if (!qword_269B58F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58F38);
  }
  return result;
}

uint64_t sub_251911C98()
{
  return sub_2517E2990(&qword_269B58F40, &qword_269B58F48);
}

unint64_t sub_251911CD8()
{
  unint64_t result = qword_269B58F50;
  if (!qword_269B58F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58F50);
  }
  return result;
}

unint64_t sub_251911D30()
{
  unint64_t result = qword_269B58F58;
  if (!qword_269B58F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58F58);
  }
  return result;
}

unint64_t sub_251911D88()
{
  unint64_t result = qword_269B58F60;
  if (!qword_269B58F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58F60);
  }
  return result;
}

unint64_t sub_251911DE0()
{
  unint64_t result = qword_269B58F68;
  if (!qword_269B58F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58F68);
  }
  return result;
}

unint64_t sub_251911E38()
{
  unint64_t result = qword_269B58F70;
  if (!qword_269B58F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58F70);
  }
  return result;
}

unint64_t sub_251911E90()
{
  unint64_t result = qword_269B58F78;
  if (!qword_269B58F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58F78);
  }
  return result;
}

unint64_t sub_251911EEC()
{
  unint64_t result = qword_269B58F80;
  if (!qword_269B58F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58F80);
  }
  return result;
}

unint64_t sub_251911F44()
{
  unint64_t result = qword_269B58F88;
  if (!qword_269B58F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58F88);
  }
  return result;
}

unint64_t sub_251911F9C()
{
  unint64_t result = qword_269B58F90;
  if (!qword_269B58F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58F90);
  }
  return result;
}

uint64_t sub_251911FF0()
{
  return sub_2517E2990(&qword_269B58F98, &qword_269B58FA0);
}

unint64_t sub_251912030()
{
  unint64_t result = qword_269B58FA8;
  if (!qword_269B58FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58FA8);
  }
  return result;
}

unint64_t sub_251912088()
{
  unint64_t result = qword_269B58FB0;
  if (!qword_269B58FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58FB0);
  }
  return result;
}

unint64_t sub_2519120E0()
{
  unint64_t result = qword_269B58FB8;
  if (!qword_269B58FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58FB8);
  }
  return result;
}

unint64_t sub_251912138()
{
  unint64_t result = qword_269B58FC0;
  if (!qword_269B58FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58FC0);
  }
  return result;
}

unint64_t sub_251912190()
{
  unint64_t result = qword_269B58FC8;
  if (!qword_269B58FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58FC8);
  }
  return result;
}

unint64_t sub_2519121E8()
{
  unint64_t result = qword_269B58FD0;
  if (!qword_269B58FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58FD0);
  }
  return result;
}

unint64_t sub_251912244()
{
  unint64_t result = qword_269B58FD8;
  if (!qword_269B58FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58FD8);
  }
  return result;
}

unint64_t sub_25191229C()
{
  unint64_t result = qword_269B58FE0;
  if (!qword_269B58FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58FE0);
  }
  return result;
}

unint64_t sub_2519122F4()
{
  unint64_t result = qword_269B58FE8;
  if (!qword_269B58FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B58FE8);
  }
  return result;
}

uint64_t sub_251912348()
{
  return sub_2517E2990(&qword_269B58FF0, &qword_269B58FF8);
}

unint64_t sub_251912388()
{
  unint64_t result = qword_269B59000;
  if (!qword_269B59000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59000);
  }
  return result;
}

unint64_t sub_2519123E0()
{
  unint64_t result = qword_269B59008;
  if (!qword_269B59008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59008);
  }
  return result;
}

unint64_t sub_251912438()
{
  unint64_t result = qword_269B59010;
  if (!qword_269B59010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59010);
  }
  return result;
}

unint64_t sub_251912490()
{
  unint64_t result = qword_269B59018;
  if (!qword_269B59018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59018);
  }
  return result;
}

unint64_t sub_2519124E8()
{
  unint64_t result = qword_269B59020;
  if (!qword_269B59020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59020);
  }
  return result;
}

unint64_t sub_251912540()
{
  unint64_t result = qword_269B59028;
  if (!qword_269B59028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59028);
  }
  return result;
}

unint64_t sub_25191259C()
{
  unint64_t result = qword_269B59030;
  if (!qword_269B59030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59030);
  }
  return result;
}

unint64_t sub_2519125F4()
{
  unint64_t result = qword_269B59038;
  if (!qword_269B59038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59038);
  }
  return result;
}

unint64_t sub_25191264C()
{
  unint64_t result = qword_269B59040;
  if (!qword_269B59040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59040);
  }
  return result;
}

uint64_t sub_2519126A0()
{
  return sub_2517E2990(&qword_269B59048, &qword_269B59050);
}

unint64_t sub_2519126E0()
{
  unint64_t result = qword_269B59058;
  if (!qword_269B59058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59058);
  }
  return result;
}

unint64_t sub_251912738()
{
  unint64_t result = qword_269B59060;
  if (!qword_269B59060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59060);
  }
  return result;
}

unint64_t sub_251912790()
{
  unint64_t result = qword_269B59068;
  if (!qword_269B59068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59068);
  }
  return result;
}

unint64_t sub_2519127E8()
{
  unint64_t result = qword_269B59070;
  if (!qword_269B59070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59070);
  }
  return result;
}

unint64_t sub_251912840()
{
  unint64_t result = qword_269B59078;
  if (!qword_269B59078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59078);
  }
  return result;
}

unint64_t sub_251912898()
{
  unint64_t result = qword_269B59080;
  if (!qword_269B59080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59080);
  }
  return result;
}

unint64_t sub_2519128F4()
{
  unint64_t result = qword_269B59088;
  if (!qword_269B59088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59088);
  }
  return result;
}

unint64_t sub_25191294C()
{
  unint64_t result = qword_269B59090;
  if (!qword_269B59090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59090);
  }
  return result;
}

unint64_t sub_2519129A4()
{
  unint64_t result = qword_269B59098;
  if (!qword_269B59098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59098);
  }
  return result;
}

uint64_t sub_2519129F8()
{
  return sub_2517E2990(&qword_269B590A0, &qword_269B590A8);
}

unint64_t sub_251912A38()
{
  unint64_t result = qword_269B590B0;
  if (!qword_269B590B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B590B0);
  }
  return result;
}

unint64_t sub_251912A90()
{
  unint64_t result = qword_269B590B8;
  if (!qword_269B590B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B590B8);
  }
  return result;
}

unint64_t sub_251912AE8()
{
  unint64_t result = qword_269B590C0;
  if (!qword_269B590C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B590C0);
  }
  return result;
}

unint64_t sub_251912B40()
{
  unint64_t result = qword_269B590C8;
  if (!qword_269B590C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B590C8);
  }
  return result;
}

unint64_t sub_251912B98()
{
  unint64_t result = qword_269B590D0;
  if (!qword_269B590D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B590D0);
  }
  return result;
}

unint64_t sub_251912BF0()
{
  unint64_t result = qword_269B590D8;
  if (!qword_269B590D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B590D8);
  }
  return result;
}

unint64_t sub_251912C4C()
{
  unint64_t result = qword_269B590E0;
  if (!qword_269B590E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B590E0);
  }
  return result;
}

unint64_t sub_251912CA4()
{
  unint64_t result = qword_269B590E8;
  if (!qword_269B590E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B590E8);
  }
  return result;
}

unint64_t sub_251912CFC()
{
  unint64_t result = qword_269B590F0;
  if (!qword_269B590F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B590F0);
  }
  return result;
}

uint64_t sub_251912D50()
{
  return sub_2517E2990(&qword_269B590F8, &qword_269B59100);
}

unint64_t sub_251912D90()
{
  unint64_t result = qword_269B59108;
  if (!qword_269B59108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59108);
  }
  return result;
}

unint64_t sub_251912DE8()
{
  unint64_t result = qword_269B59110;
  if (!qword_269B59110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59110);
  }
  return result;
}

unint64_t sub_251912E40()
{
  unint64_t result = qword_269B59118;
  if (!qword_269B59118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59118);
  }
  return result;
}

unint64_t sub_251912E98()
{
  unint64_t result = qword_269B59120;
  if (!qword_269B59120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59120);
  }
  return result;
}

unint64_t sub_251912EF0()
{
  unint64_t result = qword_269B59128;
  if (!qword_269B59128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59128);
  }
  return result;
}

unint64_t sub_251912F48()
{
  unint64_t result = qword_269B59130;
  if (!qword_269B59130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59130);
  }
  return result;
}

unint64_t sub_251912FA4()
{
  unint64_t result = qword_269B59138;
  if (!qword_269B59138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59138);
  }
  return result;
}

unint64_t sub_251912FFC()
{
  unint64_t result = qword_269B59140;
  if (!qword_269B59140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59140);
  }
  return result;
}

unint64_t sub_251913054()
{
  unint64_t result = qword_269B59148;
  if (!qword_269B59148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59148);
  }
  return result;
}

uint64_t sub_2519130A8()
{
  return sub_2517E2990(&qword_269B59150, &qword_269B59158);
}

unint64_t sub_2519130E8()
{
  unint64_t result = qword_269B59160;
  if (!qword_269B59160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59160);
  }
  return result;
}

unint64_t sub_251913140()
{
  unint64_t result = qword_269B59168;
  if (!qword_269B59168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59168);
  }
  return result;
}

unint64_t sub_251913198()
{
  unint64_t result = qword_269B59170;
  if (!qword_269B59170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59170);
  }
  return result;
}

unint64_t sub_2519131F0()
{
  unint64_t result = qword_269B59178;
  if (!qword_269B59178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59178);
  }
  return result;
}

unint64_t sub_251913248()
{
  unint64_t result = qword_269B59180;
  if (!qword_269B59180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59180);
  }
  return result;
}

unint64_t sub_2519132A0()
{
  unint64_t result = qword_269B59188;
  if (!qword_269B59188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59188);
  }
  return result;
}

unint64_t sub_2519132FC()
{
  unint64_t result = qword_269B59190;
  if (!qword_269B59190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59190);
  }
  return result;
}

unint64_t sub_251913354()
{
  unint64_t result = qword_269B59198;
  if (!qword_269B59198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59198);
  }
  return result;
}

unint64_t sub_2519133AC()
{
  unint64_t result = qword_269B591A0;
  if (!qword_269B591A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B591A0);
  }
  return result;
}

uint64_t sub_251913400()
{
  return sub_2517E2990(&qword_269B591A8, &qword_269B591B0);
}

unint64_t sub_251913440()
{
  unint64_t result = qword_269B591B8;
  if (!qword_269B591B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B591B8);
  }
  return result;
}

unint64_t sub_251913498()
{
  unint64_t result = qword_269B591C0;
  if (!qword_269B591C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B591C0);
  }
  return result;
}

unint64_t sub_2519134F0()
{
  unint64_t result = qword_269B591C8;
  if (!qword_269B591C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B591C8);
  }
  return result;
}

unint64_t sub_251913548()
{
  unint64_t result = qword_269B591D0;
  if (!qword_269B591D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B591D0);
  }
  return result;
}

unint64_t sub_2519135A0()
{
  unint64_t result = qword_269B591D8;
  if (!qword_269B591D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B591D8);
  }
  return result;
}

unint64_t sub_2519135F8()
{
  unint64_t result = qword_269B591E0;
  if (!qword_269B591E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B591E0);
  }
  return result;
}

unint64_t sub_251913654()
{
  unint64_t result = qword_269B591E8;
  if (!qword_269B591E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B591E8);
  }
  return result;
}

unint64_t sub_2519136AC()
{
  unint64_t result = qword_269B591F0;
  if (!qword_269B591F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B591F0);
  }
  return result;
}

unint64_t sub_251913704()
{
  unint64_t result = qword_269B591F8;
  if (!qword_269B591F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B591F8);
  }
  return result;
}

uint64_t sub_251913758()
{
  return sub_2517E2990(&qword_269B59200, &qword_269B59208);
}

unint64_t sub_251913798()
{
  unint64_t result = qword_269B59210;
  if (!qword_269B59210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59210);
  }
  return result;
}

unint64_t sub_2519137F0()
{
  unint64_t result = qword_269B59218;
  if (!qword_269B59218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59218);
  }
  return result;
}

unint64_t sub_251913848()
{
  unint64_t result = qword_269B59220;
  if (!qword_269B59220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59220);
  }
  return result;
}

unint64_t sub_2519138A0()
{
  unint64_t result = qword_269B59228;
  if (!qword_269B59228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59228);
  }
  return result;
}

unint64_t sub_2519138F8()
{
  unint64_t result = qword_269B59230;
  if (!qword_269B59230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59230);
  }
  return result;
}

unint64_t sub_251913950()
{
  unint64_t result = qword_269B59238;
  if (!qword_269B59238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59238);
  }
  return result;
}

unint64_t sub_2519139AC()
{
  unint64_t result = qword_269B59240;
  if (!qword_269B59240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59240);
  }
  return result;
}

unint64_t sub_251913A04()
{
  unint64_t result = qword_269B59248;
  if (!qword_269B59248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59248);
  }
  return result;
}

unint64_t sub_251913A5C()
{
  unint64_t result = qword_269B59250;
  if (!qword_269B59250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59250);
  }
  return result;
}

uint64_t sub_251913AB0()
{
  return sub_2517E2990(&qword_269B59258, &qword_269B59260);
}

unint64_t sub_251913AF0()
{
  unint64_t result = qword_269B59268;
  if (!qword_269B59268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59268);
  }
  return result;
}

unint64_t sub_251913B48()
{
  unint64_t result = qword_269B59270;
  if (!qword_269B59270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59270);
  }
  return result;
}

unint64_t sub_251913BA0()
{
  unint64_t result = qword_269B59278;
  if (!qword_269B59278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59278);
  }
  return result;
}

unint64_t sub_251913BF8()
{
  unint64_t result = qword_269B59280;
  if (!qword_269B59280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59280);
  }
  return result;
}

unint64_t sub_251913C50()
{
  unint64_t result = qword_269B59288;
  if (!qword_269B59288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59288);
  }
  return result;
}

unint64_t sub_251913CA8()
{
  unint64_t result = qword_269B59290;
  if (!qword_269B59290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59290);
  }
  return result;
}

unint64_t sub_251913D04()
{
  unint64_t result = qword_269B59298;
  if (!qword_269B59298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59298);
  }
  return result;
}

unint64_t sub_251913D5C()
{
  unint64_t result = qword_269B592A0;
  if (!qword_269B592A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B592A0);
  }
  return result;
}

unint64_t sub_251913DB4()
{
  unint64_t result = qword_269B592A8;
  if (!qword_269B592A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B592A8);
  }
  return result;
}

uint64_t sub_251913E08()
{
  return sub_2517E2990(&qword_269B592B0, &qword_269B592B8);
}

unint64_t sub_251913E48()
{
  unint64_t result = qword_269B592C0;
  if (!qword_269B592C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B592C0);
  }
  return result;
}

unint64_t sub_251913EA0()
{
  unint64_t result = qword_269B592C8;
  if (!qword_269B592C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B592C8);
  }
  return result;
}

unint64_t sub_251913EF8()
{
  unint64_t result = qword_269B592D0;
  if (!qword_269B592D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B592D0);
  }
  return result;
}

unint64_t sub_251913F50()
{
  unint64_t result = qword_269B592D8;
  if (!qword_269B592D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B592D8);
  }
  return result;
}

unint64_t sub_251913FA8()
{
  unint64_t result = qword_269B592E0;
  if (!qword_269B592E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B592E0);
  }
  return result;
}

unint64_t sub_251914000()
{
  unint64_t result = qword_269B592E8;
  if (!qword_269B592E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B592E8);
  }
  return result;
}

unint64_t sub_25191405C()
{
  unint64_t result = qword_269B592F0;
  if (!qword_269B592F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B592F0);
  }
  return result;
}

unint64_t sub_2519140B4()
{
  unint64_t result = qword_269B592F8;
  if (!qword_269B592F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B592F8);
  }
  return result;
}

unint64_t sub_25191410C()
{
  unint64_t result = qword_269B59300;
  if (!qword_269B59300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59300);
  }
  return result;
}

uint64_t sub_251914160()
{
  return sub_2517E2990(&qword_269B59308, &qword_269B59310);
}

unint64_t sub_2519141A0()
{
  unint64_t result = qword_269B59318;
  if (!qword_269B59318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59318);
  }
  return result;
}

unint64_t sub_2519141F8()
{
  unint64_t result = qword_269B59320;
  if (!qword_269B59320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59320);
  }
  return result;
}

unint64_t sub_251914250()
{
  unint64_t result = qword_269B59328;
  if (!qword_269B59328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59328);
  }
  return result;
}

unint64_t sub_2519142A8()
{
  unint64_t result = qword_269B59330;
  if (!qword_269B59330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59330);
  }
  return result;
}

unint64_t sub_251914300()
{
  unint64_t result = qword_269B59338;
  if (!qword_269B59338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59338);
  }
  return result;
}

unint64_t sub_251914358()
{
  unint64_t result = qword_269B59340;
  if (!qword_269B59340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59340);
  }
  return result;
}

unint64_t sub_2519143B4()
{
  unint64_t result = qword_269B59348;
  if (!qword_269B59348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59348);
  }
  return result;
}

unint64_t sub_25191440C()
{
  unint64_t result = qword_269B59350;
  if (!qword_269B59350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59350);
  }
  return result;
}

unint64_t sub_251914464()
{
  unint64_t result = qword_269B59358;
  if (!qword_269B59358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59358);
  }
  return result;
}

uint64_t sub_2519144B8()
{
  return sub_2517E2990(&qword_269B59360, &qword_269B59368);
}

unint64_t sub_2519144F8()
{
  unint64_t result = qword_269B59370;
  if (!qword_269B59370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59370);
  }
  return result;
}

unint64_t sub_251914550()
{
  unint64_t result = qword_269B59378;
  if (!qword_269B59378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B59378);
  }
  return result;
}