void *__swift_memcpy8_8(void *result, void *a2)
{
  *result = *a2;
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

uint64_t block_destroy_helper_31()
{
  return swift_release();
}

uint64_t block_destroy_helper_32()
{
  return swift_release();
}

uint64_t block_destroy_helper_33()
{
  return swift_release();
}

uint64_t block_destroy_helper_34()
{
  return swift_release();
}

uint64_t block_destroy_helper_35()
{
  return swift_release();
}

uint64_t block_destroy_helper_36()
{
  return swift_release();
}

uint64_t block_destroy_helper_37()
{
  return swift_release();
}

uint64_t block_destroy_helper_38()
{
  return swift_release();
}

uint64_t block_destroy_helper_39()
{
  return swift_release();
}

uint64_t block_destroy_helper_40()
{
  return swift_release();
}

uint64_t block_destroy_helper_41()
{
  return swift_release();
}

uint64_t block_destroy_helper_42()
{
  return swift_release();
}

uint64_t block_destroy_helper_43()
{
  return swift_release();
}

uint64_t block_destroy_helper_44()
{
  return swift_release();
}

uint64_t block_destroy_helper_45()
{
  return swift_release();
}

uint64_t block_destroy_helper_46()
{
  return swift_release();
}

uint64_t block_destroy_helper_47()
{
  return swift_release();
}

uint64_t block_destroy_helper_48()
{
  return swift_release();
}

uint64_t block_destroy_helper_49()
{
  return swift_release();
}

uint64_t block_destroy_helper_50()
{
  return swift_release();
}

uint64_t block_destroy_helper_51()
{
  return swift_release();
}

uint64_t block_destroy_helper_52()
{
  return swift_release();
}

uint64_t block_destroy_helper_53()
{
  return swift_release();
}

uint64_t block_destroy_helper_54()
{
  return swift_release();
}

uint64_t block_destroy_helper_55()
{
  return swift_release();
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

id su_excessiveLineHeightCharacters()
{
  if (su_excessiveLineHeightCharacters_onceToken[0] != -1) {
    dispatch_once(su_excessiveLineHeightCharacters_onceToken, &__block_literal_global);
  }
  v0 = (void *)su_excessiveLineHeightCharacters_tooBigChars;

  return v0;
}

uint64_t __su_excessiveLineHeightCharacters_block_invoke()
{
  su_excessiveLineHeightCharacters_tooBigChars = CTFontCopySystemUIFontExcessiveLineHeightCharacterSet();

  return MEMORY[0x270F9A758]();
}

uint64_t objectdestroy_13Tm()
{
  uint64_t v1 = sub_20A8C3F00();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t objectdestroy_13Tm_0()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_35(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_36(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_37(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_39(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_41(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_42(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_43(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_45(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_46(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_47(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_49(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_50(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_51(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_52(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_53(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_55(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t objectdestroy_3Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_6Tm()
{
  uint64_t v1 = (int *)type metadata accessor for StockViewModel();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  swift_release();
  uint64_t v3 = v0 + ((v2 + 32) & ~v2);
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v3 + v1[5];
  uint64_t v6 = sub_20A8C3E10();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = v3 + v1[6];
  uint64_t v9 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    uint64_t v10 = sub_20A8CDCD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
    uint64_t v11 = v8 + *(int *)(v9 + 32);
    uint64_t v12 = sub_20A8C3D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = v3 + v1[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v15 = v13 + v14[9];
  uint64_t v16 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = v13 + v14[10];
  uint64_t v18 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = v13 + v14[11];
  uint64_t v20 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = v3 + v1[8];
  uint64_t v22 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);

  return swift_deallocObject();
}

uint64_t objectdestroy_6Tm_0()
{
  swift_unownedRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_6Tm_1()
{
  uint64_t v1 = sub_20A8C2800();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_3Tm_0()
{
  uint64_t v1 = sub_20A8C3F00();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = sub_20A8C40E0();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t objectdestroy_3Tm_1()
{
  uint64_t v1 = sub_20A8C79F0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = sub_20A8C78F0();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t objectdestroy_3Tm_2()
{
  sub_20A44D7C8(0);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = sub_20A8C2B70();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (v4 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v8, v6);

  return swift_deallocObject();
}

uint64_t objectdestroy_3Tm_3()
{
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void _SUCrawlView(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  uint64_t v6 = a3;
  v14[0] = 0;
  v14[1] = v14;
  v14[2] = 0x2020000000;
  v14[3] = 0;
  char v13 = 0;
  v6[2](v6, v5, 0, &v13);
  if (!v13)
  {
    v9[0] = MEMORY[0x263EF8330];
    v9[1] = 3221225472;
    v9[2] = ___SUCrawlView_block_invoke_2;
    v9[3] = &unk_263FDCF20;
    uint64_t v11 = v14;
    uint64_t v12 = a2;
    uint64_t v10 = v6;
    ___SUCrawlView_block_invoke_2((uint64_t)v9);
    uint64_t v7 = (void (**)(void, void, void, void))objc_claimAutoreleasedReturnValue();
    unint64_t v8 = _Block_copy(v7);
    ((void (**)(void, void *, id, char *))v7)[2](v7, v8, v5, &v13);
  }
  _Block_object_dispose(v14, 8);
}

void sub_20A419584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void SUCrawlView(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = __SUCrawlView_block_invoke;
  v7[3] = &unk_263FDCF48;
  id v8 = v5;
  id v6 = v5;
  _SUCrawlView(a1, a2, v7);
}

uint64_t __SUCrawlView_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id SUCrawlViewAndCollect(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  uint64_t v7 = objc_opt_new();
  uint64_t v12 = MEMORY[0x263EF8330];
  uint64_t v13 = 3221225472;
  v14 = __SUCrawlViewAndCollect_block_invoke;
  uint64_t v15 = &unk_263FDCF70;
  id v16 = v7;
  id v17 = v5;
  id v8 = v7;
  id v9 = v5;
  SUCrawlView(v6, a2, &v12);

  uint64_t v10 = objc_msgSend(v8, "copy", v12, v13, v14, v15);

  return v10;
}

void __SUCrawlViewAndCollect_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((*(unsigned int (**)(void))(*(void *)(a1 + 40) + 16))()) {
    [*(id *)(a1 + 32) addObject:v3];
  }
}

id SUFirstViewPassing(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  uint64_t v13 = 0;
  v14 = &v13;
  uint64_t v15 = 0x3032000000;
  id v16 = __Block_byref_object_copy_;
  id v17 = __Block_byref_object_dispose_;
  id v18 = 0;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 3221225472;
  v10[2] = __SUFirstViewPassing_block_invoke;
  v10[3] = &unk_263FDCF98;
  uint64_t v12 = &v13;
  id v7 = v6;
  id v11 = v7;
  SUCrawlView(v5, a2, v10);
  id v8 = (id)v14[5];

  _Block_object_dispose(&v13, 8);

  return v8;
}

void sub_20A419DF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void __SUFirstViewPassing_block_invoke(uint64_t a1, void *a2, BOOL *a3)
{
  id v8 = a2;
  char v5 = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  id v7 = v8;
  if ((v5 & 1) == 0) {
    id v7 = *(void **)(v6 + 40);
  }
  objc_storeStrong((id *)(v6 + 40), v7);
  *a3 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) != 0;
}

BOOL SUViewContainsViewOfClass(void *a1, uint64_t a2, uint64_t a3)
{
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 3221225472;
  v6[2] = __SUViewContainsViewOfClass_block_invoke;
  v6[3] = &__block_descriptor_40_e16_B16__0__UIView_8lu32l8;
  v6[4] = a3;
  id v3 = SUFirstViewPassing(a1, a2, v6);
  BOOL v4 = v3 != 0;

  return v4;
}

uint64_t __SUViewContainsViewOfClass_block_invoke()
{
  return objc_opt_isKindOfClass() & 1;
}

void _SUCrawlViewController(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  uint64_t v6 = a3;
  v14[0] = 0;
  v14[1] = v14;
  v14[2] = 0x2020000000;
  v14[3] = 0;
  char v13 = 0;
  v6[2](v6, v5, 0, &v13);
  if (!v13)
  {
    if (a2 == 2)
    {
      id v7 = v11;
      v11[0] = MEMORY[0x263EF8330];
      v11[1] = 3221225472;
      id v8 = ___SUCrawlViewController_block_invoke_3;
    }
    else
    {
      if (a2 != 1)
      {
        id v9 = 0;
        goto LABEL_8;
      }
      id v7 = v12;
      v12[0] = MEMORY[0x263EF8330];
      v12[1] = 3221225472;
      id v8 = ___SUCrawlViewController_block_invoke_2;
    }
    v7[2] = v8;
    v7[3] = &unk_263FDCFE0;
    v7[5] = v14;
    void v7[4] = v6;
    id v9 = _Block_copy(v7);

LABEL_8:
    uint64_t v10 = _Block_copy(v9);
    (*((void (**)(void *, void *, id, char *))v9 + 2))(v9, v10, v5, &v13);
  }
  _Block_object_dispose(v14, 8);
}

void sub_20A41A0E0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void SUCrawlViewController(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = __SUCrawlViewController_block_invoke;
  v7[3] = &unk_263FDD008;
  id v8 = v5;
  id v6 = v5;
  _SUCrawlViewController(a1, a2, v7);
}

uint64_t __SUCrawlViewController_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id SUCrawlViewControllerAndCollect(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  id v7 = objc_opt_new();
  uint64_t v12 = MEMORY[0x263EF8330];
  uint64_t v13 = 3221225472;
  v14 = __SUCrawlViewControllerAndCollect_block_invoke;
  uint64_t v15 = &unk_263FDD030;
  id v16 = v7;
  id v17 = v5;
  id v8 = v7;
  id v9 = v5;
  SUCrawlViewController(v6, a2, &v12);

  uint64_t v10 = objc_msgSend(v8, "copy", v12, v13, v14, v15);

  return v10;
}

void __SUCrawlViewControllerAndCollect_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((*(unsigned int (**)(void))(*(void *)(a1 + 40) + 16))()) {
    [*(id *)(a1 + 32) addObject:v3];
  }
}

id SUFirstViewControllerPassing(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  uint64_t v13 = 0;
  v14 = &v13;
  uint64_t v15 = 0x3032000000;
  id v16 = __Block_byref_object_copy_;
  id v17 = __Block_byref_object_dispose_;
  id v18 = 0;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 3221225472;
  v10[2] = __SUFirstViewControllerPassing_block_invoke;
  v10[3] = &unk_263FDD058;
  uint64_t v12 = &v13;
  id v7 = v6;
  id v11 = v7;
  SUCrawlViewController(v5, a2, v10);
  id v8 = (id)v14[5];

  _Block_object_dispose(&v13, 8);

  return v8;
}

void sub_20A41A8C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SUFirstViewControllerPassing_block_invoke(uint64_t a1, void *a2, BOOL *a3)
{
  id v8 = a2;
  char v5 = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  id v7 = v8;
  if ((v5 & 1) == 0) {
    id v7 = *(void **)(v6 + 40);
  }
  objc_storeStrong((id *)(v6 + 40), v7);
  *a3 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) != 0;
}

BOOL SUViewControllerContainsViewControllerOfClass(void *a1, uint64_t a2, uint64_t a3)
{
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 3221225472;
  v6[2] = __SUViewControllerContainsViewControllerOfClass_block_invoke;
  v6[3] = &__block_descriptor_40_e26_B16__0__UIViewController_8lu32l8;
  v6[4] = a3;
  id v3 = SUFirstViewControllerPassing(a1, a2, v6);
  BOOL v4 = v3 != 0;

  return v4;
}

uint64_t __SUViewControllerContainsViewControllerOfClass_block_invoke()
{
  return objc_opt_isKindOfClass() & 1;
}

id SUViewHierarchy(void *a1)
{
  id v1 = a1;
  uint64_t v2 = objc_opt_new();
  uint64_t v6 = MEMORY[0x263EF8330];
  uint64_t v7 = 3221225472;
  id v8 = __SUViewHierarchy_block_invoke_2;
  id v9 = &unk_263FDD0C0;
  id v10 = v2;
  id v11 = &__block_literal_global_16;
  id v3 = v2;
  _SUCrawlView(v1, 2, &v6);

  BOOL v4 = objc_msgSend(v3, "copy", v6, v7, v8, v9);

  return v4;
}

id __SUViewHierarchy_block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = a2;
  for (i = objc_opt_new(); a3; --a3)
    [i appendString:@"     "];
  uint64_t v6 = [v4 description];
  [i appendFormat:@"%@\n", v6];

  uint64_t v7 = (void *)[i copy];

  return v7;
}

void __SUViewHierarchy_block_invoke_2(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  [v1 appendString:v2];
}

id SUViewControllerHierarchy(void *a1)
{
  id v1 = a1;
  id v2 = objc_opt_new();
  uint64_t v6 = MEMORY[0x263EF8330];
  uint64_t v7 = 3221225472;
  id v8 = __SUViewControllerHierarchy_block_invoke_2;
  id v9 = &unk_263FDD108;
  id v10 = v2;
  id v11 = &__block_literal_global_23;
  id v3 = v2;
  _SUCrawlViewController(v1, 2, &v6);

  id v4 = objc_msgSend(v3, "copy", v6, v7, v8, v9);

  return v4;
}

id __SUViewControllerHierarchy_block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = a2;
  for (i = objc_opt_new(); a3; --a3)
    [i appendString:@"     "];
  uint64_t v6 = [v4 description];
  [i appendFormat:@"%@\n", v6];

  uint64_t v7 = (void *)[i copy];

  return v7;
}

void __SUViewControllerHierarchy_block_invoke_2(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  [v1 appendString:v2];
}

void sub_20A41AFAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_20A41B05C(uint64_t a1, double *a2, void *a3, char *a4)
{
  uint64_t v8 = sub_20A8C2800();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(a3, sel_horizontalSizeClass, v10);
  if ((unint64_t)v13 < 2)
  {
    uint64_t v15 = sel_setHidden_;
    id v16 = a4;
    uint64_t v14 = 1;
    return objc_msgSend(v16, v15, v14);
  }
  if (v13 != (id)2)
  {
    uint64_t v15 = sel_setFrame_;
    id v16 = a4;
    return objc_msgSend(v16, v15, v14);
  }
  uint64_t v57 = v4;
  objc_msgSend(a4, sel_setHidden_, 0);
  objc_msgSend(a4, sel_setFrame_, 0.0, 0.0, *a2, a2[1]);
  double v18 = a2[10];
  double v19 = a2[11];
  double v20 = a2[12];
  double v21 = a2[13];
  id v54 = *(id *)&a4[qword_26AC80C40];
  objc_msgSend(v54, sel_setFrame_, v18, v19, v20, v21);
  double v22 = a2[18];
  double v23 = a2[19];
  double v24 = a2[20];
  double v25 = a2[21];
  id v55 = *(id *)&a4[qword_26AC80C48];
  objc_msgSend(v55, sel_setFrame_, v22, v23, v24, v25);
  v26 = *(void **)&a4[qword_26763CFB0];
  objc_msgSend(v26, sel_setFrame_, a2[14], a2[15], a2[16], a2[17]);
  v27 = *(void **)&a4[qword_26AC80C50];
  objc_msgSend(v27, sel_setFrame_, a2[2], a2[3], a2[4], a2[5]);
  double v28 = a2[6];
  double v29 = a2[7];
  double v30 = a2[8];
  double v31 = a2[9];
  id v56 = *(id *)&a4[qword_26AC80C58];
  objc_msgSend(v56, sel_setFrame_, v28, v29, v30, v31);
  swift_retain();
  if (sub_20A8051B8())
  {
    if (qword_26AC82DB0 != -1) {
      swift_once();
    }
    type metadata accessor for ForYouMastheadModel();
    sub_20A41C0A8((unint64_t *)&qword_26763A540, (void (*)(uint64_t))type metadata accessor for ForYouMastheadModel);
    sub_20A8C41C0();
    swift_release();
    if (v58)
    {
      objc_msgSend(v26, sel_setHidden_, 0);
      sub_20A8C7920();
      goto LABEL_16;
    }
  }
  else
  {
    swift_release();
  }
  objc_msgSend(v26, sel_setHidden_, 1);
LABEL_16:
  v32 = (void *)(v57 + 16);
  swift_bridgeObjectRetain();
  id v33 = sub_20A5D1C28();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_setAttributedText_, v33);

  objc_msgSend(v56, sel_frame);
  double MaxX = CGRectGetMaxX(v61);
  objc_msgSend(v26, sel_frame);
  if (CGRectGetMinX(v62) + -10.0 >= MaxX) {
    goto LABEL_26;
  }
  swift_retain();
  if ((sub_20A8051B8() & 1) == 0)
  {
    swift_release();
    goto LABEL_26;
  }
  if (qword_26AC82DB0 != -1) {
    swift_once();
  }
  type metadata accessor for ForYouMastheadModel();
  sub_20A41C0A8((unint64_t *)&qword_26763A540, (void (*)(uint64_t))type metadata accessor for ForYouMastheadModel);
  sub_20A8C41C0();
  swift_release();
  if ((v59 & 1) == 0)
  {
LABEL_26:
    __swift_project_boxed_opaque_existential_1(v32, *(void *)(v57 + 40));
    if (qword_26AC80B88 != -1) {
      swift_once();
    }
    v35 = (void *)qword_26AC80B80;
    if (qword_26AC80B80) {
      goto LABEL_29;
    }
LABEL_30:
    uint64_t v38 = 0;
    goto LABEL_31;
  }
  __swift_project_boxed_opaque_existential_1(v32, *(void *)(v57 + 40));
  if (qword_267639C80 != -1) {
    swift_once();
  }
  v35 = (void *)qword_26763E338;
  if (!qword_26763E338) {
    goto LABEL_30;
  }
LABEL_29:
  sub_20A8C27F0();
  v36 = (void *)sub_20A8C2730();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  id v37 = objc_msgSend(v35, sel_stringFromDate_, v36);

  uint64_t v38 = sub_20A8CE280();
LABEL_31:
  id v39 = sub_20A5D18E8(v38);
  swift_bridgeObjectRelease();
  objc_msgSend(v56, sel_setAttributedText_, v39);

  uint64_t v40 = v57;
  v41 = __swift_project_boxed_opaque_existential_1(v32, *(void *)(v57 + 40));
  uint64_t v43 = *(void *)(*v41 + 40);
  uint64_t v42 = *(void *)(*v41 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v41 + 16), v43);
  v44 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v42 + 16) + 488))(v43);
  objc_msgSend(v54, sel_setBackgroundColor_, v44);

  id v45 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(a4, sel_setBackgroundColor_, v45);

  objc_msgSend(v55, sel_setImage_, 0);
  v46 = __swift_project_boxed_opaque_existential_1(v32, *(void *)(v40 + 40));
  uint64_t v47 = *v46;
  v48 = (void *)(*v46 + 16);
  uint64_t v50 = *(void *)(*v46 + 40);
  uint64_t v49 = *(void *)(*v46 + 48);
  __swift_project_boxed_opaque_existential_1(v48, v50);
  (*(void (**)(uint64_t))(*(void *)(v49 + 16) + 496))(v50);
  sub_20A8C7940();
  uint64_t v52 = *(void *)(v47 + 40);
  uint64_t v51 = *(void *)(v47 + 48);
  __swift_project_boxed_opaque_existential_1(v48, v52);
  (*(void (**)(uint64_t))(*(void *)(v51 + 16) + 504))(v52);
  return (id)sub_20A8C7950();
}

uint64_t sub_20A41B7B0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ForYouFeedMastheadViewRenderer()
{
  return self;
}

void type metadata accessor for TestScrollDirection(uint64_t a1)
{
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for AppBackgroundStyler(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for StockChartRangeCalloutViewOptions(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for StockChartRangeCalloutViewOptions(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for UIInterfaceOrientation(uint64_t a1)
{
}

void type metadata accessor for TestAggregate(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for StockChartModelFactoryProvider.Axis(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for StockChartModelFactoryProvider.Axis(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t sub_20A41B96C(uint64_t a1, uint64_t a2)
{
  return sub_20A41C9C4(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_20A41B99C()
{
  return MEMORY[0x270EF1C48](*v0);
}

uint64_t sub_20A41B9A4(uint64_t a1, uint64_t a2)
{
  int v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x210526AC0](a1, &v6);
  char v4 = v7;
  int v5 = v6;
  if (v7) {
    int v5 = 0;
  }
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_20A41B9F8(uint64_t a1, uint64_t a2)
{
  int v7 = 0;
  char v8 = 1;
  char v3 = MEMORY[0x210526AD0](a1, &v7);
  char v4 = v8;
  int v5 = v7;
  if (v8) {
    int v5 = 0;
  }
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_20A41BA50(float *a1@<X8>)
{
  *a1 = MEMORY[0x210526AE0]();
}

id sub_20A41BA78()
{
  return *v0;
}

uint64_t sub_20A41BA80@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_20A41BA88(uint64_t a1, id *a2)
{
  uint64_t result = sub_20A8CE260();
  *a2 = 0;
  return result;
}

uint64_t sub_20A41BB00(uint64_t a1, id *a2)
{
  char v3 = sub_20A8CE270();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_20A41BB80@<X0>(uint64_t *a1@<X8>)
{
  sub_20A8CE280();
  uint64_t v2 = sub_20A8CE240();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_20A41BBC8()
{
  return sub_20A8CF890();
}

uint64_t sub_20A41BBF8()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A41BC40()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A41BC88()
{
  return sub_20A8CE280();
}

uint64_t sub_20A41BC98(uint64_t a1)
{
  uint64_t v2 = sub_20A41C0A8((unint64_t *)&unk_26763CFA0, type metadata accessor for SKError);

  return MEMORY[0x270EEF7E8](a1, v2);
}

uint64_t sub_20A41BD04(uint64_t a1)
{
  uint64_t v2 = sub_20A41C0A8((unint64_t *)&unk_26763CFA0, type metadata accessor for SKError);

  return MEMORY[0x270EEF7A0](a1, v2);
}

uint64_t sub_20A41BD70(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_20A41C0A8((unint64_t *)&unk_26763CFA0, type metadata accessor for SKError);
  id v5 = a1;

  return MEMORY[0x270EEF790](v5, a2, v4);
}

uint64_t sub_20A41BE00()
{
  id v1 = *v0;
  uint64_t v2 = sub_20A8CEF40();

  return v2;
}

uint64_t sub_20A41BE38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A41C0A8((unint64_t *)&unk_26763CFA0, type metadata accessor for SKError);

  return MEMORY[0x270EEF7D0](a1, a2, v4);
}

uint64_t sub_20A41BEB4()
{
  return sub_20A8CF8C0();
}

void *sub_20A41BF14@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_20A41BF24(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_20A41BF30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_20A8CE280();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20A41BF5C()
{
  sub_20A41C0A8(&qword_26763A548, type metadata accessor for UIContentSizeCategory);
  sub_20A41C0A8(&qword_26763A550, type metadata accessor for UIContentSizeCategory);

  return sub_20A8CF5A0();
}

uint64_t sub_20A41C018()
{
  return sub_20A41C0A8(&qword_26763A168, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_20A41C060()
{
  return sub_20A41C0A8(&qword_26763A170, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_20A41C0A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A41C0F0()
{
  return sub_20A41C0A8(&qword_26763A178, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_20A41C138()
{
  sub_20A41C0A8((unint64_t *)&qword_26AC7F9F8, type metadata accessor for Key);
  sub_20A41C0A8((unint64_t *)&unk_26763A7D0, type metadata accessor for Key);

  return sub_20A8CF5A0();
}

uint64_t sub_20A41C1F4()
{
  sub_20A41C0A8(&qword_26763A7E8, type metadata accessor for Identifier);
  sub_20A41C0A8((unint64_t *)&unk_26763A7F0, type metadata accessor for Identifier);

  return sub_20A8CF5A0();
}

uint64_t sub_20A41C2B0()
{
  sub_20A41C0A8(&qword_26763B630, type metadata accessor for OpenExternalURLOptionsKey);
  sub_20A41C0A8(&qword_26763A800, type metadata accessor for OpenExternalURLOptionsKey);

  return sub_20A8CF5A0();
}

uint64_t sub_20A41C36C()
{
  sub_20A41C0A8((unint64_t *)&unk_26763E030, type metadata accessor for ActivityType);
  sub_20A41C0A8(&qword_26763A7E0, type metadata accessor for ActivityType);

  return sub_20A8CF5A0();
}

_DWORD *sub_20A41C428@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

float sub_20A41C438@<S0>(_DWORD *a1@<X8>)
{
  float result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_20A41C444()
{
  return sub_20A8CF5A0();
}

uint64_t sub_20A41C500()
{
  sub_20A41C0A8((unint64_t *)&unk_26AC7FAE0, type metadata accessor for AttributeName);
  sub_20A41C0A8((unint64_t *)&unk_26763A7C0, type metadata accessor for AttributeName);

  return sub_20A8CF5A0();
}

uint64_t sub_20A41C5BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_20A8CE240();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_20A41C604()
{
  sub_20A41C0A8((unint64_t *)&unk_26AC7FA78, type metadata accessor for TraitKey);
  sub_20A41C0A8((unint64_t *)&unk_26763A7B0, type metadata accessor for TraitKey);

  return sub_20A8CF5A0();
}

uint64_t sub_20A41C6C0(uint64_t a1)
{
  uint64_t v2 = sub_20A41C0A8(&qword_26763A740, type metadata accessor for SKError);

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_20A41C72C(uint64_t a1)
{
  uint64_t v2 = sub_20A41C0A8(&qword_26763A740, type metadata accessor for SKError);

  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_20A41C79C(uint64_t a1)
{
  uint64_t v2 = sub_20A41C0A8((unint64_t *)&unk_26763CFA0, type metadata accessor for SKError);

  return MEMORY[0x270EEF788](a1, v2);
}

uint64_t sub_20A41C808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A41C0A8((unint64_t *)&unk_26763CFA0, type metadata accessor for SKError);

  return MEMORY[0x270EEF7B8](a1, a2, a3, v6);
}

BOOL sub_20A41C88C(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_20A41C8A0()
{
  sub_20A41C0A8(&qword_26763A798, type metadata accessor for AccessibilityTechnology);
  sub_20A41C0A8((unint64_t *)&unk_26763A7A0, type metadata accessor for AccessibilityTechnology);

  return sub_20A8CF5A0();
}

uint64_t sub_20A41C95C()
{
  return MEMORY[0x270F9DE70](*v0);
}

uint64_t sub_20A41C964()
{
  return sub_20A8CF8B0();
}

void sub_20A41C998()
{
}

uint64_t sub_20A41C9AC(uint64_t a1, uint64_t a2)
{
  return sub_20A41C9C4(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_20A41C9C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_20A8CE280();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_20A41CA08()
{
  sub_20A8CE280();
  sub_20A8CE360();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A41CA5C()
{
  sub_20A8CE280();
  sub_20A8CF880();
  sub_20A8CE360();
  uint64_t v0 = sub_20A8CF8C0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_20A41CAD0()
{
  uint64_t v0 = sub_20A8CE280();
  uint64_t v2 = v1;
  if (v0 == sub_20A8CE280() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_20A8CF760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL sub_20A41CB5C(float *a1, float *a2)
{
  return *a1 == *a2;
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
}

void type metadata accessor for AccessibilityTechnology(uint64_t a1)
{
}

void type metadata accessor for SKError(uint64_t a1)
{
}

void type metadata accessor for FCSubscriptionButtonTargetType(uint64_t a1)
{
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for TraitKey(uint64_t a1)
{
}

void type metadata accessor for AttributeName(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for FCPurchaseValidationState(uint64_t a1)
{
}

void type metadata accessor for ActivityType(uint64_t a1)
{
}

void type metadata accessor for Identifier(uint64_t a1)
{
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
}

void type metadata accessor for UIAccessibilityContrast(uint64_t a1)
{
}

void type metadata accessor for UIUserInterfaceStyle(uint64_t a1)
{
}

void type metadata accessor for CGPath(uint64_t a1)
{
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t sub_20A41CCD8()
{
  return sub_20A41C0A8(&qword_26763A688, type metadata accessor for UIUserInterfaceStyle);
}

uint64_t sub_20A41CD20()
{
  return sub_20A41C0A8(&qword_26763A690, type metadata accessor for UIAccessibilityContrast);
}

uint64_t sub_20A41CD68()
{
  return sub_20A41C0A8(&qword_26763A698, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_20A41CDB0()
{
  return sub_20A41C0A8(&qword_26763A6A0, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_20A41CDF8()
{
  return sub_20A41C0A8(&qword_26763A6A8, type metadata accessor for Identifier);
}

uint64_t sub_20A41CE40()
{
  return sub_20A41C0A8(&qword_26763A6B0, type metadata accessor for Identifier);
}

uint64_t sub_20A41CE88()
{
  return sub_20A41C0A8(&qword_26763A6B8, type metadata accessor for Identifier);
}

uint64_t sub_20A41CED0()
{
  return sub_20A41C0A8(&qword_26763A6C0, type metadata accessor for ActivityType);
}

uint64_t sub_20A41CF18()
{
  return sub_20A41C0A8(&qword_26763A6C8, type metadata accessor for ActivityType);
}

uint64_t sub_20A41CF60()
{
  return sub_20A41C0A8(&qword_26763A6D0, type metadata accessor for Key);
}

uint64_t sub_20A41CFA8()
{
  return sub_20A41C0A8(&qword_26763A6D8, type metadata accessor for Key);
}

uint64_t sub_20A41CFF0()
{
  return sub_20A41C0A8(&qword_26763A6E0, type metadata accessor for AttributeName);
}

uint64_t sub_20A41D038()
{
  return sub_20A41C0A8(&qword_26763A6E8, type metadata accessor for AttributeName);
}

uint64_t sub_20A41D080()
{
  return sub_20A41C0A8(&qword_26763A6F0, type metadata accessor for TraitKey);
}

uint64_t sub_20A41D0C8()
{
  return sub_20A41C0A8(&qword_26763A6F8, type metadata accessor for TraitKey);
}

uint64_t sub_20A41D110()
{
  return sub_20A41C0A8(&qword_26763A700, type metadata accessor for SKError);
}

uint64_t sub_20A41D158()
{
  return sub_20A41C0A8(&qword_26763A708, type metadata accessor for SKError);
}

uint64_t sub_20A41D1A0()
{
  return sub_20A41C0A8(&qword_26763A710, type metadata accessor for AccessibilityTechnology);
}

uint64_t sub_20A41D1E8()
{
  return sub_20A41C0A8(&qword_26763A718, type metadata accessor for AccessibilityTechnology);
}

uint64_t sub_20A41D230()
{
  return sub_20A41C0A8(&qword_26763A720, type metadata accessor for AccessibilityTechnology);
}

uint64_t sub_20A41D278()
{
  return sub_20A41C0A8(&qword_26763A728, type metadata accessor for UILayoutPriority);
}

uint64_t sub_20A41D2C0()
{
  return sub_20A41C0A8(&qword_26763A730, type metadata accessor for UILayoutPriority);
}

uint64_t sub_20A41D308()
{
  return sub_20A41C0A8(&qword_26763A738, type metadata accessor for UILayoutPriority);
}

uint64_t sub_20A41D350()
{
  return sub_20A41C0A8(&qword_26763A740, type metadata accessor for SKError);
}

uint64_t sub_20A41D398()
{
  return sub_20A41C0A8(&qword_26763A748, type metadata accessor for SKError);
}

uint64_t sub_20A41D3E0()
{
  return sub_20A41C0A8(&qword_26763A750, type metadata accessor for SKError);
}

uint64_t sub_20A41D428()
{
  return sub_20A41C0A8(&qword_26763A758, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_20A41D484()
{
  return sub_20A41C0A8(&qword_26763A760, type metadata accessor for Code);
}

unint64_t sub_20A41D4D0()
{
  unint64_t result = qword_26763A768;
  if (!qword_26763A768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763A768);
  }
  return result;
}

uint64_t sub_20A41D524()
{
  return sub_20A41C0A8(&qword_26763A770, type metadata accessor for Code);
}

uint64_t sub_20A41D56C()
{
  return sub_20A41C0A8((unint64_t *)&unk_26763CFA0, type metadata accessor for SKError);
}

uint64_t sub_20A41D5B4()
{
  return sub_20A41C0A8((unint64_t *)&unk_26AC7FAF0, type metadata accessor for AttributeName);
}

uint64_t sub_20A41D5FC()
{
  return sub_20A41C0A8((unint64_t *)&unk_26AC7FA88, type metadata accessor for TraitKey);
}

uint64_t sub_20A41D644()
{
  return sub_20A41C0A8(&qword_26AC7FA00, type metadata accessor for Key);
}

uint64_t sub_20A41D68C()
{
  return sub_20A41C0A8(&qword_26763A778, type metadata accessor for ActivityType);
}

uint64_t sub_20A41D6D4()
{
  return sub_20A41C0A8(&qword_26763A780, type metadata accessor for OpenExternalURLOptionsKey);
}

void type metadata accessor for UIStatusBarStyle(uint64_t a1)
{
}

void type metadata accessor for UIKeyboardAppearance(uint64_t a1)
{
}

void sub_20A41D744(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void sub_20A41D7B8()
{
  qword_26AC7A7E8 = 0x406A400000000000;
}

uint64_t sub_20A41D7CC@<X0>(uint64_t a1@<X8>)
{
  v14[1] = a1;
  sub_20A8CCD10();
  MEMORY[0x270FA5388]();
  uint64_t v1 = sub_20A8CCC40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8CCC60();
  MEMORY[0x270FA5388]();
  sub_20A8CCC80();
  MEMORY[0x270FA5388]();
  sub_20A8CCCB0();
  MEMORY[0x270FA5388]();
  sub_20A8CCCD0();
  MEMORY[0x270FA5388]();
  sub_20A42DA7C(0, &qword_26AC812F8, MEMORY[0x263F599C8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)v14 - v5;
  sub_20A8CCCE0();
  MEMORY[0x270FA5388]();
  char v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = *(void (**)(char *, void))(v9 + 104);
  if (*(unsigned char *)(v14[0] + 352))
  {
    v10(v8, *MEMORY[0x263F599D8]);
    sub_20A8CCCC0();
    uint64_t v11 = sub_20A8CCC90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  }
  else
  {
    v10(v8, *MEMORY[0x263F599D0]);
    uint64_t v12 = sub_20A8CCC90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    sub_20A8CCCC0();
  }
  sub_20A8CCC70();
  sub_20A8CCC70();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F599C0], v1);
  sub_20A8CCC50();
  sub_20A8CCD00();
  return sub_20A8CCCF0();
}

uint64_t sub_20A41DC38()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1(v0 + 216);
  __swift_destroy_boxed_opaque_existential_1(v0 + 256);
  __swift_destroy_boxed_opaque_existential_1(v0 + 296);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 360);
  __swift_destroy_boxed_opaque_existential_1(v0 + 400);
  __swift_destroy_boxed_opaque_existential_1(v0 + 440);
  return v0;
}

uint64_t sub_20A41DCB8()
{
  sub_20A41DC38();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedBlueprintLayoutBuilder()
{
  return self;
}

uint64_t sub_20A41DD10()
{
  return sub_20A42D8C0(&qword_26AC76F98, 255, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
}

uint64_t sub_20A41DD5C()
{
  return sub_20A42D8C0(&qword_26AC7B3E0, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutSectionDescriptor);
}

uint64_t sub_20A41DDA8()
{
  return sub_20A42D8C0(&qword_26AC72240, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
}

uint64_t sub_20A41DDF4()
{
  return sub_20A42D8C0(&qword_26AC6D860, 255, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
}

uint64_t sub_20A41DE40()
{
  return sub_20A8C41C0();
}

uint64_t sub_20A41DE70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return MEMORY[0x270F7A888](a1, a2, *v6, a6);
}

uint64_t sub_20A41DEA0()
{
  return sub_20A8C41D0();
}

uint64_t sub_20A41DED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return MEMORY[0x270F7A880](a1, a2, a3, a4, *v8, a8);
}

uint64_t sub_20A41DF00@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v228 = a2;
  v251 = a1;
  uint64_t v199 = a3;
  v188 = *v3;
  uint64_t v196 = sub_20A8C9EA0();
  uint64_t v195 = *(void *)(v196 - 8);
  MEMORY[0x270FA5388](v196);
  v198 = (char *)&v184 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = sub_20A8C9830();
  uint64_t v193 = *(void *)(v194 - 8);
  MEMORY[0x270FA5388](v194);
  v197 = (char *)&v184 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42DA7C(0, &qword_26AC7FCD0, (uint64_t (*)(uint64_t))sub_20A42BED4, MEMORY[0x263F8DD68]);
  MEMORY[0x270FA5388](v6 - 8);
  v184 = (char *)&v184 - v7;
  uint64_t v224 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x270FA5388](v224);
  v186 = (char *)&v184 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42BED4();
  uint64_t v230 = v9;
  uint64_t v189 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v185 = (uint64_t)&v184 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  v187 = (void (**)(uint64_t, uint64_t))((char *)&v184 - v12);
  MEMORY[0x270FA5388](v13);
  v229 = (char *)&v184 - v14;
  uint64_t v240 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v240);
  v239 = (char *)&v184 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  v238 = (char *)&v184 - v17;
  sub_20A42BFC8();
  uint64_t v222 = v18;
  uint64_t v201 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  v237 = (char **)((char *)&v184 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v20);
  v246 = (char *)&v184 - v21;
  MEMORY[0x270FA5388](v22);
  v236 = (char **)((char *)&v184 - v23);
  sub_20A42C050(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  uint64_t v25 = v24;
  uint64_t v250 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  v248 = (char *)&v184 - v26;
  sub_20A42C14C(0);
  uint64_t v241 = v27;
  MEMORY[0x270FA5388](v27);
  v221 = (char *)&v184 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C188(0);
  MEMORY[0x270FA5388](v29 - 8);
  v235 = (char **)((char *)&v184 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v31);
  uint64_t v226 = (uint64_t)&v184 - v32;
  sub_20A42C27C(0);
  MEMORY[0x270FA5388](v33 - 8);
  v200 = (char **)((char *)&v184 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A42C2B0();
  uint64_t v191 = v35;
  MEMORY[0x270FA5388](v35);
  v190 = (char *)&v184 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C050(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  uint64_t v249 = v37;
  uint64_t v225 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  v245 = (char *)&v184 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  v244 = (char *)&v184 - v40;
  MEMORY[0x270FA5388](v41);
  v192 = (char *)&v184 - v42;
  uint64_t v243 = sub_20A8CCD20();
  v242 = *(void (***)(uint64_t, uint64_t))(v243 - 8);
  MEMORY[0x270FA5388](v243);
  uint64_t v231 = (uint64_t)&v184 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v223 = sub_20A8C43D0();
  uint64_t v44 = *(void *)(v223 - 8);
  MEMORY[0x270FA5388](v223);
  v232 = (char *)&v184 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v234 = (char **)sub_20A8C43C0();
  v233 = (void (**)(char *, uint64_t))*(v234 - 1);
  MEMORY[0x270FA5388](v234);
  v220 = (char *)&v184 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_20A8C43A0();
  uint64_t v48 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v50 = (char *)&v184 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C334(0);
  MEMORY[0x270FA5388](v51 - 8);
  uint64_t v53 = (char *)&v184 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_20A8CCF20();
  uint64_t v55 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v57 = (char *)&v184 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v227 = v3;
  v218 = v3[42];
  uint64_t v247 = v25;
  sub_20A8CBA50();
  uint64_t v217 = v58;
  if (qword_26AC6CF90 != -1) {
    goto LABEL_37;
  }
  while (1)
  {
    char v59 = (void *)qword_26AC6CF88;
    uint64_t v60 = *MEMORY[0x263F59AC8];
    CGRect v61 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 104);
    v216 = v57;
    uint64_t v219 = v54;
    v61(v57, v60, v54);
    uint64_t v62 = sub_20A8CCFE0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v53, 1, 1, v62);
    (*(void (**)(char *, void, uint64_t))(v48 + 104))(v50, *MEMORY[0x263F7D190], v47);
    id v215 = v59;
    uint64_t v214 = v55;
    uint64_t v63 = v228;
    sub_20A8C9720();
    sub_20A8CEDC0();
    uint64_t v212 = v64;
    uint64_t v211 = v65;
    sub_20A8C9720();
    uint64_t v210 = v66;
    uint64_t v209 = v67;
    sub_20A8C9760();
    uint64_t v207 = v68;
    uint64_t v206 = v69;
    sub_20A8C96F0();
    uint64_t v205 = v70;
    uint64_t v204 = v71;
    sub_20A8C9770();
    uint64_t v203 = v72;
    uint64_t v202 = v73;
    sub_20A8C9750();
    v208 = v53;
    v74 = v50;
    sub_20A8C9710();
    uint64_t v76 = v75;
    uint64_t v78 = v77;
    sub_20A8C9740();
    uint64_t v213 = v47;
    sub_20A8C97B0();
    sub_20A8C9730();
    double v80 = v79;
    uint64_t v82 = v81;
    v84 = v83;
    uint64_t v86 = v85;
    (*(void (**)(char *, void, uint64_t))(v44 + 104))(v232, *MEMORY[0x263F7D1A8], v223);
    v178 = 0;
    uint64_t v179 = 0;
    v182 = v84;
    uint64_t v183 = v86;
    double v180 = v80;
    uint64_t v181 = v82;
    v177[0] = v76;
    v177[1] = v78;
    v87 = v220;
    sub_20A8C43B0();
    uint64_t v88 = v231;
    double v89 = *(double *)&v227;
    sub_20A41D7CC(v231);
    v90 = v216;
    uint64_t v91 = (uint64_t)v208;
    uint64_t v92 = sub_20A8CC6B0();
    swift_bridgeObjectRelease();

    v242[1](v88, v243);
    v233[1](v87, (uint64_t)v234);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v74, v213);
    sub_20A42C3C4(v91, (uint64_t (*)(void))sub_20A42C334);
    uint64_t v93 = (*(uint64_t (**)(char *, uint64_t))(v214 + 8))(v90, v219);
    char v255 = 1;
    MEMORY[0x270FA5388](v93);
    double v180 = v89;
    uint64_t v181 = v63;
    v182 = &v255;
    uint64_t v183 = v92;
    v220 = (char *)v92;
    v94 = v251;
    unint64_t v95 = sub_20A424824((void (*)(char *))sub_20A42C368, (uint64_t)&v178);
    uint64_t v219 = 0;
    unint64_t v254 = v95;
    uint64_t v96 = v250;
    v97 = *(void (***)(uint64_t, uint64_t))(v250 + 16);
    uint64_t v98 = v226;
    uint64_t v99 = v247;
    uint64_t v243 = v250 + 16;
    v242 = v97;
    ((void (*)(uint64_t, void *, uint64_t))v97)(v226, v94, v247);
    uint64_t v100 = v98;
    v101 = (void (**)(void, void))v235;
    sub_20A42C630(v100, (uint64_t)v235, (uint64_t (*)(void))sub_20A42C188);
    v102 = *(void (**)(char *, void (**)(void, void), uint64_t))(v96 + 32);
    v103 = v248;
    v102(v248, v101, v99);
    v104 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
    sub_20A42CA38((unint64_t *)&unk_26AC6ACA0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
    uint64_t v223 = v95;
    swift_bridgeObjectRetain();
    v105 = v221;
    sub_20A8CE4B0();
    uint64_t v241 = *(int *)(v241 + 36);
    *(void *)&v105[v241] = 0;
    sub_20A42C388(0);
    v107 = &v105[*(int *)(v106 + 36)];
    uint64_t v108 = sub_20A42CA38((unint64_t *)&unk_26AC6ACB0, (unint64_t *)&qword_26AC6ACC0, v104);
    uint64_t v109 = *(void *)v107;
    sub_20A8CE8A0();
    uint64_t v110 = v222;
    uint64_t v111 = v99;
    uint64_t v112 = (uint64_t)v105;
    if (v109 == v253) {
      break;
    }
    v113 = v103;
    v251 = (void *)(v225 + 16);
    v235 = (char **)(v250 + 8);
    v234 = (char **)(v225 + 32);
    v233 = (void (**)(char *, uint64_t))(v225 + 8);
    v232 = v107;
    uint64_t v231 = v108;
    while (1)
    {
      v114 = (void (*)(uint64_t *, void))sub_20A8CE8C0();
      v115 = v245;
      uint64_t v54 = v249;
      uint64_t v250 = *v251;
      ((void (*)(char *))v250)(v245);
      v114(&v253, 0);
      ((void (*)(char *, uint64_t, uint64_t))v242)(v113, v112, v111);
      sub_20A8CE8B0();
      ((void (*)(char *, uint64_t))*v235)(v113, v111);
      uint64_t v57 = *v234;
      uint64_t v47 = (uint64_t)v244;
      ((void (*)(char *, char *, uint64_t))*v234)(v244, v115, v54);
      uint64_t v50 = v246;
      v116 = &v246[*(int *)(v110 + 48)];
      uint64_t v48 = v110;
      uint64_t v55 = v241;
      uint64_t v44 = v112;
      uint64_t v53 = *(char **)(v112 + v241);
      ((void (*)(char *, uint64_t, uint64_t))v57)(v116, v47, v54);
      if (__OFADD__(v53, 1)) {
        break;
      }
      *(void *)(v112 + v55) = v53 + 1;
      uint64_t v117 = (uint64_t)v236;
      v118 = (char *)v236 + *(int *)(v48 + 48);
      *v236 = v53;
      ((void (*)(char *, char *, uint64_t))v57)(v118, v116, v54);
      v119 = v50;
      v120 = v237;
      sub_20A42C5C8(v117, (uint64_t)v237, (uint64_t (*)(void))sub_20A42BFC8);
      uint64_t v121 = *(int *)(v48 + 48);
      v122 = (char *)v119 + v121;
      void *v119 = *v120;
      ((void (*)(char *, char *, uint64_t))v250)((char *)v119 + v121, (char *)v120 + v121, v54);
      uint64_t v123 = (uint64_t)v238;
      sub_20A8C8820();
      (*v233)(v122, v54);
      uint64_t v124 = (uint64_t)v239;
      swift_storeEnumTagMultiPayload();
      LOBYTE(v122) = sub_20A546124(v123, v124);
      sub_20A42C3C4(v124, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
      sub_20A42C3C4(v123, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
      uint64_t v110 = v48;
      if (v122)
      {
        sub_20A42C3C4(v112, (uint64_t (*)(void))sub_20A42C14C);
        v127 = v200;
        sub_20A42C5C8((uint64_t)v120, (uint64_t)v200, (uint64_t (*)(void))sub_20A42BFC8);
        uint64_t v126 = 0;
        goto LABEL_9;
      }
      sub_20A42C3C4((uint64_t)v120, (uint64_t (*)(void))sub_20A42BFC8);
      uint64_t v125 = *(void *)v232;
      uint64_t v111 = v247;
      sub_20A8CE8A0();
      v113 = v248;
      if (v125 == v253) {
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_37:
    swift_once();
  }
LABEL_7:
  sub_20A42C3C4(v112, (uint64_t (*)(void))sub_20A42C14C);
  uint64_t v126 = 1;
  v127 = v200;
LABEL_9:
  uint64_t v128 = v201;
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v201 + 56))(v127, v126, 1, v110);
  sub_20A42C3C4(v226, (uint64_t (*)(void))sub_20A42C188);
  int v129 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v128 + 48))(v127, 1, v110);
  v130 = v227;
  uint64_t v131 = v110;
  uint64_t v132 = v249;
  uint64_t v133 = v225;
  if (v129 == 1)
  {
    sub_20A42C3C4((uint64_t)v127, (uint64_t (*)(void))sub_20A42C27C);
    swift_bridgeObjectRelease();
    uint64_t v134 = v228;
LABEL_35:
    uint64_t v174 = v196;
    uint64_t v175 = v195;
    (*(void (**)(char *, uint64_t, uint64_t))(v193 + 16))(v197, v134, v194);
    (*(void (**)(char *, void, uint64_t))(v175 + 104))(v198, *MEMORY[0x263F7D9E0], v174);
    type metadata accessor for StockFeedLayoutModel();
    sub_20A42D8C0(&qword_26AC7B3E8, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutSectionDescriptor);
    sub_20A42D8C0(&qword_26AC72248, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
    sub_20A8C8600();
    return swift_release();
  }
  v135 = (char *)v127 + *(int *)(v131 + 48);
  uint64_t v136 = v191;
  v137 = v190;
  v138 = &v190[*(int *)(v191 + 48)];
  *(void *)v190 = *v127;
  v139 = *(void (**)(char *, char *, uint64_t))(v133 + 32);
  v139(v138, v135, v132);
  v140 = *(void **)v137;
  v141 = v192;
  v139(v192, &v137[*(int *)(v136 + 48)], v132);
  __swift_project_boxed_opaque_existential_1(v130 + 55, (uint64_t)v130[58]);
  char v142 = sub_20A8C3850();
  uint64_t v134 = v228;
  if ((v142 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v133 + 8))(v141, v132);
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  v251 = v140;
  sub_20A8C9820();
  double v144 = v143;
  uint64_t v145 = v223;
  int64_t v146 = *(void *)(v223 + 16);
  if (v146)
  {
    uint64_t v253 = MEMORY[0x263F8EE78];
    sub_20A68C294(0, v146, 0);
    v147 = *(void (**)(char *, unint64_t, uint64_t))(v189 + 16);
    unint64_t v148 = v145 + ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80));
    uint64_t v149 = *(void *)(v189 + 72);
    v150 = (void (**)(uint64_t, uint64_t))(v189 + 8);
    uint64_t v151 = v219;
    while (1)
    {
      uint64_t v152 = (uint64_t)v229;
      uint64_t v153 = v230;
      v147(v229, v148, v230);
      sub_20A426BB8(v152, (double *)&v252);
      if (v151) {
        goto LABEL_40;
      }
      (*v150)(v152, v153);
      uint64_t v154 = v252;
      uint64_t v155 = v253;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C294(0, *(void *)(v155 + 16) + 1, 1);
        uint64_t v155 = v253;
      }
      unint64_t v157 = *(void *)(v155 + 16);
      unint64_t v156 = *(void *)(v155 + 24);
      if (v157 >= v156 >> 1)
      {
        sub_20A68C294(v156 > 1, v157 + 1, 1);
        uint64_t v155 = v253;
      }
      *(void *)(v155 + 16) = v157 + 1;
      *(void *)(v155 + 8 * v157 + 32) = v154;
      v148 += v149;
      --v146;
      uint64_t v151 = 0;
      if (!v146)
      {
        swift_bridgeObjectRelease();
        uint64_t v134 = v228;
        v130 = v227;
        uint64_t v158 = v189;
        goto LABEL_23;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v155 = MEMORY[0x263F8EE78];
  uint64_t v158 = v189;
LABEL_23:
  int64_t v159 = (int64_t)v251;
  uint64_t v160 = *(void *)(v155 + 16);
  v150 = v187;
  if (v160)
  {
    if (v160 == 1)
    {
      uint64_t v161 = 0;
      double v162 = 0.0;
    }
    else
    {
      uint64_t v161 = v160 & 0x7FFFFFFFFFFFFFFELL;
      v163 = (double *)(v155 + 40);
      double v162 = 0.0;
      uint64_t v164 = v160 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        double v162 = v162 + *(v163 - 1) + *v163;
        v163 += 2;
        v164 -= 2;
      }
      while (v164);
      if (v160 == v161) {
        goto LABEL_32;
      }
    }
    uint64_t v165 = v160 - v161;
    v166 = (double *)(v155 + 8 * v161 + 32);
    do
    {
      double v167 = *v166++;
      double v162 = v162 + v167;
      --v165;
    }
    while (v165);
  }
  else
  {
    double v162 = 0.0;
  }
LABEL_32:
  swift_bridgeObjectRelease();
  sub_20A8C9730();
  sub_20A8CE980();
  double v169 = v144 - v162 - v168 + -10.0;
  uint64_t v170 = swift_storeEnumTagMultiPayload();
  MEMORY[0x270FA5388](v170);
  v178 = v130;
  uint64_t v179 = v134;
  double v180 = v169;
  LOBYTE(v181) = 0;
  v182 = v188;
  v171 = v192;
  sub_20A4494CC((void (*)(char *))sub_20A42C424, (uint64_t)v177);
  type metadata accessor for StockFeedLayoutModel();
  sub_20A42D8C0(&qword_26AC7B3E0, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutSectionDescriptor);
  sub_20A42D8C0(&qword_26AC72240, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
  sub_20A8C9840();
  uint64_t v152 = v185;
  sub_20A4271D8(v159, v185);
  v172 = *(void (**)(uint64_t, uint64_t))(v158 + 8);
  uint64_t v153 = v230;
  v172(v152, v230);
  if (*(void *)(v254 + 16) < v159)
  {
    __break(1u);
  }
  else if ((v159 & 0x8000000000000000) == 0)
  {
    uint64_t v173 = (uint64_t)v184;
    (*(void (**)(char *, void (**)(uint64_t, uint64_t), uint64_t))(v158 + 16))(v184, v150, v153);
    sub_20A5AAE24(v159, v159, v173);
    v172((uint64_t)v150, v153);
    (*(void (**)(char *, uint64_t))(v225 + 8))(v171, v249);
    goto LABEL_35;
  }
  __break(1u);
LABEL_40:
  (*v150)(v152, v153);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_20A41F9A8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X3>, void (**a5)(char *)@<X4>, uint64_t a6@<X8>)
{
  v107 = a5;
  v104 = a4;
  uint64_t v115 = a3;
  uint64_t v116 = a6;
  uint64_t v109 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x270FA5388](v109);
  uint64_t v108 = (void (*)(char *, uint64_t, uint64_t))((char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v103 = sub_20A8CC470();
  uint64_t v102 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  v94 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C764(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v100 = (uint64_t)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v101 = (uint64_t)&v92 - v13;
  uint64_t v119 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v119);
  v114 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C4A4();
  uint64_t v16 = v15;
  uint64_t v110 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  v113 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v112 = (char *)&v92 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v111 = (char *)&v92 - v21;
  sub_20A42C798();
  uint64_t v93 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v117 = (char *)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C050(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  uint64_t v25 = v24;
  uint64_t v106 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  v118 = (char *)&v92 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v92 - v28;
  sub_20A42C84C();
  uint64_t v105 = v30;
  uint64_t v99 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  v97 = (char *)&v92 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v98 = (char *)&v92 - v33;
  uint64_t v34 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x270FA5388](v34 - 8);
  uint64_t v36 = (char *)&v92 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v37);
  unint64_t v95 = (char *)&v92 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  uint64_t v41 = (char *)&v92 - v40;
  sub_20A8C8820();
  uint64_t v96 = v37;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_bridgeObjectRelease();
      sub_20A42C980();
      uint64_t v44 = v101;
      sub_20A42C5C8((uint64_t)&v41[*(int *)(v43 + 64)], v101, (uint64_t (*)(void))sub_20A42C764);
      uint64_t v45 = v104;
      sub_20A420F94(v104, v115, a2, (uint64_t)&v121);
      uint64_t v46 = v100;
      sub_20A42C630(v44, v100, (uint64_t (*)(void))sub_20A42C764);
      uint64_t v47 = v102;
      uint64_t v48 = v103;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v46, 1, v103) == 1)
      {
        sub_20A42C3C4(v46, (uint64_t (*)(void))sub_20A42C764);
        uint64_t v49 = v116;
        sub_20A4227DC(a1, (uint64_t)&v121, (uint64_t)v107, v116);
        sub_20A42CD70(&v121, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_20A42C9F4);
        sub_20A42C3C4(v44, (uint64_t (*)(void))sub_20A42C764);
        sub_20A42BED4();
        uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 0, 1, v50);
      }
      else
      {
        uint64_t v76 = (uint64_t)v94;
        (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v94, v46, v48);
        uint64_t v77 = v116;
        sub_20A4217F4(a1, &v121, (uint64_t)v107, v76, v116);
        sub_20A42CD70(&v121, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_20A42C9F4);
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v76, v48);
        sub_20A42C3C4(v44, (uint64_t (*)(void))sub_20A42C764);
        sub_20A42BED4();
        uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v77, 0, 1, v78);
      }
      *uint64_t v45 = 0;
      return result;
    case 2u:
      uint64_t v52 = v116;
      sub_20A423BCC(a1, v116);
      sub_20A42BED4();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v52, 0, 1, v53);
      return sub_20A42C3C4((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
    case 3u:
      uint64_t v54 = a2;
      __swift_project_boxed_opaque_existential_1((void *)(a2 + 440), *(void *)(a2 + 464));
      if (sub_20A8C3850())
      {
        uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t))(v106 + 16);
        uint64_t v109 = v106 + 16;
        uint64_t v108 = v55;
        v55(v29, a1, v25);
        uint64_t v120 = MEMORY[0x263F8EE78];
        uint64_t v56 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
        sub_20A42CA38(&qword_26AC812E8, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
        uint64_t v57 = (uint64_t)v117;
        sub_20A8CE4B0();
        uint64_t v58 = (uint64_t *)(v57 + *(int *)(v93 + 36));
        sub_20A42CA38((unint64_t *)&unk_26AC69F00, (unint64_t *)&qword_26AC69F10, v56);
        uint64_t v59 = *v58;
        sub_20A8CE8A0();
        if (v59 != v121)
        {
          v107 = (void (**)(char *))(v110 + 16);
          v104 = (unsigned char *)(v106 + 8);
          double v80 = (void (**)(char *, char *, uint64_t))(v110 + 32);
          uint64_t v102 = v110 + 8;
          uint64_t v103 = v54;
          do
          {
            v83 = (void (*)(uint64_t *, void))sub_20A8CE8C0();
            v84 = v112;
            (*v107)(v112);
            v83(&v121, 0);
            uint64_t v85 = v118;
            v108(v118, v57, v25);
            sub_20A8CE8B0();
            (*(void (**)(char *, uint64_t))v104)(v85, v25);
            uint64_t v86 = *v80;
            v87 = v111;
            (*v80)(v111, v84, v16);
            uint64_t v88 = (uint64_t)v114;
            sub_20A8C8330();
            if (swift_getEnumCaseMultiPayload() == 2)
            {
              uint64_t v81 = sub_20A8C3F00();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v88, v81);
              (*(void (**)(char *, uint64_t))v102)(v87, v16);
            }
            else
            {
              sub_20A42C3C4(v88, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
              v86(v113, v87, v16);
              uint64_t v89 = v120;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_20A68C2B4(0, *(void *)(v89 + 16) + 1, 1);
                uint64_t v89 = v120;
              }
              unint64_t v91 = *(void *)(v89 + 16);
              unint64_t v90 = *(void *)(v89 + 24);
              if (v91 >= v90 >> 1)
              {
                sub_20A68C2B4(v90 > 1, v91 + 1, 1);
                uint64_t v89 = v120;
              }
              *(void *)(v89 + 16) = v91 + 1;
              v86((char *)(v89+ ((*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80))+ *(void *)(v110 + 72) * v91), v113, v16);
              uint64_t v120 = v89;
            }
            uint64_t v82 = *v58;
            uint64_t v57 = (uint64_t)v117;
            sub_20A8CE8A0();
          }
          while (v82 != v121);
        }
        sub_20A42C3C4(v57, (uint64_t (*)(void))sub_20A42C798);
        uint64_t v60 = v120;
        uint64_t v61 = sub_20A42D8C0(&qword_26AC69D78, 255, (void (*)(uint64_t))sub_20A42C4A4);
        uint64_t v62 = sub_20A42D8C0(&qword_26AC69D70, 255, (void (*)(uint64_t))sub_20A42C4A4);
        uint64_t v63 = v98;
        MEMORY[0x21051E250](v60, v16, v61, v62);
        swift_storeEnumTagMultiPayload();
        uint64_t v64 = v99;
        (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v97, v63, v105);
        sub_20A42D8C0(&qword_26AC76F98, 255, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
        sub_20A42D8C0(&qword_26AC6D860, 255, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
        uint64_t v65 = (uint64_t)v118;
        sub_20A8C8810();
        uint64_t v42 = v116;
        sub_20A420DD8(v65, v115, 0, 1);
        (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v65, v25);
        (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v105);
      }
      else
      {
        uint64_t v42 = v116;
        sub_20A420DD8(a1, v115, 0, 1);
      }
      goto LABEL_17;
    case 4u:
      uint64_t v66 = swift_storeEnumTagMultiPayload();
      MEMORY[0x270FA5388](v66);
      uint64_t v67 = &v92 - 4;
      uint64_t v68 = v115;
      *(&v92 - 2) = a2;
      *(&v92 - 1) = v68;
      uint64_t v69 = (void (*)(char *))sub_20A42C960;
      goto LABEL_13;
    case 5u:
      uint64_t v42 = v116;
      sub_20A4241F8(a1, v116);
      goto LABEL_17;
    case 6u:
      uint64_t v70 = swift_storeEnumTagMultiPayload();
      MEMORY[0x270FA5388](v70);
      uint64_t v67 = &v92 - 4;
      uint64_t v71 = v115;
      *(&v92 - 2) = a2;
      *(&v92 - 1) = v71;
      uint64_t v69 = (void (*)(char *))sub_20A42C940;
      goto LABEL_13;
    case 7u:
      uint64_t v72 = swift_storeEnumTagMultiPayload();
      MEMORY[0x270FA5388](v72);
      uint64_t v67 = &v92 - 4;
      uint64_t v73 = v115;
      *(&v92 - 2) = a2;
      *(&v92 - 1) = v73;
      uint64_t v69 = (void (*)(char *))sub_20A42C920;
LABEL_13:
      sub_20A4494CC(v69, (uint64_t)v67);
      type metadata accessor for StockFeedLayoutModel();
      sub_20A42D8C0(&qword_26AC7B3E0, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutSectionDescriptor);
      sub_20A42D8C0(&qword_26AC72240, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
      uint64_t v74 = v116;
      sub_20A8C9840();
      sub_20A42BED4();
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v74, 0, 1, v75);
      break;
    default:
      sub_20A42C5C8((uint64_t)v41, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      uint64_t v42 = v116;
      sub_20A420AE4(a1, v115, (uint64_t)v36);
      sub_20A42C3C4((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
LABEL_17:
      sub_20A42BED4();
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v42, 0, 1, v79);
      break;
  }
  return result;
}

uint64_t sub_20A420AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for StockFeedMastheadViewLayoutAttributes();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for StockFeedMastheadViewLayoutOptions();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = &v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_20A8C9830();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v15, a2, v16);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
  sub_20A7D6284(*(double *)&a3, (uint64_t)v15, (uint64_t)v12);
  sub_20A42CA7C();
  uint64_t v18 = (uint64_t)&v9[*(int *)(v17 + 48)];
  sub_20A42C630(a3, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
  sub_20A42C630((uint64_t)v12, v18, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = v4;
  uint64_t v22 = v15;
  uint64_t v23 = a2;
  sub_20A4494CC((void (*)(char *))sub_20A42CAEC, (uint64_t)v20);
  type metadata accessor for StockFeedLayoutModel();
  sub_20A42D8C0(&qword_26AC7B3E0, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutSectionDescriptor);
  sub_20A42D8C0(&qword_26AC72240, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
  sub_20A8C9840();
  sub_20A42C3C4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
  return sub_20A42C3C4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewLayoutOptions);
}

uint64_t sub_20A420DD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = *v4;
  uint64_t v9 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x270FA5388](v9);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = v4;
  uint64_t v13 = a2;
  uint64_t v14 = a3;
  char v15 = a4 & 1;
  uint64_t v16 = v8;
  sub_20A4494CC((void (*)(char *))sub_20A42C424, (uint64_t)v11);
  type metadata accessor for StockFeedLayoutModel();
  sub_20A42D8C0(&qword_26AC7B3E0, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutSectionDescriptor);
  sub_20A42D8C0(&qword_26AC72240, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
  return sub_20A8C9840();
}

uint64_t sub_20A420F94@<X0>(unsigned char *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for BrandingTitleViewLayoutOptions();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C050(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  sub_20A8C8820();
  uint64_t result = swift_getEnumCaseMultiPayload();
  long long v15 = 0uLL;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  long long v18 = 0uLL;
  long long v19 = 0uLL;
  long long v20 = 0uLL;
  switch((int)result)
  {
    case 1:
      swift_bridgeObjectRelease();
      sub_20A42C980();
      uint64_t v23 = (uint64_t)&v13[*(int *)(v22 + 64)];
      if (*a1 == 1
        && (v13[16] & 1) == 0
        && (uint64_t v24 = (void *)sub_20A8C9750(),
            id v25 = objc_msgSend(v24, sel_horizontalSizeClass),
            v24,
            v25 == (id)1))
      {
        type metadata accessor for Localized();
        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        id v27 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
        unint64_t v78 = 0x800000020A8F8890;
        uint64_t v28 = sub_20A8C2370();
        uint64_t v83 = v23;
        uint64_t v16 = v28;
        uint64_t v17 = v29;

        uint64_t v30 = __swift_project_boxed_opaque_existential_1((void *)(a3 + 296), *(void *)(a3 + 320));
        uint64_t v31 = sub_20A8C9830();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v10, a2, v31);
        uint64_t v32 = &v10[*(int *)(v8 + 20)];
        *(void *)uint64_t v32 = 0x4020000000000000;
        *((void *)v32 + 1) = 0;
        *((void *)v32 + 2) = 0;
        *((void *)v32 + 3) = 0;
        uint64_t v33 = *v30;
        sub_20A8C9720();
        sub_20A8C9720();
        sub_20A8C9710();
        sub_20A8C9710();
        sub_20A8CEDD0();
        double v35 = v34;
        double v37 = v36;
        uint64_t v38 = (void *)*__swift_project_boxed_opaque_existential_1((void *)(v33 + 16), *(void *)(v33 + 40));
        id v39 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F089B8]), sel_init);
        *(void *)&long long v84 = v39;
        id v40 = objc_allocWithZone(MEMORY[0x263F086A0]);
        swift_bridgeObjectRetain();
        uint64_t v41 = (void *)sub_20A8CE240();
        swift_bridgeObjectRelease();
        id v42 = objc_msgSend(v40, sel_initWithString_, v41);

        objc_msgSend(v39, sel_appendAttributedString_, v42);
        sub_20A42CF04();
        *(void *)&long long v82 = v43;
        uint64_t inited = swift_initStackObject();
        long long v81 = xmmword_20A8D3DC0;
        uint64_t v45 = (void **)MEMORY[0x263F81500];
        *(_OWORD *)(inited + 16) = xmmword_20A8D3DC0;
        uint64_t v46 = *v45;
        *(void *)(inited + 32) = *v45;
        uint64_t v47 = v38 + 2;
        uint64_t v48 = v38[5];
        uint64_t v49 = v38[6];
        __swift_project_boxed_opaque_existential_1(v47, v48);
        uint64_t v50 = *(void *)(v49 + 16);
        *(void *)&long long v80 = *(void *)(v50 + 184);
        id v51 = v46;
        uint64_t v52 = ((uint64_t (*)(uint64_t, uint64_t))v80)(v48, v50);
        *(void *)(inited + 64) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
        *(void *)(inited + 40) = v52;
        sub_20A4CF8B0(inited);
        type metadata accessor for Key(0);
        *(void *)&long long v80 = v53;
        sub_20A42D8C0((unint64_t *)&qword_26AC7F9F8, 255, type metadata accessor for Key);
        uint64_t v54 = (void *)sub_20A8CE170();
        swift_bridgeObjectRelease();
        objc_msgSend((id)v84, sel_addAttributes_range_, v54, 0, objc_msgSend((id)v84, sel_length));

        uint64_t v55 = swift_initStackObject();
        *(_OWORD *)(v55 + 16) = v81;
        uint64_t v56 = (void *)*MEMORY[0x263F814F0];
        *(void *)(v55 + 32) = *MEMORY[0x263F814F0];
        uint64_t v57 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
        id v58 = v56;
        uint64_t v59 = sub_20A8CEE20();
        *(void *)(v55 + 64) = v57;
        *(void *)(v55 + 40) = v59;
        sub_20A4CF8B0(v55);
        uint64_t v60 = (void *)sub_20A8CE170();
        swift_bridgeObjectRelease();
        uint64_t v61 = (void *)v84;
        objc_msgSend((id)v84, sel_addAttributes_range_, v60, 0, objc_msgSend((id)v84, sel_length));

        objc_msgSend(v61, sel_boundingRectWithSize_options_context_, 33, 0, v35, v37);
        CGFloat v63 = v62;
        CGFloat v65 = v64;
        CGFloat v67 = v66;
        CGFloat v69 = v68;

        sub_20A8C9710();
        CGFloat v71 = v70;
        v89.origin.x = v63;
        v89.origin.y = v65;
        v89.size.width = v67;
        v89.size.height = v69;
        CGFloat Width = CGRectGetWidth(v89);
        v90.origin.x = v63;
        v90.origin.y = v65;
        v90.size.width = v67;
        v90.size.height = v69;
        CGFloat Height = CGRectGetHeight(v90);
        sub_20A8C9720();
        uint64_t v75 = v74;
        v91.origin.y = 8.0;
        v91.origin.x = v71;
        v91.size.width = Width;
        v91.size.height = Height;
        CGRectGetMaxY(v91);
        MEMORY[0x270FA5388](v76);
        *((void *)&v80 - 8) = 0;
        *((void *)&v80 - 7) = 0;
        *((void *)&v80 - 6) = v75;
        *((void *)&v80 - 5) = v77;
        *((CGFloat *)&v80 - 4) = v71;
        *((void *)&v80 - 3) = 0x4020000000000000;
        unint64_t v78 = *(void *)&Width;
        CGFloat v79 = Height;
        sub_20A8C96A0();
        long long v84 = v85;
        long long v82 = v86;
        long long v81 = v87;
        long long v80 = v88;
        sub_20A42C3C4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrandingTitleViewLayoutOptions);
        uint64_t result = sub_20A42C3C4(v83, (uint64_t (*)(void))sub_20A42C764);
        long long v20 = v80;
        long long v19 = v81;
        long long v18 = v82;
        long long v15 = v84;
      }
      else
      {
        uint64_t result = sub_20A42C3C4(v23, (uint64_t (*)(void))sub_20A42C764);
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        long long v18 = 0uLL;
        long long v19 = 0uLL;
        long long v20 = 0uLL;
        long long v15 = 0uLL;
      }
      break;
    case 2:
      uint64_t v21 = type metadata accessor for StockFeedSectionDescriptor;
      goto LABEL_4;
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      break;
    default:
      uint64_t v21 = type metadata accessor for StockFeedMastheadModel;
LABEL_4:
      uint64_t result = sub_20A42C3C4((uint64_t)v13, (uint64_t (*)(void))v21);
      long long v15 = 0uLL;
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      long long v18 = 0uLL;
      long long v19 = 0uLL;
      long long v20 = 0uLL;
      break;
  }
  *(void *)a4 = v16;
  *(void *)(a4 + 8) = v17;
  *(void *)(a4 + 16) = 0;
  *(_OWORD *)(a4 + 24) = v15;
  *(_OWORD *)(a4 + 40) = v18;
  *(_OWORD *)(a4 + 56) = v19;
  *(_OWORD *)(a4 + 72) = v20;
  return result;
}

uint64_t sub_20A4217F4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v89 = a3;
  long long v81 = a2;
  uint64_t v85 = a1;
  uint64_t v91 = a5;
  uint64_t v107 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x270FA5388](v107);
  v104 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_20A8CCE00();
  uint64_t v108 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  uint64_t v102 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C698();
  uint64_t v101 = v8;
  uint64_t v106 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v105 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_20A8CAE30();
  uint64_t v90 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v93 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x270FA5388](v92);
  uint64_t v99 = (uint64_t)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42CB84(0);
  uint64_t v88 = v12;
  uint64_t v87 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v98 = (uint64_t)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42DA7C(0, &qword_26AC69310, MEMORY[0x263F7D1B0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v14 - 8);
  long long v84 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  CGFloat v79 = (char *)&v74 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v77 = (char *)&v74 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v76 = (char *)&v74 - v21;
  uint64_t v97 = sub_20A8CC650();
  uint64_t v96 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  long long v86 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  unint64_t v95 = (char *)&v74 - v24;
  sub_20A42CBB8(0);
  MEMORY[0x270FA5388](v25 - 8);
  id v27 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_20A8CC470();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v74 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42CBEC(0);
  MEMORY[0x270FA5388](v32 - 8);
  double v34 = (char *)&v74 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42CC20(0);
  MEMORY[0x270FA5388](v35 - 8);
  double v37 = (char *)&v74 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_20A8CD300();
  uint64_t v75 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  id v40 = (char *)&v74 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8CC450();
  uint64_t v41 = sub_20A8CC500();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v37, 1, 1, v41);
  id v42 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
  uint64_t v83 = v28;
  uint64_t v80 = v29 + 16;
  unint64_t v78 = v42;
  v42(v31, a4, v28);
  long long v82 = v31;
  sub_20A8CCBC0();
  uint64_t v43 = sub_20A8CCBD0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v34, 0, 1, v43);
  uint64_t v44 = sub_20A8CC910();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v27, 1, 1, v44);
  sub_20A42C050(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  sub_20A42D8C0(&qword_26AC76F90, 255, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
  sub_20A42D8C0(&qword_26AC6D868, 255, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
  uint64_t v45 = sub_20A8C88E0();
  sub_20A42C3C4((uint64_t)v27, (uint64_t (*)(void))sub_20A42CBB8);
  sub_20A42C3C4((uint64_t)v34, (uint64_t (*)(void))sub_20A42CBEC);
  sub_20A42C3C4((uint64_t)v37, (uint64_t (*)(void))sub_20A42CC20);
  uint64_t v46 = *(void (**)(char *, uint64_t))(v75 + 8);
  v46(v40, v38);
  uint64_t v85 = a4;
  sub_20A8CC450();
  uint64_t v75 = v45;
  uint64_t v94 = sub_20A8CDA20();
  uint64_t v47 = v40;
  uint64_t v48 = v81;
  v46(v47, v38);
  sub_20A42CC54((uint64_t)v48, (uint64_t)v110);
  if (v111) {
    CGRectGetMaxY(v112);
  }
  v109[3] = sub_20A8CD8A0();
  v109[4] = MEMORY[0x263F59D30];
  v109[0] = v94;
  uint64_t v49 = sub_20A8C4410();
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56);
  v50(v76, 1, 1, v49);
  v50(v77, 1, 1, v49);
  v50(v79, 1, 1, v49);
  v50(v84, 1, 1, v49);
  sub_20A8C4400();
  swift_allocObject();
  swift_retain();
  sub_20A8C43F0();
  id v51 = v95;
  sub_20A8CC6A0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_20A42C3C4((uint64_t)v109, (uint64_t (*)(void))sub_20A42CCB0);
  uint64_t v52 = (uint64_t)v82;
  v78(v82, v85, v83);
  uint64_t v53 = (uint64_t)v86;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v86, v51, v97);
  uint64_t v54 = v98;
  sub_20A42A274(v52, v53, v98);
  sub_20A42CF84(0, (unint64_t *)&qword_26AC7B2E8, sub_20A42CD3C);
  uint64_t v56 = v99;
  uint64_t v57 = v99 + *(int *)(v55 + 48);
  sub_20A42C630(v54, v99, (uint64_t (*)(void))sub_20A42CB84);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v56, 0, 1, v88);
  sub_20A42CC54((uint64_t)v48, v57);
  swift_storeEnumTagMultiPayload();
  uint64_t v58 = *MEMORY[0x263F7DEB8];
  uint64_t v59 = sub_20A8CAE10();
  uint64_t v60 = v93;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 104))(v93, v58, v59);
  (*(void (**)(char *, void, uint64_t))(v90 + 104))(v60, *MEMORY[0x263F7DEC0], v100);
  sub_20A42CD70(v48, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_20A42CDCC);
  uint64_t v61 = sub_20A8CC610();
  int64_t v62 = *(void *)(v61 + 16);
  if (v62)
  {
    v109[0] = MEMORY[0x263F8EE78];
    sub_20A68C244(0, v62, 0);
    CGFloat v63 = *(void (**)(char *, unint64_t, uint64_t))(v108 + 16);
    unint64_t v64 = (*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
    uint64_t v90 = v61;
    unint64_t v65 = v61 + v64;
    uint64_t v100 = *(void *)(v108 + 72);
    v108 += 16;
    double v66 = (void (**)(char *, uint64_t))(v108 - 8);
    CGFloat v67 = v102;
    do
    {
      uint64_t v68 = v103;
      v63(v67, v65, v103);
      v63(v104, (unint64_t)v67, v68);
      swift_storeEnumTagMultiPayload();
      sub_20A42D8C0(&qword_26AC72240, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
      sub_20A8C9140();
      (*v66)(v67, v68);
      uint64_t v69 = v109[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C244(0, *(void *)(v69 + 16) + 1, 1);
        uint64_t v69 = v109[0];
      }
      unint64_t v71 = *(void *)(v69 + 16);
      unint64_t v70 = *(void *)(v69 + 24);
      uint64_t v72 = v105;
      if (v71 >= v70 >> 1)
      {
        sub_20A68C244(v70 > 1, v71 + 1, 1);
        uint64_t v69 = v109[0];
      }
      *(void *)(v69 + 16) = v71 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v106 + 32))(v69+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(void *)(v106 + 72) * v71, v72, v101);
      v109[0] = v69;
      v65 += v100;
      --v62;
    }
    while (v62);
  }
  swift_bridgeObjectRelease();
  sub_20A42D8C0(&qword_26AC7B3E8, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutSectionDescriptor);
  sub_20A42D8C0(&qword_26AC72248, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
  sub_20A8C9860();
  swift_release();
  sub_20A42C3C4(v98, (uint64_t (*)(void))sub_20A42CB84);
  return (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v95, v97);
}

uint64_t sub_20A4227DC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v113 = a3;
  uint64_t v110 = (void *)a2;
  uint64_t v111 = a4;
  uint64_t v124 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x270FA5388](v124);
  uint64_t v119 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_20A8CCE00();
  uint64_t v122 = *(void *)(v118 - 8);
  MEMORY[0x270FA5388](v118);
  uint64_t v117 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C698();
  uint64_t v116 = v7;
  uint64_t v121 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v120 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_20A8CC650();
  uint64_t v100 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  uint64_t v105 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42CBEC(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v99 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8CC5C0();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v98 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_20A8CCF10();
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v94 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C4A4();
  uint64_t v106 = v15;
  uint64_t v123 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v92 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v93 = (char *)&v90 - v18;
  uint64_t v91 = sub_20A8CD150();
  uint64_t v90 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v97 = (char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_20A8CAE30();
  uint64_t v107 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108);
  v104 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v90 - v22;
  uint64_t v112 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x270FA5388](v112);
  uint64_t v103 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v115 = (void (**)(void))((char *)&v90 - v26);
  uint64_t v114 = sub_20A8C4430();
  uint64_t v102 = *(void *)(v114 - 8);
  MEMORY[0x270FA5388](v114);
  uint64_t v28 = (char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_20A8C4390();
  uint64_t v30 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v90 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v90 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C050(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  sub_20A8C8820();
  if (swift_getEnumCaseMultiPayload() != 1) {
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
  BOOL v36 = v35[16] == 1;
  uint64_t v109 = v35;
  if (v36)
  {
    sub_20A8CC670();
    sub_20A8C4380();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
    int v37 = (*(uint64_t (**)(char *, uint64_t))(v102 + 88))(v28, v114);
    if (v37 != *MEMORY[0x263F7D1C0])
    {
      if (v37 == *MEMORY[0x263F7D1C8])
      {
        uint64_t v38 = v23;
LABEL_28:
        sub_20A42CA38((unint64_t *)&unk_26AC69F00, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
        uint64_t v77 = sub_20A8CE860();
        MEMORY[0x270FA5388](v77);
        unint64_t i = a1;
        unint64_t v78 = sub_20A449854((void (*)(uint64_t *__return_ptr, uint64_t *))sub_20A42CEB0, (uint64_t)v87, v77);
        swift_bridgeObjectRelease();
        swift_retain();
        uint64_t v79 = sub_20A42B30C(v78);
        swift_bridgeObjectRelease();
        swift_release();
        sub_20A42ABC0(v79);
        swift_bridgeObjectRelease();
        sub_20A42CF84(0, (unint64_t *)&qword_26AC7B2E8, sub_20A42CD3C);
        long long v81 = v115;
        uint64_t v82 = (uint64_t)v115 + *(int *)(v80 + 48);
        sub_20A42CB84(0);
        (*(void (**)(void (**)(void), uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v81, 1, 1, v83);
        long long v84 = v110;
        sub_20A42CC54((uint64_t)v110, v82);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, void, uint64_t))(v107 + 104))(v38, *MEMORY[0x263F7DED8], v108);
        sub_20A42CD70(v84, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_20A42CDCC);
        sub_20A42D8C0(&qword_26AC7B3E8, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutSectionDescriptor);
        sub_20A42D8C0(&qword_26AC72248, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
        sub_20A8C9860();
        goto LABEL_29;
      }
      if (v37 != *MEMORY[0x263F7D1D0]) {
        goto LABEL_33;
      }
    }
    uint64_t v38 = v23;
    goto LABEL_28;
  }
  sub_20A42CA38((unint64_t *)&unk_26AC69F00, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  unint64_t v39 = a1;
  uint64_t v40 = sub_20A8CE880();
  if (v40)
  {
    uint64_t v41 = v40;
    uint64_t v128 = MEMORY[0x263F8EE78];
    sub_20A68C2B4(0, v40 & ~(v40 >> 63), 0);
    uint64_t v42 = v128;
    sub_20A8CE840();
    uint64_t v43 = v106;
    if ((v41 & 0x8000000000000000) == 0)
    {
      uint64_t v114 = v123 + 32;
      uint64_t v115 = (void (**)(void))(v123 + 16);
      uint64_t v44 = v92;
      do
      {
        uint64_t v45 = (void (*)(long long *, void))sub_20A8CE8C0();
        (*v115)(v44);
        v45(&v125, 0);
        uint64_t v128 = v42;
        unint64_t v46 = v39;
        unint64_t v48 = *(void *)(v42 + 16);
        unint64_t v47 = *(void *)(v42 + 24);
        if (v48 >= v47 >> 1)
        {
          sub_20A68C2B4(v47 > 1, v48 + 1, 1);
          uint64_t v42 = v128;
        }
        *(void *)(v42 + 16) = v48 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v123 + 32))(v42+ ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80))+ *(void *)(v123 + 72) * v48, v44, v43);
        sub_20A8CE8B0();
        --v41;
        unint64_t v39 = v46;
      }
      while (v41);
      goto LABEL_15;
    }
    __break(1u);
LABEL_31:
    int v89 = 0;
    for (unint64_t i = 413; ; unint64_t i = 359)
    {
      sub_20A8CF520();
      __break(1u);
LABEL_33:
      int v89 = 0;
    }
  }
  uint64_t v43 = v106;
LABEL_15:
  uint64_t v49 = v96;
  uint64_t v50 = sub_20A8C8830();
  uint64_t v114 = v51;
  uint64_t v115 = (void (**)(void))v50;
  sub_20A8C8830();
  uint64_t v102 = v52;
  uint64_t v53 = v93;
  sub_20A8C8930();
  sub_20A42D8C0(&qword_26AC6D868, 255, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
  uint64_t v54 = v94;
  sub_20A8C8340();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v53, v43);
  char v55 = sub_20A8CCEF0();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v54, v49);
  uint64_t v56 = v110;
  if (v55)
  {
    (*(void (**)(char *, void, uint64_t))(v90 + 104))(v97, *MEMORY[0x263F59B38], v91);
  }
  else
  {
    sub_20A42D8C0(&qword_26AC76F90, 255, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    sub_20A8C88C0();
  }
  sub_20A42D8C0(&qword_26AC76F90, 255, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
  sub_20A8C88D0();
  uint64_t v57 = sub_20A8CCBD0();
  long long v125 = 0u;
  long long v126 = 0u;
  uint64_t v127 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v99, 1, 1, v57);
  sub_20A8CC5B0();
  swift_allocObject();
  unint64_t i = sub_20A42CE0C();
  v87[0] = 0;
  v87[1] = v106;
  uint64_t v58 = MEMORY[0x263F8EE78];
  uint64_t v59 = sub_20A8CC5A0();
  uint64_t v128 = v59;
  sub_20A42D8C0((unint64_t *)&unk_26AC6AF70, 255, MEMORY[0x263F597F8]);
  long long v125 = 0u;
  long long v126 = 0u;
  uint64_t v127 = 0;
  sub_20A8CC690();
  sub_20A42C3C4((uint64_t)&v125, (uint64_t (*)(void))sub_20A42CCB0);
  sub_20A42CF84(0, (unint64_t *)&qword_26AC7B2E8, sub_20A42CD3C);
  uint64_t v61 = v103;
  uint64_t v62 = (uint64_t)&v103[*(int *)(v60 + 48)];
  sub_20A42CB84(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v61, 1, 1, v63);
  sub_20A42CC54((uint64_t)v56, v62);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t))(v107 + 104))(v104, *MEMORY[0x263F7DED8], v108);
  sub_20A42CD70(v56, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_20A42CDCC);
  uint64_t v64 = sub_20A8CC610();
  int64_t v65 = *(void *)(v64 + 16);
  if (v65)
  {
    uint64_t v115 = (void (**)(void))v59;
    *(void *)&long long v125 = v58;
    sub_20A68C244(0, v65, 0);
    double v66 = *(void (**)(char *, uint64_t, uint64_t))(v122 + 16);
    uint64_t v67 = *(unsigned __int8 *)(v122 + 80);
    uint64_t v114 = v64;
    uint64_t v68 = v64 + ((v67 + 32) & ~v67);
    uint64_t v69 = *(void *)(v122 + 72);
    v122 += 16;
    uint64_t v123 = v69;
    unint64_t v70 = (void (**)(char *, uint64_t))(v122 - 8);
    unint64_t v71 = v117;
    do
    {
      uint64_t v72 = v118;
      v66(v71, v68, v118);
      v66(v119, (uint64_t)v71, v72);
      swift_storeEnumTagMultiPayload();
      sub_20A42D8C0(&qword_26AC72240, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
      sub_20A8C9140();
      (*v70)(v71, v72);
      uint64_t v73 = v125;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C244(0, *(void *)(v73 + 16) + 1, 1);
        uint64_t v73 = v125;
      }
      unint64_t v75 = *(void *)(v73 + 16);
      unint64_t v74 = *(void *)(v73 + 24);
      uint64_t v76 = v120;
      if (v75 >= v74 >> 1)
      {
        sub_20A68C244(v74 > 1, v75 + 1, 1);
        uint64_t v73 = v125;
      }
      *(void *)(v73 + 16) = v75 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v121 + 32))(v73+ ((*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80))+ *(void *)(v121 + 72) * v75, v76, v116);
      *(void *)&long long v125 = v73;
      v68 += v123;
      --v65;
    }
    while (v65);
  }
  swift_bridgeObjectRelease();
  sub_20A42D8C0(&qword_26AC7B3E8, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutSectionDescriptor);
  sub_20A42D8C0(&qword_26AC72248, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
  sub_20A8C9860();
  swift_release();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v105, v101);
LABEL_29:
  sub_20A42C980();
  return sub_20A42C3C4((uint64_t)&v109[*(int *)(v85 + 64)], (uint64_t (*)(void))sub_20A42C764);
}

uint64_t sub_20A423BCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a1;
  v37[5] = a2;
  uint64_t v46 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x270FA5388](v46);
  uint64_t v44 = (char *)v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_20A8CCE00();
  uint64_t v3 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C698();
  uint64_t v43 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v45 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8CC650();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8CAE30();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37[3] = v19;
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = *MEMORY[0x263F7DED8];
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v37[4] = v15;
  v21(v15, v20, v12);
  sub_20A42C050(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  sub_20A42D0E4();
  memset(v47, 0, sizeof(v47));
  uint64_t v48 = 0;
  sub_20A8CC690();
  sub_20A42C3C4((uint64_t)v47, (uint64_t (*)(void))sub_20A42CCB0);
  uint64_t v22 = sub_20A8CC610();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  int64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    v37[2] = v18;
    *(void *)&v47[0] = MEMORY[0x263F8EE78];
    sub_20A68C244(0, v23, 0);
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    uint64_t v24 = v3 + 16;
    uint64_t v26 = *(unsigned __int8 *)(v24 + 64);
    v37[1] = v22;
    uint64_t v27 = v22 + ((v26 + 32) & ~v26);
    uint64_t v38 = *(void *)(v24 + 56);
    unint64_t v39 = v25;
    uint64_t v28 = (void (**)(char *, uint64_t))(v24 - 8);
    v37[6] = v6 + 32;
    uint64_t v40 = v24;
    uint64_t v29 = v41;
    do
    {
      uint64_t v30 = v6;
      uint64_t v31 = v42;
      uint64_t v32 = v39;
      v39(v29, (char *)v27, v42);
      v32(v44, v29, v31);
      swift_storeEnumTagMultiPayload();
      sub_20A42D8C0(&qword_26AC72240, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
      sub_20A8C9140();
      (*v28)(v29, v31);
      uint64_t v33 = *(void *)&v47[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C244(0, *(void *)(v33 + 16) + 1, 1);
        uint64_t v33 = *(void *)&v47[0];
      }
      unint64_t v35 = *(void *)(v33 + 16);
      unint64_t v34 = *(void *)(v33 + 24);
      uint64_t v6 = v30;
      if (v35 >= v34 >> 1)
      {
        sub_20A68C244(v34 > 1, v35 + 1, 1);
        uint64_t v33 = *(void *)&v47[0];
      }
      *(void *)(v33 + 16) = v35 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v33+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v35, v45, v43);
      *(void *)&v47[0] = v33;
      v27 += v38;
      --v23;
    }
    while (v23);
  }
  swift_bridgeObjectRelease();
  sub_20A42D8C0(&qword_26AC7B3E8, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutSectionDescriptor);
  sub_20A42D8C0(&qword_26AC72248, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
  return sub_20A8C9860();
}

uint64_t sub_20A4241F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a1;
  v37[5] = a2;
  uint64_t v46 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x270FA5388](v46);
  uint64_t v44 = (char *)v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_20A8CCE00();
  uint64_t v3 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C698();
  uint64_t v43 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v45 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8CC650();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8CAE30();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37[3] = v19;
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = *MEMORY[0x263F7DED8];
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v37[4] = v15;
  v21(v15, v20, v12);
  sub_20A42C050(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  sub_20A42D0E4();
  memset(v47, 0, sizeof(v47));
  uint64_t v48 = 0;
  sub_20A8CC690();
  sub_20A42C3C4((uint64_t)v47, (uint64_t (*)(void))sub_20A42CCB0);
  uint64_t v22 = sub_20A8CC610();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  int64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    v37[2] = v18;
    *(void *)&v47[0] = MEMORY[0x263F8EE78];
    sub_20A68C244(0, v23, 0);
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    uint64_t v24 = v3 + 16;
    uint64_t v26 = *(unsigned __int8 *)(v24 + 64);
    v37[1] = v22;
    uint64_t v27 = v22 + ((v26 + 32) & ~v26);
    uint64_t v38 = *(void *)(v24 + 56);
    unint64_t v39 = v25;
    uint64_t v28 = (void (**)(char *, uint64_t))(v24 - 8);
    v37[6] = v6 + 32;
    uint64_t v40 = v24;
    uint64_t v29 = v41;
    do
    {
      uint64_t v30 = v6;
      uint64_t v31 = v42;
      uint64_t v32 = v39;
      v39(v29, (char *)v27, v42);
      v32(v44, v29, v31);
      swift_storeEnumTagMultiPayload();
      sub_20A42D8C0(&qword_26AC72240, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
      sub_20A8C9140();
      (*v28)(v29, v31);
      uint64_t v33 = *(void *)&v47[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C244(0, *(void *)(v33 + 16) + 1, 1);
        uint64_t v33 = *(void *)&v47[0];
      }
      unint64_t v35 = *(void *)(v33 + 16);
      unint64_t v34 = *(void *)(v33 + 24);
      uint64_t v6 = v30;
      if (v35 >= v34 >> 1)
      {
        sub_20A68C244(v34 > 1, v35 + 1, 1);
        uint64_t v33 = *(void *)&v47[0];
      }
      *(void *)(v33 + 16) = v35 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v33+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v35, v45, v43);
      *(void *)&v47[0] = v33;
      v27 += v38;
      --v23;
    }
    while (v23);
  }
  swift_bridgeObjectRelease();
  sub_20A42D8C0(&qword_26AC7B3E8, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutSectionDescriptor);
  sub_20A42D8C0(&qword_26AC72248, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
  return sub_20A8C9860();
}

unint64_t sub_20A424824(void (*a1)(char *), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v62 = a1;
  uint64_t v63 = a2;
  sub_20A42C730(0);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v61 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42BED4();
  uint64_t v64 = v5;
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v6 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v56 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v46 = (char *)&v44 - v8;
  sub_20A42C050(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  uint64_t v10 = v9;
  uint64_t v52 = *(void (***)(char *, uint64_t))(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v60 = (char *)&v44 - v14;
  uint64_t v15 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
  sub_20A42C050(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v44 - v19;
  sub_20A42C388(0);
  uint64_t v22 = v21 - 8;
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = (void (**)(char *, uint64_t))v18;
  uint64_t v57 = *(void (**)(char *, unint64_t, uint64_t))(v18 + 16);
  uint64_t v58 = v18 + 16;
  v57(v20, v66, v17);
  sub_20A42CA38((unint64_t *)&unk_26AC6ACA0, (unint64_t *)&qword_26AC6ACC0, v15);
  uint64_t v59 = v20;
  sub_20A8CE4B0();
  uint64_t v25 = &v24[*(int *)(v22 + 44)];
  sub_20A42CA38((unint64_t *)&unk_26AC6ACB0, (unint64_t *)&qword_26AC6ACC0, v15);
  uint64_t v26 = *(void *)v25;
  uint64_t v48 = v24;
  sub_20A8CE8A0();
  if (v26 == v65[0])
  {
    unint64_t v66 = MEMORY[0x263F8EE78];
    uint64_t v27 = (uint64_t)v48;
LABEL_3:
    sub_20A42C3C4(v27, (uint64_t (*)(void))sub_20A42C388);
  }
  else
  {
    uint64_t v28 = v52;
    ++v54;
    char v55 = (void (**)(char *))(v52 + 2);
    ++v52;
    uint64_t v53 = (void (**)(char *, char *, uint64_t))(v28 + 4);
    uint64_t v50 = (void (**)(char *, uint64_t, uint64_t))(v47 + 32);
    uint64_t v51 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
    unint64_t v66 = MEMORY[0x263F8EE78];
    uint64_t v27 = (uint64_t)v48;
    uint64_t v45 = v13;
    while (1)
    {
      uint64_t v30 = (void (*)(uint64_t *, void))sub_20A8CE8C0();
      uint64_t v31 = v60;
      (*v55)(v60);
      v30(v65, 0);
      uint64_t v32 = v59;
      v57(v59, v27, v17);
      sub_20A8CE8B0();
      (*v54)(v32, v17);
      (*v53)(v13, v31, v10);
      uint64_t v33 = (uint64_t)v61;
      v62(v13);
      if (v3) {
        break;
      }
      (*v52)(v13, v10);
      uint64_t v34 = v64;
      if ((*v51)(v33, 1, v64) == 1)
      {
        sub_20A42C3C4(v33, (uint64_t (*)(void))sub_20A42C730);
      }
      else
      {
        uint64_t v49 = 0;
        uint64_t v35 = v10;
        BOOL v36 = *v50;
        int v37 = v46;
        (*v50)(v46, v33, v34);
        v36(v56, (uint64_t)v37, v34);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v66 = sub_20A46D41C(0, *(void *)(v66 + 16) + 1, 1, v66);
        }
        unint64_t v39 = *(void *)(v66 + 16);
        unint64_t v38 = *(void *)(v66 + 24);
        uint64_t v40 = v47;
        uint64_t v10 = v35;
        if (v39 >= v38 >> 1)
        {
          uint64_t v42 = sub_20A46D41C(v38 > 1, v39 + 1, 1, v66);
          uint64_t v40 = v47;
          unint64_t v66 = v42;
        }
        unint64_t v41 = v66;
        *(void *)(v66 + 16) = v39 + 1;
        uint64_t v3 = v49;
        v36((char *)(v41+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v39), (uint64_t)v56, v64);
        uint64_t v13 = v45;
        uint64_t v27 = (uint64_t)v48;
      }
      uint64_t v29 = *(void *)v25;
      sub_20A8CE8A0();
      if (v29 == v65[0]) {
        goto LABEL_3;
      }
    }
    (*v52)(v13, v10);
    sub_20A42C3C4(v27, (uint64_t (*)(void))sub_20A42C388);
    swift_bridgeObjectRelease();
  }
  return v66;
}

unint64_t sub_20A424EF8(void (*a1)(char *), uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v62 = a1;
  uint64_t v63 = a2;
  sub_20A42D20C(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v61 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D240();
  uint64_t v65 = v7;
  uint64_t v48 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v56 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v47 = (char *)&v45 - v10;
  sub_20A42D350();
  uint64_t v12 = v11;
  unint64_t v67 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v60 = (char *)&v45 - v16;
  sub_20A42D460();
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D51C();
  uint64_t v23 = v22 - 8;
  double v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = (void (**)(char *, uint64_t))v19;
  uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t, double))(v19 + 16);
  uint64_t v58 = v19 + 16;
  v57(v21, v2, v18, v24);
  sub_20A42D8C0((unint64_t *)&unk_26AC6ACD0, 255, (void (*)(uint64_t))sub_20A42D460);
  uint64_t v59 = v21;
  sub_20A8CE4B0();
  uint64_t v27 = &v26[*(int *)(v23 + 44)];
  sub_20A42D8C0((unint64_t *)&unk_26AC6ACE0, 255, (void (*)(uint64_t))sub_20A42D460);
  uint64_t v28 = *(void *)v27;
  uint64_t v64 = v26;
  sub_20A8CE8A0();
  if (v28 == v66[0])
  {
    unint64_t v67 = MEMORY[0x263F8EE78];
    uint64_t v29 = (uint64_t)v64;
LABEL_3:
    sub_20A42C3C4(v29, (uint64_t (*)(void))sub_20A42D51C);
  }
  else
  {
    ++v54;
    char v55 = (void (**)(char *))(v67 + 16);
    uint64_t v52 = (void (**)(char *, uint64_t))(v67 + 8);
    uint64_t v53 = (void (**)(char *, char *, uint64_t))(v67 + 32);
    uint64_t v50 = (void (**)(char *, uint64_t, uint64_t))(v48 + 32);
    uint64_t v51 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
    unint64_t v67 = MEMORY[0x263F8EE78];
    uint64_t v29 = (uint64_t)v64;
    uint64_t v46 = v14;
    while (1)
    {
      uint64_t v31 = (void (*)(uint64_t *, void))sub_20A8CE8C0();
      uint64_t v32 = v60;
      (*v55)(v60);
      v31(v66, 0);
      uint64_t v33 = v59;
      ((void (*)(char *, uint64_t, uint64_t))v57)(v59, v29, v18);
      sub_20A8CE8B0();
      (*v54)(v33, v18);
      (*v53)(v14, v32, v12);
      uint64_t v34 = (uint64_t)v61;
      v62(v14);
      if (v4) {
        break;
      }
      (*v52)(v14, v12);
      uint64_t v35 = v65;
      if ((*v51)(v34, 1, v65) == 1)
      {
        sub_20A42C3C4(v34, (uint64_t (*)(void))sub_20A42D20C);
      }
      else
      {
        uint64_t v49 = 0;
        uint64_t v36 = v12;
        int v37 = *v50;
        unint64_t v38 = v47;
        (*v50)(v47, v34, v35);
        v37(v56, (uint64_t)v38, v35);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v67 = sub_20A46DE74(0, *(void *)(v67 + 16) + 1, 1, v67);
        }
        unint64_t v40 = *(void *)(v67 + 16);
        unint64_t v39 = *(void *)(v67 + 24);
        uint64_t v41 = v48;
        uint64_t v12 = v36;
        if (v40 >= v39 >> 1)
        {
          uint64_t v43 = sub_20A46DE74(v39 > 1, v40 + 1, 1, v67);
          uint64_t v41 = v48;
          unint64_t v67 = v43;
        }
        uint64_t v14 = v46;
        unint64_t v42 = v67;
        *(void *)(v67 + 16) = v40 + 1;
        v37((char *)(v42+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v40), (uint64_t)v56, v65);
        uint64_t v4 = v49;
      }
      uint64_t v30 = *(void *)v27;
      uint64_t v29 = (uint64_t)v64;
      sub_20A8CE8A0();
      if (v30 == v66[0]) {
        goto LABEL_3;
      }
    }
    (*v52)(v14, v12);
    sub_20A42C3C4((uint64_t)v64, (uint64_t (*)(void))sub_20A42D51C);
    swift_bridgeObjectRelease();
  }
  return v67;
}

unint64_t sub_20A42559C(void (*a1)(char *), uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v62 = a1;
  uint64_t v63 = a2;
  sub_20A42D5B4(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v61 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D5E8();
  uint64_t v65 = v7;
  uint64_t v48 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v56 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v47 = (char *)&v45 - v10;
  sub_20A42D680();
  uint64_t v12 = v11;
  unint64_t v67 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v60 = (char *)&v45 - v16;
  sub_20A42D718();
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D828();
  uint64_t v23 = v22 - 8;
  double v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = (void (**)(char *, uint64_t))v19;
  uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t, double))(v19 + 16);
  uint64_t v58 = v19 + 16;
  v57(v21, v2, v18, v24);
  sub_20A42D8C0(&qword_26763AB78, 255, (void (*)(uint64_t))sub_20A42D718);
  uint64_t v59 = v21;
  sub_20A8CE4B0();
  uint64_t v27 = &v26[*(int *)(v23 + 44)];
  sub_20A42D8C0(&qword_26763AB70, 255, (void (*)(uint64_t))sub_20A42D718);
  uint64_t v28 = *(void *)v27;
  uint64_t v64 = v26;
  sub_20A8CE8A0();
  if (v28 == v66[0])
  {
    unint64_t v67 = MEMORY[0x263F8EE78];
    uint64_t v29 = (uint64_t)v64;
LABEL_3:
    sub_20A42C3C4(v29, (uint64_t (*)(void))sub_20A42D828);
  }
  else
  {
    ++v54;
    char v55 = (void (**)(char *))(v67 + 16);
    uint64_t v52 = (void (**)(char *, uint64_t))(v67 + 8);
    uint64_t v53 = (void (**)(char *, char *, uint64_t))(v67 + 32);
    uint64_t v50 = (void (**)(char *, uint64_t, uint64_t))(v48 + 32);
    uint64_t v51 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
    unint64_t v67 = MEMORY[0x263F8EE78];
    uint64_t v29 = (uint64_t)v64;
    uint64_t v46 = v14;
    while (1)
    {
      uint64_t v31 = (void (*)(uint64_t *, void))sub_20A8CE8C0();
      uint64_t v32 = v60;
      (*v55)(v60);
      v31(v66, 0);
      uint64_t v33 = v59;
      ((void (*)(char *, uint64_t, uint64_t))v57)(v59, v29, v18);
      sub_20A8CE8B0();
      (*v54)(v33, v18);
      (*v53)(v14, v32, v12);
      uint64_t v34 = (uint64_t)v61;
      v62(v14);
      if (v4) {
        break;
      }
      (*v52)(v14, v12);
      uint64_t v35 = v65;
      if ((*v51)(v34, 1, v65) == 1)
      {
        sub_20A42C3C4(v34, (uint64_t (*)(void))sub_20A42D5B4);
      }
      else
      {
        uint64_t v49 = 0;
        uint64_t v36 = v12;
        int v37 = *v50;
        unint64_t v38 = v47;
        (*v50)(v47, v34, v35);
        v37(v56, (uint64_t)v38, v35);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v67 = sub_20A46E034(0, *(void *)(v67 + 16) + 1, 1, v67);
        }
        unint64_t v40 = *(void *)(v67 + 16);
        unint64_t v39 = *(void *)(v67 + 24);
        uint64_t v41 = v48;
        uint64_t v12 = v36;
        if (v40 >= v39 >> 1)
        {
          uint64_t v43 = sub_20A46E034(v39 > 1, v40 + 1, 1, v67);
          uint64_t v41 = v48;
          unint64_t v67 = v43;
        }
        uint64_t v14 = v46;
        unint64_t v42 = v67;
        *(void *)(v67 + 16) = v40 + 1;
        v37((char *)(v42+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v40), (uint64_t)v56, v65);
        uint64_t v4 = v49;
      }
      uint64_t v30 = *(void *)v27;
      uint64_t v29 = (uint64_t)v64;
      sub_20A8CE8A0();
      if (v30 == v66[0]) {
        goto LABEL_3;
      }
    }
    (*v52)(v14, v12);
    sub_20A42C3C4((uint64_t)v64, (uint64_t (*)(void))sub_20A42D828);
    swift_bridgeObjectRelease();
  }
  return v67;
}

unint64_t sub_20A425C40(void (*a1)(char *), uint64_t a2)
{
  char v55 = a1;
  uint64_t v56 = a2;
  sub_20A42D9D4();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v54 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C050(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  uint64_t v6 = v5;
  uint64_t v44 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v49 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v43 = (char *)&v43 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v57 = (char *)&v43 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v53 = (char *)&v43 - v13;
  uint64_t v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
  sub_20A42C050(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v43 - v18;
  sub_20A42C388(0);
  uint64_t v21 = v20 - 8;
  double v22 = MEMORY[0x270FA5388](v20);
  double v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t, double))(v17 + 16);
  uint64_t v51 = v17 + 16;
  v50(v19, v2, v16, v22);
  sub_20A42CA38((unint64_t *)&unk_26AC6ACA0, (unint64_t *)&qword_26AC6ACC0, v14);
  uint64_t v52 = v19;
  sub_20A8CE4B0();
  uint64_t v25 = &v24[*(int *)(v21 + 44)];
  sub_20A42CA38((unint64_t *)&unk_26AC6ACB0, (unint64_t *)&qword_26AC6ACC0, v14);
  uint64_t v26 = *(void *)v25;
  uint64_t v58 = v24;
  sub_20A8CE8A0();
  if (v26 == v60[0])
  {
    unint64_t v59 = MEMORY[0x263F8EE78];
    uint64_t v27 = (uint64_t)v58;
LABEL_3:
    sub_20A42C3C4(v27, (uint64_t (*)(void))sub_20A42C388);
  }
  else
  {
    uint64_t v47 = (void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v48 = (void (**)(char *))(v44 + 16);
    uint64_t v28 = (void (**)(char *, char *, uint64_t))(v44 + 32);
    uint64_t v45 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
    uint64_t v46 = (void (**)(char *, uint64_t))(v44 + 8);
    unint64_t v59 = MEMORY[0x263F8EE78];
    uint64_t v29 = v57;
    uint64_t v27 = (uint64_t)v58;
    while (1)
    {
      uint64_t v31 = (void (*)(uint64_t *, void))sub_20A8CE8C0();
      uint64_t v32 = v53;
      (*v48)(v53);
      v31(v60, 0);
      uint64_t v33 = v52;
      ((void (*)(char *, uint64_t, uint64_t))v50)(v52, v27, v16);
      sub_20A8CE8B0();
      (*v47)(v33, v16);
      uint64_t v34 = *v28;
      (*v28)(v29, v32, v6);
      uint64_t v35 = (uint64_t)v54;
      uint64_t v36 = v61;
      v55(v29);
      if (v36) {
        break;
      }
      uint64_t v61 = 0;
      (*v46)(v29, v6);
      if ((*v45)(v35, 1, v6) == 1)
      {
        sub_20A42C3C4(v35, (uint64_t (*)(void))sub_20A42D9D4);
        uint64_t v27 = (uint64_t)v58;
      }
      else
      {
        int v37 = v43;
        v34(v43, (char *)v35, v6);
        v34(v49, v37, v6);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v27 = (uint64_t)v58;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v59 = sub_20A46E454(0, *(void *)(v59 + 16) + 1, 1, v59);
        }
        unint64_t v40 = *(void *)(v59 + 16);
        unint64_t v39 = *(void *)(v59 + 24);
        if (v40 >= v39 >> 1) {
          unint64_t v59 = sub_20A46E454(v39 > 1, v40 + 1, 1, v59);
        }
        unint64_t v41 = v59;
        *(void *)(v59 + 16) = v40 + 1;
        v34((char *)(v41+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v40), v49, v6);
      }
      uint64_t v30 = *(void *)v25;
      sub_20A8CE8A0();
      uint64_t v29 = v57;
      if (v30 == v60[0]) {
        goto LABEL_3;
      }
    }
    (*v46)(v29, v6);
    sub_20A42C3C4((uint64_t)v58, (uint64_t (*)(void))sub_20A42C388);
    swift_bridgeObjectRelease();
  }
  return v59;
}

unint64_t sub_20A426268(void (*a1)(char *), uint64_t a2)
{
  char v55 = a1;
  uint64_t v56 = a2;
  sub_20A42DA48(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v54 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C4A4();
  uint64_t v6 = v5;
  uint64_t v44 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v49 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v43 = (char *)&v43 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v57 = (char *)&v43 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v53 = (char *)&v43 - v13;
  uint64_t v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
  sub_20A42C050(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v43 - v18;
  sub_20A42C798();
  uint64_t v21 = v20 - 8;
  double v22 = MEMORY[0x270FA5388](v20);
  double v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t, double))(v17 + 16);
  uint64_t v51 = v17 + 16;
  v50(v19, v2, v16, v22);
  sub_20A42CA38(&qword_26AC812E8, (unint64_t *)&qword_26AC69F10, v14);
  uint64_t v52 = v19;
  sub_20A8CE4B0();
  uint64_t v25 = &v24[*(int *)(v21 + 44)];
  sub_20A42CA38((unint64_t *)&unk_26AC69F00, (unint64_t *)&qword_26AC69F10, v14);
  uint64_t v26 = *(void *)v25;
  uint64_t v58 = v24;
  sub_20A8CE8A0();
  if (v26 == v60[0])
  {
    unint64_t v59 = MEMORY[0x263F8EE78];
    uint64_t v27 = (uint64_t)v58;
LABEL_3:
    sub_20A42C3C4(v27, (uint64_t (*)(void))sub_20A42C798);
  }
  else
  {
    uint64_t v47 = (void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v48 = (void (**)(char *))(v44 + 16);
    uint64_t v28 = (void (**)(char *, char *, uint64_t))(v44 + 32);
    uint64_t v45 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
    uint64_t v46 = (void (**)(char *, uint64_t))(v44 + 8);
    unint64_t v59 = MEMORY[0x263F8EE78];
    uint64_t v29 = v57;
    uint64_t v27 = (uint64_t)v58;
    while (1)
    {
      uint64_t v31 = (void (*)(uint64_t *, void))sub_20A8CE8C0();
      uint64_t v32 = v53;
      (*v48)(v53);
      v31(v60, 0);
      uint64_t v33 = v52;
      ((void (*)(char *, uint64_t, uint64_t))v50)(v52, v27, v16);
      sub_20A8CE8B0();
      (*v47)(v33, v16);
      uint64_t v34 = *v28;
      (*v28)(v29, v32, v6);
      uint64_t v35 = (uint64_t)v54;
      uint64_t v36 = v61;
      v55(v29);
      if (v36) {
        break;
      }
      uint64_t v61 = 0;
      (*v46)(v29, v6);
      if ((*v45)(v35, 1, v6) == 1)
      {
        sub_20A42C3C4(v35, (uint64_t (*)(void))sub_20A42DA48);
        uint64_t v27 = (uint64_t)v58;
      }
      else
      {
        int v37 = v43;
        v34(v43, (char *)v35, v6);
        v34(v49, v37, v6);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v27 = (uint64_t)v58;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v59 = sub_20A46E49C(0, *(void *)(v59 + 16) + 1, 1, v59);
        }
        unint64_t v40 = *(void *)(v59 + 16);
        unint64_t v39 = *(void *)(v59 + 24);
        if (v40 >= v39 >> 1) {
          unint64_t v59 = sub_20A46E49C(v39 > 1, v40 + 1, 1, v59);
        }
        unint64_t v41 = v59;
        *(void *)(v59 + 16) = v40 + 1;
        v34((char *)(v41+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v40), v49, v6);
      }
      uint64_t v30 = *(void *)v25;
      sub_20A8CE8A0();
      uint64_t v29 = v57;
      if (v30 == v60[0]) {
        goto LABEL_3;
      }
    }
    (*v46)(v29, v6);
    sub_20A42C3C4((uint64_t)v58, (uint64_t (*)(void))sub_20A42C798);
    swift_bridgeObjectRelease();
  }
  return v59;
}

unint64_t sub_20A426874(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v35 = a2;
  sub_20A42D908(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D93C();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v34 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v31 = (char *)v26 - v14;
  uint64_t v15 = *(void *)(a3 + 16);
  if (!v15) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v16 = *(void *)(sub_20A8C3F00() - 8);
  uint64_t v17 = v11;
  uint64_t v18 = a3 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  uint64_t v19 = (unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  uint64_t v28 = v17;
  uint64_t v33 = (void (**)(char *, char *, uint64_t))(v17 + 32);
  uint64_t v32 = *(void *)(v16 + 72);
  v26[1] = a3;
  swift_bridgeObjectRetain();
  unint64_t v20 = MEMORY[0x263F8EE78];
  uint64_t v29 = v10;
  uint64_t v30 = a1;
  uint64_t v27 = v19;
  do
  {
    a1(v18);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v20;
    }
    if ((*v19)(v8, 1, v10) == 1)
    {
      sub_20A42C3C4((uint64_t)v8, (uint64_t (*)(void))sub_20A42D908);
    }
    else
    {
      uint64_t v21 = *v33;
      double v22 = v31;
      (*v33)(v31, v8, v10);
      v21(v34, v22, v10);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v20 = sub_20A46DDE4(0, *(void *)(v20 + 16) + 1, 1, v20);
      }
      unint64_t v24 = *(void *)(v20 + 16);
      unint64_t v23 = *(void *)(v20 + 24);
      if (v24 >= v23 >> 1) {
        unint64_t v20 = sub_20A46DDE4(v23 > 1, v24 + 1, 1, v20);
      }
      *(void *)(v20 + 16) = v24 + 1;
      uint64_t v10 = v29;
      v21((char *)(v20+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v24), v34, v29);
      a1 = v30;
      uint64_t v19 = v27;
    }
    v18 += v32;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_20A426BB8@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v46 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x270FA5388](v52);
  uint64_t v51 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C698();
  uint64_t v8 = v7;
  uint64_t v50 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42BED4();
  uint64_t v12 = v11;
  uint64_t v13 = sub_20A42D8C0(&qword_26763AB20, 255, (void (*)(uint64_t))sub_20A42BED4);
  uint64_t v14 = sub_20A8CE880();
  uint64_t v15 = MEMORY[0x263F8EE78];
  uint64_t v53 = v12;
  uint64_t v47 = a2;
  if (!v14) {
    goto LABEL_9;
  }
  uint64_t v16 = v14;
  uint64_t v55 = MEMORY[0x263F8EE78];
  sub_20A68C294(0, v14 & ~(v14 >> 63), 0);
  uint64_t result = sub_20A8CE840();
  if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v48 = (void (**)(char *, uint64_t))(v50 + 8);
    uint64_t v49 = (void (**)(char *))(v50 + 16);
    uint64_t v50 = a1;
    do
    {
      uint64_t v18 = v13;
      uint64_t v19 = (void (*)(char *, void))sub_20A8CE8C0();
      (*v49)(v10);
      v19(v54, 0);
      uint64_t v20 = (uint64_t)v51;
      sub_20A8C9150();
      sub_20A42D8C0(&qword_26AC72248, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
      sub_20A8CACE0();
      uint64_t v22 = v21;
      sub_20A42C3C4(v20, (uint64_t (*)(void))type metadata accessor for StockFeedLayoutModel);
      (*v48)(v10, v8);
      uint64_t v15 = v55;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C294(0, *(void *)(v15 + 16) + 1, 1);
        uint64_t v15 = v55;
      }
      unint64_t v24 = *(void *)(v15 + 16);
      unint64_t v23 = *(void *)(v15 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_20A68C294(v23 > 1, v24 + 1, 1);
        uint64_t v15 = v55;
      }
      *(void *)(v15 + 16) = v24 + 1;
      *(void *)(v15 + 8 * v24 + 32) = v22;
      uint64_t v13 = v18;
      sub_20A8CE8B0();
      --v16;
    }
    while (v16);
LABEL_9:
    uint64_t v25 = *(void *)(v15 + 16);
    double v26 = 0.0;
    double v27 = 0.0;
    if (!v25) {
      goto LABEL_17;
    }
    if (v25 == 1)
    {
      uint64_t v28 = 0;
    }
    else
    {
      uint64_t v28 = v25 & 0x7FFFFFFFFFFFFFFELL;
      uint64_t v29 = (double *)(v15 + 40);
      uint64_t v30 = v25 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        double v27 = v27 + *(v29 - 1) + *v29;
        v29 += 2;
        v30 -= 2;
      }
      while (v30);
      if (v25 == v28)
      {
LABEL_17:
        swift_bridgeObjectRelease();
        uint64_t v34 = (uint64_t)v46;
        sub_20A8C9850();
        uint64_t v35 = sub_20A62AD10();
        uint64_t result = sub_20A42C3C4(v34, type metadata accessor for StockFeedLayoutSectionDescriptor);
        uint64_t v36 = v47;
        if (!v35)
        {
LABEL_28:
          double *v36 = v27 + v26;
          return result;
        }
        uint64_t v37 = sub_20A4270B4(v35);
        swift_bridgeObjectRelease();
        uint64_t v38 = *(void *)(v37 + 16);
        if (v38)
        {
          if (v38 == 1)
          {
            uint64_t v39 = 0;
            double v26 = 0.0;
          }
          else
          {
            uint64_t v39 = v38 & 0x7FFFFFFFFFFFFFFELL;
            unint64_t v40 = (double *)(v37 + 40);
            double v26 = 0.0;
            uint64_t v41 = v38 & 0x7FFFFFFFFFFFFFFELL;
            do
            {
              double v26 = v26 + *(v40 - 1) + *v40;
              v40 += 2;
              v41 -= 2;
            }
            while (v41);
            if (v38 == v39) {
              goto LABEL_27;
            }
          }
          uint64_t v42 = v38 - v39;
          uint64_t v43 = (double *)(v37 + 8 * v39 + 32);
          do
          {
            double v44 = *v43++;
            double v26 = v26 + v44;
            --v42;
          }
          while (v42);
        }
        else
        {
          double v26 = 0.0;
        }
LABEL_27:
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_28;
      }
    }
    uint64_t v31 = v25 - v28;
    uint64_t v32 = (double *)(v15 + 8 * v28 + 32);
    do
    {
      double v33 = *v32++;
      double v27 = v27 + v33;
      --v31;
    }
    while (v31);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A4270B4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_20A68C294(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = (void *)(a1 + 32);
    do
    {
      __swift_project_boxed_opaque_existential_1(v4, v4[3]);
      sub_20A8CACA0();
      CGFloat Height = CGRectGetHeight(v10);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_20A68C294(0, *(void *)(v9 + 16) + 1, 1);
      }
      unint64_t v7 = *(void *)(v9 + 16);
      unint64_t v6 = *(void *)(v9 + 24);
      if (v7 >= v6 >> 1) {
        sub_20A68C294(v6 > 1, v7 + 1, 1);
      }
      *(void *)(v9 + 16) = v7 + 1;
      *(CGFloat *)(v9 + 8 * v7 + 32) = Height;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_20A4271D8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_20A42ABAC(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v7 = v6 - 1;
  sub_20A42BED4();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  unint64_t v11 = v5 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)) + v10 * a1;
  uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v9 + 32))(a2, v11, v8);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    uint64_t result = sub_20A8CF590();
    __break(1u);
    return result;
  }
  if (v10 > 0 || v11 >= v11 + v10 + v10 * (v7 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v10)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v5 + 16) = v7;
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_20A427334@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v32 = a4;
  uint64_t v5 = type metadata accessor for StockFeedPriceViewLayoutOptions();
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x270FA5388](v31);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StockFeedMastheadViewLayoutAttributes();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C4A4();
  sub_20A8C8330();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A42C5C8((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      __swift_project_boxed_opaque_existential_1(a1 + 7, a1[10]);
      uint64_t v21 = sub_20A8C9830();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v7, v30, v21);
      sub_20A8C0118((uint64_t)v15, (uint64_t)v7, (uint64_t)v33);
      sub_20A42C3C4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StockFeedPriceViewLayoutOptions);
      sub_20A42D074(0, &qword_26AC73F18, (void (*)(uint64_t))type metadata accessor for StockFeedMastheadModel);
      unint64_t v23 = &v9[*(int *)(v22 + 48)];
      sub_20A42C630((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      memcpy(v23, v33, 0x208uLL);
      swift_storeEnumTagMultiPayload();
      sub_20A42D8C0(&qword_26AC72240, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
      sub_20A8C9140();
      return sub_20A42C3C4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
    case 2u:
      goto LABEL_6;
    case 3u:
      sub_20A42C53C();
      uint64_t v26 = (uint64_t)&v18[*(int *)(v25 + 48)];
      sub_20A42C3C4((uint64_t)&v18[*(int *)(v25 + 64)], (uint64_t (*)(void))sub_20A42C43C);
      sub_20A42C3C4(v26, (uint64_t (*)(void))sub_20A42C470);
LABEL_6:
      uint64_t v27 = sub_20A8C3F00();
      goto LABEL_13;
    case 4u:
      uint64_t v28 = type metadata accessor for StockEarningsModel;
      goto LABEL_10;
    case 5u:
      swift_bridgeObjectRelease();
      break;
    case 6u:
    case 9u:
      uint64_t v28 = type metadata accessor for StockFeedModel;
LABEL_10:
      sub_20A42C3C4((uint64_t)v18, (uint64_t (*)(void))v28);
      break;
    case 7u:
      swift_bridgeObjectRelease();
      swift_release();
      break;
    case 8u:
      sub_20A42D074(0, (unint64_t *)&qword_26AC81910, MEMORY[0x263F59BC0]);
      swift_release();
      uint64_t v27 = sub_20A8CD2C0();
LABEL_13:
      (*(void (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v18, v27);
      break;
    case 0xAu:
      break;
    default:
      sub_20A42C5C8((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      __swift_project_boxed_opaque_existential_1(a1 + 2, a1[5]);
      sub_20A7D6284(*(double *)&v15, v29, (uint64_t)v12);
      sub_20A42CB10();
      uint64_t v20 = (uint64_t)&v9[*(int *)(v19 + 48)];
      sub_20A42C630((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      sub_20A42C630((uint64_t)v12, v20, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
      swift_storeEnumTagMultiPayload();
      sub_20A42D8C0(&qword_26AC72240, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
      sub_20A8C9140();
      sub_20A42C3C4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
      return sub_20A42C3C4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
  }
  sub_20A8CF520();
  __break(1u);
  JUMPOUT(0x20A427944);
}

uint64_t sub_20A427970@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v65 = a1;
  uint64_t v69 = a3;
  uint64_t v68 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x270FA5388](v68);
  uint64_t v67 = (uint64_t)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for StockFeedEarningsViewLayoutOptions();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v64 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_20A8C9830();
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  unint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D040(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v60 = (uint64_t)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_20A8C2800();
  uint64_t v10 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v58 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8C3F00();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v72 = (uint64_t)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for StockFeedEarningsViewModel();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v63 = (uint64_t)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for StockEarningsModel();
  MEMORY[0x270FA5388](v57);
  uint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v53 - v20;
  uint64_t v22 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v22);
  unint64_t v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C4A4();
  sub_20A8C8330();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 4)
  {
    uint64_t v48 = v12;
    switch(EnumCaseMultiPayload)
    {
      case 2:
        goto LABEL_8;
      case 3:
        sub_20A42C53C();
        uint64_t v51 = (uint64_t)&v24[*(int *)(v50 + 48)];
        sub_20A42C3C4((uint64_t)&v24[*(int *)(v50 + 64)], (uint64_t (*)(void))sub_20A42C43C);
        sub_20A42C3C4(v51, (uint64_t (*)(void))sub_20A42C470);
LABEL_8:
        (*(void (**)(char *, uint64_t))(v13 + 8))(v24, v48);
        goto LABEL_12;
      case 4:
        goto LABEL_13;
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_12;
      case 6:
      case 9:
        uint64_t v49 = type metadata accessor for StockFeedModel;
        goto LABEL_6;
      case 7:
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_12;
      case 8:
        sub_20A42D074(0, (unint64_t *)&qword_26AC81910, MEMORY[0x263F59BC0]);
        swift_release();
        uint64_t v52 = sub_20A8CD2C0();
        (*(void (**)(char *, uint64_t))(*(void *)(v52 - 8) + 8))(v24, v52);
        goto LABEL_12;
      case 10:
        goto LABEL_12;
      default:
        uint64_t v49 = type metadata accessor for StockFeedMastheadModel;
LABEL_6:
        sub_20A42C3C4((uint64_t)v24, (uint64_t (*)(void))v49);
LABEL_12:
        sub_20A8CF520();
LABEL_13:
        __break(1u);
        JUMPOUT(0x20A42821CLL);
    }
  }
  sub_20A42C5C8((uint64_t)v24, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
  uint64_t v26 = (uint64_t)v21;
  unint64_t v70 = v21;
  uint64_t v27 = v65;
  uint64_t v28 = __swift_project_boxed_opaque_existential_1((void *)(v65 + 400), *(void *)(v65 + 424));
  uint64_t v56 = (void (*)(void, void))sub_20A797CC0(*v28, v26);
  uint64_t v55 = v29;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v72, v26, v12);
  uint64_t v54 = v18;
  sub_20A42C630(v26, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
  uint64_t v30 = v57;
  uint64_t v31 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v58, v26 + *(int *)(v57 + 20), v59);
  uint64_t v32 = v60;
  sub_20A42C630(v26 + *(int *)(v30 + 24), v60, (uint64_t (*)(void))sub_20A42D040);
  double v33 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
  uint64_t v34 = v7;
  uint64_t v35 = v66;
  uint64_t v36 = (uint64_t)v7;
  uint64_t v37 = v62;
  v33(v34, v66, v62);
  int v38 = v70[*(int *)(v30 + 32)];
  uint64_t v39 = v63;
  sub_20A7D3F80(v72, (uint64_t)v54, v31, v32, v56, v55, v36, v38, v63);
  __swift_project_boxed_opaque_existential_1((void *)(v27 + 136), *(void *)(v27 + 160));
  uint64_t v40 = (uint64_t)v64;
  v33(v64, v35, v37);
  sub_20A5827DC(v39, v71);
  sub_20A42C3C4(v40, (uint64_t (*)(void))type metadata accessor for StockFeedEarningsViewLayoutOptions);
  sub_20A42D074(0, &qword_26AC76E18, (void (*)(uint64_t))type metadata accessor for StockFeedEarningsViewModel);
  uint64_t v42 = (_OWORD *)(v67 + *(int *)(v41 + 48));
  sub_20A42C630(v39, v67, (uint64_t (*)(void))type metadata accessor for StockFeedEarningsViewModel);
  long long v43 = v71[5];
  v42[4] = v71[4];
  v42[5] = v43;
  long long v44 = v71[7];
  v42[6] = v71[6];
  v42[7] = v44;
  long long v45 = v71[1];
  *uint64_t v42 = v71[0];
  v42[1] = v45;
  long long v46 = v71[3];
  v42[2] = v71[2];
  v42[3] = v46;
  swift_storeEnumTagMultiPayload();
  sub_20A42D8C0(&qword_26AC72240, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
  sub_20A8C9140();
  sub_20A42C3C4(v39, (uint64_t (*)(void))type metadata accessor for StockFeedEarningsViewModel);
  return sub_20A42C3C4((uint64_t)v70, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
}

uint64_t sub_20A428248@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v73 = a5;
  int v77 = a4;
  uint64_t v76 = a3;
  uint64_t v83 = a2;
  uint64_t v80 = a1;
  uint64_t v89 = a6;
  uint64_t v78 = type metadata accessor for QuoteDetailViewLayoutOptions();
  MEMORY[0x270FA5388](v78);
  uint64_t v79 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42DA7C(0, (unint64_t *)&unk_26AC68B78, (uint64_t (*)(uint64_t))type metadata accessor for AttributionSource, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v75 = (char *)&v73 - v8;
  uint64_t v9 = type metadata accessor for QuoteDetailViewModel();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v84 = (uint64_t)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C43C(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v74 = (uint64_t)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v82 = (uint64_t)&v73 - v14;
  sub_20A42C470(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v81 = (uint64_t)&v73 - v19;
  uint64_t v88 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x270FA5388](v88);
  uint64_t v86 = (uint64_t)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for StockChartViewLayoutOptions();
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for StockChartModel();
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v26 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_20A8C3F00();
  uint64_t v85 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v28 = (char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)&v73 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C4A4();
  sub_20A8C8330();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v32 = v85;
      uint64_t v33 = v87;
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v28, v31, v87);
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v26, v28, v33);
      __swift_project_boxed_opaque_existential_1(v80 + 12, v80[15]);
      uint64_t v34 = sub_20A8C9830();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v23, v83, v34);
      if (qword_26AC68300 != -1) {
        swift_once();
      }
      *(void *)&v23[*(int *)(v21 + 20)] = qword_26AC7A7E8;
      uint64_t v35 = &v23[*(int *)(v21 + 24)];
      *(void *)uint64_t v35 = v76;
      v35[8] = v77 & 1;
      sub_20A6D5E20((uint64_t)v23, (uint64_t)v90);
      sub_20A42C3C4((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for StockChartViewLayoutOptions);
      sub_20A42D074(0, &qword_26AC6E3A8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
      uint64_t v37 = v86 + *(int *)(v36 + 48);
      sub_20A42C630((uint64_t)v26, v86, (uint64_t (*)(void))type metadata accessor for StockChartModel);
      long long v38 = v90[11];
      *(_OWORD *)(v37 + 160) = v90[10];
      *(_OWORD *)(v37 + 176) = v38;
      *(void *)(v37 + 192) = *(void *)&v90[12];
      long long v39 = v90[7];
      *(_OWORD *)(v37 + 96) = v90[6];
      *(_OWORD *)(v37 + 112) = v39;
      long long v40 = v90[9];
      *(_OWORD *)(v37 + 128) = v90[8];
      *(_OWORD *)(v37 + 144) = v40;
      long long v41 = v90[3];
      *(_OWORD *)(v37 + 32) = v90[2];
      *(_OWORD *)(v37 + 48) = v41;
      long long v42 = v90[5];
      *(_OWORD *)(v37 + 64) = v90[4];
      *(_OWORD *)(v37 + 80) = v42;
      long long v43 = v90[1];
      *(_OWORD *)uint64_t v37 = v90[0];
      *(_OWORD *)(v37 + 16) = v43;
      swift_storeEnumTagMultiPayload();
      sub_20A42D8C0(&qword_26AC72240, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
      sub_20A8C9140();
      sub_20A42C3C4((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for StockChartModel);
      uint64_t v31 = v28;
      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v31, v33);
    case 3u:
      sub_20A42C53C();
      long long v45 = &v31[*(int *)(v44 + 64)];
      uint64_t v46 = v81;
      sub_20A42C5C8((uint64_t)&v31[*(int *)(v44 + 48)], v81, (uint64_t (*)(void))sub_20A42C470);
      uint64_t v47 = (uint64_t)v45;
      uint64_t v48 = v82;
      sub_20A42C5C8(v47, v82, (uint64_t (*)(void))sub_20A42C43C);
      sub_20A42C630(v46, (uint64_t)v17, (uint64_t (*)(void))sub_20A42C470);
      uint64_t v49 = v74;
      sub_20A42C630(v48, v74, (uint64_t (*)(void))sub_20A42C43C);
      uint64_t v50 = v80;
      uint64_t v51 = v80[48];
      uint64_t v52 = v80[49];
      __swift_project_boxed_opaque_existential_1(v80 + 45, v51);
      uint64_t v53 = (uint64_t)v75;
      AttributionProviderType.source.getter(v51, v52);
      uint64_t v54 = type metadata accessor for AttributionSource();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 0, 1, v54);
      sub_20A576408((uint64_t)v17, v49, v53, v84);
      __swift_project_boxed_opaque_existential_1(v50 + 55, v50[58]);
      if (sub_20A8C3850())
      {
        uint64_t v56 = 0;
        uint64_t v76 = 0;
        uint64_t v57 = 0x4014000000000000;
        uint64_t v58 = 0x4034000000000000;
        int v77 = 1;
LABEL_11:
        uint64_t v59 = 0x4024000000000000;
        uint64_t v60 = 2;
        goto LABEL_13;
      }
      if (qword_26AC692A0 != -1) {
        swift_once();
      }
      sub_20A42D8C0(&qword_26AC7A7F8, v55, (void (*)(uint64_t))type metadata accessor for StockFeedBlueprintLayoutBuilder);
      sub_20A8C41C0();
      if (v90[0])
      {
        uint64_t v56 = 0;
        uint64_t v76 = 0;
        int v77 = 1;
        uint64_t v57 = 0x4014000000000000;
        uint64_t v58 = 0x4034000000000000;
        goto LABEL_11;
      }
      int v77 = 0;
      uint64_t v76 = 0x4038000000000000;
      uint64_t v56 = 0x4014000000000000;
      uint64_t v57 = 0x4034000000000000;
      uint64_t v58 = 0x405E800000000000;
      uint64_t v59 = 0x4018000000000000;
      uint64_t v60 = 3;
LABEL_13:
      __swift_project_boxed_opaque_existential_1(v50 + 22, v50[25]);
      uint64_t v61 = sub_20A8C9830();
      uint64_t v62 = (uint64_t)v79;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v61 - 8) + 16))(v79, v83, v61);
      uint64_t v63 = v78;
      uint64_t v64 = v62 + *(int *)(v78 + 20);
      *(void *)uint64_t v64 = v60;
      *(void *)(v64 + 8) = v59;
      *(void *)(v64 + 16) = v58;
      *(void *)(v64 + 24) = v57;
      uint64_t v65 = v76;
      *(void *)(v64 + 32) = v56;
      *(void *)(v64 + 40) = v65;
      *(void *)(v64 + 48) = 0;
      *(void *)(v64 + 56) = v56;
      *(void *)(v64 + 64) = 0;
      *(void *)(v64 + 72) = 0;
      *(unsigned char *)(v64 + 80) = v77;
      *(void *)(v62 + *(int *)(v63 + 24)) = 0x4038000000000000;
      uint64_t v66 = v62 + *(int *)(v63 + 28);
      *(_OWORD *)uint64_t v66 = xmmword_20A8D3DD0;
      *(void *)(v66 + 16) = 0;
      *(void *)(v66 + 24) = 0;
      uint64_t v67 = v84;
      sub_20A75B380(v84, v62, (uint64_t)v90);
      sub_20A42C3C4(v62, (uint64_t (*)(void))type metadata accessor for QuoteDetailViewLayoutOptions);
      sub_20A42D074(0, &qword_26AC71BF0, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
      uint64_t v69 = (void *)(v86 + *(int *)(v68 + 48));
      sub_20A42C630(v67, v86, (uint64_t (*)(void))type metadata accessor for QuoteDetailViewModel);
      memcpy(v69, v90, 0x109uLL);
      swift_storeEnumTagMultiPayload();
      sub_20A42D8C0(&qword_26AC72240, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
      sub_20A8C9140();
      sub_20A42C3C4(v67, (uint64_t (*)(void))type metadata accessor for QuoteDetailViewModel);
      sub_20A42C3C4(v82, (uint64_t (*)(void))sub_20A42C43C);
      sub_20A42C3C4(v81, (uint64_t (*)(void))sub_20A42C470);
      uint64_t v33 = v87;
      uint64_t v32 = v85;
      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v31, v33);
    case 4u:
      unint64_t v71 = type metadata accessor for StockEarningsModel;
      goto LABEL_21;
    case 5u:
      swift_bridgeObjectRelease();
      goto LABEL_22;
    case 6u:
    case 9u:
      unint64_t v71 = type metadata accessor for StockFeedModel;
      goto LABEL_21;
    case 7u:
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_22;
    case 8u:
      sub_20A42D074(0, (unint64_t *)&qword_26AC81910, MEMORY[0x263F59BC0]);
      swift_release();
      uint64_t v72 = sub_20A8CD2C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v72 - 8) + 8))(v31, v72);
      goto LABEL_22;
    case 0xAu:
      goto LABEL_22;
    default:
      unint64_t v71 = type metadata accessor for StockFeedMastheadModel;
LABEL_21:
      sub_20A42C3C4((uint64_t)v31, (uint64_t (*)(void))v71);
LABEL_22:
      sub_20A8CF520();
      __break(1u);
      JUMPOUT(0x20A428E68);
  }
}

uint64_t sub_20A428E94@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v35 = a2;
  sub_20A42CBEC(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v34 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8CC5C0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v33 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_20A8CCF10();
  uint64_t v7 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C4A4();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_20A8CD150();
  uint64_t v24 = *(void *)(v15 - 8);
  uint64_t v25 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v32 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  sub_20A42C050(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  uint64_t v31 = v17;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_20A8C8830();
  uint64_t v29 = v19;
  uint64_t v30 = v18;
  uint64_t v20 = sub_20A8C8830();
  uint64_t v27 = v21;
  uint64_t v28 = v20;
  sub_20A8C8930();
  sub_20A42D8C0(&qword_26AC6D868, 255, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
  sub_20A8C8340();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  LOBYTE(v17) = sub_20A8CCEF0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v26);
  if (v17)
  {
    (*(void (**)(char *, void, uint64_t))(v24 + 104))(v32, *MEMORY[0x263F59B38], v25);
  }
  else
  {
    sub_20A42D8C0(&qword_26AC76F90, 255, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    sub_20A8C88C0();
  }
  sub_20A42D8C0(&qword_26AC76F90, 255, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
  sub_20A8C88D0();
  uint64_t v22 = sub_20A8CCBD0();
  long long v36 = 0u;
  long long v37 = 0u;
  uint64_t v38 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v34, 1, 1, v22);
  sub_20A8CC5B0();
  swift_allocObject();
  sub_20A42CE0C();
  uint64_t result = sub_20A8CC5A0();
  uint64_t *v35 = result;
  return result;
}

uint64_t sub_20A429364@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v45 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x270FA5388](v45);
  uint64_t v44 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_20A8CCE00();
  uint64_t v6 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  long long v41 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C698();
  uint64_t v42 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v46 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8CC650();
  uint64_t v35 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = *a1;
  sub_20A8CC5B0();
  sub_20A42D8C0((unint64_t *)&unk_26AC6AF70, 255, MEMORY[0x263F597F8]);
  memset(v47, 0, sizeof(v47));
  uint64_t v48 = 0;
  sub_20A8CC690();
  sub_20A42C3C4((uint64_t)v47, (uint64_t (*)(void))sub_20A42CCB0);
  uint64_t v14 = sub_20A8CC610();
  int64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    uint64_t v31 = v13;
    uint64_t v32 = v11;
    uint64_t v33 = a2;
    uint64_t v34 = v2;
    *(void *)&v47[0] = MEMORY[0x263F8EE78];
    sub_20A68C244(0, v15, 0);
    uint64_t v17 = *(void (**)(void, void, void))(v6 + 16);
    uint64_t v16 = v6 + 16;
    long long v39 = v17;
    unint64_t v18 = (*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64);
    v30[1] = v14;
    unint64_t v19 = v14 + v18;
    uint64_t v20 = *(void *)(v16 + 56);
    uint64_t v40 = v16;
    long long v37 = (void (**)(char *, uint64_t))(v16 - 8);
    uint64_t v38 = v20;
    uint64_t v36 = v9 + 32;
    uint64_t v21 = (void (*)(char *, unint64_t, uint64_t))v17;
    do
    {
      uint64_t v22 = v9;
      uint64_t v23 = v41;
      uint64_t v24 = v43;
      v21(v41, v19, v43);
      v21(v44, (unint64_t)v23, v24);
      swift_storeEnumTagMultiPayload();
      sub_20A42D8C0(&qword_26AC72240, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
      sub_20A8C9140();
      (*v37)(v23, v24);
      uint64_t v25 = *(void *)&v47[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C244(0, *(void *)(v25 + 16) + 1, 1);
        uint64_t v25 = *(void *)&v47[0];
      }
      unint64_t v27 = *(void *)(v25 + 16);
      unint64_t v26 = *(void *)(v25 + 24);
      uint64_t v28 = v46;
      uint64_t v9 = v22;
      if (v27 >= v26 >> 1)
      {
        sub_20A68C244(v26 > 1, v27 + 1, 1);
        uint64_t v28 = v46;
        uint64_t v25 = *(void *)&v47[0];
      }
      *(void *)(v25 + 16) = v27 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v25+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v27, v28, v42);
      *(void *)&v47[0] = v25;
      v19 += v38;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    a2 = v33;
    uint64_t v13 = v31;
    uint64_t v11 = v32;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = MEMORY[0x263F8EE78];
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v13, v11);
  *a2 = v25;
  return result;
}

uint64_t sub_20A42983C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  v38[1] = a2;
  uint64_t v3 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C9830();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (void *)((char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A42C4A4();
  sub_20A8C8330();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 5)
  {
    switch(EnumCaseMultiPayload)
    {
      case 2:
        goto LABEL_7;
      case 3:
        sub_20A42C53C();
        uint64_t v36 = (uint64_t)v12 + *(int *)(v35 + 48);
        sub_20A42C3C4((uint64_t)v12 + *(int *)(v35 + 64), (uint64_t (*)(void))sub_20A42C43C);
        sub_20A42C3C4(v36, (uint64_t (*)(void))sub_20A42C470);
LABEL_7:
        uint64_t v37 = sub_20A8C3F00();
        goto LABEL_9;
      case 4:
        uint64_t v34 = type metadata accessor for StockEarningsModel;
        goto LABEL_11;
      case 5:
        __break(1u);
        JUMPOUT(0x20A429D68);
      case 6:
      case 9:
        uint64_t v34 = type metadata accessor for StockFeedModel;
        goto LABEL_11;
      case 7:
        goto LABEL_13;
      case 8:
        sub_20A42D074(0, (unint64_t *)&qword_26AC81910, MEMORY[0x263F59BC0]);
        swift_release();
        uint64_t v37 = sub_20A8CD2C0();
LABEL_9:
        (*(void (**)(uint64_t *, uint64_t))(*(void *)(v37 - 8) + 8))(v12, v37);
        break;
      case 10:
        goto LABEL_12;
      default:
        uint64_t v34 = type metadata accessor for StockFeedMastheadModel;
LABEL_11:
        sub_20A42C3C4((uint64_t)v12, (uint64_t (*)(void))v34);
        break;
    }
    while (1)
    {
LABEL_12:
      sub_20A8CF520();
      __break(1u);
LABEL_13:
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  uint64_t v15 = *v12;
  uint64_t v14 = v12[1];
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_20A8C9820();
  double v17 = v16;
  sub_20A8C9820();
  sub_20A8C9710();
  double v19 = v18;
  double v21 = v20;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  uint64_t v22 = (void *)sub_20A8CEE20();
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F81658]), sel_init);
  sub_20A8CE380();
  double v25 = v24;
  CGFloat v27 = v26;

  CGFloat v28 = v19 + (v17 - v19 - v21) * 0.5 - v25 * 0.5;
  v39.origin.CGFloat x = v28;
  v39.origin.CGFloat y = 100.0;
  v39.size.CGFloat width = v25;
  v39.size.CGFloat height = v27;
  v40.size.CGFloat height = CGRectGetMaxY(v39);
  v40.origin.CGFloat x = 0.0;
  v40.origin.CGFloat y = 0.0;
  v40.size.CGFloat width = v17;
  CGRect v41 = CGRectIntegral(v40);
  CGFloat x = v41.origin.x;
  CGFloat y = v41.origin.y;
  CGFloat width = v41.size.width;
  CGFloat height = v41.size.height;
  v41.origin.CGFloat x = v28;
  v41.origin.CGFloat y = 100.0;
  v41.size.CGFloat width = v25;
  v41.size.CGFloat height = v27;
  CGRect v42 = CGRectIntegral(v41);
  *(void *)uint64_t v5 = v15;
  *((void *)v5 + 1) = v14;
  *((CGFloat *)v5 + 2) = x;
  *((CGFloat *)v5 + 3) = y;
  *((CGFloat *)v5 + 4) = width;
  *((CGFloat *)v5 + 5) = height;
  *(CGRect *)(v5 + 48) = v42;
  swift_storeEnumTagMultiPayload();
  sub_20A42D8C0(&qword_26AC72240, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
  return sub_20A8C9140();
}

uint64_t sub_20A429D94@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v38 = a3;
  uint64_t v37 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x270FA5388](v37);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C9830();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C4A4();
  sub_20A8C8330();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 10)
  {
    switch(EnumCaseMultiPayload)
    {
      case 2:
        goto LABEL_7;
      case 3:
        sub_20A42C53C();
        uint64_t v33 = (uint64_t)&v12[*(int *)(v32 + 48)];
        sub_20A42C3C4((uint64_t)&v12[*(int *)(v32 + 64)], (uint64_t (*)(void))sub_20A42C43C);
        sub_20A42C3C4(v33, (uint64_t (*)(void))sub_20A42C470);
LABEL_7:
        uint64_t v34 = sub_20A8C3F00();
        goto LABEL_13;
      case 4:
        uint64_t v31 = type metadata accessor for StockEarningsModel;
        goto LABEL_9;
      case 5:
        swift_bridgeObjectRelease();
        break;
      case 6:
      case 9:
        uint64_t v31 = type metadata accessor for StockFeedModel;
        goto LABEL_9;
      case 7:
        swift_bridgeObjectRelease();
        swift_release();
        break;
      case 8:
        sub_20A42D074(0, (unint64_t *)&qword_26AC81910, MEMORY[0x263F59BC0]);
        swift_release();
        uint64_t v34 = sub_20A8CD2C0();
LABEL_13:
        (*(void (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(v12, v34);
        break;
      default:
        uint64_t v31 = type metadata accessor for StockFeedMastheadModel;
LABEL_9:
        sub_20A42C3C4((uint64_t)v12, (uint64_t (*)(void))v31);
        break;
    }
    sub_20A8CF520();
    __break(1u);
    JUMPOUT(0x20A42A24CLL);
  }
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 256), *(void *)(a1 + 280));
  sub_20A807B60((uint64_t *)v43);
  long long v39 = v43[0];
  long long v40 = v43[1];
  uint64_t v41 = v44;
  uint64_t v42 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v36, v6);
  sub_20A8C9820();
  CGFloat v15 = v14;
  sub_20A8C9820();
  CGFloat v17 = v16;
  sub_20A8C9710();
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  CGFloat v25 = v24;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v53[0] = v15;
  v53[1] = v17;
  v53[2] = v19;
  v53[3] = v21;
  v53[4] = v23;
  v53[5] = v25;
  long long v54 = xmmword_20A8D3DE0;
  uint64_t v55 = 0x4026000000000000;
  sub_20A4CCBC0(v53, &v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v26 = v50;
  *((_OWORD *)v5 + 4) = v49;
  *((_OWORD *)v5 + 5) = v26;
  long long v27 = v52;
  *((_OWORD *)v5 + 6) = v51;
  *((_OWORD *)v5 + 7) = v27;
  CGSize size = v46.size;
  *(CGPoint *)uint64_t v5 = v46.origin;
  *((CGSize *)v5 + 1) = size;
  long long v29 = v48;
  *((_OWORD *)v5 + 2) = v47;
  *((_OWORD *)v5 + 3) = v29;
  swift_storeEnumTagMultiPayload();
  sub_20A42D8C0(&qword_26AC72240, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
  return sub_20A8C9140();
}

uint64_t sub_20A42A274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for StockFeedLayoutSectionDescriptor.Header(0);
  uint64_t v81 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_20A8CCE80();
  uint64_t v9 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v11 = (char *)v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StockFeedLayoutSectionDescriptor.Footer(0);
  uint64_t v82 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v78 = (char *)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_20A8CC850();
  uint64_t v68 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v84 = (char *)v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for StockFeedLayoutSectionDescriptor.Decoration(0);
  uint64_t v83 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v86 = (char *)v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8CA9F0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  double v20 = (char *)v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_20A8CC470();
  uint64_t v73 = *(void *)(v21 - 8);
  uint64_t v74 = v21;
  double v22 = *(void (**)(uint64_t, uint64_t))(v73 + 16);
  uint64_t v75 = a1;
  v22(a3, a1);
  uint64_t v23 = *MEMORY[0x263F7DD78];
  unint64_t v70 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 104);
  uint64_t v71 = v18 + 104;
  v70(v20, v23, v17);
  uint64_t v24 = sub_20A8CC630();
  long long v26 = *(void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v25 = v18 + 8;
  uint64_t v72 = v20;
  uint64_t v69 = v26;
  v26(v20, v17);
  int64_t v27 = *(void *)(v24 + 16);
  uint64_t v76 = a2;
  uint64_t v77 = a3;
  uint64_t v67 = v9;
  if (v27)
  {
    v65[1] = v25;
    uint64_t v66 = v17;
    uint64_t v88 = MEMORY[0x263F8EE78];
    sub_20A68C3C4(0, v27, 0);
    uint64_t v30 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v28 = v9 + 16;
    long long v29 = v30;
    unint64_t v31 = (*(unsigned __int8 *)(v28 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 64);
    v65[0] = v24;
    unint64_t v32 = v24 + v31;
    uint64_t v79 = *(void *)(v28 + 56);
    uint64_t v80 = v8;
    do
    {
      uint64_t v33 = v87;
      v29(v11, v32, v87);
      v29(v8, (unint64_t)v11, v33);
      (*(void (**)(char *, uint64_t))(v28 - 8))(v11, v33);
      uint64_t v34 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C3C4(0, *(void *)(v34 + 16) + 1, 1);
        uint64_t v34 = v88;
      }
      unint64_t v36 = *(void *)(v34 + 16);
      unint64_t v35 = *(void *)(v34 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_20A68C3C4(v35 > 1, v36 + 1, 1);
        uint64_t v34 = v88;
      }
      *(void *)(v34 + 16) = v36 + 1;
      uint64_t v8 = v80;
      sub_20A42C5C8((uint64_t)v80, v34+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ *(void *)(v81 + 72) * v36, type metadata accessor for StockFeedLayoutSectionDescriptor.Header);
      v32 += v79;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    a2 = v76;
    a3 = v77;
    uint64_t v17 = v66;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = MEMORY[0x263F8EE78];
  }
  sub_20A42CB84(0);
  uint64_t v38 = v37;
  *(void *)(a3 + *(int *)(v37 + 28)) = v34;
  long long v39 = v72;
  v70(v72, *MEMORY[0x263F7DD70], v17);
  uint64_t v40 = sub_20A8CC630();
  v69(v39, v17);
  int64_t v41 = *(void *)(v40 + 16);
  uint64_t v80 = (char *)v38;
  if (v41)
  {
    uint64_t v88 = MEMORY[0x263F8EE78];
    sub_20A68C374(0, v41, 0);
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
    uint64_t v43 = *(unsigned __int8 *)(v67 + 80);
    uint64_t v79 = v40;
    uint64_t v44 = v40 + ((v43 + 32) & ~v43);
    uint64_t v81 = *(void *)(v67 + 72);
    uint64_t v45 = (void (**)(char *, uint64_t))(v67 + 8);
    uint64_t v46 = (uint64_t)v78;
    do
    {
      uint64_t v47 = v87;
      v42(v11, v44, v87);
      v42((char *)v46, (uint64_t)v11, v47);
      (*v45)(v11, v47);
      uint64_t v48 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C374(0, *(void *)(v48 + 16) + 1, 1);
        uint64_t v46 = (uint64_t)v78;
        uint64_t v48 = v88;
      }
      unint64_t v50 = *(void *)(v48 + 16);
      unint64_t v49 = *(void *)(v48 + 24);
      if (v50 >= v49 >> 1)
      {
        sub_20A68C374(v49 > 1, v50 + 1, 1);
        uint64_t v46 = (uint64_t)v78;
        uint64_t v48 = v88;
      }
      *(void *)(v48 + 16) = v50 + 1;
      sub_20A42C5C8(v46, v48+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(void *)(v82 + 72) * v50, type metadata accessor for StockFeedLayoutSectionDescriptor.Footer);
      v44 += v81;
      --v41;
    }
    while (v41);
    swift_bridgeObjectRelease();
    a2 = v76;
    a3 = v77;
    uint64_t v38 = (uint64_t)v80;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = MEMORY[0x263F8EE78];
  }
  *(void *)(a3 + *(int *)(v38 + 32)) = v48;
  uint64_t v51 = sub_20A8CC620();
  int64_t v52 = *(void *)(v51 + 16);
  uint64_t v53 = MEMORY[0x263F8EE78];
  if (v52)
  {
    uint64_t v88 = MEMORY[0x263F8EE78];
    sub_20A68C324(0, v52, 0);
    long long v54 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
    uint64_t v55 = *(unsigned __int8 *)(v68 + 80);
    uint64_t v82 = v51;
    uint64_t v56 = v51 + ((v55 + 32) & ~v55);
    uint64_t v87 = *(void *)(v68 + 72);
    uint64_t v57 = (void (**)(char *, uint64_t))(v68 + 8);
    uint64_t v58 = (uint64_t)v86;
    do
    {
      uint64_t v60 = v84;
      uint64_t v59 = v85;
      v54(v84, v56, v85);
      v54((char *)v58, (uint64_t)v60, v59);
      (*v57)(v60, v59);
      uint64_t v53 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C324(0, *(void *)(v53 + 16) + 1, 1);
        uint64_t v53 = v88;
      }
      unint64_t v62 = *(void *)(v53 + 16);
      unint64_t v61 = *(void *)(v53 + 24);
      uint64_t v58 = (uint64_t)v86;
      if (v62 >= v61 >> 1)
      {
        sub_20A68C324(v61 > 1, v62 + 1, 1);
        uint64_t v58 = (uint64_t)v86;
        uint64_t v53 = v88;
      }
      *(void *)(v53 + 16) = v62 + 1;
      sub_20A42C5C8(v58, v53+ ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80))+ *(void *)(v83 + 72) * v62, type metadata accessor for StockFeedLayoutSectionDescriptor.Decoration);
      v56 += v87;
      --v52;
    }
    while (v52);
    a2 = v76;
    a3 = v77;
    uint64_t v38 = (uint64_t)v80;
  }
  uint64_t v63 = sub_20A8CC650();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8))(a2, v63);
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v75, v74);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a3 + *(int *)(v38 + 36)) = v53;
  return result;
}

uint64_t sub_20A42AB88@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_20A41DF00(a1, a2, a3);
}

uint64_t sub_20A42ABAC(unint64_t a1)
{
  return sub_20A46D41C(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_20A42ABC0(uint64_t a1)
{
  sub_20A42CED0(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v56 = (char *)&v46 - v6;
  sub_20A42C698();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  uint64_t v54 = (v12 + 32) & ~v12;
  uint64_t v59 = (char *)(MEMORY[0x263F8EE78] + v54);
  uint64_t v14 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v49 = v11 + 48;
  uint64_t v50 = v11 + 16;
  uint64_t v51 = v11;
  uint64_t v58 = (uint64_t (**)(void))(v11 + 32);
  uint64_t v48 = v12 | 7;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v60 = 0;
  unint64_t v61 = 0;
  unint64_t v16 = 0;
  uint64_t v53 = v10;
LABEL_4:
  unint64_t v19 = *(void *)(a1 + 16);
  if (v16 != v19)
  {
    if (v16 < v19)
    {
      while (1)
      {
        uint64_t v20 = *(void *)(a1 + 32 + 8 * v16);
        swift_bridgeObjectRetain();
        uint64_t result = swift_bridgeObjectRelease();
        if (v20) {
          break;
        }
LABEL_9:
        ++v16;
        unint64_t v21 = *(void *)(a1 + 16);
        if (v16 == v21) {
          goto LABEL_38;
        }
        if (v16 >= v21) {
          goto LABEL_44;
        }
      }
      unint64_t v17 = *(void *)(v20 + 16);
      if (!v17)
      {
        (*v14)(v4, 1, 1, v8);
        uint64_t result = sub_20A42C3C4((uint64_t)v4, (uint64_t (*)(void))sub_20A42CED0);
        goto LABEL_9;
      }
      unint64_t v18 = 0;
      ++v16;
      while (1)
      {
        if (v18 >= v17) {
          goto LABEL_45;
        }
        uint64_t v57 = v13;
        uint64_t v22 = v51;
        uint64_t v23 = *(void *)(v51 + 72);
        unint64_t v61 = v18;
        (*(void (**)(char *, unint64_t, uint64_t))(v51 + 16))(v4, v20 + v54 + v23 * v18, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v4, 0, 1, v8);
        uint64_t v24 = (uint64_t)v56;
        sub_20A42C5C8((uint64_t)v4, (uint64_t)v56, (uint64_t (*)(void))sub_20A42CED0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v24, 1, v8) == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v13 = v57;
          goto LABEL_39;
        }
        uint64_t v55 = v23;
        uint64_t v25 = v53;
        int64_t v52 = *v58;
        uint64_t result = v52();
        if (!v60) {
          break;
        }
        long long v26 = v57;
        uint64_t v27 = v60 - 1;
        if (__OFSUB__(v60, 1)) {
          goto LABEL_46;
        }
LABEL_37:
        uint64_t v60 = v27;
        ++v61;
        uint64_t v42 = v59;
        uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v52)(v59, v25, v8);
        uint64_t v59 = &v42[v55];
        uint64_t v13 = v26;
        unint64_t v17 = *(void *)(v20 + 16);
        unint64_t v18 = v61;
        if (v61 == v17)
        {
          (*v14)(v4, 1, 1, v8);
          uint64_t result = sub_20A42C3C4((uint64_t)v4, (uint64_t (*)(void))sub_20A42CED0);
          goto LABEL_4;
        }
      }
      unint64_t v28 = v57[3];
      if ((uint64_t)((v28 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_48;
      }
      int64_t v29 = v28 & 0xFFFFFFFFFFFFFFFELL;
      if (v29 <= 1) {
        uint64_t v30 = 1;
      }
      else {
        uint64_t v30 = v29;
      }
      sub_20A42DA7C(0, &qword_26AC7FF78, (uint64_t (*)(uint64_t))sub_20A42C698, MEMORY[0x263F8E0F8]);
      uint64_t v32 = v54;
      uint64_t v31 = v55;
      uint64_t v60 = v30;
      long long v26 = (void *)swift_allocObject();
      uint64_t result = _swift_stdlib_malloc_size(v26);
      if (!v31) {
        goto LABEL_49;
      }
      uint64_t v33 = result - v32;
      if (result - v32 == 0x8000000000000000 && v31 == -1) {
        goto LABEL_50;
      }
      uint64_t v35 = v32;
      uint64_t v36 = v33 / v31;
      void v26[2] = v60;
      v26[3] = 2 * (v33 / v31);
      uint64_t v37 = (char *)v26 + v35;
      uint64_t v38 = v57[3] >> 1;
      uint64_t v39 = v38 * v31;
      uint64_t v25 = v53;
      if (!v57[2])
      {
LABEL_36:
        uint64_t v59 = &v37[v39];
        uint64_t v40 = (v36 & 0x7FFFFFFFFFFFFFFFLL) - v38;
        uint64_t result = swift_release();
        BOOL v41 = __OFSUB__(v40, 1);
        uint64_t v27 = v40 - 1;
        if (v41) {
          goto LABEL_46;
        }
        goto LABEL_37;
      }
      if (v26 < v57 || v37 >= (char *)v57 + v35 + v39)
      {
        uint64_t v59 = (char *)v26 + v35;
        uint64_t v60 = v38;
        uint64_t v47 = v39;
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        if (v26 == v57)
        {
LABEL_35:
          v57[2] = 0;
          goto LABEL_36;
        }
        uint64_t v59 = (char *)v26 + v35;
        uint64_t v60 = v38;
        uint64_t v47 = v39;
        swift_arrayInitWithTakeBackToFront();
      }
      uint64_t v39 = v47;
      uint64_t v37 = v59;
      uint64_t v38 = v60;
      goto LABEL_35;
    }
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v24 = (uint64_t)v56;
  (*v14)(v56, 1, 1, v8);
  swift_bridgeObjectRelease();
LABEL_39:
  swift_bridgeObjectRelease();
  uint64_t result = sub_20A42C3C4(v24, (uint64_t (*)(void))sub_20A42CED0);
  unint64_t v43 = v13[3];
  if (v43 < 2) {
    return (uint64_t)v13;
  }
  unint64_t v44 = v43 >> 1;
  BOOL v41 = __OFSUB__(v44, v60);
  unint64_t v45 = v44 - v60;
  if (!v41)
  {
    v13[2] = v45;
    return (uint64_t)v13;
  }
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_20A42B138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, long long *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *(void *)(a15 + 464) = a16;
  *(void *)(a15 + 472) = a17;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(a15 + 440));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a16 - 8) + 32))(boxed_opaque_existential_1, a14, a16);
  *(void *)(a15 + 40) = type metadata accessor for StockFeedMastheadViewLayoutAttributesFactory();
  *(void *)(a15 + 48) = &off_26BE6F910;
  *(void *)(a15 + 16) = a1;
  *(void *)(a15 + 80) = type metadata accessor for StockFeedPriceViewLayoutAttributesFactory();
  *(void *)(a15 + 88) = &off_26BE73B08;
  *(void *)(a15 + 56) = a2;
  *(void *)(a15 + 120) = type metadata accessor for StockChartViewLayoutAttributesFactory();
  *(void *)(a15 + 128) = &off_26BE6B970;
  *(void *)(a15 + 96) = a3;
  *(void *)(a15 + 200) = type metadata accessor for QuoteDetailViewLayoutAttributesFactory();
  *(void *)(a15 + 208) = &off_26BE6DBD0;
  *(void *)(a15 + 176) = a4;
  *(void *)(a15 + 160) = type metadata accessor for StockFeedEarningsViewLayoutAttributesFactory();
  *(void *)(a15 + 168) = &off_26BE65598;
  *(void *)(a15 + 136) = a5;
  *(void *)(a15 + 240) = type metadata accessor for PlacardViewLayoutAttributesFactory();
  *(void *)(a15 + 248) = &off_26BE6FB40;
  *(void *)(a15 + 216) = a6;
  *(void *)(a15 + 280) = type metadata accessor for BilingualFeedPromptViewLayoutAttributesFactory();
  *(void *)(a15 + 288) = &off_26BE62718;
  *(void *)(a15 + 256) = a7;
  *(void *)(a15 + 320) = type metadata accessor for BrandingTitleViewLayoutAttributesFactory();
  *(void *)(a15 + 328) = &off_26BE67608;
  *(void *)(a15 + 296) = a8;
  *(void *)(a15 + 424) = type metadata accessor for StockFeedEarningsViewModelFactory();
  *(void *)(a15 + 432) = &off_26BE6E890;
  *(void *)(a15 + 400) = a13;
  *(void *)(a15 + 336) = a9;
  *(void *)(a15 + 344) = a10;
  *(unsigned char *)(a15 + 352) = a11 & 1;
  sub_20A42BEBC(a12, a15 + 360);
  return a15;
}

uint64_t sub_20A42B30C(unint64_t a1)
{
  uint64_t v2 = v1;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    if (!v4) {
      return v5;
    }
    uint64_t v14 = MEMORY[0x263F8EE78];
    uint64_t result = sub_20A68C304(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0) {
      break;
    }
    uint64_t v7 = 0;
    uint64_t v5 = v14;
    while (v4 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = MEMORY[0x210527700](v7, a1);
      }
      else
      {
        uint64_t v8 = *(void *)(a1 + 8 * v7 + 32);
        swift_retain();
      }
      uint64_t v12 = v8;
      sub_20A429364(&v12, &v13);
      if (v2)
      {
        swift_release();
        swift_release();
        return v5;
      }
      uint64_t v2 = 0;
      swift_release();
      uint64_t v9 = v13;
      uint64_t v14 = v5;
      unint64_t v11 = *(void *)(v5 + 16);
      unint64_t v10 = *(void *)(v5 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_20A68C304(v10 > 1, v11 + 1, 1);
        uint64_t v5 = v14;
      }
      ++v7;
      *(void *)(v5 + 16) = v11 + 1;
      *(void *)(v5 + 8 * v11 + 32) = v9;
      if (v4 == v7) {
        return v5;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_20A8CF540();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_20A42B49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, long long *a12, uint64_t *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v121 = a8;
  uint64_t v117 = a6;
  uint64_t v118 = a7;
  uint64_t v114 = a5;
  uint64_t v111 = a4;
  uint64_t v109 = a3;
  uint64_t v107 = a2;
  uint64_t v132 = a9;
  uint64_t v131 = a10;
  uint64_t v128 = a14;
  uint64_t v123 = a15;
  v130 = a12;
  uint64_t v122 = a13;
  uint64_t v129 = a31;
  uint64_t v116 = a30;
  uint64_t v120 = a35;
  uint64_t v112 = a34;
  uint64_t v119 = a25;
  uint64_t v110 = a29;
  uint64_t v106 = a28;
  uint64_t v108 = a33;
  uint64_t v126 = a21;
  uint64_t v125 = *(void *)(a21 - 8);
  int v127 = a11 & 1;
  uint64_t v115 = a27;
  uint64_t v113 = a17;
  MEMORY[0x270FA5388](a1);
  uint64_t v124 = (char *)&v105 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = a16;
  uint64_t v159 = v37;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v157);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a16 - 8) + 32))(boxed_opaque_existential_1, a1, a16);
  uint64_t v155 = a22;
  uint64_t v156 = a32;
  uint64_t v39 = __swift_allocate_boxed_opaque_existential_1(v154);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a22 - 8) + 32))(v39, v107, a22);
  uint64_t v152 = a18;
  uint64_t v153 = v106;
  uint64_t v40 = __swift_allocate_boxed_opaque_existential_1(v151);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a18 - 8) + 32))(v40, v109, a18);
  uint64_t v149 = a23;
  uint64_t v150 = v108;
  BOOL v41 = __swift_allocate_boxed_opaque_existential_1(v148);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a23 - 8) + 32))(v41, v111, a23);
  uint64_t v146 = a19;
  uint64_t v147 = v110;
  uint64_t v42 = __swift_allocate_boxed_opaque_existential_1(v145);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a19 - 8) + 32))(v42, v114, a19);
  uint64_t v143 = a24;
  uint64_t v144 = v112;
  unint64_t v43 = __swift_allocate_boxed_opaque_existential_1(v142);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a24 - 8) + 32))(v43, v117, a24);
  uint64_t v140 = a20;
  uint64_t v141 = v116;
  unint64_t v44 = __swift_allocate_boxed_opaque_existential_1(v139);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a20 - 8) + 32))(v44, v118, a20);
  uint64_t v45 = v113;
  uint64_t v137 = v113;
  uint64_t v138 = v115;
  uint64_t v46 = __swift_allocate_boxed_opaque_existential_1(v136);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 32))(v46, v121, v45);
  uint64_t v47 = v119;
  uint64_t v134 = v119;
  uint64_t v135 = v120;
  uint64_t v48 = __swift_allocate_boxed_opaque_existential_1(v133);
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v47 - 8) + 32))(v48, v122, v47);
  uint64_t v123 = swift_allocObject();
  uint64_t v49 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v157, v158);
  double v50 = MEMORY[0x270FA5388](v49);
  uint64_t v122 = (uint64_t *)((char *)&v105 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(double))(v52 + 16))(v50);
  uint64_t v53 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v154, v155);
  double v54 = MEMORY[0x270FA5388](v53);
  uint64_t v56 = (uint64_t *)((char *)&v105 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v57 + 16))(v56, v54);
  uint64_t v58 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v151, v152);
  double v59 = MEMORY[0x270FA5388](v58);
  unint64_t v61 = (uint64_t *)((char *)&v105 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v62 + 16))(v61, v59);
  uint64_t v63 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v148, v149);
  double v64 = MEMORY[0x270FA5388](v63);
  uint64_t v66 = (uint64_t *)((char *)&v105 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v67 + 16))(v66, v64);
  uint64_t v68 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v145, v146);
  double v69 = MEMORY[0x270FA5388](v68);
  uint64_t v71 = (uint64_t **)((char *)&v105 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t **, double))(v72 + 16))(v71, v69);
  uint64_t v73 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v142, v143);
  double v74 = MEMORY[0x270FA5388](v73);
  uint64_t v76 = (uint64_t *)((char *)&v105 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v77 + 16))(v76, v74);
  uint64_t v78 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v139, v140);
  double v79 = MEMORY[0x270FA5388](v78);
  uint64_t v81 = (uint64_t *)((char *)&v105 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v82 + 16))(v81, v79);
  uint64_t v83 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v136, v137);
  double v84 = MEMORY[0x270FA5388](v83);
  uint64_t v86 = (uint64_t *)((char *)&v105 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v87 + 16))(v86, v84);
  uint64_t v88 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v133, v134);
  double v89 = MEMORY[0x270FA5388](v88);
  uint64_t v91 = (uint64_t *)((char *)&v105 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v92 + 16))(v91, v89);
  uint64_t v93 = *v122;
  uint64_t v94 = *v56;
  uint64_t v95 = *v61;
  uint64_t v96 = *v66;
  uint64_t v97 = *v71;
  uint64_t v121 = *v76;
  uint64_t v122 = v97;
  uint64_t v98 = *v81;
  uint64_t v99 = *v86;
  uint64_t v100 = *v91;
  uint64_t v101 = (uint64_t)v124;
  uint64_t v102 = v126;
  (*(void (**)(char *, uint64_t, uint64_t))(v125 + 16))(v124, v128, v126);
  uint64_t v103 = sub_20A42B138(v93, v94, v95, v96, (uint64_t)v122, v121, v98, v99, v132, v131, v127, v130, v100, v101, v123, v102, v129);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v133);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v136);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v139);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v142);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v145);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v148);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v151);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v154);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v157);
  return v103;
}

uint64_t sub_20A42BEBC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_20A42BED4()
{
  if (!qword_26AC6A2C8)
  {
    type metadata accessor for StockFeedLayoutSectionDescriptor(255);
    type metadata accessor for StockFeedLayoutModel();
    sub_20A42D8C0(&qword_26AC7B3E0, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutSectionDescriptor);
    sub_20A42D8C0(&qword_26AC72240, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
    unint64_t v0 = sub_20A8C9870();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A2C8);
    }
  }
}

void sub_20A42BFC8()
{
  if (!qword_26AC7F868)
  {
    sub_20A42C050(255, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC7F868);
    }
  }
}

void sub_20A42C050(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for StockFeedSectionDescriptor();
    v8[1] = type metadata accessor for StockFeedModel();
    v8[2] = sub_20A42D8C0(&qword_26AC76F98, 255, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    v8[3] = sub_20A42D8C0(&qword_26AC6D860, 255, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_20A42C14C(uint64_t a1)
{
}

void sub_20A42C188(uint64_t a1)
{
}

void sub_20A42C1C4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
    sub_20A42C050(255, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
    uint64_t v11 = v10;
    uint64_t v12 = sub_20A42CA38(a3, (unint64_t *)&qword_26AC6ACC0, v9);
    unint64_t v13 = a5(a1, v11, v12);
    if (!v14) {
      atomic_store(v13, a2);
    }
  }
}

void sub_20A42C27C(uint64_t a1)
{
}

void sub_20A42C2B0()
{
  if (!qword_26AC7F888)
  {
    sub_20A42C050(255, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC7F888);
    }
  }
}

void sub_20A42C334(uint64_t a1)
{
}

uint64_t sub_20A42C368@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A41F9A8(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char **)(v2 + 32), *(void (***)(char *))(v2 + 40), a2);
}

void sub_20A42C388(uint64_t a1)
{
}

uint64_t sub_20A42C3C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A42C424@<X0>(uint64_t a1@<X8>)
{
  return sub_20A42D1E0(a1);
}

void sub_20A42C43C(uint64_t a1)
{
}

void sub_20A42C470(uint64_t a1)
{
}

void sub_20A42C4A4()
{
  if (!qword_26AC69D80)
  {
    type metadata accessor for StockFeedModel();
    sub_20A42D8C0(&qword_26AC6D860, 255, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
    unint64_t v0 = sub_20A8C8350();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69D80);
    }
  }
}

void sub_20A42C53C()
{
  if (!qword_26AC68AF0)
  {
    sub_20A8C3F00();
    sub_20A42C470(255);
    sub_20A42C43C(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26AC68AF0);
    }
  }
}

uint64_t sub_20A42C5C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A42C630(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_20A42C698()
{
  if (!qword_26AC6A190)
  {
    type metadata accessor for StockFeedLayoutModel();
    sub_20A42D8C0(&qword_26AC72240, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
    unint64_t v0 = sub_20A8C9160();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A190);
    }
  }
}

void sub_20A42C730(uint64_t a1)
{
}

void sub_20A42C764(uint64_t a1)
{
}

void sub_20A42C798()
{
  if (!qword_26AC7FCE8)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
    sub_20A42C050(255, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
    sub_20A42CA38((unint64_t *)&unk_26AC69F00, (unint64_t *)&qword_26AC69F10, v0);
    unint64_t v1 = sub_20A8CF4F0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AC7FCE8);
    }
  }
}

void sub_20A42C84C()
{
  if (!qword_26AC69738)
  {
    sub_20A42C4A4();
    sub_20A42D8C0(&qword_26AC69D78, 255, (void (*)(uint64_t))sub_20A42C4A4);
    sub_20A42D8C0(&qword_26AC69D70, 255, (void (*)(uint64_t))sub_20A42C4A4);
    unint64_t v0 = sub_20A8C5F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69738);
    }
  }
}

uint64_t sub_20A42C920@<X0>(uint64_t a1@<X8>)
{
  return sub_20A429D94(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_20A42C940@<X0>(uint64_t a1@<X8>)
{
  return sub_20A42983C(*(void *)(v1 + 24), a1);
}

uint64_t sub_20A42C960@<X0>(uint64_t a1@<X8>)
{
  return sub_20A427970(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_20A42C980()
{
  if (!qword_26AC7F680)
  {
    sub_20A42C764(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26AC7F680);
    }
  }
}

void sub_20A42C9F4(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_20A42CA38(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A42C050(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A42CA7C()
{
  if (!qword_26AC73FC0)
  {
    type metadata accessor for StockFeedMastheadModel();
    type metadata accessor for StockFeedMastheadViewLayoutAttributes();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC73FC0);
    }
  }
}

uint64_t sub_20A42CAEC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A427334(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

void sub_20A42CB10()
{
  if (!qword_26763AB28)
  {
    type metadata accessor for StockFeedMastheadModel();
    type metadata accessor for StockFeedMastheadViewLayoutAttributes();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763AB28);
    }
  }
}

void sub_20A42CB84(uint64_t a1)
{
}

void sub_20A42CBB8(uint64_t a1)
{
}

void sub_20A42CBEC(uint64_t a1)
{
}

void sub_20A42CC20(uint64_t a1)
{
}

uint64_t sub_20A42CC54(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_20A42CCB0(uint64_t a1)
{
}

unint64_t sub_20A42CCE4()
{
  unint64_t result = qword_26AC6B118;
  if (!qword_26AC6B118)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC6B118);
  }
  return result;
}

void sub_20A42CD3C(uint64_t a1)
{
}

void *sub_20A42CD70(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_20A42CDCC(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    id v3 = a3;
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_20A42CE0C()
{
  unint64_t result = qword_26AC69D68;
  if (!qword_26AC69D68)
  {
    sub_20A42C4A4();
    sub_20A42D8C0(&qword_26AC6D868, 255, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC69D68);
  }
  return result;
}

uint64_t sub_20A42CEB0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A428E94(a1, a2);
}

void sub_20A42CED0(uint64_t a1)
{
}

void sub_20A42CF04()
{
  if (!qword_26AC80108)
  {
    sub_20A42CF84(255, (unint64_t *)&qword_26AC7FA10, type metadata accessor for Key);
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC80108);
    }
  }
}

void sub_20A42CF84(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_20A42CFF0(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_20A42D02C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A5EBB70(a1, v1[2], v1[3], v1[4], v1[5]);
}

void sub_20A42D040(uint64_t a1)
{
}

void sub_20A42D074(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

unint64_t sub_20A42D0E4()
{
  unint64_t result = qword_26AC69EE8;
  if (!qword_26AC69EE8)
  {
    sub_20A42C050(255, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
    sub_20A42D8C0(&qword_26AC76F90, 255, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    sub_20A42D8C0(&qword_26AC6D868, 255, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC69EE8);
  }
  return result;
}

uint64_t sub_20A42D1E0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A428248(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), a1);
}

void sub_20A42D20C(uint64_t a1)
{
}

void sub_20A42D240()
{
  if (!qword_26AC6A2D8)
  {
    type metadata accessor for StockListLayoutModel();
    sub_20A42D2FC();
    sub_20A42D8C0((unint64_t *)&unk_26AC72550, 255, (void (*)(uint64_t))type metadata accessor for StockListLayoutModel);
    unint64_t v0 = sub_20A8C9870();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A2D8);
    }
  }
}

unint64_t sub_20A42D2FC()
{
  unint64_t result = qword_26AC7B470;
  if (!qword_26AC7B470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7B470);
  }
  return result;
}

void sub_20A42D350()
{
  if (!qword_26AC69F48)
  {
    type metadata accessor for StockListModel(255);
    sub_20A42D40C();
    sub_20A42D8C0(&qword_26AC6D950, 255, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unint64_t v0 = sub_20A8C8910();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69F48);
    }
  }
}

unint64_t sub_20A42D40C()
{
  unint64_t result = qword_26AC77118;
  if (!qword_26AC77118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC77118);
  }
  return result;
}

void sub_20A42D460()
{
  if (!qword_26AC6ACF0)
  {
    type metadata accessor for StockListModel(255);
    sub_20A42D40C();
    sub_20A42D8C0(&qword_26AC6D950, 255, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unint64_t v0 = sub_20A8CBB70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6ACF0);
    }
  }
}

void sub_20A42D51C()
{
  if (!qword_26AC7FD08)
  {
    sub_20A42D460();
    sub_20A42D8C0((unint64_t *)&unk_26AC6ACE0, 255, (void (*)(uint64_t))sub_20A42D460);
    unint64_t v0 = sub_20A8CF4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FD08);
    }
  }
}

void sub_20A42D5B4(uint64_t a1)
{
}

void sub_20A42D5E8()
{
  if (!qword_26763AB40)
  {
    type metadata accessor for ManageWatchlistsLayoutModel();
    sub_20A42D8C0(&qword_26763AB48, 255, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutModel);
    unint64_t v0 = sub_20A8C9160();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763AB40);
    }
  }
}

void sub_20A42D680()
{
  if (!qword_26763AB50)
  {
    type metadata accessor for ManageWatchlistsModel();
    sub_20A42D8C0((unint64_t *)&unk_26763D170, 255, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsModel);
    unint64_t v0 = sub_20A8C8350();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763AB50);
    }
  }
}

void sub_20A42D718()
{
  if (!qword_26763AB58)
  {
    type metadata accessor for ManageWatchlistsModel();
    sub_20A42D7D4();
    sub_20A42D8C0((unint64_t *)&unk_26763D170, 255, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsModel);
    unint64_t v0 = sub_20A8C8910();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763AB58);
    }
  }
}

unint64_t sub_20A42D7D4()
{
  unint64_t result = qword_26763AB60;
  if (!qword_26763AB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763AB60);
  }
  return result;
}

void sub_20A42D828()
{
  if (!qword_26763AB68)
  {
    sub_20A42D718();
    sub_20A42D8C0(&qword_26763AB70, 255, (void (*)(uint64_t))sub_20A42D718);
    unint64_t v0 = sub_20A8CF4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763AB68);
    }
  }
}

uint64_t sub_20A42D8C0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A42D908(uint64_t a1)
{
}

void sub_20A42D93C()
{
  if (!qword_26AC69DA0)
  {
    type metadata accessor for StockListModel(255);
    sub_20A42D8C0(&qword_26AC6D950, 255, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unint64_t v0 = sub_20A8C8350();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69DA0);
    }
  }
}

void sub_20A42D9D4()
{
  if (!qword_26AC67748)
  {
    sub_20A42C050(255, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC67748);
    }
  }
}

void sub_20A42DA48(uint64_t a1)
{
}

void sub_20A42DA7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A42DAE0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v53 = a1;
  uint64_t v5 = sub_20A8C4AB0();
  uint64_t v50 = *(void *)(v5 - 8);
  uint64_t v51 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v49 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42F2E4(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v43 - v8;
  uint64_t v10 = sub_20A8C2530();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v48 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v43 - v14;
  MEMORY[0x270FA5388](v16);
  uint64_t v52 = (char *)&v43 - v17;
  uint64_t v18 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (id *)((char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A430224();
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8CD380();
  uint64_t v24 = sub_20A8CD2C0();
  int v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v23, 1, v24);
  sub_20A4302D4((uint64_t)v23, (uint64_t (*)(void))sub_20A430224);
  if (v25 != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, 1, 1, v10);
  }
  uint64_t v47 = a2;
  sub_20A42FE00(v53, (uint64_t)v20, type metadata accessor for StocksActivity.Article);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_20A4302D4((uint64_t)v20, type metadata accessor for StocksActivity.Article);
LABEL_12:
    a2 = v47;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, 1, 1, v10);
  }
  id v26 = objc_msgSend(*v20, sel_contentURL);
  if (!v26)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_11;
  }
  uint64_t v27 = v26;
  sub_20A8C24E0();

  unint64_t v28 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v28(v9, v15, v10);
  int64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v29((uint64_t)v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_11:
    swift_unknownObjectRelease();
    sub_20A42FE68((uint64_t)v9, (uint64_t)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A42F2E4);
    goto LABEL_12;
  }
  uint64_t v46 = v29;
  uint64_t v53 = v11 + 56;
  unint64_t v44 = (void (*)(uint64_t, char *, uint64_t))v28;
  v28(v52, v9, v10);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
  sub_20A4301D4(0, &qword_26AC676A0);
  uint64_t result = sub_20A8C5BB0();
  if (v55)
  {
    sub_20A42BEBC(&v54, (uint64_t)v56);
    uint64_t v45 = v56[4];
    __swift_project_boxed_opaque_existential_1(v56, v56[3]);
    sub_20A42F2E4(0, &qword_26763E410, MEMORY[0x263F58B10], MEMORY[0x263F8E0F8]);
    uint64_t v31 = sub_20A8C4E70();
    uint64_t v32 = *(void *)(v31 - 8);
    unint64_t v33 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_20A8D3DC0;
    (*(void (**)(unint64_t, void, uint64_t))(v32 + 104))(v34 + v33, *MEMORY[0x263F58B08], v31);
    uint64_t v35 = v49;
    uint64_t v36 = v52;
    sub_20A8C4CE0();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
    uint64_t v38 = v50;
    uint64_t v37 = v51;
    int v39 = (*(uint64_t (**)(char *, uint64_t))(v50 + 88))(v35, v51);
    if (v39 == *MEMORY[0x263F589A0] || v39 == *MEMORY[0x263F58970])
    {
      (*(void (**)(char *, uint64_t))(v38 + 96))(v35, v37);
      uint64_t v40 = v48;
      BOOL v41 = v44;
      v44((uint64_t)v48, v35, v10);
      uint64_t v42 = v47;
      v41(v47, v40, v10);
      v46(v42, 0, 1, v10);
    }
    else
    {
      v46(v47, 1, 1, v10);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A42E22C(uint64_t a1, uint64_t a2)
{
  uint64_t v111 = a1;
  uint64_t v3 = sub_20A8C1FA0();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v95 = (char *)v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A42F2E4(0, (unint64_t *)&qword_26AC81270, MEMORY[0x263F58A10], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v99 = (char *)v92 - v7;
  uint64_t v98 = sub_20A8C4C40();
  uint64_t v100 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v94 = (char *)v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v96 = (char *)v92 - v10;
  sub_20A42F250();
  uint64_t v104 = v11;
  uint64_t v103 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v101 = v12;
  uint64_t v102 = (char *)v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_20A8C4AB0();
  uint64_t v106 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  uint64_t v105 = (char *)v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42F2E4(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], v5);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v97 = (char *)v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v92 - v17;
  uint64_t v19 = sub_20A8C2530();
  uint64_t v113 = *(void *)(v19 - 8);
  uint64_t v114 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v108 = (char *)v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)v92 - v22;
  MEMORY[0x270FA5388](v24);
  uint64_t v109 = (char *)v92 - v25;
  uint64_t v26 = sub_20A8C5390();
  uint64_t v110 = *(void (***)(char *, char *, uint64_t))(v26 - 8);
  MEMORY[0x270FA5388](v26);
  unint64_t v28 = (char *)v92 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_20A8C4DA0();
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (void *)((char *)v92 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)v92 - v33;
  uint64_t v35 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = (void **)((char *)v92 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A42FE00(a2, (uint64_t)v37, type metadata accessor for StocksActivity.Article);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_20A42FC8C();
    uint64_t v63 = (uint64_t)v37 + *(int *)(v62 + 64);
    sub_20A42FD20((uint64_t)v37, (uint64_t)v34);
    sub_20A42FD84(v63, (uint64_t)v120);
    sub_20A42FE00((uint64_t)v34, (uint64_t)v31, MEMORY[0x263F58AA8]);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v65 = *v31;
    if (EnumCaseMultiPayload != 1)
    {
      sub_20A42FEC8();
      uint64_t v67 = (char *)v31 + *(int *)(v66 + 48);
      uint64_t v68 = v110;
      v110[4](v28, v67, v26);
      double v69 = (void *)sub_20A42F3A4(v111, v65, (uint64_t)v28, (uint64_t)v120);
      swift_release();
      ((void (*)(char *, uint64_t))v68[1])(v28, v26);
      sub_20A42FE68((uint64_t)v120, (uint64_t)&qword_26AC79B50, (uint64_t)&unk_26AC79B40, (uint64_t)&protocol descriptor for ArticleScienceDataProviderType, (uint64_t (*)(void))sub_20A42FC30);
      sub_20A4302D4((uint64_t)v34, MEMORY[0x263F58AA8]);
      return (uint64_t)v69;
    }
    swift_release();
    sub_20A42FE68((uint64_t)v120, (uint64_t)&qword_26AC79B50, (uint64_t)&unk_26AC79B40, (uint64_t)&protocol descriptor for ArticleScienceDataProviderType, (uint64_t (*)(void))sub_20A42FC30);
    sub_20A4302D4((uint64_t)v34, MEMORY[0x263F58AA8]);
    return 0;
  }
  uint64_t v38 = *v37;
  uint64_t ObjectType = swift_getObjectType();
  id v40 = objc_msgSend(v38, sel_contentURL);
  if (!v40)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v113 + 56))(v18, 1, 1, v114);
    goto LABEL_14;
  }
  BOOL v41 = v40;
  sub_20A8C24E0();

  uint64_t v42 = v113;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v113 + 32);
  unint64_t v44 = v23;
  uint64_t v45 = v114;
  v43(v18, v44, v114);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v18, 0, 1, v45);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v18, 1, v45) == 1)
  {
LABEL_14:
    swift_unknownObjectRelease();
    sub_20A42FE68((uint64_t)v18, (uint64_t)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A42F2E4);
    return 0;
  }
  v92[1] = ObjectType;
  uint64_t v110 = (void (**)(char *, char *, uint64_t))v38;
  uint64_t v46 = v109;
  v43(v109, v18, v45);
  uint64_t v47 = *(void *)(v112 + 40);
  uint64_t v93 = (void *)(v112 + 16);
  __swift_project_boxed_opaque_existential_1((void *)(v112 + 16), v47);
  sub_20A4301D4(0, &qword_26AC676A0);
  sub_20A8C5BB0();
  if (!v119)
  {
    __break(1u);
    goto LABEL_33;
  }
  sub_20A42BEBC(&v118, (uint64_t)v120);
  __swift_project_boxed_opaque_existential_1(v120, v120[3]);
  sub_20A42F2E4(0, &qword_26763E410, MEMORY[0x263F58B10], MEMORY[0x263F8E0F8]);
  uint64_t v48 = sub_20A8C4E70();
  uint64_t v49 = *(void *)(v48 - 8);
  unint64_t v50 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, void, uint64_t))(v49 + 104))(v51 + v50, *MEMORY[0x263F58B08], v48);
  uint64_t v52 = v105;
  sub_20A8C4CE0();
  swift_bridgeObjectRelease();
  uint64_t v53 = v106;
  uint64_t v54 = v107;
  if ((*(unsigned int (**)(char *, uint64_t))(v106 + 88))(v52, v107) != *MEMORY[0x263F58990])
  {
    (*(void (**)(char *, uint64_t))(v113 + 8))(v46, v114);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v54);
LABEL_26:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v120);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v53 + 96))(v52, v54);
  v43(v108, v52, v114);
  uint64_t v55 = v104;
  uint64_t v56 = v111;
  sub_20A8CB4C0();
  if (!v119)
  {
    sub_20A4302D4((uint64_t)&v118, (uint64_t (*)(void))sub_20A42F348);
    uint64_t v58 = v93;
    goto LABEL_17;
  }
  sub_20A8C4990();
  char v57 = swift_dynamicCast();
  uint64_t v58 = v93;
  if ((v57 & 1) == 0)
  {
LABEL_17:
    uint64_t v61 = 0;
    goto LABEL_18;
  }
  uint64_t v59 = v115;
  __swift_project_boxed_opaque_existential_1(v93, *(void *)(v112 + 40));
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E50);
  sub_20A8C5BB0();
  if (!v119)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  type metadata accessor for WebViewCoordinator();
  swift_allocObject();
  uint64_t v60 = (uint64_t)v110;
  swift_unknownObjectRetain();
  uint64_t v61 = sub_20A5F07F8(v59, v60, (uint64_t)&v118);
  swift_release();
  swift_unknownObjectRelease();
LABEL_18:
  __swift_project_boxed_opaque_existential_1(v58, *(void *)(v112 + 40));
  sub_20A4301D4(0, (unint64_t *)&unk_26AC78CA0);
  uint64_t v70 = v103;
  uint64_t v71 = v102;
  (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v102, v56, v55);
  unint64_t v72 = (*(unsigned __int8 *)(v70 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
  uint64_t v73 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v70 + 32))(v73 + v72, v71, v55);
  sub_20A8C5B90();
  swift_release();
  if (!*((void *)&v116 + 1))
  {
LABEL_33:
    swift_release();
    __break(1u);
    goto LABEL_34;
  }
  sub_20A42BEBC(&v115, (uint64_t)&v118);
  __swift_project_boxed_opaque_existential_1(&v118, v119);
  uint64_t v74 = v100;
  uint64_t v75 = (uint64_t)v99;
  uint64_t v76 = (uint64_t)v108;
  if (v61)
  {
    *((void *)&v116 + 1) = type metadata accessor for WebViewCoordinator();
    uint64_t v117 = &off_26BE676A8;
    *(void *)&long long v115 = v61;
  }
  else
  {
    uint64_t v117 = 0;
    long long v115 = 0u;
    long long v116 = 0u;
  }
  swift_retain();
  double v69 = sub_20A5B06E8(v76, (uint64_t)&v115);
  sub_20A42FE68((uint64_t)&v115, (uint64_t)&qword_26763AB80, (uint64_t)&qword_26763C420, (uint64_t)&protocol descriptor for WebViewCoordinatorType, (uint64_t (*)(void))sub_20A42FC30);
  if (!v69)
  {
    swift_release();
    swift_unknownObjectRelease();
    uint64_t v81 = v114;
    uint64_t v82 = v76;
    uint64_t v83 = *(void (**)(uint64_t, uint64_t))(v113 + 8);
    v83(v82, v114);
    v83((uint64_t)v109, v81);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v118);
    goto LABEL_26;
  }
  objc_msgSend(v69, sel_setModalPresentationStyle_, 3);
  swift_unknownObjectRetain();
  sub_20A8CECA0();
  sub_20A8C4C20();
  uint64_t v77 = v98;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v75, 1, v98) == 1)
  {
    swift_release();
    swift_unknownObjectRelease();
    uint64_t v78 = v114;
    uint64_t v79 = v76;
    uint64_t v80 = *(void (**)(uint64_t, uint64_t))(v113 + 8);
    v80(v79, v114);
    v80((uint64_t)v109, v78);
    sub_20A42FE68(v75, (uint64_t)&qword_26AC81270, MEMORY[0x263F58A10], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A42F2E4);
LABEL_31:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v118);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v120);
    return (uint64_t)v69;
  }
  uint64_t v85 = v96;
  (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))(v96, v75, v77);
  id v86 = objc_msgSend(v69, sel_view);
  if (v86)
  {
    uint64_t v87 = v86;
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v94, v85, v77);
    sub_20A8C1F90();
    id v88 = objc_allocWithZone((Class)sub_20A8C7D10());
    sub_20A43010C(&qword_26AC81268, MEMORY[0x263F58A10]);
    double v89 = (void *)sub_20A8C7D00();
    sub_20A8CEE70();
    swift_release();
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v74 + 8))(v85, v77);
    uint64_t v90 = v114;
    uint64_t v91 = *(void (**)(char *, uint64_t))(v113 + 8);
    v91(v108, v114);
    v91(v109, v90);
    goto LABEL_31;
  }
LABEL_35:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_20A42F250()
{
  if (!qword_26AC6AAD8)
  {
    type metadata accessor for StocksActivity(255);
    sub_20A43010C((unint64_t *)&unk_26AC6C730, (void (*)(uint64_t))type metadata accessor for StocksActivity);
    unint64_t v0 = sub_20A8CB4D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6AAD8);
    }
  }
}

void sub_20A42F2E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A42F348()
{
  if (!qword_26AC80170)
  {
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC80170);
    }
  }
}

uint64_t sub_20A42F3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v45 = a4;
  v38[1] = a3;
  uint64_t v49 = a2;
  uint64_t v7 = sub_20A8CA750();
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (uint64_t (**)())((char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A42F250();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v10);
  unint64_t v44 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_20A8C4A80();
  uint64_t v47 = *(void *)(v14 - 8);
  uint64_t v48 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8C4850();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (void *)((char *)v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v43 = v11;
  uint64_t v46 = a1;
  sub_20A8CB4C0();
  BOOL v41 = v9;
  if (v53)
  {
    sub_20A8C4990();
    if (swift_dynamicCast())
    {
      *uint64_t v20 = 0x656C6369747261;
      v20[1] = 0xE700000000000000;
      (*(void (**)(void *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x263F24E38], v17);
      sub_20A8C5740();
      sub_20A8C4A60();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v16, v48);
      sub_20A8C4950();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v18 + 8))(v20, v17);
    }
  }
  else
  {
    sub_20A4302D4((uint64_t)v52, (uint64_t (*)(void))sub_20A42F348);
  }
  uint64_t v21 = v5[5];
  uint64_t v42 = v5[6];
  __swift_project_boxed_opaque_existential_1(v5 + 2, v21);
  sub_20A4301D4(0, &qword_26AC694B0);
  sub_20A42FF3C(v45, (uint64_t)v52);
  uint64_t v22 = v43;
  uint64_t v23 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v44, v46, v43);
  unint64_t v24 = (*(unsigned __int8 *)(v12 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v49;
  sub_20A42FD84((uint64_t)v52, v25 + 24);
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v25 + v24, v23, v22);
  swift_retain();
  sub_20A8C5B90();
  uint64_t result = swift_release();
  if (v51)
  {
    sub_20A42BEBC(&v50, (uint64_t)v52);
    __swift_project_boxed_opaque_existential_1(v52, v53);
    sub_20A8C5760();
    uint64_t v27 = (void *)sub_20A8C53A0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
    sub_20A8C5740();
    sub_20A8C4A60();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v16, v48);
    sub_20A8C55A0();
    swift_bridgeObjectRelease();
    uint64_t v28 = sub_20A43010C(&qword_26AC69518, MEMORY[0x263F58DB8]);
    id v29 = objc_allocWithZone((Class)sub_20A8C9370());
    id v30 = v27;
    id v31 = objc_msgSend(v29, sel_initWithRootViewController_, v30);
    sub_20A8CAC70();
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v30;
    *(void *)(v32 + 24) = v28;
    uint64_t v33 = v40;
    uint64_t v34 = v41;
    void *v41 = sub_20A43018C;
    v34[1] = (uint64_t (*)())v32;
    (*(void (**)(uint64_t (**)(), void, uint64_t))(v39 + 104))(v34, *MEMORY[0x263F7DD00], v33);
    id v35 = v30;
    id v36 = v31;
    uint64_t v37 = sub_20A8CAC40();
    sub_20A8CAC50();
    sub_20A8CAC60();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
    return v37;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A42F9BC(uint64_t a1)
{
  sub_20A42F250();
  uint64_t v2 = (void (*)(uint64_t))sub_20A8CB4A0();
  v2(a1);

  return swift_release();
}

uint64_t sub_20A42FA14()
{
  sub_20A42F250();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_20A42FAA4(uint64_t a1)
{
  sub_20A42F250();

  return sub_20A42F9BC(a1);
}

uint64_t sub_20A42FB14(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C5750();
  sub_20A4301D4(0, &qword_26AC694D8);
  sub_20A8C5A10();
  swift_unknownObjectRelease();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC79B40);
  sub_20A8C5A10();
  sub_20A42F250();
  uint64_t v2 = (void (*)(void *))sub_20A8CB4A0();
  v2(a1);
  return swift_release();
}

void sub_20A42FC30(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_20A4301D4(255, a3);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_20A42FC8C()
{
  if (!qword_26AC693F0)
  {
    sub_20A8C4DA0();
    sub_20A42FC30(255, (unint64_t *)&qword_26AC79B50, (unint64_t *)&unk_26AC79B40);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26AC693F0);
    }
  }
}

uint64_t sub_20A42FD20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C4DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A42FD84(uint64_t a1, uint64_t a2)
{
  sub_20A42FC30(0, (unint64_t *)&qword_26AC79B50, (unint64_t *)&unk_26AC79B40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A42FE00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A42FE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_20A42FEC8()
{
  if (!qword_26AC81280)
  {
    sub_20A8C5770();
    sub_20A8C5390();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC81280);
    }
  }
}

uint64_t sub_20A42FF3C(uint64_t a1, uint64_t a2)
{
  sub_20A42FC30(0, (unint64_t *)&qword_26AC79B50, (unint64_t *)&unk_26AC79B40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A42FFB8()
{
  sub_20A42F250();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  swift_release();
  if (*(void *)(v0 + 48)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + ((v4 + 64) & ~v4), v2);

  return swift_deallocObject();
}

uint64_t sub_20A430094(void *a1)
{
  sub_20A42F250();

  return sub_20A42FB14(a1);
}

uint64_t sub_20A43010C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A430154()
{
  return swift_deallocObject();
}

uint64_t sub_20A43018C()
{
  return sub_20A8C5B30();
}

uint64_t sub_20A4301D4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_20A430224()
{
  if (!qword_26AC6B1D0)
  {
    sub_20A430280();
    unint64_t v0 = sub_20A8CD370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6B1D0);
    }
  }
}

unint64_t sub_20A430280()
{
  unint64_t result = qword_26AC70BB0;
  if (!qword_26AC70BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC70BB0);
  }
  return result;
}

uint64_t sub_20A4302D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_20A430334(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C2800();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *((unsigned char *)v4 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t sub_20A430438(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_20A8C2800();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_20A4304B0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C2800();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_20A430564(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2800();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_20A430614(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2800();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_20A4306AC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C2800();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_20A43074C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A430760);
}

uint64_t sub_20A430760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C2800();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_20A430810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A430824);
}

uint64_t sub_20A430824(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_20A8C2800();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for WebViewSession()
{
  uint64_t result = qword_26763AB88;
  if (!qword_26763AB88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A430918()
{
  uint64_t result = sub_20A8C2800();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NewsSource(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WebViewSession.Trigger(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A430B14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_20A430B3C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_20A430B48(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for WebViewSession.Trigger()
{
  return &type metadata for WebViewSession.Trigger;
}

unint64_t sub_20A430B68()
{
  unint64_t result = qword_26763AB98;
  if (!qword_26763AB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763AB98);
  }
  return result;
}

BOOL sub_20A430BBC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_20A430BD4()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A430C1C()
{
  return sub_20A8CF890();
}

uint64_t sub_20A430C48()
{
  return sub_20A8CF8C0();
}

void sub_20A430C8C(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  unsigned int v4 = v3;
  uint64_t v66 = a1;
  BOOL v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A431E10(0, &qword_26AC6AD48, MEMORY[0x263F81FA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v60 - v9;
  sub_20A431E10(0, &qword_26AC68C60, MEMORY[0x263F06828], v7);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v63 = (char *)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v60 - v14;
  MEMORY[0x270FA5388](v16);
  double v64 = (char *)v60 - v17;
  uint64_t v61 = sub_20A8CEFB0();
  v60[2] = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  v60[1] = (char *)v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_20A8CF110();
  uint64_t v19 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v21 = (char *)v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A431E10(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D3DC0;
  uint64_t v23 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  int v68 = a2;
  uint64_t v65 = v15;
  uint64_t v62 = v10;
  unint64_t v24 = sub_20A431DD0();
  swift_bridgeObjectRetain();
  id v25 = v23;
  uint64_t v26 = sub_20A8CEE20();
  sub_20A431DD0();
  *(void *)(inited + 64) = v24;
  *(void *)(inited + 40) = v26;
  sub_20A4CF8B0(inited);
  id v27 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v28 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A431EA4((unint64_t *)&qword_26AC7F9F8, type metadata accessor for Key);
  id v29 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v30 = objc_msgSend(v27, sel_initWithString_attributes_, v28, v29);

  if ((_BYTE)v68)
  {
    sub_20A8CF0F0();
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(a3, v21, v67);
    uint64_t v32 = v4[5];
    uint64_t v31 = v4[6];
    __swift_project_boxed_opaque_existential_1(v4 + 2, v32);
    (*(void (**)(uint64_t))(*(void *)(v31 + 16) + 96))(v32);
    sub_20A8CF080();
    uint64_t v33 = (void (*)(unsigned char *, void))sub_20A8CEFF0();
    *(void *)(v34 + 8) = 0;
    v33(v69, 0);
    id v35 = (void (*)(unsigned char *, void))sub_20A8CEFF0();
    *(void *)(v36 + 24) = 0;
    v35(v69, 0);
    swift_getKeyPath();
    sub_20A8C22B0();
    sub_20A431EA4(&qword_26AC68C58, MEMORY[0x263F81DA8]);
    id v37 = v30;
    uint64_t v38 = v63;
    sub_20A8C2340();
    uint64_t v53 = sub_20A8C2330();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v38, 0, 1, v53);
    sub_20A8CF050();
    uint64_t v54 = (void *)sub_20A8CEE20();
    id v57 = objc_msgSend(self, sel_configurationWithFont_scale_, v54, 1);

    sub_20A8CEF80();
  }
  else
  {
    sub_20A8CF0F0();
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(a3, v21, v67);
    uint64_t v40 = v4[5];
    uint64_t v39 = v4[6];
    __swift_project_boxed_opaque_existential_1(v4 + 2, v40);
    (*(void (**)(uint64_t))(*(void *)(v39 + 16) + 224))(v40);
    sub_20A8CF080();
    uint64_t v42 = v4[5];
    uint64_t v41 = v4[6];
    __swift_project_boxed_opaque_existential_1(v4 + 2, v42);
    uint64_t v43 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v41 + 16) + 232))(v42);
    *(void *)(swift_allocObject() + 16) = v43;
    id v44 = v43;
    uint64_t v45 = v62;
    sub_20A8CBDB0();
    uint64_t v46 = sub_20A8CBDA0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 0, 1, v46);
    sub_20A8CF090();
    uint64_t v47 = (void (*)(unsigned char *, void))sub_20A8CEFF0();
    *(void *)(v48 + 8) = 0x4024000000000000;
    v47(v69, 0);
    uint64_t v49 = (void (*)(unsigned char *, void))sub_20A8CEFF0();
    *(void *)(v50 + 24) = 0x4024000000000000;
    v49(v69, 0);
    swift_getKeyPath();
    sub_20A8C22B0();
    sub_20A431EA4(&qword_26AC68C58, MEMORY[0x263F81DA8]);
    id v51 = v30;
    uint64_t v52 = v65;
    sub_20A8C2340();
    uint64_t v55 = sub_20A8C2330();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v52, 0, 1, v55);
    sub_20A8CF050();
    id v56 = objc_msgSend(self, sel_configurationWithPointSize_weight_, 6, 11.0);
    sub_20A8CEF80();
  }
  sub_20A8CF060();
  uint64_t v58 = (void *)sub_20A8CE240();
  id v59 = objc_msgSend(self, sel_systemImageNamed_, v58);

  sub_20A8CF0E0();
  sub_20A8CF030();
  sub_20A8CEFE0();
}

uint64_t type metadata accessor for WatchlistSwitcherStyler()
{
  return self;
}

void sub_20A4318DC(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
}

uint64_t sub_20A431904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 40);
  uint64_t v8 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  uint64_t v12 = v10(a1, v7, v9);
  double v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A431A50((uint64_t)v15, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

uint64_t sub_20A431A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  uint64_t v7 = swift_allocObject();
  sub_20A42BEBC(&v9, v7 + 16);
  return v7;
}

uint64_t sub_20A431AE8(void *a1, char a2)
{
  if (objc_msgSend(a1, sel_userInterfaceIdiom) == (id)5) {
    return 0;
  }
  id v5 = objc_msgSend(a1, sel_horizontalSizeClass);
  if (a2) {
    unsigned int v6 = 1;
  }
  else {
    unsigned int v6 = 2;
  }
  if (v5 == (id)2) {
    return v6;
  }
  else {
    return 1;
  }
}

id sub_20A431B4C()
{
  sub_20A431E10(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D3DC0;
  unint64_t v1 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  unint64_t v2 = sub_20A431DD0();
  swift_bridgeObjectRetain();
  id v3 = v1;
  uint64_t v4 = sub_20A8CEE20();
  sub_20A431DD0();
  *(void *)(inited + 64) = v2;
  *(void *)(inited + 40) = v4;
  sub_20A4CF8B0(inited);
  id v5 = objc_allocWithZone(MEMORY[0x263F086A0]);
  unsigned int v6 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A431EA4((unint64_t *)&qword_26AC7F9F8, type metadata accessor for Key);
  uint64_t v7 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v5, sel_initWithString_attributes_, v6, v7);

  return v8;
}

void sub_20A431D64()
{
  if (!qword_26AC7FA10)
  {
    type metadata accessor for Key(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC7FA10);
    }
  }
}

unint64_t sub_20A431DD0()
{
  unint64_t result = qword_26AC7FB80;
  if (!qword_26AC7FB80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC7FB80);
  }
  return result;
}

void sub_20A431E10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A431E74@<X0>(uint64_t *a1@<X8>)
{
  sub_20A8C22C0();
  uint64_t result = sub_20A8C22B0();
  *a1 = result;
  return result;
}

uint64_t sub_20A431EA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A431EEC()
{
  return swift_deallocObject();
}

id sub_20A431F24()
{
  return *(id *)(v0 + 16);
}

uint64_t *sub_20A431F2C(uint64_t *a1, uint64_t *a2)
{
  sub_20A433370(0, &qword_26AC6B1B8, MEMORY[0x263F59BC8]);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t v7 = sub_20A8CD320();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_20A43209C(uint64_t a1)
{
  uint64_t v2 = sub_20A8CD320();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_20A43216C(void *a1, const void *a2)
{
  uint64_t v4 = sub_20A8CD320();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_20A433370(0, &qword_26AC6B1B8, MEMORY[0x263F59BC8]);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_20A432294(void *a1, void *a2)
{
  uint64_t v4 = sub_20A8CD320();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    sub_20A433370(0, &qword_26AC6B1B8, MEMORY[0x263F59BC8]);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *sub_20A432428(void *a1, const void *a2)
{
  uint64_t v4 = sub_20A8CD320();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_20A433370(0, &qword_26AC6B1B8, MEMORY[0x263F59BC8]);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_20A432550(void *a1, void *a2)
{
  uint64_t v4 = sub_20A8CD320();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    sub_20A433370(0, &qword_26AC6B1B8, MEMORY[0x263F59BC8]);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_20A4326E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A4326F8);
}

uint64_t sub_20A4326F8(uint64_t a1, uint64_t a2)
{
  sub_20A433370(0, &qword_26AC6B1B8, MEMORY[0x263F59BC8]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A432780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A432794);
}

uint64_t sub_20A432794(uint64_t a1, uint64_t a2)
{
  sub_20A433370(0, &qword_26AC6B1B8, MEMORY[0x263F59BC8]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for NewsStockFeedGroupConfigData()
{
  uint64_t result = qword_26AC78668;
  if (!qword_26AC78668) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A43286C()
{
  sub_20A433370(319, &qword_26AC6B1B8, MEMORY[0x263F59BC8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_20A432914@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  sub_20A433370(0, &qword_26AC6B1B8, MEMORY[0x263F59BC8]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - v5;
  sub_20A433564(0, &qword_26AC7FE38, MEMORY[0x263F8E040]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A433490();
  sub_20A8CF8E0();
  if (!v2)
  {
    uint64_t v12 = v15;
    sub_20A8CD320();
    sub_20A4335C8(&qword_26AC6B1B0, MEMORY[0x263F59BC8]);
    sub_20A8CF610();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_20A4334E4((uint64_t)v6, v12);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_20A432B48()
{
  return 1;
}

uint64_t sub_20A432B50()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A432B94()
{
  return sub_20A8CF890();
}

uint64_t sub_20A432BBC()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A432BFC()
{
  return 0x746E65746E6F63;
}

uint64_t sub_20A432C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20A8CF760();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20A432CAC()
{
  return 0;
}

void sub_20A432CB8(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_20A432CC4(uint64_t a1)
{
  unint64_t v2 = sub_20A433490();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A432D00(uint64_t a1)
{
  unint64_t v2 = sub_20A433490();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20A432D3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A432914(a1, a2);
}

uint64_t sub_20A432D54(void *a1)
{
  sub_20A433564(0, &qword_26763ABA0, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A433490();
  sub_20A8CF8F0();
  sub_20A8CD320();
  sub_20A4335C8(&qword_26763ABA8, MEMORY[0x263F59BC8]);
  sub_20A8CF6A0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_20A432EDC()
{
  uint64_t v27 = type metadata accessor for NewsStockFeedGroupConfigData();
  MEMORY[0x270FA5388](v27);
  uint64_t v26 = (char *)&v22 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_20A8CCD40();
  uint64_t v1 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  unint64_t v24 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A433370(0, (unint64_t *)&qword_26AC82450, MEMORY[0x263F7D030]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v23 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v22 - v6;
  uint64_t v8 = sub_20A8CCC20();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8C2830();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4333C4();
  uint64_t v17 = v16;
  __swift_allocate_value_buffer(v16, qword_26AC9ED08);
  __swift_project_value_buffer(v17, (uint64_t)qword_26AC9ED08);
  sub_20A8C2820();
  uint64_t v22 = sub_20A8C2810();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F599B0], v8);
  uint64_t v18 = sub_20A8C6610();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v7, 1, 1, v18);
  v19(v23, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v24, *MEMORY[0x263F599E0], v25);
  uint64_t v20 = sub_20A8CD320();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v26, 1, 1, v20);
  sub_20A4335C8(&qword_26AC78660, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupConfigData);
  sub_20A4335C8(&qword_26AC78658, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupConfigData);
  return sub_20A8CC570();
}

void sub_20A433370(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_20A4333C4()
{
  if (!qword_26AC677A8)
  {
    type metadata accessor for NewsStockFeedGroupConfigData();
    sub_20A4335C8(&qword_26AC78660, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupConfigData);
    sub_20A4335C8(&qword_26AC78658, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupConfigData);
    unint64_t v0 = sub_20A8CC590();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC677A8);
    }
  }
}

unint64_t sub_20A433490()
{
  unint64_t result = qword_26AC78640;
  if (!qword_26AC78640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC78640);
  }
  return result;
}

uint64_t sub_20A4334E4(uint64_t a1, uint64_t a2)
{
  sub_20A433370(0, &qword_26AC6B1B8, MEMORY[0x263F59BC8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20A433564(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A433490();
    unint64_t v7 = a3(a1, &type metadata for NewsStockFeedGroupConfigData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A4335C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NewsStockFeedGroupConfigData.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for NewsStockFeedGroupConfigData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A4336FCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A433724()
{
  return 0;
}

ValueMetadata *type metadata accessor for NewsStockFeedGroupConfigData.CodingKeys()
{
  return &type metadata for NewsStockFeedGroupConfigData.CodingKeys;
}

unint64_t sub_20A433740()
{
  unint64_t result = qword_26763ABB0;
  if (!qword_26763ABB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763ABB0);
  }
  return result;
}

unint64_t sub_20A433798()
{
  unint64_t result = qword_26AC78650;
  if (!qword_26AC78650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC78650);
  }
  return result;
}

unint64_t sub_20A4337F0()
{
  unint64_t result = qword_26AC78648;
  if (!qword_26AC78648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC78648);
  }
  return result;
}

uint64_t type metadata accessor for ManageWatchlistsStyler()
{
  return self;
}

uint64_t sub_20A433868()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ForYouFeedBlueprintModifierFactory()
{
  return self;
}

uint64_t sub_20A4338D4()
{
  return sub_20A4343C0(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
}

uint64_t sub_20A43391C()
{
  return sub_20A4343C0((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
}

uint64_t sub_20A433964()
{
  return sub_20A8C8BA0();
}

uint64_t sub_20A4339D0()
{
  return sub_20A8C8BA0();
}

uint64_t sub_20A433A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for ForYouFeedExpandBlueprintModifier();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (uint64_t *)((char *)&v20 - v13);
  uint64_t v15 = *v4;
  sub_20A4342F4(v15 + 16, (uint64_t)&v20 - v13);
  sub_20A4342F4(v15 + 56, (uint64_t)(v14 + 8));
  uint64_t v16 = (char *)v14 + *(int *)(v9 + 28);
  uint64_t v17 = sub_20A8C3410();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v16, a4, v17);
  v14[5] = a1;
  v14[6] = a2;
  v14[7] = a3;
  sub_20A434358((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ForYouFeedExpandBlueprintModifier);
  sub_20A43410C();
  swift_allocObject();
  sub_20A4343C0(&qword_26AC7B7B0, (void (*)(uint64_t))type metadata accessor for ForYouFeedExpandBlueprintModifier);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v18 = sub_20A8C8BA0();
  sub_20A434408((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ForYouFeedExpandBlueprintModifier);
  return v18;
}

uint64_t sub_20A433C04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ForYouFeedPriceChangeDisplayBlueprintModifier();
  MEMORY[0x270FA5388](v2);
  unsigned int v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (uint64_t *)((char *)&v13 - v6);
  uint64_t v9 = (char *)&v13 + *(int *)(v8 + 20) - v6;
  uint64_t v10 = sub_20A8C3410();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, a1, v10);
  *unint64_t v7 = 0xD000000000000012;
  v7[1] = 0x800000020A8F8AC0;
  sub_20A434358((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ForYouFeedPriceChangeDisplayBlueprintModifier);
  sub_20A43410C();
  swift_allocObject();
  sub_20A4343C0(&qword_26AC818A0, (void (*)(uint64_t))type metadata accessor for ForYouFeedPriceChangeDisplayBlueprintModifier);
  uint64_t v11 = sub_20A8C8BA0();
  sub_20A434408((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ForYouFeedPriceChangeDisplayBlueprintModifier);
  return v11;
}

uint64_t sub_20A433D9C(uint64_t a1, uint64_t a2)
{
  uint64_t refreshed = type metadata accessor for ForYouFeedRefreshBlueprintModifier();
  MEMORY[0x270FA5388](refreshed);
  unint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (uint64_t *)((char *)&v16 - v9);
  uint64_t v11 = *v2;
  sub_20A4342F4(v11 + 16, (uint64_t)&v16 - v9 + 16);
  sub_20A4342F4(v11 + 56, (uint64_t)(v10 + 8));
  uint64_t v12 = (char *)v10 + *(int *)(refreshed + 32);
  uint64_t v13 = sub_20A8C3410();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v12, a2, v13);
  *uint64_t v10 = 0x68736572666552;
  v10[1] = 0xE700000000000000;
  v10[7] = a1;
  sub_20A434358((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ForYouFeedRefreshBlueprintModifier);
  sub_20A43410C();
  swift_allocObject();
  sub_20A4343C0(&qword_26AC7C698, (void (*)(uint64_t))type metadata accessor for ForYouFeedRefreshBlueprintModifier);
  swift_retain();
  uint64_t v14 = sub_20A8C8BA0();
  sub_20A434408((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ForYouFeedRefreshBlueprintModifier);
  return v14;
}

uint64_t sub_20A433F68()
{
  return sub_20A8C8BA0();
}

uint64_t sub_20A433FD0()
{
  return sub_20A8C8BA0();
}

uint64_t sub_20A434064()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 96);
  sub_20A43410C();
  swift_allocObject();
  sub_20A4341F8();
  swift_bridgeObjectRetain();
  swift_retain();
  id v2 = v1;
  return sub_20A8C8BA0();
}

void sub_20A43410C()
{
  if (!qword_26AC69FD0)
  {
    type metadata accessor for ForYouFeedSectionDescriptor();
    type metadata accessor for ForYouFeedModel();
    sub_20A4343C0(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
    sub_20A4343C0((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
    unint64_t v0 = sub_20A8C8BB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69FD0);
    }
  }
}

unint64_t sub_20A4341F8()
{
  unint64_t result = qword_26AC81C78;
  if (!qword_26AC81C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC81C78);
  }
  return result;
}

unint64_t sub_20A43424C()
{
  unint64_t result = qword_26AC7E298;
  if (!qword_26AC7E298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7E298);
  }
  return result;
}

unint64_t sub_20A4342A0()
{
  unint64_t result = qword_26AC81C88;
  if (!qword_26AC81C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC81C88);
  }
  return result;
}

uint64_t sub_20A4342F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_20A434358(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A4343C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A434408(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_20A434468()
{
  unint64_t result = qword_26AC80F78;
  if (!qword_26AC80F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC80F78);
  }
  return result;
}

unint64_t sub_20A4344BC()
{
  unint64_t result = qword_26AC7C690;
  if (!qword_26AC7C690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7C690);
  }
  return result;
}

void *sub_20A434510(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    long long v5 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v5;
    long long v6 = *((_OWORD *)a2 + 3);
    a1[2] = *((_OWORD *)a2 + 2);
    a1[3] = v6;
    long long v7 = *((_OWORD *)a2 + 5);
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    a1[4] = *((_OWORD *)a2 + 4);
    a1[5] = v7;
    uint64_t v11 = sub_20A8CAC10();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return v3;
}

uint64_t sub_20A4345EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 28);
  uint64_t v3 = sub_20A8CAC10();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

_OWORD *sub_20A434654(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  long long v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v10 = sub_20A8CAC10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

void *sub_20A4346E0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  uint64_t v4 = *(int *)(a3 + 28);
  long long v5 = (char *)a1 + v4;
  long long v6 = (char *)a2 + v4;
  uint64_t v7 = sub_20A8CAC10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_20A4347B4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  long long v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v10 = sub_20A8CAC10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

_OWORD *sub_20A434840(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  long long v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v10 = sub_20A8CAC10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_20A4348CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A4348E0);
}

uint64_t sub_20A4348E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 28);
  uint64_t v5 = sub_20A8CAC10();
  long long v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_20A434950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A434964);
}

uint64_t sub_20A434964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 28);
  uint64_t v6 = sub_20A8CAC10();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t type metadata accessor for SectionHeaderViewLayoutAttributes()
{
  uint64_t result = qword_26AC7BD20;
  if (!qword_26AC7BD20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A434A24()
{
  uint64_t result = sub_20A8CAC10();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A434AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_20A8CAC10();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_20A434B34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F7DD78];
  uint64_t v3 = sub_20A8CA9F0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

double sub_20A434BAC()
{
  return *(double *)v0;
}

uint64_t sub_20A434BC8()
{
  sub_20A434CA8(&qword_26AC80F58);

  return sub_20A8CACE0();
}

uint64_t sub_20A434C20()
{
  return sub_20A8CA6C0();
}

uint64_t sub_20A434C40()
{
  return sub_20A434CA8(&qword_26AC80F60);
}

uint64_t sub_20A434C74()
{
  return sub_20A434CA8(&qword_26AC80F58);
}

uint64_t sub_20A434CA8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SectionHeaderViewLayoutAttributes();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LayoutSizeClass(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LayoutSizeClass(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A434E48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_20A434E70(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for LayoutSizeClass()
{
  return &type metadata for LayoutSizeClass;
}

unint64_t sub_20A434E8C()
{
  unint64_t result = qword_26763ABB8;
  if (!qword_26763ABB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763ABB8);
  }
  return result;
}

BOOL sub_20A434EE0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_20A434EF4()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManageWatchlistsTracker()
{
  return self;
}

char *sub_20A434F50(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC8StocksUI9TodayView_titleLabel;
  id v11 = objc_allocWithZone(MEMORY[0x263F828E0]);
  uint64_t v12 = v4;
  *(void *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v13 = OBJC_IVAR____TtC8StocksUI9TodayView_brandingLabel;
  *(void *)&v12[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v12[OBJC_IVAR____TtC8StocksUI9TodayView_isSelectable] = 1;
  v12[OBJC_IVAR____TtC8StocksUI9TodayView_isSelected] = 0;
  v12[OBJC_IVAR____TtC8StocksUI9TodayView_isHighlightable] = 1;
  v12[OBJC_IVAR____TtC8StocksUI9TodayView_isHighlighted] = 0;
  uint64_t v14 = OBJC_IVAR____TtC8StocksUI9TodayView_isEditing;
  char v25 = 0;
  sub_20A435BE0(0, (unint64_t *)&unk_26AC6AA78, MEMORY[0x263F8D4F8], MEMORY[0x263F7DFF8]);
  swift_allocObject();
  *(void *)&v12[v14] = sub_20A8CB3A0();
  *(void *)&v12[OBJC_IVAR____TtC8StocksUI9TodayView_labelAlphaValueWhenEditing] = 0x3FE0000000000000;
  v12[OBJC_IVAR____TtC8StocksUI9TodayView_shouldChangeLabelAlphaWhenEditing] = 1;

  v24.receiver = v12;
  v24.super_class = ObjectType;
  uint64_t v15 = (char *)objc_msgSendSuper2(&v24, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v16 = *(void *)&v15[OBJC_IVAR____TtC8StocksUI9TodayView_titleLabel];
  uint64_t v17 = v15;
  objc_msgSend(v17, sel_addSubview_, v16);
  objc_msgSend(v17, sel_addSubview_, *(void *)&v17[OBJC_IVAR____TtC8StocksUI9TodayView_brandingLabel]);
  uint64_t v18 = v17;
  objc_msgSend(v18, sel_frame);
  CGFloat Height = CGRectGetHeight(v26);
  BOOL v20 = 0;
  if (Height > 1.0)
  {
    objc_msgSend(v18, sel_frame, 0);
    BOOL v20 = CGRectGetWidth(v27) > 1.0;
  }
  objc_msgSend(v18, sel_setIsAccessibilityElement_, v20);

  uint64_t v21 = v18;
  unint64_t v22 = (unint64_t)objc_msgSend(v21, sel_accessibilityTraits);
  objc_msgSend(v21, sel_setAccessibilityTraits_, *MEMORY[0x263F83268] | *MEMORY[0x263F83260] | v22);

  return v21;
}

uint64_t sub_20A43528C()
{
  objc_msgSend(v0, sel_frame);
  if (CGRectGetHeight(v14) <= 1.0) {
    return 0;
  }
  objc_msgSend(v0, sel_frame);
  if (CGRectGetWidth(v15) <= 1.0) {
    return 0;
  }
  sub_20A435B64();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_20A8D4540;
  id v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8StocksUI9TodayView_titleLabel], sel_text);
  if (v2)
  {
    int v3 = v2;
    uint64_t v4 = sub_20A8CE280();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  *(void *)(v1 + 32) = v4;
  *(void *)(v1 + 40) = v6;
  id v8 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8StocksUI9TodayView_brandingLabel], sel_text);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_20A8CE280();
    uint64_t v12 = v11;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v12 = 0;
  }
  *(void *)(v1 + 48) = v10;
  *(void *)(v1 + 56) = v12;
  uint64_t v7 = sub_20A8C82C0();
  swift_bridgeObjectRelease();
  return v7;
}

id _s8StocksUI31StockActivityItemsConfigurationCfD_0()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TodayView()
{
  return self;
}

uint64_t sub_20A435498()
{
  return sub_20A4357A0(&qword_26AC7F4A0);
}

uint64_t sub_20A4354CC()
{
  uint64_t v1 = (unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8StocksUI9TodayView_isSelected);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_20A435518(char a1, uint64_t a2, uint64_t a3)
{
  return sub_20A4355E0(a1, a2, a3, &OBJC_IVAR____TtC8StocksUI9TodayView_isSelected);
}

uint64_t (*sub_20A435524())()
{
  return j__swift_endAccess;
}

uint64_t sub_20A435588()
{
  uint64_t v1 = (unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8StocksUI9TodayView_isHighlighted);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_20A4355D4(char a1, uint64_t a2, uint64_t a3)
{
  return sub_20A4355E0(a1, a2, a3, &OBJC_IVAR____TtC8StocksUI9TodayView_isHighlighted);
}

uint64_t sub_20A4355E0(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = (unsigned char *)(*v4 + *a4);
  uint64_t result = swift_beginAccess();
  *uint64_t v6 = a1;
  return result;
}

uint64_t (*sub_20A43562C())()
{
  return j_j__swift_endAccess;
}

void sub_20A43568C(uint64_t a1, double a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x2105289B0](v3);
  if (v4)
  {
    uint64_t v5 = (char *)v4;
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC8StocksUI9TodayView_titleLabel), sel_setAlpha_, a2);
    objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC8StocksUI9TodayView_brandingLabel], sel_setAlpha_, a2);
  }
}

id sub_20A43571C()
{
  return sub_20A435950();
}

void sub_20A435748()
{
  sub_20A4357A0(&qword_26AC7F4A8);

  JUMPOUT(0x210523C60);
}

uint64_t sub_20A4357A0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for TodayView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A4357E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8StocksUI9TodayView_titleLabel;
  *(void *)&v1[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = OBJC_IVAR____TtC8StocksUI9TodayView_brandingLabel;
  *(void *)&v1[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v1[OBJC_IVAR____TtC8StocksUI9TodayView_isSelectable] = 1;
  v1[OBJC_IVAR____TtC8StocksUI9TodayView_isSelected] = 0;
  v1[OBJC_IVAR____TtC8StocksUI9TodayView_isHighlightable] = 1;
  v1[OBJC_IVAR____TtC8StocksUI9TodayView_isHighlighted] = 0;
  uint64_t v4 = OBJC_IVAR____TtC8StocksUI9TodayView_isEditing;
  sub_20A435BE0(0, (unint64_t *)&unk_26AC6AA78, MEMORY[0x263F8D4F8], MEMORY[0x263F7DFF8]);
  swift_allocObject();
  *(void *)&v1[v4] = sub_20A8CB3A0();
  *(void *)&v1[OBJC_IVAR____TtC8StocksUI9TodayView_labelAlphaValueWhenEditing] = 0x3FE0000000000000;
  v1[OBJC_IVAR____TtC8StocksUI9TodayView_shouldChangeLabelAlphaWhenEditing] = 1;

  sub_20A8CF520();
  __break(1u);
}

id sub_20A435950()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8StocksUI9TodayView_shouldChangeLabelAlphaWhenEditing) == 1)
  {
    swift_getObjectType();
    sub_20A8CB3E0();
    if (v6) {
      double v1 = 0.5;
    }
    else {
      double v1 = 1.0;
    }
    uint64_t v2 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v2;
    *(double *)(v3 + 24) = v1;
    sub_20A4357A0(&qword_26AC7F4A0);
    swift_retain();
    sub_20A8CB890();
    swift_release();
    return (id)swift_release();
  }
  else
  {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8StocksUI9TodayView_titleLabel), sel_setAlpha_, 1.0);
    uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC8StocksUI9TodayView_brandingLabel);
    return objc_msgSend(v5, sel_setAlpha_, 1.0);
  }
}

uint64_t sub_20A435AE8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A435B20()
{
  swift_release();

  return swift_deallocObject();
}

void sub_20A435B58()
{
  sub_20A43568C(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

void sub_20A435B64()
{
  if (!qword_26AC800C0)
  {
    sub_20A435BE0(255, (unint64_t *)&qword_26AC686A0, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC800C0);
    }
  }
}

void sub_20A435BE0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_20A435C38()
{
  unint64_t v1 = 0x6973736553707061;
  uint64_t v2 = type metadata accessor for EngagementEvent();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A437ED8(v0, (uint64_t)v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0x6D73694464726163;
  switch(EnumCaseMultiPayload)
  {
    case 2:
      unint64_t v1 = 0xD000000000000011;
      goto LABEL_5;
    case 3:
    case 5:
      unint64_t v1 = 0x7765695664656566;
      goto LABEL_5;
    case 4:
      unint64_t v1 = 0x6D79536863746177;
      goto LABEL_5;
    case 6:
      return result;
    default:
LABEL_5:
      sub_20A437FA0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for EngagementEvent);
      return v1;
  }
}

uint64_t _s8StocksUI15EngagementEventO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v184 = a1;
  uint64_t v3 = sub_20A8C76F0();
  uint64_t v174 = *(void *)(v3 - 8);
  uint64_t v175 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v159 = (char *)&v148 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v158 = (char *)&v148 - v6;
  uint64_t v180 = sub_20A8C6A90();
  uint64_t v173 = *(void *)(v180 - 8);
  MEMORY[0x270FA5388](v180);
  v172 = (char *)&v148 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  v171 = (char *)&v148 - v9;
  uint64_t v179 = sub_20A8C6E90();
  uint64_t v181 = *(void *)(v179 - 8);
  MEMORY[0x270FA5388](v179);
  double v162 = (char *)&v148 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v170 = (char *)&v148 - v12;
  uint64_t v178 = sub_20A8C7240();
  uint64_t v169 = *(void *)(v178 - 8);
  MEMORY[0x270FA5388](v178);
  double v168 = (char *)&v148 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  double v167 = (char *)&v148 - v15;
  uint64_t v177 = sub_20A8C6F60();
  uint64_t v166 = *(void *)(v177 - 8);
  MEMORY[0x270FA5388](v177);
  uint64_t v165 = (char *)&v148 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v164 = (char *)&v148 - v18;
  uint64_t v19 = sub_20A8C49B0();
  uint64_t v182 = *(void *)(v19 - 8);
  uint64_t v183 = v19;
  MEMORY[0x270FA5388](v19);
  unint64_t v157 = (char *)&v148 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v155 = (char *)&v148 - v22;
  MEMORY[0x270FA5388](v23);
  uint64_t v156 = (char *)&v148 - v24;
  MEMORY[0x270FA5388](v25);
  uint64_t v153 = (char *)&v148 - v26;
  MEMORY[0x270FA5388](v27);
  uint64_t v154 = (char *)&v148 - v28;
  MEMORY[0x270FA5388](v29);
  uint64_t v151 = (char *)&v148 - v30;
  MEMORY[0x270FA5388](v31);
  uint64_t v152 = (char *)&v148 - v32;
  MEMORY[0x270FA5388](v33);
  uint64_t v150 = (char *)&v148 - v34;
  MEMORY[0x270FA5388](v35);
  uint64_t v149 = (char *)&v148 - v36;
  MEMORY[0x270FA5388](v37);
  unint64_t v148 = (char *)&v148 - v38;
  uint64_t v176 = sub_20A8C7130();
  uint64_t v163 = *(void *)(v176 - 8);
  MEMORY[0x270FA5388](v176);
  uint64_t v161 = (char *)&v148 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  uint64_t v160 = (char *)&v148 - v41;
  uint64_t v42 = type metadata accessor for EngagementEvent();
  MEMORY[0x270FA5388](v42);
  id v44 = (char *)&v148 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v45);
  uint64_t v47 = (char *)&v148 - v46;
  MEMORY[0x270FA5388](v48);
  uint64_t v50 = (char *)&v148 - v49;
  MEMORY[0x270FA5388](v51);
  uint64_t v53 = (char *)&v148 - v52;
  MEMORY[0x270FA5388](v54);
  id v56 = (char *)&v148 - v55;
  MEMORY[0x270FA5388](v57);
  id v59 = (char *)&v148 - v58;
  sub_20A437F3C();
  MEMORY[0x270FA5388](v60 - 8);
  uint64_t v62 = (char *)&v148 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = (uint64_t)&v62[*(int *)(v63 + 56)];
  sub_20A437ED8(v184, (uint64_t)v62);
  sub_20A437ED8(a2, v64);
  uint64_t v65 = v62;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A437ED8((uint64_t)v62, (uint64_t)v56);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        (*(void (**)(char *, uint64_t))(v166 + 8))(v56, v177);
        uint64_t v66 = (uint64_t)v62;
        goto LABEL_31;
      }
      uint64_t v67 = v166;
      int v68 = *(void (**)(char *, char *, uint64_t))(v166 + 32);
      uint64_t v69 = v177;
      v68(v164, v56, v177);
      v68(v165, (char *)v64, v69);
      uint64_t v70 = v150;
      sub_20A8C6F50();
      uint64_t v184 = sub_20A8C49A0();
      uint64_t v72 = v71;
      uint64_t v73 = v183;
      uint64_t v74 = *(void (**)(char *, uint64_t))(v182 + 8);
      v74(v70, v183);
      uint64_t v75 = v152;
      sub_20A8C6F50();
      uint64_t v76 = sub_20A8C49A0();
      uint64_t v78 = v77;
      v74(v75, v73);
      if (v184 == v76 && v72 == v78) {
        char v79 = 1;
      }
      else {
        char v79 = sub_20A8CF760();
      }
      uint64_t v66 = (uint64_t)v65;
      uint64_t v137 = v177;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v138 = *(void (**)(char *, uint64_t))(v67 + 8);
      v138(v165, v137);
      v139 = &v189;
      goto LABEL_39;
    case 2u:
      uint64_t v66 = (uint64_t)v62;
      sub_20A437ED8((uint64_t)v62, (uint64_t)v53);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        (*(void (**)(char *, uint64_t))(v169 + 8))(v53, v178);
        goto LABEL_31;
      }
      uint64_t v80 = v169;
      uint64_t v81 = *(void (**)(char *, char *, uint64_t))(v169 + 32);
      uint64_t v82 = v178;
      v81(v167, v53, v178);
      v81(v168, (char *)v64, v82);
      uint64_t v83 = v151;
      sub_20A8C7230();
      uint64_t v184 = sub_20A8C49A0();
      uint64_t v85 = v84;
      uint64_t v86 = v183;
      uint64_t v87 = *(void (**)(char *, uint64_t))(v182 + 8);
      v87(v83, v183);
      id v88 = v154;
      sub_20A8C7230();
      uint64_t v89 = sub_20A8C49A0();
      uint64_t v91 = v90;
      v87(v88, v86);
      if (v184 == v89 && v85 == v91) {
        char v79 = 1;
      }
      else {
        char v79 = sub_20A8CF760();
      }
      uint64_t v137 = v178;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v138 = *(void (**)(char *, uint64_t))(v80 + 8);
      v138(v168, v137);
      v139 = &v190;
LABEL_39:
      uint64_t v140 = (char *)*(v139 - 32);
      goto LABEL_42;
    case 3u:
      uint64_t v66 = (uint64_t)v62;
      sub_20A437ED8((uint64_t)v62, (uint64_t)v47);
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        (*(void (**)(char *, uint64_t))(v173 + 8))(v47, v180);
        goto LABEL_31;
      }
      uint64_t v92 = v173;
      uint64_t v93 = *(void (**)(char *, char *, uint64_t))(v173 + 32);
      uint64_t v94 = v47;
      uint64_t v95 = v180;
      v93(v171, v94, v180);
      v93(v172, (char *)v64, v95);
      uint64_t v96 = v155;
      sub_20A8C6A80();
      uint64_t v184 = sub_20A8C49A0();
      uint64_t v98 = v97;
      uint64_t v99 = v183;
      uint64_t v100 = *(void (**)(char *, uint64_t))(v182 + 8);
      v100(v96, v183);
      uint64_t v101 = v157;
      sub_20A8C6A80();
      uint64_t v102 = sub_20A8C49A0();
      uint64_t v104 = v103;
      v100(v101, v99);
      if (v184 == v102 && v98 == v104) {
        char v79 = 1;
      }
      else {
        char v79 = sub_20A8CF760();
      }
      uint64_t v137 = v180;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v138 = *(void (**)(char *, uint64_t))(v92 + 8);
      v138(v172, v137);
      uint64_t v140 = v171;
LABEL_42:
      uint64_t v141 = v137;
      goto LABEL_49;
    case 4u:
      uint64_t v66 = (uint64_t)v62;
      sub_20A437ED8((uint64_t)v62, (uint64_t)v50);
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        (*(void (**)(char *, uint64_t))(v181 + 8))(v50, v179);
        goto LABEL_31;
      }
      uint64_t v105 = *(void (**)(char *, char *, uint64_t))(v181 + 32);
      uint64_t v106 = v179;
      v105(v170, v50, v179);
      v105(v162, (char *)v64, v106);
      uint64_t v107 = v153;
      sub_20A8C6E80();
      uint64_t v108 = sub_20A8C49A0();
      uint64_t v110 = v109;
      uint64_t v111 = v183;
      uint64_t v112 = *(void (**)(char *, uint64_t))(v182 + 8);
      v112(v107, v183);
      uint64_t v113 = v156;
      sub_20A8C6E80();
      uint64_t v114 = sub_20A8C49A0();
      uint64_t v116 = v115;
      v112(v113, v111);
      if (v108 == v114 && v110 == v116) {
        char v79 = 1;
      }
      else {
        char v79 = sub_20A8CF760();
      }
      char v142 = v162;
      uint64_t v143 = v179;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v144 = *(void (**)(char *, uint64_t))(v181 + 8);
      v144(v142, v143);
      v144(v170, v143);
      goto LABEL_50;
    case 5u:
      uint64_t v66 = (uint64_t)v62;
      sub_20A437ED8((uint64_t)v62, (uint64_t)v44);
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        (*(void (**)(char *, uint64_t))(v174 + 8))(v44, v175);
        goto LABEL_31;
      }
      uint64_t v118 = v174;
      uint64_t v117 = v175;
      uint64_t v119 = *(void (**)(char *, char *, uint64_t))(v174 + 32);
      uint64_t v120 = v158;
      v119(v158, v44, v175);
      uint64_t v121 = v159;
      v119(v159, (char *)v64, v117);
      sub_20A438000();
      sub_20A8CE570();
      sub_20A8CE570();
      if (v187 == v185 && v188 == v186) {
        char v79 = 1;
      }
      else {
        char v79 = sub_20A8CF760();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v145 = *(void (**)(char *, uint64_t))(v118 + 8);
      v145(v121, v117);
      v145(v120, v117);
      goto LABEL_50;
    case 6u:
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v123 = (uint64_t (*)(void))type metadata accessor for EngagementEvent;
      uint64_t v66 = (uint64_t)v62;
      if (EnumCaseMultiPayload != 6) {
        goto LABEL_31;
      }
      char v79 = 1;
      goto LABEL_51;
    default:
      uint64_t v66 = (uint64_t)v62;
      sub_20A437ED8((uint64_t)v62, (uint64_t)v59);
      if (swift_getEnumCaseMultiPayload())
      {
        (*(void (**)(char *, uint64_t))(v163 + 8))(v59, v176);
LABEL_31:
        char v79 = 0;
        uint64_t v123 = (uint64_t (*)(void))sub_20A437F3C;
      }
      else
      {
        uint64_t v124 = v163;
        uint64_t v125 = *(void (**)(char *, char *, uint64_t))(v163 + 32);
        uint64_t v126 = v59;
        uint64_t v127 = v176;
        v125(v160, v126, v176);
        v125(v161, (char *)v64, v127);
        uint64_t v128 = v148;
        sub_20A8C7120();
        uint64_t v184 = sub_20A8C49A0();
        uint64_t v130 = v129;
        uint64_t v131 = v183;
        uint64_t v132 = *(void (**)(char *, uint64_t))(v182 + 8);
        v132(v128, v183);
        uint64_t v133 = v149;
        sub_20A8C7120();
        uint64_t v134 = sub_20A8C49A0();
        uint64_t v136 = v135;
        v132(v133, v131);
        if (v184 == v134 && v130 == v136) {
          char v79 = 1;
        }
        else {
          char v79 = sub_20A8CF760();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v138 = *(void (**)(char *, uint64_t))(v124 + 8);
        uint64_t v146 = v176;
        v138(v161, v176);
        uint64_t v140 = v160;
        uint64_t v141 = v146;
LABEL_49:
        v138(v140, v141);
LABEL_50:
        uint64_t v123 = (uint64_t (*)(void))type metadata accessor for EngagementEvent;
      }
LABEL_51:
      sub_20A437FA0(v66, v123);
      return v79 & 1;
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for EngagementEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_20A8C7130();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v10 = sub_20A8C6F60();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v11 = sub_20A8C7240();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v12 = sub_20A8C6A90();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v13 = sub_20A8C6E90();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v14 = sub_20A8C76F0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for EngagementEvent(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_20A8C7130();
      goto LABEL_8;
    case 1:
      uint64_t v3 = sub_20A8C6F60();
      goto LABEL_8;
    case 2:
      uint64_t v3 = sub_20A8C7240();
      goto LABEL_8;
    case 3:
      uint64_t v3 = sub_20A8C6A90();
      goto LABEL_8;
    case 4:
      uint64_t v3 = sub_20A8C6E90();
      goto LABEL_8;
    case 5:
      uint64_t v3 = sub_20A8C76F0();
LABEL_8:
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for EngagementEvent(void *a1, const void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_20A8C7130();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_9;
    case 1u:
      uint64_t v7 = sub_20A8C6F60();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_9;
    case 2u:
      uint64_t v8 = sub_20A8C7240();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      goto LABEL_9;
    case 3u:
      uint64_t v9 = sub_20A8C6A90();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      goto LABEL_9;
    case 4u:
      uint64_t v10 = sub_20A8C6E90();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      goto LABEL_9;
    case 5u:
      uint64_t v11 = sub_20A8C76F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for EngagementEvent(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_20A437FA0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for EngagementEvent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_20A8C7130();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v7 = sub_20A8C6F60();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v8 = sub_20A8C7240();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v9 = sub_20A8C6A90();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v10 = sub_20A8C6E90();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v11 = sub_20A8C76F0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for EngagementEvent()
{
  uint64_t result = qword_26AC679D8;
  if (!qword_26AC679D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *initializeWithTake for EngagementEvent(void *a1, const void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_20A8C7130();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_9;
    case 1u:
      uint64_t v7 = sub_20A8C6F60();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      goto LABEL_9;
    case 2u:
      uint64_t v8 = sub_20A8C7240();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      goto LABEL_9;
    case 3u:
      uint64_t v9 = sub_20A8C6A90();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      goto LABEL_9;
    case 4u:
      uint64_t v10 = sub_20A8C6E90();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      goto LABEL_9;
    case 5u:
      uint64_t v11 = sub_20A8C76F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithTake for EngagementEvent(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_20A437FA0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for EngagementEvent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_20A8C7130();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v7 = sub_20A8C6F60();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v8 = sub_20A8C7240();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v9 = sub_20A8C6A90();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v10 = sub_20A8C6E90();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v11 = sub_20A8C76F0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for EngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for EngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_20A437D14()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_20A437D24()
{
  uint64_t result = sub_20A8C7130();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20A8C6F60();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_20A8C7240();
      if (v3 <= 0x3F)
      {
        uint64_t result = sub_20A8C6A90();
        if (v4 <= 0x3F)
        {
          uint64_t result = sub_20A8C6E90();
          if (v5 <= 0x3F)
          {
            uint64_t result = sub_20A8C76F0();
            if (v6 <= 0x3F)
            {
              swift_initEnumMetadataMultiPayload();
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_20A437ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EngagementEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_20A437F3C()
{
  if (!qword_26763AC08)
  {
    type metadata accessor for EngagementEvent();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763AC08);
    }
  }
}

uint64_t sub_20A437FA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_20A438000()
{
  unint64_t result = qword_26AC69B48;
  if (!qword_26AC69B48)
  {
    sub_20A8C76F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC69B48);
  }
  return result;
}

uint64_t sub_20A438058()
{
  sub_20A4380C4(v0 + 16);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedViewerEventHandler()
{
  return self;
}

uint64_t sub_20A4380C4(uint64_t a1)
{
  return a1;
}

id sub_20A4380EC()
{
  uint64_t v1 = v0;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  sub_20A439404(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  unint64_t v5 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  uint64_t v6 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  id v7 = v5;
  *(void *)(inited + 40) = sub_20A8CEE20();
  uint64_t v8 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v6;
  *(void *)(inited + 72) = v8;
  uint64_t v9 = v1 + 2;
  uint64_t v11 = v1[5];
  uint64_t v10 = v1[6];
  __swift_project_boxed_opaque_existential_1(v9, v11);
  uint64_t v12 = *(void *)(v10 + 16);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 96);
  id v14 = v8;
  uint64_t v15 = v13(v11, v12);
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v15;
  sub_20A4CF8B0(inited);
  id v16 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v17 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v18 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18, 0x800000020A8F8D30);

  return v19;
}

void sub_20A438414(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v63 = a4;
  uint64_t v56 = a3;
  sub_20A439404(0, (unint64_t *)&qword_26AC7FC70, MEMORY[0x263F82228], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  id v59 = (char *)&v56 - v6;
  uint64_t v62 = sub_20A8CF020();
  uint64_t v7 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8CF0B0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_20A8CEFB0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_20A8CF110();
  uint64_t v57 = *(void *)(v18 - 8);
  uint64_t v58 = v18;
  double v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = a1;
  objc_msgSend(a1, sel_setPreferredBehavioralStyle_, 1, v19);
  sub_20A8CF100();
  sub_20A8CF010();
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F821C0], v14);
  uint64_t v22 = v61;
  sub_20A8CEFC0();
  uint64_t v23 = v22 + 2;
  uint64_t v25 = v22[5];
  uint64_t v24 = v22[6];
  __swift_project_boxed_opaque_existential_1(v22 + 2, v25);
  (*(void (**)(uint64_t))(*(void *)(v24 + 16) + 264))(v25);
  sub_20A8CF070();
  uint64_t v27 = v22[5];
  uint64_t v26 = v22[6];
  __swift_project_boxed_opaque_existential_1(v22 + 2, v27);
  (*(void (**)(uint64_t))(*(void *)(v26 + 16) + 96))(v27);
  sub_20A8CF080();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F82200], v10);
  sub_20A8CEFA0();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F821C8], v62);
  sub_20A8CF040();
  uint64_t v28 = (void (*)(void *, void))sub_20A8CEF90();
  sub_20A8CBD70();
  v28(aBlock, 0);
  if (v63)
  {
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
    uint64_t v29 = (void *)sub_20A8CEE20();
    uint64_t v30 = self;
    id v31 = objc_msgSend(v30, sel_configurationWithFont_scale_, v29, 1);

    sub_20A8CEF80();
    if (qword_2676398B0 != -1) {
      swift_once();
    }
    uint64_t v32 = (void *)qword_267652CB8;
    uint64_t v33 = (void *)sub_20A8CEE20();
    id v34 = objc_msgSend(v30, sel_configurationWithFont_scale_, v33, 1);

    id v35 = objc_msgSend(v32, sel_imageWithConfiguration_, v34);
    uint64_t v37 = v22[5];
    uint64_t v36 = v22[6];
    __swift_project_boxed_opaque_existential_1(v22 + 2, v37);
    uint64_t v38 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v36 + 16) + 96))(v37);
    id v39 = objc_msgSend(v35, sel_imageWithTintColor_renderingMode_, v38, 1);
    goto LABEL_8;
  }
  if (!v56)
  {
LABEL_9:
    uint64_t v52 = v57;
    uint64_t v51 = v58;
    uint64_t v53 = v59;
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v59, v21, v58);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v53, 0, 1, v51);
    uint64_t v54 = v60;
    sub_20A8CF130();
    aBlock[4] = sub_20A439468;
    aBlock[5] = v22;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_20A4391D4;
    aBlock[3] = &block_descriptor;
    uint64_t v55 = _Block_copy(aBlock);
    swift_retain_n();
    swift_release();
    objc_msgSend(v54, sel_setConfigurationUpdateHandler_, v55);
    _Block_release(v55);
    swift_release();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v21, v51);
    return;
  }
  uint64_t v40 = v22;
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  uint64_t v41 = (void *)sub_20A8CEE20();
  uint64_t v42 = self;
  id v43 = objc_msgSend(v42, sel_configurationWithFont_scale_, v41, 1);

  sub_20A8CEF80();
  id v44 = (void *)sub_20A8CE240();
  id v45 = objc_msgSend(self, sel_systemImageNamed_, v44);

  if (v45)
  {
    uint64_t v46 = (void *)sub_20A8CEE20();
    id v47 = objc_msgSend(v42, sel_configurationWithFont_scale_, v46, 1);

    id v35 = objc_msgSend(v45, sel_imageWithConfiguration_, v47);
    uint64_t v22 = v40;
    uint64_t v49 = v40[5];
    uint64_t v48 = v40[6];
    __swift_project_boxed_opaque_existential_1(v23, v49);
    uint64_t v38 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v48 + 16) + 96))(v49);
    id v50 = objc_msgSend(v35, sel_imageWithTintColor_renderingMode_, v38, 1);

LABEL_8:
    sub_20A8CF0E0();
    sub_20A8CEFE0();
    sub_20A8CF030();
    goto LABEL_9;
  }
  __break(1u);
}

void sub_20A438CBC(void *a1, void *a2)
{
  sub_20A439404(0, (unint64_t *)&qword_26AC7FC70, MEMORY[0x263F82228], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v43[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v43[-v8];
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v43[-v11];
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = &v43[-v14];
  double v17 = MEMORY[0x270FA5388](v16);
  double v19 = &v43[-v18];
  id v20 = objc_msgSend(a1, sel_state, v17);
  if (v20 == (id)4 || v20 == (id)1)
  {
    sub_20A8CF120();
    uint64_t v22 = sub_20A8CF110();
    uint64_t v23 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
    if (v23(v19, 1, v22))
    {
      sub_20A439470((uint64_t)v19, (uint64_t)v15);
      sub_20A8CF130();
      sub_20A439504((uint64_t)v19);
    }
    else
    {
      uint64_t v27 = a2[5];
      uint64_t v26 = a2[6];
      __swift_project_boxed_opaque_existential_1(a2 + 2, v27);
      (*(void (**)(uint64_t))(*(void *)(v26 + 16) + 272))(v27);
      sub_20A8CF070();
      sub_20A8CF130();
    }
    sub_20A8CF120();
    if (v23(v12, 1, v22))
    {
      sub_20A439470((uint64_t)v12, (uint64_t)v15);
      sub_20A8CF130();
      sub_20A439504((uint64_t)v12);
    }
    else
    {
      uint64_t v29 = a2[5];
      uint64_t v28 = a2[6];
      __swift_project_boxed_opaque_existential_1(a2 + 2, v29);
      (*(void (**)(uint64_t))(*(void *)(v28 + 16) + 272))(v29);
      uint64_t v30 = (void (*)(unsigned char *, void))sub_20A8CEF90();
      sub_20A8CBD80();
      v30(v43, 0);
      sub_20A8CF130();
    }
    id v31 = objc_msgSend(a1, sel_titleLabel);
    if (v31)
    {
      uint64_t v32 = v31;
      objc_msgSend(v31, sel_setAlpha_, 0.5);
    }
    id v33 = objc_msgSend(a1, sel_imageView);
    if (v33)
    {
      id v34 = v33;
      objc_msgSend(v33, sel_setAlpha_, 0.5);
LABEL_26:
    }
  }
  else
  {
    sub_20A8CF120();
    uint64_t v24 = sub_20A8CF110();
    uint64_t v25 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48);
    if (v25(v9, 1, v24))
    {
      sub_20A439470((uint64_t)v9, (uint64_t)v15);
      sub_20A8CF130();
      sub_20A439504((uint64_t)v9);
    }
    else
    {
      uint64_t v36 = a2[5];
      uint64_t v35 = a2[6];
      __swift_project_boxed_opaque_existential_1(a2 + 2, v36);
      (*(void (**)(uint64_t))(*(void *)(v35 + 16) + 264))(v36);
      sub_20A8CF070();
      sub_20A8CF130();
    }
    sub_20A8CF120();
    if (v25(v6, 1, v24))
    {
      sub_20A439470((uint64_t)v6, (uint64_t)v15);
      sub_20A8CF130();
      sub_20A439504((uint64_t)v6);
    }
    else
    {
      uint64_t v38 = a2[5];
      uint64_t v37 = a2[6];
      __swift_project_boxed_opaque_existential_1(a2 + 2, v38);
      (*(void (**)(uint64_t))(*(void *)(v37 + 16) + 264))(v38);
      id v39 = (void (*)(unsigned char *, void))sub_20A8CEF90();
      sub_20A8CBD80();
      v39(v43, 0);
      sub_20A8CF130();
    }
    id v40 = objc_msgSend(a1, sel_titleLabel);
    if (v40)
    {
      uint64_t v41 = v40;
      objc_msgSend(v40, sel_setAlpha_, 1.0);
    }
    id v42 = objc_msgSend(a1, sel_imageView);
    if (v42)
    {
      id v34 = v42;
      objc_msgSend(v42, sel_setAlpha_, 1.0);
      goto LABEL_26;
    }
  }
}

void sub_20A4391D4(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t type metadata accessor for StockFeedEarningsViewStyler()
{
  return self;
}

uint64_t sub_20A439260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 40);
  uint64_t v8 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  uint64_t v12 = v10(a1, v7, v9);
  double v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A431A50((uint64_t)v15, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

unint64_t sub_20A4393AC()
{
  unint64_t result = qword_26AC7F9F8;
  if (!qword_26AC7F9F8)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7F9F8);
  }
  return result;
}

void sub_20A439404(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A439468(void *a1)
{
  sub_20A438CBC(a1, v1);
}

uint64_t sub_20A439470(uint64_t a1, uint64_t a2)
{
  sub_20A439404(0, (unint64_t *)&qword_26AC7FC70, MEMORY[0x263F82228], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A439504(uint64_t a1)
{
  sub_20A439404(0, (unint64_t *)&qword_26AC7FC70, MEMORY[0x263F82228], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_20A439590(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    long long v8 = *((_OWORD *)a2 + 3);
    a1[2] = *((_OWORD *)a2 + 2);
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_20A8CAC10();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = *(void **)((char *)a2 + v13);
    *(void *)((char *)v4 + v13) = v14;
    id v15 = v14;
  }
  return v4;
}

void sub_20A439684(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_20A8CAC10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = *(void **)(a1 + *(int *)(a2 + 28));
}

_OWORD *sub_20A439708(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_20A8CAC10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = *(void **)((char *)a2 + v12);
  *(void *)((char *)a1 + v12) = v13;
  id v14 = v13;
  return a1;
}

void *sub_20A4397AC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  uint64_t v6 = *(int *)(a3 + 24);
  long long v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8CAC10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = *(void **)((char *)a2 + v10);
  uint64_t v12 = *(void **)((char *)a1 + v10);
  *(void *)((char *)a1 + v10) = v11;
  id v13 = v11;

  return a1;
}

_OWORD *sub_20A439888(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_20A8CAC10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_OWORD *sub_20A439928(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_20A8CAC10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 28);
  id v13 = *(void **)((char *)a1 + v12);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);

  return a1;
}

uint64_t sub_20A4399D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A4399E4);
}

uint64_t sub_20A4399E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8CAC10();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_20A439AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A439ABC);
}

uint64_t sub_20A439ABC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20A8CAC10();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes()
{
  uint64_t result = qword_26AC7ECA8;
  if (!qword_26AC7ECA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A439BC8()
{
  uint64_t result = sub_20A8CAC10();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A439C6C()
{
  sub_20A439D2C(&qword_26763AC18);

  return sub_20A8CACE0();
}

uint64_t sub_20A439CC4()
{
  return sub_20A439D2C(&qword_26763AC10);
}

uint64_t sub_20A439CF8()
{
  return sub_20A439D2C(&qword_26763AC18);
}

uint64_t sub_20A439D2C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A439D70(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1 + 2;
  uint64_t v6 = v1[5];
  uint64_t v5 = v1[6];
  __swift_project_boxed_opaque_existential_1(v4, v6);
  uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v5 + 16) + 64))(v6);
  objc_msgSend(a1, sel_setBackgroundColor_, v7);

  id v8 = objc_msgSend(a1, sel_titleLabel);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v11 = v2[5];
    uint64_t v10 = v2[6];
    __swift_project_boxed_opaque_existential_1(v4, v11);
    id v12 = (id)(*(uint64_t (**)(uint64_t))(*(void *)(v10 + 16) + 64))(v11);
    objc_msgSend(v9, sel_setBackgroundColor_, v12);
  }
}

void sub_20A439E90(void *a1)
{
  uint64_t v3 = v1 + 2;
  uint64_t v5 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v3, v5);
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v4 + 16) + 392))(v5);
  objc_msgSend(a1, sel_setBackgroundColor_, v6);

  id v7 = objc_msgSend(a1, sel_titleLabel);
  if (v7)
  {
    id v8 = v7;
    id v9 = objc_msgSend(self, sel_clearColor);
    objc_msgSend(v8, sel_setBackgroundColor_, v9);
  }
  id v10 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v10, sel_setCornerCurve_, *MEMORY[0x263F15A20]);

  id v11 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v11, sel_setCornerRadius_, 8.0);
}

uint64_t type metadata accessor for DateRangePickerStyler()
{
  return self;
}

void sub_20A43A000(void *a1)
{
}

void sub_20A43A024(void *a1)
{
}

uint64_t sub_20A43A048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 40);
  uint64_t v8 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  id v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  uint64_t v12 = v10(a1, v7, v9);
  double v13 = MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A431A50((uint64_t)v15, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

char *sub_20A43A194(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC8StocksUI17SectionHeaderView_backgroundView;
  id v11 = objc_allocWithZone(MEMORY[0x263F82E00]);
  uint64_t v12 = v4;
  *(void *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v13 = OBJC_IVAR____TtC8StocksUI17SectionHeaderView_titleLabel;
  *(void *)&v12[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v23.receiver = v12;
  v23.super_class = ObjectType;
  uint64_t v14 = (char *)objc_msgSendSuper2(&v23, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v15 = *(void *)&v14[OBJC_IVAR____TtC8StocksUI17SectionHeaderView_backgroundView];
  uint64_t v16 = v14;
  objc_msgSend(v16, sel_addSubview_, v15);
  uint64_t v17 = *(void **)&v16[OBJC_IVAR____TtC8StocksUI17SectionHeaderView_titleLabel];
  objc_msgSend(v16, sel_addSubview_, v17);
  unint64_t v18 = (unint64_t)objc_msgSend(v17, sel_accessibilityTraits);
  unint64_t v19 = v18;
  uint64_t v20 = *MEMORY[0x263F83268];
  if (v18)
  {
    if ((v20 & ~v18) == 0) {
      goto LABEL_7;
    }
  }
  else if (!v20)
  {
    unint64_t v19 = 0;
    goto LABEL_7;
  }
  unint64_t v19 = v20 | v18;
LABEL_7:
  objc_msgSend(v17, sel_setAccessibilityTraits_, v19);
  id v21 = v17;
  objc_msgSend(v21, sel_setNumberOfLines_, 0);

  return v16;
}

uint64_t type metadata accessor for SectionHeaderView()
{
  return self;
}

void sub_20A43A4B8()
{
  sub_20A43A544((unint64_t *)&unk_26AC6F958);

  JUMPOUT(0x210523C60);
}

uint64_t sub_20A43A510()
{
  return sub_20A43A544(&qword_26AC6F950);
}

uint64_t sub_20A43A544(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SectionHeaderView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A43A584(uint64_t a1)
{
  sub_20A43E9E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    sub_20A43EA98(a1, (uint64_t)v4);
    uint64_t v7 = sub_20A8CD2C0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v4, 1, v7) == 1)
    {
      uint64_t v8 = MEMORY[0x2105289B0](v6 + 16);
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t v10 = MEMORY[0x2105289B0](v8 + 16);
        if (v10)
        {
          id v11 = (char *)v10;
          swift_retain();
          sub_20A43EE3C(v9, v11);
          swift_release_n();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
        }
        return swift_unknownObjectRelease();
      }
      else
      {
        return swift_release();
      }
    }
    else
    {
      swift_release();
      return sub_20A440ABC((uint64_t)v4, (uint64_t (*)(void))sub_20A43E9E8);
    }
  }
  return result;
}

void sub_20A43A708(uint64_t a1, void *a2, int a3, double a4)
{
  int v65 = a3;
  uint64_t v7 = *v4;
  int v68 = a2;
  uint64_t v69 = v7;
  uint64_t v8 = sub_20A8C74F0();
  uint64_t v61 = *(void *)(v8 - 8);
  uint64_t v62 = v8;
  MEMORY[0x270FA5388](v8);
  v57[1] = v9;
  uint64_t v58 = (char *)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v67 = (char *)v57 - v11;
  uint64_t v12 = sub_20A8CD2C0();
  uint64_t v71 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v59 = v13;
  uint64_t v60 = (char *)v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v70 = (char *)v57 - v15;
  uint64_t v16 = sub_20A8C2BC0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v63 = v18;
  uint64_t v64 = (char *)v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A43E9E8();
  MEMORY[0x270FA5388](v19 - 8);
  id v21 = (char *)v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t (*)(uint64_t))MEMORY[0x263F7A878];
  sub_20A43D7C4(0, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878], MEMORY[0x263F8D8F0]);
  double v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v26 = (char *)v57 - v25;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, double))(v17 + 16);
  uint64_t v66 = a1;
  v27((char *)v57 - v25, a1, v16, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v26, 0, 1, v16);
  uint64_t v28 = (char *)v4 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_activeChartRange;
  swift_beginAccess();
  uint64_t v29 = (uint64_t)v28;
  uint64_t v30 = v12;
  uint64_t v31 = v71;
  uint64_t v32 = v22;
  id v33 = v4;
  sub_20A440390((uint64_t)v26, v29, (unint64_t *)&qword_26AC68D80, v32);
  swift_endAccess();
  sub_20A8CD380();
  uint64_t v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v21, 1, v30);
  if (v34 == 1)
  {
    MEMORY[0x270FA5388](v34);
    uint64_t v35 = v66;
    v57[-2] = v4;
    v57[-1] = v35;
    sub_20A43F53C();
    sub_20A8C6670();
    uint64_t v36 = v64;
    ((void (*)(char *, uint64_t, uint64_t))v27)(v64, v35, v16);
    unint64_t v37 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    unint64_t v38 = (v63 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v39 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v39 + v37, v36, v16);
    unint64_t v40 = v39 + v38;
    uint64_t v41 = v68;
    *(void *)unint64_t v40 = v68;
    *(double *)(v40 + 8) = a4;
    id v42 = v41;
    id v43 = (void *)sub_20A8C6450();
    sub_20A8C6520();
    swift_release();
    swift_release();

    swift_allocObject();
    swift_weakInit();
    swift_retain();
    id v44 = (void *)sub_20A8C6450();
    sub_20A8C6550();
    swift_release();
    swift_release();
    swift_release_n();
  }
  else
  {
    id v45 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    uint64_t v46 = v70;
    v45(v70, v21, v30);
    if (v65)
    {
      (*(void (**)(char *, uint64_t))(v31 + 8))(v46, v30);
    }
    else
    {
      uint64_t v47 = v61;
      uint64_t v48 = v62;
      uint64_t v49 = v67;
      (*(void (**)(char *, void, uint64_t))(v61 + 104))(v67, *MEMORY[0x263F7A468], v62);
      id v50 = v58;
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v58, v49, v48);
      unint64_t v51 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
      uint64_t v52 = swift_allocObject();
      uint64_t v69 = (void (*)(unint64_t, char *, uint64_t))v45;
      (*(void (**)(unint64_t, char *, uint64_t))(v47 + 32))(v52 + v51, v50, v48);
      sub_20A8C48E0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v67, v48);
      uint64_t v53 = v60;
      uint64_t v54 = v70;
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v60, v70, v30);
      unint64_t v55 = (*(unsigned __int8 *)(v31 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      uint64_t v56 = swift_allocObject();
      *(void *)(v56 + 16) = v33;
      v69(v56 + v55, v53, v30);
      swift_retain();
      sub_20A8C66A0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v54, v30);
    }
  }
}

uint64_t sub_20A43AE2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = *(void *)(a1 + 32);
  sub_20A624970(a2);
  sub_20A43D7C4(0, &qword_26AC69838, MEMORY[0x263F7AA20], MEMORY[0x263F7D028]);
  swift_allocObject();
  sub_20A8C65E0();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_stock, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  uint64_t v10 = (void *)sub_20A8C6450();
  sub_20A43D7C4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
  sub_20A8C6500();
  swift_release();
  swift_release();

  uint64_t v11 = (void *)sub_20A8C6450();
  uint64_t v12 = sub_20A8C6440();
  swift_release();
  swift_release();

  return v12;
}

uint64_t sub_20A43B080(uint64_t a1, void *a2, uint64_t a3, void *a4, double a5)
{
  uint64_t v122 = a2;
  uint64_t v123 = a4;
  uint64_t v126 = a3;
  uint64_t v7 = sub_20A8C2BC0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v127 = v7;
  uint64_t v128 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v117 = v9;
  uint64_t v119 = (char *)v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A43D7C4(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v109 = (char *)v99 - v12;
  uint64_t v103 = sub_20A8C74F0();
  uint64_t v102 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  uint64_t v100 = (char *)v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99[1] = v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v101 = (char *)v99 - v15;
  uint64_t v120 = sub_20A8C2AF0();
  uint64_t v114 = *(void **)(v120 - 8);
  MEMORY[0x270FA5388](v120);
  uint64_t v113 = (char *)v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A43FFE8();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v111 = (void (*)(char *, uint64_t, uint64_t))((char *)v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v112 = type metadata accessor for StockChartDescriptor() - 8;
  MEMORY[0x270FA5388](v112);
  uint64_t v129 = (uint64_t)v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A43F53C();
  uint64_t v21 = v20 - 8;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v24 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AEF0];
  sub_20A43D7C4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], v10);
  uint64_t v107 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v116 = (uint64_t)v99 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = v26;
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)v99 - v28;
  uint64_t v30 = sub_20A8C3D00();
  uint64_t v130 = v30;
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v115 = (char *)v99 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = v32;
  double v34 = MEMORY[0x270FA5388](v33);
  uint64_t v36 = (char *)v99 - v35;
  uint64_t v37 = *(int *)(v21 + 56);
  uint64_t v38 = (uint64_t)&v23[v37];
  uint64_t v39 = a1 + v37;
  unint64_t v40 = *(void (**)(uint64_t, char *, uint64_t))(v31 + 16);
  uint64_t v118 = v31 + 16;
  uint64_t v124 = v40;
  ((void (*)(char *, uint64_t, uint64_t, double))v40)(v23, a1, v30, v34);
  sub_20A43F1D0(v39, v38, &qword_26AC68FB0, v24);
  uint64_t v121 = v31;
  uint64_t v41 = *(void (**)(unint64_t, char *, uint64_t))(v31 + 32);
  uint64_t v105 = v31 + 32;
  uint64_t v104 = v41;
  v41((unint64_t)v36, v23, v30);
  sub_20A44007C(v38, (uint64_t)v29);
  id v42 = (void *)*__swift_project_boxed_opaque_existential_1(v122 + 7, v122[10]);
  uint64_t v125 = v29;
  uint64_t v43 = v126;
  uint64_t v44 = sub_20A6F6FF8((uint64_t)v36, (uint64_t)v29, v126);
  uint64_t v110 = v44;
  uint64_t v45 = v42[5];
  uint64_t v46 = v42[6];
  __swift_project_boxed_opaque_existential_1(v42 + 2, v45);
  uint64_t v47 = (uint64_t)v111;
  sub_20A8C3CF0();
  uint64_t v48 = v44;
  uint64_t v49 = v128;
  uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 8))(v48, v47, v45, v46);
  unint64_t v51 = v43;
  sub_20A440ABC(v47, (uint64_t (*)(void))sub_20A43FFE8);
  uint64_t v52 = (uint64_t)v113;
  sub_20A8C2AE0();
  uint64_t v53 = sub_20A6F1B6C(v50, v51, v52);
  ((void (*)(uint64_t, uint64_t))v114[1])(v52, v120);
  uint64_t v54 = v129;
  uint64_t v120 = (uint64_t)v36;
  v124(v129, v36, v130);
  unint64_t v55 = (int *)v112;
  uint64_t v56 = *(void (**)(uint64_t, unint64_t, uint64_t))(v49 + 16);
  v56(v54 + *(int *)(v112 + 32), v51, v127);
  *(void *)(v54 + v55[7]) = v110;
  *(void *)(v54 + v55[9]) = v50;
  uint64_t v57 = v122;
  *(void *)(v54 + v55[10]) = v53;
  uint64_t v58 = v57[15];
  uint64_t v114 = v57 + 12;
  __swift_project_boxed_opaque_existential_1(v57 + 12, v58);
  uint64_t v59 = sub_20A603254(v54, v123, a5);
  uint64_t v113 = (char *)(v49 + 16);
  uint64_t v111 = (void (*)(char *, uint64_t, uint64_t))v56;
  if (v59)
  {
    uint64_t v60 = v59;
    uint64_t v61 = (uint64_t)v57 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_lastKnownQoute;
    swift_beginAccess();
    sub_20A4402FC((uint64_t)v125, v61);
    swift_endAccess();
    uint64_t v62 = *__swift_project_boxed_opaque_existential_1(v57 + 17, v57[20]);
    uint64_t v112 = v60;
    uint64_t v63 = (uint64_t)v109;
    uint64_t v64 = v120;
    int v65 = (void (*)(char *, uint64_t, uint64_t))v56;
    uint64_t v66 = v130;
    ((void (*)(char *, uint64_t))v124)(v109, v120);
    uint64_t v67 = v121 + 56;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v121 + 56))(v63, 0, 1, v66);
    uint64_t v68 = v62 + OBJC_IVAR____TtC8StocksUI33StockChartCalloutViewModelFactory_chart;
    swift_beginAccess();
    sub_20A440390(v63, v68, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
    swift_endAccess();
    v65(v119, v126, v127);
    sub_20A43F1D0((uint64_t)v125, v116, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    v124((uint64_t)v115, (char *)v64, v66);
    uint64_t v69 = v128;
    unint64_t v70 = (*(unsigned __int8 *)(v128 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80);
    unint64_t v71 = (v117 + v70 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v72 = v57;
    unint64_t v73 = (*(unsigned __int8 *)(v107 + 80) + v71 + 8) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
    unint64_t v74 = (v108 + *(unsigned __int8 *)(v67 + 24) + v73) & ~(unint64_t)*(unsigned __int8 *)(v67 + 24);
    unint64_t v75 = (v106 + v74 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v76 = swift_allocObject();
    unint64_t v77 = v76 + v70;
    uint64_t v78 = v69;
    uint64_t v79 = v112;
    uint64_t v80 = v119;
    (*(void (**)(unint64_t))(v78 + 32))(v77);
    *(void *)(v76 + v71) = v72;
    uint64_t v81 = v76 + v73;
    uint64_t v57 = v72;
    sub_20A44007C(v116, v81);
    uint64_t v82 = v130;
    v104(v76 + v74, v115, v130);
    *(void *)(v76 + v75) = v79;
    swift_retain();
    swift_retain();
    sub_20A8C66A0();
    swift_release();
  }
  else
  {
    uint64_t v80 = v119;
    uint64_t v83 = v102;
    uint64_t v84 = v101;
    uint64_t v85 = v103;
    (*(void (**)(char *, void, uint64_t))(v102 + 104))(v101, *MEMORY[0x263F7A470], v103);
    uint64_t v86 = v100;
    (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v100, v84, v85);
    unint64_t v87 = (*(unsigned __int8 *)(v83 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
    uint64_t v88 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v83 + 32))(v88 + v87, v86, v85);
    sub_20A8C48E0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v85);
    swift_retain();
    sub_20A8C66A0();
    uint64_t v82 = v130;
  }
  swift_release();
  __swift_project_boxed_opaque_existential_1(v114, v57[15]);
  uint64_t v89 = sub_20A6043C8(v129, (char *)v123);
  if (v89)
  {
    uint64_t v90 = v89;
    uint64_t v91 = v80;
    uint64_t v92 = v127;
    v111(v80, v126, v127);
    uint64_t v93 = v128;
    unint64_t v94 = (*(unsigned __int8 *)(v128 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80);
    unint64_t v95 = (v117 + v94 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v96 = (v95 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v97 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v93 + 32))(v97 + v94, v91, v92);
    *(void *)(v97 + v95) = v57;
    uint64_t v82 = v130;
    *(void *)(v97 + v96) = v90;
    swift_retain();
    swift_retain();
    sub_20A8C66A0();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_20A8C66A0();
  }
  swift_release();
  sub_20A440ABC(v129, (uint64_t (*)(void))type metadata accessor for StockChartDescriptor);
  sub_20A4408D0((uint64_t)v125, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v121 + 8))(v120, v82);
}

uint64_t sub_20A43BCBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v34 = a5;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v7 = sub_20A8C2BC0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v39 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44083C();
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t (*)(uint64_t))MEMORY[0x263F7A878];
  sub_20A43D7C4(0, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v33 - v20;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16);
  uint64_t v35 = a1;
  v22((char *)&v33 - v20, a1, v7, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  uint64_t v38 = a2;
  uint64_t v23 = a2 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_activeChartRange;
  swift_beginAccess();
  uint64_t v24 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_20A43F1D0((uint64_t)v21, (uint64_t)v13, (unint64_t *)&qword_26AC68D80, v14);
  sub_20A43F1D0(v23, v24, (unint64_t *)&qword_26AC68D80, v14);
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v25((uint64_t)v13, 1, v7) != 1)
  {
    uint64_t v26 = v39;
    sub_20A43F1D0((uint64_t)v13, (uint64_t)v17, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878]);
    if (v25(v24, 1, v7) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v26, v24, v7);
      sub_20A440A74(&qword_26AC68D70, MEMORY[0x263F7A878]);
      char v28 = sub_20A8CE210();
      uint64_t v29 = *(void (**)(char *, uint64_t))(v8 + 8);
      v29(v26, v7);
      uint64_t v30 = (uint64_t (*)(uint64_t))MEMORY[0x263F7A878];
      sub_20A4408D0((uint64_t)v21, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878]);
      v29(v17, v7);
      uint64_t result = sub_20A4408D0((uint64_t)v13, (unint64_t *)&qword_26AC68D80, v30);
      if ((v28 & 1) == 0) {
        return result;
      }
      goto LABEL_8;
    }
    sub_20A4408D0((uint64_t)v21, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878]);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
    return sub_20A440ABC((uint64_t)v13, (uint64_t (*)(void))sub_20A44083C);
  }
  sub_20A4408D0((uint64_t)v21, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878]);
  if (v25(v24, 1, v7) != 1) {
    return sub_20A440ABC((uint64_t)v13, (uint64_t (*)(void))sub_20A44083C);
  }
  sub_20A4408D0((uint64_t)v13, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878]);
LABEL_8:
  unsigned __int8 v31 = sub_20A43C180(v35, v36);
  uint64_t result = MEMORY[0x2105289B0](v38 + 16);
  if (result)
  {
    uint64_t v32 = MEMORY[0x2105289B0](result + 16);
    if (v32)
    {
      sub_20A43F8E4(v34, v31, v32);
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A43C180(uint64_t a1, uint64_t a2)
{
  sub_20A43D7C4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v19 - v5;
  uint64_t v7 = sub_20A8C2BC0();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, a1, v7, v9);
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
  int v12 = *MEMORY[0x263F7A838];
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  if (a1 == v12)
  {
    sub_20A43F1D0(a2, (uint64_t)v6, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    uint64_t v13 = sub_20A8C3E10();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v6, 1, v13) == 1)
    {
      sub_20A4408D0((uint64_t)v6, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    }
    else
    {
      double v15 = COERCE_DOUBLE(sub_20A8C3D10());
      char v17 = v16;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v13);
      if ((v17 & 1) == 0) {
        return v15 < 0.0;
      }
    }
  }
  return sub_20A5911B8();
}

uint64_t sub_20A43C414(uint64_t a1)
{
  uint64_t v2 = sub_20A8CD2C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = MEMORY[0x270FA5388](v6);
  double v9 = (char *)&v22 - v8;
  uint64_t result = MEMORY[0x2105289B0](a1 + 16, v7);
  if (result)
  {
    uint64_t v11 = result;
    if (qword_267639CC0 != -1) {
      swift_once();
    }
    uint64_t v12 = __swift_project_value_buffer(v2, (uint64_t)qword_267653158);
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v13(v9, v12, v2);
    uint64_t result = MEMORY[0x2105289B0](v11 + 16);
    if (result)
    {
      uint64_t v14 = *(void **)(result + OBJC_IVAR____TtC8StocksUI24StockChartViewController_stateMachine);
      if (v14)
      {
        id v23 = v14;
        uint64_t v22 = sub_20A8CE240();
        v13(v5, (uint64_t)v9, v2);
        double v15 = (objc_class *)type metadata accessor for StockChartViewController.ErrorContext(0);
        char v16 = (char *)objc_allocWithZone(v15);
        v13(&v16[OBJC_IVAR____TtCC8StocksUI24StockChartViewControllerP33_E483C2B618A7CE6B48867B145DEE9A5212ErrorContext_model], (uint64_t)v5, v2);
        v24.receiver = v16;
        v24.super_class = v15;
        id v17 = objc_msgSendSuper2(&v24, sel_init);
        uint64_t v18 = *(void (**)(char *, uint64_t))(v3 + 8);
        v18(v5, v2);
        uint64_t v20 = (void *)v22;
        id v19 = v23;
        id v21 = objc_msgSend(v23, sel_fireEventWithName_withContext_, v22, v17);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

        return ((uint64_t (*)(char *, uint64_t))v18)(v9, v2);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      swift_unknownObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
    }
  }
  return result;
}

uint64_t sub_20A43C6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a3;
  uint64_t v5 = sub_20A8C2BC0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v29 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44083C();
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x263F7A878];
  sub_20A43D7C4(0, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  double v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v17 = MEMORY[0x270FA5388](v16);
  id v19 = (char *)&v29 - v18;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v29 - v18, a1, v5, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
  uint64_t v31 = a2;
  uint64_t v20 = a2 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_activeChartRange;
  swift_beginAccess();
  uint64_t v21 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_20A43F1D0((uint64_t)v19, (uint64_t)v11, (unint64_t *)&qword_26AC68D80, v12);
  sub_20A43F1D0(v20, v21, (unint64_t *)&qword_26AC68D80, v12);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v22((uint64_t)v11, 1, v5) != 1)
  {
    id v23 = v15;
    sub_20A43F1D0((uint64_t)v11, (uint64_t)v15, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878]);
    if (v22(v21, 1, v5) != 1)
    {
      uint64_t v25 = v29;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v29, v21, v5);
      sub_20A440A74(&qword_26AC68D70, MEMORY[0x263F7A878]);
      char v26 = sub_20A8CE210();
      uint64_t v27 = *(void (**)(char *, uint64_t))(v6 + 8);
      v27(v25, v5);
      char v28 = (uint64_t (*)(uint64_t))MEMORY[0x263F7A878];
      sub_20A4408D0((uint64_t)v19, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878]);
      v27(v23, v5);
      uint64_t result = sub_20A4408D0((uint64_t)v11, (unint64_t *)&qword_26AC68D80, v28);
      if ((v26 & 1) == 0) {
        return result;
      }
      goto LABEL_8;
    }
    sub_20A4408D0((uint64_t)v19, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878]);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    return sub_20A440ABC((uint64_t)v11, (uint64_t (*)(void))sub_20A44083C);
  }
  sub_20A4408D0((uint64_t)v19, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878]);
  if (v22(v21, 1, v5) != 1) {
    return sub_20A440ABC((uint64_t)v11, (uint64_t (*)(void))sub_20A44083C);
  }
  sub_20A4408D0((uint64_t)v11, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878]);
LABEL_8:
  uint64_t result = MEMORY[0x2105289B0](v31 + 16);
  if (result)
  {
    sub_20A43FBE0(v30, result);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A43CB30(uint64_t a1)
{
  uint64_t result = MEMORY[0x2105289B0](a1 + 16);
  if (result)
  {
    if (MEMORY[0x2105289B0](result + 16))
    {
      sub_20A8CDEA0();
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A43CBB8(uint64_t a1)
{
  uint64_t v2 = sub_20A8C74F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  id v23 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v22 - v6;
  sub_20A43D7C4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v22 - v9;
  sub_20A8CE9E0();
  sub_20A43F778();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_20A8D3DC0;
  uint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  uint64_t v24 = a1;
  sub_20A43F7E0(0, (unint64_t *)&qword_26AC80150);
  sub_20A8CF4E0();
  uint64_t v12 = v25;
  unint64_t v13 = v26;
  *(void *)(v11 + 56) = MEMORY[0x263F8D310];
  *(void *)(v11 + 64) = sub_20A43F830();
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v13;
  sub_20A43F884();
  uint64_t v14 = (void *)sub_20A8CF180();
  sub_20A8C7D90();
  swift_bridgeObjectRelease();

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v16 = result;
    uint64_t v17 = sub_20A8C3E10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v10, 1, 1, v17);
    uint64_t v18 = v16 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_lastKnownQoute;
    swift_beginAccess();
    sub_20A440390((uint64_t)v10, v18, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    swift_endAccess();
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v7, *MEMORY[0x263F7A460], v2);
    id v19 = v23;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v23, v7, v2);
    unint64_t v20 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v21 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v21 + v20, v19, v2);
    sub_20A8C48E0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
    swift_retain();
    sub_20A8C66A0();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_20A43CF9C(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  uint64_t v2 = MEMORY[0x2105289B0](a1 + 16);
  if (v2)
  {
    uint64_t v3 = v2;
    if (qword_267639CB8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_20A8CD2C0();
    uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_267653140);
    sub_20A43FE20(v5, v3);
    swift_unknownObjectRelease();
  }
  uint64_t result = MEMORY[0x2105289B0](v1);
  if (result)
  {
    if (MEMORY[0x2105289B0](result + 16))
    {
      sub_20A8CDEA0();
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_20A43D08C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8CD2C0();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x2105289B0](a1 + 16, v6);
  if (v9)
  {
    uint64_t v10 = MEMORY[0x2105289B0](v9 + 16);
    if (v10)
    {
      uint64_t v11 = *(void **)(v10 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_stateMachine);
      if (v11)
      {
        id v20 = v11;
        uint64_t v12 = (void *)sub_20A8CE240();
        unint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v13(v8, a2, v4);
        uint64_t v14 = (objc_class *)type metadata accessor for StockChartViewController.ErrorContext(0);
        double v15 = (char *)objc_allocWithZone(v14);
        v13(&v15[OBJC_IVAR____TtCC8StocksUI24StockChartViewControllerP33_E483C2B618A7CE6B48867B145DEE9A5212ErrorContext_model], (uint64_t)v8, v4);
        v21.receiver = v15;
        v21.super_class = v14;
        id v16 = objc_msgSendSuper2(&v21, sel_init);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        id v17 = v20;
        id v18 = objc_msgSend(v20, sel_fireEventWithName_withContext_, v12, v16);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void sub_20A43D2A4()
{
  sub_20A43D7C4(0, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v12 - v2;
  uint64_t v4 = sub_20A8C2BC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0[22] + 72))
  {
    *((unsigned char *)v0 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_needRefresh) = 1;
  }
  else
  {
    uint64_t v8 = (uint64_t)v0 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_activeChartRange;
    swift_beginAccess();
    sub_20A43F1D0(v8, (uint64_t)v3, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878]);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_20A4408D0((uint64_t)v3, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
      uint64_t v9 = (void *)v0[24];
      if (v9)
      {
        double v10 = *((double *)v0 + 25);
        id v11 = v9;
        sub_20A43A708((uint64_t)v7, v11, 0, v10);
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
}

uint64_t sub_20A43D4E4()
{
  sub_20A4380C4(v0 + 16);
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  swift_release();

  sub_20A4408D0(v0 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_activeChartRange, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878]);
  sub_20A4408D0(v0 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_lastKnownQoute, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  return v0;
}

uint64_t sub_20A43D59C()
{
  sub_20A43D4E4();

  return swift_deallocClassInstance();
}

uint64_t sub_20A43D5F4()
{
  return type metadata accessor for StockChartInteractor();
}

uint64_t type metadata accessor for StockChartInteractor()
{
  uint64_t result = qword_26AC71E38;
  if (!qword_26AC71E38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A43D648()
{
  sub_20A43D7C4(319, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_20A43D7C4(319, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_20A43D7C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A43D828()
{
  return sub_20A8C42F0();
}

uint64_t sub_20A43D858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F7A9B8](a1, *v5, a5);
}

uint64_t sub_20A43D888(uint64_t a1)
{
  return MEMORY[0x270F7A9B0](a1, *v1);
}

id sub_20A43D8B4(uint64_t a1)
{
  uint64_t v52 = a1;
  uint64_t v2 = sub_20A8C3D00();
  uint64_t v55 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v54 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A43D7C4(0, (unint64_t *)&unk_26AC68D30, MEMORY[0x263F079C8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v49 - v6;
  uint64_t v51 = type metadata accessor for StockChartCalloutViewModel(0);
  MEMORY[0x270FA5388](v51);
  uint64_t v50 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v53 = (uint64_t)&v49 - v10;
  id v11 = (uint64_t (*)(uint64_t))MEMORY[0x263F7A878];
  sub_20A43D7C4(0, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878], v4);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v49 - v13;
  uint64_t v15 = sub_20A8C2BC0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  id v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v1 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_activeChartRange;
  swift_beginAccess();
  sub_20A43F1D0(v19, (uint64_t)v14, (unint64_t *)&qword_26AC68D80, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1) {
    return (id)sub_20A4408D0((uint64_t)v14, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878]);
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  uint64_t v21 = *__swift_project_boxed_opaque_existential_1((void *)(v1 + 136), *(void *)(v1 + 160))
      + OBJC_IVAR____TtC8StocksUI33StockChartCalloutViewModelFactory_chart;
  swift_beginAccess();
  uint64_t v22 = v55;
  id v23 = v18;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v21, 1, v2))
  {
    uint64_t v24 = sub_20A8C2AF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v7, 1, 1, v24);
LABEL_6:
    sub_20A4408D0((uint64_t)v7, (unint64_t *)&unk_26AC68D30, MEMORY[0x263F079C8]);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v23, v15);
  }
  uint64_t v25 = v1;
  unint64_t v26 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v54, v21, v2);
  sub_20A8C3C40();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v2);
  uint64_t v27 = sub_20A8C2AF0();
  uint64_t v28 = *(void *)(v27 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v7, 0, 1, v27);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v7, 1, v27) == 1) {
    goto LABEL_6;
  }
  sub_20A4408D0((uint64_t)v7, (unint64_t *)&unk_26AC68D30, MEMORY[0x263F079C8]);
  sub_20A43F268();
  uint64_t v30 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v50, v52, v29);
  uint64_t v31 = v15;
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v30 + *(int *)(v51 + 20), v23, v15);
  sub_20A8C2AE0();
  uint64_t v32 = v53;
  sub_20A43F36C(v30, v53, type metadata accessor for StockChartCalloutViewModel);
  uint64_t v33 = MEMORY[0x2105289B0](v25 + 16);
  if (!v33) {
    goto LABEL_12;
  }
  uint64_t v34 = MEMORY[0x2105289B0](v33 + 16);
  if (!v34)
  {
    swift_unknownObjectRelease();
    goto LABEL_12;
  }
  uint64_t v35 = (char *)v34;
  uint64_t v36 = v23;
  id v37 = sub_20A7EC580(v34, v32);
  id result = objc_msgSend(v35, sel_view);
  if (result)
  {
    uint64_t v38 = result;
    objc_msgSend(result, sel_layoutMargins);
    uint64_t v40 = v39;
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    uint64_t v46 = v45;

    uint64_t v47 = *(void *)&v35[OBJC_IVAR____TtC8StocksUI24StockChartViewController_calloutViewProvider + 24];
    uint64_t v48 = *(void *)&v35[OBJC_IVAR____TtC8StocksUI24StockChartViewController_calloutViewProvider + 32];
    __swift_project_boxed_opaque_existential_1(&v35[OBJC_IVAR____TtC8StocksUI24StockChartViewController_calloutViewProvider], v47);
    v56[0] = v40;
    v56[1] = v42;
    v56[2] = v44;
    v56[3] = v46;
    (*(void (**)(uint64_t, id, void *, uint64_t, uint64_t))(v48 + 16))(v32, v37, v56, v47, v48);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    id v23 = v36;
LABEL_12:
    sub_20A440ABC(v32, type metadata accessor for StockChartCalloutViewModel);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v23, v31);
  }
  __break(1u);
  return result;
}

id sub_20A43DF68(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A43D7C4(0, &qword_26763AC30, type metadata accessor for StockChartRangeCalloutViewModel, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v38 - v5;
  uint64_t v7 = type metadata accessor for StockChartRangeCalloutViewModel(0);
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v38 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x263F7A878];
  sub_20A43D7C4(0, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878], v3);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v13 = sub_20A8C2BC0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v2 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_activeChartRange;
  swift_beginAccess();
  uint64_t v18 = v17;
  uint64_t v19 = v13;
  sub_20A43F1D0(v18, (uint64_t)v12, (unint64_t *)&qword_26AC68D80, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    return (id)sub_20A4408D0((uint64_t)v12, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878]);
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 136), *(void *)(v2 + 160));
  sub_20A6D580C(v41, v42, (uint64_t)v16, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v6, 1, v40) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return (id)sub_20A4408D0((uint64_t)v6, &qword_26763AC30, type metadata accessor for StockChartRangeCalloutViewModel);
  }
  uint64_t v21 = v38;
  sub_20A43F36C((uint64_t)v6, v38, type metadata accessor for StockChartRangeCalloutViewModel);
  uint64_t v22 = MEMORY[0x2105289B0](v2 + 16);
  if (!v22) {
    goto LABEL_10;
  }
  uint64_t v23 = MEMORY[0x2105289B0](v22 + 16);
  if (!v23)
  {
    swift_unknownObjectRelease();
    goto LABEL_10;
  }
  uint64_t v24 = (char *)v23;
  uint64_t v25 = v19;
  id v26 = sub_20A7EC6A0(v23, v21);
  id result = objc_msgSend(v24, sel_view);
  if (result)
  {
    uint64_t v27 = result;
    objc_msgSend(result, sel_layoutMargins);
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    uint64_t v35 = v34;

    uint64_t v36 = *(void *)&v24[OBJC_IVAR____TtC8StocksUI24StockChartViewController_rangeCalloutViewProvider + 24];
    uint64_t v37 = *(void *)&v24[OBJC_IVAR____TtC8StocksUI24StockChartViewController_rangeCalloutViewProvider + 32];
    __swift_project_boxed_opaque_existential_1(&v24[OBJC_IVAR____TtC8StocksUI24StockChartViewController_rangeCalloutViewProvider], v36);
    v43[0] = v29;
    v43[1] = v31;
    _OWORD v43[2] = v33;
    v43[3] = v35;
    (*(void (**)(uint64_t, id, void *, uint64_t, uint64_t))(v37 + 16))(v21, v26, v43, v36, v37);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    uint64_t v19 = v25;
LABEL_10:
    sub_20A440ABC(v21, type metadata accessor for StockChartRangeCalloutViewModel);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v19);
  }
  __break(1u);
  return result;
}

void sub_20A43E3F8()
{
  uint64_t v1 = MEMORY[0x2105289B0](v0 + 16);
  if (v1)
  {
    uint64_t v2 = MEMORY[0x2105289B0](v1 + 16);
    if (v2)
    {
      uint64_t v3 = v2;
      sub_20A8C84A0();
      uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_activeCallout);
      *(void *)(v3 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_activeCallout) = 0xF000000000000007;
      sub_20A43F250(v4);
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_needRefresh) == 1)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_needRefresh) = 0;
    sub_20A43D2A4();
  }
}

uint64_t sub_20A43E4B8()
{
  return MEMORY[0x270F7A270](*v0);
}

uint64_t sub_20A43E4E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F7A278](a1, a2, a3, a4, a5, *v5);
}

uint64_t sub_20A43E510()
{
  return MEMORY[0x270F7A270](*v0);
}

uint64_t sub_20A43E53C(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270F7A288](a1, a2, *v2);
}

uint64_t sub_20A43E56C()
{
  return MEMORY[0x270F7A270](*v0);
}

uint64_t sub_20A43E598(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270F7A288](a1, a2, *v2);
}

uint64_t sub_20A43E5C4(uint64_t a1)
{
  return MEMORY[0x270F7A2B0](a1, *v1);
}

uint64_t sub_20A43E5F0()
{
  return MEMORY[0x270F7A270](*v0);
}

uint64_t sub_20A43E61C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3E10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A43D7C4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = sub_20A8C3EC0();
  if (*(void *)(a2 + 16) && (unint64_t v16 = sub_20A4D1B24(v14, v15), (v17 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v13, *(void *)(a2 + 56) + *(void *)(v5 + 72) * v16, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v13, 0, 1, v4);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v13, 1, 1, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = v2 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_lastKnownQoute;
  swift_beginAccess();
  uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  char v20 = 1;
  if (v19(v18, 1, v4))
  {
    double v21 = 0.0;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v18, v4);
    uint64_t v22 = sub_20A8C3E00();
    char v20 = v23 & 1;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    double v21 = *(double *)&v22;
  }
  sub_20A43F1D0((uint64_t)v13, (uint64_t)v10, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  if (v19((uint64_t)v10, 1, v4) == 1)
  {
    sub_20A4408D0((uint64_t)v10, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    if (v20) {
      return sub_20A4408D0((uint64_t)v13, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    }
    goto LABEL_16;
  }
  double v24 = COERCE_DOUBLE(sub_20A8C3E00());
  char v26 = v25;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  if (v20)
  {
    if (v26) {
      return sub_20A4408D0((uint64_t)v13, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    }
    goto LABEL_16;
  }
  if ((v26 & 1) != 0 || v21 != v24) {
LABEL_16:
  }
    sub_20A43D2A4();
  return sub_20A4408D0((uint64_t)v13, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
}

uint64_t sub_20A43E9A0()
{
  return sub_20A440A74((unint64_t *)&unk_26AC67CB8, (void (*)(uint64_t))type metadata accessor for StockChartInteractor);
}

void sub_20A43E9E8()
{
  if (!qword_26AC6B1C0)
  {
    sub_20A43EA44();
    unint64_t v0 = sub_20A8CD370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6B1C0);
    }
  }
}

unint64_t sub_20A43EA44()
{
  unint64_t result = qword_26AC73DC0;
  if (!qword_26AC73DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC73DC0);
  }
  return result;
}

uint64_t sub_20A43EA98(uint64_t a1, uint64_t a2)
{
  sub_20A43E9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A43EAFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_20A8C74F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C7510();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))(v6, a2, v3, v9);
  sub_20A8C7500();
  sub_20A43D7C4(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v12 = sub_20A8C4620();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, void, uint64_t))(v13 + 104))(v15 + v14, *MEMORY[0x263F24D48], v12);
  sub_20A440A74(&qword_26763AC38, MEMORY[0x263F7A488]);
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  sub_20A8C7550();
  sub_20A440A74(&qword_26763AC40, MEMORY[0x263F7A4B8]);
  memset(v17, 0, sizeof(v17));
  sub_20A8C45D0();
  return sub_20A440ABC((uint64_t)v17, (uint64_t (*)(void))sub_20A42F348);
}

id sub_20A43EE3C(uint64_t a1, char *a2)
{
  sub_20A43D7C4(0, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v26 - v5;
  uint64_t v7 = sub_20A8C2BC0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_retain(*(id *)(*(void *)&a2[OBJC_IVAR____TtC8StocksUI24StockChartViewController_dateRangePicker]
                          + OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl));
  sub_20A8C8AE0();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return (id)sub_20A4408D0((uint64_t)v6, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878]);
  }
  id result = (id)(*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  uint64_t v13 = *(void **)&a2[OBJC_IVAR____TtC8StocksUI24StockChartViewController_stateMachine];
  if (!v13)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v14 = v13;
  uint64_t v15 = (void *)sub_20A8CE240();

  id result = objc_msgSend(a2, sel_view);
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  unint64_t v16 = result;
  id v17 = objc_msgSend(result, sel_traitCollection);

  uint64_t v18 = *(void *)(a1 + 32);
  uint64_t v19 = self;
  id v20 = v17;
  id v21 = objc_msgSend(v19, sel_mainScreen);
  objc_msgSend(v21, sel_scale);
  double v23 = v22;

  double v24 = *(void **)(v18 + 192);
  *(void *)(v18 + 192) = v20;
  *(double *)(v18 + 200) = v23;
  id v25 = v20;

  sub_20A43A708((uint64_t)v10, v25, 0, v23);
  if (qword_26AC69088 != -1) {
    swift_once();
  }
  type metadata accessor for StockChartInteractor();
  sub_20A440A74(&qword_26AC71E28, (void (*)(uint64_t))type metadata accessor for StockChartInteractor);
  sub_20A8C42F0();

  return (id)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_20A43F1D0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_20A43D7C4(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_20A43F250(uint64_t a1)
{
  if ((~a1 & 0xF000000000000007) != 0) {
}
  }

void sub_20A43F268()
{
  if (!qword_26AC7F540)
  {
    sub_20A8CDDA0();
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F7CB58];
    sub_20A440A74(&qword_26AC7F510, MEMORY[0x263F7CB58]);
    sub_20A440A74(&qword_26AC7F500, v0);
    sub_20A440A74(&qword_26AC7F508, v0);
    unint64_t v1 = sub_20A8CDE00();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AC7F540);
    }
  }
}

uint64_t sub_20A43F36C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A43F3D4()
{
  return objectdestroyTm(MEMORY[0x263F7A478]);
}

uint64_t sub_20A43F3F0()
{
  uint64_t v1 = sub_20A8CD2C0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_20A43F4BC()
{
  uint64_t v1 = *(void *)(sub_20A8CD2C0() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_20A43D08C(v2, v3);
}

uint64_t sub_20A43F520()
{
  return sub_20A43AE2C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_20A43F53C()
{
  if (!qword_26AC68F98)
  {
    sub_20A8C3D00();
    sub_20A43D7C4(255, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC68F98);
    }
  }
}

uint64_t sub_20A43F5DC()
{
  uint64_t v1 = sub_20A8C2BC0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_20A43F680(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_20A8C2BC0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_20A43B080(a1, a2, v2 + v6, *(void **)(v2 + v7), *(double *)(v2 + v7 + 8));
}

uint64_t sub_20A43F738()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A43F770(uint64_t a1)
{
  return sub_20A43CBB8(a1);
}

void sub_20A43F778()
{
  if (!qword_26AC80130)
  {
    sub_20A43F7E0(255, (unint64_t *)&qword_26AC80160);
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC80130);
    }
  }
}

uint64_t sub_20A43F7E0(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_20A43F830()
{
  unint64_t result = qword_26AC7F640;
  if (!qword_26AC7F640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7F640);
  }
  return result;
}

unint64_t sub_20A43F884()
{
  unint64_t result = qword_26AC7FC80;
  if (!qword_26AC7FC80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC7FC80);
  }
  return result;
}

uint64_t sub_20A43F8C4()
{
  return objectdestroyTm(MEMORY[0x263F7A478]);
}

uint64_t sub_20A43F8DC()
{
  return sub_20A43CF9C(v0);
}

void sub_20A43F8E4(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  sub_20A43D7C4(0, &qword_26AC7F548, (uint64_t (*)(uint64_t))sub_20A43F268, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  id v11 = &v23[-v10];
  uint64_t v12 = sub_20A8CDC90();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v16 = *(void **)(a3 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_stateMachine);
  if (v16)
  {
    id v17 = v16;
    uint64_t v18 = (void *)sub_20A8CE240();

    uint64_t v24 = a1;
    uint64_t v19 = (void *)(a3 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_styler);
    swift_beginAccess();
    __swift_project_boxed_opaque_existential_1(v19, v19[3]);
    sub_20A45D778(a2, (uint64_t)v15);
    sub_20A8CDE90();
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    *(unsigned char *)(*(void *)(a3 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_interactionHandler)
             + OBJC_IVAR____TtC8StocksUI28StockChartInteractionHandler_trend) = a2;
    sub_20A43F268();
    uint64_t v21 = v20;
    double v22 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
    v22(v11, 1, 1, v20);
    v22(v8, 1, 1, v21);
    sub_20A6BF7A8((uint64_t)v11, (uint64_t)v8);
    sub_20A4408D0((uint64_t)v8, &qword_26AC7F548, (uint64_t (*)(uint64_t))sub_20A43F268);
    sub_20A4408D0((uint64_t)v11, &qword_26AC7F548, (uint64_t (*)(uint64_t))sub_20A43F268);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_20A43FBE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8CDD60();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = MEMORY[0x2105289B0](a2 + 16, v6);
  if (result)
  {
    uint64_t v15 = a1;
    uint64_t v10 = (void *)(result + OBJC_IVAR____TtC8StocksUI24StockChartViewController_styler);
    swift_beginAccess();
    id v11 = (void *)*__swift_project_boxed_opaque_existential_1(v10, v10[3]);
    sub_20A43D7C4(0, &qword_26AC80088, MEMORY[0x263F7CAD8], MEMORY[0x263F8E0F8]);
    sub_20A8CDB80();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_20A8D3DC0;
    uint64_t v13 = v11[10];
    uint64_t v12 = v11[11];
    __swift_project_boxed_opaque_existential_1(v11 + 7, v13);
    (*(void (**)(uint64_t))(*(void *)(v12 + 16) + 360))(v13);
    sub_20A8CDB70();
    sub_20A8CDD50();
    sub_20A8CDE90();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_20A43FE20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8CD2C0();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x2105289B0](a2 + 16, v6);
  if (v9)
  {
    uint64_t v10 = *(void **)(v9 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_stateMachine);
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = (void *)sub_20A8CE240();
      uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v13(v8, a1, v4);
      uint64_t v14 = (objc_class *)type metadata accessor for StockChartViewController.ErrorContext(0);
      uint64_t v15 = (char *)objc_allocWithZone(v14);
      v13(&v15[OBJC_IVAR____TtCC8StocksUI24StockChartViewControllerP33_E483C2B618A7CE6B48867B145DEE9A5212ErrorContext_model], (uint64_t)v8, v4);
      v18.receiver = v15;
      v18.super_class = v14;
      id v16 = objc_msgSendSuper2(&v18, sel_init);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      id v17 = objc_msgSend(v11, sel_fireEventWithName_withContext_, v12, v16);
      swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_20A43FFE8()
{
  if (!qword_26AC7F678)
  {
    sub_20A8C2800();
    sub_20A440A74((unint64_t *)&qword_26AC68CA0, MEMORY[0x263F07490]);
    unint64_t v0 = sub_20A8CE200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7F678);
    }
  }
}

uint64_t sub_20A44007C(uint64_t a1, uint64_t a2)
{
  sub_20A43D7C4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A440110()
{
  return objectdestroyTm(MEMORY[0x263F7A478]);
}

uint64_t sub_20A440128(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_20A8C74F0() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_20A43EAFC(a1, v4);
}

uint64_t sub_20A440198()
{
  return sub_20A43C414(v0);
}

uint64_t sub_20A4401A0()
{
  return sub_20A43CB30(v0);
}

uint64_t sub_20A4401A8()
{
  uint64_t v1 = sub_20A8C2BC0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A440264()
{
  uint64_t v1 = *(void *)(sub_20A8C2BC0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + v3);
  uint64_t v5 = *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_20A43C6A4(v0 + v2, v4, v5);
}

uint64_t sub_20A4402FC(uint64_t a1, uint64_t a2)
{
  sub_20A43D7C4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A440390(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_20A43D7C4(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A440410()
{
  uint64_t v1 = sub_20A8C2BC0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_20A43D7C4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v12 = *(void *)(*(void *)(v5 - 8) + 64);
  uint64_t v13 = sub_20A8C3D00();
  uint64_t v7 = *(void *)(v13 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  uint64_t v9 = sub_20A8C3E10();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v0 + v6, 1, v9)) {
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v0 + v6, v9);
  }
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + ((v6 + v12 + v8) & ~v8), v13);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A4406A0()
{
  uint64_t v1 = *(void *)(sub_20A8C2BC0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_20A43D7C4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  uint64_t v7 = *(void *)(sub_20A8C3D00() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v0 + v3);
  uint64_t v10 = *(void *)(v0 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_20A43BCBC(v0 + v2, v9, v0 + v5, v0 + v8, v10);
}

void sub_20A44083C()
{
  if (!qword_26AC68D88)
  {
    sub_20A43D7C4(255, (unint64_t *)&qword_26AC68D80, MEMORY[0x263F7A878], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC68D88);
    }
  }
}

uint64_t sub_20A4408D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A43D7C4(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_20A440940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_20A624E88(a1, a2, a3, a4, v4);
}

uint64_t sub_20A440948()
{
  return objectdestroyTm(MEMORY[0x263F7AF08]);
}

uint64_t objectdestroyTm(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)), v2);

  return swift_deallocObject();
}

uint64_t sub_20A4409F8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A4C3A28(a1);
}

uint64_t sub_20A440A74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A440ABC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A440B1C()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();
  uint64_t v4 = v3;

  qword_26AC9ED20 = v2;
  *(void *)algn_26AC9ED28 = v4;
}

void *initializeBufferWithCopyOfBuffer for PlacardMessage(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for PlacardMessage()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for PlacardMessage(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for PlacardMessage(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlacardMessage(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlacardMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlacardMessage()
{
  return &type metadata for PlacardMessage;
}

uint64_t sub_20A440D2C(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_20A8CF760();
  }
}

void *sub_20A440D60(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20A8C9830();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_20A440E2C(uint64_t a1)
{
  uint64_t v2 = sub_20A8C9830();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_20A440E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_20A440F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_20A440F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_20A441004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_20A441080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A441094);
}

uint64_t sub_20A441094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C9830();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_20A441164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A441178);
}

uint64_t sub_20A441178(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20A8C9830();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for StockSearchCellViewLayoutOptions()
{
  uint64_t result = qword_26763AC48;
  if (!qword_26763AC48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A441280()
{
  uint64_t result = sub_20A8C9830();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WatchlistCreationErrorAlert(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A4413E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistCreationErrorAlert()
{
  return &type metadata for WatchlistCreationErrorAlert;
}

uint64_t sub_20A441418()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v2 = sub_20A8CE2B0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_20A441610()
{
  return sub_20A441418();
}

uint64_t sub_20A441638()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t sub_20A441704()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v2 = sub_20A8CE2B0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_20A4417F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  sub_20A6242A0((uint64_t)sub_20A441D78, v4);

  return swift_release();
}

uint64_t type metadata accessor for StockListTestSuite()
{
  return self;
}

uint64_t sub_20A441974()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_20A4419AC(uint64_t a1)
{
  return sub_20A8B3588(a1, *(void *)(v1 + 16));
}

void sub_20A4419B4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = sub_20A8CC280();
  uint64_t v4 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  unsigned int v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8CA180();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unsigned int v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = (void *)sub_20A8CE240();
  id v12 = objc_msgSend(a1, sel_objectForKey_, v11);

  if (v12)
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
    sub_20A441D28(v23, v24);
    sub_20A8C9D60();
    swift_dynamicCast();
    uint64_t v13 = v22;
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7DB58], v7);
    sub_20A8C9CB0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v14 = (void *)sub_20A8CE240();
    id v15 = objc_msgSend(a1, sel_objectForKey_, v14);

    if (v15)
    {
      sub_20A8CF270();
      swift_unknownObjectRelease();
      sub_20A441D28(v23, v24);
      type metadata accessor for StockListViewController();
      swift_dynamicCast();
      id v16 = v22;
      sub_20A8C9BF0();
      id v17 = (void *)sub_20A8C94C0();
      swift_release();
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v19;
      *(void *)(v18 + 24) = v20;
      swift_retain();
      sub_20A8CC260();
      sub_20A623AD4(0x3FF0000000000000, 0, v17, (uint64_t)v6, (uint64_t)sub_20A441D70, v18, 1.0);

      swift_release();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v21);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

_OWORD *sub_20A441D28(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_20A441D38()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A441D70()
{
  return sub_20A4417F0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_20A441D78()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t dispatch thunk of BackgroundStylerType.backgroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t *assignWithCopy for AppBackgroundStyler(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    int v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *int v3 = v12;
      }
      else
      {
        id v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *int v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for AppBackgroundStyler(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for AppBackgroundStyler()
{
  return &type metadata for AppBackgroundStyler;
}

uint64_t initializeWithCopy for AddButtonStyler(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t getEnumTagSinglePayload for AddButtonStyler(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AddButtonStyler(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetailBackgroundStyler()
{
  return &type metadata for DetailBackgroundStyler;
}

uint64_t sub_20A442168()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 16) + 48))(v2);
}

uint64_t sub_20A4421B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 16) + 64))(v2);
}

uint64_t sub_20A442204@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  uint64_t v7 = *(void *)(v6 + 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 8);
  a2[3] = v5;
  a2[4] = v6;
  __swift_allocate_boxed_opaque_existential_1(a2);
  return v8(a1, v5, v7);
}

ValueMetadata *_s12PromiseErrorOMa()
{
  return &_s12PromiseErrorON;
}

uint64_t sub_20A4422A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v48 = a3;
  uint64_t v49 = a1;
  uint64_t v6 = sub_20A8C3F00();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for StockFeedViewerPage();
  uint64_t v59 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  id v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8CA740();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v53 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A442C1C();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v51 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A442E10(0, (unint64_t *)&qword_26AC69DF0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerPage, sub_20A442D30, MEMORY[0x263F7D320]);
  uint64_t v55 = *(void *)(v16 - 8);
  uint64_t v56 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v50 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v54 = (char *)&v47 - v19;
  int64_t v20 = *(void *)(a2 + 16);
  uint64_t v21 = MEMORY[0x263F8EE78];
  if (v20)
  {
    uint64_t v47 = v4;
    uint64_t v63 = MEMORY[0x263F8EE78];
    sub_20A68C4D4(0, v20, 0);
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v23 = v7 + 16;
    double v22 = v24;
    uint64_t v25 = a2 + ((*(unsigned __int8 *)(v23 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 64));
    uint64_t v57 = *(void *)(v23 + 56);
    uint64_t v58 = v23;
    do
    {
      v22(v9, v25, v6);
      v22(v11, (uint64_t)v9, v6);
      (*(void (**)(char *, uint64_t))(v23 - 8))(v9, v6);
      uint64_t v21 = v63;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C4D4(0, *(void *)(v21 + 16) + 1, 1);
        uint64_t v21 = v63;
      }
      unint64_t v27 = *(void *)(v21 + 16);
      unint64_t v26 = *(void *)(v21 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_20A68C4D4(v26 > 1, v27 + 1, 1);
        uint64_t v21 = v63;
      }
      *(void *)(v21 + 16) = v27 + 1;
      sub_20A442D64((uint64_t)v11, v21+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(void *)(v59 + 72) * v27);
      v25 += v57;
      --v20;
    }
    while (v20);
    uint64_t v4 = v47;
  }
  uint64_t v28 = sub_20A442CE8(&qword_26AC71348, (void (*)(uint64_t))type metadata accessor for StockFeedViewerPage);
  uint64_t v29 = sub_20A442CE8(&qword_26AC71330, (void (*)(uint64_t))type metadata accessor for StockFeedViewerPage);
  MEMORY[0x21051E250](v21, v52, v28, v29);
  sub_20A442D30();
  uint64_t v30 = v54;
  sub_20A8C83B0();
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v50, v30, v56);
  sub_20A442DC8(0);
  swift_allocObject();
  uint64_t v31 = sub_20A8C9570();
  swift_retain();
  sub_20A8CA730();
  uint64_t v63 = v31;
  sub_20A442E10(0, &qword_26AC6A380, (uint64_t (*)(uint64_t))sub_20A442DC8, sub_20A442E90, MEMORY[0x263F7D8C8]);
  swift_allocObject();
  uint64_t v32 = sub_20A8C9A50();
  __swift_project_boxed_opaque_existential_1((void *)(v4 + 16), *(void *)(v4 + 40));
  type metadata accessor for StockFeedViewerPageViewControllerProvider();
  swift_retain();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v34 = result;
    uint64_t v35 = sub_20A8C8FD0();
    swift_allocObject();
    swift_retain();
    uint64_t v36 = sub_20A8C8FC0();
    uint64_t v64 = v35;
    uint64_t v65 = MEMORY[0x263F7D628];
    uint64_t v62 = v31;
    uint64_t v63 = v36;
    uint64_t v60 = v32;
    uint64_t v61 = v34;
    sub_20A442EC4();
    id v38 = objc_allocWithZone(v37);
    uint64_t v39 = (void *)sub_20A8C9FB0();
    sub_20A8C3E20();
    sub_20A8C8FE0();
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1((void *)(v4 + 16), *(void *)(v4 + 40));
    type metadata accessor for StockFeedViewerViewController();
    swift_unownedRetainStrong();
    swift_unownedRetain();
    swift_unownedRetain();
    swift_release();
    uint64_t v40 = (void *)swift_allocObject();
    v40[2] = v4;
    v40[3] = v31;
    v40[4] = v39;
    swift_retain();
    id v41 = v39;
    uint64_t v42 = sub_20A8C5B80();
    swift_unownedRelease();
    uint64_t result = swift_release();
    if (v42)
    {
      (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v56);

      swift_release();
      swift_release();
      uint64_t v43 = sub_20A442CE8(&qword_26AC798C8, (void (*)(uint64_t))type metadata accessor for StockFeedViewerViewController);
      uint64_t v44 = sub_20A442CE8(&qword_26AC798B0, (void (*)(uint64_t))type metadata accessor for StockFeedViewerViewController);
      uint64_t v45 = sub_20A442CE8(&qword_26AC798A0, (void (*)(uint64_t))type metadata accessor for StockFeedViewerViewController);
      uint64_t result = sub_20A442CE8(&qword_26AC79898, (void (*)(uint64_t))type metadata accessor for StockFeedViewerViewController);
      uint64_t v46 = v48;
      uint64_t *v48 = v42;
      v46[1] = v43;
      v46[2] = v44;
      v46[3] = v45;
      v46[4] = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A442A58(void *a1, uint64_t a2)
{
  swift_getObjectType();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_unownedRetainStrong();
  sub_20A4342F4(a2 + 64, (uint64_t)v6);
  swift_release();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_20A8A9C70();
  sub_20A443124();
  sub_20A8C5A50();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A442DC8(0);
  sub_20A8C5A70();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_20A8C5A70();
}

uint64_t sub_20A442BB0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedViewerModule()
{
  return self;
}

void sub_20A442C1C()
{
  if (!qword_26AC69770)
  {
    type metadata accessor for StockFeedViewerPage();
    sub_20A442CE8(&qword_26AC71348, (void (*)(uint64_t))type metadata accessor for StockFeedViewerPage);
    sub_20A442CE8(&qword_26AC71330, (void (*)(uint64_t))type metadata accessor for StockFeedViewerPage);
    unint64_t v0 = sub_20A8C5F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69770);
    }
  }
}

uint64_t sub_20A442CE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A442D30()
{
  return sub_20A442CE8(&qword_26AC71328, (void (*)(uint64_t))type metadata accessor for StockFeedViewerPage);
}

uint64_t sub_20A442D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockFeedViewerPage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20A442DC8(uint64_t a1)
{
}

void sub_20A442E10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_20A442E90()
{
  return sub_20A442CE8(&qword_26AC6A280, sub_20A442DC8);
}

void sub_20A442EC4()
{
  if (!qword_26AC6A508)
  {
    sub_20A442DC8(255);
    type metadata accessor for StockFeedViewerPageViewControllerProvider();
    type metadata accessor for StockFeedViewerViewController();
    sub_20A442E10(255, &qword_26AC6A380, (uint64_t (*)(uint64_t))sub_20A442DC8, sub_20A442E90, MEMORY[0x263F7D8C8]);
    sub_20A442E90();
    sub_20A442CE8(qword_26AC7E578, (void (*)(uint64_t))type metadata accessor for StockFeedViewerPageViewControllerProvider);
    sub_20A442CE8(&qword_26AC798C0, (void (*)(uint64_t))type metadata accessor for StockFeedViewerViewController);
    sub_20A443034();
    unint64_t v0 = sub_20A8C9FC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A508);
    }
  }
}

unint64_t sub_20A443034()
{
  unint64_t result = qword_26AC6A378;
  if (!qword_26AC6A378)
  {
    sub_20A442E10(255, &qword_26AC6A380, (uint64_t (*)(uint64_t))sub_20A442DC8, sub_20A442E90, MEMORY[0x263F7D8C8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6A378);
  }
  return result;
}

uint64_t sub_20A4430D0()
{
  swift_unownedRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A443118(void *a1)
{
  return sub_20A442A58(a1, *(void *)(v1 + 16));
}

unint64_t sub_20A443124()
{
  unint64_t result = qword_26AC6AE70;
  if (!qword_26AC6AE70)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC6AE70);
  }
  return result;
}

uint64_t type metadata accessor for PostPurchaseOnboardingPresenter()
{
  return self;
}

id AccessCheckerHasBundleSubscription(_:to:lineNumber:)(void *a1, uint64_t a2, void *a3, int a4)
{
  id v4 = a3;
  if (a3)
  {
    uint64_t v7 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    if (objc_getAssociatedObject(v7, v7 + 1))
    {
      sub_20A8CF270();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v17 = 0u;
      long long v18 = 0u;
    }
    sub_20A443438((uint64_t)&v17, (uint64_t)v19);
    if (v20)
    {
      sub_20A4434F8();
      if (swift_dynamicCast())
      {
        uint64_t v8 = v16;
        unint64_t v9 = (unint64_t)objc_msgSend(v16, sel_integerValue);
        if (v9 == -1) {
          goto LABEL_19;
        }
        goto LABEL_11;
      }
    }
    else
    {
      sub_20A44349C((uint64_t)v19);
    }
    uint64_t v8 = 0;
    unint64_t v9 = 0;
LABEL_11:
    if (objc_getAssociatedObject(v7, (const void *)~v9))
    {
      sub_20A8CF270();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v17 = 0u;
      long long v18 = 0u;
    }
    sub_20A443438((uint64_t)&v17, (uint64_t)v19);
    if (v20)
    {
      sub_20A4434F8();
      if (swift_dynamicCast())
      {
        id v10 = v16;
        unsigned int v11 = objc_msgSend(v10, sel_integerValue);

        if ((((v11 - a4) ^ (v9 + a4)) & 1) == 0) {
          return 0;
        }
        goto LABEL_17;
      }
    }
    else
    {
      sub_20A44349C((uint64_t)v19);
    }
LABEL_19:

    if ((((v9 + a4) ^ a4) & 1) == 0) {
      return 0;
    }
LABEL_17:
    id v12 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    id v13 = objc_msgSend(v12, sel_bundleChannelIDs);

    uint64_t v14 = (void *)sub_20A8CE240();
    id v4 = objc_msgSend(v13, sel_containsObject_, v14);
  }
  return v4;
}

uint64_t sub_20A443438(uint64_t a1, uint64_t a2)
{
  sub_20A42F348();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A44349C(uint64_t a1)
{
  sub_20A42F348();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_20A4434F8()
{
  unint64_t result = qword_26AC686D0;
  if (!qword_26AC686D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC686D0);
  }
  return result;
}

BOOL AccessCheckerHasAccess(_:toItemPaid:isBundlePaid:channelID:lineNumber:)(id a1, char a2, char a3, uint64_t a4, uint64_t a5, int a6)
{
  if (a2)
  {
    id v11 = objc_msgSend(a1, sel_purchaseProvider);
    if (!a5)
    {
      swift_unknownObjectRelease();
      return 0;
    }
    id v12 = objc_msgSend(v11, sel_purchasedTagIDs);
    uint64_t v13 = sub_20A8CE7F0();

    LOBYTE(v12) = sub_20A4443F8(a4, a5, v13);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      if ((a3 & 1) == 0) {
        return 0;
      }
      goto LABEL_8;
    }
    return 1;
  }
  if ((a3 & 1) == 0) {
    return 1;
  }
  if (!a5) {
    return 0;
  }
LABEL_8:
  uint64_t v14 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v14, v14 + 1))
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v25 = 0u;
    long long v26 = 0u;
  }
  sub_20A443438((uint64_t)&v25, (uint64_t)v27);
  if (!v28)
  {
    sub_20A44349C((uint64_t)v27);
    goto LABEL_17;
  }
  sub_20A4434F8();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    uint64_t v15 = 0;
    unint64_t v16 = 0;
    goto LABEL_18;
  }
  uint64_t v15 = v24;
  unint64_t v16 = (unint64_t)objc_msgSend(v24, sel_integerValue);
  if (v16 == -1)
  {
LABEL_26:

    if ((((v16 + a6) ^ a6) & 1) == 0) {
      return 0;
    }
    goto LABEL_27;
  }
LABEL_18:
  if (objc_getAssociatedObject(v14, (const void *)~v16))
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v25 = 0u;
    long long v26 = 0u;
  }
  sub_20A443438((uint64_t)&v25, (uint64_t)v27);
  if (!v28)
  {
    sub_20A44349C((uint64_t)v27);
    goto LABEL_26;
  }
  sub_20A4434F8();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_26;
  }
  id v17 = v24;
  unsigned int v18 = objc_msgSend(v17, sel_integerValue);

  if ((((v18 - a6) ^ (v16 + a6)) & 1) == 0) {
    return 0;
  }
LABEL_27:
  id v19 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  id v20 = objc_msgSend(v19, sel_bundleChannelIDs);

  uint64_t v21 = (void *)sub_20A8CE240();
  unsigned __int8 v22 = objc_msgSend(v20, sel_containsObject_, v21);

  return (v22 & 1) != 0;
}

BOOL AccessCheckerHasAccess(_:to:lineNumber:)(void *a1, id a2, int a3)
{
  unsigned __int8 v6 = objc_msgSend(a2, sel_isPaid);
  if (objc_msgSend(a2, sel_respondsToSelector_, sel_isBundlePaid)) {
    unsigned int v7 = objc_msgSend(a2, sel_isBundlePaid);
  }
  else {
    unsigned int v7 = 0;
  }
  id v8 = objc_msgSend(a2, sel_sourceChannel);
  uint64_t v9 = (uint64_t)v8;
  if (v8)
  {
    id v10 = objc_msgSend(v8, sel_identifier);
    swift_unknownObjectRelease();
    uint64_t v11 = sub_20A8CE280();
    uint64_t v9 = v12;

    if (v6) {
      goto LABEL_6;
    }
LABEL_11:
    if (v7) {
      goto LABEL_15;
    }
    goto LABEL_12;
  }
  uint64_t v11 = 0;
  if ((v6 & 1) == 0) {
    goto LABEL_11;
  }
LABEL_6:
  id v13 = objc_msgSend(a1, sel_purchaseProvider);
  if (v9)
  {
    id v14 = objc_msgSend(v13, sel_purchasedTagIDs);
    uint64_t v15 = sub_20A8CE7F0();

    LOBYTE(v14) = sub_20A4443F8(v11, v9, v15);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
      if (!v7) {
        goto LABEL_35;
      }
      goto LABEL_15;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 1;
  }
  swift_unknownObjectRelease();
  if (!v7) {
    goto LABEL_35;
  }
LABEL_15:
  if (v9)
  {
    id v17 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    if (objc_getAssociatedObject(v17, v17 + 1))
    {
      sub_20A8CF270();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v27 = 0u;
      long long v28 = 0u;
    }
    sub_20A443438((uint64_t)&v27, (uint64_t)v29);
    if (v30)
    {
      sub_20A4434F8();
      if (swift_dynamicCast())
      {
        unsigned int v18 = v26;
        unint64_t v19 = (unint64_t)objc_msgSend(v26, sel_integerValue);
        if (v19 == -1)
        {
LABEL_34:

          if ((((v19 + a3) ^ a3) & 1) == 0) {
            goto LABEL_35;
          }
          goto LABEL_31;
        }
        goto LABEL_25;
      }
    }
    else
    {
      sub_20A44349C((uint64_t)v29);
    }
    unsigned int v18 = 0;
    unint64_t v19 = 0;
LABEL_25:
    if (objc_getAssociatedObject(v17, (const void *)~v19))
    {
      sub_20A8CF270();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v27 = 0u;
      long long v28 = 0u;
    }
    sub_20A443438((uint64_t)&v27, (uint64_t)v29);
    if (!v30)
    {
      sub_20A44349C((uint64_t)v29);
      goto LABEL_34;
    }
    sub_20A4434F8();
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_34;
    }
    id v20 = v26;
    unsigned int v21 = objc_msgSend(v20, sel_integerValue);

    if (((v21 - a3) ^ (v19 + a3)))
    {
LABEL_31:
      id v22 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
      swift_unknownObjectRelease();
      id v23 = objc_msgSend(v22, sel_bundleChannelIDs);

      id v24 = (void *)sub_20A8CE240();
      unsigned __int8 v25 = objc_msgSend(v23, sel_containsObject_, v24);
      swift_bridgeObjectRelease();

      return (v25 & 1) != 0;
    }
LABEL_35:
    swift_bridgeObjectRelease();
  }
  return 0;
}

{
  unsigned __int8 v6;
  unsigned __int8 v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  char *v14;
  void *v16;
  unint64_t v17;
  id v18;
  unsigned int v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  long long v24;
  long long v25;
  unsigned char v26[24];
  uint64_t v27;

  unsigned __int8 v6 = objc_msgSend(a2, sel_isPaid);
  unsigned int v7 = objc_msgSend(a2, sel_isBundlePaid);
  id v8 = objc_msgSend(objc_msgSend(a2, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v9 = sub_20A8CE280();
  uint64_t v11 = v10;

  if ((v6 & 1) == 0)
  {
    if (v7) {
      goto LABEL_6;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    return 1;
  }
  uint64_t v12 = objc_msgSend(objc_msgSend(a1, sel_purchaseProvider), sel_purchasedTagIDs);
  id v13 = sub_20A8CE7F0();

  LOBYTE(v12) = sub_20A4443F8(v9, v11, v13);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if (v12) {
    goto LABEL_8;
  }
  if ((v7 & 1) == 0) {
    goto LABEL_27;
  }
LABEL_6:
  id v14 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v14, v14 + 1))
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
  }
  else
  {
    id v24 = 0u;
    unsigned __int8 v25 = 0u;
  }
  sub_20A443438((uint64_t)&v24, (uint64_t)v26);
  if (!v27)
  {
    sub_20A44349C((uint64_t)v26);
    goto LABEL_16;
  }
  sub_20A4434F8();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    unint64_t v16 = 0;
    id v17 = 0;
    goto LABEL_17;
  }
  unint64_t v16 = v23;
  id v17 = (unint64_t)objc_msgSend(v23, sel_integerValue);
  if (v17 == -1)
  {
LABEL_26:

    if ((((v17 + a3) ^ a3) & 1) == 0) {
      goto LABEL_27;
    }
    goto LABEL_23;
  }
LABEL_17:
  if (objc_getAssociatedObject(v14, (const void *)~v17))
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
  }
  else
  {
    id v24 = 0u;
    unsigned __int8 v25 = 0u;
  }
  sub_20A443438((uint64_t)&v24, (uint64_t)v26);
  if (!v27)
  {
    sub_20A44349C((uint64_t)v26);
    goto LABEL_26;
  }
  sub_20A4434F8();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_26;
  }
  unsigned int v18 = v23;
  unint64_t v19 = objc_msgSend(v18, sel_integerValue);

  if (((v19 - a3) ^ (v17 + a3)))
  {
LABEL_23:
    id v20 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    unsigned int v21 = objc_msgSend(v20, sel_bundleChannelIDs);

    id v22 = (void *)sub_20A8CE240();
    LOBYTE(v20) = objc_msgSend(v21, sel_containsObject_, v22);
    swift_bridgeObjectRelease();

    return (v20 & 1) != 0;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t AccessCheckerHasAccess(_:with:lineNumber:)(void *a1, void *a2, int a3)
{
  id v6 = objc_msgSend(a1, sel_purchaseProvider);
  if (objc_msgSend((id)swift_unknownObjectRetain(), sel_tagType) == (id)3)
  {
    id v7 = objc_msgSend(a2, sel_asSection);
    if (!v7
      || (id v8 = objc_msgSend(v7, sel_parentID), swift_unknownObjectRelease(), !v8))
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_8;
    }
  }
  else
  {
    id v8 = objc_msgSend(a2, sel_identifier);
  }
  uint64_t v9 = sub_20A8CE280();
  uint64_t v11 = v10;

  id v12 = objc_msgSend(v6, sel_purchasedTagIDs);
  uint64_t v13 = sub_20A8CE7F0();

  LOBYTE(v12) = sub_20A4443F8(v9, v11, v13);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12) {
    return 1;
  }
LABEL_8:
  uint64_t v15 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v15, v15 + 1))
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  sub_20A443438((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    sub_20A4434F8();
    if (swift_dynamicCast())
    {
      unint64_t v16 = v23;
      unint64_t v17 = (unint64_t)objc_msgSend(v23, sel_integerValue);
      if (v17 == -1) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
  }
  else
  {
    sub_20A44349C((uint64_t)v26);
  }
  unint64_t v16 = 0;
  unint64_t v17 = 0;
LABEL_17:
  if (objc_getAssociatedObject(v15, (const void *)~v17))
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  sub_20A443438((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    sub_20A4434F8();
    if (swift_dynamicCast())
    {
      id v18 = v23;
      unsigned int v19 = objc_msgSend(v18, sel_integerValue);

      if ((((v19 - a3) ^ (v17 + a3)) & 1) == 0) {
        return 0;
      }
      goto LABEL_23;
    }
  }
  else
  {
    sub_20A44349C((uint64_t)v26);
  }
LABEL_27:

  if ((((v17 + a3) ^ a3) & 1) == 0) {
    return 0;
  }
LABEL_23:
  id v20 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  id v21 = objc_msgSend(a2, sel_identifier);
  if (!v21)
  {
    sub_20A8CE280();
    id v21 = (id)sub_20A8CE240();
    swift_bridgeObjectRelease();
  }
  id v14 = objc_msgSend(v20, sel_containsTagID_, v21);

  return (uint64_t)v14;
}

uint64_t sub_20A4443F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_20A8CF880();
    sub_20A8CE360();
    uint64_t v6 = sub_20A8CF8C0();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_20A8CF760() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          unint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_20A8CF760() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_20A444530(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_retain();
    char v3 = sub_20A8CF320();
    swift_release();
    return v3 & 1;
  }
  else
  {
    if (*(void *)(a2 + 16)
      && (sub_20A444C50(),
          uint64_t v5 = sub_20A8CE1B0(),
          uint64_t v6 = -1 << *(unsigned char *)(a2 + 32),
          unint64_t v7 = v5 & ~v6,
          ((*(void *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0))
    {
      uint64_t v8 = ~v6;
      do
      {
        char v9 = sub_20A8CE210();
        if (v9) {
          break;
        }
        unint64_t v7 = (v7 + 1) & v8;
      }
      while (((*(void *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    else
    {
      char v9 = 0;
    }
    return v9 & 1;
  }
}

uint64_t sub_20A444660(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_20A8CE280();
    sub_20A8CF880();
    sub_20A8CE360();
    uint64_t v3 = sub_20A8CF8C0();
    swift_bridgeObjectRelease();
    uint64_t v4 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v5 = v3 & ~v4;
    uint64_t v6 = a2 + 56;
    if ((*(void *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
    {
      uint64_t v7 = sub_20A8CE280();
      uint64_t v9 = v8;
      if (v7 == sub_20A8CE280() && v9 == v10)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      char v12 = sub_20A8CF760();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12)
      {
LABEL_18:
        char v20 = 1;
        return v20 & 1;
      }
      uint64_t v13 = ~v4;
      unint64_t v14 = (v5 + 1) & v13;
      if ((*(void *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
      {
        while (1)
        {
          uint64_t v15 = sub_20A8CE280();
          uint64_t v17 = v16;
          if (v15 == sub_20A8CE280() && v17 == v18) {
            break;
          }
          char v20 = sub_20A8CF760();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
          {
            unint64_t v14 = (v14 + 1) & v13;
            if ((*(void *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14)) {
              continue;
            }
          }
          return v20 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  char v20 = 0;
  return v20 & 1;
}

uint64_t sub_20A444828(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_20A8C28C0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_20A444CA8((unint64_t *)&unk_26763E060, MEMORY[0x263F07548]),
        uint64_t v7 = sub_20A8CE1B0(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    char v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    unint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_20A444CA8(&qword_26763AC60, MEMORY[0x263F07548]);
      char v15 = sub_20A8CE210();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_20A444A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_20A8C8960();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_20A444CA8(&qword_26AC67750, MEMORY[0x263F7D4B0]),
        uint64_t v7 = sub_20A8CE1B0(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    char v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    unint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_20A444CA8(&qword_26AC69F58, MEMORY[0x263F7D4B0]);
      char v15 = sub_20A8CE210();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

void sub_20A444C50()
{
  if (!qword_26763AC58)
  {
    type metadata accessor for WelcomeView();
    unint64_t v0 = sub_20A8CF430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763AC58);
    }
  }
}

uint64_t sub_20A444CA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A444CF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int (*a4)(char *, uint64_t, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v116 = a5;
  uint64_t v132 = a4;
  uint64_t v129 = a3;
  uint64_t v130 = a2;
  uint64_t v108 = a1;
  uint64_t v119 = a6;
  uint64_t v120 = sub_20A8C2800();
  uint64_t v124 = *(void *)(v120 - 8);
  MEMORY[0x270FA5388](v120);
  uint64_t v113 = (char *)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C2AF0();
  uint64_t v117 = *(void *)(v7 - 8);
  uint64_t v118 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v125 = (char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x263F7A890];
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A446A3C(0, &qword_26AC68DA0, MEMORY[0x263F7A890], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v111 = (char *)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v110 = (uint64_t)&v107 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v126 = (uint64_t)&v107 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v112 = (char *)&v107 - v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v109 = (uint64_t)&v107 - v20;
  MEMORY[0x270FA5388](v21);
  id v23 = (char *)&v107 - v22;
  long long v24 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AEF0];
  sub_20A446A3C(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], v10);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v115 = (char *)&v107 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v123 = (uint64_t)&v107 - v28;
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)&v107 - v30;
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)&v107 - v33;
  uint64_t v35 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_20A446A3C(0, &qword_26AC68CC0, MEMORY[0x263F07490], v10);
  MEMORY[0x270FA5388](v36 - 8);
  uint64_t v121 = (uint64_t)&v107 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  uint64_t v114 = (uint64_t)&v107 - v39;
  MEMORY[0x270FA5388](v40);
  uint64_t v122 = (char *)&v107 - v41;
  MEMORY[0x270FA5388](v42);
  uint64_t v128 = (uint64_t)&v107 - v43;
  MEMORY[0x270FA5388](v44);
  uint64_t v46 = (char *)&v107 - v45;
  MEMORY[0x270FA5388](v47);
  uint64_t v49 = (char *)&v107 - v48;
  MEMORY[0x270FA5388](v50);
  uint64_t v52 = (char *)&v107 - v51;
  uint64_t v53 = v124;
  sub_20A4468B8((uint64_t)v132, (uint64_t)v49, &qword_26AC68CC0, v35);
  uint64_t v54 = v120;
  sub_20A4468B8(v130, (uint64_t)v34, &qword_26AC68FB0, v24);
  sub_20A4468B8(v129, (uint64_t)v23, &qword_26AC68DA0, v9);
  uint64_t v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
  uint64_t v131 = v53 + 48;
  uint64_t v132 = v55;
  unsigned int v56 = v55(v49, 1, v54);
  uint64_t v127 = v52;
  if (v56 == 1)
  {
    uint64_t v107 = v49;
    uint64_t v57 = v112;
    uint64_t v58 = (uint64_t)v34;
    sub_20A4468B8((uint64_t)v34, (uint64_t)v31, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    uint64_t v59 = sub_20A8C3E10();
    uint64_t v60 = *(void *)(v59 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v31, 1, v59) == 1)
    {
      sub_20A446938((uint64_t)v31, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v46, 1, 1, v54);
    }
    else
    {
      sub_20A8C3DB0();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v31, v59);
    }
    uint64_t v69 = v127;
    uint64_t v70 = (uint64_t)v57;
    uint64_t v71 = v109;
    sub_20A4468B8((uint64_t)v23, v109, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    if (v132(v46, 1, v54) == 1)
    {
      sub_20A4468B8(v71, v70, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      uint64_t v72 = sub_20A8C2CB0();
      uint64_t v73 = *(void *)(v72 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v70, 1, v72) == 1)
      {
        unint64_t v74 = (uint64_t (*)(uint64_t))MEMORY[0x263F7A890];
        sub_20A446938(v71, &qword_26AC68DA0, MEMORY[0x263F7A890]);
        sub_20A446938((uint64_t)v23, &qword_26AC68DA0, v74);
        sub_20A446938(v58, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
        sub_20A446938(v70, &qword_26AC68DA0, v74);
        uint64_t v53 = v124;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v124 + 56))(v69, 1, 1, v54);
      }
      else
      {
        sub_20A8C2C70();
        uint64_t v76 = (uint64_t (*)(uint64_t))MEMORY[0x263F7A890];
        sub_20A446938(v71, &qword_26AC68DA0, MEMORY[0x263F7A890]);
        sub_20A446938((uint64_t)v23, &qword_26AC68DA0, v76);
        sub_20A446938(v58, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
        (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v70, v72);
        uint64_t v53 = v124;
      }
      sub_20A446938((uint64_t)v46, &qword_26AC68CC0, MEMORY[0x263F07490]);
    }
    else
    {
      unint64_t v75 = (uint64_t (*)(uint64_t))MEMORY[0x263F7A890];
      sub_20A446938(v71, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      sub_20A446938((uint64_t)v23, &qword_26AC68DA0, v75);
      sub_20A446938(v58, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v69, v46, v54);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v69, 0, 1, v54);
    }
    uint64_t v61 = (uint64_t)v125;
    uint64_t v62 = v126;
    uint64_t v63 = v129;
    uint64_t v64 = v130;
    uint64_t v66 = v123;
    uint64_t v68 = (uint64_t)v115;
    uint64_t v67 = v116;
    sub_20A446938((uint64_t)v107, &qword_26AC68CC0, MEMORY[0x263F07490]);
    uint64_t v65 = (uint64_t)v122;
  }
  else
  {
    sub_20A446938((uint64_t)v23, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    sub_20A446938((uint64_t)v34, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v52, v49, v54);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v52, 0, 1, v54);
    uint64_t v61 = (uint64_t)v125;
    uint64_t v62 = v126;
    uint64_t v63 = v129;
    uint64_t v64 = v130;
    uint64_t v65 = (uint64_t)v122;
    uint64_t v66 = v123;
    uint64_t v68 = (uint64_t)v115;
    uint64_t v67 = v116;
  }
  sub_20A4468B8(v67, v65, &qword_26AC68CC0, MEMORY[0x263F07490]);
  sub_20A4468B8(v64, v66, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  sub_20A4468B8(v63, v62, &qword_26AC68DA0, MEMORY[0x263F7A890]);
  if (v132((char *)v65, 1, v54) == 1)
  {
    sub_20A4468B8(v66, v68, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    uint64_t v77 = sub_20A8C3E10();
    uint64_t v78 = *(void *)(v77 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v68, 1, v77) == 1)
    {
      sub_20A446938(v68, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      uint64_t v79 = v114;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v114, 1, 1, v54);
    }
    else
    {
      uint64_t v82 = v68;
      uint64_t v79 = v114;
      sub_20A8C3D80();
      uint64_t v62 = v126;
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v82, v77);
    }
    uint64_t v83 = (uint64_t)v111;
    uint64_t v84 = v110;
    sub_20A4468B8(v62, v110, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    if (v132((char *)v79, 1, v54) == 1)
    {
      sub_20A4468B8(v84, v83, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      uint64_t v85 = v84;
      uint64_t v86 = sub_20A8C2CB0();
      uint64_t v87 = *(void *)(v86 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v83, 1, v86) == 1)
      {
        uint64_t v88 = (uint64_t (*)(uint64_t))MEMORY[0x263F7A890];
        sub_20A446938(v85, &qword_26AC68DA0, MEMORY[0x263F7A890]);
        sub_20A446938(v126, &qword_26AC68DA0, v88);
        sub_20A446938(v123, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
        sub_20A446938(v83, &qword_26AC68DA0, v88);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v128, 1, 1, v54);
      }
      else
      {
        sub_20A8C2C50();
        uint64_t v91 = v83;
        uint64_t v92 = (uint64_t (*)(uint64_t))MEMORY[0x263F7A890];
        sub_20A446938(v85, &qword_26AC68DA0, MEMORY[0x263F7A890]);
        sub_20A446938(v126, &qword_26AC68DA0, v92);
        sub_20A446938(v123, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
        uint64_t v93 = v91;
        uint64_t v65 = (uint64_t)v122;
        (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v93, v86);
      }
      uint64_t v81 = (uint64_t)v127;
      sub_20A446938(v114, &qword_26AC68CC0, MEMORY[0x263F07490]);
      uint64_t v61 = (uint64_t)v125;
    }
    else
    {
      uint64_t v89 = (uint64_t (*)(uint64_t))MEMORY[0x263F7A890];
      sub_20A446938(v84, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      sub_20A446938(v62, &qword_26AC68DA0, v89);
      sub_20A446938(v66, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      uint64_t v90 = v128;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v128, v79, v54);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v90, 0, 1, v54);
      uint64_t v61 = (uint64_t)v125;
      uint64_t v81 = (uint64_t)v127;
    }
    sub_20A446938(v65, &qword_26AC68CC0, MEMORY[0x263F07490]);
  }
  else
  {
    sub_20A446938(v62, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    sub_20A446938(v66, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    uint64_t v80 = v128;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v128, v65, v54);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v80, 0, 1, v54);
    uint64_t v81 = (uint64_t)v127;
  }
  sub_20A445EA0(v64, v61);
  uint64_t v94 = v121;
  sub_20A4468B8(v81, v121, &qword_26AC68CC0, MEMORY[0x263F07490]);
  if (v132((char *)v94, 1, v54) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v61, v118);
    unint64_t v95 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
    sub_20A446938(v128, &qword_26AC68CC0, MEMORY[0x263F07490]);
    sub_20A446938(v81, &qword_26AC68CC0, v95);
  }
  else
  {
    uint64_t v96 = v81;
    uint64_t v97 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 32);
    uint64_t v98 = (uint64_t)v113;
    v97(v113, v94, v54);
    uint64_t v99 = v61;
    BOOL v100 = sub_20A446234(v98, v61);
    sub_20A446938(v96, &qword_26AC68CC0, MEMORY[0x263F07490]);
    if (v100)
    {
      uint64_t v101 = sub_20A8C3F00();
      uint64_t v102 = v119;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 16))(v119, v108, v101);
      uint64_t v103 = (int *)type metadata accessor for StockEarningsModel();
      v97((char *)(v102 + v103[5]), v98, v54);
      sub_20A4469A8(v128, v102 + v103[6]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v117 + 32))(v102 + v103[7], v99, v118);
      *(unsigned char *)(v102 + v103[8]) = 0;
      *(unsigned char *)(v102 + v103[9]) = 0;
      return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v103 - 1) + 56))(v102, 0, 1, v103);
    }
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v98, v54);
    (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v61, v118);
    uint64_t v94 = v128;
  }
  uint64_t v105 = v119;
  sub_20A446938(v94, &qword_26AC68CC0, MEMORY[0x263F07490]);
  uint64_t v106 = type metadata accessor for StockEarningsModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v105, 1, 1, v106);
}

uint64_t sub_20A445EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AEF0];
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A446A3C(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v21 - v7;
  sub_20A446A3C(0, (unint64_t *)&unk_26AC68D30, MEMORY[0x263F079C8], v5);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v21 - v13;
  sub_20A4468B8(a1, (uint64_t)v8, &qword_26AC68FB0, v4);
  uint64_t v15 = sub_20A8C3E10();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15) == 1)
  {
    sub_20A446938((uint64_t)v8, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    uint64_t v17 = sub_20A8C2AF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v14, 1, 1, v17);
  }
  else
  {
    sub_20A8C3D50();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v15);
    uint64_t v17 = sub_20A8C2AF0();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17) != 1) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(a2, v14, v17);
    }
  }
  sub_20A446938((uint64_t)v14, (unint64_t *)&unk_26AC68D30, MEMORY[0x263F079C8]);
  sub_20A8C2A90();
  sub_20A8C2AF0();
  uint64_t v19 = *(void *)(v17 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v11, 1, v17);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(a2, v11, v17);
  }
  __break(1u);
  return result;
}

BOOL sub_20A446234(uint64_t a1, uint64_t a2)
{
  uint64_t v55 = a2;
  uint64_t v48 = a1;
  uint64_t v3 = sub_20A8C22A0();
  uint64_t v56 = *(void *)(v3 - 8);
  uint64_t v57 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v50 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C2800();
  uint64_t v46 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v47 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v45 - v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v58 = (char *)&v45 - v11;
  uint64_t v12 = sub_20A8C2AF0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_20A8C2A80();
  uint64_t v53 = *(void *)(v16 - 8);
  uint64_t v54 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_20A8C3190();
  uint64_t v51 = *(void *)(v19 - 8);
  uint64_t v52 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
  uint64_t v49 = v21;
  uint64_t v22 = v5;
  uint64_t v23 = v46;
  sub_20A8C3AC0();
  sub_20A8C2A40();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v55, v12);
  sub_20A8C2A50();
  sub_20A8C27F0();
  long long v24 = v58;
  sub_20A8C29A0();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v23 + 8);
  uint64_t v55 = v22;
  v25(v9, v22);
  uint64_t v26 = v47;
  sub_20A8C29A0();
  sub_20A446A3C(0, (unint64_t *)&qword_26AC7FE70, MEMORY[0x263F07908], MEMORY[0x263F8E0F8]);
  uint64_t v27 = sub_20A8C2A60();
  uint64_t v28 = *(void *)(v27 - 8);
  unint64_t v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, void, uint64_t))(v28 + 104))(v30 + v29, *MEMORY[0x263F078C8], v27);
  sub_20A7BA4B0(v30);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v31 = v50;
  sub_20A8C29C0();
  uint64_t v32 = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = sub_20A8C2280();
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v31, v57);
    uint64_t v43 = v55;
    v25(v26, v55);
    v25(v24, v43);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v18, v54);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v52);
    return 0;
  }
  unint64_t v35 = v33;
  uint64_t v36 = v49;
  uint64_t v38 = v56;
  uint64_t v37 = v57;
  if (v33 < 0)
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v32, v57);
    uint64_t v44 = v55;
    v25(v26, v55);
    v25(v58, v44);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v18, v54);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v36, v52);
    return 0;
  }
  unint64_t v39 = sub_20A8C2F90();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v32, v37);
  uint64_t v40 = v55;
  v25(v26, v55);
  v25(v58, v40);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v18, v54);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v36, v52);
  return !v35 || v39 >= v35;
}

uint64_t type metadata accessor for StockEarningsModelFactory()
{
  return self;
}

uint64_t sub_20A4468B8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_20A446A3C(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A446938(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A446A3C(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A4469A8(uint64_t a1, uint64_t a2)
{
  sub_20A446A3C(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20A446A3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A446AA0(void *a1)
{
  id v3 = objc_msgSend(self, sel_tertiarySystemFillColor);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = a1;
  id v5 = objc_allocWithZone(MEMORY[0x263F825C8]);
  v13[4] = sub_20A446F64;
  v13[5] = v4;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  v13[2] = sub_20A446EBC;
  v13[3] = &block_descriptor_0;
  uint64_t v6 = _Block_copy(v13);
  id v7 = v3;
  id v8 = a1;
  id v9 = objc_msgSend(v5, sel_initWithDynamicProvider_, v6);
  _Block_release(v6);
  swift_release();
  id v10 = objc_msgSend(v1, sel_backgroundImageForState_, 0);
  if (v10)
  {
    id v11 = v10;
    id v12 = objc_msgSend(v10, sel_imageWithTintColor_, v9);
    objc_msgSend(v1, sel_setBackgroundImage_forState_, v12, 0);

    id v7 = v11;
    id v9 = v12;
  }
}

uint64_t type metadata accessor for StockFeedStyler()
{
  return self;
}

uint64_t sub_20A446C50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 40);
  uint64_t v8 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  id v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  uint64_t v12 = v10(a1, v7, v9);
  double v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A431A50((uint64_t)v15, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

uint64_t sub_20A446D9C()
{
  uint64_t v1 = (void *)(*(void *)v0 + 16);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v3 + 16) + 16) + 8))(v2);
}

id sub_20A446DF0(uint64_t a1, id a2, void *a3)
{
  id v5 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  id v6 = objc_msgSend(a3, sel_resolvedColorWithTraitCollection_, a1);
  sub_20A8CEED0();
  sub_20A446F6C((uint64_t)&v9, (uint64_t)v10);
  uint64_t v7 = sub_20A8CEEC0();

  if (v7)
  {

    return (id)v7;
  }
  return v5;
}

id sub_20A446EBC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  id v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t sub_20A446F24()
{
  return swift_deallocObject();
}

id sub_20A446F64(uint64_t a1)
{
  return sub_20A446DF0(a1, *(id *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_20A446F6C(uint64_t a1, uint64_t a2)
{
  sub_20A446FD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20A446FD0()
{
  if (!qword_26AC69380)
  {
    sub_20A447028(255);
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69380);
    }
  }
}

uint64_t sub_20A447028(uint64_t a1)
{
  uint64_t v1 = qword_26AC69378;
  if (!qword_26AC69378)
  {
    MEMORY[0x270FA5388](a1);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v1 = TupleTypeMetadata;
    if (!v3) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_26AC69378);
    }
  }
  return v1;
}

uint64_t sub_20A44710C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v89 = a4;
  id v90 = a3;
  uint64_t v99 = a2;
  id v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A4481C4(0, &qword_26763AC68, (uint64_t (*)(uint64_t))sub_20A447E1C, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v94 = (char *)&v84 - v7;
  uint64_t v8 = sub_20A8C2800();
  uint64_t v87 = *(void *)(v8 - 8);
  uint64_t v88 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v86 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StocksAudioTrack();
  uint64_t v98 = *(id **)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v92 = (uint64_t)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v97 = (id *)((char *)&v84 - v13);
  MEMORY[0x270FA5388](v14);
  uint64_t v91 = (id *)((char *)&v84 - v15);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (id *)((char *)&v84 - v17);
  sub_20A447E84();
  uint64_t v20 = v19 - 8;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4481C4(0, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, v5);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v96 = (char *)&v84 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (id *)((char *)&v84 - v26);
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v84 - v29;
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v84 - v32;
  sub_20A447F18();
  uint64_t v35 = v34;
  uint64_t v93 = a1;
  sub_20A8C4F70();
  uint64_t v95 = v35;
  uint64_t v36 = (uint64_t)v98;
  sub_20A8C4F70();
  uint64_t v37 = (uint64_t)&v22[*(int *)(v20 + 56)];
  sub_20A447F98((uint64_t)v33, (uint64_t)v22);
  sub_20A447F98((uint64_t)v30, v37);
  uint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  if (v38((uint64_t)v22, 1, v10) == 1)
  {
    sub_20A44808C((uint64_t)v30, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    sub_20A44808C((uint64_t)v33, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    if (v38(v37, 1, v10) == 1) {
      return sub_20A44808C((uint64_t)v22, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    }
    goto LABEL_6;
  }
  sub_20A447F98((uint64_t)v22, (uint64_t)v27);
  if (v38(v37, 1, v10) == 1)
  {
    sub_20A44808C((uint64_t)v30, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    sub_20A44808C((uint64_t)v33, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    sub_20A44802C((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
LABEL_6:
    sub_20A44802C((uint64_t)v22, (uint64_t (*)(void))sub_20A447E84);
    goto LABEL_7;
  }
  uint64_t v84 = v10;
  uint64_t v51 = v18;
  sub_20A4480FC(v37, (uint64_t)v18);
  uint64_t v98 = v27;
  id v52 = objc_msgSend(*v27, sel_identifier);
  uint64_t v53 = sub_20A8CE280();
  uint64_t v55 = v54;

  uint64_t v85 = v51;
  id v56 = objc_msgSend(*v51, sel_identifier);
  uint64_t v57 = sub_20A8CE280();
  uint64_t v59 = v58;

  if (v53 == v57 && v55 == v59)
  {
    swift_bridgeObjectRelease_n();
    sub_20A44802C((uint64_t)v85, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
    sub_20A44808C((uint64_t)v30, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    sub_20A44808C((uint64_t)v33, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    sub_20A44802C((uint64_t)v98, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
    return sub_20A44808C((uint64_t)v22, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  }
  char v83 = sub_20A8CF760();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A44802C((uint64_t)v85, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  sub_20A44808C((uint64_t)v30, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  sub_20A44808C((uint64_t)v33, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  sub_20A44802C((uint64_t)v98, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  uint64_t result = sub_20A44808C((uint64_t)v22, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  uint64_t v10 = v84;
  if ((v83 & 1) == 0)
  {
LABEL_7:
    uint64_t v40 = (uint64_t)v96;
    sub_20A8C4F70();
    if (v38(v40, 1, v10) == 1)
    {
      sub_20A44808C(v40, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
      uint64_t v41 = v97;
      uint64_t v42 = (uint64_t)v94;
    }
    else
    {
      uint64_t v43 = v91;
      sub_20A4480FC(v40, (uint64_t)v91);
      uint64_t v44 = *(uint64_t *)((char *)v43 + *(int *)(v10 + 32));
      sub_20A43F884();
      uint64_t v45 = (void *)sub_20A8CF1A0();
      sub_20A4481C4(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_20A8D3DC0;
      sub_20A448280(&qword_26763B5F0);
      uint64_t v47 = v10;
      uint64_t v48 = sub_20A8CF720();
      uint64_t v50 = v49;
      *(void *)(v46 + 56) = MEMORY[0x263F8D310];
      *(void *)(v46 + 64) = sub_20A43F830();
      *(void *)(v46 + 32) = v48;
      *(void *)(v46 + 40) = v50;
      sub_20A8CEA00();
      uint64_t v41 = v97;
      if (v44)
      {
        sub_20A8C7D90();

        swift_bridgeObjectRelease();
        id v60 = objc_msgSend(*v43, sel_identifier);
        if (!v60)
        {
          sub_20A8CE280();
          id v60 = (id)sub_20A8CE240();
          swift_bridgeObjectRelease();
        }
        uint64_t v61 = v86;
        sub_20A8C27F0();
        uint64_t v62 = (void *)sub_20A8C2730();
        (*(void (**)(char *, uint64_t))(v87 + 8))(v61, v88);
        objc_msgSend(v90, sel_markArticle_withLastListened_, v60, v62);
      }
      else
      {
        sub_20A8C7D90();

        swift_bridgeObjectRelease();
      }
      uint64_t v10 = v47;
      uint64_t v42 = (uint64_t)v94;
      sub_20A44802C((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
    }
    sub_20A771714(v42);
    sub_20A447E1C();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 48))(v42, 1, v63) == 1) {
      return sub_20A44808C(v42, &qword_26763AC68, (uint64_t (*)(uint64_t))sub_20A447E1C);
    }
    sub_20A4480FC(v42, (uint64_t)v41);
    uint64_t v64 = *(uint64_t *)((char *)v41 + *(int *)(v10 + 32));
    uint64_t v65 = v92;
    sub_20A448160((uint64_t)v41, v92);
    if ((v64 & 2) != 0)
    {
      objc_msgSend(*(id *)(v65 + *(int *)(v10 + 24)), sel_duration);
      char v66 = sub_20A8C5780();
      sub_20A44802C(v65, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
      if (v66)
      {
        id v67 = objc_msgSend(*v41, sel_articleID);
        uint64_t v68 = v67;
        uint64_t v69 = v67;
        uint64_t v70 = v67;
        if (!v67)
        {
          sub_20A8CE280();
          uint64_t v70 = (void *)sub_20A8CE240();
          swift_bridgeObjectRelease();
          sub_20A8CE280();
          uint64_t v69 = (void *)sub_20A8CE240();
          swift_bridgeObjectRelease();
          sub_20A8CE280();
          uint64_t v68 = (void *)sub_20A8CE240();
          swift_bridgeObjectRelease();
        }
        sub_20A43F884();
        id v71 = v67;
        uint64_t v72 = (void *)sub_20A8CF1A0();
        sub_20A4481C4(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
        uint64_t v73 = swift_allocObject();
        *(_OWORD *)(v73 + 16) = xmmword_20A8D3DC0;
        sub_20A448280(&qword_26763B5F0);
        uint64_t v74 = sub_20A8CF720();
        uint64_t v76 = v75;
        *(void *)(v73 + 56) = MEMORY[0x263F8D310];
        *(void *)(v73 + 64) = sub_20A43F830();
        *(void *)(v73 + 32) = v74;
        *(void *)(v73 + 40) = v76;
        sub_20A8CEA00();
        sub_20A8C7D90();

        swift_bridgeObjectRelease();
        id v77 = v90;
        objc_msgSend(v90, sel_markArticle_withCompletedListening_, v70, 1);

        objc_msgSend(v77, sel_markArticle_withListeningProgress_, v69, 0.0);
        objc_msgSend(v77, sel_markArticle_withReadingPositionJSON_, v68, 0);

        return sub_20A44802C((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
      }
    }
    else
    {
      sub_20A44802C(v65, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
    }
    sub_20A43F884();
    uint64_t v78 = (void *)sub_20A8CF1A0();
    sub_20A4481C4(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
    uint64_t v79 = swift_allocObject();
    *(_OWORD *)(v79 + 16) = xmmword_20A8D3DC0;
    sub_20A448280(&qword_26763B5F0);
    uint64_t v80 = sub_20A8CF720();
    uint64_t v82 = v81;
    *(void *)(v79 + 56) = MEMORY[0x263F8D310];
    *(void *)(v79 + 64) = sub_20A43F830();
    *(void *)(v79 + 32) = v80;
    *(void *)(v79 + 40) = v82;
    sub_20A8CEA00();
    sub_20A8C7D90();

    swift_bridgeObjectRelease();
    return sub_20A44802C((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  }
  return result;
}

uint64_t sub_20A447DE8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudioPlayingItemHistoryRecorder()
{
  return self;
}

void sub_20A447E1C()
{
  if (!qword_26763AC70)
  {
    type metadata accessor for StocksAudioTrack();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763AC70);
    }
  }
}

void sub_20A447E84()
{
  if (!qword_26763DC70)
  {
    sub_20A4481C4(255, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763DC70);
    }
  }
}

void sub_20A447F18()
{
  if (!qword_26AC69440)
  {
    type metadata accessor for StocksAudioTrack();
    sub_20A448280((unint64_t *)&unk_26AC6B910);
    unint64_t v0 = sub_20A8C4F90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69440);
    }
  }
}

uint64_t sub_20A447F98(uint64_t a1, uint64_t a2)
{
  sub_20A4481C4(0, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A44802C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A44808C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A4481C4(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A4480FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StocksAudioTrack();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A448160(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StocksAudioTrack();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_20A4481C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_20A448228()
{
  unint64_t result = qword_26AC80160;
  if (!qword_26AC80160)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC80160);
  }
  return result;
}

uint64_t sub_20A448280(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StocksAudioTrack();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4482C4(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = a2;
  uint64_t v4 = type metadata accessor for NewsStockFeedGroupKnobs();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StockFeedGroupKnobs();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4333C4();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v27 - v16;
  uint64_t v18 = type metadata accessor for StockFeedGroupConfig();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A448790(a1, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StockFeedGroupConfig);
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v21(v17, v20, v11);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
  sub_20A448790(v28, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StockFeedGroupKnobs);
  uint64_t v22 = (uint64_t)v9;
  uint64_t v23 = (uint64_t)v6;
  sub_20A4487F8(v22, (uint64_t)v6);
  sub_20A4342F4(v2 + 16, (uint64_t)v30);
  sub_20A4342F4(v2 + 56, (uint64_t)v29);
  type metadata accessor for NewsStockFeedGroupEmitter();
  uint64_t v24 = swift_allocObject();
  v21((char *)(v24 + OBJC_IVAR____TtC8StocksUI25NewsStockFeedGroupEmitter_config), v14, v11);
  sub_20A4487F8(v23, v24 + OBJC_IVAR____TtC8StocksUI25NewsStockFeedGroupEmitter_knobs);
  sub_20A42BEBC(v30, v24 + OBJC_IVAR____TtC8StocksUI25NewsStockFeedGroupEmitter_formatService);
  sub_20A42BEBC(v29, v24 + OBJC_IVAR____TtC8StocksUI25NewsStockFeedGroupEmitter_featureAvailability);
  *(void *)&v30[0] = v24;
  sub_20A44885C();
  swift_allocObject();
  sub_20A4488F0(&qword_26AC82B88, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupEmitter);
  uint64_t v25 = sub_20A8CC5F0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  return v25;
}

uint64_t sub_20A448618()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedGroupEmitterFactory()
{
  return self;
}

uint64_t sub_20A44867C()
{
  return sub_20A4488F0(&qword_26AC73FD0, (void (*)(uint64_t))type metadata accessor for StockFeedServiceConfig);
}

uint64_t sub_20A4486C4(uint64_t a1, uint64_t a2)
{
  return sub_20A4482C4(a1, a2);
}

uint64_t sub_20A4486E8(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = a4;
  uint64_t v13 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v9 = swift_allocObject();
  sub_20A42BEBC(a1, v9 + 16);
  sub_20A42BEBC(&v11, v9 + 56);
  return v9;
}

uint64_t sub_20A448790(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A4487F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsStockFeedGroupKnobs();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20A44885C()
{
  if (!qword_26AC6AFA0)
  {
    type metadata accessor for StockFeedServiceConfig();
    sub_20A4488F0(&qword_26AC73FD0, (void (*)(uint64_t))type metadata accessor for StockFeedServiceConfig);
    unint64_t v0 = sub_20A8CC600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6AFA0);
    }
  }
}

uint64_t sub_20A4488F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A448938(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = v2 + 2;
  uint64_t v8 = v2[5];
  uint64_t v7 = v2[6];
  __swift_project_boxed_opaque_existential_1(v6, v8);
  uint64_t v9 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v7 + 16) + 40))(v8);
  id v10 = objc_msgSend(v9, sel_colorWithAlphaComponent_, 0.5);

  objc_msgSend(a1, sel_setTintColor_, v10);
  uint64_t v12 = v3[5];
  uint64_t v11 = v3[6];
  __swift_project_boxed_opaque_existential_1(v6, v12);
  (*(void (**)(char *__return_ptr, uint64_t))(*(void *)(v11 + 16) + 24))((char *)v27 + 1, v12);
  objc_msgSend(a1, sel_setAccessibilityIgnoresInvertColors_, BYTE1(v27[0]));
  uint64_t v13 = v3[5];
  uint64_t v14 = v3[6];
  __swift_project_boxed_opaque_existential_1(v6, v13);
  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v14 + 72))((char *)v27 + 1, v13, v14);
  uint64_t v15 = v28;
  uint64_t v16 = v29;
  __swift_project_boxed_opaque_existential_1((void *)((char *)v27 + 1), v28);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v16 + 24))(v27, v15, v16);
  objc_msgSend(a1, sel_setBarStyle_, LOBYTE(v27[0]));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27 + 1);
  if (a2) {
    BOOL v17 = objc_msgSend(a2, sel_horizontalSizeClass) == (id)2;
  }
  else {
    BOOL v17 = 0;
  }
  id v18 = objc_msgSend(a1, sel_standardAppearance);
  objc_msgSend(v18, sel_configureWithDefaultBackground);
  uint64_t v20 = v3[5];
  uint64_t v19 = v3[6];
  __swift_project_boxed_opaque_existential_1(v6, v20);
  (*(void (**)(char *__return_ptr, uint64_t))(*(void *)(v19 + 16) + 32))((char *)v27 + 1, v20);
  if ((v27[0] & 0x100) != 0)
  {
    if (v17)
    {
      objc_msgSend(a1, sel_setTranslucent_, 1);
      objc_msgSend(a1, sel_setBarTintColor_, 0);
    }
    else
    {
      objc_msgSend(a1, sel_setTranslucent_, 0);
      objc_msgSend(v18, sel_configureWithOpaqueBackground);
      uint64_t v22 = v3[5];
      uint64_t v21 = v3[6];
      __swift_project_boxed_opaque_existential_1(v6, v22);
      uint64_t v23 = *(void *)(v21 + 16);
      uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 64);
      id v25 = v18;
      uint64_t v26 = (void *)v24(v22, v23);
      objc_msgSend(v25, sel_setBackgroundColor_, v26);
    }
  }
  else
  {
    objc_msgSend(a1, sel_ts_setBlurthroughBackground);
  }
  objc_msgSend(a1, sel_setScrollEdgeAppearance_, v18);
}

void sub_20A448C14(void *a1, id a2)
{
  if (objc_msgSend(a2, sel_horizontalSizeClass) == (id)2)
  {
    uint64_t v4 = self;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.862745098, 0.862745098, 0.870588235, 1.0);
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.219607843, 0.219607843, 0.22745098, 1.0);
    id v11 = objc_msgSend(v4, sel_ts_dynamicColor_withDarkStyleVariant_, v5, v6);

    uint64_t v10 = (uint64_t)v11;
  }
  else
  {
    uint64_t v7 = v2 + 2;
    uint64_t v9 = v2[5];
    uint64_t v8 = v2[6];
    __swift_project_boxed_opaque_existential_1(v7, v9);
    uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)(v8 + 16) + 56))(v9);
  }
  id v12 = (id)v10;
  objc_msgSend(a1, sel_setBackgroundColor_);
}

uint64_t type metadata accessor for MainStyler()
{
  return self;
}

uint64_t sub_20A448D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 40);
  uint64_t v8 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  uint64_t v12 = v10(a1, v7, v9);
  double v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A431A50((uint64_t)v15, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

uint64_t type metadata accessor for CurrencyDisplayCommandHandler()
{
  return self;
}

uint64_t sub_20A448F00()
{
  if (qword_26AC69070 != -1) {
    swift_once();
  }
  sub_20A449084(&qword_26763AC78);
  return sub_20A8C4320();
}

uint64_t sub_20A448F94@<X0>(unsigned char *a1@<X8>)
{
  if (qword_26AC69070 != -1) {
    swift_once();
  }
  sub_20A449084((unint64_t *)&unk_26AC82510);
  uint64_t result = sub_20A8C41C0();
  *a1 = v3;
  return result;
}

uint64_t sub_20A449044()
{
  return sub_20A449084((unint64_t *)&unk_26AC82510);
}

uint64_t sub_20A449078()
{
  return MEMORY[0x263F7E128];
}

uint64_t sub_20A449084(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CurrencyDisplayCommandHandler();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of WelcomeFlowProviderType.shouldShowWelcome()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for WelcomeFlowProvider()
{
  return self;
}

BOOL sub_20A449104()
{
  sub_20A8C4250();
  sub_20A8C4230();
  if (qword_26AC67678 != -1) {
    swift_once();
  }
  sub_20A8C4220();
  swift_release();
  uint64_t v0 = v2;
  if (v2 < 0)
  {
    sub_20A8C4230();
    if (qword_26AC69190 != -1) {
      swift_once();
    }
    sub_20A8C4220();
    swift_release();
    uint64_t v0 = v2;
  }
  return v0 < 2;
}

BOOL sub_20A4491F0()
{
  sub_20A8C4250();
  sub_20A8C4230();
  if (qword_26AC67678 != -1) {
    swift_once();
  }
  sub_20A8C4220();
  swift_release();
  uint64_t v0 = v8;
  if (v8 < 0)
  {
    sub_20A8C4230();
    if (qword_26AC69190 != -1) {
      swift_once();
    }
    sub_20A8C4220();
    swift_release();
    uint64_t v0 = v8;
  }
  if (v0 < 1)
  {
    if (qword_26AC81218 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_20A8C7DF0();
    __swift_project_value_buffer(v6, (uint64_t)qword_26AC9EC20);
    uint64_t v2 = sub_20A8C7DD0();
    os_log_type_t v3 = sub_20A8CEA00();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 134349312;
      sub_20A8CF1C0();
      *(_WORD *)(v4 + 12) = 2050;
      sub_20A8CF1C0();
      id v5 = "Terms and Conditions have NOT been agreed to, versionCompleted=%{public}ld, minimumRequired=%{public}ld";
      goto LABEL_16;
    }
  }
  else
  {
    if (qword_26AC81218 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_20A8C7DF0();
    __swift_project_value_buffer(v1, (uint64_t)qword_26AC9EC20);
    uint64_t v2 = sub_20A8C7DD0();
    os_log_type_t v3 = sub_20A8CEA00();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 134349312;
      sub_20A8CF1C0();
      *(_WORD *)(v4 + 12) = 2050;
      sub_20A8CF1C0();
      id v5 = "Terms and Conditions have been agreed to, versionCompleted=%{public}ld, minimumRequired=%{public}ld";
LABEL_16:
      _os_log_impl(&dword_20A414000, v2, v3, v5, (uint8_t *)v4, 0x16u);
      MEMORY[0x210528850](v4, -1, -1);
    }
  }

  return v0 > 0;
}

uint64_t sub_20A4494CC(void (*a1)(char *), uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  sub_20A42C4A4();
  uint64_t v6 = v5;
  uint64_t v26 = *(void (***)(char *, uint64_t))(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44E54C(0, (unint64_t *)&qword_26AC6A190, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, sub_20A44D3D4, MEMORY[0x263F7D648]);
  uint64_t v27 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v31 = (char *)v23 - v11;
  sub_20A44D40C();
  uint64_t v13 = v12;
  uint64_t v14 = sub_20A44D4CC();
  uint64_t v32 = v13;
  uint64_t v15 = sub_20A8CE880();
  uint64_t v16 = MEMORY[0x263F8EE78];
  if (!v15) {
    return v16;
  }
  uint64_t v17 = v15;
  uint64_t v34 = MEMORY[0x263F8EE78];
  sub_20A68C244(0, v15 & ~(v15 >> 63), 0);
  uint64_t result = sub_20A8CE840();
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v30 = v14;
    uint64_t v19 = (void (**)(char *))(v26 + 2);
    uint64_t v25 = v2;
    ++v26;
    v23[1] = v10 + 32;
    uint64_t v24 = v6;
    while (1)
    {
      uint64_t v20 = (void (*)(char *, void))sub_20A8CE8C0();
      (*v19)(v8);
      v20(v33, 0);
      v28(v8);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      (*v26)(v8, v6);
      uint64_t v16 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C244(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v34;
      }
      unint64_t v22 = *(void *)(v16 + 16);
      unint64_t v21 = *(void *)(v16 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_20A68C244(v21 > 1, v22 + 1, 1);
        uint64_t v16 = v34;
      }
      *(void *)(v16 + 16) = v22 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v22, v31, v27);
      uint64_t v34 = v16;
      sub_20A8CE8B0();
      --v17;
      uint64_t v6 = v24;
      if (!v17) {
        return v16;
      }
    }
    (*v26)(v8, v6);
    swift_release();
    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A449854(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_20A8CF470();
    for (unint64_t i = (uint64_t *)(a3 + 32); ; ++i)
    {
      uint64_t v9 = *i;
      swift_bridgeObjectRetain();
      a1(&v10, &v9);
      swift_bridgeObjectRelease();
      if (v3) {
        break;
      }
      sub_20A8CF450();
      sub_20A8CF480();
      sub_20A8CF490();
      sub_20A8CF460();
      if (!--v5) {
        return v11;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_20A449958(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_20A44A94C(a1, a2, a3, (uint64_t (*)(void))sub_20A42C4A4, (uint64_t (*)(void, double))sub_20A44D40C, sub_20A44D4CC, (void (*)(BOOL, uint64_t, uint64_t))sub_20A68C2B4);
}

uint64_t sub_20A4499C0(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_20A44A94C(a1, a2, a3, (uint64_t (*)(void))sub_20A44D40C, (uint64_t (*)(void, double))sub_20A44E010, sub_20A44E0D0, (void (*)(BOOL, uint64_t, uint64_t))sub_20A68C634);
}

uint64_t sub_20A449A28(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_20A44A94C(a1, a2, a3, (uint64_t (*)(void))sub_20A44DCA8, (uint64_t (*)(void, double))sub_20A44DED0, sub_20A44DF58, (void (*)(BOOL, uint64_t, uint64_t))sub_20A68C684);
}

uint64_t sub_20A449A90(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_20A44A94C(a1, a2, a3, (uint64_t (*)(void))sub_20A44DF90, (uint64_t (*)(void, double))sub_20A44DCA8, sub_20A44DFD8, (void (*)(BOOL, uint64_t, uint64_t))sub_20A68C6D4);
}

uint64_t sub_20A449AF8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A44A41C(a1, a2, a3, a4, (uint64_t (*)(void))sub_20A44DB30, (void (*)(void, uint64_t, void, double))sub_20A68C724, (uint64_t (*)(void))type metadata accessor for StockViewModel);
}

uint64_t sub_20A449B4C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A44A41C(a1, a2, a3, a4, (uint64_t (*)(void))sub_20A42D93C, (void (*)(void, uint64_t, void, double))sub_20A68C84C, MEMORY[0x263F7AF08]);
}

uint64_t sub_20A449BA0(void (*a1)(char *), uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  sub_20A42D93C();
  uint64_t v6 = v5;
  uint64_t v26 = *(void (***)(char *, uint64_t))(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44E54C(0, (unint64_t *)&qword_26AC6A198, (uint64_t (*)(uint64_t))type metadata accessor for StockListLayoutModel, sub_20A44D53C, MEMORY[0x263F7D648]);
  uint64_t v27 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v31 = (char *)v23 - v11;
  sub_20A42D350();
  uint64_t v13 = v12;
  uint64_t v14 = sub_20A44D574();
  uint64_t v32 = v13;
  uint64_t v15 = sub_20A8CE880();
  uint64_t v16 = MEMORY[0x263F8EE78];
  if (!v15) {
    return v16;
  }
  uint64_t v17 = v15;
  uint64_t v34 = MEMORY[0x263F8EE78];
  sub_20A68C8EC(0, v15 & ~(v15 >> 63), 0);
  uint64_t result = sub_20A8CE840();
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v30 = v14;
    uint64_t v19 = (void (**)(char *))(v26 + 2);
    uint64_t v25 = v2;
    ++v26;
    v23[1] = v10 + 32;
    uint64_t v24 = v6;
    while (1)
    {
      uint64_t v20 = (void (*)(char *, void))sub_20A8CE8C0();
      (*v19)(v8);
      v20(v33, 0);
      v28(v8);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      (*v26)(v8, v6);
      uint64_t v16 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C8EC(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v34;
      }
      unint64_t v22 = *(void *)(v16 + 16);
      unint64_t v21 = *(void *)(v16 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_20A68C8EC(v21 > 1, v22 + 1, 1);
        uint64_t v16 = v34;
      }
      *(void *)(v16 + 16) = v22 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v22, v31, v27);
      uint64_t v34 = v16;
      sub_20A8CE8B0();
      --v17;
      uint64_t v6 = v24;
      if (!v17) {
        return v16;
      }
    }
    (*v26)(v8, v6);
    swift_release();
    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A449F28(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A44A41C(a1, a2, a3, a4, (uint64_t (*)(void))sub_20A42C4A4, (void (*)(void, uint64_t, void, double))sub_20A68C2B4, MEMORY[0x263F7AF50]);
}

uint64_t sub_20A449F7C(void (*a1)(char *), uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  sub_20A42D718();
  uint64_t v6 = v5;
  uint64_t v26 = *(void (***)(char *, uint64_t))(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44D5E4();
  uint64_t v27 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v31 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44D6D8();
  uint64_t v13 = v12;
  uint64_t v14 = sub_20A44E604(&qword_26763AC90, 255, (void (*)(uint64_t))sub_20A44D6D8);
  uint64_t v32 = v13;
  uint64_t v15 = sub_20A8CE880();
  uint64_t v16 = MEMORY[0x263F8EE78];
  if (!v15) {
    return v16;
  }
  uint64_t v17 = v15;
  uint64_t v34 = MEMORY[0x263F8EE78];
  sub_20A68C95C(0, v15 & ~(v15 >> 63), 0);
  uint64_t result = sub_20A8CE840();
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v30 = v14;
    uint64_t v19 = (void (**)(char *))(v26 + 2);
    uint64_t v25 = v2;
    ++v26;
    v23[1] = v10 + 32;
    uint64_t v24 = v6;
    while (1)
    {
      uint64_t v20 = (void (*)(char *, void))sub_20A8CE8C0();
      (*v19)(v8);
      v20(v33, 0);
      v28(v8);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      (*v26)(v8, v6);
      uint64_t v16 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C95C(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v34;
      }
      unint64_t v22 = *(void *)(v16 + 16);
      unint64_t v21 = *(void *)(v16 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_20A68C95C(v21 > 1, v22 + 1, 1);
        uint64_t v16 = v34;
      }
      *(void *)(v16 + 16) = v22 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v22, v31, v27);
      uint64_t v34 = v16;
      sub_20A8CE8B0();
      --v17;
      uint64_t v6 = v24;
      if (!v17) {
        return v16;
      }
    }
    (*v26)(v8, v6);
    swift_release();
    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A44A2F8(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_20A44A94C(a1, a2, a3, (uint64_t (*)(void))sub_20A44D848, (uint64_t (*)(void, double))sub_20A44DA38, sub_20A44DAF8, (void (*)(BOOL, uint64_t, uint64_t))sub_20A68C9FC);
}

uint64_t sub_20A44A360(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_20A44A94C(a1, a2, a3, (uint64_t (*)(void))sub_20A44DB30, (uint64_t (*)(void, double))sub_20A44D848, sub_20A44DB78, (void (*)(BOOL, uint64_t, uint64_t))sub_20A68C724);
}

uint64_t sub_20A44A3C8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A44A41C(a1, a2, a3, a4, (uint64_t (*)(void))sub_20A44D7C8, (void (*)(void, uint64_t, void, double))sub_20A68CB44, MEMORY[0x263F7AF50]);
}

uint64_t sub_20A44A41C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void, uint64_t, void, double), uint64_t (*a7)(void))
{
  uint64_t v10 = v7;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v25 = a5(0);
  uint64_t v12 = *(void *)(v25 - 8);
  double v13 = MEMORY[0x270FA5388](v25);
  uint64_t v15 = (char *)v23 - v14;
  uint64_t v16 = *(void *)(a3 + 16);
  uint64_t v17 = MEMORY[0x263F8EE78];
  if (v16)
  {
    uint64_t v28 = MEMORY[0x263F8EE78];
    v23[0] = a6;
    a6(0, v16, 0, v13);
    uint64_t v17 = v28;
    uint64_t v18 = *(void *)(a7(0) - 8);
    uint64_t v19 = a3 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    uint64_t v24 = *(void *)(v18 + 72);
    v23[1] = v12 + 32;
    while (1)
    {
      v26(v19);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      uint64_t v28 = v17;
      unint64_t v21 = *(void *)(v17 + 16);
      unint64_t v20 = *(void *)(v17 + 24);
      if (v21 >= v20 >> 1)
      {
        ((void (*)(BOOL, unint64_t, uint64_t))v23[0])(v20 > 1, v21 + 1, 1);
        uint64_t v17 = v28;
      }
      *(void *)(v17 + 16) = v21 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v21, v15, v25);
      v19 += v24;
      if (!--v16) {
        return v17;
      }
    }
    swift_release();
  }
  return v17;
}

uint64_t sub_20A44A648(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_20A44A94C(a1, a2, a3, (uint64_t (*)(void))sub_20A44DBE8, (uint64_t (*)(void, double))sub_20A44E108, sub_20A44E1C8, (void (*)(BOOL, uint64_t, uint64_t))sub_20A68CB94);
}

uint64_t sub_20A44A6B0(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v17 = sub_20A8C2F20();
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v9)
  {
    uint64_t v21 = MEMORY[0x263F8EE78];
    sub_20A68CC6C(0, v9, 0);
    uint64_t v10 = v21;
    uint64_t v16 = v6 + 32;
    uint64_t v11 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v12 = *v11;
      v20[0] = *(v11 - 1);
      v20[1] = v12;
      swift_bridgeObjectRetain();
      v18(v20);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      uint64_t v21 = v10;
      unint64_t v14 = *(void *)(v10 + 16);
      unint64_t v13 = *(void *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_20A68CC6C(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v21;
      }
      v11 += 2;
      *(void *)(v10 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v14, v8, v17);
      if (!--v9) {
        return v10;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t sub_20A44A87C(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_20A44A94C(a1, a2, a3, (uint64_t (*)(void))sub_20A42D350, (uint64_t (*)(void, double))sub_20A42D460, sub_20A44E5CC, (void (*)(BOOL, uint64_t, uint64_t))sub_20A68CCBC);
}

uint64_t sub_20A44A8E4(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_20A44A94C(a1, a2, a3, (uint64_t (*)(void))sub_20A42D93C, (uint64_t (*)(void, double))sub_20A42D350, sub_20A44D574, (void (*)(BOOL, uint64_t, uint64_t))sub_20A68C84C);
}

uint64_t sub_20A44A94C(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void, double), uint64_t (*a6)(void), void (*a7)(BOOL, uint64_t, uint64_t))
{
  uint64_t v29 = (void (*)(BOOL, uint64_t, uint64_t))a7;
  uint64_t v11 = v8;
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v12 = a4(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v17 = MEMORY[0x270FA5388](v16);
  uint64_t v38 = (char *)&v28 - v18;
  uint64_t v19 = a5(0, v17);
  uint64_t v20 = a6();
  uint64_t v36 = v19;
  uint64_t v21 = sub_20A8CE880();
  uint64_t v22 = MEMORY[0x263F8EE78];
  if (!v21) {
    return v22;
  }
  uint64_t v23 = v21;
  uint64_t v40 = MEMORY[0x263F8EE78];
  v29(0, v21 & ~(v21 >> 63), 0);
  uint64_t result = sub_20A8CE840();
  if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v37 = v20;
    uint64_t v32 = (void (**)(char *, uint64_t))(v13 + 8);
    uint64_t v33 = (void (**)(char *))(v13 + 16);
    uint64_t v30 = v13 + 32;
    uint64_t v31 = v7;
    while (1)
    {
      uint64_t v25 = (void (*)(char *, void))sub_20A8CE8C0();
      (*v33)(v15);
      v25(v39, 0);
      v34(v15);
      if (v11) {
        break;
      }
      uint64_t v11 = 0;
      (*v32)(v15, v12);
      uint64_t v22 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v29(0, *(void *)(v22 + 16) + 1, 1);
        uint64_t v22 = v40;
      }
      unint64_t v27 = *(void *)(v22 + 16);
      unint64_t v26 = *(void *)(v22 + 24);
      if (v27 >= v26 >> 1)
      {
        v29(v26 > 1, v27 + 1, 1);
        uint64_t v22 = v40;
      }
      *(void *)(v22 + 16) = v27 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v22+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v27, v38, v12);
      uint64_t v40 = v22;
      sub_20A8CE8B0();
      if (!--v23) {
        return v22;
      }
    }
    (*v32)(v15, v12);
    swift_release();
    return v22;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A44AC6C(void (*a1)(char *), uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  sub_20A44D848();
  uint64_t v6 = v5;
  unint64_t v26 = *(void (***)(char *, uint64_t))(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44D940();
  uint64_t v27 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v31 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44DA38();
  uint64_t v13 = v12;
  uint64_t v14 = sub_20A44DAF8();
  uint64_t v32 = v13;
  uint64_t v15 = sub_20A8CE880();
  uint64_t v16 = MEMORY[0x263F8EE78];
  if (!v15) {
    return v16;
  }
  uint64_t v17 = v15;
  uint64_t v34 = MEMORY[0x263F8EE78];
  sub_20A68E1BC(0, v15 & ~(v15 >> 63), 0);
  uint64_t result = sub_20A8CE840();
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v30 = v14;
    uint64_t v19 = (void (**)(char *))(v26 + 2);
    uint64_t v25 = v2;
    ++v26;
    v23[1] = v10 + 32;
    uint64_t v24 = v6;
    while (1)
    {
      uint64_t v20 = (void (*)(char *, void))sub_20A8CE8C0();
      (*v19)(v8);
      v20(v33, 0);
      v28(v8);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      (*v26)(v8, v6);
      uint64_t v16 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68E1BC(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v34;
      }
      unint64_t v22 = *(void *)(v16 + 16);
      unint64_t v21 = *(void *)(v16 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_20A68E1BC(v21 > 1, v22 + 1, 1);
        uint64_t v16 = v34;
      }
      *(void *)(v16 + 16) = v22 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v22, v31, v27);
      uint64_t v34 = v16;
      sub_20A8CE8B0();
      --v17;
      uint64_t v6 = v24;
      if (!v17) {
        return v16;
      }
    }
    (*v26)(v8, v6);
    swift_release();
    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A44AFB4(void (*a1)(char *), uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  sub_20A44DB30(0);
  uint64_t v6 = v5;
  unint64_t v26 = *(void (***)(char *, uint64_t))(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44E54C(0, (unint64_t *)&qword_26763AC98, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchLayoutModel, sub_20A44DA00, MEMORY[0x263F7D648]);
  uint64_t v27 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v31 = (char *)v23 - v11;
  sub_20A44D848();
  uint64_t v13 = v12;
  uint64_t v14 = sub_20A44DB78();
  uint64_t v32 = v13;
  uint64_t v15 = sub_20A8CE880();
  uint64_t v16 = MEMORY[0x263F8EE78];
  if (!v15) {
    return v16;
  }
  uint64_t v17 = v15;
  uint64_t v34 = MEMORY[0x263F8EE78];
  sub_20A68E20C(0, v15 & ~(v15 >> 63), 0);
  uint64_t result = sub_20A8CE840();
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v30 = v14;
    uint64_t v19 = (void (**)(char *))(v26 + 2);
    uint64_t v25 = v2;
    ++v26;
    v23[1] = v10 + 32;
    uint64_t v24 = v6;
    while (1)
    {
      uint64_t v20 = (void (*)(char *, void))sub_20A8CE8C0();
      (*v19)(v8);
      v20(v33, 0);
      v28(v8);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      (*v26)(v8, v6);
      uint64_t v16 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68E20C(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v34;
      }
      unint64_t v22 = *(void *)(v16 + 16);
      unint64_t v21 = *(void *)(v16 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_20A68E20C(v21 > 1, v22 + 1, 1);
        uint64_t v16 = v34;
      }
      *(void *)(v16 + 16) = v22 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v22, v31, v27);
      uint64_t v34 = v16;
      sub_20A8CE8B0();
      --v17;
      uint64_t v6 = v24;
      if (!v17) {
        return v16;
      }
    }
    (*v26)(v8, v6);
    swift_release();
    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A44B33C(void (*a1)(char *), uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  sub_20A44D7C8(0);
  uint64_t v6 = v5;
  unint64_t v26 = *(void (***)(char *, uint64_t))(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44E54C(0, (unint64_t *)&qword_26AC6A180, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel, sub_20A44DBB0, MEMORY[0x263F7D648]);
  uint64_t v27 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v31 = (char *)v23 - v11;
  sub_20A44DBE8();
  uint64_t v13 = v12;
  uint64_t v14 = sub_20A44E604((unint64_t *)&unk_26AC69EA0, 255, (void (*)(uint64_t))sub_20A44DBE8);
  uint64_t v32 = v13;
  uint64_t v15 = sub_20A8CE880();
  uint64_t v16 = MEMORY[0x263F8EE78];
  if (!v15) {
    return v16;
  }
  uint64_t v17 = v15;
  uint64_t v34 = MEMORY[0x263F8EE78];
  sub_20A68E25C(0, v15 & ~(v15 >> 63), 0);
  uint64_t result = sub_20A8CE840();
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v30 = v14;
    uint64_t v19 = (void (**)(char *))(v26 + 2);
    uint64_t v25 = v2;
    ++v26;
    v23[1] = v10 + 32;
    uint64_t v24 = v6;
    while (1)
    {
      uint64_t v20 = (void (*)(char *, void))sub_20A8CE8C0();
      (*v19)(v8);
      v20(v33, 0);
      v28(v8);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      (*v26)(v8, v6);
      uint64_t v16 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68E25C(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v34;
      }
      unint64_t v22 = *(void *)(v16 + 16);
      unint64_t v21 = *(void *)(v16 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_20A68E25C(v21 > 1, v22 + 1, 1);
        uint64_t v16 = v34;
      }
      *(void *)(v16 + 16) = v22 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v22, v31, v27);
      uint64_t v34 = v16;
      sub_20A8CE8B0();
      --v17;
      uint64_t v6 = v24;
      if (!v17) {
        return v16;
      }
    }
    (*v26)(v8, v6);
    swift_release();
    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A44B6F8(void (*a1)(char *), uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  sub_20A44DCA8();
  uint64_t v6 = v5;
  unint64_t v26 = *(void (***)(char *, uint64_t))(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44DDBC();
  uint64_t v27 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v31 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44DED0();
  uint64_t v13 = v12;
  uint64_t v14 = sub_20A44DF58();
  uint64_t v32 = v13;
  uint64_t v15 = sub_20A8CE880();
  uint64_t v16 = MEMORY[0x263F8EE78];
  if (!v15) {
    return v16;
  }
  uint64_t v17 = v15;
  uint64_t v34 = MEMORY[0x263F8EE78];
  sub_20A68E39C(0, v15 & ~(v15 >> 63), 0);
  uint64_t result = sub_20A8CE840();
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v30 = v14;
    uint64_t v19 = (void (**)(char *))(v26 + 2);
    uint64_t v25 = v2;
    ++v26;
    v23[1] = v10 + 32;
    uint64_t v24 = v6;
    while (1)
    {
      uint64_t v20 = (void (*)(char *, void))sub_20A8CE8C0();
      (*v19)(v8);
      v20(v33, 0);
      v28(v8);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      (*v26)(v8, v6);
      uint64_t v16 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68E39C(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v34;
      }
      unint64_t v22 = *(void *)(v16 + 16);
      unint64_t v21 = *(void *)(v16 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_20A68E39C(v21 > 1, v22 + 1, 1);
        uint64_t v16 = v34;
      }
      *(void *)(v16 + 16) = v22 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v22, v31, v27);
      uint64_t v34 = v16;
      sub_20A8CE8B0();
      --v17;
      uint64_t v6 = v24;
      if (!v17) {
        return v16;
      }
    }
    (*v26)(v8, v6);
    swift_release();
    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A44BA40(void (*a1)(char *), uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  sub_20A44DF90(0);
  uint64_t v6 = v5;
  unint64_t v26 = *(void (***)(char *, uint64_t))(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44E54C(0, (unint64_t *)&qword_26AC6A188, (uint64_t (*)(uint64_t))type metadata accessor for TickerLayoutModel, sub_20A44DE98, MEMORY[0x263F7D648]);
  uint64_t v27 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v31 = (char *)v23 - v11;
  sub_20A44DCA8();
  uint64_t v13 = v12;
  uint64_t v14 = sub_20A44DFD8();
  uint64_t v32 = v13;
  uint64_t v15 = sub_20A8CE880();
  uint64_t v16 = MEMORY[0x263F8EE78];
  if (!v15) {
    return v16;
  }
  uint64_t v17 = v15;
  uint64_t v34 = MEMORY[0x263F8EE78];
  sub_20A68E3EC(0, v15 & ~(v15 >> 63), 0);
  uint64_t result = sub_20A8CE840();
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v30 = v14;
    uint64_t v19 = (void (**)(char *))(v26 + 2);
    uint64_t v25 = v2;
    ++v26;
    v23[1] = v10 + 32;
    uint64_t v24 = v6;
    while (1)
    {
      uint64_t v20 = (void (*)(char *, void))sub_20A8CE8C0();
      (*v19)(v8);
      v20(v33, 0);
      v28(v8);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      (*v26)(v8, v6);
      uint64_t v16 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68E3EC(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v34;
      }
      unint64_t v22 = *(void *)(v16 + 16);
      unint64_t v21 = *(void *)(v16 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_20A68E3EC(v21 > 1, v22 + 1, 1);
        uint64_t v16 = v34;
      }
      *(void *)(v16 + 16) = v22 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v22, v31, v27);
      uint64_t v34 = v16;
      sub_20A8CE8B0();
      --v17;
      uint64_t v6 = v24;
      if (!v17) {
        return v16;
      }
    }
    (*v26)(v8, v6);
    swift_release();
    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A44BDC8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A44BE20(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for StockViewModel, (void (*)(BOOL, unint64_t, uint64_t))sub_20A68E474, MEMORY[0x263F7AF08], (uint64_t (*)(void))type metadata accessor for StockViewModel);
}

uint64_t sub_20A44BE20(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(BOOL, unint64_t, uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  uint64_t v28 = a8;
  uint64_t v29 = a1;
  uint64_t v11 = v8;
  uint64_t v30 = a2;
  uint64_t v13 = a5(0);
  uint64_t v14 = *(void *)(v13 - 8);
  double v15 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v17 = (char *)&v25 - v16;
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (v18)
  {
    uint64_t v31 = MEMORY[0x263F8EE78];
    unint64_t v26 = a6;
    ((void (*)(void, uint64_t, void, double))a6)(0, v18, 0, v15);
    uint64_t v19 = v31;
    uint64_t v20 = *(void *)(a7(0) - 8);
    uint64_t v21 = a3 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    uint64_t v27 = *(void *)(v20 + 72);
    while (1)
    {
      v29(v21);
      if (v11) {
        break;
      }
      uint64_t v11 = 0;
      uint64_t v31 = v19;
      unint64_t v23 = *(void *)(v19 + 16);
      unint64_t v22 = *(void *)(v19 + 24);
      if (v23 >= v22 >> 1)
      {
        v26(v22 > 1, v23 + 1, 1);
        uint64_t v19 = v31;
      }
      *(void *)(v19 + 16) = v23 + 1;
      sub_20A44D760((uint64_t)v17, v19+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v23, v28);
      v21 += v27;
      if (!--v18) {
        return v19;
      }
    }
    swift_release();
  }
  return v19;
}

void *sub_20A44C030(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  v11[0] = MEMORY[0x263F8EE78];
  sub_20A44D1F8(0, &qword_26AC82C28, (uint64_t (*)(uint64_t))sub_20A44D0A4, MEMORY[0x263F7CE10]);
  swift_allocObject();
  v3[2] = sub_20A8C5D40();
  v3[3] = a1;
  v3[4] = a2;
  sub_20A4342F4((uint64_t)a3, (uint64_t)(v3 + 5));
  swift_getObjectType();
  uint64_t v8 = qword_26AC6AC40;
  swift_unknownObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_weakInit();
  sub_20A44D118();
  sub_20A8C8D30();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  swift_allocObject();
  swift_weakInit();
  sub_20A8C3F00();
  sub_20A8C8CA0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  if (qword_26AC6ABF8 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_weakInit();
  type metadata accessor for WatchlistMembershipCommandContext(0);
  sub_20A8C8CA0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  sub_20A44E604(&qword_26AC82CA8, v9, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipMenuGroupOptionProvider);
  swift_retain();
  sub_20A8C3670();
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  return v4;
}

uint64_t sub_20A44C348()
{
  sub_20A44D1F8(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = &v8[-v1 - 8];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    swift_getObjectType();
    if (qword_26AC6AC40 != -1) {
      swift_once();
    }
    sub_20A8C3F00();
    sub_20A8C8CC0();
    __swift_project_boxed_opaque_existential_1((void *)(v4 + 40), *(void *)(v4 + 64));
    uint64_t v5 = sub_20A8C3690();
    MEMORY[0x270FA5388](v5);
    *(&v7 - 2) = (uint64_t)v2;
    uint64_t v6 = sub_20A44BE20((void (*)(uint64_t))sub_20A44E64C, (uint64_t)(&v7 - 4), v5, (uint64_t)v8, type metadata accessor for WatchlistMembershipCommandContext, (void (*)(BOOL, unint64_t, uint64_t))sub_20A68C524, MEMORY[0x263F7AFD8], type metadata accessor for WatchlistMembershipCommandContext);
    swift_bridgeObjectRelease();
    uint64_t v7 = v6;
    swift_retain();
    sub_20A8C5D30();
    swift_release();
    sub_20A44D27C((uint64_t)v2);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A44C57C()
{
  sub_20A44D1F8(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = &v8[-v1 - 8];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    swift_getObjectType();
    if (qword_26AC6AC40 != -1) {
      swift_once();
    }
    sub_20A8C3F00();
    sub_20A8C8CC0();
    __swift_project_boxed_opaque_existential_1((void *)(v4 + 40), *(void *)(v4 + 64));
    uint64_t v5 = sub_20A8C3690();
    MEMORY[0x270FA5388](v5);
    *(&v7 - 2) = (uint64_t)v2;
    uint64_t v6 = sub_20A44BE20((void (*)(uint64_t))sub_20A44E64C, (uint64_t)(&v7 - 4), v5, (uint64_t)v8, type metadata accessor for WatchlistMembershipCommandContext, (void (*)(BOOL, unint64_t, uint64_t))sub_20A68C524, MEMORY[0x263F7AFD8], type metadata accessor for WatchlistMembershipCommandContext);
    swift_bridgeObjectRelease();
    uint64_t v7 = v6;
    swift_retain();
    sub_20A8C5D30();
    swift_release();
    sub_20A44D27C((uint64_t)v2);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A44C7B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_20A8CC220();
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8CC250();
  uint64_t v21 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8CC280();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v20 - v15;
  sub_20A44D17C();
  uint64_t v17 = (void *)sub_20A8CEBE0();
  sub_20A8CC270();
  MEMORY[0x2105245B0](v13, 1.0);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20(v13, v10);
  aBlock[4] = sub_20A44D1BC;
  aBlock[5] = a3;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4713FC;
  aBlock[3] = &block_descriptor_1;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_20A8CC240();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_20A44E604(&qword_26AC677A0, 255, MEMORY[0x263F8F030]);
  sub_20A44D1C4(0);
  sub_20A44E604((unint64_t *)&qword_26AC7F7B0, 255, sub_20A44D1C4);
  sub_20A8CF290();
  MEMORY[0x210526ED0](v16, v9, v6, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v22);
  return ((uint64_t (*)(char *, uint64_t))v20)(v16, v10);
}

uint64_t sub_20A44CB60()
{
  sub_20A44D1F8(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = &v8[-v1 - 8];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    swift_getObjectType();
    if (qword_26AC6AC40 != -1) {
      swift_once();
    }
    sub_20A8C3F00();
    sub_20A8C8CC0();
    __swift_project_boxed_opaque_existential_1((void *)(v4 + 40), *(void *)(v4 + 64));
    uint64_t v5 = sub_20A8C3690();
    MEMORY[0x270FA5388](v5);
    *(&v7 - 2) = (uint64_t)v2;
    uint64_t v6 = sub_20A44BE20((void (*)(uint64_t))sub_20A44D25C, (uint64_t)(&v7 - 4), v5, (uint64_t)v8, type metadata accessor for WatchlistMembershipCommandContext, (void (*)(BOOL, unint64_t, uint64_t))sub_20A68C524, MEMORY[0x263F7AFD8], type metadata accessor for WatchlistMembershipCommandContext);
    swift_bridgeObjectRelease();
    uint64_t v7 = v6;
    swift_retain();
    sub_20A8C5D30();
    swift_release();
    sub_20A44D27C((uint64_t)v2);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A44CD94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a3, a1, v6);
  uint64_t v7 = type metadata accessor for WatchlistMembershipCommandContext(0);
  return sub_20A44D308(a2, a3 + *(int *)(v7 + 20));
}

uint64_t sub_20A44CE20()
{
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WatchlistMembershipMenuGroupOptionProvider()
{
  return self;
}

uint64_t sub_20A44CE8C()
{
  return swift_retain();
}

uint64_t sub_20A44CE98()
{
  sub_20A44D1F8(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)v7 - v2;
  swift_getObjectType();
  if (qword_26AC6AC40 != -1) {
    swift_once();
  }
  sub_20A8C3F00();
  sub_20A8C8CC0();
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 40), *(void *)(v0 + 64));
  uint64_t v4 = sub_20A8C3690();
  MEMORY[0x270FA5388](v4);
  v7[-2] = v3;
  uint64_t v5 = sub_20A44BE20((void (*)(uint64_t))sub_20A44E64C, (uint64_t)&v7[-4], v4, (uint64_t)v8, type metadata accessor for WatchlistMembershipCommandContext, (void (*)(BOOL, unint64_t, uint64_t))sub_20A68C524, MEMORY[0x263F7AFD8], type metadata accessor for WatchlistMembershipCommandContext);
  swift_bridgeObjectRelease();
  v7[1] = v5;
  swift_retain();
  sub_20A8C5D30();
  swift_release();
  sub_20A44D27C((uint64_t)v3);
  return swift_bridgeObjectRelease();
}

void sub_20A44D0A4(uint64_t a1)
{
}

uint64_t sub_20A44D0D8()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A44D110()
{
  return sub_20A44C348();
}

unint64_t sub_20A44D118()
{
  unint64_t result = qword_26AC82C48;
  if (!qword_26AC82C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC82C48);
  }
  return result;
}

uint64_t sub_20A44D16C()
{
  return sub_20A44C57C();
}

uint64_t sub_20A44D174(uint64_t a1, uint64_t a2)
{
  return sub_20A44C7B0(a1, a2, v2);
}

unint64_t sub_20A44D17C()
{
  unint64_t result = qword_26AC7F940;
  if (!qword_26AC7F940)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC7F940);
  }
  return result;
}

uint64_t sub_20A44D1BC()
{
  return sub_20A44CB60();
}

void sub_20A44D1C4(uint64_t a1)
{
}

void sub_20A44D1F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A44D25C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A44CD94(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_20A44D27C(uint64_t a1)
{
  sub_20A44D1F8(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A44D308(uint64_t a1, uint64_t a2)
{
  sub_20A44D1F8(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A44D39C()
{
  return sub_20A44E604(&qword_26AC6D860, 255, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
}

uint64_t sub_20A44D3D4()
{
  return sub_20A44E604(&qword_26AC72240, 255, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
}

void sub_20A44D40C()
{
  if (!qword_26AC69F10)
  {
    type metadata accessor for StockFeedSectionDescriptor();
    type metadata accessor for StockFeedModel();
    sub_20A44E604(&qword_26AC76F98, 255, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    sub_20A44D39C();
    unint64_t v0 = sub_20A8C8910();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69F10);
    }
  }
}

uint64_t sub_20A44D4CC()
{
  return sub_20A44E604((unint64_t *)&unk_26AC69F00, 255, (void (*)(uint64_t))sub_20A44D40C);
}

uint64_t sub_20A44D504()
{
  return sub_20A44E604(&qword_26AC6D950, 255, (void (*)(uint64_t))type metadata accessor for StockListModel);
}

uint64_t sub_20A44D53C()
{
  return sub_20A44E604((unint64_t *)&unk_26AC72550, 255, (void (*)(uint64_t))type metadata accessor for StockListLayoutModel);
}

uint64_t sub_20A44D574()
{
  return sub_20A44E604(&qword_26AC69F40, 255, (void (*)(uint64_t))sub_20A42D350);
}

uint64_t sub_20A44D5AC()
{
  return sub_20A44E604((unint64_t *)&unk_26763D170, 255, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsModel);
}

void sub_20A44D5E4()
{
  if (!qword_26763AC80)
  {
    type metadata accessor for ManageWatchlistsLayoutSectionDescriptor();
    type metadata accessor for ManageWatchlistsLayoutModel();
    sub_20A44E604(&qword_26763AC88, 255, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutSectionDescriptor);
    sub_20A44E604(&qword_26763AB48, 255, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutModel);
    unint64_t v0 = sub_20A8C9870();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763AC80);
    }
  }
}

void sub_20A44D6D8()
{
  if (!qword_26763D180)
  {
    type metadata accessor for ManageWatchlistsModel();
    sub_20A42D7D4();
    sub_20A44D5AC();
    unint64_t v0 = sub_20A8CBB70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763D180);
    }
  }
}

uint64_t sub_20A44D760(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_20A44D7C8(uint64_t a1)
{
}

uint64_t sub_20A44D810()
{
  return sub_20A44E604((unint64_t *)&unk_26AC6E160, 255, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
}

void sub_20A44D848()
{
  if (!qword_26AC82470)
  {
    type metadata accessor for StockSearchSectionDescriptor();
    type metadata accessor for StockSearchModel();
    sub_20A44E604(&qword_26AC78AC0, 255, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
    sub_20A44D908();
    unint64_t v0 = sub_20A8C8910();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC82470);
    }
  }
}

uint64_t sub_20A44D908()
{
  return sub_20A44E604(&qword_26AC6F3E0, 255, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
}

void sub_20A44D940()
{
  if (!qword_26AC82DB8)
  {
    type metadata accessor for StockSearchLayoutSectionDescriptor();
    type metadata accessor for StockSearchLayoutModel();
    sub_20A44E604(&qword_26AC7CC48, 255, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutSectionDescriptor);
    sub_20A44DA00();
    unint64_t v0 = sub_20A8C9870();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC82DB8);
    }
  }
}

uint64_t sub_20A44DA00()
{
  return sub_20A44E604(&qword_26AC74170, 255, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutModel);
}

void sub_20A44DA38()
{
  if (!qword_26AC6AD38)
  {
    type metadata accessor for StockSearchSectionDescriptor();
    type metadata accessor for StockSearchModel();
    sub_20A44E604(&qword_26AC78AC0, 255, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
    sub_20A44D908();
    unint64_t v0 = sub_20A8CBB70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6AD38);
    }
  }
}

uint64_t sub_20A44DAF8()
{
  return sub_20A44E604((unint64_t *)&unk_26AC824A0, 255, (void (*)(uint64_t))sub_20A44DA38);
}

void sub_20A44DB30(uint64_t a1)
{
}

uint64_t sub_20A44DB78()
{
  return sub_20A44E604(&qword_26763ACA0, 255, (void (*)(uint64_t))sub_20A44D848);
}

uint64_t sub_20A44DBB0()
{
  return sub_20A44E604((unint64_t *)&unk_26AC72B40, 255, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
}

void sub_20A44DBE8()
{
  if (!qword_26AC69EB0)
  {
    type metadata accessor for ForYouFeedSectionDescriptor();
    type metadata accessor for ForYouFeedModel();
    sub_20A44E604(&qword_26AC776F0, 255, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
    sub_20A44D810();
    unint64_t v0 = sub_20A8C8910();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69EB0);
    }
  }
}

void sub_20A44DCA8()
{
  if (!qword_26AC69EE0)
  {
    type metadata accessor for TickerModel();
    sub_20A44DD30();
    sub_20A44DD84();
    unint64_t v0 = sub_20A8C8910();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69EE0);
    }
  }
}

unint64_t sub_20A44DD30()
{
  unint64_t result = qword_26AC75508;
  if (!qword_26AC75508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC75508);
  }
  return result;
}

uint64_t sub_20A44DD84()
{
  return sub_20A44E604(&qword_26AC6CBD0, 255, (void (*)(uint64_t))type metadata accessor for TickerModel);
}

void sub_20A44DDBC()
{
  if (!qword_26AC6A2C0)
  {
    type metadata accessor for TickerLayoutModel();
    sub_20A44DE44();
    sub_20A44DE98();
    unint64_t v0 = sub_20A8C9870();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A2C0);
    }
  }
}

unint64_t sub_20A44DE44()
{
  unint64_t result = qword_26AC79928;
  if (!qword_26AC79928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC79928);
  }
  return result;
}

uint64_t sub_20A44DE98()
{
  return sub_20A44E604(&qword_26AC6FF50, 255, (void (*)(uint64_t))type metadata accessor for TickerLayoutModel);
}

void sub_20A44DED0()
{
  if (!qword_26AC6AC90)
  {
    type metadata accessor for TickerModel();
    sub_20A44DD30();
    sub_20A44DD84();
    unint64_t v0 = sub_20A8CBB70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6AC90);
    }
  }
}

uint64_t sub_20A44DF58()
{
  return sub_20A44E604(&qword_26AC6AC88, 255, (void (*)(uint64_t))sub_20A44DED0);
}

void sub_20A44DF90(uint64_t a1)
{
}

uint64_t sub_20A44DFD8()
{
  return sub_20A44E604(&qword_26AC69ED8, 255, (void (*)(uint64_t))sub_20A44DCA8);
}

void sub_20A44E010()
{
  if (!qword_26AC6ACC0)
  {
    type metadata accessor for StockFeedSectionDescriptor();
    type metadata accessor for StockFeedModel();
    sub_20A44E604(&qword_26AC76F98, 255, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    sub_20A44D39C();
    unint64_t v0 = sub_20A8CBB70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6ACC0);
    }
  }
}

uint64_t sub_20A44E0D0()
{
  return sub_20A44E604((unint64_t *)&unk_26AC6ACB0, 255, (void (*)(uint64_t))sub_20A44E010);
}

void sub_20A44E108()
{
  if (!qword_26AC6AD30)
  {
    type metadata accessor for ForYouFeedSectionDescriptor();
    type metadata accessor for ForYouFeedModel();
    sub_20A44E604(&qword_26AC776F0, 255, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
    sub_20A44D810();
    unint64_t v0 = sub_20A8CBB70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6AD30);
    }
  }
}

uint64_t sub_20A44E1C8()
{
  return sub_20A44E604((unint64_t *)&unk_26AC6AD20, 255, (void (*)(uint64_t))sub_20A44E108);
}

void sub_20A44E200(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v28 = a1;
  uint64_t v9 = sub_20A8C40E0();
  uint64_t v33 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44E54C(0, (unint64_t *)&qword_26763AB50, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsModel, sub_20A44D5AC, MEMORY[0x263F7D2D8]);
  uint64_t v27 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v34 = (char *)&v23 - v14;
  int64_t v31 = a5 >> 1;
  uint64_t v32 = a4;
  BOOL v15 = __OFSUB__(a5 >> 1, a4);
  uint64_t v16 = (a5 >> 1) - a4;
  if (v15) {
    goto LABEL_19;
  }
  if (v16)
  {
    uint64_t v35 = MEMORY[0x263F8EE78];
    sub_20A68E4E4(0, v16 & ~(v16 >> 63), 0);
    if (v16 < 0)
    {
LABEL_20:
      __break(1u);
      return;
    }
    uint64_t v17 = 0;
    uint64_t v25 = v9;
    uint64_t v26 = v33 + 16;
    uint64_t v18 = (void (**)(char *, uint64_t))(v33 + 8);
    uint64_t v23 = v13 + 32;
    uint64_t v24 = v16;
    while (1)
    {
      uint64_t v19 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        break;
      }
      if (v32 + v17 >= v31 || v17 >= v16) {
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v11, v30 + *(void *)(v33 + 72) * (v32 + v17), v9);
      v28(v11);
      if (v6)
      {
        (*v18)(v11, v9);
        swift_release();
        return;
      }
      uint64_t v6 = 0;
      (*v18)(v11, v9);
      uint64_t v20 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68E4E4(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v20 = v35;
      }
      unint64_t v22 = *(void *)(v20 + 16);
      unint64_t v21 = *(void *)(v20 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_20A68E4E4(v21 > 1, v22 + 1, 1);
        uint64_t v20 = v35;
      }
      *(void *)(v20 + 16) = v22 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v20+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v22, v34, v27);
      uint64_t v35 = v20;
      ++v17;
      uint64_t v16 = v24;
      uint64_t v9 = v25;
      if (v19 == v24) {
        return;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
}

void sub_20A44E54C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_20A44E5CC()
{
  return sub_20A44E604((unint64_t *)&unk_26AC6ACE0, 255, (void (*)(uint64_t))sub_20A42D460);
}

uint64_t sub_20A44E604(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A44E64C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A44D25C(a1, a2);
}

uint64_t sub_20A44E664()
{
  sub_20A8CCAC0();
  sub_20A8CCAB0();
  sub_20A44E010();
  sub_20A8CBB00();
  if (v3)
  {
    sub_20A8CC520();
    swift_dynamicCast();
  }
  else
  {
    sub_20A44349C((uint64_t)v2);
  }
  type metadata accessor for StockFeedServiceConfig();
  sub_20A44E774(&qword_26AC73FD0, (void (*)(uint64_t))type metadata accessor for StockFeedServiceConfig);
  uint64_t v0 = sub_20A8CCAA0();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_20A44E774(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for WatchlistDeletionAlert(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  id v4 = v3;
  return a1;
}

void destroy for WatchlistDeletionAlert(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 8);
}

void *assignWithCopy for WatchlistDeletionAlert(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for WatchlistDeletionAlert(uint64_t a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for StockChartModelFactoryProviderOptions(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockChartModelFactoryProviderOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistDeletionAlert()
{
  return &type metadata for WatchlistDeletionAlert;
}

uint64_t sub_20A44E95C()
{
  return sub_20A44EAD4(*(void **)(v0 + 8));
}

uint64_t sub_20A44E964()
{
  return sub_20A44EC58(*(void **)(v0 + 8));
}

BOOL sub_20A44E96C()
{
  return objc_msgSend(*(id *)(v0 + 8), sel_horizontalSizeClass) != (id)1;
}

uint64_t sub_20A44E998@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F7D7E8];
  uint64_t v3 = sub_20A8C9580();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_20A44EA0C()
{
  return sub_20A44ED7C(*(void **)(v0 + 8));
}

uint64_t sub_20A44EA14()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t sub_20A44EAD4(void *a1)
{
  if (objc_msgSend(a1, sel_horizontalSizeClass) == (id)1) {
    sub_20A8C3F40();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v3 = sub_20A8C2370();

  return v3;
}

uint64_t sub_20A44EC58(void *a1)
{
  if (objc_msgSend(a1, sel_horizontalSizeClass) == (id)1) {
    return 0;
  }
  sub_20A8C3F40();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v1 = sub_20A8C2370();

  return v1;
}

uint64_t sub_20A44ED7C(void *a1)
{
  objc_msgSend(a1, sel_horizontalSizeClass);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v3 = sub_20A8C2370();

  return v3;
}

uint64_t sub_20A44EE8C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x746867696CLL;
    }
    else {
      uint64_t v3 = 1802658148;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE500000000000000;
    }
    else {
      unint64_t v4 = 0xE400000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x746867696CLL;
      }
      else {
        uint64_t v6 = 1802658148;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE500000000000000;
      }
      else {
        unint64_t v7 = 0xE400000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x746C7561666564;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x746C7561666564)
  {
LABEL_21:
    char v8 = sub_20A8CF760();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20A44EF90(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0xD000000000000012;
    }
    else {
      unint64_t v3 = 0x6E696C6C6F726373;
    }
    if (v2 == 1) {
      unint64_t v4 = 0x800000020A8F80F0;
    }
    else {
      unint64_t v4 = 0xE900000000000067;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0xD000000000000012;
      }
      else {
        unint64_t v6 = 0x6E696C6C6F726373;
      }
      if (v5 == 1) {
        unint64_t v7 = 0x800000020A8F80F0;
      }
      else {
        unint64_t v7 = 0xE900000000000067;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    unint64_t v3 = 0x676E6974696465;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x676E6974696465)
  {
LABEL_21:
    char v8 = sub_20A8CF760();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20A44F0B4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000010;
  }
  else {
    unint64_t v3 = 0x6565467961646F74;
  }
  if (v2) {
    unint64_t v4 = 0xEF6769666E6F4364;
  }
  else {
    unint64_t v4 = 0x800000020A8F8090;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000010;
  }
  else {
    unint64_t v5 = 0x6565467961646F74;
  }
  if (a2) {
    unint64_t v6 = 0x800000020A8F8090;
  }
  else {
    unint64_t v6 = 0xEF6769666E6F4364;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_20A8CF760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20A44F16C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6E6F4373626F6E6BLL;
  }
  else {
    uint64_t v3 = 0x666E6F4364656566;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000006769;
  }
  else {
    unint64_t v4 = 0xEB00000000676966;
  }
  if (a2) {
    uint64_t v5 = 0x6E6F4373626F6E6BLL;
  }
  else {
    uint64_t v5 = 0x666E6F4364656566;
  }
  if (a2) {
    unint64_t v6 = 0xEB00000000676966;
  }
  else {
    unint64_t v6 = 0xEA00000000006769;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_20A8CF760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20A44F220(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6863746157746F6ELL;
  }
  else {
    uint64_t v3 = 0x676E696863746177;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xEB00000000676E69;
  }
  if (a2) {
    uint64_t v5 = 0x6863746157746F6ELL;
  }
  else {
    uint64_t v5 = 0x676E696863746177;
  }
  if (a2) {
    unint64_t v6 = 0xEB00000000676E69;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_20A8CF760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20A44F2D4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x64657461727563;
  }
  else {
    uint64_t v3 = 0x6B636F7473;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x64657461727563;
  }
  else {
    uint64_t v5 = 0x6B636F7473;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_20A8CF760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20A44F378(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x70756F724778616DLL;
  }
  else {
    uint64_t v3 = 0x6F6E4B70756F7267;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000007362;
  }
  else {
    unint64_t v4 = 0xE900000000000073;
  }
  if (a2) {
    uint64_t v5 = 0x70756F724778616DLL;
  }
  else {
    uint64_t v5 = 0x6F6E4B70756F7267;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000073;
  }
  else {
    unint64_t v6 = 0xEA00000000007362;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_20A8CF760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20A44F428(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000007265;
  uint64_t v3 = 0x696669746E656469;
  uint64_t v4 = a1;
  uint64_t v5 = 0x696669746E656469;
  unint64_t v6 = 0xEA00000000007265;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6E69727065756C62;
      unint64_t v6 = 0xE900000000000074;
      break;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1701869940;
      break;
    case 3:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v5 = 7107189;
      break;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x6B72616D6B6F6F62;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE900000000000074;
      if (v5 == 0x6E69727065756C62) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xE400000000000000;
      if (v5 != 1701869940) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 7107189;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x6B72616D6B6F6F62) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_20A8CF760();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20A44F5E4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000007365;
  uint64_t v3 = 0x69726F7453706F74;
  uint64_t v4 = a1;
  uint64_t v5 = 0x69726F7453706F74;
  unint64_t v6 = 0xEA00000000007365;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x6B636F7473;
      break;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x64657461727563;
      break;
    case 3:
      unint64_t v6 = 0xE200000000000000;
      uint64_t v5 = 25697;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      if (v5 == 0x6B636F7473) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x64657461727563;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE200000000000000;
      if (v5 == 25697) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_20A8CF760();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20A44F75C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x63616C507377656ELL;
    }
    else {
      uint64_t v3 = 25697;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEB00000000647261;
    }
    else {
      unint64_t v4 = 0xE200000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x63616C507377656ELL;
      }
      else {
        uint64_t v6 = 25697;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEB00000000647261;
      }
      else {
        unint64_t v7 = 0xE200000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 1937204590;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1937204590)
  {
LABEL_21:
    char v8 = sub_20A8CF760();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20A44F860(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0x800000020A8F8000;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000011;
  switch(v4)
  {
    case 1:
      uint64_t v6 = "positive-highlight";
      goto LABEL_4;
    case 2:
      uint64_t v6 = "negative-highlight";
LABEL_4:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 3:
      unint64_t v5 = 0x6F682D7265746661;
      unint64_t v3 = 0xEB00000000737275;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x800000020A8F8000;
  switch(a2)
  {
    case 1:
      char v8 = "positive-highlight";
      goto LABEL_9;
    case 2:
      char v8 = "negative-highlight";
LABEL_9:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      unint64_t v2 = 0xD000000000000012;
      goto LABEL_10;
    case 3:
      unint64_t v7 = 0xEB00000000737275;
      if (v5 == 0x6F682D7265746661) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_10:
      if (v5 != v2) {
        goto LABEL_15;
      }
LABEL_13:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_15:
      }
        char v9 = sub_20A8CF760();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_20A44F9E8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6B636F7473;
  }
  else {
    uint64_t v3 = 0x69726F7453706F74;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000007365;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6B636F7473;
  }
  else {
    uint64_t v5 = 0x69726F7453706F74;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xEA00000000007365;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_20A8CF760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20A44FA90(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1853321060;
  }
  else {
    uint64_t v3 = 28789;
  }
  if (v2) {
    unint64_t v4 = 0xE200000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1853321060;
  }
  else {
    uint64_t v5 = 28789;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE200000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_20A8CF760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20A44FB28(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x697370616C6C6F63;
  }
  else {
    uint64_t v3 = 0x6465786966;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xEA0000000000676ELL;
  }
  if (a2) {
    uint64_t v5 = 0x697370616C6C6F63;
  }
  else {
    uint64_t v5 = 0x6465786966;
  }
  if (a2) {
    unint64_t v6 = 0xEA0000000000676ELL;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_20A8CF760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20A44FBD0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x446873696C627570;
  }
  else {
    uint64_t v3 = 0x7370756F7267;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xEB00000000657461;
  }
  if (a2) {
    uint64_t v5 = 0x446873696C627570;
  }
  else {
    uint64_t v5 = 0x7370756F7267;
  }
  if (a2) {
    unint64_t v6 = 0xEB00000000657461;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_20A8CF760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20A44FC7C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1835365481;
  }
  else {
    uint64_t v3 = 7368564;
  }
  if (v2) {
    unint64_t v4 = 0xE300000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1835365481;
  }
  else {
    uint64_t v5 = 7368564;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE300000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_20A8CF760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20A44FD14(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD00000000000001DLL;
  unint64_t v3 = 0x800000020A8F7EC0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD00000000000001DLL;
  switch(v4)
  {
    case 1:
      unint64_t v6 = "com.apple.stocks.v2.ForYouFeed";
      goto LABEL_4;
    case 2:
      unint64_t v6 = "com.apple.stocks.v2.SymbolFeed";
LABEL_4:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD00000000000001ELL;
      break;
    case 3:
      unint64_t v5 = 0xD000000000000020;
      char v7 = "com.apple.stocks.v2.SymbolSearch";
      goto LABEL_8;
    case 4:
      unint64_t v5 = 0xD00000000000001BLL;
      char v7 = "com.apple.stocks.v2.Article";
      goto LABEL_8;
    case 5:
      unint64_t v5 = 0xD000000000000017;
      char v7 = "com.apple.stocks.v2.URL";
LABEL_8:
      unint64_t v3 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v8 = 0x800000020A8F7EC0;
  switch(a2)
  {
    case 1:
      char v9 = "com.apple.stocks.v2.ForYouFeed";
      goto LABEL_12;
    case 2:
      char v9 = "com.apple.stocks.v2.SymbolFeed";
LABEL_12:
      unint64_t v8 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      unint64_t v2 = 0xD00000000000001ELL;
      goto LABEL_13;
    case 3:
      unint64_t v10 = 0xD000000000000020;
      unint64_t v11 = "com.apple.stocks.v2.SymbolSearch";
      goto LABEL_18;
    case 4:
      unint64_t v10 = 0xD00000000000001BLL;
      unint64_t v11 = "com.apple.stocks.v2.Article";
      goto LABEL_18;
    case 5:
      unint64_t v10 = 0xD000000000000017;
      unint64_t v11 = "com.apple.stocks.v2.URL";
LABEL_18:
      unint64_t v8 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      if (v5 == v10) {
        goto LABEL_19;
      }
      goto LABEL_21;
    default:
LABEL_13:
      if (v5 != v2) {
        goto LABEL_21;
      }
LABEL_19:
      if (v3 == v8) {
        char v12 = 1;
      }
      else {
LABEL_21:
      }
        char v12 = sub_20A8CF760();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12 & 1;
  }
}

uint64_t sub_20A44FEDC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x756F59726F66;
  }
  else {
    uint64_t v3 = 0x73694C6B636F7473;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000074;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x756F59726F66;
  }
  else {
    uint64_t v5 = 0x73694C6B636F7473;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE900000000000074;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_20A8CF760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20A44FF84(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0x657370616C6C6F63;
  }
  else {
    unint64_t v3 = 0xD000000000000010;
  }
  if (v2) {
    unint64_t v4 = 0x800000020A8F7FC0;
  }
  else {
    unint64_t v4 = 0xEF72616265646953;
  }
  if (a2) {
    unint64_t v5 = 0x657370616C6C6F63;
  }
  else {
    unint64_t v5 = 0xD000000000000010;
  }
  if (a2) {
    unint64_t v6 = 0xEF72616265646953;
  }
  else {
    unint64_t v6 = 0x800000020A8F7FC0;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_20A8CF760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20A45003C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v215 = a3;
  uint64_t v221 = a4;
  uint64_t v193 = a1;
  uint64_t WatchlistViewLayoutAttributes = type metadata accessor for CreateWatchlistViewLayoutAttributes();
  MEMORY[0x270FA5388](WatchlistViewLayoutAttributes - 8);
  uint64_t v195 = (double *)((char *)&v180 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t WatchlistViewModel = type metadata accessor for CreateWatchlistViewModel();
  MEMORY[0x270FA5388](WatchlistViewModel - 8);
  uint64_t v187 = (uint64_t)&v180 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A453288(0, (unint64_t *)&qword_26763AB50, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsModel, sub_20A44D5AC, MEMORY[0x263F7D2D8]);
  uint64_t v191 = *(void *)(v8 - 8);
  uint64_t v192 = v8;
  uint64_t v189 = *(void *)(v191 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v190 = (char *)&v180 - v9;
  uint64_t v10 = sub_20A8C8460();
  uint64_t v183 = *(void *)(v10 - 8);
  uint64_t v184 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v182 = (uint64_t *)((char *)&v180 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_20A8C8440();
  uint64_t v212 = *(void *)(v12 - 8);
  uint64_t v213 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v214 = (char *)&v180 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A453764(0, (unint64_t *)&qword_26763AC80, MEMORY[0x263F7D858]);
  uint64_t v15 = v14;
  uint64_t v208 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v207 = (char *)&v180 - v16;
  sub_20A453764(0, &qword_26763ACE0, MEMORY[0x263F7D400]);
  uint64_t v205 = *(void *)(v17 - 8);
  uint64_t v206 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v204 = (char *)&v180 - v18;
  uint64_t v19 = type metadata accessor for ManageWatchlistsContentMode(0);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v181 = (uint64_t)&v180 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v194 = (uint64_t *)((char *)&v180 - v22);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v180 - v24;
  MEMORY[0x270FA5388](v26);
  uint64_t v188 = (char *)&v180 - v27;
  sub_20A453C10(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v196 = (char *)&v180 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v186 = (char *)&v180 - v31;
  uint64_t v32 = sub_20A8C40E0();
  uint64_t v219 = *(void *)(v32 - 8);
  uint64_t v220 = v32;
  MEMORY[0x270FA5388](v32);
  v200 = (char *)&v180 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  uint64_t v185 = (char *)&v180 - v35;
  sub_20A453C10(0, &qword_26763ACE8, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
  MEMORY[0x270FA5388](v36 - 8);
  uint64_t v38 = (char *)&v180 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  uint64_t v41 = (char *)&v180 - v40;
  uint64_t v42 = sub_20A8C9F40();
  uint64_t v201 = *(void *)(v42 - 8);
  uint64_t v202 = v42;
  MEMORY[0x270FA5388](v42);
  uint64_t v203 = (char *)&v180 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_20A8C8DF0();
  uint64_t v198 = *(void *)(v44 - 8);
  uint64_t v199 = v44;
  MEMORY[0x270FA5388](v44);
  v197 = (char *)&v180 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))sub_20A8C8420();
  v218 = (void *)*((void *)v210 - 1);
  MEMORY[0x270FA5388](v210);
  uint64_t v209 = (char *)&v180 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A453C10(0, &qword_26AC68D50, MEMORY[0x263F07A30]);
  MEMORY[0x270FA5388](v47 - 8);
  uint64_t v49 = (char *)&v180 - v48;
  uint64_t v217 = type metadata accessor for WatchlistCellViewModel(0);
  MEMORY[0x270FA5388](v217);
  uint64_t v211 = (char *)&v180 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v51);
  uint64_t v53 = (char *)&v180 - v52;
  uint64_t v54 = type metadata accessor for ManageWatchlistsLayoutModel();
  MEMORY[0x270FA5388](v54);
  id v56 = (char *)&v180 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A453288(0, (unint64_t *)&qword_26763AB40, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutModel, sub_20A452FE8, MEMORY[0x263F7D648]);
  sub_20A8C9150();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v200 = v41;
    uint64_t v211 = v25;
    uint64_t v195 = (double *)v15;
    sub_20A45321C();
    uint64_t v113 = &v56[*(int *)(v112 + 48)];
    long long v114 = *((_OWORD *)v113 + 9);
    long long v236 = *((_OWORD *)v113 + 8);
    long long v237 = v114;
    uint64_t v238 = *((void *)v113 + 20);
    long long v115 = *((_OWORD *)v113 + 5);
    long long v232 = *((_OWORD *)v113 + 4);
    long long v233 = v115;
    long long v116 = *((_OWORD *)v113 + 7);
    long long v234 = *((_OWORD *)v113 + 6);
    long long v235 = v116;
    long long v117 = *((_OWORD *)v113 + 1);
    long long v228 = *(_OWORD *)v113;
    long long v229 = v117;
    long long v118 = *((_OWORD *)v113 + 3);
    long long v230 = *((_OWORD *)v113 + 2);
    long long v231 = v118;
    sub_20A4530DC((uint64_t)v56, (uint64_t)v53, type metadata accessor for WatchlistCellViewModel);
    sub_20A453288(0, &qword_26763AD10, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistCellView, sub_20A453308, MEMORY[0x263F7D378]);
    uint64_t v119 = v216;
    uint64_t v120 = v221;
    uint64_t v121 = (void *)sub_20A8CE8F0();
    uint64_t v122 = (void *)sub_20A8C84E0();
    uint64_t v123 = sub_20A8C2B70();
    uint64_t v124 = *(void *)(v123 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v124 + 16))(v49, v120, v123);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v49, 0, 1, v123);
    uint64_t v125 = (uint64_t)v122 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_indexPath;
    swift_beginAccess();
    sub_20A45333C((uint64_t)v49, v125);
    swift_endAccess();

    id v126 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
    objc_msgSend(v121, sel_setBackgroundColor_, v126);

    uint64_t v127 = (void *)sub_20A8C84F0();
    uint64_t v128 = (void (*)(void))v218[13];
    LODWORD(v196) = *MEMORY[0x263F7D350];
    v218 += 13;
    uint64_t v194 = v128;
    v128(v209);
    sub_20A8C8430();

    (*(void (**)(char *, void, uint64_t))(v198 + 104))(v197, *MEMORY[0x263F7D598], v199);
    sub_20A8C84D0();
    uint64_t v129 = (unsigned char *)sub_20A8C84E0();
    sub_20A5BEE50((uint64_t)v53, (uint64_t)&v228, v129);

    sub_20A4533BC(v121);
    uint64_t v130 = (char *)sub_20A8C84E0();
    id v131 = *(id *)&v130[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton];

    uint64_t v132 = v119[13];
    v197 = (char *)v119[14];
    uint64_t v198 = v132;
    (*(void (**)(char *, void, uint64_t))(v201 + 104))(v203, *MEMORY[0x263F7DA50], v202);
    uint64_t v133 = v119[16];
    uint64_t v223 = sub_20A8C4990();
    uint64_t v224 = sub_20A453020((unint64_t *)&qword_26AC69370, MEMORY[0x263F24E68]);
    uint64_t v222 = v133;
    long long v225 = 0u;
    long long v226 = 0u;
    char v227 = 1;
    sub_20A8C99D0();
    swift_allocObject();
    swift_retain();
    sub_20A8C99B0();
    uint64_t v203 = v53;
    uint64_t v134 = v185;
    (*(void (**)(void))(v219 + 16))();
    uint64_t v135 = (uint64_t)v188;
    sub_20A453CB0((uint64_t)v119 + OBJC_IVAR____TtC8StocksUI41ManageWatchlistsBlueprintViewCellProvider_contentMode, (uint64_t)v188, type metadata accessor for ManageWatchlistsContentMode);
    sub_20A453638();
    uint64_t v137 = v136;
    uint64_t v138 = *(void *)(v136 - 8);
    uint64_t v201 = *(void *)(v138 + 48);
    uint64_t v199 = v138 + 48;
    LODWORD(v133) = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v201)(v135, 1, v136);
    uint64_t v139 = sub_20A8C3F00();
    uint64_t v140 = 1;
    uint64_t v141 = v139;
    uint64_t v142 = *(void *)(v139 - 8);
    uint64_t v143 = (uint64_t)v186;
    uint64_t v202 = v139;
    uint64_t v215 = v142;
    if (v133 != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v215 + 32))(v186, v135, v139);
      uint64_t v142 = v215;
      uint64_t v141 = v202;
      uint64_t v140 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v142 + 56))(v143, v140, 1, v141);
    uint64_t v144 = (uint64_t)v200;
    (*(void (**)(char *, char *, uint64_t))(v219 + 32))(v200, v134, v220);
    uint64_t v145 = type metadata accessor for WatchlistMembershipCommandContext(0);
    sub_20A453688(v143, v144 + *(int *)(v145 + 20));
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v145 - 8) + 56))(v144, 0, 1, v145);
    sub_20A8C9090();

    swift_release();
    sub_20A453708(v144, &qword_26763ACE8, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
    uint64_t v222 = v119[15];
    uint64_t v146 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D900];
    sub_20A453764(0, (unint64_t *)&qword_26763AD20, MEMORY[0x263F7D900]);
    sub_20A453828(&qword_26763AD28, (unint64_t *)&qword_26763AD20, v146);
    uint64_t v147 = v204;
    sub_20A8CA4B0();
    sub_20A8C2B60();
    uint64_t v148 = v206;
    uint64_t v149 = v207;
    sub_20A8C8630();
    (*(void (**)(char *, uint64_t))(v205 + 8))(v147, v148);
    sub_20A453828(&qword_26763AD30, (unint64_t *)&qword_26763AC80, MEMORY[0x263F7D858]);
    uint64_t v150 = (uint64_t)v195;
    sub_20A8CE840();
    sub_20A8CE8A0();
    uint64_t v151 = sub_20A8CE890();
    (*(void (**)(char *, uint64_t))(v208 + 8))(v149, v150);
    uint64_t v152 = (void *)sub_20A8C84F0();
    uint64_t v153 = *(void (**)(char *, void, uint64_t))(v212 + 104);
    if (v151 == 1)
    {
      v153(v214, *MEMORY[0x263F7D360], v213);
      sub_20A8C8450();
    }
    else
    {
      v153(v214, *MEMORY[0x263F7D368], v213);
      sub_20A8C8450();

      uint64_t v166 = (void *)sub_20A8C84F0();
      double v168 = v182;
      uint64_t v167 = v183;
      void *v182 = 0x4000000000000000;
      (*(void (**)(void *, void, uint64_t))(v167 + 104))(v168, *MEMORY[0x263F7D370], v184);
      sub_20A8C8470();

      uint64_t v152 = (void *)sub_20A8C84F0();
      ((void (*)(char *, void, unsigned int (*)(uint64_t, uint64_t, uint64_t)))v194)(v209, v196, v210);
      sub_20A8C8430();
    }
    uint64_t v169 = (uint64_t)v203;

    uint64_t v170 = (void *)sub_20A8C84E0();
    objc_msgSend(v170, sel_setIsAccessibilityElement_, 0);

    id v171 = v121;
    swift_bridgeObjectRetain();
    v172 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    objc_msgSend(v171, sel_setAccessibilityLabel_, v172);

    uint64_t v173 = (uint64_t)v211;
    sub_20A453CB0(v169 + *(int *)(v217 + 32), (uint64_t)v211, type metadata accessor for ManageWatchlistsContentMode);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v201)(v173, 1, v137) == 1)
    {
      sub_20A4531BC(v169, type metadata accessor for WatchlistCellViewModel);
    }
    else
    {
      sub_20A45386C(v171);
      sub_20A4531BC(v169, type metadata accessor for WatchlistCellViewModel);
      (*(void (**)(uint64_t, uint64_t))(v215 + 8))(v173, v202);
    }
    return (uint64_t)v171;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_20A453068();
    uint64_t v155 = (uint64_t)&v56[*(int *)(v154 + 48)];
    uint64_t v156 = v187;
    sub_20A4530DC((uint64_t)v56, v187, (uint64_t (*)(void))type metadata accessor for CreateWatchlistViewModel);
    unint64_t v157 = v195;
    sub_20A4530DC(v155, (uint64_t)v195, (uint64_t (*)(void))type metadata accessor for CreateWatchlistViewLayoutAttributes);
    sub_20A453288(0, &qword_26763ACF8, (uint64_t (*)(uint64_t))type metadata accessor for CreateWatchlistView, sub_20A453144, MEMORY[0x263F7D378]);
    uint64_t v158 = (void *)sub_20A8CE8F0();
    uint64_t v159 = (void *)sub_20A8C84F0();
    (*(void (**)(char *, void, uint64_t))(v212 + 104))(v214, *MEMORY[0x263F7D360], v213);
    sub_20A8C8450();

    uint64_t v160 = (char *)sub_20A8C84E0();
    sub_20A6DE7E4(v156, v157, v160);

    uint64_t v161 = (char *)sub_20A8C84E0();
    id v162 = *(id *)&v161[OBJC_IVAR____TtC8StocksUI19CreateWatchlistView_onTap];

    uint64_t v163 = swift_allocObject();
    swift_weakInit();
    uint64_t v164 = swift_allocObject();
    *(void *)(v164 + 16) = v163;
    *(void *)(v164 + 24) = v158;
    id v165 = v158;

    swift_release();
    sub_20A4531BC((uint64_t)v157, (uint64_t (*)(void))type metadata accessor for CreateWatchlistViewLayoutAttributes);
    sub_20A4531BC(v156, (uint64_t (*)(void))type metadata accessor for CreateWatchlistViewModel);
    return (uint64_t)v165;
  }
  uint64_t v188 = v38;
  uint64_t v195 = (double *)v15;
  sub_20A45321C();
  uint64_t v59 = &v56[*(int *)(v58 + 48)];
  long long v60 = *((_OWORD *)v59 + 9);
  long long v236 = *((_OWORD *)v59 + 8);
  long long v237 = v60;
  uint64_t v238 = *((void *)v59 + 20);
  long long v61 = *((_OWORD *)v59 + 5);
  long long v232 = *((_OWORD *)v59 + 4);
  long long v233 = v61;
  long long v62 = *((_OWORD *)v59 + 7);
  long long v234 = *((_OWORD *)v59 + 6);
  long long v235 = v62;
  long long v63 = *((_OWORD *)v59 + 1);
  long long v228 = *(_OWORD *)v59;
  long long v229 = v63;
  long long v64 = *((_OWORD *)v59 + 3);
  long long v230 = *((_OWORD *)v59 + 2);
  long long v231 = v64;
  uint64_t v65 = (uint64_t)v211;
  sub_20A4530DC((uint64_t)v56, (uint64_t)v211, type metadata accessor for WatchlistCellViewModel);
  sub_20A453288(0, &qword_26763AD10, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistCellView, sub_20A453308, MEMORY[0x263F7D378]);
  uint64_t v66 = v221;
  uint64_t v67 = sub_20A8CE8F0();
  uint64_t v68 = v216;
  uint64_t v69 = (void *)v67;
  uint64_t v70 = (void *)sub_20A8C84E0();
  uint64_t v71 = sub_20A8C2B70();
  uint64_t v72 = *(void *)(v71 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v49, v66, v71);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v49, 0, 1, v71);
  uint64_t v73 = (uint64_t)v70 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_indexPath;
  swift_beginAccess();
  sub_20A45333C((uint64_t)v49, v73);
  swift_endAccess();

  id v74 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
  objc_msgSend(v69, sel_setBackgroundColor_, v74);

  uint64_t v75 = (void *)sub_20A8C84F0();
  ((void (*)(char *, void, unsigned int (*)(uint64_t, uint64_t, uint64_t)))v218[13])(v209, *MEMORY[0x263F7D358], v210);
  sub_20A8C8430();

  (*(void (**)(char *, void, uint64_t))(v198 + 104))(v197, *MEMORY[0x263F7D598], v199);
  sub_20A8C84D0();
  uint64_t v76 = (unsigned char *)sub_20A8C84E0();
  sub_20A5BEE50(v65, (uint64_t)&v228, v76);

  sub_20A4533BC(v69);
  id v77 = (char *)sub_20A8C84E0();
  id v78 = *(id *)&v77[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onTapEditName];

  uint64_t v79 = swift_allocObject();
  swift_weakInit();
  uint64_t v81 = v190;
  uint64_t v80 = v191;
  uint64_t v82 = v192;
  (*(void (**)(char *, uint64_t, uint64_t))(v191 + 16))(v190, v193, v192);
  unint64_t v83 = (*(unsigned __int8 *)(v80 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
  uint64_t v84 = swift_allocObject();
  *(void *)(v84 + 16) = v79;
  (*(void (**)(unint64_t, char *, uint64_t))(v80 + 32))(v84 + v83, v81, v82);

  swift_release();
  v218 = v69;
  uint64_t v85 = (char *)sub_20A8C84E0();
  id v86 = *(id *)&v85[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton];

  (*(void (**)(char *, void, uint64_t))(v201 + 104))(v203, *MEMORY[0x263F7DA50], v202);
  uint64_t v87 = v68[16];
  uint64_t v223 = sub_20A8C4990();
  uint64_t v224 = sub_20A453020((unint64_t *)&qword_26AC69370, MEMORY[0x263F24E68]);
  uint64_t v222 = v87;
  long long v225 = 0u;
  long long v226 = 0u;
  char v227 = 1;
  sub_20A8C99D0();
  swift_allocObject();
  swift_retain();
  sub_20A8C99B0();
  (*(void (**)(char *, char *, uint64_t))(v219 + 16))(v200, &v211[*(int *)(v217 + 28)], v220);
  uint64_t v88 = v68;
  uint64_t v89 = (uint64_t)v68 + OBJC_IVAR____TtC8StocksUI41ManageWatchlistsBlueprintViewCellProvider_contentMode;
  id v90 = (void (*)(void, void, void))v194;
  sub_20A453CB0(v89, (uint64_t)v194, type metadata accessor for ManageWatchlistsContentMode);
  sub_20A453638();
  uint64_t v92 = *(void *)(v91 - 8);
  uint64_t v93 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48);
  uint64_t v215 = v91;
  uint64_t v209 = (char *)(v92 + 48);
  uint64_t v210 = v93;
  LODWORD(v87) = ((uint64_t (*)(void (*)(void, void, void), uint64_t))v93)(v90, 1);
  uint64_t v94 = sub_20A8C3F00();
  uint64_t v95 = 1;
  uint64_t v96 = v94;
  uint64_t v97 = *(char **)(v94 - 8);
  if (v87 != 1)
  {
    (*(void (**)(char *, void, uint64_t))(*(void *)(v94 - 8) + 32))(v196, v90, v94);
    uint64_t v95 = 0;
  }
  uint64_t v203 = v97;
  uint64_t v98 = (uint64_t)v196;
  (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v97 + 7))(v196, v95, 1, v96);
  uint64_t v99 = (uint64_t)v188;
  (*(void (**)(char *, char *, uint64_t))(v219 + 32))(v188, v200, v220);
  uint64_t v100 = type metadata accessor for WatchlistMembershipCommandContext(0);
  sub_20A453688(v98, v99 + *(int *)(v100 + 20));
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v99, 0, 1, v100);
  sub_20A8C9090();

  swift_release();
  sub_20A453708(v99, &qword_26763ACE8, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
  uint64_t v222 = v88[15];
  uint64_t v101 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D900];
  sub_20A453764(0, (unint64_t *)&qword_26763AD20, MEMORY[0x263F7D900]);
  sub_20A453828(&qword_26763AD28, (unint64_t *)&qword_26763AD20, v101);
  uint64_t v102 = v204;
  sub_20A8CA4B0();
  sub_20A8C2B60();
  uint64_t v103 = v206;
  uint64_t v104 = v207;
  sub_20A8C8630();
  (*(void (**)(char *, uint64_t))(v205 + 8))(v102, v103);
  sub_20A453828(&qword_26763AD30, (unint64_t *)&qword_26763AC80, MEMORY[0x263F7D858]);
  uint64_t v105 = (uint64_t)v195;
  sub_20A8CE840();
  sub_20A8CE8A0();
  uint64_t v106 = sub_20A8CE890();
  (*(void (**)(char *, uint64_t))(v208 + 8))(v104, v105);
  uint64_t result = sub_20A8C2B50();
  uint64_t v108 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
    return result;
  }
  uint64_t v109 = v218;
  uint64_t v110 = (void *)sub_20A8C84F0();
  uint64_t v111 = *(void (**)(char *, void, uint64_t))(v212 + 104);
  if (v106 == v108)
  {
    v111(v214, *MEMORY[0x263F7D360], v213);
    sub_20A8C8450();
  }
  else
  {
    v111(v214, *MEMORY[0x263F7D368], v213);
    sub_20A8C8450();

    uint64_t v110 = (void *)sub_20A8C84F0();
    uint64_t v175 = v182;
    uint64_t v174 = v183;
    void *v182 = 0x3FF0000000000000;
    (*(void (**)(void *, void, uint64_t))(v174 + 104))(v175, *MEMORY[0x263F7D370], v184);
    sub_20A8C8470();
  }
  uint64_t v176 = (uint64_t)v211;

  objc_msgSend(v109, sel_setIsAccessibilityElement_, 1);
  uint64_t v177 = (void *)sub_20A8C84E0();
  objc_msgSend(v177, sel_setIsAccessibilityElement_, 0);

  id v171 = v109;
  swift_bridgeObjectRetain();
  uint64_t v178 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v171, sel_setAccessibilityLabel_, v178);

  if ((*(unsigned char *)(v176 + 32) & 1) == 0)
  {
    uint64_t v179 = v181;
    sub_20A453CB0(v176 + *(int *)(v217 + 32), v181, type metadata accessor for ManageWatchlistsContentMode);
    if (v210(v179, 1, v215) != 1)
    {
      sub_20A45386C(v171);
      sub_20A4531BC(v176, type metadata accessor for WatchlistCellViewModel);
      (*((void (**)(uint64_t, uint64_t))v203 + 1))(v179, v96);
      return (uint64_t)v171;
    }
    sub_20A453A90(v171);
  }
  sub_20A4531BC(v176, type metadata accessor for WatchlistCellViewModel);
  return (uint64_t)v171;
}

uint64_t sub_20A451DC0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (MEMORY[0x2105289B0](result + 16))
    {
      sub_20A6929BC(a2);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_20A451E4C(uint64_t a1, void *a2)
{
  sub_20A453C10(0, &qword_26763AD38, (void (*)(uint64_t))type metadata accessor for CreateWatchlistCommandContext);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v30 - v4;
  uint64_t v6 = type metadata accessor for ManageWatchlistsContentMode(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A453C10(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v12 = type metadata accessor for WatchlistCreationRouteModel();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v16 = result;
    uint64_t v31 = a2;
    sub_20A453CB0(result + OBJC_IVAR____TtC8StocksUI41ManageWatchlistsBlueprintViewCellProvider_contentMode, (uint64_t)v8, type metadata accessor for ManageWatchlistsContentMode);
    sub_20A453638();
    uint64_t v18 = 1;
    int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v8, 1, v17);
    uint64_t v20 = sub_20A8C3F00();
    uint64_t v21 = *(void *)(v20 - 8);
    if (v19 != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v11, v8, v20);
      uint64_t v18 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v11, v18, 1, v20);
    uint64_t v22 = swift_allocObject();
    uint64_t v23 = v31;
    *(void *)(v22 + 16) = v16;
    *(void *)(v22 + 24) = v23;
    sub_20A453688((uint64_t)v11, (uint64_t)v14);
    uint64_t v24 = (uint64_t (**)())&v14[*(int *)(v12 + 20)];
    *uint64_t v24 = sub_20A453CA8;
    v24[1] = (uint64_t (*)())v22;
    uint64_t v25 = (void *)MEMORY[0x2105289B0](v16 + 16);
    swift_retain();
    id v26 = v23;
    if (v25)
    {
      id v27 = objc_msgSend(v25, sel_navigationController);
      if (v27)
      {
        uint64_t v28 = v27;
        objc_msgSend(v27, sel_dismissViewControllerAnimated_completion_, 1, 0);
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    swift_getObjectType();
    if (qword_26AC67788 != -1) {
      swift_once();
    }
    sub_20A453CB0((uint64_t)v14, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for WatchlistCreationRouteModel);
    uint64_t WatchlistCommandContext = type metadata accessor for CreateWatchlistCommandContext(0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(WatchlistCommandContext - 8) + 56))(v5, 0, 1, WatchlistCommandContext);
    sub_20A8C8D40();
    sub_20A453708((uint64_t)v5, &qword_26763AD38, (void (*)(uint64_t))type metadata accessor for CreateWatchlistCommandContext);
    sub_20A4531BC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for WatchlistCreationRouteModel);
    return swift_release();
  }
  return result;
}

uint64_t sub_20A4522C0(uint64_t a1)
{
  sub_20A453C10(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v19 - v3;
  uint64_t v5 = sub_20A8C9F40();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C3F00();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ManageWatchlistsContentMode(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A453CB0(a1 + OBJC_IVAR____TtC8StocksUI41ManageWatchlistsBlueprintViewCellProvider_contentMode, (uint64_t)v15, type metadata accessor for ManageWatchlistsContentMode);
  sub_20A453638();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16) == 1)
  {
    swift_getObjectType();
    if (qword_26AC6AC50 != -1) {
      swift_once();
    }
    return sub_20A8C8D50();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F7DA40], v5);
    uint64_t v18 = *(void *)(a1 + 128);
    v19[4] = sub_20A8C4990();
    v19[5] = sub_20A453020((unint64_t *)&qword_26AC69370, MEMORY[0x263F24E68]);
    v19[1] = v18;
    swift_retain();
    sub_20A8C84E0();
    long long v20 = 0u;
    long long v21 = 0u;
    char v22 = 1;
    sub_20A8C99D0();
    swift_allocObject();
    sub_20A8C99B0();
    swift_getObjectType();
    if (qword_26AC6AC40 != -1) {
      swift_once();
    }
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v4, v12, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v4, 0, 1, v9);
    swift_retain();
    sub_20A8C8CD0();
    swift_release_n();
    sub_20A453708((uint64_t)v4, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

BOOL sub_20A452770(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = (void *)MEMORY[0x2105289B0](v1);
  if (v2)
  {
    uint64_t v3 = (char *)sub_20A8C84E0();

    id v4 = *(id *)&v3[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onTapEditName];
    MEMORY[0x210523820]();
  }
  return v2 != 0;
}

uint64_t sub_20A452800(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  LOBYTE(v1) = v1(v2);
  swift_release();
  return v1 & 1;
}

BOOL sub_20A452840(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = (void *)MEMORY[0x2105289B0](v1);
  if (v2)
  {
    uint64_t v3 = (char *)sub_20A8C84E0();
    id v4 = *(id *)&v3[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton];

    objc_msgSend(v4, sel_sendActionsForControlEvents_, 64);
  }
  return v2 != 0;
}

uint64_t sub_20A4528DC(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x2105289B0](v1);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = (void *)v2;
  id v4 = (char *)sub_20A8C84E0();
  id v5 = *(id *)&v4[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton];

  sub_20A8C9050();
  if (v9 == 2)
  {
LABEL_7:

    return 0;
  }
  if (v9)
  {
    char v6 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_6;
    }
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v7 = *MEMORY[0x263F832A8];

  return v7;
}

uint64_t sub_20A4529F4(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  return v3;
}

void sub_20A452A34()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();
  uint64_t v4 = v3;

  qword_26763ACA8 = v2;
  unk_26763ACB0 = v4;
}

void sub_20A452B00()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();
  uint64_t v4 = v3;

  qword_26763ACB8 = v2;
  unk_26763ACC0 = v4;
}

uint64_t sub_20A452BCC()
{
  sub_20A4380C4(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  sub_20A4531BC(v0 + OBJC_IVAR____TtC8StocksUI41ManageWatchlistsBlueprintViewCellProvider_contentMode, type metadata accessor for ManageWatchlistsContentMode);
  return v0;
}

uint64_t sub_20A452C40()
{
  sub_20A452BCC();

  return swift_deallocClassInstance();
}

uint64_t sub_20A452C98()
{
  return type metadata accessor for ManageWatchlistsBlueprintViewCellProvider();
}

uint64_t type metadata accessor for ManageWatchlistsBlueprintViewCellProvider()
{
  uint64_t result = qword_26763ACD0;
  if (!qword_26763ACD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A452CEC()
{
  uint64_t result = type metadata accessor for ManageWatchlistsContentMode(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_20A452DB0()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F7D378];
  sub_20A453288(0, &qword_26763AD10, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistCellView, sub_20A453308, MEMORY[0x263F7D378]);
  sub_20A8CE900();
  sub_20A453288(0, &qword_26763ACF8, (uint64_t (*)(uint64_t))type metadata accessor for CreateWatchlistView, sub_20A453144, v0);
  return sub_20A8CE900();
}

uint64_t sub_20A452E7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_20A45003C(a1, a2, *a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_20A452EAC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  sub_20A4342F4(v2 + 32, (uint64_t)v12);
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8);
  uint64_t v10 = v4;
  uint64_t v11 = v5;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  v7(a2, v4, v6);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v2 + 32);
  sub_20A42BEBC(&v9, v2 + 32);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  swift_getObjectType();
  sub_20A8CA6E0();
  swift_getObjectType();
  return sub_20A8CA6E0();
}

uint64_t sub_20A452FE8()
{
  return sub_20A453020(&qword_26763AB48, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutModel);
}

uint64_t sub_20A453020(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A453068()
{
  if (!qword_26763ACF0)
  {
    type metadata accessor for CreateWatchlistViewModel();
    type metadata accessor for CreateWatchlistViewLayoutAttributes();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763ACF0);
    }
  }
}

uint64_t sub_20A4530DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A453144()
{
  return sub_20A453020(&qword_26763AD00, (void (*)(uint64_t))type metadata accessor for CreateWatchlistView);
}

uint64_t sub_20A453178()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A4531B4()
{
  return sub_20A451E4C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_20A4531BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A45321C()
{
  if (!qword_26763AD08)
  {
    type metadata accessor for WatchlistCellViewModel(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763AD08);
    }
  }
}

void sub_20A453288(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_20A453308()
{
  return sub_20A453020(&qword_26763AD18, (void (*)(uint64_t))type metadata accessor for WatchlistCellView);
}

uint64_t sub_20A45333C(uint64_t a1, uint64_t a2)
{
  sub_20A453C10(0, &qword_26AC68D50, MEMORY[0x263F07A30]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_20A4533BC(void *a1)
{
  objc_msgSend(a1, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(a1, sel_setAccessibilityLabel_, 0);
  objc_msgSend(a1, sel_setAccessibilityHint_, 0);
  objc_msgSend(a1, sel__setAccessibilityActivateBlock_, 0);
  uint64_t v2 = *MEMORY[0x263F83260];
  unint64_t v3 = (unint64_t)objc_msgSend(a1, sel_accessibilityTraits);
  uint64_t v4 = -1;
  if ((v3 & v2) != 0) {
    uint64_t v4 = ~v2;
  }

  return objc_msgSend(a1, sel_setAccessibilityTraits_, v4 & v3);
}

uint64_t sub_20A453470()
{
  sub_20A453288(0, (unint64_t *)&qword_26763AB50, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsModel, sub_20A44D5AC, MEMORY[0x263F7D2D8]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);

  return swift_deallocObject();
}

uint64_t sub_20A453580()
{
  sub_20A453288(0, (unint64_t *)&qword_26763AB50, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsModel, sub_20A44D5AC, MEMORY[0x263F7D2D8]);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return sub_20A451DC0(v3, v4);
}

void sub_20A453638()
{
  if (!qword_26763D190)
  {
    unint64_t v0 = sub_20A8C3F00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763D190);
    }
  }
}

uint64_t sub_20A453688(uint64_t a1, uint64_t a2)
{
  sub_20A453C10(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A453708(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A453C10(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_20A453764(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for ManageWatchlistsLayoutSectionDescriptor();
    v8[1] = type metadata accessor for ManageWatchlistsLayoutModel();
    v8[2] = sub_20A453020(&qword_26763AC88, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutSectionDescriptor);
    v8[3] = sub_20A452FE8();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A453828(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A453764(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A45386C(void *a1)
{
  objc_msgSend(a1, sel_setIsAccessibilityElement_, 1);
  uint64_t v2 = *MEMORY[0x263F83260];
  unint64_t v3 = (unint64_t)objc_msgSend(a1, sel_accessibilityTraits);
  if ((v2 & ~v3) != 0) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = 0;
  }
  objc_msgSend(a1, sel_setAccessibilityTraits_, v4 | v3);
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = sub_20A453C00;
  uint64_t v15 = v5;
  uint64_t v10 = MEMORY[0x263EF8330];
  uint64_t v11 = 1107296256;
  uint64_t v12 = sub_20A452800;
  uint64_t v13 = &block_descriptor_16;
  unint64_t v6 = _Block_copy(&v10);
  swift_release();
  objc_msgSend(a1, sel__setAccessibilityActivateBlock_, v6);
  _Block_release(v6);
  if (qword_2676398A0 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)sub_20A8CE240();
  objc_msgSend(a1, sel_setAccessibilityHint_, v7);

  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = sub_20A453C08;
  uint64_t v15 = v8;
  uint64_t v10 = MEMORY[0x263EF8330];
  uint64_t v11 = 1107296256;
  uint64_t v12 = sub_20A4529F4;
  uint64_t v13 = &block_descriptor_20;
  uint64_t v9 = _Block_copy(&v10);
  swift_release();
  objc_msgSend(a1, sel__setAccessibilityAdditionalTraitsBlock_, v9);
  _Block_release(v9);
}

void sub_20A453A90(void *a1)
{
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v5[4] = sub_20A453BF8;
  v5[5] = v2;
  v5[0] = MEMORY[0x263EF8330];
  v5[1] = 1107296256;
  v5[2] = sub_20A452800;
  v5[3] = &block_descriptor_2;
  unint64_t v3 = _Block_copy(v5);
  swift_release();
  objc_msgSend(a1, sel__setAccessibilityActivateBlock_, v3);
  _Block_release(v3);
  if (qword_267639898 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)sub_20A8CE240();
  objc_msgSend(a1, sel_setAccessibilityHint_, v4);
}

uint64_t sub_20A453BC0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

BOOL sub_20A453BF8()
{
  return sub_20A452770(v0);
}

BOOL sub_20A453C00()
{
  return sub_20A452840(v0);
}

uint64_t sub_20A453C08()
{
  return sub_20A4528DC(v0);
}

void sub_20A453C10(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t objectdestroy_4Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A453CA8()
{
  return sub_20A4522C0(*(void *)(v0 + 16));
}

uint64_t sub_20A453CB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_20A453D28(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  int v4 = a3;
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  unint64_t v6 = (void **)MEMORY[0x263F814F0];
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v7 = *v6;
  *(void *)(inited + 32) = *v6;
  uint64_t v8 = self;
  double v9 = *MEMORY[0x263F81840];
  swift_bridgeObjectRetain();
  id v10 = v7;
  id v11 = objc_msgSend(v8, sel_monospacedDigitSystemFontOfSize_weight_, 14.0, v9);
  uint64_t v12 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v11;
  uint64_t v13 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v12;
  *(void *)(inited + 72) = v13;
  uint64_t v14 = v3 + 2;
  if (v4 == 2)
  {
    uint64_t v15 = v3[5];
    uint64_t v16 = v3[6];
    __swift_project_boxed_opaque_existential_1(v14, v15);
    uint64_t v17 = *(void *)(v16 + 16);
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 416);
    id v19 = v13;
    uint64_t v20 = v18(v15, v17);
  }
  else
  {
    uint64_t v21 = v3[5];
    uint64_t v22 = v3[6];
    __swift_project_boxed_opaque_existential_1(v14, v21);
    if (v4) {
      uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 32);
    }
    else {
      uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 24);
    }
    id v24 = v13;
    uint64_t v20 = v23(v21, v22);
  }
  uint64_t v25 = v20;
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v25;
  sub_20A4CF8B0(inited);
  id v26 = objc_allocWithZone(MEMORY[0x263F086A0]);
  id v27 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v28 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v29 = objc_msgSend(v26, sel_initWithString_attributes_, v27, v28);

  return v29;
}

uint64_t type metadata accessor for TickerViewStyler()
{
  return self;
}

uint64_t sub_20A453FA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 40);
  uint64_t v8 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  id v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  uint64_t v12 = v10(a1, v7, v9);
  double v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A431A50((uint64_t)v15, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

void sub_20A4540EC(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC8StocksUI10TickerView_priceChangeLabel);
  id v4 = objc_msgSend(v3, sel_font);
  if (v4)
  {
    withFont = v4;
    uint64_t v5 = (objc_class *)objc_msgSend(v3, sel_color);
    if (v5)
    {
      Class v6 = v5;
      id v7 = objc_msgSend(v3, sel_attributedText);
      if (v7)
      {
        uint64_t v8 = v7;
        if (a2) {
          char v9 = sub_20A8CF760();
        }
        else {
          char v9 = 1;
        }
        swift_bridgeObjectRelease();
        Class isa = NSAttributedString.appendingAccessibilityDWCPriceChangeArrow(pointingUpward:withFont:withColor:)(v9 & 1, (UIFont)withFont, (UIColor)v6).super.isa;
        objc_msgSend(v3, sel_setAttributedText_, isa);

        Class v6 = isa;
      }
      else
      {
        uint64_t v8 = withFont;
      }

      Class v10 = v6;
    }
    else
    {
      Class v10 = (Class)withFont;
    }
  }
}

uint64_t sub_20A454248(uint64_t a1)
{
  sub_20A42D93C();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  Class v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v7);
  char v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C8330();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1) {
      sub_20A454410((uint64_t)v9, type metadata accessor for StockListModel);
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    char v11 = 0;
  }
  else
  {
    sub_20A454410((uint64_t)v9, type metadata accessor for StockListStockModel);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    char v11 = sub_20A8C8310();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v11 & 1;
}

uint64_t sub_20A454410(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A454470()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8C33A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C4020();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x270FA5388](v6);
  Class v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v10, v1, v6, v8);
  LODWORD(v11) = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
  if (v11 == *MEMORY[0x263F7AF48])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v10, v6);
    swift_unknownObjectRelease();
    sub_20A45494C();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, &v10[*(int *)(v12 + 48)], v2);
    uint64_t v13 = (void *)sub_20A8C32C0();
    uint64_t v14 = v13;
    if (v13)
    {
      objc_msgSend(v13, sel_computedGlobalScoreCoefficient);
      objc_msgSend(v14, sel_userFeedbackScore);
      objc_msgSend(v14, sel_agedPersonalizationScore);
      uint64_t v16 = v15;
      objc_msgSend(v14, sel_featureCtr);
      objc_msgSend(v14, sel_personalizationScore);
      uint64_t v18 = v17;
      objc_msgSend(v14, sel_paidNonpaidSubscriptionCtr);
      objc_msgSend(v14, sel_subscribedChannelCtr);
      uint64_t v20 = v19;
      objc_msgSend(v14, sel_autoSubscribeCtr);
      uint64_t v22 = v21;
    }
    else
    {
      uint64_t v22 = 0;
      uint64_t v16 = 0;
      uint64_t v18 = 0;
      uint64_t v20 = 0;
    }
    sub_20A454A14();
    sub_20A8C32A0();
    v30[9] = v23;
    sub_20A8C32E0();
    v30[8] = v24;
    sub_20A8C32D0();
    v30[7] = v25;
    sub_20A8C32B0();
    v30[6] = v26;
    uint64_t v11 = sub_20A8C3340();
    if (v11 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v11 <= 0x7FFFFFFF)
    {
      sub_20A8C3250();
      v30[5] = v27;
      sub_20A8C3300();
      v30[4] = v28;
      sub_20A8C32F0();
      uint64_t v11 = sub_20A8C3350();
      if (v11 >= (uint64_t)0xFFFFFFFF80000000)
      {
        if (v11 <= 0x7FFFFFFF)
        {
          uint64_t v11 = sub_20A8C3260();
          if (v11 >= (uint64_t)0xFFFFFFFF80000000)
          {
            if (v11 <= 0x7FFFFFFF)
            {
              sub_20A8C3290();
              v30[3] = v20;
              sub_20A8C3280();
              long long v30[2] = v22;
              sub_20A8C3270();
              v30[0] = v16;
              v30[1] = v18;
              sub_20A8C3390();
              sub_20A8C3370();
              sub_20A8C6F80();

              return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
            }
            goto LABEL_17;
          }
LABEL_16:
          __break(1u);
LABEL_17:
          __break(1u);
          goto LABEL_18;
        }
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_18:
  if (v11 == *MEMORY[0x263F7AF38])
  {
    sub_20A8CF520();
    __break(1u);
  }
  uint64_t result = sub_20A8CF750();
  __break(1u);
  return result;
}

void sub_20A45494C()
{
  if (!qword_26AC7F9A0)
  {
    sub_20A4549BC();
    sub_20A8C33A0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC7F9A0);
    }
  }
}

unint64_t sub_20A4549BC()
{
  unint64_t result = qword_26AC7F990;
  if (!qword_26AC7F990)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC7F990);
  }
  return result;
}

uint64_t sub_20A454A14()
{
  uint64_t v23 = sub_20A8C3330();
  uint64_t v0 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_20A8C7600();
  uint64_t v3 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C3360();
  int64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v24 = MEMORY[0x263F8EE78];
    sub_20A68C574(0, v7, 0);
    uint64_t v9 = *(void (**)(char *, unint64_t, uint64_t))(v0 + 16);
    uint64_t v8 = v0 + 16;
    unint64_t v10 = v6 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
    uint64_t v19 = *(void *)(v8 + 56);
    uint64_t v20 = v9;
    uint64_t v18 = (void (**)(char *, uint64_t))(v8 - 8);
    v17[1] = v6;
    _OWORD v17[2] = v3 + 32;
    uint64_t v21 = v8;
    do
    {
      uint64_t v11 = v3;
      uint64_t v12 = v23;
      v20(v2, v10, v23);
      sub_20A8C3310();
      sub_20A8C3320();
      sub_20A8C75F0();
      (*v18)(v2, v12);
      uint64_t v13 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C574(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v13 = v24;
      }
      unint64_t v15 = *(void *)(v13 + 16);
      unint64_t v14 = *(void *)(v13 + 24);
      uint64_t v3 = v11;
      if (v15 >= v14 >> 1)
      {
        sub_20A68C574(v14 > 1, v15 + 1, 1);
        uint64_t v13 = v24;
      }
      *(void *)(v13 + 16) = v15 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v13+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v15, v5, v22);
      uint64_t v24 = v13;
      v10 += v19;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v13;
}

uint64_t sub_20A454CE4(uint64_t a1)
{
  return sub_20A454D60(a1, MEMORY[0x263F7D0E0], 0xD000000000000019, 0x800000020A8F9B60, &qword_26AC691F8);
}

uint64_t static Settings.Features.nffFeeds.getter()
{
  return sub_20A454F34(&qword_26AC69208);
}

uint64_t sub_20A454D34(uint64_t a1)
{
  return sub_20A454D60(a1, MEMORY[0x263F7D0D8], 0xD00000000000001ELL, 0x800000020A8F9B40, &qword_26AC691E8);
}

uint64_t sub_20A454D60(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v16 = a5;
  uint64_t v6 = sub_20A8C4260();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C41E0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4550CC();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *a2, v10);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F7D108], v6);
  uint64_t result = sub_20A8C42B0();
  *uint64_t v16 = result;
  return result;
}

uint64_t static Settings.Features.narrativeAudio.getter()
{
  return sub_20A454F34(&qword_26AC691F0);
}

uint64_t sub_20A454F34(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_20A454F84()
{
  uint64_t v0 = sub_20A8C3F30();
  uint64_t v2 = v1;
  id v3 = objc_msgSend(self, sel_currentDevice);
  id v4 = objc_msgSend(v3, sel_userInterfaceIdiom);

  if (v4)
  {
    swift_bridgeObjectRelease();
  }
  else if (sub_20A8C3F20() == v0 && v5 == v2)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_20A8CF760();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_20A8C4250();
  sub_20A8C4230();
  if (qword_26AC691F0 != -1) {
    swift_once();
  }
  char v6 = sub_20A8C4240();
  swift_release();
  return v6 & 1;
}

ValueMetadata *type metadata accessor for Settings.Features()
{
  return &type metadata for Settings.Features;
}

void sub_20A4550CC()
{
  if (!qword_26AC692E8)
  {
    sub_20A8C41E0();
    sub_20A455130();
    unint64_t v0 = sub_20A8C42D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC692E8);
    }
  }
}

unint64_t sub_20A455130()
{
  unint64_t result = qword_26AC692C0;
  if (!qword_26AC692C0)
  {
    sub_20A8C41E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC692C0);
  }
  return result;
}

uint64_t sub_20A455188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A42D350();
  sub_20A8C8820();
  if (v10 < 2u)
  {
    long long v15 = v6;
    uint64_t v16 = v7;
    uint64_t v17 = v8;
    uint64_t v18 = v9;
    sub_20A42D240();
    sub_20A8C9850();
    if (v14 < 2u)
    {
      long long v19 = v6;
      uint64_t v20 = v7;
      uint64_t v21 = v8;
      uint64_t v22 = v9;
      uint64_t v23 = v10;
      uint64_t v24 = v11;
      uint64_t v25 = v12;
      uint64_t v26 = v13;
      id v4 = sub_20A455334(&v15, (uint64_t)&v19, a3);
      sub_20A455AD4(v6, SDWORD2(v6), v7, v8, v9, v10, v11, v12, v13, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_20A8CF520();
  __break(1u);
  return result;
}

id sub_20A455334(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_20A8C2B70();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8CA9F0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A455AEC();
  sub_20A8CA800();
  sub_20A8CA820();
  uint64_t v13 = (void *)sub_20A8CEB00();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 24) = *a1;
  long long v16 = *a1;
  *(_OWORD *)(v15 + 40) = a1[1];
  long long v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v15 + 96) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v15 + 112) = v17;
  long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v15 + 64) = *(_OWORD *)a2;
  *(_OWORD *)(v15 + 80) = v18;
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 56) = *((void *)a1 + 4);
  *(void *)(v15 + 128) = *(void *)(a2 + 64);
  *(void *)(v15 + 136) = v13;
  long long v25 = a1[1];
  long long v26 = v16;
  uint64_t v24 = *((void *)a1 + 4);
  sub_20A455C74((uint64_t)&v26);
  sub_20A455C74((uint64_t)&v25);
  sub_20A455CA0((uint64_t)&v24);
  sub_20A455CCC(a2);
  id v19 = v13;
  sub_20A8C5D60();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v23, v23[3]);
  uint64_t v20 = (void *)sub_20A8CA700();
  sub_20A8C59C0();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return v19;
}

void sub_20A455604(unsigned __int8 *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  int v6 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    uint64_t v9 = *(void *)(Strong + 16);
    swift_unknownObjectRetain();
    uint64_t v10 = (char *)sub_20A8CA6F0();
    uint64_t v11 = v6 ^ 1u;
    uint64_t v12 = *(void **)&v10[OBJC_IVAR____TtC8StocksUI26StockListSectionHeaderView_switcherButton];
    objc_msgSend(v12, sel_setFrame_, *(double *)(a4 + 32), *(double *)(a4 + 40), *(double *)(a4 + 48), *(double *)(a4 + 56));
    objc_msgSend(v12, sel_setEnabled_, v11);
    swift_beginAccess();
    __swift_project_boxed_opaque_existential_1((void *)(v9 + 16), *(void *)(v9 + 40));
    sub_20A48C868(v12, *a3, a3[1], *(void **)(a4 + 64));
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v13 = (void *)sub_20A8CB4E0();
    swift_unknownObjectRelease();

    swift_release();
    uint64_t v14 = (char *)sub_20A8CA6F0();
    id v15 = *(id *)&v14[OBJC_IVAR____TtC8StocksUI26StockListSectionHeaderView_switcherButton];

    objc_msgSend(v15, sel_setShowsMenuAsPrimaryAction_, 1);
    long long v16 = (char *)sub_20A8CA6F0();
    id v17 = *(id *)&v16[OBJC_IVAR____TtC8StocksUI26StockListSectionHeaderView_switcherButton];

    __swift_project_boxed_opaque_existential_1((void *)(v8 + 96), *(void *)(v8 + 120));
    long long v18 = (void *)sub_20A8CA6F0();
    id v19 = (void *)sub_20A5F0AE8(v18, 0);

    objc_msgSend(v17, sel_setMenu_, v19);
    swift_release();
  }
}

uint64_t sub_20A455828()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockListBlueprintViewSupplementaryViewProvider()
{
  return self;
}

uint64_t sub_20A4558AC()
{
  uint64_t v0 = sub_20A8CA9F0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A455AEC();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7DD78], v0);
  sub_20A8CEB20();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_20A4559C0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_20A455188(a1, a2, *a3);
}

uint64_t sub_20A4559EC()
{
  return sub_20A8CA6E0();
}

uint64_t sub_20A455A44()
{
  return sub_20A455B80((unint64_t *)&unk_26AC72550, (void (*)(uint64_t))type metadata accessor for StockListLayoutModel);
}

uint64_t sub_20A455A8C()
{
  return sub_20A455B80(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
}

void sub_20A455AD4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, unsigned __int8 a10)
{
  if (a10 <= 1u) {
}
  }

void sub_20A455AEC()
{
  if (!qword_26AC6A680)
  {
    type metadata accessor for StockListSectionHeaderView();
    sub_20A455B80(&qword_26AC77120, (void (*)(uint64_t))type metadata accessor for StockListSectionHeaderView);
    unint64_t v0 = sub_20A8CA710();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A680);
    }
  }
}

uint64_t sub_20A455B80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A455BC8()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A455C00()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_20A455C60(unsigned __int8 *a1)
{
  sub_20A455604(a1, *(void *)(v1 + 16), (uint64_t *)(v1 + 24), v1 + 64);
}

uint64_t sub_20A455C74(uint64_t a1)
{
  return a1;
}

uint64_t sub_20A455CA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_20A455CCC(uint64_t a1)
{
  id v2 = *(id *)(a1 + 64);
  return a1;
}

uint64_t sub_20A455CF8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_20A455D30()
{
  sub_20A6BD3F4(v0);
}

void destroy for BrandingTitleViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  id v2 = *(void **)(a1 + 16);
}

void *_s8StocksUI22BrandingTitleViewModelVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  id v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for BrandingTitleViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = (void *)a1[2];
  id v5 = (void *)a2[2];
  a1[2] = v5;
  id v6 = v5;

  return a1;
}

uint64_t assignWithTake for BrandingTitleViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for BrandingTitleViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BrandingTitleViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrandingTitleViewModel()
{
  return &type metadata for BrandingTitleViewModel;
}

uint64_t sub_20A455EF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v1 = sub_20A8CD0C0();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v41 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A456414(0, &qword_26AC6AF40, MEMORY[0x263F597A8]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v40 = (char *)&v30 - v4;
  sub_20A456414(0, &qword_26AC6B000, MEMORY[0x263F59838]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v39 = (uint64_t)&v30 - v6;
  sub_20A456414(0, &qword_26AC6AE38, MEMORY[0x263F58770]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v38 = (char *)&v30 - v8;
  uint64_t v9 = sub_20A8CCFE0();
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v31 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8CCEE0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v32 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C4020();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  long long v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  id v19 = (char *)&v30 - v18;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v30 - v21;
  sub_20A456468();
  uint64_t v23 = sub_20A8CCF30();
  uint64_t v34 = v24;
  uint64_t v35 = v23;
  sub_20A8CCF50();
  uint64_t v33 = sub_20A8C3F80();
  long long v25 = *(void (**)(char *, uint64_t))(v14 + 8);
  v25(v22, v13);
  sub_20A8CCF50();
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
  sub_20A8CF7B0();
  v25(v19, v13);
  long long v26 = v31;
  sub_20A8CCF60();
  sub_20A8CCF50();
  sub_20A8C3F80();
  v25(v16, v13);
  sub_20A8CCF70();
  sub_20A8CCFD0();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v37);
  uint64_t v27 = sub_20A8CBF50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v38, 1, 1, v27);
  sub_20A45656C(v39);
  uint64_t v28 = sub_20A8CC4F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v40, 1, 1, v28);
  sub_20A8CD0B0();
  return sub_20A8CD0A0();
}

void sub_20A456414(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_20A456468()
{
  if (!qword_26AC6B150)
  {
    sub_20A8C4020();
    sub_20A456528((unint64_t *)&unk_26AC69010);
    sub_20A456528((unint64_t *)&unk_26AC69000);
    unint64_t v0 = sub_20A8CCFA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6B150);
    }
  }
}

uint64_t sub_20A456528(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A8C4020();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A45656C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v1 = sub_20A8C4020();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8CCFE0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A456468();
  sub_20A8CCF60();
  char v9 = sub_20A8CCFC0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_20A8CCF50();
  uint64_t v10 = (void *)sub_20A8C3F80();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v9)
  {
    if (objc_msgSend(v10, sel_respondsToSelector_, sel_narrativeTrack))
    {
      id v11 = objc_msgSend(v10, sel_narrativeTrack);
      goto LABEL_6;
    }
LABEL_8:
    swift_unknownObjectRelease();
    uint64_t v13 = v18;
    goto LABEL_9;
  }
  if ((objc_msgSend(v10, sel_respondsToSelector_, sel_narrativeTrackSample) & 1) == 0) {
    goto LABEL_8;
  }
  id v11 = objc_msgSend(v10, sel_narrativeTrackSample);
LABEL_6:
  id v12 = v11;
  swift_unknownObjectRelease();
  uint64_t v13 = v18;
  if (v12)
  {
    sub_20A8CC700();
    uint64_t v14 = sub_20A8CC710();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
  }
LABEL_9:
  uint64_t v16 = sub_20A8CC710();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 1, 1, v16);
}

uint64_t sub_20A456810@<X0>(uint64_t *a1@<X8>)
{
  long long v26 = a1;
  sub_20A4573F8();
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A457450(0);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A457724();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4577A0(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v24 = v15;
  uint64_t v25 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 32), *(void *)(v1 + 56));
  sub_20A8C36D0();
  swift_getKeyPath();
  sub_20A457600();
  sub_20A8CBE80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_20A457868();
  sub_20A4575B8(&qword_26AC68E08, 255, MEMORY[0x263F7AB98]);
  sub_20A8CBEB0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_20A44D17C();
  id v27 = (id)sub_20A8CEBE0();
  uint64_t v19 = sub_20A8CEBC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v4, 1, 1, v19);
  sub_20A4578A4(0, (unint64_t *)&qword_26AC6ADE8, sub_20A4577A0, (void (*)(void))sub_20A457970);
  uint64_t v20 = v26;
  v26[3] = v21;
  v20[4] = sub_20A4576D4(&qword_26AC6ADE0, (unint64_t *)&qword_26AC6ADE8, sub_20A4577A0, (void (*)(void))sub_20A457970);
  __swift_allocate_boxed_opaque_existential_1(v20);
  sub_20A457970();
  sub_20A4575B8(&qword_26AC7F938, 255, (void (*)(uint64_t))sub_20A44D17C);
  uint64_t v22 = v24;
  sub_20A8CBE90();
  sub_20A457638((uint64_t)v4);

  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v18, v22);
}

uint64_t sub_20A456C40()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 32), *(void *)(v0 + 56));
  sub_20A4575B8(&qword_26AC6FE88, v1, (void (*)(uint64_t))type metadata accessor for TickerDataManager);
  sub_20A8C36A0();
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 72), *(void *)(v0 + 96));
  sub_20A4575B8(&qword_26AC6FE80, v2, (void (*)(uint64_t))type metadata accessor for TickerDataManager);
  sub_20A8C39D0();
  sub_20A4380C4(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TickerDataManager()
{
  return self;
}

uint64_t sub_20A456D94()
{
  sub_20A4573F8();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A457450(0);
  uint64_t v18 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_20A457450;
  uint64_t v19 = sub_20A457600;
  sub_20A4578A4(0, &qword_26AC6ADF8, sub_20A457450, (void (*)(void))sub_20A457600);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v21 = v8;
  uint64_t v22 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - v10;
  __swift_project_boxed_opaque_existential_1(v0 + 4, v0[7]);
  sub_20A4575B8(&qword_26AC6FE88, v12, (void (*)(uint64_t))type metadata accessor for TickerDataManager);
  sub_20A8C3670();
  __swift_project_boxed_opaque_existential_1(v0 + 9, v0[12]);
  sub_20A4575B8(&qword_26AC6FE80, v13, (void (*)(uint64_t))type metadata accessor for TickerDataManager);
  sub_20A8C39C0();
  __swift_project_boxed_opaque_existential_1(v0 + 4, v0[7]);
  sub_20A8C36D0();
  sub_20A44D17C();
  id v23 = (id)sub_20A8CEBE0();
  uint64_t v14 = sub_20A8CEBC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v3, 1, 1, v14);
  sub_20A457600();
  sub_20A4575B8(&qword_26AC7F938, 255, (void (*)(uint64_t))sub_20A44D17C);
  uint64_t v15 = v18;
  sub_20A8CBE90();
  sub_20A457638((uint64_t)v3);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  swift_allocObject();
  swift_weakInit();
  sub_20A4576D4(&qword_26AC6ADF0, &qword_26AC6ADF8, v20, (void (*)(void))v19);
  uint64_t v16 = v21;
  sub_20A8CBEC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v16);
  swift_beginAccess();
  sub_20A8CBE50();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_20A4571BC(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    if (MEMORY[0x2105289B0](result + 16))
    {
      uint64_t v4 = *(void *)(v3 + 24);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v6 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v4 + 16);
      uint64_t v7 = swift_retain();
      v6(v7, &off_26BE608E8, a1, ObjectType, v4);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_20A457290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x2105289B0](v3 + 16);
  if (result)
  {
    uint64_t v7 = *(void *)(v3 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v3, &off_26BE608E8, a2, a3, ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A457338(uint64_t a1)
{
  return MEMORY[0x270F788A0](a1, *v1);
}

uint64_t sub_20A457364(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x2105289B0](v2 + 16);
  if (result)
  {
    uint64_t v5 = *(void *)(v2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v5 + 24))(v2, &off_26BE608E8, a2, ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_20A4573F8()
{
  if (!qword_26AC7F930)
  {
    sub_20A8CEBC0();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7F930);
    }
  }
}

void sub_20A457450(uint64_t a1)
{
}

void sub_20A457498(uint64_t a1)
{
}

void sub_20A4574E0()
{
  if (!qword_26AC6AE10)
  {
    sub_20A8C40E0();
    unint64_t v0 = sub_20A8CBE70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6AE10);
    }
  }
}

uint64_t sub_20A457548()
{
  return sub_20A4575B8((unint64_t *)&unk_26AC6AE00, 255, (void (*)(uint64_t))sub_20A4574E0);
}

uint64_t sub_20A457580()
{
  return sub_20A4575B8(&qword_26AC6ADC0, 255, sub_20A457498);
}

uint64_t sub_20A4575B8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A457600()
{
  return sub_20A4575B8((unint64_t *)&unk_26AC6ADA0, 255, sub_20A457450);
}

uint64_t sub_20A457638(uint64_t a1)
{
  sub_20A4573F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A457694()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A4576CC(uint64_t a1)
{
  return sub_20A4571BC(a1);
}

uint64_t sub_20A4576D4(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A4578A4(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A457724()
{
  if (!qword_26AC6AD78)
  {
    sub_20A457450(255);
    sub_20A8C3410();
    sub_20A457600();
    unint64_t v0 = sub_20A8CBE30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6AD78);
    }
  }
}

void sub_20A4577A0(uint64_t a1)
{
}

void sub_20A4577E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_20A457868()
{
  return sub_20A4575B8(&qword_26AC6AD70, 255, (void (*)(uint64_t))sub_20A457724);
}

void sub_20A4578A4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_20A44D17C();
    a4();
    sub_20A4575B8(&qword_26AC7F938, 255, (void (*)(uint64_t))sub_20A44D17C);
    unint64_t v6 = sub_20A8CBE40();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A457970()
{
  return sub_20A4575B8(&qword_26AC6AD90, 255, sub_20A4577A0);
}

double sub_20A4579A8()
{
  double result = 0.0;
  xmmword_26AC9EB30 = xmmword_20A8D5810;
  unk_26AC9EB40 = xmmword_20A8D5810;
  return result;
}

void sub_20A4579C0()
{
  qword_26AC9EB10 = 0x402C000000000000;
}

double sub_20A4579D0()
{
  double result = 64.0;
  xmmword_26AC9EB20 = xmmword_20A8D5820;
  return result;
}

__n128 sub_20A4579E4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v171 = a3;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A458C84(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v169 = (char *)&v153 - v7;
  uint64_t v8 = type metadata accessor for StockSparklineViewModel(0);
  uint64_t v167 = *(void *)(v8 - 8);
  uint64_t v168 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v158 = (uint64_t)&v153 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_20A8C4030();
  uint64_t v156 = *(void *)(v154 - 8);
  MEMORY[0x270FA5388](v154);
  uint64_t v155 = (char *)&v153 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v153);
  uint64_t v157 = (uint64_t)&v153 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  *(void *)&CGFloat v173 = (char *)&v153 - v13;
  uint64_t v14 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AEF0];
  sub_20A458C84(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], v5);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v153 - v16;
  sub_20A8C9720();
  double v19 = v18;
  uint64_t v176 = (int *)type metadata accessor for StockViewModel();
  uint64_t v20 = v176[5];
  uint64_t v178 = a1;
  sub_20A458CE8(a1 + v20, (uint64_t)v17, &qword_26AC68FB0, v14);
  uint64_t v21 = sub_20A8C3E10();
  uint64_t v22 = *(void *)(v21 - 8);
  int v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21);
  uint64_t v170 = a2;
  if (v23 == 1)
  {
    sub_20A458D68((uint64_t)v17, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    LODWORD(height) = 1;
    double v24 = 0.0;
  }
  else
  {
    *(double *)&uint64_t v25 = COERCE_DOUBLE(sub_20A8C3D10());
    LODWORD(height) = v26 & 1;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v17, v21);
    double v24 = *(double *)&v25;
  }
  *(void *)&CGFloat v175 = v177 + 2;
  id v27 = __swift_project_boxed_opaque_existential_1(v177 + 2, v177[5]);
  sub_20A8C3EF0();
  uint64_t v28 = (void *)*v27;
  sub_20A458C84(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
  CGFloat v172 = v29;
  uint64_t inited = swift_initStackObject();
  uint64_t v31 = (void **)MEMORY[0x263F814F0];
  long long v165 = xmmword_20A8D4540;
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v32 = *v31;
  *(void *)(inited + 32) = *v31;
  uint64_t v33 = self;
  double v34 = *MEMORY[0x263F81800];
  swift_bridgeObjectRetain();
  double v164 = COERCE_DOUBLE(v32);
  uint64_t v159 = v33;
  id v35 = objc_msgSend(v33, sel_systemFontOfSize_weight_, 14.0, v34);
  *(double *)&uint64_t v36 = COERCE_DOUBLE(sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80));
  *(void *)(inited + 40) = v35;
  uint64_t v37 = (void *)*MEMORY[0x263F81500];
  CGFloat v163 = *(double *)&v36;
  *(double *)(inited + 64) = *(double *)&v36;
  *(void *)(inited + 72) = v37;
  uint64_t v38 = v28 + 2;
  uint64_t v39 = v28[5];
  uint64_t v40 = v28[6];
  __swift_project_boxed_opaque_existential_1(v38, v39);
  uint64_t v41 = *(void *)(v40 + 16);
  uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t))(v41 + 40);
  id v43 = v37;
  uint64_t v44 = v42(v39, v41);
  *(double *)&uint64_t v162 = COERCE_DOUBLE(sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0));
  *(double *)(inited + 104) = *(double *)&v162;
  *(void *)(inited + 80) = v44;
  sub_20A4CF8B0(inited);
  id v45 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v46 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  double v48 = v47;
  unint64_t v160 = sub_20A4393AC();
  CGFloat MinY = v48;
  uint64_t v49 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v50 = objc_msgSend(v45, sel_initWithString_attributes_, v46, v49);
  swift_bridgeObjectRelease();

  uint64_t v51 = __swift_project_boxed_opaque_existential_1(*(void **)&v175, v177[5]);
  uint64_t v52 = v178 + v176[7];
  sub_20A8C4250();
  sub_20A8C4230();
  if (qword_26AC69070 != -1) {
    swift_once();
  }
  sub_20A8C4220();
  swift_release();
  char v53 = *(unsigned char *)(v52 + 8);
  uint64_t v54 = *(void *)&v173;
  id v166 = v50;
  if (v53)
  {
    swift_bridgeObjectRetain();
    uint64_t v55 = v159;
  }
  else
  {
    char v56 = v179;
    double v57 = *(double *)v52;
    sub_20A458F00(v52, *(uint64_t *)&v173);
    if (v56)
    {
      uint64_t v58 = v154;
      long long v60 = v155;
      uint64_t v59 = v156;
      (*(void (**)(char *, uint64_t, uint64_t))(v156 + 16))(v155, v54 + *(int *)(v153 + 40), v154);
      int v61 = (*(uint64_t (**)(char *, uint64_t))(v59 + 88))(v60, v58);
      char v62 = 2;
      if (v61 == *MEMORY[0x263F7AF90])
      {
        uint64_t v55 = v159;
      }
      else
      {
        uint64_t v55 = v159;
        if (v61 != *MEMORY[0x263F7AF98]
          && v61 != *MEMORY[0x263F7AF68]
          && v61 != *MEMORY[0x263F7AF80]
          && v61 != *MEMORY[0x263F7AF70]
          && v61 != *MEMORY[0x263F7AF88])
        {
          if (v61 == *MEMORY[0x263F7AF78])
          {
            char v62 = 0;
          }
          else
          {
            if (v61 != *MEMORY[0x263F7AF60]) {
              (*(void (**)(char *, uint64_t))(v156 + 8))(v155, v58);
            }
            char v62 = 2;
          }
        }
      }
    }
    else
    {
      char v62 = 0;
      uint64_t v55 = v159;
    }
    sub_20A458EA0(v54, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
    if (qword_26AC6D680 != -1) {
      swift_once();
    }
    sub_20A6573EC(*(void *)(v52 + 48), *(void *)(v52 + 56), 5, 1, v62, v57);
    uint64_t v64 = v63;
    uint64_t v65 = v157;
    sub_20A458F00(v52, v157);
    if (!v64) {
      swift_bridgeObjectRetain();
    }
    sub_20A458EA0(v65, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  }
  uint64_t v66 = (void *)*v51;
  uint64_t v67 = swift_initStackObject();
  *(_OWORD *)(v67 + 16) = v165;
  double v68 = v164;
  *(double *)(v67 + 32) = v164;
  double v69 = *MEMORY[0x263F81810];
  swift_bridgeObjectRetain();
  id v70 = *(id *)&v68;
  *(void *)(v67 + 40) = objc_msgSend(v55, sel_monospacedDigitSystemFontOfSize_weight_, 14.0, v69);
  *(CGFloat *)(v67 + 64) = v163;
  *(void *)(v67 + 72) = v43;
  uint64_t v72 = v66[5];
  uint64_t v71 = v66[6];
  __swift_project_boxed_opaque_existential_1(v66 + 2, v72);
  uint64_t v73 = v43;
  uint64_t v74 = *(void *)(v71 + 16);
  uint64_t v75 = *(uint64_t (**)(uint64_t, uint64_t))(v74 + 40);
  id v76 = v73;
  uint64_t v77 = v75(v72, v74);
  *(double *)(v67 + 104) = *(double *)&v162;
  *(void *)(v67 + 80) = v77;
  sub_20A4CF8B0(v67);
  id v78 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v79 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  uint64_t v80 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v81 = objc_msgSend(v78, sel_initWithString_attributes_, v79, v80);
  swift_bridgeObjectRelease();

  __swift_project_boxed_opaque_existential_1(*(void **)&v175, v177[5]);
  uint64_t v82 = sub_20A5EBCFC(v178 + v176[8], 0);
  if (LODWORD(height)) {
    unsigned __int8 v84 = 2;
  }
  else {
    unsigned __int8 v84 = v24 < 0.0;
  }
  id v85 = sub_20A453D28(v82, v83, v84);
  swift_bridgeObjectRelease();
  id v86 = sub_20A7B5108();

  objc_msgSend(v81, sel_boundingRectWithSize_options_context_, 0, 0, 1.79769313e308, v19);
  CGFloat v88 = v87;
  CGFloat v90 = v89;
  CGFloat v92 = v91;
  CGFloat v173 = v93;
  objc_msgSend(v86, sel_boundingRectWithSize_options_context_, 0, 0, 1.79769313e308, v19);
  double v164 = v95;
  *(void *)&long long v165 = v94;
  uint64_t v162 = v97;
  CGFloat v163 = v96;
  id v98 = v166;
  objc_msgSend(v166, sel_boundingRectWithSize_options_context_, 0, 0, 1.79769313e308, v19);
  CGFloat v100 = v99;
  CGFloat v102 = v101;
  CGFloat v104 = v103;
  CGFloat v106 = v105;
  if (qword_26AC684C8 != -1) {
    swift_once();
  }
  CGFloat v107 = *((double *)&xmmword_26AC9EB30 + 1);
  v190.origin.CGFloat x = v100;
  v190.origin.CGFloat y = v102;
  v190.size.CGFloat width = v104;
  v190.size.CGFloat height = v106;
  CGFloat Width = CGRectGetWidth(v190);
  v191.origin.CGFloat x = v100;
  CGFloat v109 = Width;
  CGFloat v175 = Width;
  v191.origin.CGFloat y = v102;
  v191.size.CGFloat width = v104;
  v191.size.CGFloat height = v106;
  v192.size.CGFloat height = CGRectGetHeight(v191);
  CGFloat height = v192.size.height;
  v192.origin.CGFloat y = 0.0;
  v192.origin.CGFloat x = v107;
  v192.size.CGFloat width = v109;
  CGFloat MaxY = CGRectGetMaxY(v192);
  v193.origin.CGFloat x = v88;
  v193.origin.CGFloat y = v90;
  v193.size.CGFloat width = v92;
  CGFloat v111 = v173;
  v193.size.CGFloat height = v173;
  CGFloat v112 = CGRectGetWidth(v193);
  v194.size.CGFloat width = v92;
  CGFloat v113 = v112;
  v194.origin.CGFloat x = v88;
  v194.origin.CGFloat y = v90;
  v194.size.CGFloat height = v111;
  CGFloat v114 = CGRectGetHeight(v194);
  v195.origin.CGFloat x = v107;
  v195.origin.CGFloat y = MaxY;
  v195.size.CGFloat width = v113;
  v195.size.CGFloat height = v114;
  CGFloat v172 = CGRectGetMaxY(v195);
  CGFloat v116 = v164;
  CGFloat v115 = *(double *)&v165;
  *(void *)&v196.origin.CGFloat x = v165;
  v196.origin.CGFloat y = v164;
  CGFloat v118 = *(double *)&v162;
  CGFloat v117 = v163;
  v196.size.CGFloat width = v163;
  *(void *)&v196.size.CGFloat height = v162;
  CGFloat v173 = CGRectGetWidth(v196);
  v197.origin.CGFloat x = v115;
  v197.origin.CGFloat y = v116;
  v197.size.CGFloat width = v117;
  v197.size.CGFloat height = v118;
  CGFloat v119 = CGRectGetHeight(v197);
  v198.origin.CGFloat y = 0.0;
  v198.origin.CGFloat x = v107;
  v198.size.CGFloat height = height;
  v198.size.CGFloat width = v175;
  double MaxX = CGRectGetMaxX(v198);
  v199.origin.CGFloat x = v107;
  double v164 = v113;
  *(CGFloat *)&long long v165 = MaxY;
  v199.origin.CGFloat y = MaxY;
  v199.size.CGFloat width = v113;
  CGFloat v163 = v114;
  v199.size.CGFloat height = v114;
  CGFloat v121 = v172;
  CGFloat v122 = v173;
  CGFloat v123 = v107;
  double v124 = CGRectGetMaxX(v199);
  v200.origin.CGFloat x = v107;
  v200.origin.CGFloat y = v121;
  v200.size.CGFloat width = v122;
  v200.size.CGFloat height = v119;
  double v125 = CGRectGetMaxX(v200);
  if (v124 > v125) {
    double v125 = v124;
  }
  if (MaxX <= v125) {
    double MaxX = v125;
  }
  uint64_t v126 = (uint64_t)v169;
  if (qword_26AC7C3A0 != -1) {
    swift_once();
  }
  double v127 = MaxX + *(double *)&qword_26AC9EB10;
  v201.origin.CGFloat y = 0.0;
  v201.origin.CGFloat x = v123;
  CGFloat v128 = height;
  CGFloat v129 = v175;
  v201.size.CGFloat width = v175;
  v201.size.CGFloat height = height;
  CGFloat MinY = CGRectGetMinY(v201);
  *(double *)&uint64_t v162 = v119;
  v202.origin.CGFloat x = v123;
  v202.origin.CGFloat y = v121;
  v202.size.CGFloat width = v122;
  v202.size.CGFloat height = v119;
  double v130 = CGRectGetMaxY(v202);
  v203.origin.CGFloat y = 0.0;
  v203.origin.CGFloat x = v123;
  v203.size.CGFloat width = v129;
  v203.size.CGFloat height = v128;
  double v131 = v130 - CGRectGetMinY(v203);
  if (qword_26AC7C3A8 != -1) {
    swift_once();
  }
  long long v132 = xmmword_26AC9EB20;
  double v133 = MinY + (v131 - *((double *)&xmmword_26AC9EB20 + 1)) * 0.5;
  CGFloat MinY = v127;
  v204.origin.CGFloat x = v127;
  v204.origin.CGFloat y = v133;
  v204.CGSize size = (CGSize)xmmword_26AC9EB20;
  CGRectGetMaxX(v204);
  sub_20A8C9720();
  uint64_t v135 = v134;
  sub_20A458CE8(v178 + v176[6], v126, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48))(v126, 1, v168) == 1)
  {
    uint64_t v136 = sub_20A458D68(v126, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel);
    uint64_t v137 = 1;
  }
  else
  {
    uint64_t v138 = v126;
    uint64_t v139 = v158;
    sub_20A458E3C(v138, v158);
    sub_20A8C9700();
    uint64_t v140 = __swift_project_boxed_opaque_existential_1(v177 + 7, v177[10]);
    uint64_t v137 = (uint64_t)sub_20A7E0068(v139, (void *)*v140, *(double *)&v132, *((double *)&v132 + 1));
    uint64_t v136 = sub_20A458EA0(v139, type metadata accessor for StockSparklineViewModel);
  }
  MEMORY[0x270FA5388](v136);
  *(&v153 - 22) = 0;
  *(&v153 - 21) = 0;
  *(&v153 - 20) = v141;
  *(&v153 - 19) = v135;
  *((CGFloat *)&v153 - 18) = v123;
  *(&v153 - 17) = 0;
  CGFloat v142 = height;
  *((CGFloat *)&v153 - 16) = v175;
  *((CGFloat *)&v153 - 15) = v142;
  uint64_t v143 = v165;
  *((CGFloat *)&v153 - 14) = v123;
  *(&v153 - 13) = v143;
  CGFloat v144 = v163;
  *((double *)&v153 - 12) = v164;
  *((CGFloat *)&v153 - 11) = v144;
  CGFloat v145 = v172;
  *((CGFloat *)&v153 - 10) = v123;
  *((CGFloat *)&v153 - 9) = v145;
  uint64_t v146 = v162;
  *((CGFloat *)&v153 - 8) = v173;
  *(&v153 - 7) = v146;
  *((CGFloat *)&v153 - 6) = MinY;
  *((double *)&v153 - 5) = v133;
  *((_OWORD *)&v153 - 2) = v132;
  *(&v153 - 2) = v137;
  sub_20A8C96A0();

  sub_20A458E2C((id)v137);
  long long v147 = v188;
  uint64_t v148 = v171;
  *(_OWORD *)(v171 + 128) = v187;
  *(_OWORD *)(v148 + 144) = v147;
  *(void *)(v148 + 160) = v189;
  long long v149 = v184;
  *(_OWORD *)(v148 + 64) = v183;
  *(_OWORD *)(v148 + 80) = v149;
  long long v150 = v186;
  *(_OWORD *)(v148 + 96) = v185;
  *(_OWORD *)(v148 + 112) = v150;
  long long v151 = v180;
  *(_OWORD *)uint64_t v148 = v179;
  *(_OWORD *)(v148 + 16) = v151;
  __n128 result = v182;
  *(_OWORD *)(v148 + 32) = v181;
  *(__n128 *)(v148 + 48) = result;
  return result;
}

id sub_20A4588C4@<X0>(void *a1@<X1>, double *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  double v72 = a5;
  double v73 = a6;
  double v70 = a3;
  double v71 = a4;
  uint64_t v69 = a15;
  uint64_t v68 = a16;
  uint64_t v67 = a17;
  uint64_t v66 = a18;
  uint64_t v65 = a11;
  uint64_t v64 = a12;
  uint64_t v63 = a13;
  uint64_t v62 = a14;
  uint64_t v20 = sub_20A8C8180();
  uint64_t v21 = *(void *)(v20 - 8);
  double v22 = MEMORY[0x270FA5388](v20);
  double v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *MEMORY[0x263F7D268];
  char v26 = *(void (**)(char *, uint64_t, uint64_t, double))(v21 + 104);
  v26(v24, v25, v20, v22);
  sub_20A8C8170();
  uint64_t v61 = v27;
  uint64_t v60 = v28;
  uint64_t v59 = v29;
  uint64_t v58 = v30;
  uint64_t v31 = *(void (**)(char *, uint64_t))(v21 + 8);
  v31(v24, v20);
  ((void (*)(char *, uint64_t, uint64_t))v26)(v24, v25, v20);
  sub_20A8C8170();
  uint64_t v57 = v32;
  uint64_t v56 = v33;
  uint64_t v55 = v34;
  uint64_t v54 = v35;
  v31(v24, v20);
  ((void (*)(char *, uint64_t, uint64_t))v26)(v24, v25, v20);
  sub_20A8C8170();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  v31(v24, v20);
  ((void (*)(char *, uint64_t, uint64_t))v26)(v24, v25, v20);
  sub_20A8C8170();
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  v31(v24, v20);
  *a2 = v70;
  a2[1] = v71;
  a2[2] = v72;
  a2[3] = v73;
  *((void *)a2 + 4) = v61;
  *((void *)a2 + 5) = v60;
  *((void *)a2 + 6) = v59;
  *((void *)a2 + 7) = v58;
  *((void *)a2 + 8) = v57;
  *((void *)a2 + 9) = v56;
  *((void *)a2 + 10) = v55;
  *((void *)a2 + 11) = v54;
  *((void *)a2 + 12) = v37;
  *((void *)a2 + 13) = v39;
  *((void *)a2 + 14) = v41;
  *((void *)a2 + 15) = v43;
  *((void *)a2 + 16) = v45;
  *((void *)a2 + 17) = v47;
  *((void *)a2 + 18) = v49;
  *((void *)a2 + 19) = v51;
  *((void *)a2 + 20) = a1;
  return sub_20A458F64(a1);
}

uint64_t sub_20A458C18()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TickerViewLayoutAttributesFactory()
{
  return self;
}

void sub_20A458C84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A458CE8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_20A458C84(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A458D68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A458C84(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

id sub_20A458DD8@<X0>(double *a1@<X8>)
{
  return sub_20A4588C4(*(void **)(v1 + 176), a1, *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120), *(void *)(v1 + 128), *(void *)(v1 + 136), *(void *)(v1 + 144), *(void *)(v1 + 152), *(void *)(v1 + 160), *(void *)(v1 + 168));
}

void sub_20A458E2C(id a1)
{
  if (a1 != (id)1) {
}
  }

uint64_t sub_20A458E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockSparklineViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A458EA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A458F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PriceViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_20A458F64(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

void (*sub_20A458F74(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isSelected;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_20A458FE0;
}

void sub_20A458FE0(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onSelection);
    if (v5)
    {
      uint64_t v6 = *(unsigned __int8 *)(v4 + v3[4]);
      swift_retain();
      v5(v4, v6);
      sub_20A459CA4((uint64_t)v5);
    }
  }

  free(v3);
}

char *sub_20A459080(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_20A459FAC(0, &qword_26763ADA0, (void (*)(uint64_t))sub_20A45A000);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_titleLabel;
  id v15 = objc_allocWithZone(MEMORY[0x263F828E0]);
  uint64_t v16 = v5;
  *(void *)&v5[v14] = objc_msgSend(v15, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v17 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_editNameButton;
  *(void *)&v16[v17] = objc_msgSend(self, sel_buttonWithType_, 0);
  uint64_t v18 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_hairlineView;
  *(void *)&v16[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v19 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton;
  if (qword_26AC6ABF8 != -1) {
    swift_once();
  }
  sub_20A45A000();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v13, 1, 1, v20);
  sub_20A45A100();
  id v22 = objc_allocWithZone(v21);
  swift_retain();
  *(void *)&v16[v19] = sub_20A8C9070();
  uint64_t v23 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onTapEditName;
  sub_20A45A1DC();
  *(void *)&v16[v23] = objc_msgSend(objc_allocWithZone(v24), sel_init);
  uint64_t v25 = &v16[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onEditing];
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  v16[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isEditing] = 0;
  char v26 = &v16[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onSelection];
  *(void *)char v26 = 0;
  *((void *)v26 + 1) = 0;
  v16[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isSelected] = 0;
  uint64_t v27 = &v16[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_indexPath];
  uint64_t v28 = sub_20A8C2B70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);

  v41.receiver = v16;
  v41.super_class = ObjectType;
  uint64_t v29 = (char *)objc_msgSendSuper2(&v41, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v30 = *(void *)&v29[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_titleLabel];
  uint64_t v31 = v29;
  objc_msgSend(v31, sel_addSubview_, v30);
  uint64_t v32 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton;
  objc_msgSend(v31, sel_addSubview_, *(void *)&v31[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton]);
  uint64_t v33 = *(void **)&v31[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_editNameButton];
  objc_msgSend(v31, sel_addSubview_, v33);
  objc_msgSend(v31, sel_addSubview_, *(void *)&v31[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_hairlineView]);
  objc_msgSend(*(id *)&v31[v32], sel_setAdjustsImageSizeForAccessibilityContentSizeCategory_, 1);
  objc_msgSend(v33, sel_setAdjustsImageSizeForAccessibilityContentSizeCategory_, 1);
  id v34 = *(id *)&v31[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onTapEditName];
  id v35 = v33;
  sub_20A8CB530();

  objc_msgSend(v31, sel_setIsAccessibilityElement_, 1);
  uint64_t v36 = *MEMORY[0x263F83260];
  uint64_t v37 = v31;
  unint64_t v38 = (unint64_t)objc_msgSend(v37, sel_accessibilityTraits);
  if ((v36 & ~v38) != 0) {
    uint64_t v39 = v36;
  }
  else {
    uint64_t v39 = 0;
  }
  objc_msgSend(v37, sel_setAccessibilityTraits_, v39 | v38);

  return v37;
}

uint64_t sub_20A459578()
{
  return type metadata accessor for WatchlistCellView();
}

uint64_t type metadata accessor for WatchlistCellView()
{
  uint64_t result = qword_26763AD88;
  if (!qword_26763AD88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A4595CC()
{
  sub_20A459FAC(319, &qword_26AC68D50, MEMORY[0x263F07A30]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_20A4596A8()
{
  uint64_t v1 = v0;
  sub_20A459FAC(0, &qword_26AC68D50, MEMORY[0x263F07A30]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v13[-v3];
  uint64_t v5 = (void *)(v0 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onEditing);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onEditing);
  *uint64_t v5 = 0;
  v5[1] = 0;
  sub_20A459CA4(v6);
  uint64_t v7 = (void *)(v0 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onSelection);
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onSelection);
  *uint64_t v7 = 0;
  v7[1] = 0;
  sub_20A459CA4(v8);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isEditing) = 0;
  uint64_t v9 = (unsigned char *)(v0 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isSelected);
  swift_beginAccess();
  *uint64_t v9 = 0;
  uint64_t v10 = (void (*)(uint64_t, void))*v7;
  if (*v7)
  {
    swift_retain();
    v10(v1, 0);
    sub_20A459CA4((uint64_t)v10);
  }
  uint64_t v11 = sub_20A8C2B70();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
  uint64_t v12 = v1 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_indexPath;
  swift_beginAccess();
  sub_20A45333C((uint64_t)v4, v12);
  swift_endAccess();
}

void sub_20A459854()
{
}

id sub_20A459878(uint64_t a1, char a2, double a3, double a4)
{
  uint64_t v7 = *(void (**)(uint64_t, void))(a1 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onEditing);
  if (v7)
  {
    swift_retain();
    v7(a1, a2 & 1);
    sub_20A459CA4((uint64_t)v7);
  }
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton), sel_setAlpha_, a3);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_editNameButton), sel_setAlpha_, a4);
  uint64_t v9 = *(void **)(a1 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_hairlineView);

  return objc_msgSend(v9, sel_setAlpha_, a4);
}

uint64_t sub_20A45994C(char a1)
{
  uint64_t v3 = *v1;
  v3[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isEditing] = a1;
  if (a1) {
    double v4 = 1.0;
  }
  else {
    double v4 = 0.0;
  }
  if (a1) {
    double v5 = 0.0;
  }
  else {
    double v5 = 1.0;
  }
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v3;
  *(unsigned char *)(v6 + 24) = a1;
  *(double *)(v6 + 32) = v5;
  *(double *)(v6 + 40) = v4;
  uint64_t v7 = v3;
  sub_20A8CB890();
  return swift_release();
}

void sub_20A459A1C()
{
  sub_20A459C60(&qword_26763AD18);

  JUMPOUT(0x210523C60);
}

uint64_t sub_20A459A74()
{
  uint64_t v1 = (unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isSelected);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_20A459AC0(char a1)
{
  uint64_t v3 = *v1;
  double v4 = (unsigned char *)(*v1 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isSelected);
  uint64_t result = swift_beginAccess();
  *double v4 = a1;
  uint64_t v6 = *(void (**)(uint64_t, void))(v3 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onSelection);
  if (v6)
  {
    swift_retain();
    v6(v3, a1 & 1);
    return sub_20A459CA4((uint64_t)v6);
  }
  return result;
}

void (*sub_20A459B54(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20A458F74(v2);
  return sub_20A459BB0;
}

void sub_20A459BB0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_20A459BF8()
{
  return sub_20A459C60(&qword_26763AD98);
}

uint64_t sub_20A459C2C()
{
  return sub_20A459C60(&qword_26763AD18);
}

uint64_t sub_20A459C60(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for WatchlistCellView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A459CA4(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_20A459CB4()
{
  return swift_deallocObject();
}

id sub_20A459CEC()
{
  return sub_20A459878(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

void sub_20A459CFC()
{
  uint64_t v1 = v0;
  sub_20A459FAC(0, &qword_26763ADA0, (void (*)(uint64_t))sub_20A45A000);
  MEMORY[0x270FA5388](v2 - 8);
  double v4 = (char *)&v17 - v3;
  uint64_t v5 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_titleLabel;
  *(void *)&v1[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v6 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_editNameButton;
  *(void *)&v1[v6] = objc_msgSend(self, sel_buttonWithType_, 0);
  uint64_t v7 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_hairlineView;
  *(void *)&v1[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v8 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton;
  if (qword_26AC6ABF8 != -1) {
    swift_once();
  }
  sub_20A45A000();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  sub_20A45A100();
  objc_allocWithZone(v10);
  swift_retain();
  *(void *)&v1[v8] = sub_20A8C9070();
  uint64_t v11 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onTapEditName;
  sub_20A45A1DC();
  *(void *)&v1[v11] = objc_msgSend(objc_allocWithZone(v12), sel_init);
  uint64_t v13 = &v1[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onEditing];
  *uint64_t v13 = 0;
  v13[1] = 0;
  v1[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isEditing] = 0;
  uint64_t v14 = &v1[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onSelection];
  void *v14 = 0;
  v14[1] = 0;
  v1[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isSelected] = 0;
  id v15 = &v1[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_indexPath];
  uint64_t v16 = sub_20A8C2B70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);

  sub_20A8CF520();
  __break(1u);
}

void sub_20A459FAC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_20A45A000()
{
  if (!qword_26763ADA8)
  {
    sub_20A45A06C();
    sub_20A45A0AC();
    unint64_t v0 = sub_20A8C8E40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763ADA8);
    }
  }
}

unint64_t sub_20A45A06C()
{
  unint64_t result = qword_26AC7FBB8;
  if (!qword_26AC7FBB8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC7FBB8);
  }
  return result;
}

unint64_t sub_20A45A0AC()
{
  unint64_t result = qword_26AC6DC40;
  if (!qword_26AC6DC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6DC40);
  }
  return result;
}

void sub_20A45A100()
{
  if (!qword_26763ADB0)
  {
    type metadata accessor for WatchlistMembershipCommandContext(255);
    sub_20A45A188();
    sub_20A45A0AC();
    unint64_t v0 = sub_20A8C90A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763ADB0);
    }
  }
}

unint64_t sub_20A45A188()
{
  unint64_t result = qword_26763ADB8;
  if (!qword_26763ADB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763ADB8);
  }
  return result;
}

void sub_20A45A1DC()
{
  if (!qword_26AC6AAE8)
  {
    unint64_t v0 = sub_20A8CB540();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6AAE8);
    }
  }
}

uint64_t sub_20A45A238(uint64_t a1)
{
  sub_20A459FAC(0, &qword_26AC68D50, MEMORY[0x263F07A30]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ScrollPosition.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20A45A810(0, &qword_26763ADC0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A45A538();
  sub_20A8CF8E0();
  if (!v2)
  {
    char v16 = 0;
    sub_20A45A58C();
    sub_20A8CF640();
    if (v15)
    {
      LOBYTE(v15) = 1;
      uint64_t v10 = sub_20A8CF620();
      uint64_t v12 = v11;
      type metadata accessor for CGPoint(0);
      char v16 = 2;
      sub_20A45A8C8(&qword_26763ADD0);
      sub_20A8CF640();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      long long v14 = v15;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      uint64_t v10 = 0;
      uint64_t v12 = 0;
      long long v14 = 0uLL;
    }
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v12;
    *(_OWORD *)(a2 + 16) = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_20A45A538()
{
  unint64_t result = qword_26AC6D740;
  if (!qword_26AC6D740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6D740);
  }
  return result;
}

unint64_t sub_20A45A58C()
{
  unint64_t result = qword_26763ADC8;
  if (!qword_26763ADC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763ADC8);
  }
  return result;
}

uint64_t ScrollPosition.encode(to:)(void *a1)
{
  sub_20A45A810(0, &qword_26AC7FE58, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v13 - v7;
  uint64_t v9 = v1[1];
  v13[1] = *v1;
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A45A538();
  sub_20A8CF8F0();
  if (!v9)
  {
    LOBYTE(v14) = 0;
    char v16 = 0;
    sub_20A45A874();
    goto LABEL_5;
  }
  LOBYTE(v14) = 1;
  char v16 = 0;
  sub_20A45A874();
  sub_20A8CF6E0();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_20A8CF6B0();
    uint64_t v14 = v10;
    uint64_t v15 = v11;
    char v16 = 2;
    type metadata accessor for CGPoint(0);
    sub_20A45A8C8(&qword_26AC7FB98);
LABEL_5:
    sub_20A8CF6E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_20A45A810(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A45A538();
    unint64_t v7 = a3(a1, &type metadata for ScrollPosition.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20A45A874()
{
  unint64_t result = qword_26AC6D750;
  if (!qword_26AC6D750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6D750);
  }
  return result;
}

uint64_t sub_20A45A8C8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CGPoint(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A45A90C()
{
  uint64_t v1 = 0x696669746E656469;
  if (*v0 != 1) {
    uint64_t v1 = 0x74657366666FLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_20A45A960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A45B200(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A45A988(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_20A45A994(uint64_t a1)
{
  unint64_t v2 = sub_20A45A538();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A45A9D0(uint64_t a1)
{
  unint64_t v2 = sub_20A45A538();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20A45AA0C(char *a1, char *a2)
{
  return sub_20A44FC7C(*a1, *a2);
}

uint64_t sub_20A45AA18()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A45AA8C()
{
  sub_20A8CE360();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A45AAEC()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A45AB5C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_20A8CF5B0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_20A45ABBC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 7368564;
  if (*v1) {
    uint64_t v2 = 1835365481;
  }
  unint64_t v3 = 0xE300000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_20A45ABEC()
{
  return sub_20A8CE5A0();
}

uint64_t sub_20A45AC4C()
{
  return sub_20A8CE580();
}

uint64_t sub_20A45AC9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ScrollPosition.init(from:)(a1, a2);
}

uint64_t sub_20A45ACB4(void *a1)
{
  return ScrollPosition.encode(to:)(a1);
}

uint64_t initializeWithCopy for ScrollPosition(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ScrollPosition(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for ScrollPosition(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScrollPosition(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ScrollPosition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_20A45AE4C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_20A45AE64(void *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *uint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrollPosition()
{
  return &type metadata for ScrollPosition;
}

unsigned char *storeEnumTagSinglePayload for ScrollPosition.CodingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A45AF64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrollPosition.CodingType()
{
  return &type metadata for ScrollPosition.CodingType;
}

unsigned char *storeEnumTagSinglePayload for ScrollPosition.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A45B068);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrollPosition.CodingKeys()
{
  return &type metadata for ScrollPosition.CodingKeys;
}

unint64_t sub_20A45B0A4()
{
  unint64_t result = qword_26763ADD8;
  if (!qword_26763ADD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763ADD8);
  }
  return result;
}

unint64_t sub_20A45B0FC()
{
  unint64_t result = qword_26763ADE0;
  if (!qword_26763ADE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763ADE0);
  }
  return result;
}

unint64_t sub_20A45B154()
{
  unint64_t result = qword_26AC67910;
  if (!qword_26AC67910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC67910);
  }
  return result;
}

unint64_t sub_20A45B1AC()
{
  unint64_t result = qword_26AC6D748;
  if (!qword_26AC6D748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6D748);
  }
  return result;
}

uint64_t sub_20A45B200(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74657366666FLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_20A45B34C()
{
  unint64_t result = qword_26AC6D758;
  if (!qword_26AC6D758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6D758);
  }
  return result;
}

uint64_t *sub_20A45B3A0(uint64_t *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_20A8C2BC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[6];
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_20A8C2AF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)v4 + v15) = (uint64_t)v17;
    uint64_t v18 = (_OWORD *)((char *)v4 + v16);
    uint64_t v19 = (_OWORD *)((char *)a2 + v16);
    long long v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    id v21 = v17;
  }
  return v4;
}

void sub_20A45B4E4(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_20A8C2BC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = sub_20A8C2AF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = *(void **)(a1 + a2[7]);
}

_OWORD *sub_20A45B5A8(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2BC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_20A8C2AF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = *(void **)((char *)a2 + v14);
  *(void *)((char *)a1 + v14) = v16;
  uint64_t v17 = (_OWORD *)((char *)a1 + v15);
  uint64_t v18 = (_OWORD *)((char *)a2 + v15);
  long long v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  id v20 = v16;
  return a1;
}

void *sub_20A45B69C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2BC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_20A8C2AF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = *(void **)((char *)a2 + v14);
  uint64_t v16 = *(void **)((char *)a1 + v14);
  *(void *)((char *)a1 + v14) = v15;
  id v17 = v15;

  uint64_t v18 = a3[8];
  long long v19 = (void *)((char *)a1 + v18);
  id v20 = (void *)((char *)a2 + v18);
  *long long v19 = *v20;
  v19[1] = v20[1];
  v19[2] = v20[2];
  v19[3] = v20[3];
  return a1;
}

_OWORD *sub_20A45B7BC(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2BC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_20A8C2AF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v15 = (_OWORD *)((char *)a1 + v14);
  uint64_t v16 = (_OWORD *)((char *)a2 + v14);
  long long v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  return a1;
}

_OWORD *sub_20A45B8AC(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2BC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_20A8C2AF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = *(void **)((char *)a1 + v14);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);

  uint64_t v16 = a3[8];
  long long v17 = (_OWORD *)((char *)a1 + v16);
  uint64_t v18 = (_OWORD *)((char *)a2 + v16);
  long long v19 = v18[1];
  *long long v17 = *v18;
  v17[1] = v19;
  return a1;
}

uint64_t sub_20A45B9A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A45B9BC);
}

uint64_t sub_20A45B9BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C2BC0();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_20A8C2AF0();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[7]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_20A45BACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A45BAE0);
}

uint64_t sub_20A45BAE0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_20A8C2BC0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = sub_20A8C2AF0();
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[7]) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[6];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

uint64_t type metadata accessor for StockChartCalloutLayoutOptions()
{
  uint64_t result = qword_26763ADE8;
  if (!qword_26763ADE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A45BC38()
{
  uint64_t result = sub_20A8C2BC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20A8C2AF0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_20A45BD24()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_20A8CE060();
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  MEMORY[0x270FA5388](v2);
  objc_super v41 = (uint64_t *)((char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = sub_20A8CE0E0();
  uint64_t v4 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8CDBA0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8CE0D0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = v0[5];
  uint64_t v37 = v0 + 2;
  unint64_t v38 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v0 + 2, v13);
  char v14 = sub_20A8C59D0();
  uint64_t v15 = v1[10];
  uint64_t v16 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v15);
  uint64_t v17 = *(void *)(v16 + 16);
  if (v14) {
    (*(void (**)(uint64_t))(v17 + 296))(v15);
  }
  else {
    (*(void (**)(uint64_t))(v17 + 280))(v15);
  }
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7CAE8], v7);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F7CC88], v36);
  sub_20A8CE0C0();
  sub_20A45F33C();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_20A8D5C90;
  long long v19 = v37;
  __swift_project_boxed_opaque_existential_1(v37, v1[5]);
  char v20 = sub_20A8C59D0();
  uint64_t v22 = v1[10];
  uint64_t v21 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v22);
  uint64_t v23 = *(void *)(v21 + 16);
  if (v20) {
    Class v24 = (void *)(*(uint64_t (**)(uint64_t))(v23 + 304))(v22);
  }
  else {
    Class v24 = (void *)(*(uint64_t (**)(uint64_t))(v23 + 288))(v22);
  }
  uint64_t v25 = v24;
  id v26 = objc_msgSend(v24, sel_colorWithAlphaComponent_, 0.38);

  *(void *)(v18 + 32) = v26;
  __swift_project_boxed_opaque_existential_1(v19, v1[5]);
  LOBYTE(v25) = sub_20A8C59D0();
  uint64_t v27 = v1[10];
  uint64_t v28 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v27);
  uint64_t v29 = *(void *)(v28 + 16);
  if (v25) {
    uint64_t v30 = (void *)(*(uint64_t (**)(uint64_t))(v29 + 304))(v27);
  }
  else {
    uint64_t v30 = (void *)(*(uint64_t (**)(uint64_t))(v29 + 288))(v27);
  }
  uint64_t v31 = v30;
  id v32 = objc_msgSend(v30, sel_colorWithAlphaComponent_, 0.0);

  *(void *)(v18 + 40) = v32;
  uint64_t v42 = v18;
  sub_20A8CE620();
  uint64_t v33 = v41;
  uint64_t *v41 = v42;
  (*(void (**)(uint64_t *, void, uint64_t))(v39 + 104))(v33, *MEMORY[0x263F7CC70], v40);
  sub_20A8CE120();
  swift_allocObject();
  return sub_20A8CE110();
}

uint64_t sub_20A45C1CC()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_20A8CE060();
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  MEMORY[0x270FA5388](v2);
  objc_super v41 = (uint64_t *)((char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = sub_20A8CE0E0();
  uint64_t v4 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8CDBA0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8CE0D0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = v0[5];
  uint64_t v37 = v0 + 2;
  unint64_t v38 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v0 + 2, v13);
  char v14 = sub_20A8C59D0();
  uint64_t v15 = v1[10];
  uint64_t v16 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v15);
  uint64_t v17 = *(void *)(v16 + 16);
  if (v14) {
    (*(void (**)(uint64_t))(v17 + 280))(v15);
  }
  else {
    (*(void (**)(uint64_t))(v17 + 296))(v15);
  }
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7CAE8], v7);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F7CC88], v36);
  sub_20A8CE0C0();
  sub_20A45F33C();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_20A8D5C90;
  long long v19 = v37;
  __swift_project_boxed_opaque_existential_1(v37, v1[5]);
  char v20 = sub_20A8C59D0();
  uint64_t v22 = v1[10];
  uint64_t v21 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v22);
  uint64_t v23 = *(void *)(v21 + 16);
  if (v20) {
    Class v24 = (void *)(*(uint64_t (**)(uint64_t))(v23 + 288))(v22);
  }
  else {
    Class v24 = (void *)(*(uint64_t (**)(uint64_t))(v23 + 304))(v22);
  }
  uint64_t v25 = v24;
  id v26 = objc_msgSend(v24, sel_colorWithAlphaComponent_, 0.37);

  *(void *)(v18 + 32) = v26;
  __swift_project_boxed_opaque_existential_1(v19, v1[5]);
  LOBYTE(v25) = sub_20A8C59D0();
  uint64_t v27 = v1[10];
  uint64_t v28 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v27);
  uint64_t v29 = *(void *)(v28 + 16);
  if (v25) {
    uint64_t v30 = (void *)(*(uint64_t (**)(uint64_t))(v29 + 288))(v27);
  }
  else {
    uint64_t v30 = (void *)(*(uint64_t (**)(uint64_t))(v29 + 304))(v27);
  }
  uint64_t v31 = v30;
  id v32 = objc_msgSend(v30, sel_colorWithAlphaComponent_, 0.0);

  *(void *)(v18 + 40) = v32;
  uint64_t v42 = v18;
  sub_20A8CE620();
  uint64_t v33 = v41;
  uint64_t *v41 = v42;
  (*(void (**)(uint64_t *, void, uint64_t))(v39 + 104))(v33, *MEMORY[0x263F7CC70], v40);
  sub_20A8CE120();
  swift_allocObject();
  return sub_20A8CE110();
}

uint64_t sub_20A45C674()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_20A8CE060();
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v30 = (uint64_t *)((char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = sub_20A8CE0E0();
  uint64_t v4 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8CDBA0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8CE0D0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v12 = v0 + 7;
  uint64_t v14 = v0[10];
  uint64_t v13 = v0[11];
  __swift_project_boxed_opaque_existential_1(v12, v14);
  (*(void (**)(uint64_t))(*(void *)(v13 + 16) + 312))(v14);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7CAE8], v7);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F7CC88], v29);
  sub_20A8CE0C0();
  sub_20A45F33C();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_20A8D5C90;
  uint64_t v17 = v1[10];
  uint64_t v16 = v1[11];
  __swift_project_boxed_opaque_existential_1(v12, v17);
  uint64_t v18 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v16 + 16) + 320))(v17);
  id v19 = objc_msgSend(v18, sel_colorWithAlphaComponent_, 0.45);

  *(void *)(v15 + 32) = v19;
  uint64_t v21 = v1[10];
  uint64_t v20 = v1[11];
  __swift_project_boxed_opaque_existential_1(v12, v21);
  uint64_t v22 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v20 + 16) + 320))(v21);
  id v23 = objc_msgSend(v22, sel_colorWithAlphaComponent_, 0.0);

  *(void *)(v15 + 40) = v23;
  uint64_t v33 = v15;
  sub_20A8CE620();
  uint64_t v24 = v32;
  id v26 = v30;
  uint64_t v25 = v31;
  *uint64_t v30 = v33;
  (*(void (**)(uint64_t *, void, uint64_t))(v25 + 104))(v26, *MEMORY[0x263F7CC70], v24);
  sub_20A8CE120();
  swift_allocObject();
  return sub_20A8CE110();
}

uint64_t sub_20A45CA3C()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_20A8CE060();
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v30 = (uint64_t *)((char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = sub_20A8CE0E0();
  uint64_t v4 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8CDBA0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8CE0D0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v12 = v0 + 7;
  uint64_t v14 = v0[10];
  uint64_t v13 = v0[11];
  __swift_project_boxed_opaque_existential_1(v12, v14);
  (*(void (**)(uint64_t))(*(void *)(v13 + 16) + 328))(v14);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7CAE8], v7);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F7CC88], v29);
  sub_20A8CE0C0();
  sub_20A45F33C();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_20A8D5C90;
  uint64_t v17 = v1[10];
  uint64_t v16 = v1[11];
  __swift_project_boxed_opaque_existential_1(v12, v17);
  uint64_t v18 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v16 + 16) + 336))(v17);
  id v19 = objc_msgSend(v18, sel_colorWithAlphaComponent_, 0.45);

  *(void *)(v15 + 32) = v19;
  uint64_t v21 = v1[10];
  uint64_t v20 = v1[11];
  __swift_project_boxed_opaque_existential_1(v12, v21);
  uint64_t v22 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v20 + 16) + 336))(v21);
  id v23 = objc_msgSend(v22, sel_colorWithAlphaComponent_, 0.0);

  *(void *)(v15 + 40) = v23;
  uint64_t v33 = v15;
  sub_20A8CE620();
  uint64_t v24 = v32;
  id v26 = v30;
  uint64_t v25 = v31;
  *uint64_t v30 = v33;
  (*(void (**)(uint64_t *, void, uint64_t))(v25 + 104))(v26, *MEMORY[0x263F7CC70], v24);
  sub_20A8CE120();
  swift_allocObject();
  return sub_20A8CE110();
}

void *sub_20A45CE04(uint64_t a1)
{
  uint64_t v27 = *v1;
  sub_20A4342F4((uint64_t)(v1 + 2), (uint64_t)v30);
  uint64_t v4 = v1[10];
  uint64_t v3 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v4);
  uint64_t v26 = v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 8);
  v29[3] = v4;
  v29[4] = v3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v29);
  v6(a1, v4, v5);
  uint64_t v9 = v1[15];
  uint64_t v8 = v1[16];
  __swift_project_boxed_opaque_existential_1(v1 + 12, v9);
  uint64_t v10 = *(void *)(v8 + 8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 8);
  v28[3] = v9;
  v28[4] = v8;
  uint64_t v12 = __swift_allocate_boxed_opaque_existential_1(v28);
  uint64_t v13 = v11(a1, v9, v10);
  double v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t *, uint64_t, double))(v17 + 16))(v16, boxed_opaque_existential_1, v4, v14);
  double v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v22 + 16))(v21, v12, v9, v19);
  id v23 = sub_20A45F180(v30, (uint64_t)v16, (uint64_t)v21, v27, v4, v9, v26, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return v23;
}

uint64_t sub_20A45D068(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v72 = sub_20A8C9610();
  unint64_t v74 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v5 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v73 = *(void *)(a1 + OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl);
  id v76 = (void *)(v2 + 96);
  uint64_t v6 = (void *)*__swift_project_boxed_opaque_existential_1((void *)(v2 + 96), *(void *)(v2 + 120));
  sub_20A45F3CC(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
  uint64_t v71 = v7;
  uint64_t inited = swift_initStackObject();
  long long v70 = xmmword_20A8D4540;
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v9 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  uint64_t v10 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  uint64_t v69 = *MEMORY[0x263F835B8];
  id v68 = v9;
  *(void *)(inited + 40) = sub_20A8CEE30();
  uint64_t v11 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v10;
  *(void *)(inited + 72) = v11;
  uint64_t v12 = v6 + 2;
  uint64_t v14 = v6[5];
  uint64_t v13 = v6[6];
  __swift_project_boxed_opaque_existential_1(v12, v14);
  uint64_t v15 = *(void *)(v13 + 16);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 40);
  id v64 = v11;
  uint64_t v17 = v16(v14, v15);
  uint64_t v67 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 104) = v67;
  *(void *)(inited + 80) = v17;
  sub_20A4CF8B0(inited);
  uint64_t v18 = *MEMORY[0x263F7D810];
  unint64_t v19 = v74;
  uint64_t v66 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 104);
  uint64_t v20 = v72;
  v66(v5, v18, v72);
  sub_20A8C8AF0();
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v19 + 8);
  unint64_t v74 = v19 + 8;
  uint64_t v65 = v21;
  v21(v5, v20);
  uint64_t v75 = v2;
  uint64_t v22 = (void *)*__swift_project_boxed_opaque_existential_1(v76, *(void *)(v2 + 120));
  uint64_t v23 = swift_initStackObject();
  *(_OWORD *)(v23 + 16) = v70;
  uint64_t v24 = v68;
  *(void *)(v23 + 32) = v68;
  id v25 = v24;
  *(void *)(v23 + 40) = sub_20A8CEE30();
  uint64_t v26 = v64;
  *(void *)(v23 + 64) = v10;
  *(void *)(v23 + 72) = v26;
  uint64_t v27 = v22 + 2;
  uint64_t v28 = v22[5];
  uint64_t v29 = v22[6];
  __swift_project_boxed_opaque_existential_1(v27, v28);
  uint64_t v30 = *(void *)(v29 + 16);
  uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 40);
  id v32 = v26;
  uint64_t v33 = v31(v28, v30);
  *(void *)(v23 + 104) = v67;
  *(void *)(v23 + 80) = v33;
  sub_20A4CF8B0(v23);
  v66(v5, *MEMORY[0x263F7D818], v20);
  sub_20A8C8AF0();
  swift_bridgeObjectRelease();
  v65(v5, v20);
  unint64_t v34 = sub_20A8C8B10();
  unint64_t v35 = v34;
  if (v34 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_20A8CF540();
    if (v36) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v36 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v36)
    {
LABEL_3:
      unint64_t v74 = v35 & 0xC000000000000001;
      uint64_t v37 = 4;
      uint64_t v72 = *MEMORY[0x263F15A20];
      unint64_t v38 = 0x1F63A6000uLL;
      unint64_t v73 = v35;
      while (1)
      {
        if (v74) {
          id v39 = (id)MEMORY[0x210527700](v37 - 4, v35);
        }
        else {
          id v39 = *(id *)(v35 + 8 * v37);
        }
        uint64_t v40 = v39;
        if (__OFADD__(v37 - 4, 1))
        {
          __break(1u);
          goto LABEL_19;
        }
        uint64_t v41 = v36;
        unint64_t v42 = v38;
        unsigned int v43 = objc_msgSend(v39, sel_isSelected);
        uint64_t v44 = __swift_project_boxed_opaque_existential_1(v76, *(void *)(v75 + 120));
        uint64_t v45 = *v44;
        uint64_t v46 = (void *)(*v44 + 16);
        uint64_t v47 = *(void *)(*v44 + 40);
        uint64_t v48 = *(void *)(*v44 + 48);
        __swift_project_boxed_opaque_existential_1(v46, v47);
        uint64_t v49 = *(void *)(v48 + 16);
        if (v43) {
          break;
        }
        uint64_t v56 = (void *)(*(uint64_t (**)(uint64_t))(v49 + 64))(v47);
        unint64_t v38 = v42;
        objc_msgSend(v40, (SEL)(v42 + 2840), v56);

        id v57 = objc_msgSend(v40, sel_titleLabel);
        if (v57)
        {
          uint64_t v58 = v57;
          uint64_t v60 = *(void *)(v45 + 40);
          uint64_t v59 = *(void *)(v45 + 48);
          __swift_project_boxed_opaque_existential_1(v46, v60);
          uint64_t v61 = v60;
          unint64_t v38 = v42;
          id v55 = (id)(*(uint64_t (**)(uint64_t))(*(void *)(v59 + 16) + 64))(v61);
          objc_msgSend(v58, (SEL)(v42 + 2840), v55);

LABEL_14:
          goto LABEL_15;
        }

LABEL_15:
        uint64_t v36 = v41;
        BOOL v62 = v37 - 3 == v41;
        unint64_t v35 = v73;
        if (v62) {
          return swift_bridgeObjectRelease_n();
        }
        ++v37;
      }
      uint64_t v50 = (void *)(*(uint64_t (**)(uint64_t))(v49 + 392))(v47);
      unint64_t v38 = v42;
      objc_msgSend(v40, (SEL)(v42 + 2840), v50);

      id v51 = objc_msgSend(v40, sel_titleLabel);
      if (v51)
      {
        uint64_t v52 = v51;
        id v53 = objc_msgSend(self, sel_clearColor);
        objc_msgSend(v52, (SEL)(v42 + 2840), v53);
      }
      id v54 = objc_msgSend(v40, sel_layer);
      objc_msgSend(v54, sel_setCornerCurve_, v72);

      id v55 = objc_msgSend(v40, sel_layer);
      objc_msgSend(v55, sel_setCornerRadius_, 8.0);

      goto LABEL_14;
    }
  }
  return swift_bridgeObjectRelease_n();
}

void sub_20A45D778(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  int v5 = a1;
  uint64_t v6 = sub_20A8CE060();
  uint64_t v49 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_20A8CE0E0();
  uint64_t v9 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_20A8CDBA0();
  uint64_t v12 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_20A8CE0D0();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v48 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v47 = sub_20A45DD74(v3);
  uint64_t v50 = v6;
  uint64_t v51 = a2;
  uint64_t v44 = (uint64_t *)v8;
  if (v5 == 2) {
    goto LABEL_2;
  }
  if (v5)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  char v22 = sub_20A8CF760();
  swift_bridgeObjectRelease();
  if (v22)
  {
LABEL_12:
    int v23 = v5 & 1;
    __swift_project_boxed_opaque_existential_1(v3 + 2, v3[5]);
    char v24 = sub_20A8C59D0();
    uint64_t v25 = v3[10];
    uint64_t v26 = v3[11];
    __swift_project_boxed_opaque_existential_1(v3 + 7, v25);
    uint64_t v27 = *(void *)(v26 + 16);
    if (v24)
    {
      id v43 = (id)(*(uint64_t (**)(uint64_t))(v27 + 280))(v25);
      if (!v23) {
        goto LABEL_16;
      }
    }
    else
    {
      id v43 = (id)(*(uint64_t (**)(uint64_t))(v27 + 296))(v25);
      if (!v23) {
        goto LABEL_16;
      }
    }
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
LABEL_2:
  __swift_project_boxed_opaque_existential_1(v3 + 2, v3[5]);
  char v17 = sub_20A8C59D0();
  uint64_t v18 = v3[10];
  uint64_t v19 = v3[11];
  __swift_project_boxed_opaque_existential_1(v3 + 7, v18);
  uint64_t v20 = *(void *)(v19 + 16);
  if (v17) {
    uint64_t v21 = (void *)(*(uint64_t (**)(uint64_t))(v20 + 296))(v18);
  }
  else {
    uint64_t v21 = (void *)(*(uint64_t (**)(uint64_t))(v20 + 280))(v18);
  }
  id v43 = v21;
  if (v5 == 2)
  {
LABEL_19:
    __swift_project_boxed_opaque_existential_1(v3 + 2, v3[5]);
    char v35 = sub_20A8C59D0();
    uint64_t v32 = v3[10];
    uint64_t v36 = v3[11];
    __swift_project_boxed_opaque_existential_1(v3 + 7, v32);
    uint64_t v33 = *(void *)(v36 + 16);
    uint64_t v29 = v9;
    if ((v35 & 1) == 0) {
      goto LABEL_18;
    }
LABEL_20:
    uint64_t v34 = (*(uint64_t (**)(uint64_t))(v33 + 304))(v32);
    goto LABEL_21;
  }
  if (v5) {
    goto LABEL_14;
  }
LABEL_16:
  char v28 = sub_20A8CF760();
  swift_bridgeObjectRelease();
  if ((v28 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_17:
  uint64_t v29 = v9;
  __swift_project_boxed_opaque_existential_1(v3 + 2, v3[5]);
  char v30 = sub_20A8C59D0();
  uint64_t v32 = v3[10];
  uint64_t v31 = v3[11];
  __swift_project_boxed_opaque_existential_1(v3 + 7, v32);
  uint64_t v33 = *(void *)(v31 + 16);
  if ((v30 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_18:
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v33 + 288))(v32);
LABEL_21:
  uint64_t v37 = (void *)v34;
  sub_20A45F33C();
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_20A8D5CA0;
  id v39 = v43;
  id v40 = objc_msgSend(v43, sel_colorWithAlphaComponent_, 0.4);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F7CAE8], v45);
  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v11, *MEMORY[0x263F7CC88], v46);
  sub_20A8CE0C0();
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_20A8D5C90;
  *(void *)(v41 + 32) = objc_msgSend(v37, sel_colorWithAlphaComponent_, 0.12);
  *(void *)(v41 + 40) = objc_msgSend(v37, sel_colorWithAlphaComponent_, 0.0);
  uint64_t v52 = v41;
  sub_20A8CE620();
  unint64_t v42 = v44;
  uint64_t *v44 = v52;
  (*(void (**)(uint64_t *, void, uint64_t))(v49 + 104))(v42, *MEMORY[0x263F7CC70], v50);
  sub_20A8CE120();
  swift_allocObject();
  *(void *)(v38 + 32) = sub_20A8CE110();
  uint64_t v52 = v38;
  sub_20A8CE620();
  sub_20A8CDC80();
}

unint64_t sub_20A45DD74(void *a1)
{
  sub_20A45F398(0);
  uint64_t v12 = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  int v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A45F3CC(0, &qword_26AC800B0, (uint64_t (*)(uint64_t))sub_20A45F398, MEMORY[0x263F8E0F8]);
  unint64_t v6 = ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
     + 3 * *(void *)(v3 + 72);
  unint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_20A8D5CB0;
  uint64_t v14 = sub_20A45C1CC();
  sub_20A8CE120();
  sub_20A8CE150();
  uint64_t v14 = sub_20A45BD24();
  sub_20A8CE150();
  uint64_t v14 = sub_20A45CA3C();
  sub_20A8CE150();
  uint64_t v9 = a1[10];
  uint64_t v8 = a1[11];
  __swift_project_boxed_opaque_existential_1(a1 + 7, v9);
  (*(void (**)(char *__return_ptr, uint64_t))(*(void *)(v8 + 16) + 352))(&v13, v9);
  if (v13 == 1)
  {
    uint64_t v14 = sub_20A45C674();
    sub_20A8CE150();
    unint64_t v7 = sub_20A46DAA0(1, 4, 1, v7);
    *(void *)(v7 + 16) = 4;
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, v5, v12);
  }
  return v7;
}

uint64_t sub_20A45E01C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v19 = sub_20A8CDDD0();
  uint64_t v2 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_20A8CE0E0();
  uint64_t v5 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  unint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8CDBA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8CE0D0();
  MEMORY[0x270FA5388](v12 - 8);
  char v13 = v1 + 7;
  uint64_t v15 = v1[10];
  uint64_t v14 = v1[11];
  __swift_project_boxed_opaque_existential_1(v13, v15);
  (*(void (**)(uint64_t))(*(void *)(v14 + 16) + 368))(v15);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F7CAE8], v8);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F7CC88], v18);
  sub_20A8CE0C0();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F7CB88], v19);
  return sub_20A8CE0F0();
}

uint64_t sub_20A45E2FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v19 = sub_20A8CDDD0();
  uint64_t v2 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_20A8CE0E0();
  uint64_t v5 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  unint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8CDBA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8CE0D0();
  MEMORY[0x270FA5388](v12 - 8);
  char v13 = v1 + 7;
  uint64_t v15 = v1[10];
  uint64_t v14 = v1[11];
  __swift_project_boxed_opaque_existential_1(v13, v15);
  (*(void (**)(uint64_t))(*(void *)(v14 + 16) + 376))(v15);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F7CAE8], v8);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F7CC88], v18);
  sub_20A8CE0C0();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F7CB90], v19);
  return sub_20A8CE0F0();
}

uint64_t sub_20A45E5DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v19 = sub_20A8CDDD0();
  uint64_t v2 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_20A8CE0E0();
  uint64_t v5 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  unint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8CDBA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8CE0D0();
  MEMORY[0x270FA5388](v12 - 8);
  char v13 = v1 + 7;
  uint64_t v15 = v1[10];
  uint64_t v14 = v1[11];
  __swift_project_boxed_opaque_existential_1(v13, v15);
  (*(void (**)(uint64_t))(*(void *)(v14 + 16) + 384))(v15);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F7CAE8], v8);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F7CC88], v18);
  sub_20A8CE0C0();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F7CB88], v19);
  return sub_20A8CE0F0();
}

uint64_t sub_20A45E8BC@<X0>(uint64_t a1@<X8>)
{
  v19[1] = a1;
  v19[0] = sub_20A8CDDD0();
  uint64_t v2 = *(void *)(v19[0] - 8);
  MEMORY[0x270FA5388](v19[0]);
  uint64_t v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8CE0E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8CDBA0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (void *)((char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_20A8CE0D0();
  double v14 = MEMORY[0x270FA5388](v13 - 8);
  *uint64_t v12 = &unk_26BE5E7E8;
  (*(void (**)(void *, void, uint64_t, double))(v10 + 104))(v12, *MEMORY[0x263F7CAF0], v9, v14);
  uint64_t v15 = v1 + 7;
  uint64_t v17 = v1[10];
  uint64_t v16 = v1[11];
  __swift_project_boxed_opaque_existential_1(v15, v17);
  (*(void (**)(uint64_t))(*(void *)(v16 + 16) + 344))(v17);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F7CC90], v5);
  sub_20A8CE0C0();
  (*(void (**)(char *, void, void))(v2 + 104))(v4, *MEMORY[0x263F7CB90], v19[0]);
  return sub_20A8CE0F0();
}

id sub_20A45EBA8()
{
  sub_20A45F3CC(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  uint64_t v2 = (void **)MEMORY[0x263F814F0];
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v3 = *v2;
  *(void *)(inited + 32) = *v2;
  uint64_t v4 = self;
  double v5 = *MEMORY[0x263F81840];
  swift_bridgeObjectRetain();
  id v6 = v3;
  id v7 = objc_msgSend(v4, sel_monospacedDigitSystemFontOfSize_weight_, 13.0, v5);
  uint64_t v8 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v7;
  uint64_t v9 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v8;
  *(void *)(inited + 72) = v9;
  uint64_t v10 = v0[10];
  uint64_t v11 = v0[11];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v10);
  uint64_t v12 = *(void *)(v11 + 16);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 40);
  id v14 = v9;
  uint64_t v15 = v13(v10, v12);
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v15;
  sub_20A4CF8B0(inited);
  id v16 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v17 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v18 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18);

  return v19;
}

id sub_20A45EDC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_20A45F3CC(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  uint64_t v8 = (void **)MEMORY[0x263F814F0];
  *(_OWORD *)(inited + 16) = xmmword_20A8D5CB0;
  uint64_t v9 = *v8;
  *(void *)(inited + 32) = *v8;
  uint64_t v10 = self;
  double v11 = *MEMORY[0x263F81840];
  swift_bridgeObjectRetain();
  id v12 = v9;
  id v13 = objc_msgSend(v10, sel_monospacedDigitSystemFontOfSize_weight_, 13.0, v11);
  uint64_t v14 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v13;
  uint64_t v15 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v14;
  *(void *)(inited + 72) = v15;
  uint64_t v16 = v4[10];
  uint64_t v17 = v4[11];
  __swift_project_boxed_opaque_existential_1(v4 + 7, v16);
  uint64_t v18 = *(void *)(v17 + 16);
  id v19 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 40);
  id v20 = v15;
  uint64_t v21 = v19(v16, v18);
  uint64_t v22 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v21;
  int v23 = (void *)*MEMORY[0x263F83240];
  *(void *)(inited + 104) = v22;
  *(void *)(inited + 112) = v23;
  *(void *)(inited + 144) = MEMORY[0x263F8D310];
  *(void *)(inited + 120) = a3;
  *(void *)(inited + 128) = a4;
  id v24 = v23;
  swift_bridgeObjectRetain();
  sub_20A4CF8B0(inited);
  id v25 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v26 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v27 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(v25, sel_initWithString_attributes_, v26, v27);

  return v28;
}

uint64_t sub_20A45F010()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockChartStyler()
{
  return self;
}

uint64_t sub_20A45F07C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A45E01C(a1);
}

uint64_t sub_20A45F0A0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A45E2FC(a1);
}

uint64_t sub_20A45F0C4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A45E5DC(a1);
}

uint64_t sub_20A45F0E8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A45E8BC(a1);
}

id sub_20A45F10C()
{
  return sub_20A45EBA8();
}

id sub_20A45F130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A45EDC4(a1, a2, a3, a4);
}

void *sub_20A45F154@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_20A45CE04(a1);
  *a2 = result;
  return result;
}

void *sub_20A45F180(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(boxed_opaque_existential_1, a2, a5);
  uint64_t v25 = a6;
  uint64_t v26 = a8;
  uint64_t v15 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(v15, a3, a6);
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
  double v18 = MEMORY[0x270FA5388](v17);
  id v20 = (uint64_t *)((char *)v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v21 + 16))(v20, v18);
  uint64_t v22 = *v20;
  v16[15] = type metadata accessor for DateRangePickerStyler();
  v16[16] = &off_26BE5FEF0;
  v16[12] = v22;
  sub_20A42BEBC(a1, (uint64_t)(v16 + 2));
  sub_20A42BEBC(&v27, (uint64_t)(v16 + 7));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return v16;
}

void sub_20A45F33C()
{
  if (!qword_26AC80140)
  {
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC80140);
    }
  }
}

void sub_20A45F398(uint64_t a1)
{
}

void sub_20A45F3CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for ViewWatchlistCommandHandler()
{
  return self;
}

uint64_t sub_20A45F454()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  uint64_t v3 = *(void *)(v1 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  id v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v3 + 16))(v6, v4);
  sub_20A8C3610();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  sub_20A8CBE60();
  return swift_release();
}

uint64_t sub_20A45F564@<X0>(uint64_t a1@<X3>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_20A8C40E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(*(void *)v2 + 40);
  uint64_t v10 = __swift_project_boxed_opaque_existential_1((void *)(*(void *)v2 + 16), v9);
  uint64_t v11 = *(void *)(v9 - 8);
  double v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v11 + 16))(v14, v12);
  sub_20A8C3600();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
  LOBYTE(v14) = MEMORY[0x21051C3A0](a1, v8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v14 & 1;
  return result;
}

uint64_t sub_20A45F71C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_20A8CADF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C9720();
  sub_20A8C96E0();
  sub_20A8CADC0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_20A8C9720();
  sub_20A8CEDD0();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  sub_20A8C9710();
  double v11 = v10;
  double v13 = v12;
  uint64_t v14 = (void *)sub_20A8C9790();
  id v15 = objc_msgSend(v14, sel_horizontalSizeClass);

  if (v15 == (id)2)
  {
    double v11 = 16.0;
    double v13 = 12.0;
  }
  uint64_t v16 = sub_20A8C9750();
  uint64_t result = sub_20A8C9790();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = 0x402C000000000000;
  *(double *)(a1 + 24) = v11;
  *(void *)(a1 + 32) = 0x402C000000000000;
  *(double *)(a1 + 40) = v13;
  *(void *)(a1 + 48) = v16;
  *(void *)(a1 + 56) = result;
  return result;
}

uint64_t sub_20A45F8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A45F8B8);
}

uint64_t sub_20A45F8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C9830();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_20A45F988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A45F99C);
}

uint64_t sub_20A45F99C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20A8C9830();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for StockListSectionHeaderViewLayoutOptions()
{
  uint64_t result = qword_26AC7DEE8;
  if (!qword_26AC7DEE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A45FAA4()
{
  uint64_t result = sub_20A8C9830();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A45FB38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  CGFloat v112 = (char *)a2;
  *(void *)&long long v113 = a1;
  sub_20A460D90();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v97 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CuratedForYouFeedGroupConfigData();
  MEMORY[0x270FA5388](v6 - 8);
  double v101 = (uint64_t *)((char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for ForYouFeedKnobsConfig();
  MEMORY[0x270FA5388](v8 - 8);
  CGFloat v114 = (char **)((char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A460E04();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v98 = (uint64_t)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v110 = (uint64_t)&v97 - v13;
  uint64_t v109 = type metadata accessor for CuratedForYouFeedGroupKnobs();
  uint64_t v108 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  CGFloat v102 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  double v103 = (char *)&v97 - v16;
  sub_20A460E5C();
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  CGFloat v107 = (char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  CGFloat v106 = (char *)&v97 - v22;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v97 - v24;
  uint64_t v100 = sub_20A8C3190();
  double v99 = *(void (***)(uint64_t, char *, uint64_t))(v100 - 8);
  MEMORY[0x270FA5388](v100);
  long long v27 = (char *)&v97 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for StockForYouFeedGroupKnobs();
  MEMORY[0x270FA5388](v28 - 8);
  double v105 = (char **)((char *)&v97 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A460F28();
  uint64_t v31 = v30;
  uint64_t v32 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  CGFloat v104 = (char *)&v97 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)&v97 - v35;
  uint64_t v37 = type metadata accessor for ForYouFeedGroupConfig();
  MEMORY[0x270FA5388](v37);
  id v39 = (char *)&v97 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4610F0(v113, (uint64_t)v39, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroupConfig);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    CGFloat v104 = (char *)v2;
    uint64_t v111 = v19;
    uint64_t v40 = v19 + 32;
    uint64_t v41 = *(char ***)(v19 + 32);
    ((void (*)(char *, char *, uint64_t))v41)(v25, v39, v18);
    uint64_t v42 = type metadata accessor for ForYouFeedGroupKnobs();
    uint64_t v43 = (uint64_t)v112;
    uint64_t v44 = *(void *)&v112[*(int *)(v42 + 20)];
    uint64_t v45 = sub_20A8CC530();
    uint64_t v47 = *(void *)(v44 + 16);
    uint64_t v48 = v25;
    uint64_t v49 = v43;
    uint64_t v100 = v40;
    double v105 = v41;
    if (v47 && (unint64_t v50 = sub_20A4D1B24(v45, v46), (v51 & 1) != 0))
    {
      uint64_t v52 = v108;
      uint64_t v53 = v110;
      sub_20A4610F0(*(void *)(v44 + 56) + *(void *)(v108 + 72) * v50, v110, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupKnobs);
      id v54 = *(void (***)(uint64_t, char *, uint64_t))(v52 + 56);
      uint64_t v55 = v53;
      uint64_t v56 = 0;
    }
    else
    {
      uint64_t v52 = v108;
      id v54 = *(void (***)(uint64_t, char *, uint64_t))(v108 + 56);
      uint64_t v53 = v110;
      uint64_t v55 = v110;
      uint64_t v56 = 1;
    }
    uint64_t v65 = v109;
    double v99 = v54;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v54)(v55, v56, 1, v109);
    swift_bridgeObjectRelease();
    uint64_t v66 = (char *)v114;
    sub_20A4610F0(v49, (uint64_t)v114, (uint64_t (*)(void))type metadata accessor for ForYouFeedKnobsConfig);
    uint64_t v67 = v111;
    id v68 = *(char **)(v111 + 16);
    uint64_t v69 = v106;
    *(void *)&long long v113 = v48;
    CGFloat v112 = v68;
    ((void (*)(char *, char *, uint64_t))v68)(v106, v48, v18);
    long long v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
    if (v70(v53, 1, v65) == 1)
    {
      uint64_t v71 = *(void *)&v66[*(int *)(v42 + 20)];
      uint64_t v72 = v101;
      sub_20A8CC550();
      uint64_t v74 = *v72;
      uint64_t v73 = v72[1];
      swift_bridgeObjectRetain();
      sub_20A461090((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupConfigData);
      if (*(void *)(v71 + 16))
      {
        unint64_t v75 = sub_20A4D1B24(v74, v73);
        uint64_t v76 = v98;
        if (v77)
        {
          sub_20A4610F0(*(void *)(v71 + 56) + *(void *)(v108 + 72) * v75, v98, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupKnobs);
          uint64_t v78 = 0;
        }
        else
        {
          uint64_t v78 = 1;
        }
        uint64_t v88 = v111;
      }
      else
      {
        uint64_t v78 = 1;
        uint64_t v88 = v111;
        uint64_t v76 = v98;
      }
      uint64_t v89 = v109;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v99)(v76, v78, 1, v109);
      swift_bridgeObjectRelease();
      if (v70(v76, 1, v89) == 1)
      {
        sub_20A460FF4(0, &qword_26AC6B030, MEMORY[0x263F59868]);
        uint64_t v91 = (uint64_t)v97;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v97, 1, 1, v90);
        CGFloat v92 = v69;
        unsigned __int8 v84 = v103;
        sub_20A566F00(v91, 0, 0, v103);
        uint64_t v83 = *(void (**)(char *, uint64_t))(v88 + 8);
        v83(v92, v18);
        sub_20A461090(v76, (uint64_t (*)(void))sub_20A460E04);
      }
      else
      {
        uint64_t v83 = *(void (**)(char *, uint64_t))(v88 + 8);
        v83(v69, v18);
        unsigned __int8 v84 = v103;
        sub_20A461158(v76, (uint64_t)v103, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupKnobs);
      }
      id v85 = v104;
      uint64_t v86 = (uint64_t)v102;
      double v87 = (void (*)(char *, void, uint64_t))v112;
      sub_20A461090(v110, (uint64_t (*)(void))sub_20A460E04);
    }
    else
    {
      uint64_t v83 = *(void (**)(char *, uint64_t))(v67 + 8);
      v83(v69, v18);
      unsigned __int8 v84 = v103;
      sub_20A461158(v53, (uint64_t)v103, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupKnobs);
      id v85 = v104;
      uint64_t v86 = (uint64_t)v102;
      double v87 = (void (*)(char *, void, uint64_t))v112;
    }
    sub_20A461090((uint64_t)v114, (uint64_t (*)(void))type metadata accessor for ForYouFeedKnobsConfig);
    CGFloat v93 = v107;
    uint64_t v94 = (char *)v113;
    v87(v107, v113, v18);
    sub_20A4610F0((uint64_t)v84, v86, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupKnobs);
    sub_20A4342F4((uint64_t)&v85[OBJC_IVAR____TtC8StocksUI29ForYouFeedGroupEmitterFactory_formatService], (uint64_t)&v118);
    type metadata accessor for CuratedForYouFeedGroupEmitter();
    uint64_t v95 = swift_allocObject();
    ((void (*)(uint64_t, char *, uint64_t))v105)(v95 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_config, v93, v18);
    sub_20A461158(v86, v95 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_knobs, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupKnobs);
    sub_20A42BEBC(&v118, v95 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_formatService);
    *(void *)&long long v118 = v95;
    sub_20A460FF4(0, (unint64_t *)&qword_26AC6AFA8, MEMORY[0x263F59818]);
    swift_allocObject();
    sub_20A4611C0(&qword_26AC82BC8, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupEmitter);
    uint64_t v64 = sub_20A8CC5F0();
    sub_20A461090((uint64_t)v84, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupKnobs);
    v83(v94, v18);
  }
  else
  {
    id v57 = v39;
    uint64_t v58 = v31;
    CGFloat v114 = *(char ***)(v32 + 32);
    ((void (*)(char *, char *, uint64_t))v114)(v36, v57, v31);
    __swift_project_boxed_opaque_existential_1(v2 + 8, v2[11]);
    if (sub_20A8C3800())
    {
      uint64_t v59 = v2[2];
      sub_20A4342F4((uint64_t)(v3 + 3), (uint64_t)&v118);
      uint64_t v60 = v32;
      uint64_t v61 = v104;
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v104, v36, v58);
      sub_20A4342F4((uint64_t)(v3 + 18), (uint64_t)&v117);
      BOOL v62 = (void (*)(void, void, void))v105;
      sub_20A4610F0((uint64_t)v112, (uint64_t)v105, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroupKnobs);
      sub_20A4342F4((uint64_t)(v3 + 23), (uint64_t)v116);
      long long v113 = *(_OWORD *)((char *)v3 + OBJC_IVAR____TtC8StocksUI29ForYouFeedGroupEmitterFactory_newsUserProfileProvider);
      sub_20A4342F4((uint64_t)v3 + OBJC_IVAR____TtC8StocksUI29ForYouFeedGroupEmitterFactory_formatService, (uint64_t)v115);
      type metadata accessor for StockForYouFeedGroupEmitter();
      uint64_t v63 = swift_allocObject();
      *(void *)(v63 + 16) = v59;
      sub_20A42BEBC(&v118, v63 + 24);
      ((void (*)(uint64_t, char *, uint64_t))v114)(v63 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_config, v61, v58);
      sub_20A42BEBC(&v117, v63 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_headlineViewingHistory);
      sub_20A461158((uint64_t)v62, v63 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_knobs, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroupKnobs);
      sub_20A42BEBC(v116, v63 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_newsFeedService);
      *(_OWORD *)(v63 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_newsUserProfileProvider) = v113;
      sub_20A42BEBC(v115, v63 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_formatService);
      *(void *)&long long v118 = v63;
      sub_20A460FF4(0, (unint64_t *)&qword_26AC6AFA8, MEMORY[0x263F59818]);
      swift_allocObject();
      sub_20A4611C0((unint64_t *)&unk_26AC82BB0, (void (*)(uint64_t))type metadata accessor for StockForYouFeedGroupEmitter);
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      uint64_t v64 = sub_20A8CC5F0();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v36, v58);
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(v2 + 3, v2[6]);
      sub_20A8C3AC0();
      uint64_t v79 = v32;
      uint64_t v80 = v104;
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v104, v36, v58);
      id v81 = (void (*)(void, void, void))v105;
      sub_20A4610F0((uint64_t)v112, (uint64_t)v105, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroupKnobs);
      sub_20A4342F4((uint64_t)v2 + OBJC_IVAR____TtC8StocksUI29ForYouFeedGroupEmitterFactory_stockFeedService, (uint64_t)&v118);
      type metadata accessor for YahooStockForYouFeedGroupEmitter();
      uint64_t v82 = swift_allocObject();
      v99[4](v82 + OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_appConfiguration, v27, v100);
      ((void (*)(uint64_t, char *, uint64_t))v114)(v82 + OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_config, v80, v58);
      sub_20A461158((uint64_t)v81, v82 + OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_knobs, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroupKnobs);
      sub_20A42BEBC(&v118, v82 + OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_stockFeedService);
      *(void *)&long long v118 = v82;
      sub_20A460FF4(0, (unint64_t *)&qword_26AC6AFA8, MEMORY[0x263F59818]);
      swift_allocObject();
      sub_20A4611C0(&qword_26763ADF8, (void (*)(uint64_t))type metadata accessor for YahooStockForYouFeedGroupEmitter);
      uint64_t v64 = sub_20A8CC5F0();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v36, v58);
    }
  }
  return v64;
}

uint64_t sub_20A460AD8()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI29ForYouFeedGroupEmitterFactory_networkProxy;
  uint64_t v2 = sub_20A8C5B40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI29ForYouFeedGroupEmitterFactory_stockFeedService);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI29ForYouFeedGroupEmitterFactory_formatService);
  return v0;
}

uint64_t sub_20A460B9C()
{
  sub_20A460AD8();

  return swift_deallocClassInstance();
}

uint64_t sub_20A460BF4()
{
  return type metadata accessor for ForYouFeedGroupEmitterFactory();
}

uint64_t type metadata accessor for ForYouFeedGroupEmitterFactory()
{
  uint64_t result = qword_26AC79190;
  if (!qword_26AC79190) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A460C48()
{
  uint64_t result = sub_20A8C5B40();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_20A460D04()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))();
}

uint64_t sub_20A460D48()
{
  return sub_20A4611C0(&qword_26AC74890, (void (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig);
}

void sub_20A460D90()
{
  if (!qword_26AC6B038)
  {
    sub_20A460FF4(255, &qword_26AC6B030, MEMORY[0x263F59868]);
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6B038);
    }
  }
}

void sub_20A460E04()
{
  if (!qword_26AC775B0)
  {
    type metadata accessor for CuratedForYouFeedGroupKnobs();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC775B0);
    }
  }
}

void sub_20A460E5C()
{
  if (!qword_26AC6AF60)
  {
    type metadata accessor for CuratedForYouFeedGroupConfigData();
    sub_20A4611C0(&qword_26AC7ACE8, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupConfigData);
    sub_20A4611C0(&qword_26AC7ACE0, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupConfigData);
    unint64_t v0 = sub_20A8CC590();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6AF60);
    }
  }
}

void sub_20A460F28()
{
  if (!qword_26AC6AF50)
  {
    type metadata accessor for StockForYouFeedGroupConfigData();
    sub_20A4611C0(&qword_26AC7A030, (void (*)(uint64_t))type metadata accessor for StockForYouFeedGroupConfigData);
    sub_20A4611C0(&qword_26AC7A028, (void (*)(uint64_t))type metadata accessor for StockForYouFeedGroupConfigData);
    unint64_t v0 = sub_20A8CC590();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6AF50);
    }
  }
}

void sub_20A460FF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for ForYouFeedServiceConfig();
    uint64_t v7 = sub_20A4611C0(&qword_26AC74890, (void (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A461090(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A4610F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A461158(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A4611C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A461208@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_20A4342F4((uint64_t)a1, (uint64_t)v12);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, (unint64_t *)&qword_26AC6AE70);
    uint64_t result = sub_20A8C5BB0();
    if (v11)
    {
      uint64_t v6 = (objc_class *)type metadata accessor for StockSearchModule();
      uint64_t v7 = (char *)objc_allocWithZone(v6);
      sub_20A4342F4((uint64_t)v12, (uint64_t)&v7[OBJC_IVAR____TtC8StocksUI17StockSearchModule_resolver]);
      *(void *)&v7[OBJC_IVAR____TtC8StocksUI17StockSearchModule_tracker] = v5;
      sub_20A4342F4((uint64_t)v10, (uint64_t)&v7[OBJC_IVAR____TtC8StocksUI17StockSearchModule_contextBuilder]);
      v9.receiver = v7;
      v9.super_class = v6;
      id v8 = objc_msgSendSuper2(&v9, sel_init);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      a2[3] = v6;
      a2[4] = &protocol witness table for StockSearchModule;
      *a2 = v8;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A461354(uint64_t a1, char a2)
{
  type metadata accessor for StockSearchViewController(0);
  sub_20A8C6290();
  swift_release();
  sub_20A4301D4(0, &qword_26AC73650);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC73648);
  sub_20A8C62A0();
  swift_release();
  type metadata accessor for StockSearchRouter();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  type metadata accessor for StockSearchModalRouter();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  sub_20A4301D4(0, qword_26AC77FD0);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC768F0);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC77128);
  sub_20A8C62A0();
  swift_release();
  type metadata accessor for StockSearchBlueprintModifierFactory();
  sub_20A8C6290();
  swift_release();
  sub_20A467890();
  sub_20A8C6290();
  swift_release();
  sub_20A467950();
  *(unsigned char *)(swift_allocObject() + 16) = a2;
  sub_20A8C6290();
  swift_release();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  sub_20A468610();
  sub_20A8C6290();
  swift_release();
  sub_20A467A10();
  *(unsigned char *)(swift_allocObject() + 16) = a2;
  sub_20A8C6290();
  swift_release();
  swift_release();
  sub_20A467FE8();
  sub_20A8C6290();
  swift_release();
  type metadata accessor for StockSearchBlueprintLayoutBuilder();
  sub_20A8C6290();
  swift_release();
  sub_20A468758();
  sub_20A8C6290();
  swift_release();
  sub_20A468864();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F910);
  sub_20A8C6290();
  swift_release();
  sub_20A468978();
  sub_20A8C6290();
  swift_release();
  sub_20A4301D4(0, &qword_26AC6AA60);
  sub_20A8C62A0();
  swift_release();
  sub_20A468A38();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  sub_20A46A248(0, &qword_26AC6AA70, (uint64_t (*)(uint64_t))sub_20A467890, sub_20A4680DC, MEMORY[0x263F7DFD0]);
  sub_20A8C6290();
  swift_release();
  sub_20A467B24();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  sub_20A8CAC30();
  sub_20A8C6290();
  swift_release();
  sub_20A4301D4(0, &qword_26AC6A8A0);
  sub_20A8C62A0();
  sub_20A8CA7F0();
  sub_20A8C5990();
  swift_release();
  swift_release();
  sub_20A467CAC();
  *(unsigned char *)(swift_allocObject() + 16) = a2;
  sub_20A8C6290();
  swift_release();
  swift_release();
  sub_20A468114();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  sub_20A467E38();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  sub_20A468388();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  sub_20A4684E4();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  type metadata accessor for StockSearchBlueprintViewCellProvider();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  type metadata accessor for StockSearchBlueprintViewSupplementaryViewProvider();
  sub_20A8C6290();
  swift_release();
  sub_20A46A248(0, (unint64_t *)&unk_26AC6A5E0, (uint64_t (*)(uint64_t))sub_20A467890, sub_20A4680DC, MEMORY[0x263F7DBD0]);
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  sub_20A8C8D70();
  sub_20A8C6290();
  swift_release();
  sub_20A468B30();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  sub_20A4301D4(0, &qword_26AC6A970);
  sub_20A8C62A0();
  swift_release();
  sub_20A8C9F60();
  sub_20A8C6290();
  swift_release();
  sub_20A4301D4(0, (unint64_t *)&unk_26AC7AA58);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC798D0);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC7F008);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC7E418);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC7DD10);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, (unint64_t *)&unk_26AC7F238);
  sub_20A8C62A0();
  swift_release();
  sub_20A468C24();
  sub_20A8C6290();

  return swift_release();
}

uint64_t sub_20A4621C0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC73650);
  uint64_t result = sub_20A8C5BB0();
  if (!v34)
  {
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC77FD0);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v3 = v31;
  if (!v31)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A468864();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v4 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A468B30();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4699B4();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6A500);
  uint64_t result = sub_20A8C5BB0();
  if (!v30)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v24 = v32;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  if (!v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v7 = sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v26 = v7;
    long long v27 = (_UNKNOWN **)sub_20A46A300((unint64_t *)&qword_26AC69370, 255, MEMORY[0x263F24E68]);
    v25[0] = v8;
    sub_20A8C8A10();
    swift_allocObject();
    uint64_t v9 = sub_20A8C89F0();
    uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v33, v34);
    double v11 = MEMORY[0x270FA5388](v10);
    uint64_t v13 = (uint64_t *)((char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
    uint64_t v15 = *v13;
    uint64_t v26 = type metadata accessor for StockSearchStyler();
    long long v27 = &off_26BE69280;
    v25[0] = v15;
    uint64_t v16 = (char *)objc_allocWithZone((Class)type metadata accessor for StockSearchViewController(0));
    uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
    double v18 = MEMORY[0x270FA5388](v17);
    uint64_t v20 = (uint64_t *)((char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v21 + 16))(v20, v18);
    uint64_t v22 = sub_20A469A9C(*v20, v3, v24, v4, v5, v6, (uint64_t)v29, v9, v16);
    swift_unknownObjectRelease();

    swift_release();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    return (uint64_t)v22;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_20A462698@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A466AAC(a1, (uint64_t (*)(void))type metadata accessor for StockSearchStyler, (uint64_t (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_20A431A50, (uint64_t)&off_26BE69280, a2);
}

uint64_t sub_20A4626CC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v3 = type metadata accessor for StockSearchRouter();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    a2[3] = v3;
    a2[4] = (uint64_t)&off_26BE66CA0;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A462740(void *a1)
{
  sub_20A4342F4((uint64_t)a1, (uint64_t)v6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A46A248(0, (unint64_t *)&qword_26AC69E60, type metadata accessor for StocksActivity, sub_20A46A2C8, MEMORY[0x263F7D3E8]);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A8C4990();
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      uint64_t v4 = result;
      type metadata accessor for StockSearchRouter();
      uint64_t v5 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_20A42BEBC(v6, v5 + 24);
      *(void *)(v5 + 64) = v3;
      *(void *)(v5 + 72) = v4;
      return v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_20A46286C(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StockSearchViewController(0);
  id v2 = (id)sub_20A8C5BA0();
  swift_unknownObjectWeakAssign();
}

uint64_t sub_20A4628EC()
{
  type metadata accessor for StockSearchModalRouter();
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  return v0;
}

uint64_t sub_20A462930(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StockSearchViewController(0);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v4 = (void *)result;
    swift_unknownObjectWeakAssign();

    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_20A46A248(0, (unint64_t *)&qword_26AC69E60, type metadata accessor for StocksActivity, sub_20A46A2C8, MEMORY[0x263F7D3E8]);
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      type metadata accessor for StockSearchModalRouter();
      sub_20A46A300((unint64_t *)&unk_26763AE00, 255, (void (*)(uint64_t))type metadata accessor for StockSearchModalRouter);
      sub_20A8C8580();
      swift_release();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A462A98@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC768F0);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v5 = v14;
  if (v14)
  {
    uint64_t v6 = v15;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC73648);
    uint64_t result = sub_20A8C5BB0();
    if (v13)
    {
      type metadata accessor for StockSearchEventHandler();
      uint64_t v7 = (void *)swift_allocObject();
      v7[3] = 0;
      swift_unknownObjectWeakInit();
      void v7[4] = v5;
      v7[5] = v6;
      sub_20A4342F4((uint64_t)v12, (uint64_t)(v7 + 6));
      uint64_t v8 = v7[5];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v10 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v8 + 16);
      swift_unknownObjectRetain();
      uint64_t v11 = swift_retain();
      v10(v11, &off_26BE6AF38, ObjectType, v8);
      swift_unknownObjectRelease();
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      *a2 = v7;
      a2[1] = &off_26BE6AF70;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A462C14@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC77128);
  uint64_t result = sub_20A8C5BB0();
  if (!v17)
  {
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A467950();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StockSearchBlueprintModifierFactory();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4699B4();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v7 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A468C24();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v8 = (void *)result;
  uint64_t v12 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v9 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A46A028(0, (unint64_t *)&qword_26AC69640, (uint64_t (*)(uint64_t))type metadata accessor for StockListSelectionModel, MEMORY[0x263F7CE10]);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v10 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E50);
  uint64_t result = sub_20A8C5BB0();
  if (!v16)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  if (v13)
  {
    sub_20A46A248(0, &qword_26AC73638, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchBlueprintModifierFactory, sub_20A469A64, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StockSearchInteractor);
    swift_allocObject();
    uint64_t v11 = sub_20A469D94(v17, v18, v5, v6, v7, v8, v9, v10, (uint64_t)v15, v13, v14);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    uint64_t result = swift_unknownObjectRelease();
    *uint64_t v12 = v11;
    v12[1] = &off_26BE68150;
    return result;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_20A462FC0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC68E00);
  uint64_t result = sub_20A8C5BB0();
  if (!v10)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC68DF8);
  uint64_t result = sub_20A8C5BB0();
  if (!v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E50);
  uint64_t result = sub_20A8C5BB0();
  if (v6)
  {
    type metadata accessor for StockSearchDataManager();
    swift_allocObject();
    uint64_t result = (uint64_t)sub_20A86EFEC((uint64_t)v9, (uint64_t)v7, (uint64_t)v5);
    *a2 = result;
    a2[1] = (uint64_t)&off_26BE71DC0;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A46311C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC68E00);
  uint64_t result = sub_20A8C5BB0();
  if (!v9)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC68E60);
  uint64_t result = sub_20A8C5BB0();
  if (!v7)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC68DF8);
  uint64_t result = sub_20A8C5BB0();
  if (v5)
  {
    type metadata accessor for StockSearchBlueprintModifierFactory();
    uint64_t v3 = swift_allocObject();
    sub_20A42BEBC(&v8, v3 + 16);
    sub_20A42BEBC(&v6, v3 + 56);
    sub_20A42BEBC(&v4, v3 + 96);
    return v3;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A463278(uint64_t a1)
{
  return sub_20A464B1C(a1, (void (*)(void))sub_20A467890, MEMORY[0x263F7D548]);
}

uint64_t sub_20A4632A4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A467890();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A467A10();
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      sub_20A467950();
      swift_allocObject();
      return sub_20A8C8BC0();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A463390(uint64_t a1, void *a2)
{
  sub_20A469834();
  swift_allocObject();
  sub_20A8CA8D0();
  sub_20A4698F4();
  swift_allocObject();
  sub_20A46A300(&qword_26AC6A6B0, 255, (void (*)(uint64_t))sub_20A469834);
  sub_20A8CA330();
  sub_20A8C8BF0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A468610();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_allocObject();
    sub_20A46A300(&qword_26AC6A9C0, 255, (void (*)(uint64_t))sub_20A468610);
    sub_20A8CA330();
    sub_20A8C8BF0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A463514(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A467FE8();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6A8A0);
  uint64_t result = sub_20A8C5B70();
  if (!v3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StockSearchBlueprintLayoutBuilder();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A468758();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8CAC30();
  uint64_t result = sub_20A8C5B60();
  if (result)
  {
    sub_20A468610();
    swift_allocObject();
    return sub_20A8CB1E0();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20A463704(void *a1, char a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (a2)
  {
    sub_20A468114();
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_20A467B24();
      uint64_t result = sub_20A8C5BA0();
      if (result)
      {
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        sub_20A4301D4(0, &qword_26AC6AAF0);
        uint64_t result = sub_20A8C5BB0();
        if (v5)
        {
          sub_20A467A10();
          swift_allocObject();
          return sub_20A8C8E80();
        }
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_20A467B24();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6AAF0);
  uint64_t result = sub_20A8C5BB0();
  if (!v5)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  sub_20A467A10();
  swift_allocObject();
  return sub_20A8C8E70();
}

uint64_t sub_20A463900(uint64_t a1)
{
  return sub_20A464B1C(a1, (void (*)(void))sub_20A467FE8, MEMORY[0x263F7D8F8]);
}

uint64_t sub_20A46392C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7F008);
  uint64_t result = sub_20A8C5BB0();
  if (v38)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, (unint64_t *)&unk_26AC7F238);
    uint64_t result = sub_20A8C5BB0();
    if (v36)
    {
      uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v38);
      long long v30[2] = v30;
      double v4 = MEMORY[0x270FA5388](v3);
      long long v6 = (void *)((char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v7 + 16))(v6, v4);
      uint64_t v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
      v30[1] = v30;
      double v9 = MEMORY[0x270FA5388](v8);
      uint64_t v11 = (void *)((char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v12 + 16))(v11, v9);
      uint64_t v13 = *v6;
      uint64_t v14 = *v11;
      uint64_t v15 = type metadata accessor for StockSearchCellViewLayoutAttributesFactory();
      v34[3] = v15;
      v34[4] = &off_26BE61B70;
      v34[0] = v13;
      uint64_t v16 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributesFactory();
      uint64_t v32 = v16;
      uint64_t v33 = &off_26BE71320;
      v31[0] = v14;
      type metadata accessor for StockSearchBlueprintLayoutBuilder();
      uint64_t v17 = (void *)swift_allocObject();
      uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v15);
      double v19 = MEMORY[0x270FA5388](v18);
      uint64_t v21 = (void *)((char *)v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v22 + 16))(v21, v19);
      uint64_t v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
      double v24 = MEMORY[0x270FA5388](v23);
      uint64_t v26 = (void *)((char *)v30 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v27 + 16))(v26, v24);
      uint64_t v28 = *v21;
      uint64_t v29 = *v26;
      v17[5] = v15;
      v17[6] = &off_26BE61B70;
      _OWORD v17[2] = v28;
      v17[10] = v16;
      v17[11] = &off_26BE71320;
      v17[7] = v29;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      return (uint64_t)v17;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A463D38(uint64_t a1)
{
  return sub_20A464B1C(a1, (void (*)(void))sub_20A468758, MEMORY[0x263F7DDA0]);
}

uint64_t sub_20A463D64(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A467890();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A467B24();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6A8A0);
  uint64_t result = sub_20A8C5B70();
  if (!v7)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6AAF0);
  uint64_t result = sub_20A8C5BB0();
  if (!v6)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A46A248(0, (unint64_t *)&unk_26AC6A5E0, (uint64_t (*)(uint64_t))sub_20A467890, sub_20A4680DC, MEMORY[0x263F7DBD0]);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C8D70();
  uint64_t result = sub_20A8C5B60();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  if (!v5)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A46A300((unint64_t *)&qword_26AC69370, 255, MEMORY[0x263F24E68]);
    sub_20A468864();
    id v4 = objc_allocWithZone(v3);
    return sub_20A8C9C70();
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_20A4640C0(uint64_t a1, uint64_t a2)
{
  return sub_20A464E20(a1, a2, MEMORY[0x263F7DC00], MEMORY[0x263F7DBF8], MEMORY[0x263F7D970]);
}

uint64_t sub_20A4640F4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A468A38();
  uint64_t result = sub_20A8C5B60();
  if (result)
  {
    id v2 = (void *)result;
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82528]), sel_initWithFrame_collectionViewLayout_, result, 0.0, 0.0, 0.0, 0.0);

    return (uint64_t)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A4641A0(void *a1)
{
  uint64_t v21 = sub_20A8CBDD0();
  uint64_t v2 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  id v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8CBDC0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8CBE20();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v20 - v15;
  (*(void (**)(char *, void, uint64_t, double))(v6 + 104))(v8, *MEMORY[0x263F81FD0], v5, v14);
  sub_20A8CBDE0();
  id v17 = objc_msgSend(self, sel_clearColor);
  sub_20A8CBE00();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F82000], v21);
  sub_20A8CBDF0();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v16, v9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A46A248(0, &qword_26AC6AA70, (uint64_t (*)(uint64_t))sub_20A467890, sub_20A4680DC, MEMORY[0x263F7DFD0]);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A468978();
    uint64_t v19 = sub_20A8CB310();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    return v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A4644D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for StockSearchCompositionalLayoutOptionsProvider();
  uint64_t v3 = swift_allocObject();
  a1[3] = v2;
  uint64_t result = sub_20A46A300(&qword_26AC7EE08, 255, (void (*)(uint64_t))type metadata accessor for StockSearchCompositionalLayoutOptionsProvider);
  a1[4] = result;
  *a1 = v3;
  return result;
}

uint64_t sub_20A464558(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8CAC30();
  uint64_t result = sub_20A8C5B60();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A468978();
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      sub_20A468A38();
      id v4 = objc_allocWithZone(v3);
      return sub_20A8CB280();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_20A464638(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F910);
  uint64_t v3 = sub_20A8C5B60();
  if (v3)
  {
    id v4 = (void *)v3;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_20A4301D4(0, &qword_26AC6A8A0);
    sub_20A8C5B70();
    if (v5)
    {
      sub_20A8CB290();
      swift_unknownObjectRelease();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_20A464764(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A467890();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    type metadata accessor for StockSearchBlueprintViewCellProvider();
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      sub_20A46A300(&qword_26AC7D408, 255, (void (*)(uint64_t))type metadata accessor for StockSearchBlueprintViewCellProvider);
      sub_20A46A248(0, &qword_26AC6AA70, (uint64_t (*)(uint64_t))sub_20A467890, sub_20A4680DC, MEMORY[0x263F7DFD0]);
      swift_allocObject();
      return sub_20A8CB340();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A4648B8(void *a1)
{
  uint64_t v2 = sub_20A8C93C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F910);
  uint64_t result = sub_20A8C5B60();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A467CAC();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A468388();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4684E4();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F7D778], v2);
    sub_20A467B24();
    swift_allocObject();
    return sub_20A8C94A0();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_20A464AD8(uint64_t a1, void *a2)
{
  return sub_20A4650AC(a1, a2, MEMORY[0x263F7D788]);
}

uint64_t sub_20A464AF0(uint64_t a1)
{
  return sub_20A464B1C(a1, MEMORY[0x263F7DE58], MEMORY[0x263F7DE50]);
}

uint64_t sub_20A464B1C(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_20A464B60@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A467B24();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = (void *)sub_20A8C94C0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6A0A0);
  uint64_t result = sub_20A8C5BB0();
  if (!v14)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_20A42BEBC(&v13, (uint64_t)v15);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A469790();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6AA60);
  uint64_t result = sub_20A8C5B70();
  if (v12)
  {
    sub_20A8CA7F0();
    sub_20A42BEBC(&v11, (uint64_t)&v13);
    sub_20A4342F4((uint64_t)v15, (uint64_t)v10);
    uint64_t v6 = swift_allocObject();
    sub_20A42BEBC(v10, v6 + 16);
    *(void *)(v6 + 56) = v5;
    id v7 = v5;
    uint64_t v8 = sub_20A8CA7D0();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    uint64_t v9 = MEMORY[0x263F7DD30];
    *a2 = v8;
    a2[1] = v9;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

id sub_20A464D74(void *a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  id result = (id)sub_20A8C8DE0();
  if (!result)
  {
    return a2;
  }
  return result;
}

uint64_t sub_20A464DEC(uint64_t a1, uint64_t a2)
{
  return sub_20A464E20(a1, a2, MEMORY[0x263F7D840], MEMORY[0x263F7D838], MEMORY[0x263F7DD28]);
}

uint64_t sub_20A464E20(uint64_t a1, uint64_t a2, void (*a3)(void), unsigned int *a4, uint64_t (*a5)(char *))
{
  a3(0);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v11 - v7;
  (*(void (**)(char *, void))(v9 + 104))((char *)&v11 - v7, *a4);
  return a5(v8);
}

uint64_t sub_20A464EFC(void *a1, char a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (a2)
  {
    sub_20A468114();
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      sub_20A467CAC();
      swift_allocObject();
      return sub_20A8CB1C0();
    }
    __break(1u);
  }
  else
  {
    sub_20A467E38();
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      sub_20A467CAC();
      swift_allocObject();
      return sub_20A8CB1B0();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_20A464FC0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A467890();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A467E38();
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      sub_20A468114();
      swift_allocObject();
      return sub_20A8CB3F0();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A465094(uint64_t a1, void *a2)
{
  return sub_20A4650AC(a1, a2, MEMORY[0x263F7E000]);
}

uint64_t sub_20A4650AC(uint64_t a1, void *a2, uint64_t (*a3)(void))
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StockSearchViewController(0);
  uint64_t result = sub_20A8C5BA0();
  if (result) {
    return a3();
  }
  __break(1u);
  return result;
}

uint64_t sub_20A465120(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A467890();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A467FE8();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StockSearchBlueprintViewCellProvider();
  sub_20A4342F4((uint64_t)a1, (uint64_t)v8);
  uint64_t v4 = swift_allocObject();
  sub_20A42BEBC(v8, v4 + 16);
  uint64_t v5 = sub_20A8C5B80();
  uint64_t result = swift_release();
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StockSearchBlueprintViewSupplementaryViewProvider();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    *(void *)&v8[0] = v3;
    sub_20A467E38();
    id v7 = objc_allocWithZone(v6);
    return sub_20A8CAB90();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_20A4652BC(void *a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F910);
  uint64_t result = sub_20A8C5B60();
  if (result)
  {
    uint64_t v4 = (void *)result;
    sub_20A42CFF0(0, &qword_26AC7F8C0);
    sub_20A8CE370();
    sub_20A8C5A60();

    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A4653C0(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A4301D4(0, &qword_26AC6A970);
  uint64_t result = sub_20A8C5B70();
  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(v3, v4);
    sub_20A8CB130();
    sub_20A8CABA0();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A465498(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A467890();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A467FE8();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A46A248(0, (unint64_t *)&unk_26AC6A5E0, (uint64_t (*)(uint64_t))sub_20A467890, sub_20A4680DC, MEMORY[0x263F7DBD0]);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  if (!v6)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_20A46A300((unint64_t *)&qword_26AC69370, 255, MEMORY[0x263F24E68]);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6A500);
  uint64_t result = sub_20A8C5BB0();
  if (v5)
  {
    sub_20A468388();
    id v4 = objc_allocWithZone(v3);
    return sub_20A8CA920();
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_20A465730(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A8C8D70();
  sub_20A8C5B60();
  sub_20A8CA940();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A468B30();
  if (sub_20A8C5BA0()) {
    sub_20A46A300(&qword_26AC6A7B8, 255, (void (*)(uint64_t))sub_20A468B30);
  }
  sub_20A8CA950();
  Class v3 = (void *)sub_20A8CA8F0();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StockSearchViewController(0);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v5 = (void *)result;
    sub_20A8CA590();

    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_20A468864();
    sub_20A8C5BA0();
    return sub_20A8CA900();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A4658CC(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A467890();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A467FE8();
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      sub_20A4684E4();
      id v4 = objc_allocWithZone(v3);
      return sub_20A8CAFE0();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_20A46598C(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StockSearchViewController(0);
  if (!sub_20A8C5BA0())
  {
    __break(1u);
    goto LABEL_7;
  }
  MEMORY[0x210523310]();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F910);
  uint64_t v3 = sub_20A8C5B60();
  if (!v3)
  {
LABEL_7:
    __break(1u);
    return;
  }
  id v4 = (id)v3;
  sub_20A8CB000();
  sub_20A8CAFD0();
}

uint64_t sub_20A465A8C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  if (!v10)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC7AA58);
  uint64_t result = sub_20A8C5BB0();
  if (!v7)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v3 = result;
    type metadata accessor for StockSearchBlueprintViewCellProvider();
    id v4 = (void *)swift_allocObject();
    v4[3] = 0;
    swift_unknownObjectWeakInit();
    sub_20A42BEBC(&v9, (uint64_t)(v4 + 4));
    v4[9] = v7;
    v4[10] = v8;
    v4[11] = v5;
    v4[12] = v6;
    v4[13] = v3;
    return (uint64_t)v4;
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_20A465C3C(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StockSearchViewController(0);
  id v4 = (id)sub_20A8C5BA0();
  uint64_t v3 = &off_26BE64A08;
  if (!v4) {
    uint64_t v3 = 0;
  }
  *(void *)(v2 + 24) = v3;
  swift_unknownObjectWeakAssign();
}

uint64_t sub_20A465CD0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  if (!v26)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7E418);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v3 = v23;
  if (!v23)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = v24;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7C5C0);
  uint64_t result = sub_20A8C5BB0();
  if (v22)
  {
    uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
    double v6 = MEMORY[0x270FA5388](v5);
    uint64_t v8 = (void *)((char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
    uint64_t v10 = *v8;
    uint64_t v11 = type metadata accessor for WatchlistSwitcherMenuProvider();
    v20[3] = v11;
    v20[4] = &off_26BE676D0;
    v20[0] = v10;
    type metadata accessor for StockSearchBlueprintViewSupplementaryViewProvider();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v11);
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = (void *)((char *)&v20[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    v12[12] = v11;
    v12[13] = &off_26BE676D0;
    v12[9] = v18;
    sub_20A42BEBC(&v25, (uint64_t)(v12 + 2));
    v12[7] = v3;
    v12[8] = v4;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    return (uint64_t)v12;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A465FA0(void *a1)
{
  uint64_t v2 = sub_20A8CABC0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void *)((char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_20A8CABE0();
  MEMORY[0x270FA5388](v6 - 8);
  sub_20A46A248(0, &qword_26AC6A5B0, (uint64_t (*)(uint64_t))sub_20A467890, sub_20A4680DC, MEMORY[0x263F7DBC8]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A467890();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v13 = result;
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F7DBC0], v8);
    *uint64_t v5 = 0;
    (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F7DE00], v2);
    sub_20A8CABD0();
    v14[1] = v13;
    sub_20A46A248(0, (unint64_t *)&unk_26AC6A5E0, (uint64_t (*)(uint64_t))sub_20A467890, sub_20A4680DC, MEMORY[0x263F7DBD0]);
    swift_allocObject();
    return sub_20A8CA290();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A466280(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A467FE8();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A46A300(&qword_26AC6A3B0, 255, (void (*)(uint64_t))sub_20A467FE8);
    return sub_20A8CA280();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A466344(void *a1)
{
  sub_20A4696E4();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_20A8D4540;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A468B30();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_20A46A300(&qword_26AC6A7B0, 255, (void (*)(uint64_t))sub_20A468B30);
    *(void *)(v2 + 32) = v4;
    *(void *)(v2 + 40) = v5;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A8C9F60();
    uint64_t result = sub_20A8C5B60();
    if (result)
    {
      uint64_t v6 = MEMORY[0x263F7DA90];
      *(void *)(v2 + 48) = result;
      *(void *)(v2 + 56) = v6;
      sub_20A8C8D70();
      swift_allocObject();
      return sub_20A8C8D60();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A466488(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A467B24();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A467890();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  if (!v3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A46A300((unint64_t *)&qword_26AC69370, 255, MEMORY[0x263F24E68]);
    sub_20A468B30();
    swift_allocObject();
    return sub_20A8CAB20();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_20A466638(uint64_t a1, void *a2)
{
  if (sub_20A8C5BA0()) {
    sub_20A46A300(&qword_26AC6A498, 255, (void (*)(uint64_t))sub_20A468864);
  }
  return sub_20A8CAB30();
}

uint64_t sub_20A4666E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A468864();
  uint64_t v4 = v3;
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v6 = result;
    a2[3] = v4;
    uint64_t result = sub_20A46A300(&qword_26AC6A4A0, 255, (void (*)(uint64_t))sub_20A468864);
    a2[4] = result;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A466790(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A467B24();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A8C94C0();
    swift_release();
    sub_20A8C9F60();
    swift_allocObject();
    return sub_20A8C9F50();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A466818@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC798D0);
  uint64_t result = sub_20A8C5BB0();
  if (v24)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for StockSearchCellViewStyler();
    v22[3] = v10;
    v22[4] = &off_26BE64068;
    v22[0] = v9;
    type metadata accessor for StockSearchCellViewRenderer();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v10);
    double v13 = MEMORY[0x270FA5388](v12);
    uint64_t v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
    uint64_t v17 = *v15;
    uint64_t v20 = v10;
    uint64_t v21 = &off_26BE64068;
    *(void *)&long long v19 = v17;
    sub_20A42BEBC(&v19, v11 + 16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    uint64_t result = sub_20A46A300(&qword_26AC77F28, 255, (void (*)(uint64_t))type metadata accessor for StockSearchCellViewRenderer);
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A466A78@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A466AAC(a1, (uint64_t (*)(void))type metadata accessor for StockSearchCellViewStyler, (uint64_t (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_20A431A50, (uint64_t)&off_26BE64068, a2);
}

uint64_t sub_20A466AAC@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(unsigned char *, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v10 = v21;
  if (v21)
  {
    uint64_t v11 = a2(0);
    uint64_t v12 = v22;
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = &v20[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = a3(v16, v11, v10, v12);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a5[3] = v11;
    a5[4] = a4;
    *a5 = v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A466C20@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC798D0);
  uint64_t result = sub_20A8C5BB0();
  if (v21)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for StockSearchCellViewStyler();
    v19[3] = v10;
    v19[4] = &off_26BE64068;
    v19[0] = v9;
    uint64_t v11 = type metadata accessor for StockSearchCellViewLayoutAttributesFactory();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    v12[5] = v10;
    void v12[6] = &off_26BE64068;
    v12[2] = v18;
    v12[7] = MEMORY[0x263F8EE80];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_26BE61B70;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A466E58@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7DD10);
  uint64_t result = sub_20A8C5BB0();
  if (v24)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for StockSearchSectionHeaderViewStyler();
    v22[3] = v10;
    v22[4] = &off_26BE6E9C8;
    v22[0] = v9;
    type metadata accessor for StockSearchSectionHeaderViewRenderer();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v10);
    double v13 = MEMORY[0x270FA5388](v12);
    uint64_t v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
    uint64_t v17 = *v15;
    uint64_t v20 = v10;
    uint64_t v21 = &off_26BE6E9C8;
    *(void *)&long long v19 = v17;
    sub_20A42BEBC(&v19, v11 + 16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    uint64_t result = sub_20A46A300(&qword_26AC7D4E0, 255, (void (*)(uint64_t))type metadata accessor for StockSearchSectionHeaderViewRenderer);
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A4670B8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  if (!v35)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC71788);
  uint64_t result = sub_20A8C5BB0();
  if (!v32)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v28 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC782B8);
  uint64_t result = sub_20A8C5BB0();
  if (v30)
  {
    uint64_t v5 = type metadata accessor for StockSearchSectionHeaderViewStyler();
    uint64_t v6 = v35;
    v27[0] = v36;
    uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
    v27[1] = (uint64_t)v27;
    double v8 = MEMORY[0x270FA5388](v7);
    uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v11 + 16))(v10, v8);
    uint64_t v13 = v32;
    uint64_t v12 = v33;
    uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
    double v15 = MEMORY[0x270FA5388](v14);
    uint64_t v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v18 + 16))(v17, v15);
    uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
    double v20 = MEMORY[0x270FA5388](v19);
    uint64_t v22 = (char *)v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v23 + 16))(v22, v20);
    uint64_t v24 = type metadata accessor for WatchlistSwitcherStyler();
    long long v25 = sub_20A79BF38((uint64_t)v10, (uint64_t)v17, (uint64_t)v22, v5, v6, v24, v13, v27[0], (uint64_t)&off_26BE5FBF8, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    uint64_t v26 = v28;
    v28[3] = v5;
    v26[4] = &off_26BE6E9C8;
    void *v26 = v25;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A467454@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7ED48);
  uint64_t result = sub_20A8C5BB0();
  if (v21)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for WatchlistSwitcherLayoutAttributesFactory();
    v19[3] = v10;
    v19[4] = &off_26BE69D90;
    v19[0] = v9;
    uint64_t v11 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributesFactory();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    v12[5] = v10;
    void v12[6] = &off_26BE69D90;
    v12[2] = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_26BE71320;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A467680(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6B220);
  uint64_t result = sub_20A8C5BB0();
  if (v4)
  {
    sub_20A468C24();
    id v3 = objc_allocWithZone(v2);
    return sub_20A8CD360();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for StockSearchAssembly()
{
  return self;
}

uint64_t sub_20A467734()
{
  sub_20A8C4180();
  sub_20A46A300(&qword_26AC71488, v0, (void (*)(uint64_t))type metadata accessor for StockSearchAssembly);
  sub_20A8C41C0();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC73640);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  *(unsigned char *)(swift_allocObject() + 16) = v2;
  sub_20A8C6280();
  swift_release();
  return swift_release();
}

uint64_t sub_20A467878()
{
  return swift_deallocObject();
}

uint64_t sub_20A467888(uint64_t a1)
{
  return sub_20A461354(a1, *(unsigned char *)(v1 + 16));
}

void sub_20A467890()
{
  if (!qword_26AC6A078)
  {
    type metadata accessor for StockSearchSectionDescriptor();
    type metadata accessor for StockSearchModel();
    sub_20A46A300(&qword_26AC78AC0, 255, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
    sub_20A44D908();
    unint64_t v0 = sub_20A8C8C60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A078);
    }
  }
}

void sub_20A467950()
{
  if (!qword_26AC69FF8)
  {
    sub_20A467890();
    sub_20A467A10();
    sub_20A4680DC();
    sub_20A46A300(&qword_26AC6A100, 255, (void (*)(uint64_t))sub_20A467A10);
    unint64_t v0 = sub_20A8C8C20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69FF8);
    }
  }
}

void sub_20A467A10()
{
  if (!qword_26AC6A108)
  {
    type metadata accessor for StockSearchSectionDescriptor();
    type metadata accessor for StockSearchModel();
    sub_20A467B24();
    sub_20A46A300(&qword_26AC78AC0, 255, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
    sub_20A44D908();
    sub_20A46A300(&qword_26AC6A230, 255, (void (*)(uint64_t))sub_20A467B24);
    unint64_t v0 = sub_20A8C8E90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A108);
    }
  }
}

void sub_20A467B24()
{
  if (!qword_26AC6A238)
  {
    sub_20A42CFF0(255, (unint64_t *)&qword_26AC7F910);
    sub_20A467CAC();
    sub_20A468388();
    sub_20A4684E4();
    type metadata accessor for StockSearchViewController(255);
    sub_20A46A300(&qword_26AC6A998, 255, (void (*)(uint64_t))sub_20A467CAC);
    sub_20A46A300(&qword_26AC6A710, 255, (void (*)(uint64_t))sub_20A468388);
    sub_20A46A300(&qword_26AC6A918, 255, (void (*)(uint64_t))sub_20A4684E4);
    unint64_t v0 = sub_20A8C94D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A238);
    }
  }
}

void sub_20A467CAC()
{
  if (!qword_26AC6A9A0)
  {
    sub_20A467E38();
    sub_20A468114();
    sub_20A42CFF0(255, (unint64_t *)&qword_26AC7F910);
    sub_20A46A300(&qword_26AC6A888, 255, (void (*)(uint64_t))sub_20A467E38);
    sub_20A46A300(&qword_26AC6AAC0, 255, (void (*)(uint64_t))sub_20A468114);
    sub_20A46A300(&qword_26AC6AAB0, 255, (void (*)(uint64_t))sub_20A468114);
    sub_20A46A300(&qword_26AC6AAB8, 255, (void (*)(uint64_t))sub_20A468114);
    unint64_t v0 = sub_20A8CB1D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A9A0);
    }
  }
}

void sub_20A467E38()
{
  if (!qword_26AC6A890)
  {
    sub_20A467890();
    sub_20A467FE8();
    type metadata accessor for StockSearchBlueprintViewCellProvider();
    type metadata accessor for StockSearchBlueprintViewSupplementaryViewProvider();
    sub_20A4680DC();
    sub_20A46A300(&qword_26AC6A3B8, 255, (void (*)(uint64_t))sub_20A467FE8);
    sub_20A46A300(&qword_26AC7D410, 255, (void (*)(uint64_t))type metadata accessor for StockSearchBlueprintViewCellProvider);
    sub_20A46A300(&qword_26AC6B668, 255, (void (*)(uint64_t))type metadata accessor for StockSearchBlueprintViewSupplementaryViewProvider);
    sub_20A46A300(&qword_26AC74178, 255, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutModel);
    unint64_t v0 = sub_20A8CABB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A890);
    }
  }
}

void sub_20A467FE8()
{
  if (!qword_26AC6A3C0)
  {
    type metadata accessor for StockSearchLayoutSectionDescriptor();
    type metadata accessor for StockSearchLayoutModel();
    sub_20A46A300(&qword_26AC7CC48, 255, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutSectionDescriptor);
    sub_20A46A300(&qword_26AC74170, 255, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutModel);
    unint64_t v0 = sub_20A8C9B10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A3C0);
    }
  }
}

uint64_t sub_20A4680DC()
{
  return sub_20A46A300(&qword_26AC6A070, 255, (void (*)(uint64_t))sub_20A467890);
}

void sub_20A468114()
{
  if (!qword_26AC6AAC8)
  {
    type metadata accessor for StockSearchSectionDescriptor();
    type metadata accessor for StockSearchModel();
    sub_20A467890();
    sub_20A467FE8();
    type metadata accessor for StockSearchBlueprintViewCellProvider();
    type metadata accessor for StockSearchBlueprintViewSupplementaryViewProvider();
    type metadata accessor for StockSearchViewController(255);
    sub_20A46A300(&qword_26AC78AC0, 255, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
    sub_20A44D908();
    sub_20A4680DC();
    sub_20A46A300(&qword_26AC6A3B8, 255, (void (*)(uint64_t))sub_20A467FE8);
    sub_20A46A300(&qword_26AC7D410, 255, (void (*)(uint64_t))type metadata accessor for StockSearchBlueprintViewCellProvider);
    sub_20A46A300(&qword_26AC6B668, 255, (void (*)(uint64_t))type metadata accessor for StockSearchBlueprintViewSupplementaryViewProvider);
    sub_20A46A300(&qword_26AC76900, 255, (void (*)(uint64_t))type metadata accessor for StockSearchViewController);
    sub_20A46A300(&qword_26AC74178, 255, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutModel);
    unint64_t v0 = sub_20A8CB400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6AAC8);
    }
  }
}

void sub_20A468388()
{
  if (!qword_26AC6A718)
  {
    sub_20A467890();
    sub_20A467FE8();
    type metadata accessor for StockSearchViewController(255);
    sub_20A4680DC();
    sub_20A46A300(&qword_26AC6A3B8, 255, (void (*)(uint64_t))sub_20A467FE8);
    sub_20A46A300(&qword_26AC76900, 255, (void (*)(uint64_t))type metadata accessor for StockSearchViewController);
    sub_20A46A300(&qword_26AC74178, 255, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutModel);
    unint64_t v0 = sub_20A8CA970();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A718);
    }
  }
}

void sub_20A4684E4()
{
  if (!qword_26AC6A920)
  {
    sub_20A467890();
    sub_20A467FE8();
    type metadata accessor for StockSearchViewController(255);
    sub_20A4680DC();
    sub_20A46A300(&qword_26AC6A3B8, 255, (void (*)(uint64_t))sub_20A467FE8);
    sub_20A46A300(&qword_26AC76900, 255, (void (*)(uint64_t))type metadata accessor for StockSearchViewController);
    unint64_t v0 = sub_20A8CB010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A920);
    }
  }
}

uint64_t sub_20A4685F8()
{
  return swift_deallocObject();
}

uint64_t sub_20A468608(void *a1)
{
  return sub_20A4632A4(a1);
}

void sub_20A468610()
{
  if (!qword_26AC6A9C8)
  {
    sub_20A467FE8();
    type metadata accessor for StockSearchBlueprintLayoutBuilder();
    sub_20A468758();
    sub_20A46A300(&qword_26AC6A3B8, 255, (void (*)(uint64_t))sub_20A467FE8);
    sub_20A46A300(&qword_26AC7C2F0, 255, (void (*)(uint64_t))type metadata accessor for StockSearchBlueprintLayoutBuilder);
    sub_20A46A300(&qword_26AC6A758, 255, (void (*)(uint64_t))sub_20A468758);
    unint64_t v0 = sub_20A8CB200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A9C8);
    }
  }
}

void sub_20A468758()
{
  if (!qword_26AC6A760)
  {
    type metadata accessor for StockSearchLayoutSectionDescriptor();
    type metadata accessor for StockSearchLayoutModel();
    sub_20A46A300(&qword_26AC7CC50, 255, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutSectionDescriptor);
    sub_20A46A300(&qword_26AC74178, 255, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutModel);
    unint64_t v0 = sub_20A8CAAA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A760);
    }
  }
}

uint64_t sub_20A46884C()
{
  return swift_deallocObject();
}

uint64_t sub_20A46885C(void *a1)
{
  return sub_20A463704(a1, *(unsigned char *)(v1 + 16));
}

void sub_20A468864()
{
  if (!qword_26AC6A4A8)
  {
    sub_20A467890();
    sub_20A467B24();
    type metadata accessor for StockSearchViewController(255);
    sub_20A4680DC();
    sub_20A46A300(&qword_26AC6A230, 255, (void (*)(uint64_t))sub_20A467B24);
    sub_20A46A300(&qword_26AC76900, 255, (void (*)(uint64_t))type metadata accessor for StockSearchViewController);
    unint64_t v0 = sub_20A8C9C90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A4A8);
    }
  }
}

void sub_20A468978()
{
  if (!qword_26AC6AA58)
  {
    sub_20A467890();
    type metadata accessor for StockSearchViewController(255);
    sub_20A4680DC();
    sub_20A46A300(&qword_26AC76900, 255, (void (*)(uint64_t))type metadata accessor for StockSearchViewController);
    unint64_t v0 = sub_20A8CB330();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6AA58);
    }
  }
}

void sub_20A468A38()
{
  if (!qword_26AC6AA40)
  {
    sub_20A8CAC30();
    sub_20A467890();
    type metadata accessor for StockSearchViewController(255);
    sub_20A4680DC();
    sub_20A46A300(&qword_26AC76900, 255, (void (*)(uint64_t))type metadata accessor for StockSearchViewController);
    unint64_t v0 = sub_20A8CB2A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6AA40);
    }
  }
}

uint64_t sub_20A468B18()
{
  return swift_deallocObject();
}

uint64_t sub_20A468B28(void *a1)
{
  return sub_20A464EFC(a1, *(unsigned char *)(v1 + 16));
}

void sub_20A468B30()
{
  if (!qword_26AC6A7C0)
  {
    sub_20A467B24();
    sub_20A467890();
    sub_20A46A300(&qword_26AC6A230, 255, (void (*)(uint64_t))sub_20A467B24);
    sub_20A46A300(&qword_26AC6A068, 255, (void (*)(uint64_t))sub_20A467890);
    unint64_t v0 = sub_20A8CAB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A7C0);
    }
  }
}

void sub_20A468C24()
{
  if (!qword_26AC6B1E8)
  {
    sub_20A468C80();
    unint64_t v0 = sub_20A8CD390();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6B1E8);
    }
  }
}

unint64_t sub_20A468C80()
{
  unint64_t result = qword_26AC753E8;
  if (!qword_26AC753E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC753E8);
  }
  return result;
}

uint64_t sub_20A468CD4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockSearchPriceChangeDisplayBlueprintModifier();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t *)((char *)&v12 - v6);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = (char *)v7 + *(int *)(v2 + 20);
    uint64_t v10 = sub_20A8C3410();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, a1, v10);
    *uint64_t v7 = 0xD000000000000012;
    v7[1] = 0x800000020A8F8AC0;
    sub_20A46A0C0((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StockSearchPriceChangeDisplayBlueprintModifier);
    sub_20A46A128();
    swift_allocObject();
    sub_20A46A300(&qword_26AC822E0, 255, (void (*)(uint64_t))type metadata accessor for StockSearchPriceChangeDisplayBlueprintModifier);
    uint64_t v11 = sub_20A8C8BA0();
    sub_20A46A1E8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StockSearchPriceChangeDisplayBlueprintModifier);
    uint64_t v12 = v11;
    sub_20A46A300(&qword_26AC82478, 255, (void (*)(uint64_t))sub_20A46A128);
    sub_20A8C8C00();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_20A468F14(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_20A468F74(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_20A468F74(uint64_t a1)
{
  uint64_t v53 = a1;
  sub_20A469FF4(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v46 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v48 = (uint64_t)v44 - v5;
  MEMORY[0x270FA5388](v6);
  uint64_t v49 = (char *)v44 - v7;
  uint64_t v8 = sub_20A8C3F00();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v47 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44DA38();
  uint64_t v15 = v14;
  uint64_t v51 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v45 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)v44 - v18;
  sub_20A46A08C(0);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44DB30(0);
  uint64_t v52 = v23;
  uint64_t v54 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  unint64_t v50 = (char *)v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v1;
  v44[3] = *(void *)(v1 + 32);
  sub_20A8C8BE0();
  uint64_t v55 = v56;
  sub_20A467890();
  uint64_t v27 = v26;
  v44[1] = sub_20A4680DC();
  v44[2] = v27;
  sub_20A8C9490();
  swift_release();
  sub_20A46A0C0(v53, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v13, 2, v8))
  {
    uint64_t v28 = v47;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v47, v13, v8);
    sub_20A8C3E20();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v28, v8);
  }
  uint64_t v29 = v51;
  uint64_t v30 = v52;
  sub_20A8CBA60();
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v29 + 8);
  v31(v19, v15);
  uint64_t v32 = v54;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v22, 1, v30) == 1)
  {
    sub_20A46A1E8((uint64_t)v22, (uint64_t (*)(void))sub_20A46A08C);
    uint64_t result = MEMORY[0x2105289B0](v25 + 16);
    if (result)
    {
      uint64_t v34 = result;
      uint64_t v35 = sub_20A8C2B70();
      uint64_t v36 = (uint64_t)v46;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v46, 1, 1, v35);
      if (MEMORY[0x2105289B0](v34 + 16))
      {
        swift_getObjectType();
        sub_20A46A0C0(v36, v48, (uint64_t (*)(void))sub_20A469FF4);
        swift_retain();
        sub_20A8CB170();
        sub_20A8C9BF0();
        uint64_t v37 = (void *)sub_20A8C94C0();
        swift_release();
        sub_20A8CEAD0();
        swift_unknownObjectRelease();
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
      return sub_20A46A1E8(v36, (uint64_t (*)(void))sub_20A469FF4);
    }
  }
  else
  {
    uint64_t v38 = v50;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v50, v22, v30);
    uint64_t v39 = MEMORY[0x2105289B0](v25 + 16);
    if (v39)
    {
      uint64_t v40 = v39;
      uint64_t v53 = v25;
      sub_20A8C8BE0();
      uint64_t v55 = v56;
      uint64_t v41 = v45;
      sub_20A8C9490();
      swift_release();
      uint64_t v42 = (uint64_t)v49;
      sub_20A8CBB40();
      v31(v41, v15);
      if (MEMORY[0x2105289B0](v40 + 16))
      {
        swift_getObjectType();
        sub_20A46A0C0(v42, v48, (uint64_t (*)(void))sub_20A469FF4);
        swift_retain();
        uint64_t v42 = (uint64_t)v49;
        sub_20A8CB170();
        sub_20A8C9BF0();
        uint64_t v43 = (void *)sub_20A8C94C0();
        swift_release();
        sub_20A8CEAD0();
        swift_unknownObjectRelease();
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
      sub_20A46A1E8(v42, (uint64_t (*)(void))sub_20A469FF4);
      return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v50, v30);
    }
    else
    {
      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v38, v30);
    }
  }
  return result;
}

void sub_20A4696E4()
{
  if (!qword_26AC7FFD0)
  {
    sub_20A4301D4(255, (unint64_t *)&unk_26AC6A350);
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FFD0);
    }
  }
}

uint64_t sub_20A469750()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_20A469788(void *a1)
{
  return sub_20A4652BC(a1, (void *)(v1 + 16));
}

unint64_t sub_20A469790()
{
  unint64_t result = qword_26AC6A728;
  if (!qword_26AC6A728)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC6A728);
  }
  return result;
}

uint64_t sub_20A4697E8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

id sub_20A469828()
{
  return sub_20A464D74((void *)(v0 + 16), *(void **)(v0 + 56));
}

void sub_20A469834()
{
  if (!qword_26AC6A6B8)
  {
    type metadata accessor for StockSearchSectionDescriptor();
    type metadata accessor for StockSearchModel();
    sub_20A46A300(&qword_26AC78AC0, 255, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
    sub_20A44D908();
    unint64_t v0 = sub_20A8CA8E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A6B8);
    }
  }
}

void sub_20A4698F4()
{
  if (!qword_26AC6A620)
  {
    type metadata accessor for StockSearchSectionDescriptor();
    type metadata accessor for StockSearchModel();
    sub_20A46A300(&qword_26AC78AC0, 255, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
    sub_20A44D908();
    unint64_t v0 = sub_20A8CA340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A620);
    }
  }
}

void sub_20A4699B4()
{
  if (!qword_26AC6A1E0)
  {
    type metadata accessor for StocksActivity(255);
    type metadata accessor for StocksV2UserActivitySerializer();
    sub_20A46A300(&qword_26AC6C2A0, 255, (void (*)(uint64_t))type metadata accessor for StocksV2UserActivitySerializer);
    unint64_t v0 = sub_20A8C92F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A1E0);
    }
  }
}

uint64_t sub_20A469A64()
{
  return sub_20A46A300(&qword_26AC7D050, 255, (void (*)(uint64_t))type metadata accessor for StockSearchBlueprintModifierFactory);
}

char *sub_20A469A9C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v15 = sub_20A46A300(&qword_26AC6A7B8, 255, (void (*)(uint64_t))sub_20A468B30);
  v34[3] = type metadata accessor for StockSearchStyler();
  v34[4] = &off_26BE69280;
  v34[0] = a1;
  *(void *)&a9[OBJC_IVAR____TtC8StocksUI25StockSearchViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v16 = OBJC_IVAR____TtC8StocksUI25StockSearchViewController_searchAction;
  sub_20A45A1DC();
  id v18 = objc_allocWithZone(v17);
  uint64_t v19 = a9;
  *(void *)&a9[v16] = objc_msgSend(v18, sel_init);
  uint64_t v20 = &v19[OBJC_IVAR____TtC8StocksUI25StockSearchViewController_stockSearchMode];
  uint64_t v21 = sub_20A8C40E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  swift_unknownObjectWeakInit();
  sub_20A4342F4((uint64_t)v34, (uint64_t)&v19[OBJC_IVAR____TtC8StocksUI25StockSearchViewController_styler]);
  uint64_t v22 = &v19[OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler];
  *(void *)uint64_t v22 = a2;
  *((void *)v22 + 1) = a3;
  *(void *)&v19[OBJC_IVAR____TtC8StocksUI25StockSearchViewController_blueprintViewController] = a4;
  uint64_t v23 = &v19[OBJC_IVAR____TtC8StocksUI25StockSearchViewController_blueprintSelectionProvider];
  *(void *)uint64_t v23 = a5;
  *((void *)v23 + 1) = v15;
  *(void *)&v19[OBJC_IVAR____TtC8StocksUI25StockSearchViewController_userActivityManager] = a6;
  sub_20A4342F4(a7, (uint64_t)&v19[OBJC_IVAR____TtC8StocksUI25StockSearchViewController_keyboardInputMonitor]);
  *(void *)&v19[OBJC_IVAR____TtC8StocksUI25StockSearchViewController_commands] = a8;
  swift_unknownObjectRetain();
  id v24 = a4;
  swift_retain();
  swift_retain();
  swift_retain();

  v33.receiver = v19;
  v33.super_class = ObjectType;
  uint64_t v25 = (char *)objc_msgSendSuper2(&v33, sel_initWithNibName_bundle_, 0, 0);
  *(void *)(*(void *)&v25[OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler] + 24) = &off_26BE64A18;
  swift_unknownObjectWeakAssign();
  uint64_t v26 = *(void **)&v25[OBJC_IVAR____TtC8StocksUI25StockSearchViewController_blueprintViewController];
  uint64_t v27 = v25;
  id v28 = v26;
  sub_20A8C9C60();

  swift_allocObject();
  swift_unknownObjectWeakInit();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return v27;
}

void *sub_20A469D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12 = v11;
  void v12[3] = 0;
  swift_unknownObjectWeakInit();
  v12[19] = MEMORY[0x263F8EE88];
  void v12[6] = a1;
  v12[7] = a2;
  v12[4] = a3;
  v12[5] = a4;
  v12[8] = a5;
  v12[9] = a6;
  v12[10] = a7;
  v12[11] = a8;
  sub_20A4342F4(a9, (uint64_t)(v12 + 12));
  v12[17] = a10;
  v12[18] = a11;
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  id v20 = a6;
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  sub_20A86EB84(v23);
  __swift_project_boxed_opaque_existential_1(v23, v23[3]);
  swift_allocObject();
  swift_weakInit();
  sub_20A8CBEC0();
  swift_release();
  swift_beginAccess();
  sub_20A8CBE50();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  swift_allocObject();
  swift_weakInit();
  sub_20A8C5D60();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return v12;
}

uint64_t sub_20A469FAC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A469FE4(uint64_t a1)
{
  return sub_20A468CD4(a1);
}

uint64_t sub_20A469FEC(uint64_t a1)
{
  return sub_20A468F14(a1);
}

void sub_20A469FF4(uint64_t a1)
{
}

void sub_20A46A028(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A46A08C(uint64_t a1)
{
}

uint64_t sub_20A46A0C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_20A46A128()
{
  if (!qword_26AC82480)
  {
    type metadata accessor for StockSearchSectionDescriptor();
    type metadata accessor for StockSearchModel();
    sub_20A46A300(&qword_26AC78AC0, 255, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
    sub_20A44D908();
    unint64_t v0 = sub_20A8C8BB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC82480);
    }
  }
}

uint64_t sub_20A46A1E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A46A248(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_20A46A2C8()
{
  return sub_20A46A300((unint64_t *)&unk_26AC6C730, 255, (void (*)(uint64_t))type metadata accessor for StocksActivity);
}

uint64_t sub_20A46A300(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A46A348()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A46A380()
{
  return sub_20A55E778(v0);
}

unint64_t sub_20A46A38C()
{
  unint64_t result = qword_26AC6E050;
  if (!qword_26AC6E050)
  {
    type metadata accessor for ForYouFeedGroup();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6E050);
  }
  return result;
}

uint64_t sub_20A46A3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v33 = sub_20A8C4020();
  uint64_t v7 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_20A7AE9F8();
  int64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v28 = a4;
    uint64_t v29 = a2;
    uint64_t v30 = a3;
    uint64_t v34 = MEMORY[0x263F8EE78];
    sub_20A68C494(0, v11, 0);
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v12 = v7 + 16;
    uint64_t v14 = *(unsigned __int8 *)(v12 + 64);
    uint64_t v27 = v10;
    uint64_t v15 = v10 + ((v14 + 32) & ~v14);
    uint64_t v31 = *(void *)(v12 + 56);
    uint64_t v32 = v13;
    uint64_t v16 = (void (**)(char *, uint64_t))(v12 - 8);
    do
    {
      uint64_t v17 = v33;
      uint64_t v18 = v12;
      v32(v9, v15, v33);
      uint64_t v19 = sub_20A8C3F90();
      uint64_t v21 = v20;
      (*v16)(v9, v17);
      uint64_t v22 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C494(0, *(void *)(v22 + 16) + 1, 1);
        uint64_t v22 = v34;
      }
      unint64_t v24 = *(void *)(v22 + 16);
      unint64_t v23 = *(void *)(v22 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_20A68C494(v23 > 1, v24 + 1, 1);
        uint64_t v22 = v34;
      }
      *(void *)(v22 + 16) = v24 + 1;
      uint64_t v25 = v22 + 16 * v24;
      *(void *)(v25 + 32) = v19;
      *(void *)(v25 + 40) = v21;
      v15 += v31;
      --v11;
      uint64_t v12 = v18;
    }
    while (v11);
    swift_bridgeObjectRelease();
    a2 = v29;
    a4 = v28;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x263F8EE78];
  }
  sub_20A46A824(v22, a4);
  swift_bridgeObjectRelease();
  return a2;
}

uint64_t sub_20A46A63C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_20A46A3E4(a1, *v2, v2[1], v2[2]);
  *a2 = result;
  a2[1] = v5;
  a2[2] = v6;
  return result;
}

uint64_t sub_20A46A674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_20A46A724;
  return MEMORY[0x270F4FA68](a1, a2, a3);
}

uint64_t sub_20A46A724(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_20A46A824(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = a2;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v4 = *(v3 - 1);
      uint64_t v5 = *v3;
      swift_bridgeObjectRetain();
      sub_20A872AA4(&v7, v4, v5);
      swift_bridgeObjectRelease();
      v3 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return a2;
}

uint64_t destroy for ForYouFeedPoolStockContent(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  swift_bridgeObjectRelease();

  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t initializeWithCopy for ForYouFeedPoolStockContent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = a2 + 8;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = v4;
  uint64_t v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_bridgeObjectRetain();
  v6(a1 + 8, v3, v5);
  return a1;
}

void *assignWithCopy for ForYouFeedPoolStockContent(void *a1, void *a2)
{
  uint64_t v3 = a2 + 1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v3);
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ForYouFeedPoolStockContent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for ForYouFeedPoolStockContent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ForYouFeedPoolStockContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedPoolStockContent()
{
  return &type metadata for ForYouFeedPoolStockContent;
}

uint64_t destroy for ForYouFeedPool()
{
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

void *_s8StocksUI14ForYouFeedPoolVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ForYouFeedPool(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ForYouFeedPool(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ForYouFeedPool(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ForYouFeedPool(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedPool()
{
  return &type metadata for ForYouFeedPool;
}

uint64_t ChartRange.label.getter()
{
  uint64_t v1 = sub_20A8C2BC0();
  uint64_t v2 = *(void *)(v1 - 8);
  double v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v2 + 16))(v5, v0, v1, v3);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v5, v1);
  if (v6 == *MEMORY[0x263F7A838]
    || v6 == *MEMORY[0x263F7A840]
    || v6 == *MEMORY[0x263F7A850]
    || v6 == *MEMORY[0x263F7A828]
    || v6 == *MEMORY[0x263F7A870]
    || v6 == *MEMORY[0x263F7A818]
    || v6 == *MEMORY[0x263F7A848]
    || v6 == *MEMORY[0x263F7A860]
    || v6 == *MEMORY[0x263F7A868]
    || v6 == *MEMORY[0x263F7A858]
    || v6 == *MEMORY[0x263F7A830])
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v8 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v9 = sub_20A8C2370();

    return v9;
  }
  else
  {
    uint64_t result = sub_20A8CF750();
    __break(1u);
  }
  return result;
}

uint64_t ChartRange.accessibilityLabel.getter()
{
  uint64_t v1 = sub_20A8C2BC0();
  uint64_t v2 = *(void *)(v1 - 8);
  double v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v2 + 16))(v5, v0, v1, v3);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v5, v1);
  if (v6 == *MEMORY[0x263F7A838]
    || v6 == *MEMORY[0x263F7A840]
    || v6 == *MEMORY[0x263F7A850]
    || v6 == *MEMORY[0x263F7A828]
    || v6 == *MEMORY[0x263F7A870]
    || v6 == *MEMORY[0x263F7A818]
    || v6 == *MEMORY[0x263F7A848]
    || v6 == *MEMORY[0x263F7A860]
    || v6 == *MEMORY[0x263F7A868]
    || v6 == *MEMORY[0x263F7A858]
    || v6 == *MEMORY[0x263F7A830])
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v8 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v9 = sub_20A8C2370();

    return v9;
  }
  else
  {
    uint64_t result = sub_20A8CF750();
    __break(1u);
  }
  return result;
}

uint64_t sub_20A46B9A0()
{
  return sub_20A46BA08(&qword_26AC68D70);
}

uint64_t sub_20A46B9D4()
{
  return sub_20A46BA08(&qword_26AC68D60);
}

uint64_t sub_20A46BA08(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A8C2BC0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedOnlineBlueprintModifier()
{
  return &type metadata for StockFeedOnlineBlueprintModifier;
}

uint64_t sub_20A46BA68()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_20A46BA9C()
{
  unint64_t result = qword_26763AE10;
  if (!qword_26763AE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763AE10);
  }
  return result;
}

uint64_t sub_20A46BAF0()
{
  return sub_20A46BB80(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
}

uint64_t sub_20A46BB38()
{
  return sub_20A46BB80(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
}

uint64_t sub_20A46BB80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A46BBC8(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v91 = a3;
  CGFloat v92 = a2;
  uint64_t v98 = sub_20A8C2830();
  uint64_t v4 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v97 = (char *)v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v115);
  double v96 = (void *)((char *)v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v82 - v8;
  sub_20A42C4A4();
  uint64_t v11 = v10;
  uint64_t v113 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  long long v117 = (char *)v82 - v15;
  sub_20A42C84C();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v94 = (char *)v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v106);
  double v99 = (char *)v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v107 = (uint64_t)v82 - v20;
  sub_20A46CDBC(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  uint64_t v114 = v21;
  uint64_t v104 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  CGFloat v116 = (char *)v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v110 = (char *)v82 - v24;
  uint64_t v90 = sub_20A8C8B80();
  uint64_t v89 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  double v87 = (char *)v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A46CDBC(0, &qword_26AC6A420, MEMORY[0x263F7D950]);
  uint64_t v88 = v26;
  uint64_t v86 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  id v85 = (char *)v82 - v27;
  sub_20A46CC8C();
  MEMORY[0x270FA5388](v28 - 8);
  v82[3] = (char *)v82 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
  sub_20A46CDBC(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  uint64_t v32 = v31;
  uint64_t v84 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v83 = (char *)v82 - v33;
  uint64_t v34 = sub_20A8CBA50();
  v82[1] = v35;
  uint64_t v36 = sub_20A46CD78((unint64_t *)&unk_26AC6ACB0, (unint64_t *)&qword_26AC6ACC0, v30);
  uint64_t v37 = sub_20A8CE880();
  uint64_t v105 = v32;
  v82[2] = v34;
  if (v37)
  {
    uint64_t v120 = MEMORY[0x263F8EE78];
    uint64_t v103 = v37;
    sub_20A68C634(0, v37 & ~(v37 >> 63), 0);
    sub_20A8CE840();
    uint64_t v38 = v103;
    if (v103 < 0) {
      goto LABEL_41;
    }
    uint64_t v39 = 0;
    uint64_t v108 = (void (**)(char *))(v104 + 16);
    uint64_t v40 = (void (**)(char *))(v113 + 16);
    uint64_t v95 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v111 = v113 + 32;
    CGFloat v112 = (void (**)(char *, uint64_t))(v113 + 8);
    double v101 = (void (**)(char *, uint64_t))(v104 + 8);
    uint64_t v100 = v104 + 32;
    uint64_t v41 = v114;
    uint64_t v93 = a1;
    uint64_t v102 = v36;
    while (1)
    {
      if (v39 == v38)
      {
        __break(1u);
        goto LABEL_40;
      }
      uint64_t v109 = v39 + 1;
      uint64_t v42 = (void (*)(char *, void))sub_20A8CE8C0();
      uint64_t v43 = *v108;
      (*v108)(v116);
      v42(v119, 0);
      sub_20A8C8820();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v45 = type metadata accessor for StockFeedMastheadModel;
      switch(EnumCaseMultiPayload)
      {
        case 1:
          uint64_t v46 = v107;
          swift_bridgeObjectRelease();
          sub_20A42C980();
          sub_20A46CF10(v46 + *(int *)(v47 + 64), &qword_26AC6AF30, MEMORY[0x263F59740]);
          goto LABEL_7;
        case 2:
          uint64_t v45 = type metadata accessor for StockFeedSectionDescriptor;
          goto LABEL_27;
        case 3:
        case 4:
        case 6:
        case 7:
          goto LABEL_28;
        case 5:
LABEL_7:
          sub_20A8C8820();
          sub_20A46CD78((unint64_t *)&unk_26AC69F00, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
          uint64_t v48 = sub_20A8CE880();
          if (v48)
          {
            uint64_t v49 = v48;
            uint64_t v118 = MEMORY[0x263F8EE78];
            sub_20A68C2B4(0, v48 & ~(v48 >> 63), 0);
            sub_20A8CE840();
            if ((v49 & 0x8000000000000000) == 0)
            {
              while (2)
              {
                unint64_t v50 = (void (*)(char *, void))sub_20A8CE8C0();
                uint64_t v51 = *v40;
                (*v40)(v13);
                v50(v119, 0);
                sub_20A8C8330();
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 2u:
                    goto LABEL_13;
                  case 3u:
                    sub_20A42C53C();
                    uint64_t v54 = (uint64_t)&v9[*(int *)(v53 + 48)];
                    sub_20A46CF10((uint64_t)&v9[*(int *)(v53 + 64)], &qword_26AC68DA0, MEMORY[0x263F7A890]);
                    sub_20A46CF10(v54, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
LABEL_13:
                    uint64_t v55 = sub_20A8C3F00();
                    (*(void (**)(char *, uint64_t))(*(void *)(v55 - 8) + 8))(v9, v55);
                    goto LABEL_16;
                  case 4u:
                    uint64_t v52 = type metadata accessor for StockEarningsModel;
                    goto LABEL_15;
                  case 5u:
                    swift_bridgeObjectRelease();
                    goto LABEL_16;
                  case 6u:
                  case 9u:
                    uint64_t v52 = type metadata accessor for StockFeedModel;
                    goto LABEL_15;
                  case 7u:
                    swift_bridgeObjectRelease();
                    swift_release();
                    goto LABEL_16;
                  case 8u:
                    sub_20A46CF6C();
                    uint64_t v60 = *(void *)&v9[*(int *)(v59 + 48)];
                    uint64_t v61 = v97;
                    sub_20A8C2820();
                    uint64_t v62 = sub_20A8C2810();
                    uint64_t v64 = v63;
                    (*v95)(v61, v98);
                    uint64_t v65 = v96;
                    *double v96 = v62;
                    v65[1] = v64;
                    void v65[2] = v60;
                    swift_storeEnumTagMultiPayload();
                    sub_20A46BB80(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
                    sub_20A8C8320();
                    uint64_t v66 = sub_20A8CD2C0();
                    (*(void (**)(char *, uint64_t))(*(void *)(v66 - 8) + 8))(v9, v66);
                    goto LABEL_17;
                  case 0xAu:
                    goto LABEL_16;
                  default:
                    uint64_t v52 = type metadata accessor for StockFeedMastheadModel;
LABEL_15:
                    sub_20A46CEB0((uint64_t)v9, (uint64_t (*)(void))v52);
LABEL_16:
                    ((void (*)(char *, char *, uint64_t))v51)(v117, v13, v11);
LABEL_17:
                    (*v112)(v13, v11);
                    uint64_t v56 = v118;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    {
                      sub_20A68C2B4(0, *(void *)(v56 + 16) + 1, 1);
                      uint64_t v56 = v118;
                    }
                    unint64_t v58 = *(void *)(v56 + 16);
                    unint64_t v57 = *(void *)(v56 + 24);
                    if (v58 >= v57 >> 1)
                    {
                      sub_20A68C2B4(v57 > 1, v58 + 1, 1);
                      uint64_t v56 = v118;
                    }
                    *(void *)(v56 + 16) = v58 + 1;
                    (*(void (**)(unint64_t, char *, uint64_t))(v113 + 32))(v56+ ((*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80))+ *(void *)(v113 + 72) * v58, v117, v11);
                    uint64_t v118 = v56;
                    uint64_t v41 = v114;
                    sub_20A8CE8B0();
                    if (!--v49) {
                      goto LABEL_30;
                    }
                    continue;
                }
              }
            }
LABEL_40:
            __break(1u);
LABEL_41:
            __break(1u);
            JUMPOUT(0x20A46CC40);
          }
          uint64_t v56 = MEMORY[0x263F8EE78];
LABEL_30:
          uint64_t v68 = sub_20A46BB80(&qword_26AC69D78, (void (*)(uint64_t))sub_20A42C4A4);
          uint64_t v69 = sub_20A46BB80(&qword_26AC69D70, (void (*)(uint64_t))sub_20A42C4A4);
          MEMORY[0x21051E250](v56, v11, v68, v69);
          sub_20A46BB80(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
          sub_20A46BB80(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
          sub_20A8C8810();
          uint64_t v67 = v116;
LABEL_31:
          (*v101)(v67, v41);
          uint64_t v70 = v120;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_20A68C634(0, *(void *)(v70 + 16) + 1, 1);
            uint64_t v70 = v120;
          }
          unint64_t v72 = *(void *)(v70 + 16);
          unint64_t v71 = *(void *)(v70 + 24);
          if (v72 >= v71 >> 1)
          {
            sub_20A68C634(v71 > 1, v72 + 1, 1);
            uint64_t v70 = v120;
          }
          *(void *)(v70 + 16) = v72 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v104 + 32))(v70+ ((*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80))+ *(void *)(v104 + 72) * v72, v110, v41);
          uint64_t v120 = v70;
          sub_20A8CE8B0();
          uint64_t v38 = v103;
          uint64_t v39 = v109;
          if (v109 == v103) {
            goto LABEL_38;
          }
          break;
        default:
LABEL_27:
          sub_20A46CEB0(v107, (uint64_t (*)(void))v45);
LABEL_28:
          uint64_t v67 = v116;
          ((void (*)(char *, char *, uint64_t))v43)(v110, v116, v41);
          goto LABEL_31;
      }
    }
  }
  uint64_t v70 = MEMORY[0x263F8EE78];
  uint64_t v41 = v114;
LABEL_38:
  uint64_t v73 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
  uint64_t v74 = sub_20A46CD78(&qword_26AC69EF8, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  uint64_t v75 = sub_20A46CD78(&qword_26AC69EF0, (unint64_t *)&qword_26AC69F10, v73);
  MEMORY[0x21051E250](v70, v41, v74, v75);
  sub_20A46BB80(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
  sub_20A46BB80(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
  uint64_t v76 = v83;
  sub_20A8CBA40();
  uint64_t v77 = v89;
  uint64_t v78 = v87;
  uint64_t v79 = v90;
  (*(void (**)(char *, void, uint64_t))(v89 + 104))(v87, *MEMORY[0x263F7D528], v90);
  sub_20A46BB80(&qword_26AC76FA0, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
  uint64_t v80 = v85;
  sub_20A8C9B50();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v79);
  v92(v80);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v80, v88);
  return (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v76, v105);
}

void sub_20A46CC8C()
{
  if (!qword_26AC69760)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
    sub_20A46CDBC(255, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
    sub_20A46CD78(&qword_26AC69EF8, (unint64_t *)&qword_26AC69F10, v0);
    sub_20A46CD78(&qword_26AC69EF0, (unint64_t *)&qword_26AC69F10, v0);
    unint64_t v1 = sub_20A8C5F80();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AC69760);
    }
  }
}

uint64_t sub_20A46CD78(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A46CDBC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A46CDBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for StockFeedSectionDescriptor();
    v8[1] = type metadata accessor for StockFeedModel();
    long long v8[2] = sub_20A46BB80(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    v8[3] = sub_20A46BB80(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A46CEB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A46CF10(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A46CFD8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_20A46CF6C()
{
  if (!qword_26AC81910)
  {
    sub_20A8CD2C0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC81910);
    }
  }
}

void sub_20A46CFD8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t ANFSceneActivityBridge.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ANFSceneActivityBridge.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

Swift::Void __swiftcall ANFSceneActivityBridge.sceneDidDisconnect()()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v1 + 40;
    do
    {
      unint64_t v4 = *(void (**)(uint64_t))(v3 - 8);
      uint64_t v5 = swift_retain();
      v4(v5);
      swift_release();
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
}

uint64_t ANFSceneActivityBridge.performOnSceneDidDisconnect(on:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  unint64_t v6 = (void *)(v2 + 16);
  swift_beginAccess();
  uint64_t v7 = *(void **)(v2 + 16);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + 16) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_20A46DAE8(0, v7[2] + 1, 1, v7);
    *unint64_t v6 = v7;
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    uint64_t v7 = sub_20A46DAE8((void *)(v9 > 1), v10 + 1, 1, v7);
    *unint64_t v6 = v7;
  }
  void v7[2] = v10 + 1;
  uint64_t v11 = &v7[2 * v10];
  v11[4] = sub_20A46D298;
  void v11[5] = v5;
  return swift_endAccess();
}

uint64_t sub_20A46D238(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_20A46D260()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A46D298()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_20A46D41C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, &qword_26AC7FFB8, (uint64_t (*)(uint64_t))sub_20A42BED4, (uint64_t (*)(void))sub_20A42BED4, (uint64_t (*)(void))sub_20A42BED4);
}

void *sub_20A46D464(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_20A46F070(0, &qword_26AC80118, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x263F8E0F8]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20A46EC1C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A46D5A0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, &qword_26AC7FE98, MEMORY[0x263F7AE98], MEMORY[0x263F7AE98], MEMORY[0x263F7AE98]);
}

void *sub_20A46D5E8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_20A46F69C(0, &qword_26AC800F0, MEMORY[0x263F8D538], MEMORY[0x263F8E0F8]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20A46ED08(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A46D718(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, &qword_26AC7FE68, MEMORY[0x263F07490], MEMORY[0x263F07490], MEMORY[0x263F07490]);
}

uint64_t sub_20A46D760(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46D77C(a1, a2, a3, a4, (unint64_t *)&qword_26AC800A0, &qword_26AC7F5F0, MEMORY[0x263F8D538]);
}

uint64_t sub_20A46D77C(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_20A46F630(0, a5, a6, a7);
  sub_20A46F69C(0, a6, a7, MEMORY[0x263F7CC78]);
  uint64_t v16 = *(void *)(*(void *)(v15 - 8) + 72);
  unint64_t v17 = (*(unsigned __int8 *)(*(void *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_20A8CF510();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  sub_20A46F69C(0, a6, a7, MEMORY[0x263F7CC78]);
  uint64_t v22 = *(void *)(v21 - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v18 + v23;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_20A46EDF4(0, v13, v24, a4, a6, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_20A46DA3C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46D77C(a1, a2, a3, a4, &qword_26AC80098, &qword_26AC7F5E8, MEMORY[0x263F8D310]);
}

uint64_t sub_20A46DA58(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, &qword_26AC80090, MEMORY[0x263F7CB58], MEMORY[0x263F7CB58], MEMORY[0x263F7CB58]);
}

uint64_t sub_20A46DAA0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, &qword_26AC800B0, (uint64_t (*)(uint64_t))sub_20A45F398, (uint64_t (*)(void))sub_20A45F398, (uint64_t (*)(void))sub_20A45F398);
}

void *sub_20A46DAE8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_20A46F070(0, (unint64_t *)&unk_26AC82D00, (uint64_t (*)(uint64_t))sub_20A46F6E8, MEMORY[0x263F8E0F8]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20A46EF68(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ANFSceneActivityBridge()
{
  return self;
}

uint64_t method lookup function for ANFSceneActivityBridge(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ANFSceneActivityBridge);
}

uint64_t sub_20A46DC60(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, &qword_26763AE40, (uint64_t (*)(uint64_t))sub_20A44D848, (uint64_t (*)(void))sub_20A44D848, (uint64_t (*)(void))sub_20A44D848);
}

uint64_t sub_20A46DCA8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, &qword_26763AE20, MEMORY[0x263F7E0A0], MEMORY[0x263F7E0A0], MEMORY[0x263F7E0A0]);
}

void *sub_20A46DCF0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_20A46E590(a1, a2, a3, a4, &qword_26AC82D88, &qword_26AC82D50, MEMORY[0x263F7D308]);
}

uint64_t sub_20A46DD0C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, &qword_26AC82D90, MEMORY[0x263F7E120], MEMORY[0x263F7E120], MEMORY[0x263F7E120]);
}

uint64_t sub_20A46DD54(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, (unint64_t *)&qword_26AC7FF58, (uint64_t (*)(uint64_t))sub_20A42D350, (uint64_t (*)(void))sub_20A42D350, (uint64_t (*)(void))sub_20A42D350);
}

uint64_t sub_20A46DD9C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, (unint64_t *)&qword_26AC7FEA0, MEMORY[0x263F7AF08], MEMORY[0x263F7AF08], MEMORY[0x263F7AF08]);
}

uint64_t sub_20A46DDE4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, &qword_26AC7FF28, (uint64_t (*)(uint64_t))sub_20A42D93C, (uint64_t (*)(void))sub_20A42D93C, (uint64_t (*)(void))sub_20A42D93C);
}

uint64_t sub_20A46DE2C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, (unint64_t *)&qword_26AC7FF00, MEMORY[0x263F7CEF8], MEMORY[0x263F7CEF8], MEMORY[0x263F7CEF8]);
}

uint64_t sub_20A46DE74(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, &qword_26AC7FFC0, (uint64_t (*)(uint64_t))sub_20A42D240, (uint64_t (*)(void))sub_20A42D240, (uint64_t (*)(void))sub_20A42D240);
}

void *sub_20A46DEBC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_20A46F69C(0, (unint64_t *)&qword_26AC800B8, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20A46EB28(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A46DFEC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, &qword_26763AE18, MEMORY[0x263F5A000], MEMORY[0x263F5A000], MEMORY[0x263F5A000]);
}

uint64_t sub_20A46E034(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, &qword_26763AE28, (uint64_t (*)(uint64_t))sub_20A42D5E8, (uint64_t (*)(void))sub_20A42D5E8, (uint64_t (*)(void))sub_20A42D5E8);
}

void *sub_20A46E07C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_20A46F69C(0, &qword_26AC68728, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8E0F8]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20A46F13C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_20A46E1B0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_20A46E590(a1, a2, a3, a4, &qword_26AC7FF88, (unint64_t *)&qword_26AC6A1F0, MEMORY[0x263F7D750]);
}

uint64_t sub_20A46E1CC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, &qword_26763AE30, MEMORY[0x263F58A10], MEMORY[0x263F58A10], MEMORY[0x263F58A10]);
}

uint64_t sub_20A46E214(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, &qword_26AC82DC0, MEMORY[0x263F7D6E0], MEMORY[0x263F7D6E0], MEMORY[0x263F7D6E0]);
}

void *sub_20A46E25C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_20A46F480();
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      long long v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_20A46F348(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A46E37C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, &qword_26AC80040, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t (*)(void))type metadata accessor for ForYouFeedModel, (uint64_t (*)(void))type metadata accessor for ForYouFeedModel);
}

uint64_t sub_20A46E3C4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, &qword_26AC80020, MEMORY[0x263F59BA0], MEMORY[0x263F59BA0], MEMORY[0x263F59BA0]);
}

uint64_t sub_20A46E40C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, &qword_26AC7FEA8, MEMORY[0x263F7AF50], MEMORY[0x263F7AF50], MEMORY[0x263F7AF50]);
}

uint64_t sub_20A46E454(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, &qword_26AC7FF50, (uint64_t (*)(uint64_t))sub_20A44D40C, (uint64_t (*)(void))sub_20A44D40C, (uint64_t (*)(void))sub_20A44D40C);
}

uint64_t sub_20A46E49C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, (unint64_t *)&qword_26AC7FF20, (uint64_t (*)(uint64_t))sub_20A42C4A4, (uint64_t (*)(void))sub_20A42C4A4, (uint64_t (*)(void))sub_20A42C4A4);
}

uint64_t sub_20A46E4E4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, &qword_26AC7FFA8, (uint64_t (*)(uint64_t))sub_20A46F504, (uint64_t (*)(void))sub_20A46F504, (uint64_t (*)(void))sub_20A46F504);
}

uint64_t sub_20A46E52C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, &qword_26AC80078, type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader, type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader, type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader);
}

void *sub_20A46E574(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_20A46E590(a1, a2, a3, a4, (unint64_t *)&qword_26AC7FFF8, (unint64_t *)&qword_26AC6AA00, MEMORY[0x263F7DF98]);
}

void *sub_20A46E590(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  char v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v11 = a2;
    goto LABEL_8;
  }
  unint64_t v10 = a4[3];
  uint64_t v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v11 + 0x4000000000000000 >= 0)
  {
    uint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v11 = a2;
    }
LABEL_8:
    uint64_t v12 = a4[2];
    if (v11 <= v12) {
      uint64_t v13 = a4[2];
    }
    else {
      uint64_t v13 = v11;
    }
    if (v13)
    {
      sub_20A46F0D4(0, a5, a6, a7, MEMORY[0x263F8E0F8]);
      uint64_t v14 = (void *)swift_allocObject();
      size_t v15 = _swift_stdlib_malloc_size(v14);
      void v14[2] = v12;
      v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
      uint64_t v16 = v14 + 4;
      if (v9)
      {
LABEL_13:
        if (v14 != a4 || v16 >= &a4[5 * v12 + 4]) {
          memmove(v16, a4 + 4, 40 * v12);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v14 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_20A46F234(0, v12, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A46E6E8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A46E730(a1, a2, a3, a4, (unint64_t *)&qword_26763AE38, (uint64_t (*)(uint64_t))sub_20A42D718, (uint64_t (*)(void))sub_20A42D718, (uint64_t (*)(void))sub_20A42D718);
}

uint64_t sub_20A46E730(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  if (a3)
  {
    unint64_t v12 = *(void *)(a4 + 24);
    uint64_t v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v13 = a2;
      }
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v13 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v13;
  }
  if (!v15)
  {
    size_t v19 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_20A46F070(0, a5, a6, MEMORY[0x263F8E0F8]);
  uint64_t v16 = *(void *)(a7(0) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  size_t v19 = (void *)swift_allocObject();
  size_t v20 = _swift_stdlib_malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (BOOL v21 = v17 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_29:
    uint64_t result = sub_20A8CF510();
    __break(1u);
    return result;
  }
  void v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  uint64_t v22 = *(void *)(a7(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v19 + v23;
  if (a1)
  {
    if ((unint64_t)v19 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v14)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_20A46E9CC(0, v14, v24, a4, a8);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

uint64_t sub_20A46E9CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A46EB28(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

char *sub_20A46EC1C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    size_t v6 = 32 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_20A8CF590();
  __break(1u);
  return result;
}

char *sub_20A46ED08(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A46EDF4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6)
{
  uint64_t v6 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v6 & 0x8000000000000000) == 0)
  {
    sub_20A46F69C(0, a5, a6, MEMORY[0x263F7CC78]);
    uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
    unint64_t v12 = a4
        + ((*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80))
        + v11 * a1;
    unint64_t v13 = a3 + v11 * v6;
    if (v12 >= v13 || v12 + v11 * v6 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A46EF68(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_20A46F6E8();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

void sub_20A46F070(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A46F0D4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_20A43F7E0(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_20A46F13C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A46F234(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_20A43F7E0(0, a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A46F348(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_20A46F0D4(0, &qword_26AC6A1F8, (unint64_t *)&qword_26AC6A1F0, MEMORY[0x263F7D750], MEMORY[0x263F8D8F0]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

void sub_20A46F480()
{
  if (!qword_26AC7FF90)
  {
    sub_20A46F0D4(255, &qword_26AC6A1F8, (unint64_t *)&qword_26AC6A1F0, MEMORY[0x263F7D750], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FF90);
    }
  }
}

void sub_20A46F504()
{
  if (!qword_26AC6A2B0)
  {
    type metadata accessor for ForYouFeedLayoutSectionDescriptor(255);
    type metadata accessor for ForYouFeedLayoutModel();
    sub_20A46F72C(&qword_26AC7BBA0, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutSectionDescriptor);
    sub_20A46F72C((unint64_t *)&unk_26AC72B40, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
    unint64_t v0 = sub_20A8C9870();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A2B0);
    }
  }
}

uint64_t sub_20A46F5F0()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_20A46F628()
{
  return sub_20A66A8B0(*(void *)(v0 + 16));
}

void sub_20A46F630(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_20A46F69C(255, a3, a4, MEMORY[0x263F7CC78]);
    unint64_t v5 = sub_20A8CF730();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_20A46F69C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_20A46F6E8()
{
  unint64_t result = qword_26AC82D10;
  if (!qword_26AC82D10)
  {
    unint64_t result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_26AC82D10);
  }
  return result;
}

uint64_t sub_20A46F72C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for StockListRemoveStockBlueprintModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  swift_release();

  return __swift_destroy_boxed_opaque_existential_1(a1 + 64);
}

uint64_t initializeWithCopy for StockListRemoveStockBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  v8(a1 + 16, v5, v7);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v9 = a2 + 64;
  long long v10 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v10;
  uint64_t v11 = v10;
  unint64_t v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
  swift_retain();
  v12(a1 + 64, v9, v11);
  return a1;
}

void *assignWithCopy for StockListRemoveStockBlueprintModifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 8, a2 + 8);
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for StockListRemoveStockBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockListRemoveStockBlueprintModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockListRemoveStockBlueprintModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockListRemoveStockBlueprintModifier()
{
  return &type metadata for StockListRemoveStockBlueprintModifier;
}

uint64_t sub_20A46FA94(uint64_t a1, void (*a2)(uint64_t *), void (*a3)(uint64_t *))
{
  uint64_t v61 = a2;
  uint64_t v62 = a3;
  uint64_t v55 = a1;
  sub_20A4711B0(0, &qword_26AC6A428, MEMORY[0x263F7D950]);
  uint64_t v59 = *(void *)(v4 - 8);
  uint64_t v60 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (uint64_t *)((char *)&v51 - v5);
  sub_20A4711B0(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v54 = v7;
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v51 = *(void *)(v53 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v52 = (char *)&v51 - v8;
  uint64_t v57 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v57);
  long long v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D93C();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v56 = (uint64_t)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_20A8C91A0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  BOOL v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = v3;
  sub_20A8CA3D0();
  int v22 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v21, v18);
  int v23 = *MEMORY[0x263F7D668];
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  if (v22 != v23)
  {
    sub_20A470E24();
    uint64_t v31 = swift_allocError();
    unsigned char *v32 = 0;
    *uint64_t v6 = v31;
    uint64_t v30 = v59;
    uint64_t v24 = v60;
    (*(void (**)(uint64_t *, void, uint64_t))(v59 + 104))(v6, *MEMORY[0x263F7D930], v60);
    v61(v6);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v30 + 8))(v6, v24);
  }
  uint64_t v25 = v59;
  uint64_t v24 = v60;
  uint64_t v27 = v61;
  uint64_t v26 = v62;
  sub_20A8CA3C0();
  sub_20A8C8330();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_20A471240((uint64_t)v10, type metadata accessor for StockListModel);
    sub_20A470E24();
    uint64_t v28 = swift_allocError();
    *uint64_t v29 = 0;
    *uint64_t v6 = v28;
    uint64_t v30 = v25;
    (*(void (**)(uint64_t *, void, uint64_t))(v25 + 104))(v6, *MEMORY[0x263F7D930], v24);
    v27(v6);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v30 + 8))(v6, v24);
  }
  uint64_t v34 = v56;
  uint64_t v35 = sub_20A470E78((uint64_t)v10, v56);
  MEMORY[0x270FA5388](v35);
  uint64_t v36 = v58;
  *(&v51 - 2) = v58;
  *(&v51 - 1) = v34;
  sub_20A8C6670();
  uint64_t v37 = v53;
  uint64_t v38 = v52;
  uint64_t v39 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v55, v54);
  sub_20A470EF8(v36, (uint64_t)v63);
  unint64_t v40 = (*(unsigned __int8 *)(v37 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  unint64_t v41 = (v51 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v42 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v42 + v40, v38, v39);
  unint64_t v43 = v42 + v41;
  long long v44 = v63[5];
  *(_OWORD *)(v43 + 64) = v63[4];
  *(_OWORD *)(v43 + 80) = v44;
  *(void *)(v43 + 96) = v64;
  long long v45 = v63[1];
  *(_OWORD *)unint64_t v43 = v63[0];
  *(_OWORD *)(v43 + 16) = v45;
  long long v46 = v63[3];
  *(_OWORD *)(v43 + 32) = v63[2];
  *(_OWORD *)(v43 + 48) = v46;
  uint64_t v47 = (void (**)(uint64_t *))(v42 + ((v41 + 111) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v47 = v27;
  v47[1] = v26;
  swift_retain();
  uint64_t v48 = (void *)sub_20A8C6450();
  sub_20A8C6500();
  swift_release();
  swift_release();

  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v27;
  *(void *)(v49 + 24) = v26;
  swift_retain();
  unint64_t v50 = (void *)sub_20A8C6450();
  sub_20A8C6550();
  swift_release();
  swift_release();
  swift_release();

  return sub_20A471240(v56, type metadata accessor for StockListStockModel);
}

uint64_t sub_20A470140(void *a1)
{
  uint64_t v9 = sub_20A8C40E0();
  uint64_t v2 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = a1[5];
  long long v8[2] = a1[6];
  v8[1] = __swift_project_boxed_opaque_existential_1(a1 + 2, v5);
  sub_20A8C3EC0();
  __swift_project_boxed_opaque_existential_1(a1 + 2, a1[5]);
  sub_20A8C3600();
  uint64_t v6 = sub_20A8C3680();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v9);
  return v6;
}

uint64_t sub_20A470298(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v95 = a4;
  uint64_t v94 = a5;
  uint64_t v97 = a2;
  uint64_t v6 = sub_20A8CA4C0();
  uint64_t v79 = *(void *)(v6 - 8);
  uint64_t v80 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v78 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v82);
  uint64_t v75 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4711B0(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v96 = v9;
  uint64_t v81 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v77 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  double v87 = (char *)&v73 - v12;
  sub_20A42D908(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v90 = (uint64_t)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4711B0(0, &qword_26AC6A428, MEMORY[0x263F7D950]);
  uint64_t v92 = *(void *)(v15 - 8);
  uint64_t v93 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v91 = (uint64_t *)((char *)&v73 - v16);
  sub_20A42D93C();
  uint64_t v18 = v17;
  uint64_t v19 = *(char **)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v83 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v86 = (char *)&v73 - v22;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v73 - v24;
  sub_20A47113C();
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v28 = (char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4711B0(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  uint64_t v30 = v29;
  uint64_t v31 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  id v85 = (char *)&v73 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v73 - v34;
  uint64_t v88 = a3;
  sub_20A8CA3C0();
  sub_20A8C82F0();
  uint64_t v84 = v19;
  uint64_t v37 = (char *)*((void *)v19 + 1);
  uint64_t v36 = v19 + 8;
  uint64_t v74 = v25;
  uint64_t v89 = v18;
  uint64_t v38 = v18;
  uint64_t v39 = v37;
  ((void (*)(char *, uint64_t))v37)(v25, v38);
  sub_20A8CBAC0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v28, 1, v30) == 1)
  {
    sub_20A471240((uint64_t)v28, (uint64_t (*)(void))sub_20A47113C);
    sub_20A470E24();
    uint64_t v40 = swift_allocError();
    unsigned char *v41 = 1;
    unint64_t v43 = v91;
    uint64_t v42 = v92;
    *uint64_t v91 = v40;
    uint64_t v44 = v93;
    (*(void (**)(uint64_t *, void, uint64_t))(v42 + 104))(v43, *MEMORY[0x263F7D930], v93);
    v95(v43);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v42 + 8))(v43, v44);
  }
  else
  {
    uint64_t v76 = v31;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v35, v28, v30);
    uint64_t v46 = v30;
    uint64_t v47 = v83;
    sub_20A8CA3C0();
    uint64_t v48 = v89;
    sub_20A8C82F0();
    uint64_t v49 = v47;
    uint64_t v50 = v46;
    uint64_t v83 = v39;
    ((void (*)(char *, uint64_t))v39)(v49, v48);
    uint64_t v51 = v90;
    sub_20A8C8920();
    swift_bridgeObjectRelease();
    uint64_t v52 = v84;
    uint64_t v53 = v48;
    if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v84 + 6))(v51, 1, v48) == 1)
    {
      sub_20A471240(v90, (uint64_t (*)(void))sub_20A42D908);
      sub_20A470E24();
      uint64_t v54 = swift_allocError();
      *uint64_t v55 = 1;
      uint64_t v57 = v91;
      uint64_t v56 = v92;
      *uint64_t v91 = v54;
      uint64_t v58 = v93;
      (*(void (**)(uint64_t *, void, uint64_t))(v56 + 104))(v57, *MEMORY[0x263F7D930], v93);
      v95(v57);
      (*(void (**)(uint64_t *, uint64_t))(v56 + 8))(v57, v58);
      return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v35, v50);
    }
    else
    {
      uint64_t v73 = v36;
      (*((void (**)(char *, uint64_t, uint64_t))v52 + 4))(v86, v90, v48);
      uint64_t v59 = v50;
      uint64_t v60 = v81;
      uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t))(v81 + 16);
      v61(v87, v97, v96);
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v85, v35, v59);
      sub_20A8C8890();
      sub_20A44D574();
      sub_20A8CE840();
      uint64_t v90 = v59;
      sub_20A8CE8A0();
      if (v99 == v98)
      {
        swift_storeEnumTagMultiPayload();
        sub_20A44D504();
        uint64_t v62 = v74;
        sub_20A8C8320();
        sub_20A8C8880();
        ((void (*)(char *, uint64_t))v83)(v62, v53);
      }
      uint64_t v63 = v96;
      uint64_t v84 = v35;
      uint64_t v64 = v87;
      sub_20A8CBAB0();
      uint64_t v65 = v77;
      v61(v77, (uint64_t)v64, v63);
      uint64_t v67 = v79;
      uint64_t v66 = v80;
      uint64_t v68 = v78;
      (*(void (**)(char *, void, uint64_t))(v79 + 104))(v78, *MEMORY[0x263F7DC48], v80);
      sub_20A8CA3A0();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v66);
      sub_20A42D40C();
      sub_20A44D504();
      uint64_t v69 = v91;
      sub_20A8C9B20();
      swift_release();
      uint64_t v70 = *(void (**)(char *, uint64_t))(v60 + 8);
      v70(v65, v63);
      v95(v69);
      (*(void (**)(uint64_t *, uint64_t))(v92 + 8))(v69, v93);
      unint64_t v71 = *(void (**)(char *, uint64_t))(v76 + 8);
      uint64_t v72 = v90;
      v71(v85, v90);
      v70(v64, v63);
      ((void (*)(char *, uint64_t))v83)(v86, v89);
      return ((uint64_t (*)(char *, uint64_t))v71)(v84, v72);
    }
  }
}

uint64_t sub_20A470CA0(void *a1, void (*a2)(char *))
{
  sub_20A4711B0(0, &qword_26AC6A428, MEMORY[0x263F7D950]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  double v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v12 - v8;
  *(uint64_t *)((char *)&v12 - v8) = (uint64_t)a1;
  (*(void (**)(char *, void, uint64_t, double))(v6 + 104))((char *)&v12 - v8, *MEMORY[0x263F7D930], v5, v7);
  id v10 = a1;
  a2(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_20A470DCC()
{
  unint64_t result = qword_26763AE48;
  if (!qword_26763AE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763AE48);
  }
  return result;
}

unint64_t sub_20A470E24()
{
  unint64_t result = qword_26763AE50;
  if (!qword_26763AE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763AE50);
  }
  return result;
}

uint64_t sub_20A470E78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockListStockModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A470EDC()
{
  return sub_20A470140(*(void **)(v0 + 16));
}

uint64_t sub_20A470EF8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_20A470F30()
{
  sub_20A4711B0(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  uint64_t v5 = v0 + v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v5 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v5 + 64);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A471028(uint64_t a1)
{
  sub_20A4711B0(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  unint64_t v5 = (*(void *)(*(void *)(v3 - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_20A470298(a1, v1 + v4, v1 + v5, *(void (**)(uint64_t *))(v1 + ((v5 + 111) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v5 + 111) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_20A4710FC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A471134(void *a1)
{
  return sub_20A470CA0(a1, *(void (**)(char *))(v1 + 16));
}

void sub_20A47113C()
{
  if (!qword_26AC69F50)
  {
    sub_20A4711B0(255, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69F50);
    }
  }
}

void sub_20A4711B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for StockListSectionDescriptor;
    v8[1] = type metadata accessor for StockListModel(255);
    long long v8[2] = sub_20A42D40C();
    void v8[3] = sub_20A44D504();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A471240(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for StockListRemoveStockBlueprintModifier.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A47136CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockListRemoveStockBlueprintModifier.Errors()
{
  return &type metadata for StockListRemoveStockBlueprintModifier.Errors;
}

unint64_t sub_20A4713A8()
{
  unint64_t result = qword_26763AE58;
  if (!qword_26763AE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763AE58);
  }
  return result;
}

uint64_t sub_20A4713FC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t TextInputAlert.__allocating_init(type:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v6 = sub_20A472110(v5, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

uint64_t TextInputAlert.init(type:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  double v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v9 + 16))(v8, v6);
  uint64_t v10 = sub_20A47207C((uint64_t)v8, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v10;
}

uint64_t TextInputAlert.onSubmit(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 56);
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  sub_20A459CA4(v3);
  swift_retain();

  return swift_retain();
}

uint64_t TextInputAlert.onCancel(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 72);
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  sub_20A459CA4(v3);
  swift_retain();

  return swift_retain();
}

uint64_t TextInputAlert.onValidateText(_:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  swift_retain();
  swift_release();

  return swift_retain();
}

void TextInputAlert.present(from:animated:completion:)(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  id v9 = sub_20A471760();
  uint64_t v10 = *(void **)(v4 + 104);
  *(void *)(v4 + 104) = v9;
  id v11 = v9;

  if (a3)
  {
    v13[4] = a3;
    v13[5] = a4;
    v13[0] = MEMORY[0x263EF8330];
    v13[1] = 1107296256;
    void v13[2] = sub_20A4713FC;
    v13[3] = &block_descriptor_3;
    uint64_t v12 = _Block_copy(v13);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v12 = 0;
  }
  objc_msgSend(a1, sel_presentViewController_animated_completion_, v11, a2 & 1, v12);
  _Block_release(v12);
}

id sub_20A471760()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))v0;
  uint64_t v2 = v0 + 2;
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  uint64_t v7 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v7, v8, 1);

  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v1;
  uint64_t v12 = *((void *)v1 + 5);
  uint64_t v13 = *((void *)v1 + 6);
  __swift_project_boxed_opaque_existential_1(v2, v12);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v13 + 24);
  swift_retain();
  v14(v12, v13);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_20A472364;
  *(void *)(v15 + 24) = v11;
  swift_retain();
  uint64_t v16 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  uint64_t v44 = sub_20A46D298;
  uint64_t v45 = v15;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v41 = 1107296256;
  uint64_t v42 = sub_20A4391D4;
  unint64_t v43 = &block_descriptor_11;
  uint64_t v17 = _Block_copy(&aBlock);
  swift_release();
  id v38 = self;
  id v18 = objc_msgSend(v38, sel_actionWithTitle_style_handler_, v16, 0, v17);
  _Block_release(v17);

  objc_msgSend(v9, sel_addAction_, v18);
  id v19 = v18;
  objc_msgSend(v9, sel_setPreferredAction_, v19);
  uint64_t v20 = (objc_class *)type metadata accessor for TextFieldValidator();
  uint64_t v21 = (char *)objc_allocWithZone(v20);
  uint64_t v22 = &v21[OBJC_IVAR____TtC8StocksUI18TextFieldValidator_submit];
  *(void *)uint64_t v22 = nullsub_1;
  *((void *)v22 + 1) = 0;
  uint64_t v23 = (uint64_t (**)(uint64_t, uint64_t))&v21[OBJC_IVAR____TtC8StocksUI18TextFieldValidator_isTextValid];
  *uint64_t v23 = sub_20A4723A4;
  v23[1] = v1;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v19;
  uint64_t v25 = (id (**)(char))&v21[OBJC_IVAR____TtC8StocksUI18TextFieldValidator_setAllowSubmission];
  *uint64_t v25 = sub_20A472434;
  v25[1] = (id (*)(char))v24;
  v39.receiver = v21;
  v39.super_class = v20;
  swift_retain();
  id v26 = objc_msgSendSuper2(&v39, sel_init);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v1;
  *(void *)(v27 + 24) = v26;
  uint64_t v44 = sub_20A472440;
  uint64_t v45 = v27;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v41 = 1107296256;
  uint64_t v42 = sub_20A4391D4;
  unint64_t v43 = &block_descriptor_20_0;
  uint64_t v28 = _Block_copy(&aBlock);
  swift_retain();
  id v29 = v26;
  swift_release();
  objc_msgSend(v9, sel_addTextFieldWithConfigurationHandler_, v28);
  _Block_release(v28);
  uint64_t v30 = *((void *)v1 + 5);
  uint64_t v31 = *((void *)v1 + 6);
  __swift_project_boxed_opaque_existential_1(v2, v30);
  (*(void (**)(uint64_t, uint64_t))(v31 + 32))(v30, v31);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v1;
  *(void *)(v32 + 24) = v29;
  swift_retain();
  id v33 = v29;
  uint64_t v34 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  uint64_t v44 = sub_20A47244C;
  uint64_t v45 = v32;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v41 = 1107296256;
  uint64_t v42 = sub_20A4391D4;
  unint64_t v43 = &block_descriptor_26;
  uint64_t v35 = _Block_copy(&aBlock);
  swift_release();
  id v36 = objc_msgSend(v38, sel_actionWithTitle_style_handler_, v34, 1, v35);
  _Block_release(v35);

  objc_msgSend(v9, sel_addAction_, v36);
  swift_release();

  return v9;
}

void sub_20A471CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = (void *)MEMORY[0x2105289B0](v3);
  if (!v4) {
    return;
  }
  uint64_t v5 = v4;
  id v6 = objc_msgSend(v4, sel_textFields);

  if (!v6) {
    return;
  }
  sub_20A472454();
  unint64_t v7 = sub_20A8CE5E0();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_20A8CF540();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_5;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_13;
  }
LABEL_5:
  if ((v7 & 0xC000000000000001) != 0)
  {
    id v8 = (id)MEMORY[0x210527700](0, v7);
  }
  else
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v8 = *(id *)(v7 + 32);
  }
  id v9 = v8;
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v9, sel_text);

  if (v10)
  {
    uint64_t v11 = sub_20A8CE280();
    uint64_t v13 = v12;

    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(a2 + 56);
    if (v14)
    {
      swift_retain();
      v14(v11, v13);
      sub_20A459CA4((uint64_t)v14);
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void **)(a2 + 104);
    *(void *)(a2 + 104) = 0;
  }
}

uint64_t sub_20A471E6C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[5];
  uint64_t v6 = a2[6];
  __swift_project_boxed_opaque_existential_1(a2 + 2, v5);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 40))(a1, 0, v5, v6);
  objc_msgSend(a1, sel_setDelegate_, a3);
  unint64_t v7 = *(uint64_t (**)(void))(a3 + OBJC_IVAR____TtC8StocksUI18TextFieldValidator_setAllowSubmission);
  id v8 = *(uint64_t (**)(uint64_t, unint64_t))(a3
                                                           + OBJC_IVAR____TtC8StocksUI18TextFieldValidator_isTextValid);
  id v9 = objc_msgSend(a1, sel_text);
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = sub_20A8CE280();
    unint64_t v13 = v12;
  }
  else
  {
    uint64_t v11 = 0;
    unint64_t v13 = 0xE000000000000000;
  }
  char v14 = v8(v11, v13);
  swift_bridgeObjectRelease();
  return v7(v14 & 1);
}

void sub_20A471F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a2 + 72);
  if (v3)
  {
    uint64_t v4 = swift_retain();
    v3(v4);
    sub_20A459CA4((uint64_t)v3);
  }
  uint64_t v5 = *(void **)(a2 + 104);
  *(void *)(a2 + 104) = 0;
}

uint64_t TextInputAlert.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_20A459CA4(*(void *)(v0 + 56));
  sub_20A459CA4(*(void *)(v0 + 72));
  swift_release();

  return v0;
}

uint64_t TextInputAlert.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_20A459CA4(*(void *)(v0 + 56));
  sub_20A459CA4(*(void *)(v0 + 72));
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_20A47207C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a2 + 40) = a3;
  *(void *)(a2 + 48) = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(a2 + 16));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(void *)(a2 + 96) = 0;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 88) = sub_20A432B48;
  return a2;
}

uint64_t sub_20A472110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  id v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  *(void *)(v10 + 40) = a3;
  *(void *)(v10 + 48) = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v10 + 16));
  (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_1, v9, a3);
  *(_OWORD *)(v10 + 56) = 0u;
  *(_OWORD *)(v10 + 72) = 0u;
  *(void *)(v10 + 96) = 0;
  *(void *)(v10 + 104) = 0;
  *(void *)(v10 + 88) = sub_20A432B48;
  return v10;
}

uint64_t dispatch thunk of TextInputAlertable.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TextInputAlertable.message.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TextInputAlertable.submitTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TextInputAlertable.cancelTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of TextInputAlertable.configureTextField(_:label:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t type metadata accessor for TextInputAlert()
{
  return self;
}

uint64_t method lookup function for TextInputAlert(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TextInputAlert);
}

uint64_t dispatch thunk of TextInputAlert.__allocating_init(type:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_20A4722EC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A472324()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_20A472364()
{
  sub_20A471CC8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_20A47236C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A4723A4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 88);
  swift_retain();
  LOBYTE(a2) = v5(a1, a2);
  swift_release();
  return a2 & 1;
}

uint64_t sub_20A4723FC()
{
  return swift_deallocObject();
}

id sub_20A472434(char a1)
{
  return sub_20A891894(a1, *(id *)(v1 + 16));
}

uint64_t sub_20A472440(void *a1)
{
  return sub_20A471E6C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

void sub_20A47244C(uint64_t a1)
{
  sub_20A471F7C(a1, *(void *)(v1 + 16));
}

unint64_t sub_20A472454()
{
  unint64_t result = qword_26763AE60;
  if (!qword_26763AE60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26763AE60);
  }
  return result;
}

uint64_t *sub_20A4724AC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20A8C3D00();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    id v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C2BC0();
    unint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_20A472600(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_20A8C2BC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A4726D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20A8C2BC0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20A4727D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20A8C2BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A4728EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20A8C2BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  return a1;
}

uint64_t sub_20A4729C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20A8C2BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A472AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A472AD8);
}

uint64_t sub_20A472AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C3D00();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_20A8C2BC0();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_20A472C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A472C18);
}

uint64_t sub_20A472C18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20A8C3D00();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_20A8C2BC0();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for StockChartDescriptor()
{
  uint64_t result = qword_26AC71D68;
  if (!qword_26AC71D68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A472D90()
{
  uint64_t result = sub_20A8C3D00();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20A8C2BC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

id sub_20A472E68()
{
  unint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
    id v2 = *(id *)(v0 + 16);
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ForYouTitleView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    uint64_t v4 = *(void **)(v0 + 16);
    *(void *)(v0 + 16) = v3;
    id v2 = v3;

    unint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t sub_20A472EE4()
{
  sub_20A473750();
  MEMORY[0x270FA5388](v0 - 8);
  id v2 = &v9[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_20A8C9830();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result + OBJC_IVAR____TtC8StocksUI23ForYouTitleViewProvider_lastLayoutOptions;
    swift_beginAccess();
    sub_20A473CE8(v8, (uint64_t)v2);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    {
      swift_release();
      return sub_20A473DB0((uint64_t)v2, (uint64_t (*)(void))sub_20A473750);
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 32))(v6, v2, v3);
      sub_20A4730C8((uint64_t)v6);
      swift_release();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  return result;
}

uint64_t sub_20A4730C8(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for ForYouTitleViewLayoutOptions();
  uint64_t v5 = (int *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for ForYouTitleViewLayoutAttributes();
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (double *)((char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A473750();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AttributionSource();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (uint64_t *)((char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = v1[13];
  uint64_t v18 = v1[14];
  __swift_project_boxed_opaque_existential_1(v1 + 10, v17);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
  sub_20A8C5DB0();
  swift_release();
  uint64_t v19 = v1[15];
  sub_20A4342F4((uint64_t)(v2 + 16), (uint64_t)v52);
  swift_unknownObjectRetain();
  sub_20A60A4FC(v16, v19, v52, v53);
  uint64_t v20 = sub_20A8C9830();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v13, a1, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v13, 0, 1, v20);
  uint64_t v22 = (uint64_t)v2 + OBJC_IVAR____TtC8StocksUI23ForYouTitleViewProvider_lastLayoutOptions;
  swift_beginAccess();
  sub_20A473D4C((uint64_t)v13, v22);
  swift_endAccess();
  __swift_project_boxed_opaque_existential_1(v2 + 3, v2[6]);
  sub_20A8C9720();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v27 = sub_20A8C9710();
  MEMORY[0x210526C50](v27, 0.0, v28, v29, v30, v31);
  sub_20A8CE960();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  sub_20A8C96E0();
  sub_20A8C9700();
  uint64_t v41 = v40;
  uint64_t v42 = sub_20A8C9750();
  uint64_t v43 = sub_20A8C97B0();
  *uint64_t v7 = v24;
  v7[1] = v26;
  void v7[2] = v33;
  v7[3] = v35;
  void v7[4] = v37;
  v7[5] = v39;
  *(void *)((char *)v7 + v5[9]) = v41;
  *(void *)((char *)v7 + v5[10]) = v42;
  *(void *)((char *)v7 + v5[11]) = v43;
  *((unsigned char *)v7 + v5[12]) = 0;
  *((unsigned char *)v7 + v5[13]) = 0;
  *(void *)((char *)v7 + v5[14]) = 0x4000000000000000;
  *(void *)((char *)v7 + v5[15]) = 0x4010000000000000;
  sub_20A744448(v53, (uint64_t)v7, (uint64_t)v10);
  sub_20A473DB0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ForYouTitleViewLayoutOptions);
  uint64_t v44 = (char *)sub_20A472E68();
  sub_20A5B48BC(v53, v10, v44);

  id v45 = sub_20A472E68();
  id v46 = sub_20A472E68();
  objc_msgSend(v46, sel_frame);

  id v47 = sub_20A472E68();
  objc_msgSend(v47, sel_frame);
  CGRectGetMaxY(v54);

  sub_20A8CEDB0();
  objc_msgSend(v45, sel_setFrame_);

  uint64_t v48 = (char *)sub_20A472E68();
  id v49 = *(id *)&v48[OBJC_IVAR____TtC8StocksUI15ForYouTitleView_separatorLayer];

  objc_msgSend(v49, sel_setHidden_, 1);
  sub_20A473DB0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ForYouTitleViewLayoutAttributes);
  return sub_20A473E10((uint64_t)v53);
}

uint64_t sub_20A473598()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  sub_20A473DB0(v0 + OBJC_IVAR____TtC8StocksUI23ForYouTitleViewProvider_lastLayoutOptions, (uint64_t (*)(void))sub_20A473750);

  return swift_deallocClassInstance();
}

uint64_t sub_20A473640()
{
  return type metadata accessor for ForYouTitleViewProvider();
}

uint64_t type metadata accessor for ForYouTitleViewProvider()
{
  uint64_t result = qword_26AC74A20;
  if (!qword_26AC74A20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A473694()
{
  sub_20A473750();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_20A473750()
{
  if (!qword_26AC6A2A0)
  {
    sub_20A8C9830();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A2A0);
    }
  }
}

uint64_t sub_20A4737A8()
{
  return sub_20A8CA6E0();
}

unint64_t sub_20A4737F8(uint64_t a1)
{
  unint64_t result = sub_20A473820();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_20A473820()
{
  unint64_t result = qword_26AC74A00;
  if (!qword_26AC74A00)
  {
    type metadata accessor for ForYouTitleViewProvider();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC74A00);
  }
  return result;
}

void *sub_20A473878(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  void v27[3] = a8;
  v27[4] = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(boxed_opaque_existential_1, a6, a8);
  v26[3] = type metadata accessor for ForYouTitleViewLayoutAttributesFactory();
  v26[4] = &off_26BE6D6A8;
  v26[0] = a1;
  a7[2] = 0;
  uint64_t v18 = (char *)a7 + OBJC_IVAR____TtC8StocksUI23ForYouTitleViewProvider_lastLayoutOptions;
  uint64_t v19 = sub_20A8C9830();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  sub_20A4342F4((uint64_t)v26, (uint64_t)(a7 + 3));
  a7[8] = a2;
  a7[9] = a3;
  sub_20A4342F4((uint64_t)a4, (uint64_t)(a7 + 10));
  a7[15] = a5;
  sub_20A4342F4((uint64_t)v27, (uint64_t)(a7 + 16));
  uint64_t v20 = a4[3];
  uint64_t v21 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v20);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v22(v20, v21);
  sub_20A44D17C();
  uint64_t v23 = (void *)sub_20A8CEBE0();
  swift_allocObject();
  swift_weakInit();
  sub_20A8C5DC0();
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a4);
  return a7;
}

void *sub_20A473A94(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v16 = *(void *)(a9 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v19;
  uint64_t v36 = v20;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v34);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(boxed_opaque_existential_1, a1, a8);
  uint64_t v22 = (void *)swift_allocObject();
  uint64_t v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
  double v24 = MEMORY[0x270FA5388](v23);
  uint64_t v26 = (uint64_t *)((char *)&v31 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v27 + 16))(v26, v24);
  uint64_t v28 = *v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a6, a9);
  double v29 = sub_20A473878(v28, a2, a3, v32, v33, (uint64_t)v18, v22, a9, a11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return v29;
}

uint64_t sub_20A473CA8()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A473CE0()
{
  return sub_20A472EE4();
}

uint64_t sub_20A473CE8(uint64_t a1, uint64_t a2)
{
  sub_20A473750();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A473D4C(uint64_t a1, uint64_t a2)
{
  sub_20A473750();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A473DB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A473E10(uint64_t a1)
{
  return a1;
}

id sub_20A473E64()
{
  type metadata accessor for Images();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_26AC811C8 = (uint64_t)result;
  return result;
}

id sub_20A473EB8(uint64_t a1)
{
  return sub_20A474024(a1, (SEL *)&selRef_ts_plus, &qword_26AC9ECA0);
}

id sub_20A473ECC(uint64_t a1)
{
  return sub_20A474024(a1, (SEL *)&selRef_ts_checkmark, &qword_267652CB8);
}

void sub_20A473EE0(uint64_t a1)
{
}

void sub_20A473F0C(uint64_t a1)
{
}

void sub_20A473F38(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (qword_26AC811D0 != -1) {
    swift_once();
  }
  id v5 = (id)qword_26AC811C8;
  uint64_t v6 = (void *)sub_20A8CE240();
  id v7 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v6, v5, 0);

  if (v7) {
    *a4 = v7;
  }
  else {
    __break(1u);
  }
}

id sub_20A473FFC(uint64_t a1)
{
  return sub_20A474024(a1, (SEL *)&selRef_ts_plusCircleFill, &qword_267652CC8);
}

id sub_20A474010(uint64_t a1)
{
  return sub_20A474024(a1, (SEL *)&selRef_ts_minusCircleFill, &qword_267652CD0);
}

id sub_20A474024(uint64_t a1, SEL *a2, void *a3)
{
  id result = [self *a2];
  *a3 = result;
  return result;
}

void sub_20A474068(uint64_t a1)
{
}

void sub_20A47408C()
{
  unint64_t v0 = (void *)sub_20A8CE240();
  id v1 = objc_msgSend(self, sel__systemImageNamed_, v0);

  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_imageWithRenderingMode_, 1);

    qword_267652CE0 = (uint64_t)v2;
  }
  else
  {
    __break(1u);
  }
}

void sub_20A474128(uint64_t a1)
{
}

void sub_20A47414C()
{
  unint64_t v0 = (void *)sub_20A8CE240();
  id v1 = objc_msgSend(self, sel_systemImageNamed_, v0);

  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_imageWithRenderingMode_, 2);

    qword_267652CF0 = (uint64_t)v2;
  }
  else
  {
    __break(1u);
  }
}

void sub_20A4741E8(uint64_t a1)
{
}

void sub_20A47420C(uint64_t a1)
{
}

void sub_20A474234(uint64_t a1)
{
}

void sub_20A474258(uint64_t a1)
{
}

void sub_20A474280(uint64_t a1)
{
}

void sub_20A4742A4(uint64_t a1)
{
}

void sub_20A4742C8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = (void *)sub_20A8CE240();
  id v6 = objc_msgSend(self, sel_systemImageNamed_, v5);

  if (v6) {
    *a4 = v6;
  }
  else {
    __break(1u);
  }
}

id sub_20A474378()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Images();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for Images()
{
  return self;
}

id sub_20A4743D4(double a1, double a2, double a3)
{
  id v6 = objc_allocWithZone(MEMORY[0x263F4B540]);
  id v7 = (void *)sub_20A8CE240();
  id v8 = objc_msgSend(v6, sel_initWithBundleIdentifier_, v7);

  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F4B558]), sel_initWithSize_scale_, a1, a2, a3);
  id v10 = objc_msgSend(v8, sel_imageForDescriptor_, v9);
  uint64_t v11 = v10;
  if (v10 && (id v12 = objc_msgSend(v10, sel_CGImage)) != 0)
  {
    uint64_t v13 = v12;
    id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_initWithCGImage_, v12);
  }
  else
  {
    if (qword_26AC81218 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_20A8C7DF0();
    __swift_project_value_buffer(v15, (uint64_t)qword_26AC9EC20);
    uint64_t v16 = sub_20A8C7DD0();
    os_log_type_t v17 = sub_20A8CE9E0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_20A414000, v16, v17, "Failed to create app icon image from IconServices", v18, 2u);
      MEMORY[0x210528850](v18, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  return v14;
}

uint64_t sub_20A474604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  uint64_t v15 = swift_allocObject();
  id v16 = objc_allocWithZone(MEMORY[0x263F8C6D0]);
  swift_retain();
  *(void *)(v15 + 16) = objc_msgSend(v16, sel_init);
  sub_20A8C9C10();
  sub_20A8C8C30();
  swift_release();
  os_log_type_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = a6;
  void v17[3] = a7;
  v17[4] = a8;
  v17[5] = a9;
  v17[6] = v15;
  v17[7] = sub_20A4758CC;
  v17[8] = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_20A8C5D60();
  swift_release();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v20, v20[3]);
  uint64_t result = swift_beginAccess();
  if (*(void *)(v15 + 16))
  {
    id v19 = *(id *)(v15 + 16);
    sub_20A8C59C0();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A4747D4(uint64_t a1, uint64_t a2, void (*a3)(char *))
{
  sub_20A475784();
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C2B70();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, a1, v10);
  uint64_t v11 = &v9[*(int *)(v7 + 56)];
  sub_20A42D93C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, a2, v12);
  a3(v9);
  return sub_20A475B04((uint64_t)v9, (uint64_t (*)(void))sub_20A475784);
}

uint64_t sub_20A474904(uint64_t a1, uint64_t (*a2)(char *), uint64_t a3, uint64_t (*a4)(char *), uint64_t a5, uint64_t a6, void (*a7)(char *, char *), uint64_t a8)
{
  uint64_t v40 = a8;
  uint64_t v41 = a7;
  uint64_t v39 = a6;
  id v45 = a4;
  uint64_t v46 = a5;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A475970(0, &qword_26AC68D50, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v42 = (char *)&v38 - v12;
  uint64_t v13 = sub_20A8C2B70();
  uint64_t v43 = *(void *)(v13 - 8);
  uint64_t v44 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v38 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A475970(0, &qword_26AC69DB0, (uint64_t (*)(uint64_t))sub_20A42D93C, v10);
  MEMORY[0x270FA5388](v15 - 8);
  os_log_type_t v17 = (char *)&v38 - v16;
  sub_20A42D93C();
  uint64_t v19 = v18;
  uint64_t v47 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A47113C();
  MEMORY[0x270FA5388](v22 - 8);
  double v24 = (char *)&v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4759D4(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  uint64_t v26 = v25;
  uint64_t v27 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  double v29 = (char *)&v38 - v28;
  sub_20A50E1C8(a2, a3, v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v26) == 1) {
    return sub_20A475B04((uint64_t)v24, (uint64_t (*)(void))sub_20A47113C);
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v29, v24, v26);
  sub_20A50E698(v45, v46, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v17, 1, v19) == 1)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
    uint64_t v31 = &qword_26AC69DB0;
    uint64_t v32 = sub_20A42D93C;
    return sub_20A475A94((uint64_t)v17, v31, (uint64_t (*)(uint64_t))v32);
  }
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v21, v17, v19);
  sub_20A4759D4(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  os_log_type_t v17 = v42;
  sub_20A8CBB40();
  uint64_t v34 = v43;
  uint64_t v33 = v44;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v17, 1, v44) == 1)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v19);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
    uint64_t v31 = &qword_26AC68D50;
    uint64_t v32 = (void (*)())MEMORY[0x263F07A30];
    return sub_20A475A94((uint64_t)v17, v31, (uint64_t (*)(uint64_t))v32);
  }
  uint64_t v35 = v38;
  uint64_t v36 = (void **)(v39 + 16);
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v38, v17, v33);
  swift_beginAccess();
  uint64_t v37 = *v36;
  char *v36 = 0;

  v41(v35, v21);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v33);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v29, v26);
}

uint64_t sub_20A474E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v14[1] = a2;
  void v14[2] = a1;
  swift_getObjectType();
  uint64_t v4 = sub_20A8CA0D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4759D4(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v14 - v11;
  v14[3] = a3;
  sub_20A475884(&qword_26763AE80, (void (*)(uint64_t))type metadata accessor for StockListViewController);
  sub_20A8C9490();
  sub_20A8CA0C0();
  sub_20A475884(&qword_26AC75330, (void (*)(uint64_t))type metadata accessor for StockListViewController);
  sub_20A8CAE50();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_20A47509C(void *a1)
{
  sub_20A475970(0, &qword_26763AE70, (uint64_t (*)(uint64_t))sub_20A475784, MEMORY[0x263F7D028]);
  swift_allocObject();
  sub_20A8C65E0();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_20A4757F4;
  *(void *)(v3 + 24) = v2;
  id v4 = a1;
  uint64_t v5 = (void *)sub_20A8C6450();
  uint64_t v6 = sub_20A8C6500();
  swift_release();
  swift_release();

  return v6;
}

uint64_t sub_20A475208()
{
  sub_20A4759D4(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  sub_20A8C8820();
  if (v7)
  {
    if (v7 != 1) {
      return 0;
    }
    uint64_t v0 = 0;
  }
  else
  {
    uint64_t v0 = 1;
  }
  sub_20A475B64(v2, v3, v4, v5, v6, v7);
  return v0;
}

void sub_20A475294(uint64_t a1, void (*a2)(id))
{
  sub_20A4756FC();
  sub_20A8CF4E0();
  id v3 = objc_allocWithZone(MEMORY[0x263F7D158]);
  uint64_t v4 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithMessage_, v4);

  a2(v5);
}

uint64_t type metadata accessor for StockFeedMemoryTestSuite()
{
  return self;
}

uint64_t sub_20A475460()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_20A475498(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)sub_20A8CE240();
  id v7 = objc_msgSend(a1, sel_objectForKey_, v6);

  if (v7)
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
    sub_20A441D28(&v14, &v15);
    type metadata accessor for StockListViewController();
    uint64_t v8 = swift_dynamicCast();
    MEMORY[0x270FA5388](v8);
    sub_20A8C6670();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a2;
    *(void *)(v9 + 24) = a3;
    swift_retain();
    uint64_t v10 = (void *)sub_20A8C6450();
    sub_20A8C6500();
    swift_release();
    swift_release();

    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a2;
    *(void *)(v11 + 24) = a3;
    swift_retain();
    uint64_t v12 = (void *)sub_20A8C6450();
    sub_20A8C6550();

    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_20A4756A4()
{
  return sub_20A47509C(*(void **)(v0 + 16));
}

uint64_t sub_20A4756C0()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

void sub_20A4756F4(uint64_t a1)
{
  sub_20A475294(a1, *(void (**)(id))(v1 + 16));
}

unint64_t sub_20A4756FC()
{
  unint64_t result = qword_26AC80150;
  if (!qword_26AC80150)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC80150);
  }
  return result;
}

uint64_t sub_20A475754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A474604(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5], v4[6]);
}

void sub_20A475784()
{
  if (!qword_26763AE78)
  {
    sub_20A8C2B70();
    sub_20A42D93C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763AE78);
    }
  }
}

uint64_t sub_20A4757F4(uint64_t a1, uint64_t a2)
{
  return sub_20A474E74(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_20A4757FC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A475834(uint64_t a1)
{
  id v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  sub_20A475784();
  return v3(a1, a1 + *(int *)(v4 + 48));
}

uint64_t sub_20A475884(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4758CC(uint64_t a1, uint64_t a2)
{
  return sub_20A4747D4(a1, a2, *(void (**)(char *))(v2 + 16));
}

uint64_t sub_20A4758D4()
{
  return swift_deallocObject();
}

uint64_t sub_20A47590C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A47595C(uint64_t a1)
{
  return sub_20A474904(a1, *(uint64_t (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(char *))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void (**)(char *, char *))(v1 + 56), *(void *)(v1 + 64));
}

void sub_20A475970(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A4759D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for StockListSectionDescriptor;
    v8[1] = type metadata accessor for StockListModel(255);
    long long v8[2] = sub_20A42D40C();
    void v8[3] = sub_20A475884(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A475A94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A475970(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A475B04(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A475B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 <= 1u)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_20A475BCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20A8CC470();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_20A475CA4(uint64_t a1)
{
  uint64_t v2 = sub_20A8CC470();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A475D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8CC470();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20A475DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8CC470();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A475E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8CC470();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_20A475EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8CC470();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A475F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A475F5C);
}

uint64_t sub_20A475F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8CC470();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_20A476020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A476034);
}

uint64_t sub_20A476034(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20A8CC470();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CuratedForYouFeedGroup()
{
  uint64_t result = qword_26AC737E8;
  if (!qword_26AC737E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A476140()
{
  uint64_t result = sub_20A8CC470();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A4761D4(void *a1)
{
  sub_20A476B8C(0, &qword_26763AEB8, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A476A78();
  sub_20A8CF8F0();
  v9[15] = 0;
  sub_20A8CC470();
  sub_20A476BF0(&qword_26763AEC0, MEMORY[0x263F59740]);
  sub_20A8CF6E0();
  if (!v1)
  {
    type metadata accessor for CuratedForYouFeedGroup();
    v9[14] = 1;
    sub_20A8CF6B0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_20A4763A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = sub_20A8CC470();
  uint64_t v26 = *(void *)(v4 - 8);
  uint64_t v27 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A476B8C(0, &qword_26763AEA0, MEMORY[0x263F8E040]);
  uint64_t v28 = v7;
  uint64_t v25 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v10 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A476A78();
  sub_20A8CF8E0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v23 = v12;
  uint64_t v13 = v25;
  uint64_t v14 = v26;
  char v30 = 0;
  sub_20A476BF0(&qword_26763AEB0, MEMORY[0x263F59740]);
  uint64_t v15 = v27;
  sub_20A8CF640();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v23, v6, v15);
  char v29 = 1;
  uint64_t v16 = sub_20A8CF620();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v28);
  uint64_t v20 = (uint64_t)v23;
  uint64_t v19 = v24;
  uint64_t v21 = (uint64_t *)&v23[*(int *)(v10 + 20)];
  *uint64_t v21 = v16;
  v21[1] = v18;
  sub_20A476ACC(v20, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20A476B30(v20);
}

uint64_t sub_20A4766E0()
{
  if (*v0) {
    return 0x65707974627573;
  }
  else {
    return 0x724774616D726F66;
  }
}

uint64_t sub_20A476724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A476E44(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A47674C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_20A476758(uint64_t a1)
{
  unint64_t v2 = sub_20A476A78();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A476794(uint64_t a1)
{
  unint64_t v2 = sub_20A476A78();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20A4767D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A4763A0(a1, a2);
}

uint64_t sub_20A4767E8(void *a1)
{
  return sub_20A4761D4(a1);
}

uint64_t sub_20A476818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A476BF0(&qword_26763AE98, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroup);

  return MEMORY[0x270F4FAC8](a1, a2, a3, v6);
}

uint64_t sub_20A4768A0(uint64_t a1)
{
  uint64_t v2 = sub_20A476BF0(&qword_26763AE98, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroup);

  return MEMORY[0x270F4FAB8](a1, v2);
}

uint64_t sub_20A47690C()
{
  return 0x2064657461727543;
}

uint64_t sub_20A4769A0()
{
  return sub_20A476BF0(&qword_26AC67F68, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroup);
}

uint64_t sub_20A4769E8()
{
  return sub_20A476BF0(&qword_26763AE88, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroup);
}

uint64_t sub_20A476A30()
{
  return sub_20A476BF0(&qword_26763AE90, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroup);
}

unint64_t sub_20A476A78()
{
  unint64_t result = qword_26763AEA8;
  if (!qword_26763AEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763AEA8);
  }
  return result;
}

uint64_t sub_20A476ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CuratedForYouFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A476B30(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CuratedForYouFeedGroup();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_20A476B8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A476A78();
    unint64_t v7 = a3(a1, &type metadata for CuratedForYouFeedGroup.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A476BF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CuratedForYouFeedGroup.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A476D04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CuratedForYouFeedGroup.CodingKeys()
{
  return &type metadata for CuratedForYouFeedGroup.CodingKeys;
}

unint64_t sub_20A476D40()
{
  unint64_t result = qword_26763AEC8;
  if (!qword_26763AEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763AEC8);
  }
  return result;
}

unint64_t sub_20A476D98()
{
  unint64_t result = qword_26763AED0;
  if (!qword_26763AED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763AED0);
  }
  return result;
}

unint64_t sub_20A476DF0()
{
  unint64_t result = qword_26763AED8;
  if (!qword_26763AED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763AED8);
  }
  return result;
}

uint64_t sub_20A476E44(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x724774616D726F66 && a2 == 0xEB0000000070756FLL;
  if (v2 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65707974627573 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_20A476F50(id *a1, char a2, uint64_t a3, char *a4)
{
  uint64_t v5 = v4;
  double v10 = *(double *)(a3 + 16);
  double v11 = *(double *)(a3 + 24);
  CGFloat v168 = *(double *)(a3 + 8);
  CGFloat v169 = *(double *)a3;
  sub_20A8CED80();
  objc_msgSend(a4, sel_setCenter_);
  CGFloat v166 = v11;
  CGFloat v167 = v10;
  objc_msgSend(a4, sel_setBounds_, 0.0, 0.0, v10, v11);
  sub_20A478E04(0, (unint64_t *)&qword_26AC80140, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  unint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_20A8D6820;
  *(void *)(v12 + 32) = swift_getKeyPath();
  *(void *)(v12 + 40) = swift_getKeyPath();
  *(void *)(v12 + 48) = swift_getKeyPath();
  *(void *)(v12 + 56) = swift_getKeyPath();
  *(void *)(v12 + 64) = swift_getKeyPath();
  *(void *)(v12 + 72) = swift_getKeyPath();
  *(void *)(v12 + 80) = swift_getKeyPath();
  *(void *)(v12 + 88) = swift_getKeyPath();
  v191[0] = v12;
  sub_20A8CE620();
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_20A8CF540();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((v191[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unsigned int v160 = a2 & 1;
  uint64_t v170 = a1;
  if (v13) {
    unint64_t v14 = sub_20A7BA7C4(v12);
  }
  else {
    unint64_t v14 = MEMORY[0x263F8EE88];
  }
  swift_bridgeObjectRelease();
  sub_20A478404(7, v14, (CGFloat *)a3, a4);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(char **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_titleGroup];
  double v16 = *(double *)(a3 + 128);
  double v17 = *(double *)(a3 + 136);
  double v18 = *(double *)(a3 + 168);
  double v19 = *(double *)(a3 + 176);
  uint64_t v159 = *(void *)(a3 + 184);
  objc_msgSend(v15, sel_setBounds_, 0.0, 0.0, *(double *)(a3 + 80), *(double *)(a3 + 88));
  uint64_t v20 = *(char **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet1];
  double v146 = *(double *)(a3 + 288);
  double v145 = *(double *)(a3 + 296);
  double v147 = *(double *)(a3 + 328);
  double v148 = *(double *)(a3 + 320);
  CGFloat v178 = *(double *)(a3 + 344);
  CGFloat v179 = *(double *)(a3 + 336);
  double v176 = *(double *)(a3 + 360);
  double v177 = *(double *)(a3 + 352);
  objc_msgSend(v20, sel_setBounds_, 0.0, 0.0, *(double *)(a3 + 248), *(double *)(a3 + 256));
  uint64_t v21 = *(char **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet2];
  double v151 = *(double *)(a3 + 424);
  double v150 = *(double *)(a3 + 432);
  double v156 = *(double *)(a3 + 456);
  double v153 = *(double *)(a3 + 464);
  CGFloat v182 = *(double *)(a3 + 480);
  CGFloat v183 = *(double *)(a3 + 472);
  double v180 = *(double *)(a3 + 496);
  double v181 = *(double *)(a3 + 488);
  objc_msgSend(v21, sel_setBounds_, 0.0, 0.0, *(double *)(a3 + 384), *(double *)(a3 + 392));
  long long v165 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_footer];
  objc_msgSend(v165, sel_setBounds_, 0.0, 0.0, *(double *)(a3 + 664), *(double *)(a3 + 672));
  uint64_t v163 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10TitleGroup_appIcon;
  id v22 = *(id *)&v15[OBJC_IVAR____TtCC8StocksUI11WelcomeView10TitleGroup_appIcon];
  sub_20A8CED80();
  objc_msgSend(v22, sel_setCenter_);
  objc_msgSend(v22, sel_setBounds_, 0.0, 0.0, v16, v17);

  uint64_t v174 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10TitleGroup_welcomeLabel;
  CGFloat v175 = v15;
  id v23 = *(id *)&v15[OBJC_IVAR____TtCC8StocksUI11WelcomeView10TitleGroup_welcomeLabel];
  sub_20A8CED80();
  objc_msgSend(v23, sel_setCenter_);
  objc_msgSend(v23, sel_setBounds_, 0.0, 0.0, v18, v19);

  uint64_t v24 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_scrollView];
  double v25 = *(double *)(a3 + 48);
  double v26 = *(double *)(a3 + 56);
  sub_20A8CED80();
  objc_msgSend(v24, sel_setCenter_);
  id v164 = v24;
  objc_msgSend(v24, sel_setBounds_, 0.0, 0.0, v25, v26);
  uint64_t v27 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_activityIndicator];
  double v28 = *(double *)(a3 + 208);
  double v29 = *(double *)(a3 + 216);
  sub_20A8CED80();
  objc_msgSend(v27, sel_setCenter_);
  id v162 = v27;
  objc_msgSend(v27, sel_setBounds_, 0.0, 0.0, v28, v29);
  uint64_t v161 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_image;
  id v30 = *(id *)&v20[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_image];
  sub_20A8CED80();
  objc_msgSend(v30, sel_setCenter_);
  objc_msgSend(v30, sel_setBounds_, 0.0, 0.0, v146, v145);

  uint64_t v173 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title;
  id v31 = *(id *)&v20[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title];
  sub_20A8CED80();
  objc_msgSend(v31, sel_setCenter_);
  objc_msgSend(v31, sel_setBounds_, 0.0, 0.0, v148, v147);

  uint64_t v184 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb;
  id v32 = *(id *)&v20[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb];
  sub_20A8CED80();
  objc_msgSend(v32, sel_setCenter_);
  objc_msgSend(v32, sel_setBounds_, 0.0, 0.0, v177, v176);

  uint64_t v149 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_image;
  id v33 = *(id *)&v21[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_image];
  sub_20A8CED80();
  objc_msgSend(v33, sel_setCenter_);
  objc_msgSend(v33, sel_setBounds_, 0.0, 0.0, v151, v150);

  uint64_t v171 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title;
  id v34 = *(id *)&v21[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title];
  sub_20A8CED80();
  objc_msgSend(v34, sel_setCenter_);
  objc_msgSend(v34, sel_setBounds_, 0.0, 0.0, v156, v153);

  long long v185 = v21;
  uint64_t v172 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb;
  id v35 = *(id *)&v21[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb];
  sub_20A8CED80();
  objc_msgSend(v35, sel_setCenter_);
  objc_msgSend(v35, sel_setBounds_, 0.0, 0.0, v181, v180);

  sub_20A478D84(a3 + 504, (uint64_t)v189, &qword_26763AEE0, (uint64_t)&type metadata for WelcomeViewBulletLayoutAttributes);
  sub_20A478D84((uint64_t)v189, (uint64_t)v191, &qword_26763AEE0, (uint64_t)&type metadata for WelcomeViewBulletLayoutAttributes);
  if (sub_20A478D68((uint64_t)v191) != 1)
  {
    double v36 = *(double *)&v191[7];
    double v37 = *(double *)&v191[8];
    double v38 = *(double *)&v191[11];
    double v39 = *(double *)&v191[12];
    double v152 = *(double *)&v191[16];
    double v154 = *(double *)&v191[15];
    uint64_t v40 = *(char **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3];
    objc_msgSend(v40, sel_setBounds_, 0.0, 0.0, *(double *)&v191[2], *(double *)&v191[3]);
    id v41 = *(id *)&v40[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_image];
    sub_20A8CED80();
    objc_msgSend(v41, sel_setCenter_);
    objc_msgSend(v41, sel_setBounds_, 0.0, 0.0, v36, v37);

    id v42 = *(id *)&v40[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title];
    sub_20A8CED80();
    objc_msgSend(v42, sel_setCenter_);
    objc_msgSend(v42, sel_setBounds_, 0.0, 0.0, v38, v39);

    id v43 = *(id *)&v40[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb];
    sub_20A8CED80();
    objc_msgSend(v43, sel_setCenter_);
    objc_msgSend(v43, sel_setBounds_, 0.0, 0.0, v154, v152);
  }
  uint64_t v44 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_privacyLink];
  uint64_t v158 = v44;
  double v45 = *(double *)(a3 + 768);
  double v46 = *(double *)(a3 + 776);
  sub_20A8CED80();
  objc_msgSend(v44, sel_setCenter_);
  objc_msgSend(v44, sel_setBounds_, 0.0, 0.0, v45, v46);
  uint64_t v47 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_privacyIcon];
  uint64_t v157 = v47;
  double v48 = *(double *)(a3 + 736);
  double v49 = *(double *)(a3 + 744);
  sub_20A8CED80();
  objc_msgSend(v47, sel_setCenter_);
  objc_msgSend(v47, sel_setBounds_, 0.0, 0.0, v48, v49);
  uint64_t v50 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_continueButton];
  double v51 = *(double *)(a3 + 704);
  double v52 = *(double *)(a3 + 712);
  sub_20A8CED80();
  uint64_t v155 = v50;
  objc_msgSend(v50, sel_setCenter_);
  objc_msgSend(v50, sel_setBounds_, 0.0, 0.0, v51, v52);
  uint64_t v53 = v5[5];
  uint64_t v54 = v5[6];
  __swift_project_boxed_opaque_existential_1(v5 + 2, v53);
  id v55 = objc_msgSend(a4, sel_traitCollection);
  uint64_t v56 = *(void *)(v54 + 8);
  uint64_t v57 = *(void (**)(id, uint64_t, uint64_t))(v56 + 8);
  v190[3] = v53;
  v190[4] = v54;
  __swift_allocate_boxed_opaque_existential_1(v190);
  v57(v55, v53, v56);

  (*(void (**)(void *__return_ptr, void, uint64_t, uint64_t))(v54 + 16))(v186, v160, v53, v54);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v190);
  objc_msgSend(*(id *)&v175[v174], sel_setAttributedText_, v159);
  uint64_t v58 = *(void **)&v20[v173];
  __swift_project_boxed_opaque_existential_1(v186, v187);
  id v59 = v58;
  id v60 = sub_20A79F664();
  objc_msgSend(v59, (SEL)&off_263FDE098, v60);

  uint64_t v61 = *(void **)&v20[v184];
  __swift_project_boxed_opaque_existential_1(v186, v187);
  id v62 = v61;
  id v63 = sub_20A79F9A8();
  objc_msgSend(v62, (SEL)&off_263FDE098, v63);

  uint64_t v64 = *(void **)&v185[v171];
  __swift_project_boxed_opaque_existential_1(v186, v187);
  id v65 = v64;
  uint64_t v66 = v20;
  id v67 = v65;
  id v68 = sub_20A79F664();
  objc_msgSend(v67, sel_setAttributedText_, v68);

  uint64_t v69 = *(void **)&v185[v172];
  __swift_project_boxed_opaque_existential_1(v186, v187);
  id v70 = v69;
  id v71 = sub_20A79F9A8();
  objc_msgSend(v70, sel_setAttributedText_, v71);

  __swift_project_boxed_opaque_existential_1(v186, v187);
  id v72 = sub_20A79FD04();
  objc_msgSend(v155, sel_setAttributedTitle_forState_, v72, 0);

  id v73 = objc_msgSend(v170[20], sel_imageWithRenderingMode_, 2);
  objc_msgSend(v157, sel_setImage_, v73);

  objc_msgSend(v157, sel_setIsAccessibilityElement_, 1);
  id v74 = objc_msgSend(self, sel_mainBundle);
  sub_20A8C2370();

  uint64_t v75 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v157, sel_setAccessibilityLabel_, v75, 0x800000020A8FAA40);

  __swift_project_boxed_opaque_existential_1(v186, v187);
  uint64_t v76 = (void *)sub_20A7A002C(v170[19]);
  objc_msgSend(v158, sel_setAttributedText_, v76);

  uint64_t v77 = __swift_project_boxed_opaque_existential_1(v186, v187);
  uint64_t v78 = *(void *)(*v77 + 40);
  uint64_t v79 = *(void *)(*v77 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v77 + 16), v78);
  uint64_t v80 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v79 + 16) + 48))(v78);
  objc_msgSend(a4, sel_setBackgroundColor_, v80);

  id v81 = *(id *)&v175[v163];
  objc_msgSend(v81, sel_frame);
  double v83 = v82;
  double v85 = v84;
  id v86 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v86, sel_scale);
  double v88 = v87;

  id v89 = sub_20A4743D4(v83, v85, v88);
  objc_msgSend(v81, sel_setImage_, v89);

  objc_msgSend(*(id *)&v175[v174], sel_setNumberOfLines_, 0);
  uint64_t v90 = __swift_project_boxed_opaque_existential_1(v186, v187);
  uint64_t v91 = *(void *)(*v90 + 40);
  uint64_t v92 = *(void *)(*v90 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v90 + 16), v91);
  uint64_t v93 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v92 + 16) + 40))(v91);
  objc_msgSend(v162, sel_setColor_, v93);

  uint64_t v94 = *__swift_project_boxed_opaque_existential_1(v186, v187);
  id v95 = *(id *)&v20[v161];
  objc_msgSend(v95, sel_setContentMode_, 4);
  if (qword_2676398D8 != -1) {
    swift_once();
  }
  id v96 = objc_msgSend((id)qword_267652CD8, sel_imageWithConfiguration_, *(void *)(v94 + 128));
  objc_msgSend(v95, sel_setImage_, v96);

  objc_msgSend(*(id *)&v20[v173], sel_setNumberOfLines_, 0);
  uint64_t v97 = v184;
  objc_msgSend(*(id *)&v20[v184], (SEL)&off_263FDE318, 0);
  __swift_project_boxed_opaque_existential_1(v186, v187);
  sub_20A7A0EB0(v155);
  uint64_t v98 = __swift_project_boxed_opaque_existential_1(v186, v187);
  uint64_t v99 = *(void *)(*v98 + 40);
  uint64_t v100 = *(void *)(*v98 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v98 + 16), v99);
  double v101 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v100 + 16) + 96))(v99);
  objc_msgSend(v157, sel_setTintColor_, v101);

  sub_20A7A8694(v158);
  __swift_project_boxed_opaque_existential_1(v186, v187);
  objc_msgSend(v164, sel_contentSize);
  double v103 = v102;
  v193.origin.CGFloat y = v168;
  v193.origin.CGFloat x = v169;
  v193.size.CGFloat height = v166;
  v193.size.CGFloat width = v167;
  char v104 = CGRectGetHeight(v193) < v103;
  sub_20A7A0FE0(v165, v104);
  sub_20A478D84((uint64_t)(v170 + 13), (uint64_t)v188, &qword_26763AEE8, (uint64_t)&type metadata for WelcomeModel.Bullet);
  sub_20A478D84((uint64_t)v188, (uint64_t)v192, &qword_26763AEE8, (uint64_t)&type metadata for WelcomeModel.Bullet);
  if (v192[1] && (int v105 = *(unsigned __int8 *)v170, v105 != 2))
  {
    uint64_t v110 = *(void *)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3];
    uint64_t v111 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title;
    CGFloat v112 = *(void **)(v110 + OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title);
    __swift_project_boxed_opaque_existential_1(v186, v187);
    id v113 = v112;
    id v114 = sub_20A79F664();
    objc_msgSend(v113, sel_setAttributedText_, v114);

    uint64_t v115 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb;
    CGFloat v116 = *(void **)(v110 + OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb);
    __swift_project_boxed_opaque_existential_1(v186, v187);
    id v117 = v116;
    id v118 = sub_20A79F9A8();
    objc_msgSend(v117, sel_setAttributedText_, v118);

    __swift_project_boxed_opaque_existential_1(v186, v187);
    id v119 = *(id *)&v185[v149];
    uint64_t v66 = v20;
    sub_20A7A0BD0(v119, v105 & 1);

    objc_msgSend(*(id *)&v185[v171], sel_setNumberOfLines_, 0);
    uint64_t v109 = v172;
    objc_msgSend(*(id *)&v185[v172], sel_setNumberOfLines_, 0);
    __swift_project_boxed_opaque_existential_1(v186, v187);
    id v120 = *(id *)(v110 + OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_image);
    sub_20A7A0CD4(v120, v105);

    CGFloat v121 = *(void **)(v110 + v111);
    uint64_t v97 = v184;
    uint64_t v106 = v185;
    objc_msgSend(v121, sel_setNumberOfLines_, 0);
    objc_msgSend(*(id *)(v110 + v115), sel_setNumberOfLines_, 0);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v186, v187);
    uint64_t v106 = v185;
    unsigned __int8 v107 = *(unsigned char *)v170;
    id v108 = *(id *)&v185[v149];
    sub_20A7A0CD4(v108, v107);

    objc_msgSend(*(id *)&v185[v171], sel_setNumberOfLines_, 0);
    uint64_t v109 = v172;
    objc_msgSend(*(id *)&v185[v172], sel_setNumberOfLines_, 0);
    uint64_t v110 = *(void *)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3];
    objc_msgSend(*(id *)(v110 + OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_image), sel_setHidden_, 1);
    objc_msgSend(*(id *)(v110 + OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title), sel_setHidden_, 1);
    objc_msgSend(*(id *)(v110 + OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb), sel_setHidden_, 1);
  }
  CGFloat v122 = *(void **)&v66[v97];
  objc_msgSend(v122, sel_sizeToFit);
  id v123 = v122;
  objc_msgSend(v123, sel_frame);
  v194.origin.CGFloat y = v178;
  v194.origin.CGFloat x = v179;
  v194.size.CGFloat height = v176;
  v194.size.CGFloat width = v177;
  CGRectGetWidth(v194);
  sub_20A8CEDA0();
  double v125 = v124;
  double v127 = v126;
  sub_20A8CED80();
  objc_msgSend(v123, sel_setCenter_);
  objc_msgSend(v123, sel_setBounds_, 0.0, 0.0, v125, v127);

  CGFloat v128 = *(void **)&v106[v109];
  objc_msgSend(v128, sel_sizeToFit);
  id v129 = v128;
  objc_msgSend(v129, sel_frame);
  v195.origin.CGFloat y = v182;
  v195.origin.CGFloat x = v183;
  v195.size.CGFloat height = v180;
  v195.size.CGFloat width = v181;
  CGRectGetWidth(v195);
  sub_20A8CEDA0();
  double v131 = v130;
  double v133 = v132;
  sub_20A8CED80();
  objc_msgSend(v129, sel_setCenter_);
  objc_msgSend(v129, sel_setBounds_, 0.0, 0.0, v131, v133);

  uint64_t v134 = *(void **)(v110 + OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb);
  objc_msgSend(v134, sel_sizeToFit);
  sub_20A478D84((uint64_t)v189, (uint64_t)v190, &qword_26763AEE0, (uint64_t)&type metadata for WelcomeViewBulletLayoutAttributes);
  if (sub_20A478D68((uint64_t)v190) != 1)
  {
    CGFloat v135 = *(double *)&v190[13];
    CGFloat v136 = *(double *)&v190[14];
    CGFloat v137 = *(double *)&v190[15];
    CGFloat v138 = *(double *)&v190[16];
    id v139 = v134;
    objc_msgSend(v139, sel_frame);
    v196.origin.CGFloat x = v135;
    v196.origin.CGFloat y = v136;
    v196.size.CGFloat width = v137;
    v196.size.CGFloat height = v138;
    CGRectGetWidth(v196);
    sub_20A8CEDA0();
    double v141 = v140;
    double v143 = v142;
    sub_20A8CED80();
    objc_msgSend(v139, sel_setCenter_);
    objc_msgSend(v139, sel_setBounds_, 0.0, 0.0, v141, v143);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v186);
}

id sub_20A478404(char a1, uint64_t a2, CGFloat *a3, char *a4)
{
  uint64_t KeyPath = swift_getKeyPath();
  char v10 = sub_20A444530(KeyPath, a2);
  swift_release();
  if (v10)
  {
    double v12 = a3[12];
    CGFloat v11 = a3[13];
    sub_20A8CED80();
    uint64_t v13 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_titleGroup];
    if (a1)
    {
      objc_msgSend(*(id *)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_titleGroup], sel_setCenter_);
      *(void *)&CGFloat y = a1 & 2;
      if ((a1 & 2) == 0)
      {
LABEL_4:
        if ((a1 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_9;
      }
    }
    else
    {
      *(void *)&CGFloat y = a1 & 2;
      if ((a1 & 2) == 0) {
        goto LABEL_4;
      }
    }
    objc_msgSend(v13, sel_setAlpha_, v12);
    if ((a1 & 4) != 0)
    {
LABEL_9:
      CGAffineTransformMakeScale(&v65, v11, v11);
      objc_msgSend(v13, sel_setTransform_, &v65);
    }
  }
  else
  {
    *(void *)&CGFloat y = a1 & 2;
  }
LABEL_10:
  uint64_t v15 = swift_getKeyPath();
  char v16 = sub_20A444530(v15, a2);
  swift_release();
  if ((v16 & 1) != 0 && y != 0.0) {
    objc_msgSend(*(id *)(*(void *)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_titleGroup]+ OBJC_IVAR____TtCC8StocksUI11WelcomeView10TitleGroup_appIcon), sel_setAlpha_, a3[18]);
  }
  uint64_t v17 = swift_getKeyPath();
  char v18 = sub_20A444530(v17, a2);
  swift_release();
  if (v18)
  {
    double v19 = a3[33];
    sub_20A8CED80();
    uint64_t v20 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet1];
    if (a1) {
      objc_msgSend(*(id *)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet1], sel_setCenter_);
    }
    if (y != 0.0) {
      objc_msgSend(v20, sel_setAlpha_, v19);
    }
  }
  uint64_t v21 = swift_getKeyPath();
  char v22 = sub_20A444530(v21, a2);
  swift_release();
  if (v22)
  {
    double v23 = a3[50];
    sub_20A8CED80();
    uint64_t v24 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet2];
    if (a1) {
      objc_msgSend(*(id *)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet2], sel_setCenter_);
    }
    if (y != 0.0) {
      objc_msgSend(v24, sel_setAlpha_, v23);
    }
  }
  uint64_t v25 = swift_getKeyPath();
  char v26 = sub_20A444530(v25, a2);
  swift_release();
  if (v26)
  {
    sub_20A478D84((uint64_t)(a3 + 63), (uint64_t)v64, &qword_26763AEE0, (uint64_t)&type metadata for WelcomeViewBulletLayoutAttributes);
    sub_20A478D84((uint64_t)v64, (uint64_t)&v65, &qword_26763AEE0, (uint64_t)&type metadata for WelcomeViewBulletLayoutAttributes);
    if (sub_20A478D68((uint64_t)&v65) != 1)
    {
      tCGFloat x = v65.tx;
      sub_20A8CED80();
      double v28 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3];
      if (a1) {
        objc_msgSend(*(id *)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3], sel_setCenter_);
      }
      if (y != 0.0) {
        objc_msgSend(v28, sel_setAlpha_, tx);
      }
    }
  }
  uint64_t v29 = swift_getKeyPath();
  char v30 = sub_20A444530(v29, a2);
  swift_release();
  if (v30)
  {
    sub_20A8CED80();
    id v31 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_footer];
    if (a1) {
      objc_msgSend(v31, sel_setCenter_);
    }
    if (y != 0.0) {
      objc_msgSend(v31, sel_setAlpha_, a3[85]);
    }
  }
  uint64_t v32 = swift_getKeyPath();
  char v33 = sub_20A444530(v32, a2);
  swift_release();
  if (v33)
  {
    id v34 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_scrollView];
    double v55 = a3[84];
    sub_20A478D84((uint64_t)(a3 + 63), (uint64_t)v62, &qword_26763AEE0, (uint64_t)&type metadata for WelcomeViewBulletLayoutAttributes);
    sub_20A478D84((uint64_t)v62, (uint64_t)v63, &qword_26763AEE0, (uint64_t)&type metadata for WelcomeViewBulletLayoutAttributes);
    rect.origin.CGFloat y = y;
    if (sub_20A478D68((uint64_t)v63) == 1)
    {
      CGFloat height = a3[46];
      CGFloat v36 = a3[47];
      CGFloat v37 = a3[48];
      CGFloat v38 = a3[49];
    }
    else
    {
      sub_20A478D84((uint64_t)v62, (uint64_t)&rect.size.height, &qword_26763AEE0, (uint64_t)&type metadata for WelcomeViewBulletLayoutAttributes);
      CGFloat height = rect.size.height;
      CGFloat v36 = v58;
      CGFloat v37 = v59;
      CGFloat v38 = v60;
    }
    CGFloat v39 = a3[1];
    rect.origin.CGFloat x = *a3;
    v66.origin.CGFloat x = rect.origin.x;
    CGFloat v40 = a3[2];
    CGFloat v41 = a3[3];
    v66.origin.CGFloat y = v39;
    v66.size.CGFloat width = v40;
    v66.size.CGFloat height = v41;
    double Width = CGRectGetWidth(v66);
    v67.origin.CGFloat x = height;
    v67.origin.CGFloat y = v36;
    v67.size.CGFloat width = v37;
    v67.size.CGFloat height = v38;
    objc_msgSend(v34, sel_setContentSize_, Width, v55 + CGRectGetMaxY(v67) + 10.0);
    uint64_t v43 = v4[5];
    uint64_t v44 = v4[6];
    __swift_project_boxed_opaque_existential_1(v4 + 2, v43);
    id v45 = objc_msgSend(a4, sel_traitCollection);
    id v56 = v34;
    uint64_t v46 = *(void *)(v44 + 8);
    uint64_t v47 = *(void (**)(id, uint64_t, uint64_t))(v46 + 8);
    v61[3] = v43;
    v61[4] = v44;
    __swift_allocate_boxed_opaque_existential_1(v61);
    v47(v45, v43, v46);

    (*(void (**)(CGFloat *__return_ptr, void, uint64_t, uint64_t))(v44 + 16))(&rect.size.height, 0, v43, v44);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
    __swift_project_boxed_opaque_existential_1(&rect.size.height, *(uint64_t *)&v60);
    double v48 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_footer];
    objc_msgSend(v56, sel_contentSize);
    double v50 = v49;
    v68.origin.CGFloat x = rect.origin.x;
    v68.origin.CGFloat y = v39;
    v68.size.CGFloat width = v40;
    v68.size.CGFloat height = v41;
    char v51 = CGRectGetHeight(v68) < v50;
    sub_20A7A0FE0(v48, v51);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&rect.size.height);
    CGFloat y = rect.origin.y;
  }
  uint64_t v52 = swift_getKeyPath();
  char v53 = sub_20A444530(v52, a2);
  id result = (id)swift_release();
  if ((v53 & 1) != 0 && y != 0.0) {
    return objc_msgSend(*(id *)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_activityIndicator], sel_setAlpha_, a3[28]);
  }
  return result;
}

void sub_20A478A34(uint64_t a1, double *a2, char *a3)
{
  uint64_t v6 = sub_20A8C8380();
  uint64_t v26 = *(void *)(v6 - 8);
  uint64_t v27 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v25 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C7FE0();
  MEMORY[0x270FA5388](v8 - 8);
  double v9 = *a2;
  double v10 = a2[1];
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, *MEMORY[0x263F83570]);
  objc_msgSend(v11, sel_scaledValueForValue_, 175.0);
  double v13 = v12;

  if (v13 > 225.0) {
    double v13 = 225.0;
  }
  sub_20A8CD240();
  uint64_t v15 = v3[5];
  uint64_t v14 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v15);
  id v16 = objc_msgSend(a3, sel_traitCollection);
  uint64_t v17 = *(void *)(v14 + 8);
  char v18 = *(void (**)(id, uint64_t, uint64_t))(v17 + 8);
  v29[3] = v15;
  v29[4] = v14;
  __swift_allocate_boxed_opaque_existential_1(v29);
  v18(v16, v15, v17);

  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v14 + 24))(v28, v15, v14);
  id v19 = objc_allocWithZone((Class)sub_20A8CBBF0());
  uint64_t v20 = (void *)sub_20A8CBBE0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  id v21 = v20;
  objc_msgSend(a3, sel_frame);
  objc_msgSend(v21, sel_setFrame_, 0.0, v10 - v13 - CGRectGetMinY(v30), v9, v13);

  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v25, *MEMORY[0x263F7D2F8], v27);
  sub_20A8CBBD0();
  char v22 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI11WelcomeView_errorView];
  *(void *)&a3[OBJC_IVAR____TtC8StocksUI11WelcomeView_errorView] = v21;
  id v23 = v21;
  sub_20A66F46C(v22);

  objc_msgSend(*(id *)&a3[OBJC_IVAR____TtC8StocksUI11WelcomeView_activityIndicator], sel_setHidden_, 1);
}

uint64_t type metadata accessor for WelcomeViewRenderer()
{
  return self;
}

uint64_t sub_20A478D68(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 136)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_20A478D84(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_20A478E04(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_20A478E04(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t type metadata accessor for ManageWatchlistsBlueprintModifierFactory()
{
  return self;
}

uint64_t sub_20A478E78()
{
  return sub_20A479620((unint64_t *)&unk_26763D170, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsModel);
}

uint64_t sub_20A478EC0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ManageWatchlistsReloadBlueprintModifier();
  MEMORY[0x270FA5388](v3);
  unint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (uint64_t *)((char *)&v12 - v7);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v1 + 16), *(void *)(*(void *)v1 + 40));
  uint64_t v9 = sub_20A8C3690();
  sub_20A4795B8(a1, (uint64_t)v8 + *(int *)(v3 + 24), type metadata accessor for ManageWatchlistsContentMode);
  *uint64_t v8 = 0x64616F6C6552;
  v8[1] = 0xE600000000000000;
  long long v8[2] = v9;
  sub_20A4795B8((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsReloadBlueprintModifier);
  sub_20A4794AC();
  swift_allocObject();
  sub_20A479620(&qword_26763AF10, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsReloadBlueprintModifier);
  uint64_t v10 = sub_20A8C8BA0();
  sub_20A479668((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsReloadBlueprintModifier);
  return v10;
}

uint64_t sub_20A47906C()
{
  return sub_20A8C8BA0();
}

uint64_t sub_20A479100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ManageWatchlistsMoveWatchlistBlueprintModifier();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  id v11 = (char *)&v17 - v10;
  double v13 = (char *)&v17 + *(int *)(v12 + 20) - v10;
  uint64_t v14 = sub_20A8C40E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v13, a1, v14);
  strcpy(v11, "MoveWatchlist");
  *((_WORD *)v11 + 7) = -4864;
  *(void *)&v11[*(int *)(v6 + 24)] = a2;
  *(void *)&v11[*(int *)(v6 + 28)] = a3;
  sub_20A4795B8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsMoveWatchlistBlueprintModifier);
  sub_20A4794AC();
  swift_allocObject();
  sub_20A479620(&qword_26763AF00, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsMoveWatchlistBlueprintModifier);
  swift_retain();
  uint64_t v15 = sub_20A8C8BA0();
  sub_20A479668((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsMoveWatchlistBlueprintModifier);
  return v15;
}

uint64_t sub_20A4792D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ManageWatchlistsRenameWatchlistBlueprintModifier();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (uint64_t *)((char *)&v15 - v8);
  id v11 = (char *)&v15 + *(int *)(v10 + 20) - v8;
  uint64_t v12 = sub_20A8C40E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, a1, v12);
  sub_20A4795B8(a2, (uint64_t)v9 + *(int *)(v4 + 24), type metadata accessor for ManageWatchlistsContentMode);
  *uint64_t v9 = 0x6157656D616E6552;
  v9[1] = 0xEF7473696C686374;
  sub_20A4795B8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsRenameWatchlistBlueprintModifier);
  sub_20A4794AC();
  swift_allocObject();
  sub_20A479620(&qword_26763AEF8, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsRenameWatchlistBlueprintModifier);
  uint64_t v13 = sub_20A8C8BA0();
  sub_20A479668((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsRenameWatchlistBlueprintModifier);
  return v13;
}

void sub_20A4794AC()
{
  if (!qword_26763AEF0)
  {
    type metadata accessor for ManageWatchlistsModel();
    sub_20A42D7D4();
    sub_20A479620((unint64_t *)&unk_26763D170, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsModel);
    unint64_t v0 = sub_20A8C8BB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763AEF0);
    }
  }
}

unint64_t sub_20A479564()
{
  unint64_t result = qword_26763AF08;
  if (!qword_26763AF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763AF08);
  }
  return result;
}

uint64_t sub_20A4795B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A479620(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A479668(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A4796C8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20A4342F4((uint64_t)a1, (uint64_t)v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = type metadata accessor for ManageWatchlistsModule();
    uint64_t v7 = swift_allocObject();
    uint64_t result = sub_20A42BEBC(v8, v7 + 16);
    *(void *)(v7 + 56) = v5;
    a2[3] = v6;
    a2[4] = (uint64_t)&off_26BE63008;
    *a2 = v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A479778@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC78FA8);
  uint64_t result = sub_20A8C5BB0();
  if (v24)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t WatchlistViewStyler = type metadata accessor for CreateWatchlistViewStyler();
    v22[3] = WatchlistViewStyler;
    v22[4] = &off_26BE62870;
    v22[0] = v9;
    type metadata accessor for CreateWatchlistViewRenderer();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, WatchlistViewStyler);
    double v13 = MEMORY[0x270FA5388](v12);
    uint64_t v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
    uint64_t v17 = *v15;
    uint64_t v20 = WatchlistViewStyler;
    id v21 = &off_26BE62870;
    *(void *)&long long v19 = v17;
    sub_20A42BEBC(&v19, v11 + 16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    uint64_t result = sub_20A47FA40(&qword_26763B080, (void (*)(uint64_t))type metadata accessor for CreateWatchlistViewRenderer);
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A4799D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A479EE4(a1, (uint64_t (*)(void))type metadata accessor for CreateWatchlistViewStyler, (uint64_t (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_20A431A50, (uint64_t)&off_26BE62870, a2);
}

uint64_t sub_20A479A08@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC78FA8);
  uint64_t result = sub_20A8C5BB0();
  if (v21)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t WatchlistViewStyler = type metadata accessor for CreateWatchlistViewStyler();
    v19[3] = WatchlistViewStyler;
    v19[4] = &off_26BE62870;
    v19[0] = v9;
    WatchlistViewLayoutAttributesFactorCGFloat y = type metadata accessor for CreateWatchlistViewLayoutAttributesFactory();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, WatchlistViewStyler);
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    v12[5] = WatchlistViewStyler;
    void v12[6] = &off_26BE62870;
    v12[2] = v18;
    sub_20A47F9D8();
    swift_allocObject();
    v12[7] = sub_20A8C63C0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = WatchlistViewLayoutAttributesFactory;
    a2[4] = &off_26BE6D808;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A479C54@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC78220);
  uint64_t result = sub_20A8C5BB0();
  if (v24)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for WatchlistCellViewStyler();
    v22[3] = v10;
    v22[4] = &off_26BE69730;
    v22[0] = v9;
    type metadata accessor for WatchlistCellViewRenderer();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v10);
    double v13 = MEMORY[0x270FA5388](v12);
    uint64_t v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
    uint64_t v17 = *v15;
    uint64_t v20 = v10;
    uint64_t v21 = &off_26BE69730;
    *(void *)&long long v19 = v17;
    sub_20A42BEBC(&v19, v11 + 16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    uint64_t result = sub_20A47FA40(&qword_26763B070, (void (*)(uint64_t))type metadata accessor for WatchlistCellViewRenderer);
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A479EB0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A479EE4(a1, (uint64_t (*)(void))type metadata accessor for WatchlistCellViewStyler, (uint64_t (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_20A65C760, (uint64_t)&off_26BE69730, a2);
}

uint64_t sub_20A479EE4@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(unsigned char *, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v10 = v21;
  if (v21)
  {
    uint64_t v11 = a2(0);
    uint64_t v12 = v22;
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = &v20[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = a3(v16, v11, v10, v12);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a5[3] = v11;
    a5[4] = a4;
    *a5 = v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A47A058@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC78220);
  uint64_t result = sub_20A8C5BB0();
  if (v21)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for WatchlistCellViewStyler();
    v19[3] = v10;
    v19[4] = &off_26BE69730;
    v19[0] = v9;
    uint64_t v11 = type metadata accessor for WatchlistCellViewLayoutAttributesFactory();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    v12[5] = v10;
    void v12[6] = &off_26BE69730;
    v12[2] = v18;
    sub_20A47F970();
    swift_allocObject();
    v12[7] = sub_20A8C63C0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_26BE61F58;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A47A2A4()
{
  type metadata accessor for ManageWatchlistsViewController();
  sub_20A8C6290();
  swift_release();
  sub_20A4301D4(0, &qword_26763AF18);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26763AF20);
  sub_20A8C62A0();
  type metadata accessor for ManageWatchlistsRouter();
  sub_20A8C5990();
  swift_release();
  swift_release();
  sub_20A4301D4(0, &qword_26763AF28);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26763AF30);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26763AF38);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26763AF40);
  sub_20A8C62A0();
  swift_release();
  sub_20A47E308(0);
  sub_20A8C6290();
  swift_release();
  type metadata accessor for ManageWatchlistsBlueprintModifierFactory();
  sub_20A8C6290();
  swift_release();
  sub_20A47E328();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  sub_20A47EBAC();
  sub_20A8C6290();
  swift_release();
  sub_20A47E414();
  sub_20A8C6290();
  swift_release();
  sub_20A47E6C0();
  sub_20A8C6290();
  swift_release();
  type metadata accessor for ManageWatchlistsBlueprintLayoutBuilder();
  sub_20A8C6290();
  swift_release();
  sub_20A47EC98();
  sub_20A8C6290();
  swift_release();
  sub_20A42CFF0(0, (unint64_t *)&unk_26AC82DC8);
  sub_20A8C6290();
  swift_release();
  sub_20A47E51C();
  sub_20A8C6290();
  swift_release();
  sub_20A4301D4(0, &qword_26AC6A8A0);
  sub_20A8C62A0();
  sub_20A8CA7F0();
  sub_20A8C5990();
  swift_release();
  swift_release();
  sub_20A47E7E0(0, &qword_26763AF68, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewCellProvider, sub_20A47E7AC, MEMORY[0x263F7DC88]);
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  sub_20A47E7E0(0, &qword_26763AF88, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewHeaderFooterProvider, sub_20A47E954, MEMORY[0x263F7DC08]);
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  sub_20A47E988();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  type metadata accessor for ManageWatchlistsBlueprintViewCellProvider();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  type metadata accessor for ManageWatchlistsBlueprintViewHeaderFooterProvider();
  sub_20A8C6290();
  swift_release();
  sub_20A47EF28(0, &qword_26763AFE0, MEMORY[0x263F7DBD0]);
  sub_20A8C6290();
  swift_release();
  sub_20A8C8D70();
  sub_20A8C6290();
  swift_release();
  sub_20A47EDD4();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  sub_20A8C9F60();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  sub_20A4301D4(0, &qword_26AC6A970);
  sub_20A8C62A0();

  return swift_release();
}

uint64_t sub_20A47ABA8(void *a1)
{
  sub_20A47EFC4();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26763AF18);
  uint64_t result = sub_20A8C5BB0();
  if (!v35)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26763AF28);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v6 = v32;
  if (!v32)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v7 = v33;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47EC98();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v8 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v9 = type metadata accessor for ManageWatchlistsContentMode(0);
  sub_20A8C5BB0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v4, 1, v9);
  if (result == 1)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v26 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v10 = v30;
  if (v30)
  {
    uint64_t v11 = v31;
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
    double v13 = MEMORY[0x270FA5388](v12);
    uint64_t v15 = (uint64_t *)((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
    uint64_t v17 = *v15;
    uint64_t v28 = type metadata accessor for ManageWatchlistsStyler();
    uint64_t v29 = &off_26BE5FCE8;
    v27[0] = v17;
    uint64_t v18 = (char *)objc_allocWithZone((Class)type metadata accessor for ManageWatchlistsViewController());
    uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
    double v20 = MEMORY[0x270FA5388](v19);
    uint64_t v22 = (uint64_t *)((char *)&v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v23 + 16))(v22, v20);
    uint64_t v24 = sub_20A47F288(*v22, v6, v26, v8, (uint64_t)v4, v10, v11, v18);
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    return (uint64_t)v24;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20A47AF98@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for ManageWatchlistsStyler();
    uint64_t v5 = swift_allocObject();
    uint64_t result = sub_20A42BEBC(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_26BE5FCE8;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A47B04C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20A4342F4((uint64_t)a1, (uint64_t)v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = type metadata accessor for ManageWatchlistsRouter();
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t result = sub_20A42BEBC(v8, v7 + 24);
    *(void *)(v7 + 64) = v5;
    a2[3] = v6;
    a2[4] = (uint64_t)&off_26BE6B580;
    *a2 = v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_20A47B108(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ManageWatchlistsViewController();
  id v2 = (id)sub_20A8C5BA0();
  swift_unknownObjectWeakAssign();
}

uint64_t sub_20A47B188@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26763AF30);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v5 = v22;
  if (!v22)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v6 = v23;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26763AF20);
  uint64_t result = sub_20A8C5BB0();
  if (!v21)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26763AF38);
  uint64_t result = sub_20A8C5BB0();
  if (v19)
  {
    uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v8 = MEMORY[0x270FA5388](v7);
    uint64_t v10 = (uint64_t *)&v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(uint64_t *, double))(v11 + 16))(v10, v8);
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    double v13 = MEMORY[0x270FA5388](v12);
    uint64_t v15 = (uint64_t **)&v18[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(uint64_t **, double))(v16 + 16))(v15, v13);
    uint64_t v17 = sub_20A47F53C(v5, v6, *v10, *v15);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    *a2 = v17;
    a2[1] = &off_26BE667A8;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A47B438@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_20A47EFC4();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26763AF40);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v8 = v23;
  if (!v23)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v9 = v24;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47E328();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v10 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for ManageWatchlistsBlueprintModifierFactory();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v11 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E50);
  uint64_t result = sub_20A8C5BB0();
  if (!v22[3])
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v18 = v9;
  uint64_t v19 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v12 = v20;
  if (!v20)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v17 = v21;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v13 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v14 = type metadata accessor for ManageWatchlistsContentMode(0);
  sub_20A8C5BB0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v6, 1, v14);
  if (result != 1)
  {
    sub_20A47F1F4();
    swift_allocObject();
    uint64_t v15 = sub_20A47F748(v8, v18, v10, v11, v22, v12, v17, v13, (uint64_t)v6);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    uint64_t result = swift_release();
    uint64_t v16 = v19;
    *uint64_t v19 = v15;
    v16[1] = &off_26BE673F8;
    return result;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_20A47B764@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for ManageWatchlistsTracker();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    a2[3] = v5;
    a2[4] = (uint64_t)&off_26BE5FD98;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A47B7EC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManageWatchlistsDataManager();
  uint64_t result = swift_allocObject();
  *a1 = result;
  a1[1] = (uint64_t)&off_26BE72820;
  return result;
}

uint64_t sub_20A47B82C(uint64_t a1)
{
  return sub_20A47BDCC(a1, sub_20A47E308, MEMORY[0x263F7D548]);
}

uint64_t sub_20A47B858(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E50);
  uint64_t result = sub_20A8C5BB0();
  if (v4)
  {
    type metadata accessor for ManageWatchlistsBlueprintModifierFactory();
    uint64_t v2 = swift_allocObject();
    sub_20A42BEBC(&v3, v2 + 16);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A47B8F8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47E308(0);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A47E414();
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      sub_20A47E328();
      swift_allocObject();
      return sub_20A8C8BD0();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A47B9D8(uint64_t a1, void *a2)
{
  sub_20A47F0C0(0, &qword_26763B030, MEMORY[0x263F7DD48]);
  swift_allocObject();
  sub_20A8CA8D0();
  sub_20A47F0C0(0, &qword_26763B038, MEMORY[0x263F7DBE8]);
  swift_allocObject();
  sub_20A47F180();
  sub_20A8CA330();
  sub_20A8C8BF0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A47EBAC();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_allocObject();
    sub_20A47FA40(&qword_26763B048, (void (*)(uint64_t))sub_20A47EBAC);
    sub_20A8CA330();
    sub_20A8C8BF0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A47BB5C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47E6C0();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6A8A0);
  uint64_t result = sub_20A8C5B70();
  if (!v3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for ManageWatchlistsBlueprintLayoutBuilder();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A47EBAC();
    swift_allocObject();
    return sub_20A8CAAB0();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A47BCA0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47E51C();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC6AAF0);
    uint64_t result = sub_20A8C5BB0();
    if (v3)
    {
      sub_20A47E414();
      swift_allocObject();
      return sub_20A8C8E70();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A47BDA0(uint64_t a1)
{
  return sub_20A47BDCC(a1, (void (*)(void))sub_20A47E6C0, MEMORY[0x263F7D8F8]);
}

uint64_t sub_20A47BDCC(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_20A47BE10(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7ED40);
  uint64_t result = sub_20A8C5BB0();
  if (v38)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC7F000);
    uint64_t result = sub_20A8C5BB0();
    if (v36)
    {
      uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v38);
      long long v30[2] = v30;
      double v4 = MEMORY[0x270FA5388](v3);
      uint64_t v6 = (void *)((char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v7 + 16))(v6, v4);
      uint64_t v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
      v30[1] = v30;
      double v9 = MEMORY[0x270FA5388](v8);
      uint64_t v11 = (void *)((char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v12 + 16))(v11, v9);
      uint64_t v13 = *v6;
      uint64_t v14 = *v11;
      uint64_t v15 = type metadata accessor for WatchlistCellViewLayoutAttributesFactory();
      uint64_t v34[3] = v15;
      v34[4] = &off_26BE61F58;
      v34[0] = v13;
      WatchlistViewLayoutAttributesFactorCGFloat y = type metadata accessor for CreateWatchlistViewLayoutAttributesFactory();
      uint64_t v32 = WatchlistViewLayoutAttributesFactory;
      uint64_t v33 = &off_26BE6D808;
      v31[0] = v14;
      type metadata accessor for ManageWatchlistsBlueprintLayoutBuilder();
      uint64_t v17 = (void *)swift_allocObject();
      uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v15);
      double v19 = MEMORY[0x270FA5388](v18);
      uint64_t v21 = (void *)((char *)v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v22 + 16))(v21, v19);
      uint64_t v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
      double v24 = MEMORY[0x270FA5388](v23);
      uint64_t v26 = (void *)((char *)v30 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v27 + 16))(v26, v24);
      uint64_t v28 = *v21;
      uint64_t v29 = *v26;
      v17[5] = v15;
      v17[6] = &off_26BE61F58;
      _OWORD v17[2] = v28;
      v17[10] = WatchlistViewLayoutAttributesFactory;
      v17[11] = &off_26BE6D808;
      v17[7] = v29;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      return (uint64_t)v17;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A47C21C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47E308(0);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47E51C();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6A8A0);
  uint64_t result = sub_20A8C5B70();
  if (!v7)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6AAF0);
  uint64_t result = sub_20A8C5BB0();
  if (!v6)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47EF28(0, &qword_26763AFE0, MEMORY[0x263F7DBD0]);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C8D70();
  uint64_t result = sub_20A8C5B60();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  if (!v5)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A47FA40((unint64_t *)&qword_26AC69370, MEMORY[0x263F24E68]);
    sub_20A47EC98();
    id v4 = objc_allocWithZone(v3);
    return sub_20A8C9C70();
  }
LABEL_17:
  __break(1u);
  return result;
}

id sub_20A47C538()
{
  id v0 = objc_msgSend(self, sel_ts_preferredStyleForStyle_, 2);
  id v1 = objc_allocWithZone(MEMORY[0x263F7E150]);

  return objc_msgSend(v1, sel_initWithFrame_style_, v0, 0.0, 0.0, 0.0, 0.0);
}

uint64_t sub_20A47C5A8(void *a1)
{
  uint64_t v2 = sub_20A8C93C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A42CFF0(0, (unint64_t *)&unk_26AC82DC8);
  uint64_t result = sub_20A8C5B60();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47E7E0(0, &qword_26763AF68, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewCellProvider, sub_20A47E7AC, MEMORY[0x263F7DC88]);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47E7E0(0, &qword_26763AF88, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewHeaderFooterProvider, sub_20A47E954, MEMORY[0x263F7DC08]);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47E988();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F7D770], v2);
    sub_20A47E51C();
    swift_allocObject();
    return sub_20A8C94A0();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_20A47C84C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47E51C();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A8C94C0();
    swift_release();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A469790();
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      sub_20A8CA7F0();
      uint64_t result = sub_20A8CA7D0();
      uint64_t v5 = MEMORY[0x263F7DD30];
      *a2 = result;
      a2[1] = v5;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A47C944()
{
  uint64_t v0 = sub_20A8C97D0();
  double v1 = MEMORY[0x270FA5388](v0);
  (*(void (**)(char *, void, double))(v3 + 104))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F7D838], v1);
  return sub_20A8CA7B0();
}

uint64_t sub_20A47CA14(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47E308(0);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47E6C0();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for ManageWatchlistsBlueprintViewCellProvider();
  sub_20A4342F4((uint64_t)a1, (uint64_t)v8);
  uint64_t v4 = swift_allocObject();
  sub_20A42BEBC(v8, v4 + 16);
  uint64_t v5 = sub_20A8C5B80();
  uint64_t result = swift_release();
  if (v5)
  {
    *(void *)&v8[0] = v3;
    sub_20A47E7E0(0, &qword_26763AF68, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewCellProvider, sub_20A47E7AC, MEMORY[0x263F7DC88]);
    id v7 = objc_allocWithZone(v6);
    return sub_20A8CA600();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A47CBBC(void *a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A42CFF0(0, (unint64_t *)&unk_26AC82DC8);
  uint64_t result = sub_20A8C5B60();
  if (result)
  {
    uint64_t v4 = (void *)result;
    sub_20A42CFF0(0, &qword_26AC7F8C0);
    sub_20A8CE370();
    sub_20A8C5A60();

    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A47CCBC(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ManageWatchlistsViewController();
  sub_20A8C5BA0();
  sub_20A8CA620();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A4301D4(0, &qword_26AC6A970);
  uint64_t result = sub_20A8C5B70();
  if (v5)
  {
    __swift_project_boxed_opaque_existential_1(v4, v5);
    sub_20A8CB130();
    sub_20A8CA610();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A47CDD0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47E308(0);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47E6C0();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for ManageWatchlistsBlueprintViewHeaderFooterProvider();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47EF28(0, &qword_26763AFE0, MEMORY[0x263F7DBD0]);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  if (!v6)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_20A47FA40((unint64_t *)&qword_26AC69370, MEMORY[0x263F24E68]);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6A500);
  uint64_t result = sub_20A8C5BB0();
  if (v5)
  {
    sub_20A47E7E0(0, &qword_26763AF88, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewHeaderFooterProvider, sub_20A47E954, MEMORY[0x263F7DC08]);
    id v4 = objc_allocWithZone(v3);
    return sub_20A8CA360();
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_20A47D0B8(uint64_t a1, void *a2)
{
  if (sub_20A8C5BA0()) {
    sub_20A47FA40(&qword_26763B028, (void (*)(uint64_t))sub_20A47EDD4);
  }
  return sub_20A8CA380();
}

uint64_t sub_20A47D1B8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47E308(0);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A47E988();
    id v3 = objc_allocWithZone(v2);
    return sub_20A8CA9A0();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_20A47D230(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ManageWatchlistsViewController();
  if (!sub_20A8C5BA0())
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_20A8CA9B0();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A42CFF0(0, (unint64_t *)&unk_26AC82DC8);
  uint64_t v3 = sub_20A8C5B60();
  if (!v3)
  {
LABEL_7:
    __break(1u);
    return;
  }
  id v4 = (id)v3;
  sub_20A8CA9C0();
}

uint64_t sub_20A47D324(void *a1)
{
  sub_20A47EFC4();
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC78220);
  uint64_t result = sub_20A8C5BB0();
  if (!v41)
  {
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC79938);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v6 = v38;
  if (!v38)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v7 = v39;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC7A510);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v8 = v36;
  if (!v36)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v9 = v37;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v10 = v34;
  if (!v34)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v32 = v35;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47E6C0();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v11 = result;
  uint64_t v29 = v9;
  uint64_t v30 = v8;
  uint64_t v31 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = type metadata accessor for ManageWatchlistsContentMode(0);
  sub_20A8C5BB0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v4, 1, v13);
  if (result != 1)
  {
    uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
    double v15 = MEMORY[0x270FA5388](v14);
    uint64_t v17 = (uint64_t *)((char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v18 + 16))(v17, v15);
    uint64_t v19 = *v17;
    uint64_t v20 = type metadata accessor for WatchlistCellViewStyler();
    v33[3] = v20;
    v33[4] = &off_26BE69730;
    v33[0] = v19;
    type metadata accessor for ManageWatchlistsBlueprintViewCellProvider();
    uint64_t v21 = (void *)swift_allocObject();
    uint64_t v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v33, v20);
    double v23 = MEMORY[0x270FA5388](v22);
    uint64_t v25 = (uint64_t *)((char *)&v28 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v26 + 16))(v25, v23);
    uint64_t v27 = sub_20A47DF5C(*v25, v6, v31, v30, v29, v10, v32, v11, v12, (uint64_t)v4, v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    return (uint64_t)v27;
  }
LABEL_15:
  __break(1u);
  return result;
}

void sub_20A47D7AC(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ManageWatchlistsViewController();
  id v4 = (id)sub_20A8C5BA0();
  uint64_t v3 = &off_26BE6A740;
  if (!v4) {
    uint64_t v3 = 0;
  }
  *(void *)(v2 + 24) = v3;
  swift_unknownObjectWeakAssign();
}

uint64_t sub_20A47D840()
{
  type metadata accessor for ManageWatchlistsBlueprintViewHeaderFooterProvider();

  return swift_allocObject();
}

uint64_t sub_20A47D874(void *a1)
{
  uint64_t v2 = sub_20A8CABC0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void *)((char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_20A8CABE0();
  MEMORY[0x270FA5388](v6 - 8);
  sub_20A47EF28(0, &qword_26763B018, MEMORY[0x263F7DBC8]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47E308(0);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v13 = result;
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F7DBC0], v8);
    *uint64_t v5 = 0;
    (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F7DE00], v2);
    sub_20A8CABD0();
    v14[1] = v13;
    sub_20A47EF28(0, &qword_26763AFE0, MEMORY[0x263F7DBD0]);
    swift_allocObject();
    return sub_20A8CA290();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A47DB00(void *a1)
{
  sub_20A4696E4();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_20A8D4540;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47EDD4();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_20A47FA40(&qword_26763B010, (void (*)(uint64_t))sub_20A47EDD4);
    *(void *)(v2 + 32) = v4;
    *(void *)(v2 + 40) = v5;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A8C9F60();
    uint64_t result = sub_20A8C5B60();
    if (result)
    {
      uint64_t v6 = MEMORY[0x263F7DA90];
      *(void *)(v2 + 48) = result;
      *(void *)(v2 + 56) = v6;
      sub_20A8C8D70();
      swift_allocObject();
      return sub_20A8C8D60();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A47DC3C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47E51C();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A47E308(0);
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      sub_20A47EDD4();
      swift_allocObject();
      return sub_20A8CAB20();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A47DD1C(uint64_t a1, void *a2)
{
  return sub_20A47DDFC(a1, a2, sub_20A47EEF4, MEMORY[0x263F7DDC8]);
}

uint64_t sub_20A47DD48(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47E51C();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A8C94C0();
    swift_release();
    sub_20A8C9F60();
    swift_allocObject();
    return sub_20A8C9F50();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A47DDD0(uint64_t a1, void *a2)
{
  return sub_20A47DDFC(a1, a2, sub_20A47EEC0, MEMORY[0x263F7DA88]);
}

uint64_t sub_20A47DDFC(uint64_t a1, void *a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t))
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A47EC98();
  uint64_t v6 = sub_20A8C5BA0();
  if (v6) {
    uint64_t v7 = a3();
  }
  else {
    uint64_t v7 = 0;
  }
  return a4(v6, v7);
}

uint64_t sub_20A47DE8C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A47EC98();
  uint64_t v4 = v3;
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v6 = result;
    a2[3] = v4;
    uint64_t result = sub_20A47FA40(&qword_26763AFF8, (void (*)(uint64_t))sub_20A47EC98);
    a2[4] = result;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for ManageWatchlistsAssembly()
{
  return self;
}

void *sub_20A47DF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  uint64_t v21 = type metadata accessor for WatchlistCellViewStyler();
  uint64_t v22 = &off_26BE69730;
  *(void *)&long long v20 = a1;
  a11[3] = 0;
  swift_unknownObjectWeakInit();
  sub_20A42BEBC(&v20, (uint64_t)(a11 + 4));
  a11[9] = a2;
  a11[10] = a3;
  a11[11] = a4;
  a11[12] = a5;
  a11[13] = a6;
  a11[14] = a7;
  a11[15] = a8;
  a11[16] = a9;
  sub_20A47F01C(a10, (uint64_t)a11 + OBJC_IVAR____TtC8StocksUI41ManageWatchlistsBlueprintViewCellProvider_contentMode);
  return a11;
}

uint64_t sub_20A47E028()
{
  sub_20A8C5CC0();
  sub_20A4301D4(0, (unint64_t *)&qword_26AC76D18);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, (unint64_t *)&unk_26AC7A510);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A4301D4(0, &qword_26AC78FA8);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7F000);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC79938);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A4301D4(0, &qword_26AC78220);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7ED40);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A8C6280();

  return swift_release();
}

void sub_20A47E308(uint64_t a1)
{
}

void sub_20A47E328()
{
  if (!qword_26763AF50)
  {
    sub_20A47E308(255);
    sub_20A47E414();
    sub_20A47FA40(&qword_26763AF70, sub_20A47E308);
    sub_20A47FA40(&qword_26763AFC0, (void (*)(uint64_t))sub_20A47E414);
    unint64_t v0 = sub_20A8C8C20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763AF50);
    }
  }
}

void sub_20A47E414()
{
  if (!qword_26763AF58)
  {
    type metadata accessor for ManageWatchlistsModel();
    sub_20A47E51C();
    sub_20A42D7D4();
    sub_20A47FA40((unint64_t *)&unk_26763D170, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsModel);
    sub_20A47FA40(&qword_26763AFB8, (void (*)(uint64_t))sub_20A47E51C);
    unint64_t v0 = sub_20A8C8E90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763AF58);
    }
  }
}

void sub_20A47E51C()
{
  if (!qword_26763AF60)
  {
    sub_20A42CFF0(255, (unint64_t *)&unk_26AC82DC8);
    sub_20A47E7E0(255, &qword_26763AF68, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewCellProvider, sub_20A47E7AC, MEMORY[0x263F7DC88]);
    sub_20A47E7E0(255, &qword_26763AF88, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewHeaderFooterProvider, sub_20A47E954, MEMORY[0x263F7DC08]);
    sub_20A47E988();
    type metadata accessor for ManageWatchlistsViewController();
    sub_20A47EA74();
    sub_20A47EB10();
    sub_20A47FA40(&qword_26763AFB0, (void (*)(uint64_t))sub_20A47E988);
    unint64_t v0 = sub_20A8C94D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763AF60);
    }
  }
}

void sub_20A47E6C0()
{
  if (!qword_26763AD20)
  {
    type metadata accessor for ManageWatchlistsLayoutSectionDescriptor();
    type metadata accessor for ManageWatchlistsLayoutModel();
    sub_20A47FA40(&qword_26763AC88, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutSectionDescriptor);
    sub_20A47FA40(&qword_26763AB48, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutModel);
    unint64_t v0 = sub_20A8C9B10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763AD20);
    }
  }
}

uint64_t sub_20A47E7AC()
{
  return sub_20A47FA40(&qword_26763AF78, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewCellProvider);
}

void sub_20A47E7E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_20A47E308(255);
    uint64_t v11 = v10;
    sub_20A47E6C0();
    v15[0] = v11;
    v15[1] = v12;
    v15[2] = a3(255);
    v15[3] = type metadata accessor for ManageWatchlistsViewController();
    v15[4] = sub_20A47FA40(&qword_26763AF70, sub_20A47E308);
    v15[5] = sub_20A47FA40(&qword_26763AD28, (void (*)(uint64_t))sub_20A47E6C0);
    v15[6] = a4();
    v15[7] = sub_20A47FA40(&qword_26763AF80, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsViewController);
    unint64_t v13 = a5(a1, v15);
    if (!v14) {
      atomic_store(v13, a2);
    }
  }
}

uint64_t sub_20A47E954()
{
  return sub_20A47FA40(&qword_26763AF90, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewHeaderFooterProvider);
}

void sub_20A47E988()
{
  if (!qword_26763AF98)
  {
    sub_20A47E308(255);
    type metadata accessor for ManageWatchlistsViewController();
    sub_20A47FA40(&qword_26763AF70, sub_20A47E308);
    sub_20A47FA40(&qword_26763AF80, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsViewController);
    unint64_t v0 = sub_20A8CA9D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763AF98);
    }
  }
}

unint64_t sub_20A47EA74()
{
  unint64_t result = qword_26763AFA0;
  if (!qword_26763AFA0)
  {
    sub_20A47E7E0(255, &qword_26763AF68, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewCellProvider, sub_20A47E7AC, MEMORY[0x263F7DC88]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763AFA0);
  }
  return result;
}

unint64_t sub_20A47EB10()
{
  unint64_t result = qword_26763AFA8;
  if (!qword_26763AFA8)
  {
    sub_20A47E7E0(255, &qword_26763AF88, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewHeaderFooterProvider, sub_20A47E954, MEMORY[0x263F7DC08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763AFA8);
  }
  return result;
}

void sub_20A47EBAC()
{
  if (!qword_26763AFC8)
  {
    sub_20A47E6C0();
    type metadata accessor for ManageWatchlistsBlueprintLayoutBuilder();
    sub_20A47FA40(&qword_26763AD28, (void (*)(uint64_t))sub_20A47E6C0);
    sub_20A47FA40(&qword_26763AFD0, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintLayoutBuilder);
    unint64_t v0 = sub_20A8CAAC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763AFC8);
    }
  }
}

void sub_20A47EC98()
{
  if (!qword_26763AFD8)
  {
    sub_20A47E308(255);
    sub_20A47E51C();
    type metadata accessor for ManageWatchlistsViewController();
    sub_20A47FA40(&qword_26763AF70, sub_20A47E308);
    sub_20A47FA40(&qword_26763AFB8, (void (*)(uint64_t))sub_20A47E51C);
    sub_20A47FA40(&qword_26763AF80, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsViewController);
    unint64_t v0 = sub_20A8C9C90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763AFD8);
    }
  }
}

void sub_20A47EDD4()
{
  if (!qword_26763AFE8)
  {
    sub_20A47E51C();
    sub_20A47E308(255);
    sub_20A47FA40(&qword_26763AFB8, (void (*)(uint64_t))sub_20A47E51C);
    sub_20A47FA40(&qword_26763AFF0, sub_20A47E308);
    unint64_t v0 = sub_20A8CAB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763AFE8);
    }
  }
}

uint64_t sub_20A47EEC0()
{
  return sub_20A47FA40(&qword_26763B000, (void (*)(uint64_t))sub_20A47EC98);
}

uint64_t sub_20A47EEF4()
{
  return sub_20A47FA40(&qword_26763B008, (void (*)(uint64_t))sub_20A47EC98);
}

void sub_20A47EF28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_20A47E308(255);
    uint64_t v7 = v6;
    uint64_t v8 = sub_20A47FA40(&qword_26763AF70, sub_20A47E308);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_20A47EFC4()
{
  if (!qword_26763B020)
  {
    type metadata accessor for ManageWatchlistsContentMode(255);
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763B020);
    }
  }
}

uint64_t sub_20A47F01C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ManageWatchlistsContentMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A47F080()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_20A47F0B8(void *a1)
{
  return sub_20A47CBBC(a1, (void *)(v1 + 16));
}

void sub_20A47F0C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for ManageWatchlistsSectionDescriptor;
    v8[1] = type metadata accessor for ManageWatchlistsModel();
    long long v8[2] = sub_20A42D7D4();
    void v8[3] = sub_20A47FA40((unint64_t *)&unk_26763D170, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_20A47F180()
{
  unint64_t result = qword_26763B040;
  if (!qword_26763B040)
  {
    sub_20A47F0C0(255, &qword_26763B030, MEMORY[0x263F7DD48]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B040);
  }
  return result;
}

void sub_20A47F1F4()
{
  if (!qword_26763B050)
  {
    type metadata accessor for ManageWatchlistsBlueprintModifierFactory();
    sub_20A47FA40(&qword_26763B058, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintModifierFactory);
    unint64_t v0 = type metadata accessor for ManageWatchlistsInteractor();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763B050);
    }
  }
}

char *sub_20A47F288(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  void v27[3] = type metadata accessor for ManageWatchlistsStyler();
  v27[4] = &off_26BE5FCE8;
  v27[0] = a1;
  uint64_t v16 = OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_descriptionLabel;
  id v17 = objc_allocWithZone(MEMORY[0x263F828E0]);
  uint64_t v18 = a8;
  *(void *)&a8[v16] = objc_msgSend(v17, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_20A4342F4((uint64_t)v27, (uint64_t)&v18[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_styler]);
  uint64_t v19 = &v18[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_eventHandler];
  *(void *)uint64_t v19 = a2;
  *((void *)v19 + 1) = a3;
  *(void *)&v18[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_blueprintViewController] = a4;
  sub_20A47F8B0(a5, (uint64_t)&v18[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_contentMode]);
  long long v20 = &v18[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_commandCenter];
  *(void *)long long v20 = a6;
  *((void *)v20 + 1) = a7;
  swift_unknownObjectRetain();
  id v21 = a4;
  swift_unknownObjectRetain();

  v26.receiver = v18;
  v26.super_class = ObjectType;
  uint64_t v22 = (char *)objc_msgSendSuper2(&v26, sel_initWithNibName_bundle_, 0, 0);
  *(void *)(*(void *)&v22[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_eventHandler] + 24) = &off_26BE6A760;
  swift_unknownObjectWeakAssign();
  double v23 = v22;
  sub_20A8C9C60();

  sub_20A47F914(a5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v23;
}

void *sub_20A47F438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  v16[3] = type metadata accessor for ManageWatchlistsRouter();
  v16[4] = &off_26BE6B580;
  v16[0] = a3;
  v15[3] = type metadata accessor for ManageWatchlistsTracker();
  v15[4] = &off_26BE5FD98;
  v15[0] = a4;
  a5[3] = 0;
  swift_unknownObjectWeakInit();
  a5[4] = a1;
  a5[5] = a2;
  sub_20A4342F4((uint64_t)v16, (uint64_t)(a5 + 6));
  sub_20A4342F4((uint64_t)v15, (uint64_t)(a5 + 11));
  uint64_t v10 = a5[5];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v10 + 16);
  swift_unknownObjectRetain();
  uint64_t v13 = swift_retain();
  v12(v13, &off_26BE66778, ObjectType, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return a5;
}

void *sub_20A47F53C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *a4;
  uint64_t v26 = type metadata accessor for ManageWatchlistsRouter();
  uint64_t v27 = &off_26BE6B580;
  v25[0] = a3;
  uint64_t v23 = v8;
  uint64_t v24 = &off_26BE5FD98;
  v22[0] = a4;
  type metadata accessor for ManageWatchlistsEventHandler();
  unint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
  double v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (void *)((char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
  uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
  double v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (void *)((char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
  long long v20 = sub_20A47F438(a1, a2, *v13, *v18, v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return v20;
}

void *sub_20A47F748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v9[3] = 0;
  swift_unknownObjectWeakInit();
  v9[6] = a1;
  v9[7] = a2;
  void v9[4] = a3;
  v9[5] = a4;
  sub_20A4342F4((uint64_t)a5, (uint64_t)(v9 + 8));
  v9[13] = a6;
  v9[14] = a7;
  v9[15] = a8;
  sub_20A47F8B0(a9, (uint64_t)v9 + *(void *)(*v9 + 152));
  __swift_project_boxed_opaque_existential_1(a5, a5[3]);
  sub_20A47FA40(&qword_26763B060, (void (*)(uint64_t))sub_20A47F1F4);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  sub_20A8C3670();
  swift_release();
  sub_20A47F914(a9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a5);
  return v9;
}

uint64_t sub_20A47F8B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ManageWatchlistsContentMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A47F914(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ManageWatchlistsContentMode(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_20A47F970()
{
  if (!qword_26763B068)
  {
    unint64_t v0 = sub_20A8C63D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763B068);
    }
  }
}

void sub_20A47F9D8()
{
  if (!qword_26763B078)
  {
    type metadata accessor for CreateWatchlistViewLayoutAttributes();
    unint64_t v0 = sub_20A8C63D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763B078);
    }
  }
}

uint64_t sub_20A47FA40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void destroy for WelcomeViewLayoutAttributes(uint64_t a1)
{
}

uint64_t initializeWithCopy for WelcomeViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  uint64_t v7 = *(void **)(a2 + 184);
  *(void *)(a1 + 184) = v7;
  long long v8 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v8;
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  long long v9 = *(_OWORD *)(a2 + 248);
  long long v10 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v10;
  *(_OWORD *)(a1 + 248) = v9;
  long long v11 = *(_OWORD *)(a2 + 296);
  long long v12 = *(_OWORD *)(a2 + 312);
  long long v13 = *(_OWORD *)(a2 + 328);
  long long v14 = *(_OWORD *)(a2 + 344);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(_OWORD *)(a1 + 328) = v13;
  *(_OWORD *)(a1 + 344) = v14;
  *(_OWORD *)(a1 + 296) = v11;
  *(_OWORD *)(a1 + 312) = v12;
  long long v15 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v15;
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  long long v16 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v16;
  long long v17 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v17;
  long long v18 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v18;
  long long v19 = *(_OWORD *)(a2 + 616);
  *(_OWORD *)(a1 + 600) = *(_OWORD *)(a2 + 600);
  *(_OWORD *)(a1 + 616) = v19;
  *(_OWORD *)(a1 + 625) = *(_OWORD *)(a2 + 625);
  long long v20 = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 552) = v20;
  long long v21 = *(_OWORD *)(a2 + 584);
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(_OWORD *)(a1 + 584) = v21;
  long long v22 = *(_OWORD *)(a2 + 520);
  *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 520) = v22;
  long long v23 = *(_OWORD *)(a2 + 664);
  *(_OWORD *)(a1 + 648) = *(_OWORD *)(a2 + 648);
  *(_OWORD *)(a1 + 664) = v23;
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  long long v24 = *(_OWORD *)(a2 + 704);
  *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 704) = v24;
  long long v25 = *(_OWORD *)(a2 + 736);
  *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
  *(_OWORD *)(a1 + 736) = v25;
  long long v26 = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 768) = v26;
  id v27 = v7;
  return a1;
}

uint64_t assignWithCopy for WelcomeViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  long long v4 = *(void **)(a2 + 184);
  long long v5 = *(void **)(a1 + 184);
  *(void *)(a1 + 184) = v4;
  id v6 = v4;

  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
  long long v7 = *(_OWORD *)(a2 + 520);
  long long v8 = *(_OWORD *)(a2 + 536);
  long long v9 = *(_OWORD *)(a2 + 568);
  *(_OWORD *)(a1 + 552) = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 568) = v9;
  *(_OWORD *)(a1 + 520) = v7;
  *(_OWORD *)(a1 + 536) = v8;
  long long v10 = *(_OWORD *)(a2 + 584);
  long long v11 = *(_OWORD *)(a2 + 600);
  long long v12 = *(_OWORD *)(a2 + 616);
  *(_OWORD *)(a1 + 625) = *(_OWORD *)(a2 + 625);
  *(_OWORD *)(a1 + 600) = v11;
  *(_OWORD *)(a1 + 616) = v12;
  *(_OWORD *)(a1 + 584) = v10;
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  *(void *)(a1 + 760) = *(void *)(a2 + 760);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  return a1;
}

void *__swift_memcpy784_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x310uLL);
}

uint64_t assignWithTake for WelcomeViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  long long v9 = *(void **)(a1 + 184);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);

  long long v10 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v10;
  long long v11 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v11;
  long long v12 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v12;
  long long v13 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v13;
  long long v14 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v14;
  long long v15 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v15;
  long long v16 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v16;
  long long v17 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v17;
  long long v18 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v18;
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(_OWORD *)(a1 + 625) = *(_OWORD *)(a2 + 625);
  long long v19 = *(_OWORD *)(a2 + 616);
  *(_OWORD *)(a1 + 600) = *(_OWORD *)(a2 + 600);
  *(_OWORD *)(a1 + 616) = v19;
  long long v20 = *(_OWORD *)(a2 + 584);
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(_OWORD *)(a1 + 584) = v20;
  long long v21 = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 552) = v21;
  long long v22 = *(_OWORD *)(a2 + 520);
  *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 520) = v22;
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  long long v23 = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 672) = v23;
  long long v24 = *(_OWORD *)(a2 + 704);
  *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 704) = v24;
  long long v25 = *(_OWORD *)(a2 + 736);
  *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
  *(_OWORD *)(a1 + 736) = v25;
  long long v26 = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 768) = v26;
  return a1;
}

uint64_t getEnumTagSinglePayload for WelcomeViewLayoutAttributes(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 784)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 184);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WelcomeViewLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 776) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 784) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 184) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 784) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeViewLayoutAttributes()
{
  return &type metadata for WelcomeViewLayoutAttributes;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for WelcomeViewBulletLayoutAttributes(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 136)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WelcomeViewBulletLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 136) = v3;
  return result;
}

ValueMetadata *type metadata accessor for WelcomeViewBulletLayoutAttributes()
{
  return &type metadata for WelcomeViewBulletLayoutAttributes;
}

void destroy for WelcomeViewTitleGroupLayoutAttributes(uint64_t a1)
{
}

uint64_t initializeWithCopy for WelcomeViewTitleGroupLayoutAttributes(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  long long v5 = *(void **)(a2 + 120);
  *(void *)(a1 + 120) = v5;
  id v6 = v5;
  return a1;
}

void *assignWithCopy for WelcomeViewTitleGroupLayoutAttributes(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  long long v3 = (void *)a2[15];
  long long v4 = (void *)a1[15];
  a1[15] = v3;
  id v5 = v3;

  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for WelcomeViewTitleGroupLayoutAttributes(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  long long v6 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);

  return a1;
}

uint64_t getEnumTagSinglePayload for WelcomeViewTitleGroupLayoutAttributes(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 120);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WelcomeViewTitleGroupLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 120) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeViewTitleGroupLayoutAttributes()
{
  return &type metadata for WelcomeViewTitleGroupLayoutAttributes;
}

uint64_t sub_20A480450()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BilingualFeedPromptViewStyler()
{
  return self;
}

uint64_t sub_20A4804AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 48);
  uint64_t v8 = *(void *)(*(void *)v3 + 56);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 24), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  long long v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  void v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  uint64_t v12 = v10(a1, v7, v9);
  double v13 = MEMORY[0x270FA5388](v12);
  long long v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A4805F8((uint64_t)v15, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

uint64_t sub_20A4805F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0x4030000000000000;
  sub_20A42BEBC(&v9, v7 + 24);
  return v7;
}

uint64_t sub_20A480698(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_20A8C4FB0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StocksActivity.Article(0);
  uint64_t v27 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v27 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  double v13 = (char *)&v26 - v12;
  uint64_t v14 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A480E14(v2, (uint64_t)v16);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_20A481C30();
      if (!sub_20A8C5BA0())
      {
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
        JUMPOUT(0x20A480C38);
      }
      sub_20A4814C4();
      swift_allocObject();
      uint64_t v17 = sub_20A8C65E0();
      swift_release();
      break;
    case 1u:
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_20A481A54();
      if (!sub_20A8C5BA0()) {
        goto LABEL_15;
      }
      sub_20A481B40(0, (unint64_t *)&qword_26AC74940, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, MEMORY[0x263F7DB68]);
      long long v19 = &v16[*(int *)(v18 + 48)];
      sub_20A4814C4();
      swift_allocObject();
      uint64_t v17 = sub_20A8C65E0();
      uint64_t v20 = sub_20A8CA180();
      (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
      sub_20A481BD0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor);
      break;
    case 2u:
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      type metadata accessor for StockChartLoadingState();
      if (!sub_20A8C5BA0()) {
        goto LABEL_14;
      }
      sub_20A4814C4();
      swift_allocObject();
      uint64_t v17 = sub_20A8C65E0();
      sub_20A481BD0((uint64_t)v16, type metadata accessor for StocksActivity);
      break;
    case 4u:
      sub_20A480EE4((uint64_t)v16, (uint64_t)v13);
      (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F58BB8], v4);
      sub_20A480F48();
      swift_allocObject();
      uint64_t v22 = sub_20A8C5BC0();
      sub_20A4814C4();
      swift_allocObject();
      uint64_t v17 = sub_20A8C65E0();
      sub_20A480EE4((uint64_t)v13, (uint64_t)v10);
      unint64_t v23 = (*(unsigned __int8 *)(v27 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v22;
      sub_20A480EE4((uint64_t)v10, v24 + v23);
      return v17;
    default:
      if (qword_26AC67B18 != -1) {
        swift_once();
      }
      uint64_t v17 = qword_26AC706C8;
      uint64_t v21 = qword_26AC706D0;
      swift_retain();
      sub_20A480ED4(v21);
      sub_20A481BD0((uint64_t)v16, type metadata accessor for StocksActivity);
      return v17;
  }
  return v17;
}

uint64_t sub_20A480C50(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void *))
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  sub_20A8C5A00();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C6D60();
  sub_20A8C5A10();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A43F7E0(0, (unint64_t *)&qword_26AC6AE70);
  uint64_t result = sub_20A8C5A10();
  if (a6) {
    return a6(a1);
  }
  return result;
}

uint64_t sub_20A480D64(void *a1)
{
  return sub_20A8C5A10();
}

uint64_t sub_20A480E14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StocksActivity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A480E78()
{
  sub_20A4814C4();
  swift_allocObject();
  uint64_t result = sub_20A8C6580();
  qword_26AC706D0 = 0;
  qword_26AC706D8 = 0;
  qword_26AC706C8 = result;
  return result;
}

uint64_t sub_20A480ED4(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_20A480EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StocksActivity.Article(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20A480F48()
{
  if (!qword_26763B088)
  {
    sub_20A8C4FB0();
    sub_20A8C4FA0();
    sub_20A481CE8(&qword_26763B090, MEMORY[0x263F58BA0]);
    unint64_t v0 = sub_20A8C5BE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763B088);
    }
  }
}

uint64_t sub_20A480FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  sub_20A8C9440();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_20A481D38;
  *(void *)(v5 + 24) = v4;
  sub_20A8C61B0();
  swift_release();

  return swift_release();
}

uint64_t sub_20A4810B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  sub_20A8C9440();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_20A481D38;
  *(void *)(v5 + 24) = v4;
  sub_20A8C61B0();
  swift_release();

  return swift_release();
}

uint64_t sub_20A481174@<X0>(void *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  if ((*a1 & 0x8000000000000000) != 0)
  {
    uint64_t v4 = (unsigned int *)MEMORY[0x263F7CFC0];
  }
  else
  {
    a2(1);
    uint64_t v4 = (unsigned int *)MEMORY[0x263F7CFB8];
  }
  uint64_t v5 = *v4;
  uint64_t v6 = sub_20A8C6330();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);

  return v7(a3, v5, v6);
}

uint64_t sub_20A48120C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  swift_retain();
  sub_20A8C61A0();
  swift_release();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_20A481D38;
  *(void *)(v5 + 24) = v4;
  sub_20A8C61B0();
  swift_release();

  return swift_release();
}

uint64_t sub_20A4812E4@<X0>(void *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  if (*a1 >= 2uLL)
  {
    a2(1);
    uint64_t v4 = (unsigned int *)MEMORY[0x263F7CFB8];
  }
  else
  {
    uint64_t v4 = (unsigned int *)MEMORY[0x263F7CFC0];
  }
  uint64_t v5 = *v4;
  uint64_t v6 = sub_20A8C6330();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);

  return v7(a3, v5, v6);
}

uint64_t sub_20A481380(void *a1)
{
  return sub_20A8C5A40();
}

uint64_t sub_20A4813FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  sub_20A8C5BD0();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_20A481D38;
  *(void *)(v5 + 24) = v4;
  sub_20A8C61B0();
  swift_release();

  return swift_release();
}

uint64_t sub_20A4814BC(uint64_t a1, uint64_t a2)
{
  return sub_20A4813FC(a1, a2);
}

void sub_20A4814C4()
{
  if (!qword_26AC698C0)
  {
    unint64_t v0 = sub_20A8C65F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC698C0);
    }
  }
}

uint64_t sub_20A48151C@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_20A8C4FB0();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v10, a1, v6, v8);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
  if (v11 == *MEMORY[0x263F58BB8] || v11 == *MEMORY[0x263F58BC0])
  {
    double v13 = (unsigned int *)MEMORY[0x263F7CFC0];
  }
  else
  {
    if (v11 != *MEMORY[0x263F58BA8] && v11 != *MEMORY[0x263F58BB0])
    {
      uint64_t v17 = *MEMORY[0x263F7CFC0];
      uint64_t v18 = sub_20A8C6330();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(a3, v17, v18);
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    a2(1);
    double v13 = (unsigned int *)MEMORY[0x263F7CFB8];
  }
  uint64_t v15 = *v13;
  uint64_t v16 = sub_20A8C6330();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(a3, v15, v16);
}

uint64_t sub_20A481728(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A480F48();
  StocksActivity.Article.articleID.getter();
  sub_20A8C5A20();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A4817C0()
{
  uint64_t v1 = *(void *)(type metadata accessor for StocksActivity.Article(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  uint64_t v3 = v0 + v2;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_unknownObjectRelease();
  }
  else
  {
    sub_20A8C4DA0();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_release();
    if (EnumCaseMultiPayload != 1)
    {
      sub_20A481B40(0, (unint64_t *)&qword_26AC81280, MEMORY[0x263F58E88], MEMORY[0x263F58CE8]);
      uint64_t v6 = v3 + *(int *)(v5 + 48);
      uint64_t v7 = sub_20A8C5390();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    }
    sub_20A42FC8C();
    uint64_t v9 = v3 + *(int *)(v8 + 64);
    if (*(void *)(v9 + 24)) {
      __swift_destroy_boxed_opaque_existential_1(v9);
    }
  }

  return swift_deallocObject();
}

void sub_20A481954()
{
  if (!qword_26AC79B50)
  {
    sub_20A43F7E0(255, (unint64_t *)&unk_26AC79B40);
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC79B50);
    }
  }
}

uint64_t sub_20A4819BC(void *a1)
{
  type metadata accessor for StocksActivity.Article(0);

  return sub_20A481728(a1);
}

uint64_t sub_20A481A30(uint64_t a1, uint64_t a2)
{
  return sub_20A48120C(a1, a2);
}

uint64_t sub_20A481A38(void *a1)
{
  return sub_20A481380(a1);
}

void sub_20A481A54()
{
  if (!qword_26AC67760)
  {
    type metadata accessor for ForYouFeedSectionDescriptor();
    type metadata accessor for ForYouFeedModel();
    sub_20A481CE8(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
    sub_20A481CE8((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
    unint64_t v0 = sub_20A8C9450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC67760);
    }
  }
}

void sub_20A481B40(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_20A481BC8(uint64_t a1, uint64_t a2)
{
  return sub_20A4810B4(a1, a2);
}

uint64_t sub_20A481BD0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A481C30()
{
  if (!qword_26AC6A210)
  {
    type metadata accessor for StockListModel(255);
    sub_20A42D40C();
    sub_20A481CE8(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unint64_t v0 = sub_20A8C9450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A210);
    }
  }
}

uint64_t sub_20A481CE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A481D30(uint64_t a1, uint64_t a2)
{
  return sub_20A480FF4(a1, a2);
}

uint64_t sub_20A481D3C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A481D74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A481174(a1, *(void (**)(uint64_t))(v2 + 16), a2);
}

uint64_t sub_20A481D90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A4812E4(a1, *(void (**)(uint64_t))(v2 + 16), a2);
}

uint64_t sub_20A481D98(char a1)
{
  uint64_t v2 = *(uint64_t (**)(char *))(v1 + 16);
  char v4 = a1;
  return v2(&v4);
}

uint64_t sub_20A481DD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A48151C(a1, *(void (**)(uint64_t))(v2 + 16), a2);
}

ValueMetadata *type metadata accessor for CalendarAccessRequestAlert()
{
  return &type metadata for CalendarAccessRequestAlert;
}

uint64_t sub_20A481E10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F7D7E0];
  uint64_t v3 = sub_20A8C9580();
  char v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_20A481E84()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t sub_20A481F54()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t sub_20A48200C()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v2 = sub_20A8CE2B0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_20A4820F8()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v2 = sub_20A8CE2B0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_20A4821E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v26 = a1;
  sub_20A4573F8();
  MEMORY[0x270FA5388](v2 - 8);
  char v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A457450(0);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A457724();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4577A0(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v24 = v15;
  uint64_t v25 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 32), *(void *)(v1 + 56));
  sub_20A8C36D0();
  swift_getKeyPath();
  sub_20A457600();
  sub_20A8CBE80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_20A457868();
  sub_20A48483C(&qword_26AC68E08, MEMORY[0x263F7AB98]);
  sub_20A8CBEB0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_20A44D17C();
  id v27 = (id)sub_20A8CEBE0();
  uint64_t v19 = sub_20A8CEBC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v4, 1, 1, v19);
  sub_20A484724(0, (unint64_t *)&qword_26AC6ADE8, sub_20A4577A0, (void (*)(void))sub_20A457970);
  uint64_t v20 = v26;
  v26[3] = v21;
  void v20[4] = sub_20A4847EC(&qword_26AC6ADE0, (unint64_t *)&qword_26AC6ADE8, sub_20A4577A0, (void (*)(void))sub_20A457970);
  __swift_allocate_boxed_opaque_existential_1(v20);
  sub_20A457970();
  sub_20A48483C(&qword_26AC7F938, (void (*)(uint64_t))sub_20A44D17C);
  uint64_t v22 = v24;
  sub_20A8CBE90();
  sub_20A4844E8((uint64_t)v4, (uint64_t (*)(void))sub_20A4573F8);

  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v18, v22);
}

uint64_t sub_20A482620(uint64_t a1)
{
  sub_20A484450(0);
  MEMORY[0x270FA5388](v2 - 8);
  char v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C40E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v30 = v4;
    uint64_t v11 = *(void *)(result + 120);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v31 = a1;
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v11 + 24);
    swift_unknownObjectRetain();
    v13(ObjectType, v11);
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v14 = v10 + OBJC_IVAR____TtC8StocksUI20StockListDataManager_lastActiveWatchlist;
    swift_beginAccess();
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v15(v8, v14, v5);
    uint64_t v16 = sub_20A8C4050();
    uint64_t v18 = v17;
    uint64_t v19 = v31;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if (v16 == sub_20A8C4050() && v18 == v20)
    {
      swift_release();
      return swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v29 = v15;
      uint64_t v22 = v19;
      char v23 = sub_20A8CF760();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v23) {
        return swift_release();
      }
      swift_beginAccess();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v14, v22, v5);
      swift_endAccess();
      if (!MEMORY[0x2105289B0](v10 + 16))
      {
        return swift_release();
      }
      else
      {
        uint64_t v24 = *(void *)(v10 + 24);
        uint64_t v25 = swift_getObjectType();
        uint64_t v26 = (uint64_t)v30;
        v29(v30, v22, v5);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v26, 0, 1, v5);
        id v27 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v24 + 16);
        uint64_t v28 = swift_retain();
        v27(v28, &off_26BE61830, v26, v25, v24);
        swift_unknownObjectRelease();
        swift_release_n();
        return sub_20A4844E8(v26, (uint64_t (*)(void))sub_20A484450);
      }
    }
  }
  return result;
}

uint64_t sub_20A482974()
{
  uint64_t v1 = v0;
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 32), *(void *)(v0 + 56));
  sub_20A48483C(&qword_26AC72458, (void (*)(uint64_t))type metadata accessor for StockListDataManager);
  sub_20A8C36A0();
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 72), *(void *)(v1 + 96));
  sub_20A48483C(&qword_26AC72460, (void (*)(uint64_t))type metadata accessor for StockListDataManager);
  sub_20A8C39D0();
  sub_20A4380C4(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);

  uint64_t v2 = v0 + OBJC_IVAR____TtC8StocksUI20StockListDataManager_lastActiveWatchlist;
  uint64_t v3 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_20A482AE8()
{
  sub_20A482974();

  return swift_deallocClassInstance();
}

uint64_t sub_20A482B40()
{
  return type metadata accessor for StockListDataManager();
}

uint64_t type metadata accessor for StockListDataManager()
{
  uint64_t result = qword_26AC72468;
  if (!qword_26AC72468) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A482B94()
{
  uint64_t result = sub_20A8C40E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_20A482C60(void *a1)
{
  uint64_t v2 = sub_20A8C59F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v16 - v7;
  uint64_t v9 = a1[12];
  v16[1] = a1[13];
  __swift_project_boxed_opaque_existential_1(a1 + 9, v9);
  sub_20A484548();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_20A8D3DC0;
  *(void *)(v10 + 32) = sub_20A8C3EC0();
  *(void *)(v10 + 40) = v11;
  uint64_t v12 = *(void (**)(char *, void, uint64_t))(v3 + 104);
  v12(v8, *MEMORY[0x263F7CD50], v2);
  v12(v5, *MEMORY[0x263F7CD58], v2);
  uint64_t v13 = sub_20A8C39A0();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v5, v2);
  v14(v8, v2);
  return v13;
}

uint64_t sub_20A482E34()
{
  sub_20A42C470(0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v18 - v4;
  uint64_t v6 = sub_20A8C3E10();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C2EE0();
  uint64_t v11 = sub_20A8C3EC0();
  if (*(void *)(v10 + 16) && (unint64_t v13 = sub_20A4D1B24(v11, v12), (v14 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v5, *(void *)(v10 + 56) + *(void *)(v7 + 72) * v13, v6);
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v15(v5, 0, 1, v6);
  }
  else
  {
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v15(v5, 1, 1, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_20A4844E8((uint64_t)v5, (uint64_t (*)(void))sub_20A42C470);
    v15(v2, 1, 1, v6);
    sub_20A484484(0, &qword_26AC69848, (uint64_t (*)(uint64_t))sub_20A42C470, MEMORY[0x263F7D028]);
    swift_allocObject();
    return sub_20A8C6580();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v2, v9, v6);
    v15(v2, 0, 1, v6);
    sub_20A484484(0, &qword_26AC69848, (uint64_t (*)(uint64_t))sub_20A42C470, MEMORY[0x263F7D028]);
    swift_allocObject();
    uint64_t v16 = sub_20A8C6580();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v16;
}

uint64_t sub_20A483188(void *a1)
{
  uint64_t v2 = sub_20A8C5B40();
  uint64_t v19 = *(void *)(v2 - 8);
  uint64_t v20 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C2800();
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C59F0();
  uint64_t v18 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[19];
  _OWORD v17[2] = a1[20];
  v17[1] = __swift_project_boxed_opaque_existential_1(a1 + 16, v12);
  sub_20A8C3EC0();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F7CD50], v8);
  sub_20A8C27F0();
  uint64_t v13 = v19;
  uint64_t v14 = v20;
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v4, *MEMORY[0x263F7CDA0], v20);
  uint64_t v15 = sub_20A8C37B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v14);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  return v15;
}

uint64_t sub_20A483438()
{
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v0 - 8);
  sub_20A8C2BD0();
  sub_20A484484(0, &qword_26763B098, (uint64_t (*)(uint64_t))sub_20A4845D0, MEMORY[0x263F7D028]);
  swift_allocObject();
  return sub_20A8C6580();
}

uint64_t sub_20A483508(void *a1)
{
  uint64_t v2 = sub_20A8C40E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1 + 9, a1[12]);
  __swift_project_boxed_opaque_existential_1(a1 + 4, a1[7]);
  sub_20A8C3600();
  sub_20A8C40B0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v6 = sub_20A8C39B0();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_20A48364C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v20 = a1;
  uint64_t v21 = v4;
  uint64_t v5 = sub_20A8C3F00();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  double v8 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v18 = v2[21];
  uint64_t v19 = v10;
  ((void (*)(char *, uint64_t, uint64_t, double))v10)(v9, a1, v5, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = *(void (**)(unint64_t, char *, uint64_t))(v6 + 32);
  v13(v12 + v11, v9, v5);
  sub_20A8C2EF0();
  sub_20A8C6660();
  swift_release();
  v19(v9, v20, v5);
  uint64_t v14 = swift_allocObject();
  v13(v14 + v11, v9, v5);
  uint64_t v15 = (void *)sub_20A8C6450();
  sub_20A42C470(0);
  uint64_t v16 = sub_20A8C64F0();
  swift_release();
  swift_release();

  return v16;
}

uint64_t sub_20A483884(uint64_t a1)
{
  uint64_t v2 = sub_20A8C3F00();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  double v5 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v5);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_20A8C2CB0();
  sub_20A8C6660();
  swift_release();
  double v8 = (void *)sub_20A8C6450();
  sub_20A4845D0(0);
  uint64_t v9 = sub_20A8C64F0();
  swift_release();

  return v9;
}

uint64_t sub_20A483A54()
{
  sub_20A8C2EF0();

  return sub_20A8C6660();
}

uint64_t sub_20A483AE4(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_20A8C40E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C3600();
  uint64_t v10 = sub_20A8C4050();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v10 == sub_20A8C4050() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      return result;
    }
  }
  uint64_t result = MEMORY[0x2105289B0](v3 + 16);
  if (result)
  {
    uint64_t v17 = *(void *)(v3 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v17 + 8))(v3, &off_26BE61830, a2, ObjectType, v17);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A483CA0()
{
  sub_20A484450(0);
  double v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x2105289B0](v0 + 16, v2);
  if (result)
  {
    uint64_t v6 = *(void *)(v0 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = sub_20A8C40E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
    (*(void (**)(uint64_t, _UNKNOWN **, char *, uint64_t, uint64_t))(v6 + 16))(v0, &off_26BE61830, v4, ObjectType, v6);
    swift_unknownObjectRelease();
    return sub_20A4844E8((uint64_t)v4, (uint64_t (*)(void))sub_20A484450);
  }
  return result;
}

uint64_t sub_20A483DC4(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x2105289B0](v2 + 16);
  if (result)
  {
    uint64_t v5 = *(void *)(v2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v5 + 24))(v2, &off_26BE61830, a2, ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

void *sub_20A483E58(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v44 = a5;
  uint64_t v45 = a2;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  sub_20A4573F8();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v37 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A457450(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v38 = v10;
  uint64_t v39 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v35 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_20A457450;
  CGFloat v40 = sub_20A457600;
  sub_20A484724(0, &qword_26AC6ADF8, sub_20A457450, (void (*)(void))sub_20A457600);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v42 = v13;
  uint64_t v43 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v36 = (char *)&v33 - v15;
  uint64_t v16 = sub_20A8C40E0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_20A8CC230();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  char v23 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[3] = 0;
  swift_unknownObjectWeakInit();
  sub_20A44D17C();
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v23, *MEMORY[0x263F8F060], v20);
  uint64_t v24 = sub_20A8CEC10();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  v6[21] = v24;
  *(void *)((char *)v6 + OBJC_IVAR____TtC8StocksUI20StockListDataManager_cancellables) = MEMORY[0x263F8EE88];
  sub_20A4342F4((uint64_t)a1, (uint64_t)(v6 + 4));
  sub_20A4342F4(v45, (uint64_t)(v6 + 9));
  uint64_t v25 = v34;
  v6[14] = v33;
  v6[15] = v25;
  sub_20A4342F4(v44, (uint64_t)(v6 + 16));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_unknownObjectRetain();
  sub_20A8C3600();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))((uint64_t)v6 + OBJC_IVAR____TtC8StocksUI20StockListDataManager_lastActiveWatchlist, v19, v16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v26 = v35;
  sub_20A8C36D0();
  id v46 = (id)sub_20A8CEBE0();
  uint64_t v27 = sub_20A8CEBC0();
  uint64_t v28 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v37, 1, 1, v27);
  sub_20A457600();
  sub_20A48483C(&qword_26AC7F938, (void (*)(uint64_t))sub_20A44D17C);
  uint64_t v29 = v36;
  uint64_t v30 = v38;
  sub_20A8CBE90();
  sub_20A4844E8(v28, (uint64_t (*)(void))sub_20A4573F8);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v30);
  swift_allocObject();
  swift_weakInit();
  sub_20A4847EC(&qword_26AC6ADF0, &qword_26AC6ADF8, v41, (void (*)(void))v40);
  uint64_t v31 = v42;
  sub_20A8CBEC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v29, v31);
  swift_beginAccess();
  sub_20A8CBE50();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v44);
  __swift_destroy_boxed_opaque_existential_1(v45);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v6;
}

uint64_t sub_20A484410()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A484448(uint64_t a1)
{
  return sub_20A482620(a1);
}

void sub_20A484450(uint64_t a1)
{
}

void sub_20A484484(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A4844E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A484548()
{
  if (!qword_26AC800B8)
  {
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC800B8);
    }
  }
}

uint64_t sub_20A4845A4(uint64_t a1)
{
  return sub_20A484634(a1, (uint64_t (*)(uint64_t, unint64_t))sub_20A483188);
}

void sub_20A4845D0(uint64_t a1)
{
}

uint64_t sub_20A484608(uint64_t a1)
{
  return sub_20A484634(a1, (uint64_t (*)(uint64_t, unint64_t))sub_20A482C60);
}

uint64_t sub_20A484634(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t))
{
  uint64_t v5 = *(void *)(sub_20A8C3F00() - 8);
  return a2(a1, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
}

uint64_t sub_20A4846B4()
{
  return sub_20A482E34();
}

void sub_20A484724(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_20A44D17C();
    a4();
    sub_20A48483C(&qword_26AC7F938, (void (*)(uint64_t))sub_20A44D17C);
    unint64_t v6 = sub_20A8CBE40();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A4847EC(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A484724(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A48483C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ArticleErrorMessageFactoryProvider()
{
  return self;
}

uint64_t sub_20A4848E8()
{
  return swift_unknownObjectRetain();
}

id sub_20A48497C(uint64_t a1)
{
  uint64_t v2 = sub_20A8CD2C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = 0;
  switch(a1)
  {
    case 0:
    case 3:
      return v6;
    case 1:
      if (qword_267639CE0 != -1) {
        swift_once();
      }
      uint64_t v7 = qword_2676531A0;
      goto LABEL_11;
    case 4:
    case 6:
      if (qword_267639CF8 != -1) {
        swift_once();
      }
      uint64_t v7 = qword_2676531E8;
      goto LABEL_11;
    case 5:
      if (qword_267639CF0 != -1) {
        swift_once();
      }
      uint64_t v7 = qword_2676531D0;
LABEL_11:
      uint64_t v8 = __swift_project_value_buffer(v2, (uint64_t)v7);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
      id v9 = objc_allocWithZone(MEMORY[0x263F5A3B8]);
      _s8StocksUI16OfflineAlertableV5titleSSSgvg_0();
      uint64_t v10 = (void *)sub_20A8CE240();
      swift_bridgeObjectRelease();
      _s8StocksUI16OfflineAlertableV7messageSSSgvg_0();
      uint64_t v11 = (void *)sub_20A8CE240();
      swift_bridgeObjectRelease();
      id v6 = objc_msgSend(v9, sel_initWithTitle_subtitle_, v10, v11);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return v6;
    default:
      sub_20A8CF520();
      __break(1u);
      JUMPOUT(0x20A484C0CLL);
  }
}

uint64_t *sub_20A484C28(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20A8C9830();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    id v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(void *)id v9 = *(void *)v10;
    v9[8] = v10[8];
  }
  return a1;
}

uint64_t sub_20A484D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t sub_20A484D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  return a1;
}

uint64_t sub_20A484E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t sub_20A484EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t sub_20A484F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A484F48);
}

uint64_t sub_20A484F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A484FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A484FC8);
}

uint64_t sub_20A484FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for EmptyListViewLayoutOptions()
{
  uint64_t result = qword_26AC76B20;
  if (!qword_26AC76B20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A485084()
{
  uint64_t result = sub_20A8C9830();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TickerSectionDescriptor(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TickerSectionDescriptor(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TickerSectionDescriptor()
{
  return &type metadata for TickerSectionDescriptor;
}

uint64_t sub_20A485170()
{
  return sub_20A8CF720();
}

uint64_t sub_20A4851B4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v18 = sub_20A8C4BD0();
  MEMORY[0x270FA5388](v18);
  v17[1] = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C4C00();
  MEMORY[0x270FA5388](v4 - 8);
  int v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A4856C4(0, &qword_26AC693B8, MEMORY[0x263F589F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v17 - v7;
  sub_20A4856C4(0, (unint64_t *)&unk_26AC693E0, MEMORY[0x263F58A90], v5);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (void *)((char *)v17 - v10);
  uint64_t v12 = sub_20A8C4BC0();
  MEMORY[0x270FA5388](v12 - 8);
  unint64_t v21 = *a1;
  unint64_t v13 = v21;
  sub_20A7B5AD8();
  unint64_t v21 = v13;
  sub_20A7B5C94();
  unint64_t v21 = v13;
  sub_20A7B5E58(v11);
  uint64_t v14 = sub_20A8C4BA0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 1, 1, v14);
  sub_20A8C4BB0();
  sub_20A4855D4(v13);
  sub_20A4855D4(v13);
  sub_20A8C9990();
  sub_20A485620(v13);
  switch(v13 >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      sub_20A4855D4(v13);
      sub_20A8C9980();
      sub_20A485620(v13);
      sub_20A4855D4(v13);
      sub_20A8C9970();
      sub_20A485620(v13);
      sub_20A485620(v13);
      sub_20A485620(v13);
      uint64_t v15 = MEMORY[0x263F8EE78];
      sub_20A8C4BF0();
      uint64_t v20 = v15;
      sub_20A48566C();
      sub_20A4856C4(0, &qword_26AC7F710, MEMORY[0x263F589F8], MEMORY[0x263F8D488]);
      sub_20A485728();
      sub_20A8CF290();
      return sub_20A8C4BE0();
    default:
      JUMPOUT(0);
  }
}

unint64_t sub_20A4855D4(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_20A485620(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_20A48566C()
{
  unint64_t result = qword_26AC693C0;
  if (!qword_26AC693C0)
  {
    sub_20A8C4BD0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC693C0);
  }
  return result;
}

void sub_20A4856C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_20A485728()
{
  unint64_t result = qword_26AC7F718;
  if (!qword_26AC7F718)
  {
    sub_20A4856C4(255, &qword_26AC7F710, MEMORY[0x263F589F8], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7F718);
  }
  return result;
}

uint64_t type metadata accessor for StockListRenderer()
{
  return self;
}

uint64_t sub_20A4857D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  int v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_20A485840(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_20A4858A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_20A485908(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_20A48596C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_20A4859D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A4859E4);
}

uint64_t sub_20A4859E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A485A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A485A64);
}

uint64_t sub_20A485A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StockSearchSectionHeaderViewLayoutOptions()
{
  uint64_t result = qword_26763B110;
  if (!qword_26763B110) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A485B20()
{
  uint64_t result = sub_20A8C9830();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A485BAC@<X0>(uint64_t a1@<X1>, double *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  double v31 = a3;
  double v32 = a4;
  uint64_t v6 = sub_20A8C8180();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *MEMORY[0x263F7D268];
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v11(v9, v10, v6);
  sub_20A8C8170();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v11(v9, v10, v6);
  sub_20A8C8170();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  v20(v9, v6);
  uint64_t v29 = *(void *)(a1 + 48);
  *a2 = v31;
  a2[1] = v32;
  *((void *)a2 + 2) = v13;
  *((void *)a2 + 3) = v15;
  *((void *)a2 + 4) = v17;
  *((void *)a2 + 5) = v19;
  *((void *)a2 + 6) = v22;
  *((void *)a2 + 7) = v24;
  *((void *)a2 + 8) = v26;
  *((void *)a2 + 9) = v28;
  *((void *)a2 + 10) = v29;
  return sub_20A486384(a1);
}

uint64_t sub_20A485DA4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MastheadViewLayoutAttributesFactory()
{
  return self;
}

double sub_20A485E08@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v4 = sub_20A8C2800();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8CADC0();
  double v9 = v8;
  double v11 = v10;
  double v12 = *(double *)(a1 + 24);
  double v13 = *(double *)(a1 + 40);
  double v14 = *(double *)(a1 + 8);
  double v81 = *(double *)a1;
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
  if (qword_26AC678E8 != -1) {
    swift_once();
  }
  uint64_t v15 = (void *)qword_26AC678D8;
  uint64_t v16 = (void *)unk_26AC678E0;
  uint64_t v17 = *(void **)(a1 + 48);
  swift_bridgeObjectRetain();
  id v18 = sub_20A5A8FE8(v15, v16, v17);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
  if (qword_26AC678D0 != -1) {
    swift_once();
  }
  uint64_t v19 = (void *)qword_26AC678C8;
  if (qword_26AC678C8)
  {
    sub_20A8C27F0();
    uint64_t v20 = (void *)sub_20A8C2730();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    id v21 = objc_msgSend(v19, sel_stringFromDate_, v20);

    uint64_t v19 = (void *)sub_20A8CE280();
    uint64_t v23 = v22;
  }
  else
  {
    uint64_t v23 = (void *)0xE000000000000000;
  }
  id v24 = sub_20A5A93C4(v19, v23, v17);
  swift_bridgeObjectRelease();
  uint64_t v25 = (void *)sub_20A8CEC60();
  objc_msgSend(v25, sel_descender);
  double v27 = v26;

  uint64_t v28 = (void *)sub_20A8CEC60();
  objc_msgSend(v28, sel_pointSize);
  double v30 = v29;

  double v31 = (void *)sub_20A8CEC60();
  objc_msgSend(v31, sel_pointSize);
  double v33 = v32;

  if (objc_msgSend(v17, sel_horizontalSizeClass) == (id)2)
  {
    double v78 = 40.0;
  }
  else
  {
    uint64_t v34 = (void *)sub_20A8CEC60();
    objc_msgSend(v34, sel_pointSize);
    double v79 = v30;
    double v35 = v27;
    double v36 = v14;
    double v37 = v12;
    double v38 = v9;
    double v39 = v13;
    double v40 = v11;
    double v42 = v41;

    double v78 = v42 * 0.178571429;
    double v11 = v40;
    double v13 = v39;
    double v9 = v38;
    double v12 = v37;
    double v14 = v36;
    double v27 = v35;
    double v30 = v79;
  }
  double v79 = v33 * 0.285714286;
  double v43 = ceil(fabs(v27));
  double v44 = v43 / 28.0;
  BOOL v45 = v43 < 4.0;
  double v46 = 0.142857143;
  if (!v45) {
    double v46 = v44;
  }
  double v77 = v30 * v46;
  CGFloat v47 = v12 + v9;
  double v48 = v81 - v47 - (v11 + v13);
  objc_msgSend(v18, sel_boundingRectWithSize_options_context_, 8, 0, v48, v14);
  double v50 = v49;
  objc_msgSend(v18, sel_boundingRectWithSize_options_context_, 0, 0, v48, v14);
  CGFloat v52 = v51;
  CGFloat v54 = v53;
  objc_msgSend(v24, sel_boundingRectWithSize_options_context_, 1, 0, v48, v14);
  CGFloat v56 = v55;
  CGFloat v58 = v57;
  double v59 = (void *)sub_20A8CEC60();
  objc_msgSend(v59, sel_ascender);
  double v61 = v60;

  id v62 = (void *)sub_20A8CEC60();
  objc_msgSend(v62, sel_capHeight);
  double v64 = v63;

  CGFloat v65 = v78 - (v61 - v64);
  v88.origin.CGFloat x = v47;
  v88.origin.CGFloat y = v65;
  v88.size.CGFloat width = v52;
  v88.size.CGFloat height = v54;
  CGFloat v66 = v77 + v50 + CGRectGetMinY(v88);
  v89.origin.CGFloat x = v47;
  v89.origin.CGFloat y = v66;
  v89.size.CGFloat width = v56;
  v89.size.CGFloat height = v58;
  CGRectGetMaxY(v89);
  MEMORY[0x270FA5388](v67);
  *((double *)&v76 - 12) = v81;
  *(&v76 - 11) = v68;
  *((CGFloat *)&v76 - 10) = v47;
  *((CGFloat *)&v76 - 9) = v65;
  *((CGFloat *)&v76 - 8) = v52;
  *((CGFloat *)&v76 - 7) = v54;
  *((CGFloat *)&v76 - 6) = v47;
  *((CGFloat *)&v76 - 5) = v66;
  *((CGFloat *)&v76 - 4) = v56;
  *((CGFloat *)&v76 - 3) = v58;
  *(&v76 - 2) = a1;
  sub_20A8C9690();

  uint64_t v69 = v87;
  double result = *(double *)&v82;
  long long v71 = v83;
  long long v72 = v84;
  long long v73 = v85;
  long long v74 = v86;
  uint64_t v75 = v80;
  *uint64_t v80 = v82;
  v75[1] = v71;
  v75[2] = v72;
  v75[3] = v73;
  v75[4] = v74;
  *((void *)v75 + 10) = v69;
  return result;
}

uint64_t sub_20A486348@<X0>(double *a1@<X8>)
{
  return sub_20A485BAC(*(void *)(v1 + 96), a1, *(double *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_20A486384(uint64_t a1)
{
  id v2 = *(id *)(a1 + 48);
  return a1;
}

uint64_t sub_20A4863B4(char *a1, uint64_t a2, char *a3, int a4)
{
  uint64_t v5 = v4;
  uint64_t v33 = a2;
  sub_20A489D78(0, &qword_26AC6FD50, (uint64_t (*)(uint64_t))type metadata accessor for StockViewRenderer.RenderedState, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  double v11 = (char *)&v30 - v10;
  uint64_t v12 = type metadata accessor for StockViewRenderer.RenderedState();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  id v18 = (char *)&v30 - v17;
  uint64_t v19 = &a3[OBJC_IVAR____TtC8StocksUI9StockView_revision];
  swift_beginAccess();
  uint64_t v20 = *(void *)v19;
  double v30 = &v18[*(int *)(v12 + 28)];
  sub_20A48C510((uint64_t)a1, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  *(void *)id v18 = a3;
  *((void *)v18 + 1) = v20;
  uint64_t v31 = v20;
  double v32 = a1;
  int v35 = a4;
  v18[16] = a4;
  uint64_t v21 = sub_20A8C3E20();
  uint64_t v23 = v22;
  swift_beginAccess();
  uint64_t v34 = v5;
  uint64_t v24 = *(void *)(v5 + 136);
  if (*(void *)(v24 + 16) && (unint64_t v25 = sub_20A4D1B24(v21, v23), (v26 & 1) != 0))
  {
    sub_20A48C510(*(void *)(v24 + 56) + *(void *)(v13 + 72) * v25, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StockViewRenderer.RenderedState);
    uint64_t v27 = 0;
  }
  else
  {
    uint64_t v27 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v27, 1, v12);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_20A48C33C((uint64_t)v11, &qword_26AC6FD50, (uint64_t (*)(uint64_t))type metadata accessor for StockViewRenderer.RenderedState);
    swift_endAccess();
    sub_20A486740((uint64_t)v18, v32, v33, a3, v35 & 1);
  }
  else
  {
    sub_20A48C3AC((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockViewRenderer.RenderedState);
    swift_endAccess();
    char v28 = v35;
    if (*(char **)v15 != a3
      || *((void *)v15 + 1) != v31
      || v15[16] != (v35 & 1)
      || (sub_20A6198A0((uint64_t)&v15[*(int *)(v12 + 28)], (uint64_t)v30) & 1) == 0)
    {
      sub_20A486740((uint64_t)v18, v32, v33, a3, v28 & 1);
    }
    sub_20A48C1A4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockViewRenderer.RenderedState);
  }
  return sub_20A48C1A4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StockViewRenderer.RenderedState);
}

void sub_20A486740(uint64_t a1, char *a2, uint64_t a3, char *a4, int a5)
{
  uint64_t v6 = v5;
  int v287 = a5;
  uint64_t v252 = sub_20A8CDFF0();
  uint64_t v250 = *(void *)(v252 - 8);
  MEMORY[0x270FA5388](v252);
  v248 = (char *)&v246 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v251 = sub_20A8CE010();
  uint64_t v249 = *(void *)(v251 - 8);
  MEMORY[0x270FA5388](v251);
  uint64_t v247 = (char *)&v246 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A489D78(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v278 = (uint64_t)&v246 - v15;
  uint64_t v16 = type metadata accessor for StockSparklineViewModel(0);
  uint64_t v276 = *(void *)(v16 - 8);
  uint64_t v277 = v16;
  MEMORY[0x270FA5388](v16);
  v279 = (char *)&v246 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_20A8C72A0();
  uint64_t v258 = *(void *)(v18 - 8);
  uint64_t v259 = v18;
  MEMORY[0x270FA5388](v18);
  v266 = (char *)&v246 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  v257 = (char *)&v246 - v21;
  uint64_t v22 = sub_20A8C3410();
  uint64_t v260 = *(void *)(v22 - 8);
  uint64_t v261 = v22;
  MEMORY[0x270FA5388](v22);
  v256 = (char *)&v246 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v253 = (char *)&v246 - v25;
  uint64_t v284 = sub_20A8C3E10();
  uint64_t v293 = *(void *)(v284 - 8);
  MEMORY[0x270FA5388](v284);
  v268 = (char *)&v246 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  v262 = (char *)&v246 - v28;
  uint64_t v29 = sub_20A8C2990();
  MEMORY[0x270FA5388](v29 - 8);
  v273 = (char *)&v246 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_20A8CE230();
  MEMORY[0x270FA5388](v31 - 8);
  v272 = (char *)&v246 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A489D78(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], v13);
  MEMORY[0x270FA5388](v33 - 8);
  uint64_t v274 = (uint64_t)&v246 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v267 = (uint64_t)&v246 - v36;
  MEMORY[0x270FA5388](v37);
  v286 = (char *)&v246 - v38;
  uint64_t v39 = sub_20A8C4030();
  uint64_t v282 = *(void *)(v39 - 8);
  uint64_t v283 = v39;
  MEMORY[0x270FA5388](v39);
  v280 = (char *)&v246 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v41);
  v281 = (char *)&v246 - v42;
  MEMORY[0x270FA5388](v43);
  v285 = (char *)&v246 - v44;
  MEMORY[0x270FA5388](v45);
  char v255 = (char *)&v246 - v46;
  uint64_t v254 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v254);
  uint64_t v271 = (uint64_t)&v246 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v48);
  uint64_t v270 = (uint64_t)&v246 - v49;
  MEMORY[0x270FA5388](v50);
  uint64_t v264 = (uint64_t)&v246 - v51;
  MEMORY[0x270FA5388](v52);
  uint64_t v263 = (uint64_t)&v246 - v53;
  sub_20A489D78(0, &qword_26AC6FD50, (uint64_t (*)(uint64_t))type metadata accessor for StockViewRenderer.RenderedState, v13);
  MEMORY[0x270FA5388](v54 - 8);
  CGFloat v56 = (char *)&v246 - v55;
  uint64_t v57 = sub_20A8C3E20();
  uint64_t v59 = v58;
  sub_20A48C510(a1, (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for StockViewRenderer.RenderedState);
  uint64_t v60 = type metadata accessor for StockViewRenderer.RenderedState();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v56, 0, 1, v60);
  swift_beginAccess();
  sub_20A4889B0((uint64_t)v56, v57, v59);
  swift_endAccess();
  v296 = *(char **)&a4[OBJC_IVAR____TtC8StocksUI9StockView_symbolLabel];
  objc_msgSend(v296, sel_setFrame_, *(double *)(a3 + 48), *(double *)(a3 + 56), *(double *)(a3 + 64), *(double *)(a3 + 72));
  double v61 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI9StockView_companyLabel];
  objc_msgSend(v61, sel_setFrame_, *(double *)(a3 + 88), *(double *)(a3 + 96), *(double *)(a3 + 104), *(double *)(a3 + 112));
  id v62 = *(char **)&a4[OBJC_IVAR____TtC8StocksUI9StockView_companyLabelLong];
  objc_msgSend(v62, sel_setFrame_, *(double *)(a3 + 120), *(double *)(a3 + 128), *(double *)(a3 + 136), *(double *)(a3 + 144));
  v298 = *(char **)&a4[OBJC_IVAR____TtC8StocksUI9StockView_exchangeLabel];
  objc_msgSend(v298, sel_setFrame_, *(double *)(a3 + 152), *(double *)(a3 + 160), *(double *)(a3 + 168), *(double *)(a3 + 176));
  double v63 = *(double *)(a3 + 184);
  double v64 = *(double *)(a3 + 192);
  double v65 = *(double *)(a3 + 200);
  double v66 = *(double *)(a3 + 208);
  id v288 = *(id *)&a4[OBJC_IVAR____TtC8StocksUI9StockView_priceLabel];
  objc_msgSend(v288, sel_setFrame_, v63, v64, v65, v66);
  v297 = a4;
  uint64_t v67 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI9StockView_priceChangeButton];
  objc_msgSend(v67, sel_setFrame_, *(double *)(a3 + 216), *(double *)(a3 + 224), *(double *)(a3 + 232), *(double *)(a3 + 240));
  double v68 = *(double *)(a3 + 248);
  double v69 = *(double *)(a3 + 256);
  double v70 = *(double *)(a3 + 264);
  double v71 = *(double *)(a3 + 272);
  id v292 = v67;
  objc_msgSend(v67, sel_setContentEdgeInsets_, v68, v69, v70, v71);
  v295 = v6;
  swift_beginAccess();
  sub_20A4342F4((uint64_t)(v6 + 2), (uint64_t)&v303);
  __swift_project_boxed_opaque_existential_1(&v303, *(uint64_t *)&v306);
  sub_20A8C3EF0();
  id v72 = sub_20A4E86A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v296, sel_setAttributedText_, v72);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v303);
  uint64_t v265 = a3;
  long long v73 = *(void **)(a3 + 80);
  id v289 = v61;
  id v275 = v73;
  objc_msgSend(v61, sel_setAttributedText_);
  sub_20A4342F4((uint64_t)(v6 + 2), (uint64_t)&v303);
  __swift_project_boxed_opaque_existential_1(&v303, *(uint64_t *)&v306);
  uint64_t v74 = sub_20A8C3E60();
  LOBYTE(v67) = v287;
  id v76 = sub_20A4E7AA0(v74, v75, v287);
  swift_bridgeObjectRelease();
  v294 = v62;
  objc_msgSend(v62, sel_setAttributedText_, v76);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v303);
  sub_20A4342F4((uint64_t)(v6 + 2), (uint64_t)&v303);
  __swift_project_boxed_opaque_existential_1(&v303, *(uint64_t *)&v306);
  uint64_t v77 = type metadata accessor for StockViewModel();
  v296 = &a2[*(int *)(v77 + 20)];
  uint64_t v78 = sub_20A817594((uint64_t)v296);
  id v80 = sub_20A4E7CAC(v78, v79, (char)v67);
  swift_bridgeObjectRelease();
  objc_msgSend(v298, sel_setAttributedText_, v80);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v303);
  v290 = v6 + 2;
  sub_20A4342F4((uint64_t)(v6 + 2), (uint64_t)&v303);
  double v81 = __swift_project_boxed_opaque_existential_1(&v303, *(uint64_t *)&v306);
  uint64_t v291 = v77;
  uint64_t v82 = *(int *)(v77 + 28);
  v298 = a2;
  uint64_t v83 = (uint64_t)&a2[v82];
  sub_20A8C4250();
  sub_20A8C4230();
  if (qword_26AC69070 != -1) {
    swift_once();
  }
  sub_20A8C4220();
  swift_release();
  char v84 = *(unsigned char *)(v83 + 8);
  long long v85 = (_DWORD *)MEMORY[0x263F7AF80];
  uint64_t v269 = v83;
  if (v84)
  {
    swift_bridgeObjectRetain();
    goto LABEL_19;
  }
  char v86 = v308[0];
  double v87 = *(double *)v83;
  uint64_t v88 = v263;
  sub_20A48C510(v83, v263, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  if (v86)
  {
    CGRect v89 = v255;
    uint64_t v91 = v282;
    uint64_t v90 = v283;
    (*(void (**)(char *, uint64_t, uint64_t))(v282 + 16))(v255, v88 + *(int *)(v254 + 40), v283);
    int v92 = (*(uint64_t (**)(char *, uint64_t))(v91 + 88))(v89, v90);
    char v93 = 2;
    if (v92 == *MEMORY[0x263F7AF90]
      || v92 == *MEMORY[0x263F7AF98]
      || v92 == *MEMORY[0x263F7AF68]
      || v92 == *v85
      || v92 == *MEMORY[0x263F7AF70]
      || v92 == *MEMORY[0x263F7AF88])
    {
      goto LABEL_14;
    }
    if (v92 != *MEMORY[0x263F7AF78])
    {
      if (v92 != *MEMORY[0x263F7AF60]) {
        (*(void (**)(char *, uint64_t))(v282 + 8))(v89, v283);
      }
      char v93 = 2;
      goto LABEL_14;
    }
  }
  char v93 = 0;
LABEL_14:
  sub_20A48C1A4(v88, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  if (qword_26AC6D680 != -1) {
    swift_once();
  }
  sub_20A6573EC(*(void *)(v83 + 48), *(void *)(v83 + 56), 5, 1, v93, v87);
  uint64_t v95 = v94;
  uint64_t v96 = v264;
  sub_20A48C510(v83, v264, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  if (!v95) {
    swift_bridgeObjectRetain();
  }
  sub_20A48C1A4(v96, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
LABEL_19:
  uint64_t v97 = (void *)*v81;
  sub_20A489D78(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v99 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  swift_bridgeObjectRetain();
  id v100 = v99;
  uint64_t v101 = sub_20A8C7F80();
  uint64_t v102 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v101;
  double v103 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v102;
  *(void *)(inited + 72) = v103;
  char v104 = v97 + 8;
  uint64_t v106 = v97[11];
  uint64_t v105 = v97[12];
  __swift_project_boxed_opaque_existential_1(v104, v106);
  uint64_t v107 = *(void *)(v105 + 16);
  id v108 = *(uint64_t (**)(uint64_t, uint64_t))(v107 + 40);
  id v109 = v103;
  uint64_t v110 = v108(v106, v107);
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v110;
  sub_20A4CF8B0(inited);
  id v111 = objc_allocWithZone(MEMORY[0x263F086A0]);
  CGFloat v112 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A48C578((unint64_t *)&qword_26AC7F9F8, 255, type metadata accessor for Key);
  id v113 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v114 = objc_msgSend(v111, sel_initWithString_attributes_, v112, v113);
  swift_bridgeObjectRelease();

  objc_msgSend(v288, sel_setAttributedText_, v114);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v303);
  objc_msgSend(v289, sel_setNumberOfLines_, 0);
  objc_msgSend(v294, sel_setNumberOfLines_, 0);
  uint64_t v115 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AEF0];
  uint64_t v116 = (uint64_t)v296;
  uint64_t v117 = (uint64_t)v286;
  sub_20A48C2BC((uint64_t)v296, (uint64_t)v286, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  id v118 = v285;
  id v119 = v298;
  sub_20A8C3E70();
  uint64_t v120 = v270;
  sub_20A5EC850(v117, v118, 0x9380E29380E2, 0xA600000000000000, v270);
  v294 = &v119[*(int *)(v291 + 32)];
  uint64_t v121 = sub_20A5EBCFC((uint64_t)v294, 0);
  uint64_t v123 = v122;
  sub_20A48C1A4(v120, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  sub_20A48C2BC(v116, v117, &qword_26AC68FB0, v115);
  sub_20A8C3E70();
  uint64_t v124 = v271;
  sub_20A5EC850(v117, v118, 0x9380E29380E2, 0xA600000000000000, v271);
  double v125 = *(double *)(v124 + 16);
  LODWORD(v120) = *(unsigned __int8 *)(v124 + 24);
  sub_20A48C1A4(v124, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  if (v120) {
    char v126 = 2;
  }
  else {
    char v126 = v125 < 0.0;
  }
  double v127 = v295;
  CGFloat v128 = v290;
  __swift_project_boxed_opaque_existential_1(v290, v295[5]);
  id v129 = sub_20A4E7EB8(v121, v123, v126);
  id v130 = v292;
  objc_msgSend(v292, sel_setAttributedTitle_forState_, v129, 0);

  __swift_project_boxed_opaque_existential_1(v128, v127[5]);
  id v131 = sub_20A4E809C(v121, v123, v126);
  swift_bridgeObjectRelease();
  objc_msgSend(v130, sel_setAttributedTitle_forState_, v131, 1);

  id v289 = objc_msgSend(v289, sel_attributedText);
  unint64_t v132 = 0x263F08000uLL;
  v286 = (char *)Stock.accessibleSymbol.getter();
  id v288 = objc_msgSend(v288, sel_attributedText);
  uint64_t v133 = (uint64_t)v294;
  sub_20A5EC13C();
  id v134 = objc_allocWithZone(MEMORY[0x263F086A0]);
  CGFloat v135 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  v285 = (char *)objc_msgSend(v134, sel_initWithString_, v135);

  sub_20A8CE220();
  sub_20A8C2940();
  sub_20A8CE2E0();
  id v136 = objc_allocWithZone(MEMORY[0x263F086A0]);
  CGFloat v137 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  CGFloat v138 = (char *)objc_msgSend(v136, sel_initWithString_, v137);

  uint64_t v139 = sub_20A5EC394(v133);
  if (v140)
  {
    uint64_t v141 = v140;
    v273 = (char *)v139;
    uint64_t v142 = (uint64_t)v296;
    uint64_t v143 = v267;
    sub_20A48C2BC((uint64_t)v296, v267, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    uint64_t v144 = v293;
    uint64_t v145 = v284;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v293 + 48))(v143, 1, v284) == 1)
    {
      uint64_t v146 = v145;
      sub_20A48C33C(v143, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    }
    else
    {
      double v147 = v262;
      (*(void (**)(char *, uint64_t, uint64_t))(v144 + 32))(v262, v143, v145);
      sub_20A8C3D10();
      if (v148)
      {
        uint64_t v146 = v145;
        (*(void (**)(char *, uint64_t))(v144 + 8))(v147, v145);
        uint64_t v142 = (uint64_t)v296;
      }
      else
      {
        uint64_t v149 = v260;
        uint64_t v150 = v261;
        double v151 = v253;
        (*(void (**)(char *, void, uint64_t))(v260 + 104))(v253, *MEMORY[0x263F7AB88], v261);
        sub_20A48C578((unint64_t *)&qword_26AC68E10, 255, MEMORY[0x263F7AB98]);
        sub_20A8CE570();
        sub_20A8CE570();
        double v152 = v303;
        uint64_t v153 = v308[0];
        (*(void (**)(char *, uint64_t))(v149 + 8))(v151, v150);
        if (*(void *)&v152 == v153)
        {
          id v154 = objc_msgSend(self, sel_mainBundle);
          uint64_t v142 = (uint64_t)v296;
          uint64_t v146 = v284;
          unint64_t v132 = 0x263F08000uLL;
          sub_20A8C2370();

          (*(void (**)(char *, uint64_t))(v293 + 8))(v262, v146);
        }
        else
        {
          uint64_t v146 = v284;
          (*(void (**)(char *))(v293 + 8))(v262);
          uint64_t v142 = (uint64_t)v296;
          unint64_t v132 = 0x263F08000;
        }
      }
    }
    sub_20A489D78(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
    uint64_t v155 = swift_allocObject();
    *(_OWORD *)(v155 + 16) = xmmword_20A8D3DC0;
    *(void *)(v155 + 56) = MEMORY[0x263F8D310];
    *(void *)(v155 + 64) = sub_20A43F830();
    *(void *)(v155 + 32) = v273;
    *(void *)(v155 + 40) = v141;
    sub_20A8CE2B0();
    swift_bridgeObjectRelease();
    id v156 = objc_allocWithZone(*(Class *)(v132 + 1696));
    uint64_t v157 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    uint64_t v158 = (char *)objc_msgSend(v156, sel_initWithString_, v157);

    CGFloat v138 = v158;
  }
  else
  {
    uint64_t v146 = v284;
    uint64_t v142 = (uint64_t)v296;
  }
  uint64_t v159 = *(void **)&v297[OBJC_IVAR____TtC8StocksUI9StockView_axElement];
  unsigned int v160 = v138;
  uint64_t v161 = v146;
  if (v159)
  {
    id v162 = objc_allocWithZone(*(Class *)(v132 + 1696));
    id v163 = v159;
    id v164 = (void *)sub_20A8CE240();
    id v165 = objc_msgSend(v162, sel_initWithString_, v164);

    sub_20A489D78(0, &qword_26AC80100, (uint64_t (*)(uint64_t))sub_20A48C4A8, MEMORY[0x263F8E0F8]);
    *(double *)&uint64_t v166 = COERCE_DOUBLE(swift_allocObject());
    *(_OWORD *)(v166 + 16) = xmmword_20A8D7080;
    id v167 = v289;
    CGFloat v169 = v285;
    id v168 = v286;
    *(void *)(v166 + 32) = v289;
    *(void *)(v166 + 40) = v168;
    uint64_t v170 = v161;
    id v171 = v288;
    *(void *)(v166 + 48) = v288;
    *(void *)(v166 + 56) = v169;
    *(void *)(v166 + 64) = v160;
    double v303 = *(double *)&v166;
    sub_20A8CE620();
    id v172 = v167;
    id v173 = v168;
    id v174 = v171;
    uint64_t v161 = v170;
    CGFloat v175 = v169;
    uint64_t v142 = (uint64_t)v296;
    double v176 = v160;
    double v177 = (void *)sub_20A8C82D0();

    swift_bridgeObjectRelease();
    objc_msgSend(v163, sel_setAccessibilityAttributedLabel_, v177);
  }
  MEMORY[0x270FA5388](v139);
  sub_20A48C20C();
  sub_20A48C578(&qword_26AC6D468, 255, (void (*)(uint64_t))sub_20A48C20C);
  sub_20A8CEEA0();
  sub_20A5EC13C();
  CGFloat v178 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  id v179 = v292;
  objc_msgSend(v292, sel_setAccessibilityLabel_, v178);

  double v180 = &off_263FDE000;
  id v181 = objc_msgSend(v160, sel_string);
  if (!v181)
  {
    sub_20A8CE280();
    id v181 = (id)sub_20A8CE240();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v179, sel_setAccessibilityValue_, v181);

  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v183 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v184 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v179, sel_setAccessibilityHint_, v184);

  uint64_t v185 = v274;
  sub_20A48C2BC(v142, v274, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  uint64_t v186 = v293;
  int v187 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v293 + 48))(v185, 1, v161);
  uint64_t v188 = (uint64_t)v279;
  v296 = v160;
  if (v187 == 1)
  {
    sub_20A48C33C(v185, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    __swift_project_boxed_opaque_existential_1(v290, v295[5]);
    sub_20A4E76DC(v179, 2u);
    goto LABEL_60;
  }
  uint64_t v189 = v179;
  CGRect v190 = v268;
  (*(void (**)(char *, uint64_t, uint64_t))(v186 + 32))(v268, v185, v161);
  sub_20A4342F4((uint64_t)v290, (uint64_t)&v303);
  __swift_project_boxed_opaque_existential_1(&v303, *(uint64_t *)&v306);
  BOOL v191 = COERCE_DOUBLE(sub_20A8C3D10()) < 0.0;
  if (v192) {
    unsigned __int8 v193 = 2;
  }
  else {
    unsigned __int8 v193 = v191;
  }
  sub_20A4E76DC(v189, v193);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v303);
  if (!UIAccessibilityShouldDifferentiateWithoutColor()) {
    goto LABEL_59;
  }
  uint64_t v195 = v260;
  uint64_t v194 = v261;
  CGRect v196 = v256;
  (*(void (**)(char *, char *, uint64_t))(v260 + 16))(v256, v294, v261);
  int v197 = (*(uint64_t (**)(char *, uint64_t))(v195 + 88))(v196, v194);
  CGRect v198 = (unsigned int *)MEMORY[0x263F7A218];
  if (v197 == *MEMORY[0x263F7AB90])
  {
    CGRect v199 = v257;
    uint64_t v200 = v258;
    CGRect v201 = *(void (**)(char *, uint64_t, uint64_t))(v258 + 104);
    uint64_t v202 = v259;
    v201(v257, *MEMORY[0x263F7A210], v259);
    goto LABEL_52;
  }
  uint64_t v200 = v258;
  uint64_t v202 = v259;
  if (v197 == *MEMORY[0x263F7AB78])
  {
    uint64_t v203 = *MEMORY[0x263F7A208];
LABEL_51:
    CGRect v201 = *(void (**)(char *, uint64_t, uint64_t))(v258 + 104);
    CGRect v199 = v257;
    v201(v257, v203, v259);
LABEL_52:
    v201(v266, *v198, v202);
    sub_20A48C578(&qword_26AC676F8, 255, MEMORY[0x263F7A220]);
    sub_20A8CE570();
    sub_20A8CE570();
    if (*(void *)&v303 == v308[0] && *(void *)&v304 == v308[1])
    {
      swift_bridgeObjectRelease_n();
      CGRect v204 = *(void (**)(char *, uint64_t))(v200 + 8);
      v204(v266, v202);
      v204(v199, v202);
      CGRect v190 = v268;
      id v205 = v292;
      uint64_t v161 = v284;
      double v180 = &off_263FDE000;
LABEL_56:
      sub_20A8C3DC0();
      if ((v208 & 1) == 0)
      {
        double v209 = COERCE_DOUBLE(sub_20A8C3D10());
        if ((v210 & 1) == 0) {
          sub_20A4E8884(v205, v209 < 0.0);
        }
      }
      goto LABEL_59;
    }
    char v206 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v207 = *(void (**)(char *, uint64_t))(v200 + 8);
    v207(v266, v202);
    v207(v199, v202);
    CGRect v190 = v268;
    id v205 = v292;
    uint64_t v161 = v284;
    double v180 = &off_263FDE000;
    if (v206) {
      goto LABEL_56;
    }
LABEL_59:
    (*(void (**)(char *, uint64_t))(v293 + 8))(v190, v161);
LABEL_60:
    uint64_t v211 = v278;
    sub_20A48C2BC((uint64_t)&v298[*(int *)(v291 + 24)], v278, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v276 + 48))(v211, 1, v277) == 1)
    {
      sub_20A48C33C(v211, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel);
    }
    else
    {
      sub_20A48C3AC(v211, v188, type metadata accessor for StockSparklineViewModel);
      uint64_t v212 = *(void **)(v265 + 320);
      if (v212 != (void *)1)
      {
        sub_20A48C414(v265 + 280, (uint64_t)v308);
        sub_20A48C414((uint64_t)v308, (uint64_t)&v303);
        if (v307 != 1)
        {
          double v239 = v303;
          double v240 = v304;
          double v241 = v305;
          double v242 = v306;
          uint64_t v243 = *(void **)&v297[OBJC_IVAR____TtC8StocksUI9StockView_sparklineView];
          id v244 = v212;
          objc_msgSend(v243, sel_setFrame_, v239, v240, v241, v242);
          __swift_project_boxed_opaque_existential_1(v295 + 7, v295[10]);
          (*(void (**)(char *, void, uint64_t))(v250 + 104))(v248, *MEMORY[0x263F7CC40], v252);
          uint64_t v245 = (uint64_t)v247;
          sub_20A8CE000();
          sub_20A844AB4(v188, (char *)v243, v212, v245);
          (*(void (**)(uint64_t, uint64_t))(v249 + 8))(v245, v251);
          objc_msgSend(v243, sel_setHidden_, 0);
          sub_20A458E2C(v212);
          sub_20A48C1A4(v188, type metadata accessor for StockSparklineViewModel);
          if (!UIAccessibilityDarkerSystemColorsEnabled()) {
            goto LABEL_68;
          }
LABEL_66:
          if (v287)
          {
            id v213 = objc_msgSend(self, sel_lightTextColor);
            objc_msgSend(v297, sel_setBackgroundColor_, v213);
          }
LABEL_68:
          uint64_t v214 = v297;
          uint64_t v215 = v295;
          id v216 = sub_20A488D08((uint64_t)v298);
          uint64_t v217 = *(void **)&v214[OBJC_IVAR____TtC8StocksUI9StockView_accessibilityPriceString];
          *(void *)&v214[OBJC_IVAR____TtC8StocksUI9StockView_accessibilityPriceString] = v216;

          __swift_project_boxed_opaque_existential_1(v215 + 12, v215[15]);
          id v218 = [v275 (SEL)v180[340]];
          sub_20A8CE280();

          uint64_t v219 = sub_20A8C3A90();
          uint64_t v221 = v220;
          swift_bridgeObjectRelease();
          uint64_t v222 = (uint64_t *)&v214[OBJC_IVAR____TtC8StocksUI9StockView_accessibilityUserInputCompanyLabel];
          *uint64_t v222 = v219;
          v222[1] = v221;
          swift_bridgeObjectRelease();
          __swift_project_boxed_opaque_existential_1(v215 + 12, v215[15]);
          sub_20A8C3E60();
          uint64_t v223 = sub_20A8C3A90();
          uint64_t v225 = v224;
          swift_bridgeObjectRelease();
          long long v226 = (uint64_t *)&v214[OBJC_IVAR____TtC8StocksUI9StockView_accessibilityUserInputCompanyName];
          *long long v226 = v223;
          v226[1] = v225;
          swift_bridgeObjectRelease();
          char v227 = v281;
          sub_20A8C3E70();
          uint64_t v229 = v282;
          uint64_t v228 = v283;
          long long v230 = v280;
          (*(void (**)(char *, void, uint64_t))(v282 + 104))(v280, *MEMORY[0x263F7AF80], v283);
          sub_20A48C578((unint64_t *)&unk_26AC82AE0, 255, MEMORY[0x263F7AFA0]);
          sub_20A8CE570();
          sub_20A8CE570();
          if (v301 == v299 && v302 == v300)
          {
            swift_bridgeObjectRelease_n();
            long long v231 = *(void (**)(char *, uint64_t))(v229 + 8);
            v231(v230, v228);
            v231(v227, v228);
            char v232 = 0;
            id v233 = v288;
            long long v234 = v296;
          }
          else
          {
            char v235 = sub_20A8CF760();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            long long v236 = *(void (**)(char *, uint64_t))(v229 + 8);
            v236(v230, v228);
            v236(v227, v228);
            char v232 = 0;
            id v233 = v288;
            long long v234 = v296;
            if ((v235 & 1) == 0)
            {
              if (sub_20A8C3E20() != 0x5053475E3A504E53 || v237 != 0xE900000000000043)
              {
                char v238 = sub_20A8CF760();
                swift_bridgeObjectRelease();

                if (v238) {
                  char v232 = 2;
                }
                else {
                  char v232 = 1;
                }
                goto LABEL_76;
              }
              swift_bridgeObjectRelease();
              char v232 = 2;
            }
          }

LABEL_76:
          v214[OBJC_IVAR____TtC8StocksUI9StockView_accessibilitySymbolLabelSpeechType] = v232;
          return;
        }
      }
      sub_20A48C1A4(v188, type metadata accessor for StockSparklineViewModel);
    }
    objc_msgSend(*(id *)&v297[OBJC_IVAR____TtC8StocksUI9StockView_sparklineView], sel_setHidden_, 1);
    if (!UIAccessibilityDarkerSystemColorsEnabled()) {
      goto LABEL_68;
    }
    goto LABEL_66;
  }
  if (v197 == *MEMORY[0x263F7AB88])
  {
    uint64_t v203 = *MEMORY[0x263F7A218];
    goto LABEL_51;
  }
  sub_20A8CF750();
  __break(1u);
}

uint64_t sub_20A4889B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_20A489D78(0, &qword_26AC6FD50, (uint64_t (*)(uint64_t))type metadata accessor for StockViewRenderer.RenderedState, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = type metadata accessor for StockViewRenderer.RenderedState();
  double v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, double))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_20A48C33C(a1, &qword_26AC6FD50, (uint64_t (*)(uint64_t))type metadata accessor for StockViewRenderer.RenderedState);
    sub_20A48BAA4(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_20A48C33C((uint64_t)v10, &qword_26AC6FD50, (uint64_t (*)(uint64_t))type metadata accessor for StockViewRenderer.RenderedState);
  }
  else
  {
    sub_20A48C3AC(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StockViewRenderer.RenderedState);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_20A7A4258((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_20A488BCC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  uint64_t v9 = sub_20A8C3E20();
  uint64_t v11 = v10;
  uint64_t v12 = sub_20A8C3EC0();
  uint64_t v14 = v13;
  uint64_t v15 = sub_20A8C3EE0();
  uint64_t v17 = v16;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  a2[2] = v9;
  a2[3] = v11;
  a2[4] = v12;
  a2[5] = v14;
  a2[6] = v15;
  a2[7] = v17;
  *a2 = 0x6C6F626D7973;
  a2[1] = 0xE600000000000000;
  return result;
}

id sub_20A488D08(uint64_t a1)
{
  id v2 = v1;
  uint64_t v66 = *v2;
  sub_20A489D78(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  double v6 = (char *)&v63 - v5;
  uint64_t v7 = sub_20A8C4030();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v11);
  uint64_t v63 = (uint64_t)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v63 - v14;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v63 - v17;
  uint64_t v64 = type metadata accessor for StockViewModel();
  uint64_t v65 = a1;
  uint64_t v19 = a1 + *(int *)(v64 + 28);
  sub_20A8C4250();
  sub_20A8C4230();
  if (qword_26AC69070 != -1) {
    swift_once();
  }
  sub_20A8C4220();
  swift_release();
  if (*(unsigned char *)(v19 + 8))
  {
    uint64_t v21 = *(void *)(v19 + 64);
    uint64_t v20 = *(void *)(v19 + 72);
    swift_bridgeObjectRetain();
    goto LABEL_19;
  }
  char v23 = v69;
  double v24 = *(double *)v19;
  sub_20A48C510(v19, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  if (v23)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, &v18[*(int *)(v11 + 40)], v7);
    int v25 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
    char v26 = 2;
    if (v25 == *MEMORY[0x263F7AF90]
      || v25 == *MEMORY[0x263F7AF98]
      || v25 == *MEMORY[0x263F7AF68]
      || v25 == *MEMORY[0x263F7AF80]
      || v25 == *MEMORY[0x263F7AF70]
      || v25 == *MEMORY[0x263F7AF88])
    {
      goto LABEL_14;
    }
    if (v25 != *MEMORY[0x263F7AF78])
    {
      if (v25 != *MEMORY[0x263F7AF60]) {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }
      char v26 = 2;
      goto LABEL_14;
    }
  }
  char v26 = 0;
LABEL_14:
  sub_20A48C1A4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  if (qword_26AC6D680 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_20A6573EC(*(void *)(v19 + 48), *(void *)(v19 + 56), 5, 1, v26, v24);
  uint64_t v20 = v27;
  sub_20A48C510(v19, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  if (!v20)
  {
    uint64_t v21 = *((void *)v15 + 8);
    uint64_t v20 = *((void *)v15 + 9);
    swift_bridgeObjectRetain();
  }
  sub_20A48C1A4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
LABEL_19:
  sub_20A48C578(&qword_26AC6FDB8, v22, (void (*)(uint64_t))type metadata accessor for StockViewRenderer);
  sub_20A8C41C0();
  if (v69 == 1)
  {
    sub_20A48C2BC(v65 + *(int *)(v64 + 20), (uint64_t)v6, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    uint64_t v28 = sub_20A8C3E10();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v6, 1, v28) == 1)
    {
      sub_20A48C33C((uint64_t)v6, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      goto LABEL_26;
    }
    uint64_t v30 = sub_20A8C3D30();
    uint64_t v32 = v31;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v28);
    if (!v32) {
      goto LABEL_26;
    }
    uint64_t v69 = v21;
    uint64_t v70 = v20;
    uint64_t v67 = v30;
    uint64_t v68 = v32;
    sub_20A48C5C0();
    uint64_t v33 = MEMORY[0x263F8D310];
    if ((sub_20A8CF250() & 1) == 0)
    {
LABEL_39:
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v45 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_20A8C2370();

      uint64_t v46 = (void *)sub_20A8CE240();
      swift_bridgeObjectRelease();
      uint64_t v47 = sub_20A8CE300();
      uint64_t v49 = v48;
      swift_bridgeObjectRelease();
      sub_20A42CFF0(0, &qword_26AC82398);
      uint64_t v50 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
      sub_20A489D78(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
      uint64_t v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = xmmword_20A8D4540;
      *(void *)(v51 + 56) = v33;
      unint64_t v52 = sub_20A43F830();
      *(void *)(v51 + 32) = v21;
      *(void *)(v51 + 40) = v20;
      *(void *)(v51 + 96) = v33;
      *(void *)(v51 + 104) = v52;
      *(void *)(v51 + 64) = v52;
      *(void *)(v51 + 72) = v47;
      *(void *)(v51 + 80) = v49;
      swift_bridgeObjectRetain();
      uint64_t v35 = (void *)sub_20A8CEF50();
      sub_20A8CE280();
      id v53 = objc_allocWithZone(MEMORY[0x263F089B8]);
      uint64_t v54 = (void *)sub_20A8CE240();
      swift_bridgeObjectRelease();
      id v36 = objc_msgSend(v53, sel_initWithString_, v54);

      uint64_t v55 = (void *)sub_20A8CE240();
      swift_bridgeObjectRelease();
      id v56 = objc_msgSend(v35, sel_rangeOfString_, v55);
      uint64_t v58 = v57;

      sub_20A489D78(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, v50);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_20A8D3DC0;
      uint64_t v60 = (void *)*MEMORY[0x263F83230];
      *(void *)(inited + 32) = *MEMORY[0x263F83230];
      *(void *)(inited + 64) = MEMORY[0x263F8D4F8];
      *(unsigned char *)(inited + 40) = 1;
      id v61 = v60;
      sub_20A4CF8B0(inited);
      type metadata accessor for Key(0);
      sub_20A48C578((unint64_t *)&qword_26AC7F9F8, 255, type metadata accessor for Key);
      id v62 = (void *)sub_20A8CE170();
      swift_bridgeObjectRelease();
      objc_msgSend(v36, sel_addAttributes_range_, v62, v56, v58);

      goto LABEL_27;
    }
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v19 + 8))
    {
      uint64_t v21 = *(void *)(v19 + 64);
      uint64_t v20 = *(void *)(v19 + 72);
      swift_bridgeObjectRetain();
      goto LABEL_39;
    }
    double v38 = *(double *)v19;
    if (qword_26AC6D680 != -1) {
      swift_once();
    }
    id v39 = (id)sub_20A658280(0, 5, 1, v38);
    objc_msgSend(v39, sel_setNumberStyle_, 1);
    id v40 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v38);
    id v41 = objc_msgSend(v39, sel_stringFromNumber_, v40);

    if (v41)
    {
      uint64_t v21 = sub_20A8CE280();
      uint64_t v20 = v42;

      uint64_t v43 = v63;
      sub_20A48C510(v19, v63, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
      if (v20)
      {
LABEL_38:
        sub_20A48C1A4(v43, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
        goto LABEL_39;
      }
    }
    else
    {

      uint64_t v43 = v63;
      sub_20A48C510(v19, v63, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
    }
    uint64_t v21 = *(void *)(v43 + 64);
    uint64_t v20 = *(void *)(v43 + 72);
    swift_bridgeObjectRetain();
    goto LABEL_38;
  }
LABEL_26:
  id v34 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v35 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  id v36 = objc_msgSend(v34, sel_initWithString_, v35);
LABEL_27:

  return v36;
}

uint64_t sub_20A489790()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockViewRenderer()
{
  return self;
}

void *sub_20A489804(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v5 = *(int *)(a3 + 28);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_20A8C3F00();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    uint64_t v9 = (int *)type metadata accessor for StockViewModel();
    uint64_t v10 = v9[5];
    uint64_t v11 = (void *)(v6 + v10);
    uint64_t v12 = (const void *)(v7 + v10);
    uint64_t v13 = sub_20A8C3E10();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      sub_20A489D78(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    uint64_t v17 = v9[6];
    uint64_t v18 = (char *)(v6 + v17);
    uint64_t v19 = (char *)(v7 + v17);
    uint64_t v20 = (int *)type metadata accessor for StockSparklineViewModel(0);
    uint64_t v21 = *((void *)v20 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
    {
      sub_20A489D78(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      uint64_t v23 = sub_20A8CDCD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v18, v19, v23);
      uint64_t v24 = v20[5];
      int v25 = &v18[v24];
      char v26 = &v19[v24];
      *(void *)int v25 = *(void *)v26;
      v25[8] = v26[8];
      uint64_t v27 = v20[6];
      uint64_t v28 = &v18[v27];
      uint64_t v29 = &v19[v27];
      *(void *)uint64_t v28 = *(void *)v29;
      v28[8] = v29[8];
      v18[v20[7]] = v19[v20[7]];
      uint64_t v30 = v20[8];
      uint64_t v31 = &v18[v30];
      uint64_t v32 = &v19[v30];
      uint64_t v33 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      (*(void (**)(char *, void, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
    }
    uint64_t v34 = v9[7];
    uint64_t v60 = v9;
    uint64_t v35 = v6 + v34;
    uint64_t v36 = v7 + v34;
    *(void *)uint64_t v35 = *(void *)(v7 + v34);
    *(unsigned char *)(v35 + 8) = *(unsigned char *)(v7 + v34 + 8);
    *(void *)(v35 + 16) = *(void *)(v7 + v34 + 16);
    *(unsigned char *)(v35 + 24) = *(unsigned char *)(v7 + v34 + 24);
    *(void *)(v35 + 32) = *(void *)(v7 + v34 + 32);
    *(unsigned char *)(v35 + 40) = *(unsigned char *)(v7 + v34 + 40);
    uint64_t v37 = *(void *)(v7 + v34 + 56);
    *(void *)(v35 + 48) = *(void *)(v7 + v34 + 48);
    *(void *)(v35 + 56) = v37;
    uint64_t v38 = *(void *)(v7 + v34 + 72);
    *(void *)(v35 + 64) = *(void *)(v7 + v34 + 64);
    *(void *)(v35 + 72) = v38;
    id v39 = (int *)type metadata accessor for PriceViewModel();
    uint64_t v40 = v39[9];
    uint64_t v41 = v35 + v40;
    uint64_t v42 = v36 + v40;
    uint64_t v58 = v6;
    uint64_t v59 = v7;
    uint64_t v43 = sub_20A8C2EB0();
    uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v44(v41, v42, v43);
    uint64_t v45 = v39[10];
    uint64_t v46 = v35 + v45;
    uint64_t v47 = v36 + v45;
    uint64_t v48 = sub_20A8C4030();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
    uint64_t v49 = v39[11];
    uint64_t v50 = v35 + v49;
    uint64_t v51 = v36 + v49;
    uint64_t v52 = sub_20A8C2990();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
    uint64_t v53 = v60[8];
    uint64_t v54 = v58 + v53;
    uint64_t v55 = v59 + v53;
    uint64_t v56 = sub_20A8C3410();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
    *(unsigned char *)(v58 + v60[9]) = *(unsigned char *)(v59 + v60[9]);
  }
  return v3;
}

void sub_20A489D78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A489DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 28);
  uint64_t v3 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  int v4 = (int *)type metadata accessor for StockViewModel();
  uint64_t v5 = v2 + v4[5];
  uint64_t v6 = sub_20A8C3E10();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = v2 + v4[6];
  uint64_t v9 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    uint64_t v10 = sub_20A8CDCD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
    uint64_t v11 = v8 + *(int *)(v9 + 32);
    uint64_t v12 = sub_20A8C3D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = v2 + v4[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v15 = v13 + v14[9];
  uint64_t v16 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = v13 + v14[10];
  uint64_t v18 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = v13 + v14[11];
  uint64_t v20 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = v2 + v4[8];
  uint64_t v22 = sub_20A8C3410();
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);

  return v23(v21, v22);
}

uint64_t sub_20A48A0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v3 = *(int *)(a3 + 28);
  uint64_t v4 = a1 + v3;
  uint64_t v5 = a2 + v3;
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v4, v5, v6);
  uint64_t v7 = (int *)type metadata accessor for StockViewModel();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(v4 + v8);
  uint64_t v10 = (const void *)(v5 + v8);
  uint64_t v11 = sub_20A8C3E10();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_20A489D78(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = v7[6];
  uint64_t v15 = (char *)(v4 + v14);
  uint64_t v16 = (char *)(v5 + v14);
  uint64_t v17 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v18 = *((void *)v17 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
  {
    sub_20A489D78(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = sub_20A8CDCD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v15, v16, v20);
    uint64_t v21 = v17[5];
    uint64_t v22 = &v15[v21];
    uint64_t v23 = &v16[v21];
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    uint64_t v24 = v17[6];
    int v25 = &v15[v24];
    char v26 = &v16[v24];
    *(void *)int v25 = *(void *)v26;
    v25[8] = v26[8];
    v15[v17[7]] = v16[v17[7]];
    uint64_t v27 = v17[8];
    uint64_t v28 = &v15[v27];
    uint64_t v29 = &v16[v27];
    uint64_t v30 = sub_20A8C3D00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    (*(void (**)(char *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v31 = v7[7];
  uint64_t v32 = v4 + v31;
  uint64_t v56 = v7;
  uint64_t v33 = v5 + v31;
  *(void *)uint64_t v32 = *(void *)(v5 + v31);
  *(unsigned char *)(v32 + 8) = *(unsigned char *)(v5 + v31 + 8);
  *(void *)(v32 + 16) = *(void *)(v5 + v31 + 16);
  *(unsigned char *)(v32 + 24) = *(unsigned char *)(v5 + v31 + 24);
  *(void *)(v32 + 32) = *(void *)(v5 + v31 + 32);
  *(unsigned char *)(v32 + 40) = *(unsigned char *)(v5 + v31 + 40);
  uint64_t v34 = *(void *)(v5 + v31 + 56);
  *(void *)(v32 + 48) = *(void *)(v5 + v31 + 48);
  *(void *)(v32 + 56) = v34;
  uint64_t v35 = *(void *)(v5 + v31 + 72);
  *(void *)(v32 + 64) = *(void *)(v5 + v31 + 64);
  *(void *)(v32 + 72) = v35;
  uint64_t v36 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v37 = v36[9];
  uint64_t v38 = v32 + v37;
  uint64_t v39 = v33 + v37;
  uint64_t v40 = sub_20A8C2EB0();
  uint64_t v55 = v4;
  uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v41(v38, v39, v40);
  uint64_t v42 = v36[10];
  uint64_t v43 = v32 + v42;
  uint64_t v44 = v33 + v42;
  uint64_t v45 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
  uint64_t v46 = v36[11];
  uint64_t v47 = v32 + v46;
  uint64_t v48 = v33 + v46;
  uint64_t v49 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
  uint64_t v50 = v56[8];
  uint64_t v51 = v55 + v50;
  uint64_t v52 = v5 + v50;
  uint64_t v53 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
  *(unsigned char *)(v55 + v56[9]) = *(unsigned char *)(v5 + v56[9]);
  return a1;
}

uint64_t sub_20A48A5E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v3 = *(int *)(a3 + 28);
  uint64_t v4 = a1 + v3;
  uint64_t v5 = a2 + v3;
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(v4, v5, v6);
  uint64_t v7 = (int *)type metadata accessor for StockViewModel();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(v4 + v8);
  uint64_t v10 = (void *)(v5 + v8);
  uint64_t v11 = sub_20A8C3E10();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    sub_20A489D78(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = v7[6];
  uint64_t v18 = (unsigned char *)(v4 + v17);
  uint64_t v19 = (unsigned char *)(v5 + v17);
  uint64_t v20 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v21 = *((void *)v20 - 1);
  uint64_t v22 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      uint64_t v62 = sub_20A8CDCD0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v62 - 8) + 24))(v18, v19, v62);
      uint64_t v63 = v20[5];
      uint64_t v64 = &v18[v63];
      uint64_t v65 = &v19[v63];
      uint64_t v66 = *(void *)v65;
      v64[8] = v65[8];
      *(void *)uint64_t v64 = v66;
      uint64_t v67 = v20[6];
      uint64_t v68 = &v18[v67];
      uint64_t v69 = &v19[v67];
      LOBYTE(v66) = v69[8];
      *(void *)uint64_t v68 = *(void *)v69;
      v68[8] = v66;
      v18[v20[7]] = v19[v20[7]];
      uint64_t v70 = v20[8];
      double v71 = &v18[v70];
      id v72 = &v19[v70];
      uint64_t v73 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 24))(v71, v72, v73);
      goto LABEL_13;
    }
    sub_20A48C1A4((uint64_t)v18, type metadata accessor for StockSparklineViewModel);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    sub_20A489D78(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
    memcpy(v18, v19, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v25 = sub_20A8CDCD0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 16))(v18, v19, v25);
  uint64_t v26 = v20[5];
  uint64_t v27 = &v18[v26];
  uint64_t v28 = &v19[v26];
  uint64_t v29 = *(void *)v28;
  v27[8] = v28[8];
  *(void *)uint64_t v27 = v29;
  uint64_t v30 = v20[6];
  uint64_t v31 = &v18[v30];
  uint64_t v32 = &v19[v30];
  LOBYTE(v29) = v32[8];
  *(void *)uint64_t v31 = *(void *)v32;
  v31[8] = v29;
  v18[v20[7]] = v19[v20[7]];
  uint64_t v33 = v20[8];
  uint64_t v34 = &v18[v33];
  uint64_t v35 = &v19[v33];
  uint64_t v36 = sub_20A8C3D00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
LABEL_13:
  uint64_t v38 = v7[7];
  uint64_t v39 = v4 + v38;
  uint64_t v40 = v5 + v38;
  uint64_t v41 = *(void *)(v5 + v38);
  *(unsigned char *)(v39 + 8) = *(unsigned char *)(v40 + 8);
  *(void *)uint64_t v39 = v41;
  uint64_t v42 = *(void *)(v40 + 16);
  *(unsigned char *)(v39 + 24) = *(unsigned char *)(v40 + 24);
  *(void *)(v39 + 16) = v42;
  uint64_t v43 = *(void *)(v40 + 32);
  *(unsigned char *)(v39 + 40) = *(unsigned char *)(v40 + 40);
  *(void *)(v39 + 32) = v43;
  *(void *)(v39 + 48) = *(void *)(v40 + 48);
  *(void *)(v39 + 56) = *(void *)(v40 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v39 + 64) = *(void *)(v40 + 64);
  *(void *)(v39 + 72) = *(void *)(v40 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v45 = v44[9];
  uint64_t v46 = v39 + v45;
  uint64_t v47 = v40 + v45;
  uint64_t v48 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 24))(v46, v47, v48);
  uint64_t v49 = v44[10];
  uint64_t v50 = v39 + v49;
  uint64_t v51 = v40 + v49;
  uint64_t v52 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 24))(v50, v51, v52);
  uint64_t v53 = v44[11];
  uint64_t v54 = v39 + v53;
  uint64_t v55 = v40 + v53;
  uint64_t v56 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 24))(v54, v55, v56);
  uint64_t v57 = v7[8];
  uint64_t v58 = v4 + v57;
  uint64_t v59 = v5 + v57;
  uint64_t v60 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 24))(v58, v59, v60);
  *(unsigned char *)(v4 + v7[9]) = *(unsigned char *)(v5 + v7[9]);
  return a1;
}

uint64_t sub_20A48AC7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  uint64_t v8 = (int *)type metadata accessor for StockViewModel();
  uint64_t v9 = v8[5];
  uint64_t v10 = (void *)(v5 + v9);
  uint64_t v11 = (const void *)(v6 + v9);
  uint64_t v12 = sub_20A8C3E10();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_20A489D78(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = v8[6];
  uint64_t v16 = (char *)(v5 + v15);
  uint64_t v17 = (char *)(v6 + v15);
  uint64_t v18 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v19 = *((void *)v18 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
  {
    sub_20A489D78(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    uint64_t v21 = sub_20A8CDCD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v16, v17, v21);
    uint64_t v22 = v18[5];
    int v23 = &v16[v22];
    int v24 = &v17[v22];
    *(void *)int v23 = *(void *)v24;
    v23[8] = v24[8];
    uint64_t v25 = v18[6];
    uint64_t v26 = &v16[v25];
    uint64_t v27 = &v17[v25];
    *(void *)uint64_t v26 = *(void *)v27;
    v26[8] = v27[8];
    v16[v18[7]] = v17[v18[7]];
    uint64_t v28 = v18[8];
    uint64_t v29 = &v16[v28];
    uint64_t v30 = &v17[v28];
    uint64_t v31 = sub_20A8C3D00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
    (*(void (**)(char *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v32 = v8[7];
  uint64_t v33 = v5 + v32;
  uint64_t v34 = v6 + v32;
  *(void *)uint64_t v33 = *(void *)(v6 + v32);
  *(unsigned char *)(v33 + 8) = *(unsigned char *)(v6 + v32 + 8);
  *(void *)(v33 + 16) = *(void *)(v6 + v32 + 16);
  *(unsigned char *)(v33 + 24) = *(unsigned char *)(v6 + v32 + 24);
  *(void *)(v33 + 32) = *(void *)(v6 + v32 + 32);
  *(unsigned char *)(v33 + 40) = *(unsigned char *)(v6 + v32 + 40);
  long long v35 = *(_OWORD *)(v6 + v32 + 64);
  *(_OWORD *)(v33 + 48) = *(_OWORD *)(v6 + v32 + 48);
  *(_OWORD *)(v33 + 64) = v35;
  uint64_t v36 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v37 = v36[9];
  uint64_t v38 = v33 + v37;
  uint64_t v39 = v34 + v37;
  uint64_t v40 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
  uint64_t v41 = v36[10];
  uint64_t v42 = v33 + v41;
  uint64_t v43 = v34 + v41;
  uint64_t v44 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
  uint64_t v45 = v36[11];
  uint64_t v46 = v33 + v45;
  uint64_t v47 = v34 + v45;
  uint64_t v48 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
  uint64_t v49 = v8[8];
  uint64_t v50 = v5 + v49;
  uint64_t v51 = v6 + v49;
  uint64_t v52 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
  *(unsigned char *)(v5 + v8[9]) = *(unsigned char *)(v6 + v8[9]);
  return a1;
}

uint64_t sub_20A48B164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v3 = *(int *)(a3 + 28);
  uint64_t v4 = a1 + v3;
  uint64_t v5 = a2 + v3;
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(v4, v5, v6);
  uint64_t v7 = (int *)type metadata accessor for StockViewModel();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(v4 + v8);
  uint64_t v10 = (void *)(v5 + v8);
  uint64_t v11 = sub_20A8C3E10();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    sub_20A489D78(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = v7[6];
  uint64_t v18 = (unsigned char *)(v4 + v17);
  uint64_t v19 = (unsigned char *)(v5 + v17);
  uint64_t v20 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v21 = *((void *)v20 - 1);
  uint64_t v22 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      uint64_t v60 = sub_20A8CDCD0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v60 - 8) + 40))(v18, v19, v60);
      uint64_t v61 = v20[5];
      uint64_t v62 = &v18[v61];
      uint64_t v63 = &v19[v61];
      *(void *)uint64_t v62 = *(void *)v63;
      v62[8] = v63[8];
      uint64_t v64 = v20[6];
      uint64_t v65 = &v18[v64];
      uint64_t v66 = &v19[v64];
      *(void *)uint64_t v65 = *(void *)v66;
      v65[8] = v66[8];
      v18[v20[7]] = v19[v20[7]];
      uint64_t v67 = v20[8];
      uint64_t v68 = &v18[v67];
      uint64_t v69 = &v19[v67];
      uint64_t v70 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 40))(v68, v69, v70);
      goto LABEL_13;
    }
    sub_20A48C1A4((uint64_t)v18, type metadata accessor for StockSparklineViewModel);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    sub_20A489D78(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
    memcpy(v18, v19, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v25 = sub_20A8CDCD0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 32))(v18, v19, v25);
  uint64_t v26 = v20[5];
  uint64_t v27 = &v18[v26];
  uint64_t v28 = &v19[v26];
  *(void *)uint64_t v27 = *(void *)v28;
  v27[8] = v28[8];
  uint64_t v29 = v20[6];
  uint64_t v30 = &v18[v29];
  uint64_t v31 = &v19[v29];
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v31[8];
  v18[v20[7]] = v19[v20[7]];
  uint64_t v32 = v20[8];
  uint64_t v33 = &v18[v32];
  uint64_t v34 = &v19[v32];
  uint64_t v35 = sub_20A8C3D00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
LABEL_13:
  uint64_t v37 = v7[7];
  uint64_t v38 = v4 + v37;
  uint64_t v39 = v5 + v37;
  *(void *)uint64_t v38 = *(void *)(v5 + v37);
  *(unsigned char *)(v38 + 8) = *(unsigned char *)(v5 + v37 + 8);
  *(void *)(v38 + 16) = *(void *)(v5 + v37 + 16);
  *(unsigned char *)(v38 + 24) = *(unsigned char *)(v5 + v37 + 24);
  *(void *)(v38 + 32) = *(void *)(v5 + v37 + 32);
  *(unsigned char *)(v38 + 40) = *(unsigned char *)(v5 + v37 + 40);
  uint64_t v40 = *(void *)(v5 + v37 + 56);
  *(void *)(v38 + 48) = *(void *)(v5 + v37 + 48);
  *(void *)(v38 + 56) = v40;
  swift_bridgeObjectRelease();
  uint64_t v41 = *(void *)(v39 + 72);
  *(void *)(v38 + 64) = *(void *)(v39 + 64);
  *(void *)(v38 + 72) = v41;
  swift_bridgeObjectRelease();
  uint64_t v42 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v43 = v42[9];
  uint64_t v44 = v38 + v43;
  uint64_t v45 = v39 + v43;
  uint64_t v46 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  uint64_t v47 = v42[10];
  uint64_t v48 = v38 + v47;
  uint64_t v49 = v39 + v47;
  uint64_t v50 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  uint64_t v51 = v42[11];
  uint64_t v52 = v38 + v51;
  uint64_t v53 = v39 + v51;
  uint64_t v54 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
  uint64_t v55 = v7[8];
  uint64_t v56 = v4 + v55;
  uint64_t v57 = v5 + v55;
  uint64_t v58 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 40))(v56, v57, v58);
  *(unsigned char *)(v4 + v7[9]) = *(unsigned char *)(v5 + v7[9]);
  return a1;
}

uint64_t sub_20A48B7D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A48B7E8);
}

uint64_t sub_20A48B7E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = type metadata accessor for StockViewModel();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 28);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_20A48B898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A48B8AC);
}

uint64_t sub_20A48B8AC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 16) = a2 + 1;
  }
  else
  {
    uint64_t v7 = type metadata accessor for StockViewModel();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for StockViewRenderer.RenderedState()
{
  uint64_t result = qword_26AC67AC8;
  if (!qword_26AC67AC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A48B99C()
{
  uint64_t result = type metadata accessor for StockViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A48BA44(uint64_t a1, void *a2)
{
  return sub_20A48C09C(a2);
}

uint64_t sub_20A48BA4C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_20A48C578(&qword_26AC6FDB0, a2, (void (*)(uint64_t))type metadata accessor for StockViewRenderer);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_20A48BAA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_20A4D1B24(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *unsigned int v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_20A7A5344();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for StockViewRenderer.RenderedState();
    uint64_t v20 = *(void *)(v13 - 8);
    sub_20A48C3AC(v12 + *(void *)(v20 + 72) * v8, a3, (uint64_t (*)(void))type metadata accessor for StockViewRenderer.RenderedState);
    sub_20A48BC48(v8, v11);
    *unsigned int v4 = v11;
    swift_bridgeObjectRelease();
    int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for StockViewRenderer.RenderedState();
    int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

unint64_t sub_20A48BC48(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_20A8CF2A0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_20A8CF880();
        swift_bridgeObjectRetain();
        sub_20A8CE360();
        uint64_t v9 = sub_20A8CF8C0();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *uint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(type metadata accessor for StockViewRenderer.RenderedState() - 8) + 72);
        int64_t v16 = v15 * v3;
        uint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_20A48BE58(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_20A8CF2A0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_20A8CF880();
        sub_20A8CF890();
        uint64_t result = sub_20A8CF8C0();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (unsigned char *)(v10 + v3);
          uint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (void *)(v13 + 8 * v3);
          uint64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            void *v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *int64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_20A48C014(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2
    || *(void *)(a1 + 8) != *(void *)(a2 + 8)
    || *(unsigned __int8 *)(a1 + 16) != *(unsigned __int8 *)(a2 + 16))
  {
    return 0;
  }
  uint64_t v5 = *(int *)(type metadata accessor for StockViewRenderer.RenderedState() + 28);

  return sub_20A619588(a1 + v5, a2 + v5);
}

uint64_t sub_20A48C09C(void *a1)
{
  swift_beginAccess();
  sub_20A4342F4(v1 + 16, (uint64_t)v11);
  uint64_t v3 = v12;
  uint64_t v4 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  uint64_t v5 = *(void *)(v4 + 8);
  unint64_t v6 = *(void (**)(void *, uint64_t, uint64_t))(v5 + 8);
  uint64_t v9 = v3;
  uint64_t v10 = v4;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v8);
  v6(a1, v3, v5);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v1 + 16);
  sub_20A42BEBC(&v8, v1 + 16);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 56), *(void *)(v1 + 80));
  return sub_20A84505C(a1);
}

uint64_t sub_20A48C1A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A48C204@<X0>(void *a1@<X8>)
{
  return sub_20A488BCC(*(void *)(v1 + 16), a1);
}

void sub_20A48C20C()
{
  if (!qword_26AC6D470)
  {
    sub_20A48C268();
    unint64_t v0 = type metadata accessor for CellAutomation();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6D470);
    }
  }
}

unint64_t sub_20A48C268()
{
  unint64_t result = qword_26AC6F4B0;
  if (!qword_26AC6F4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6F4B0);
  }
  return result;
}

uint64_t sub_20A48C2BC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_20A489D78(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A48C33C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A489D78(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A48C3AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A48C414(uint64_t a1, uint64_t a2)
{
  sub_20A489D78(0, qword_26AC7FB60, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20A48C4A8()
{
  if (!qword_26AC7F950)
  {
    sub_20A42CFF0(255, &qword_26AC7F948);
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7F950);
    }
  }
}

uint64_t sub_20A48C510(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A48C578(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A48C5C0()
{
  unint64_t result = qword_26AC7F630;
  if (!qword_26AC7F630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7F630);
  }
  return result;
}

void *sub_20A48C614(uint64_t a1)
{
  uint64_t v26 = *v1;
  uint64_t v4 = v1[5];
  uint64_t v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v4);
  uint64_t v25 = v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 8);
  v28[3] = v4;
  v28[4] = v3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
  v6(a1, v4, v5);
  uint64_t v9 = v1[10];
  uint64_t v8 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v9);
  uint64_t v10 = *(void *)(v8 + 8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 8);
  void v27[3] = v9;
  v27[4] = v8;
  uint64_t v12 = __swift_allocate_boxed_opaque_existential_1(v27);
  uint64_t v13 = v11(a1, v9, v10);
  double v14 = MEMORY[0x270FA5388](v13);
  int64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t *, uint64_t, double))(v17 + 16))(v16, boxed_opaque_existential_1, v4, v14);
  double v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v22 + 16))(v21, v12, v9, v19);
  uint64_t v23 = sub_20A48C9F4((uint64_t)v16, (uint64_t)v21, v26, v4, v9, v25, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return v23;
}

id sub_20A48C868(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_20A48CB98();
  double v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a4, sel_userInterfaceIdiom, v9) == (id)5)
  {
    int v12 = 0;
  }
  else
  {
    objc_msgSend(a4, sel_horizontalSizeClass);
    int v12 = 1;
  }
  __swift_project_boxed_opaque_existential_1((void *)(v4 + 56), *(void *)(v4 + 80));
  sub_20A430C8C(a2, v12, (uint64_t)v11);
  uint64_t v13 = sub_20A8CF110();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 0, 1, v13);
  sub_20A8CF130();
  return objc_msgSend(a1, sel_setPreferredBehavioralStyle_, 1);
}

uint64_t type metadata accessor for StockListSectionHeaderViewStyler()
{
  return self;
}

void *sub_20A48C9C8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_20A48C614(a1);
  *a2 = result;
  return result;
}

void *sub_20A48C9F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a4;
  uint64_t v27 = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v25);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a1, a4);
  uint64_t v23 = a5;
  uint64_t v24 = a7;
  uint64_t v13 = __swift_allocate_boxed_opaque_existential_1(v22);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(v13, a2, a5);
  double v14 = (void *)swift_allocObject();
  uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
  double v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (uint64_t *)((char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
  uint64_t v20 = *v18;
  v14[10] = type metadata accessor for WatchlistSwitcherStyler();
  v14[11] = &off_26BE5FBF8;
  v14[7] = v20;
  sub_20A42BEBC(&v25, (uint64_t)(v14 + 2));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v14;
}

void sub_20A48CB98()
{
  if (!qword_26AC7FC70)
  {
    sub_20A8CF110();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FC70);
    }
  }
}

uint64_t sub_20A48CBF0()
{
  uint64_t v1 = v0;
  sub_20A48CF30();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C7640();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C7610();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = MEMORY[0x270FA5388](v13);
  double v16 = (char *)v23 - v15;
  id v17 = objc_msgSend(v1, sel_purchaseValidationState, v14);
  if ((unint64_t)v17 < 5)
  {
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v16, **((unsigned int **)&unk_263FDD2D0 + (void)v17), v9);
    id v18 = objc_msgSend(v1, sel_purchaseType);
    if (v18)
    {
      if (v18 == (id)2)
      {
        uint64_t v20 = (unsigned int *)MEMORY[0x263F7A590];
        goto LABEL_9;
      }
      if (v18 == (id)1)
      {
        if (objc_msgSend(v1, sel_isNewsAppPurchase)) {
          uint64_t v19 = (unsigned int *)MEMORY[0x263F7A598];
        }
        else {
          uint64_t v19 = (unsigned int *)MEMORY[0x263F7A5A8];
        }
        (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *v19, v5);
        goto LABEL_12;
      }
    }
    uint64_t v20 = (unsigned int *)MEMORY[0x263F7A5A0];
LABEL_9:
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *v20, v5);
LABEL_12:
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v16, v9);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    sub_20A8C72E0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
  }
  id v22 = v17;
  type metadata accessor for FCPurchaseValidationState(0);
  v23[1] = v22;
  uint64_t result = sub_20A8CF7A0();
  __break(1u);
  return result;
}

void sub_20A48CF30()
{
  if (!qword_26AC69B20)
  {
    sub_20A8C7640();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69B20);
    }
  }
}

ValueMetadata *type metadata accessor for SystemTheme()
{
  return &type metadata for SystemTheme;
}

id sub_20A48CF98()
{
  id v0 = objc_msgSend(self, sel_ts_tableCellDefaultSelectionTintColor);

  return v0;
}

id sub_20A48CFD8()
{
  id v0 = objc_msgSend(self, sel_ts_systemDarkTealColor);

  return v0;
}

id sub_20A48D018()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F825C8]);

  return objc_msgSend(v0, sel_initWithRed_green_blue_alpha_, 0.305882353, 0.674509804, 0.97254902, 1.0);
}

id sub_20A48D070()
{
  id v0 = objc_msgSend(self, sel_systemGrayColor);

  return v0;
}

uint64_t type metadata accessor for StocksSharingCompleteCommandHandler()
{
  return self;
}

uint64_t sub_20A48D0D8()
{
  __swift_project_boxed_opaque_existential_1(v0 + 16, v0[19]);
  sub_20A43F7E0(0, (unint64_t *)&unk_26AC695F0);
  sub_20A8C5B70();
  if (v5)
  {
    sub_20A42BEBC(&v4, (uint64_t)v6);
  }
  else
  {
    sub_20A4342F4((uint64_t)(v0 + 16), (uint64_t)v6);
    sub_20A49127C((uint64_t)&v4, &qword_26AC69600, (unint64_t *)&unk_26AC695F0);
  }
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_20A491334();
  uint64_t v1 = sub_20A8C5BA0();
  if (v1)
  {
    uint64_t v2 = v1;
  }
  else
  {
    uint64_t v2 = v0[15];
    swift_retain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  return v2;
}

uint64_t sub_20A48D208(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  sub_20A4910C8(0, (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
  v2[7] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for StocksActivity(0);
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  uint64_t v4 = sub_20A8C3BC0();
  v2[12] = v4;
  v2[13] = *(void *)(v4 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v5 = sub_20A8C2F70();
  v2[15] = v5;
  v2[16] = *(void *)(v5 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  uint64_t v6 = sub_20A8C2D10();
  v2[19] = v6;
  v2[20] = *(void *)(v6 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  uint64_t v7 = sub_20A8C3A10();
  v2[23] = v7;
  unsigned char v2[24] = *(void *)(v7 - 8);
  v2[25] = swift_task_alloc();
  uint64_t v8 = sub_20A8C2BA0();
  v2[26] = v8;
  v2[27] = *(void *)(v8 - 8);
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_20A48D528, 0, 0);
}

uint64_t sub_20A48D528()
{
  uint64_t v42 = v0;
  if (qword_267639B50 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[26];
  uint64_t v4 = v0[27];
  uint64_t v5 = sub_20A8C7DF0();
  v0[31] = __swift_project_value_buffer(v5, (uint64_t)qword_267652E48);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[32] = v6;
  v0[33] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v1, v3);
  uint64_t v7 = sub_20A8C7DD0();
  os_log_type_t v8 = sub_20A8CEA00();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[30];
  uint64_t v11 = v0[27];
  if (v9)
  {
    uint64_t v39 = v0[26];
    int v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v41 = v40;
    *(_DWORD *)int v12 = 136315138;
    uint64_t v13 = sub_20A8C2B90();
    v0[4] = sub_20A687610(v13, v14, &v41);
    sub_20A8CF1C0();
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v15(v10, v39);
    _os_log_impl(&dword_20A414000, v7, v8, "Handling intent '%s'", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x210528850](v40, -1, -1);
    MEMORY[0x210528850](v12, -1, -1);
  }
  else
  {
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v15(v10, v0[26]);
  }

  v0[34] = v15;
  uint64_t v16 = v0[29];
  uint64_t v17 = v0[26];
  uint64_t v18 = v0[27];
  v6(v16, v0[5], v17);
  int v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 88))(v16, v17);
  if (v19 == *MEMORY[0x263F7A7E8])
  {
    uint64_t v20 = v0[29];
    uint64_t v22 = v0[24];
    uint64_t v21 = v0[25];
    uint64_t v23 = v0[23];
    (*(void (**)(uint64_t, void))(v0[27] + 96))(v20, v0[26]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v21, v20, v23);
    sub_20A8C39F0();
    sub_20A8C3A00();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[35] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_20A48DAEC;
    uint64_t v25 = v0[18];
    uint64_t v26 = v0[22];
    char v27 = 0;
LABEL_10:
    return sub_20A48EA34(v26, v25, v27);
  }
  if (v19 == *MEMORY[0x263F7A7F0])
  {
    uint64_t v28 = v0[29];
    uint64_t v30 = v0[13];
    uint64_t v29 = v0[14];
    uint64_t v31 = v0[12];
    (*(void (**)(uint64_t, void))(v0[27] + 96))(v28, v0[26]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v29, v28, v31);
    sub_20A8C3BA0();
    sub_20A8C3BB0();
    uint64_t v32 = (void *)swift_task_alloc();
    v0[37] = v32;
    void *v32 = v0;
    v32[1] = sub_20A48DDC4;
    uint64_t v25 = v0[17];
    uint64_t v26 = v0[21];
    char v27 = 1;
    goto LABEL_10;
  }
  if (v19 == *MEMORY[0x263F7A7D0] || v19 == *MEMORY[0x263F7A7D8])
  {
    v15(v0[29], v0[26]);
  }
  else if (v19 != *MEMORY[0x263F7A7E0])
  {
    uint64_t v34 = v0[29];
    uint64_t v35 = v0[26];
    MEMORY[0x21051DFA0]("Encountered unknown switch case. Please update to include the new case.", 71, 2, MEMORY[0x263F8EE78]);
    v15(v34, v35);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v36 = (uint64_t (*)(void))v0[1];
    return v36();
  }
  v0[39] = sub_20A8CE700();
  v0[40] = sub_20A8CE6F0();
  uint64_t v38 = sub_20A8CE6E0();
  return MEMORY[0x270FA2498](sub_20A48E09C, v38, v37);
}

uint64_t sub_20A48DAEC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[22];
  uint64_t v4 = v2[20];
  uint64_t v5 = v2[19];
  (*(void (**)(void, void))(v2[16] + 8))(v2[18], v2[15]);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0) {
    uint64_t v6 = sub_20A48E6DC;
  }
  else {
    uint64_t v6 = sub_20A48DCB0;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_20A48DCB0()
{
  (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_20A48DDC4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[21];
  uint64_t v4 = v2[20];
  uint64_t v5 = v2[19];
  (*(void (**)(void, void))(v2[16] + 8))(v2[17], v2[15]);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0) {
    uint64_t v6 = sub_20A48E7F8;
  }
  else {
    uint64_t v6 = sub_20A48DF88;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_20A48DF88()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_20A48E09C()
{
  swift_release();
  return MEMORY[0x270FA2498](sub_20A48E104, 0, 0);
}

uint64_t sub_20A48E104()
{
  uint64_t v33 = v0;
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = (void *)v0[6];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[5];
  uint64_t v6 = v3[5];
  uint64_t v7 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(v5, v6, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v1) == 1)
  {
    sub_20A4912D8(v0[7], (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
    MEMORY[0x21051DFA0]("Unexpectedly found no activity for intent that should have one.", 63, 2, MEMORY[0x263F8EE78]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    uint64_t v10 = (void (*)(uint64_t, uint64_t, uint64_t))v0[32];
    uint64_t v11 = v0[28];
    uint64_t v12 = v0[26];
    uint64_t v14 = v0[10];
    uint64_t v13 = v0[11];
    uint64_t v15 = v0[5];
    sub_20A491064(v0[7], v13);
    v10(v11, v15, v12);
    sub_20A49117C(v13, v14, type metadata accessor for StocksActivity);
    uint64_t v16 = sub_20A8C7DD0();
    os_log_type_t v17 = sub_20A8CEA00();
    BOOL v18 = os_log_type_enabled(v16, v17);
    int v19 = (void (*)(uint64_t, uint64_t))v0[34];
    uint64_t v20 = v0[28];
    uint64_t v21 = v0[26];
    uint64_t v22 = v0[10];
    if (v18)
    {
      os_log_type_t type = v17;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = v31;
      *(_DWORD *)uint64_t v23 = 136315394;
      uint64_t v24 = sub_20A8C2B90();
      v0[2] = sub_20A687610(v24, v25, &v32);
      sub_20A8CF1C0();
      swift_bridgeObjectRelease();
      v19(v20, v21);
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v26 = StocksActivity.identifier.getter();
      v0[3] = sub_20A687610(v26, v27, &v32);
      sub_20A8CF1C0();
      swift_bridgeObjectRelease();
      sub_20A49111C(v22, type metadata accessor for StocksActivity);
      _os_log_impl(&dword_20A414000, v16, type, "Mapped intent '%s' to activity '%s'", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x210528850](v31, -1, -1);
      MEMORY[0x210528850](v23, -1, -1);
    }
    else
    {
      v19(v0[28], v0[26]);
      sub_20A49111C(v22, type metadata accessor for StocksActivity);
    }

    v0[41] = sub_20A8CE6F0();
    uint64_t v29 = sub_20A8CE6E0();
    return MEMORY[0x270FA2498](sub_20A48E528, v29, v28);
  }
}

uint64_t sub_20A48E528()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_release();
  sub_20A490B90(v1);
  *(void *)(v0 + 336) = 0;
  return MEMORY[0x270FA2498](sub_20A48E5C4, 0, 0);
}

uint64_t sub_20A48E5C4()
{
  sub_20A49111C(*(void *)(v0 + 88), type metadata accessor for StocksActivity);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_20A48E6DC()
{
  (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_20A48E7F8()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_20A48E914()
{
  sub_20A49111C(*(void *)(v0 + 88), type metadata accessor for StocksActivity);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_20A48EA34(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 160) = a2;
  *(void *)(v4 + 168) = v3;
  *(unsigned char *)(v4 + 513) = a3;
  *(void *)(v4 + 152) = a1;
  sub_20A4910C8(0, &qword_26763ACE8, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
  *(void *)(v4 + 176) = swift_task_alloc();
  *(void *)(v4 + 184) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for WatchlistMembershipCommandContext(0);
  *(void *)(v4 + 192) = v5;
  *(void *)(v4 + 200) = *(void *)(v5 - 8);
  *(void *)(v4 + 208) = swift_task_alloc();
  uint64_t v6 = sub_20A8C3F00();
  *(void *)(v4 + 216) = v6;
  *(void *)(v4 + 224) = *(void *)(v6 - 8);
  *(void *)(v4 + 232) = swift_task_alloc();
  *(void *)(v4 + 240) = swift_task_alloc();
  sub_20A4910C8(0, &qword_26AC69040, MEMORY[0x263F7AFD8]);
  *(void *)(v4 + 248) = swift_task_alloc();
  uint64_t v7 = sub_20A8C40E0();
  *(void *)(v4 + 256) = v7;
  *(void *)(v4 + 264) = *(void *)(v7 - 8);
  *(void *)(v4 + 272) = swift_task_alloc();
  *(void *)(v4 + 280) = swift_task_alloc();
  *(void *)(v4 + 288) = swift_task_alloc();
  *(void *)(v4 + 296) = swift_task_alloc();
  uint64_t v8 = sub_20A8C2F70();
  *(void *)(v4 + 304) = v8;
  *(void *)(v4 + 312) = *(void *)(v8 - 8);
  *(void *)(v4 + 320) = swift_task_alloc();
  *(void *)(v4 + 328) = swift_task_alloc();
  *(void *)(v4 + 336) = swift_task_alloc();
  *(void *)(v4 + 344) = swift_task_alloc();
  *(void *)(v4 + 352) = swift_task_alloc();
  uint64_t v9 = sub_20A8C2D10();
  *(void *)(v4 + 360) = v9;
  *(void *)(v4 + 368) = *(void *)(v9 - 8);
  *(void *)(v4 + 376) = swift_task_alloc();
  *(void *)(v4 + 384) = swift_task_alloc();
  *(void *)(v4 + 392) = swift_task_alloc();
  *(void *)(v4 + 400) = swift_task_alloc();
  sub_20A8CE700();
  *(void *)(v4 + 408) = sub_20A8CE6F0();
  uint64_t v11 = sub_20A8CE6E0();
  *(void *)(v4 + 416) = v11;
  *(void *)(v4 + 424) = v10;
  return MEMORY[0x270FA2498](sub_20A48EDD4, v11, v10);
}

uint64_t sub_20A48EDD4()
{
  uint64_t v44 = v0;
  if (qword_267639B50 != -1) {
    swift_once();
  }
  uint64_t v2 = v0 + 19;
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[50];
  uint64_t v42 = v0;
  uint64_t v4 = v0[45];
  uint64_t v5 = v0[46];
  uint64_t v6 = v0[44];
  uint64_t v8 = v0[38];
  uint64_t v7 = v0[39];
  uint64_t v9 = v2[1];
  uint64_t v10 = sub_20A8C7DF0();
  v2[35] = __swift_project_value_buffer(v10, (uint64_t)qword_267652E48);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v2[36] = v11;
  v2[37] = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v11(v3, v1, v4);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v2[38] = v12;
  v2[39] = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v12(v6, v9, v8);
  uint64_t v13 = sub_20A8C7DD0();
  os_log_type_t v14 = sub_20A8CEA00();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v16 = v2[31];
  uint64_t v18 = v2[26];
  uint64_t v17 = v2[27];
  uint64_t v19 = v2[25];
  uint64_t v21 = v2[19];
  uint64_t v20 = v2[20];
  if (v15)
  {
    log = v13;
    uint64_t v22 = v42;
    os_log_type_t type = v14;
    char v23 = *((unsigned char *)v42 + 513);
    uint64_t v38 = v2[19];
    uint64_t v24 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v43 = v39;
    *(_DWORD *)uint64_t v24 = 136315650;
    if (v23) {
      uint64_t v25 = 0x6863746157746F6ELL;
    }
    else {
      uint64_t v25 = 0x676E696863746177;
    }
    if (v23) {
      unint64_t v26 = 0xEB00000000676E69;
    }
    else {
      unint64_t v26 = 0xE800000000000000;
    }
    v42[17] = sub_20A687610(v25, v26, &v43);
    sub_20A8CF1C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2080;
    uint64_t v27 = sub_20A8C2CF0();
    v42[18] = sub_20A687610(v27, v28, &v43);
    sub_20A8CF1C0();
    swift_bridgeObjectRelease();
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v29(v16, v18);
    *(_WORD *)(v24 + 22) = 2080;
    uint64_t v30 = sub_20A8C2F50();
    v42[3] = sub_20A687610(v30, v31, &v43);
    sub_20A8CF1C0();
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v32(v19, v38);
    _os_log_impl(&dword_20A414000, log, type, "Toggling symbol membership to watchlist to state=%s, symbolID=%s, watchlistID=%s", (uint8_t *)v24, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x210528850](v39, -1, -1);
    MEMORY[0x210528850](v24, -1, -1);
  }
  else
  {
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v29(v16, v18);
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v32(v19, v21);

    uint64_t v22 = v42;
  }
  v22[59] = v29;
  v22[60] = v32;
  uint64_t v33 = (void *)v22[21];
  uint64_t v35 = v33[12];
  uint64_t v34 = v33[13];
  __swift_project_boxed_opaque_existential_1(v33 + 9, v35);
  uint64_t v36 = (void *)swift_task_alloc();
  v22[61] = v36;
  void *v36 = v22;
  v36[1] = sub_20A48F1B4;
  return MEMORY[0x270F786E8](v35, v34);
}

uint64_t sub_20A48F1B4(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 496) = a1;
  *(void *)(v4 + 504) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 424);
  uint64_t v6 = *(void *)(v3 + 416);
  if (v1) {
    uint64_t v7 = sub_20A490A24;
  }
  else {
    uint64_t v7 = sub_20A48F2F8;
  }
  return MEMORY[0x270FA2498](v7, v6, v5);
}

uint64_t sub_20A48F2F8()
{
  uint64_t v191 = v0;
  uint64_t v1 = *(void *)(v0 + 496);
  swift_release();
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v189 = v0;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 264);
    uint64_t v5 = *(void (**)(void, unint64_t, void))(v3 + 16);
    uint64_t v4 = v3 + 16;
    uint64_t v186 = v5;
    unint64_t v6 = *(void *)(v0 + 496)
       + ((*(unsigned __int8 *)(v4 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 64));
    uint64_t v7 = *(void *)(v4 + 56);
    swift_bridgeObjectRetain();
    while (1)
    {
      v186(*(void *)(v0 + 288), v6, *(void *)(v0 + 256));
      uint64_t v8 = sub_20A8C4050();
      uint64_t v10 = v9;
      if (v8 == sub_20A8C2F50() && v10 == v11)
      {
        uint64_t v0 = v189;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      char v13 = sub_20A8CF760();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13) {
        break;
      }
      uint64_t v0 = v189;
      (*(void (**)(void, void))(v4 - 8))(*(void *)(v189 + 288), *(void *)(v189 + 256));
      v6 += v7;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    uint64_t v0 = v189;
LABEL_13:
    uint64_t v15 = *(void *)(v0 + 288);
    uint64_t v16 = *(void *)(v0 + 256);
    uint64_t v17 = *(void *)(v0 + 264);
    uint64_t v18 = *(void *)(v0 + 248);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v18, v15, v16);
    uint64_t v14 = 0;
  }
  else
  {
LABEL_10:
    uint64_t v14 = 1;
  }
  uint64_t v19 = *(void *)(v0 + 256);
  uint64_t v20 = *(void *)(v0 + 264);
  uint64_t v21 = *(void *)(v0 + 248);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v21, v14, 1, v19);
  swift_bridgeObjectRelease();
  int v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v21, 1, v19);
  char v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 456);
  uint64_t v24 = *(void *)(v0 + 304);
  if (v22 == 1)
  {
    uint64_t v25 = *(void *)(v0 + 328);
    uint64_t v26 = *(void *)(v0 + 160);
    sub_20A4912D8(*(void *)(v0 + 248), &qword_26AC69040, MEMORY[0x263F7AFD8]);
    v23(v25, v26, v24);
    uint64_t v27 = sub_20A8C7DD0();
    os_log_type_t v28 = sub_20A8CE9E0();
    BOOL v29 = os_log_type_enabled(v27, v28);
    uint64_t v30 = *(void *)(v0 + 328);
    if (v29)
    {
      uint64_t v182 = *(void *)(v0 + 304);
      int v187 = *(void (**)(uint64_t, uint64_t))(v0 + 480);
      unint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      v190[0] = v32;
      *(_DWORD *)unint64_t v31 = 136315138;
      uint64_t v33 = sub_20A8C2F50();
      *(void *)(v0 + 16) = sub_20A687610(v33, v34, v190);
      sub_20A8CF1C0();
      swift_bridgeObjectRelease();
      v187(v30, v182);
      _os_log_impl(&dword_20A414000, v27, v28, "No watchlist found matching entity watchlistID=%s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x210528850](v32, -1, -1);
      MEMORY[0x210528850](v31, -1, -1);
    }
    else
    {
      (*(void (**)(void, void))(v0 + 480))(*(void *)(v0 + 328), *(void *)(v0 + 304));
    }

    sub_20A8C1F50();
    sub_20A4913C8(&qword_26763B138, MEMORY[0x263EFB650]);
    swift_allocError();
    sub_20A8C1F30();
    swift_willThrow();
    uint64_t v54 = (void *)v189;
  }
  else
  {
    uint64_t v180 = *(void *)(v0 + 344);
    uint64_t v35 = *(void *)(v0 + 296);
    uint64_t v36 = *(void *)(v0 + 280);
    uint64_t v38 = *(void *)(v0 + 256);
    uint64_t v37 = *(void *)(v0 + 264);
    uint64_t v39 = *(void *)(v0 + 160);
    (*(void (**)(uint64_t, void, uint64_t))(v37 + 32))(v35, *(void *)(v0 + 248), v38);
    id v183 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16);
    v183(v36, v35, v38);
    v23(v180, v39, v24);
    uint64_t v40 = sub_20A8C7DD0();
    os_log_type_t v41 = sub_20A8CEA00();
    BOOL v42 = os_log_type_enabled(v40, v41);
    uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v0 + 480);
    uint64_t v44 = *(void *)(v0 + 344);
    uint64_t v45 = *(void *)(v0 + 304);
    uint64_t v46 = *(void *)(v0 + 280);
    uint64_t v47 = *(void *)(v0 + 256);
    uint64_t v48 = *(void *)(v0 + 264);
    if (v42)
    {
      uint64_t v176 = *(void *)(v0 + 304);
      uint64_t v49 = swift_slowAlloc();
      uint64_t v181 = swift_slowAlloc();
      v190[0] = v181;
      *(_DWORD *)uint64_t v49 = 136315394;
      uint64_t v50 = sub_20A8C40A0();
      *(void *)(v0 + 120) = sub_20A687610(v50, v51, v190);
      sub_20A8CF1C0();
      swift_bridgeObjectRelease();
      id v163 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
      v163(v46, v47);
      *(_WORD *)(v49 + 12) = 2080;
      uint64_t v52 = sub_20A8C2F50();
      *(void *)(v0 + 128) = sub_20A687610(v52, v53, v190);
      sub_20A8CF1C0();
      swift_bridgeObjectRelease();
      v43(v44, v176);
      _os_log_impl(&dword_20A414000, v40, v41, "Matched watchlist ID to watchlistName='%s', watchlistID=%s", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x210528850](v181, -1, -1);
      MEMORY[0x210528850](v49, -1, -1);
    }
    else
    {
      id v163 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
      v163(*(void *)(v0 + 280), *(void *)(v0 + 256));
      v43(v44, v45);
    }

    (*(void (**)(void, void, void))(v0 + 440))(*(void *)(v0 + 392), *(void *)(v0 + 152), *(void *)(v0 + 360));
    sub_20A8C3E50();
    if (qword_26AC6ABF8 != -1) {
      swift_once();
    }
    *(void *)id v172 = *(void *)(v0 + 296);
    *(void *)os_log_type_t type = *(void *)(v0 + 256);
    uint64_t v55 = *(void *)(v0 + 216);
    uint64_t v56 = *(void *)(v0 + 224);
    uint64_t v58 = *(void *)(v0 + 200);
    uint64_t v57 = *(void *)(v0 + 208);
    uint64_t v166 = *(void *)(v0 + 240);
    uint64_t v170 = *(void *)(v0 + 192);
    uint64_t v59 = *(void *)(v189 + 184);
    ((void (*)(uint64_t))v183)(v57);
    uint64_t v60 = v57 + *(int *)(v170 + 20);
    uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16);
    v61(v60, v166, v55);
    uint64_t v62 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56);
    v62(v60, 0, 1, v55);
    swift_getObjectType();
    v183(v59, *(void *)v172, *(void *)type);
    uint64_t v63 = v59 + *(int *)(v170 + 20);
    id v173 = v61;
    v61(v63, v166, v55);
    v62(v63, 0, 1, v55);
    uint64_t v64 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56);
    v64(v59, 0, 1, v170);
    sub_20A45A0AC();
    sub_20A8C8CB0();
    uint64_t v65 = v59;
    uint64_t v54 = (void *)v189;
    sub_20A4912D8(v65, &qword_26763ACE8, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
    int v66 = *(unsigned __int8 *)(v189 + 512);
    if (v66 == 2)
    {
      uint64_t v67 = *(void *)(v189 + 296);
      uint64_t v68 = *(void *)(v189 + 256);
      uint64_t v69 = *(void *)(v189 + 240);
      uint64_t v70 = *(void *)(v189 + 224);
      uint64_t v71 = *(void *)(v189 + 216);
      uint64_t v72 = *(void *)(v189 + 208);
      MEMORY[0x21051DFA0]("Unexpectedly found no state for Commands.Watchlist.membership, this should never fail.", 86, 2, MEMORY[0x263F8EE78]);
      sub_20A8C1F50();
      sub_20A4913C8(&qword_26763B138, MEMORY[0x263EFB650]);
      swift_allocError();
      sub_20A8C1F40();
      swift_willThrow();
      sub_20A49111C(v72, type metadata accessor for WatchlistMembershipCommandContext);
      uint64_t v73 = v69;
      uint64_t v54 = (void *)v189;
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v73, v71);
      uint64_t v74 = v67;
      uint64_t v75 = v68;
    }
    else
    {
      char v179 = *(unsigned char *)(v189 + 512);
      if (v66) {
        uint64_t v76 = 0x6863746157746F6ELL;
      }
      else {
        uint64_t v76 = 0x676E696863746177;
      }
      if (v66) {
        unint64_t v77 = 0xEB00000000676E69;
      }
      else {
        unint64_t v77 = 0xE800000000000000;
      }
      if (*(unsigned char *)(v189 + 513)) {
        uint64_t v78 = 0x6863746157746F6ELL;
      }
      else {
        uint64_t v78 = 0x676E696863746177;
      }
      if (*(unsigned char *)(v189 + 513)) {
        unint64_t v79 = 0xEB00000000676E69;
      }
      else {
        unint64_t v79 = 0xE800000000000000;
      }
      unint64_t v171 = v79;
      uint64_t v165 = v78;
      if (v76 == v78 && v77 == v79)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v80 = sub_20A8CF760();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v80 & 1) == 0)
        {
          uint64_t v110 = *(void **)(v189 + 504);
          uint64_t v111 = *(void *)(v189 + 192);
          uint64_t v112 = *(void *)(v189 + 176);
          sub_20A49117C(*(void *)(v189 + 208), v112, type metadata accessor for WatchlistMembershipCommandContext);
          v64(v112, 0, 1, v111);
          sub_20A8C8D40();
          if (v110)
          {
            id v167 = *(void (**)(uint64_t, uint64_t, uint64_t))(v189 + 456);
            id v113 = *(void (**)(uint64_t, uint64_t, uint64_t))(v189 + 440);
            uint64_t v114 = *(void *)(v189 + 376);
            uint64_t v115 = *(void *)(v189 + 360);
            uint64_t v116 = *(void *)(v189 + 320);
            uint64_t v117 = *(void *)(v189 + 304);
            uint64_t v119 = *(void *)(v189 + 152);
            uint64_t v118 = *(void *)(v189 + 160);
            sub_20A4912D8(*(void *)(v189 + 176), &qword_26763ACE8, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
            v113(v114, v119, v115);
            v167(v116, v118, v117);
            id v120 = v110;
            id v121 = v110;
            uint64_t v122 = sub_20A8C7DD0();
            os_log_type_t v123 = sub_20A8CE9E0();
            BOOL v124 = os_log_type_enabled(v122, v123);
            double v125 = *(void (**)(uint64_t, uint64_t))(v189 + 480);
            CGFloat v178 = *(void (**)(uint64_t, uint64_t))(v189 + 472);
            uint64_t v126 = *(void *)(v189 + 376);
            uint64_t v127 = *(void *)(v189 + 360);
            uint64_t v128 = *(void *)(v189 + 320);
            uint64_t v129 = *(void *)(v189 + 304);
            if (v124)
            {
              uint64_t v159 = *(void *)(v189 + 320);
              uint64_t v130 = swift_slowAlloc();
              id v162 = (void *)swift_slowAlloc();
              uint64_t v168 = swift_slowAlloc();
              v190[0] = v168;
              *(_DWORD *)uint64_t v130 = 136315906;
              *(void *)(v189 + 56) = sub_20A687610(v165, v171, v190);
              sub_20A8CF1C0();
              swift_bridgeObjectRelease();
              *(_WORD *)(v130 + 12) = 2080;
              uint64_t v131 = sub_20A8C2CF0();
              *(void *)(v189 + 64) = sub_20A687610(v131, v132, v190);
              uint64_t v54 = (void *)v189;
              sub_20A8CF1C0();
              swift_bridgeObjectRelease();
              v178(v126, v127);
              *(_WORD *)(v130 + 22) = 2080;
              uint64_t v133 = sub_20A8C2F50();
              *(void *)(v189 + 72) = sub_20A687610(v133, v134, v190);
              sub_20A8CF1C0();
              swift_bridgeObjectRelease();
              v125(v159, v129);
              *(_WORD *)(v130 + 32) = 2112;
              id v135 = v110;
              uint64_t v136 = _swift_stdlib_bridgeErrorToNSError();
              *(void *)(v189 + 80) = v136;
              sub_20A8CF1C0();
              *id v162 = v136;

              _os_log_impl(&dword_20A414000, v122, v123, "Error toggling symbol membership to watchlist to state=%s, symbolID=%s, watchlistID=%s, error=%@", (uint8_t *)v130, 0x2Au);
              sub_20A4910C8(0, (unint64_t *)&unk_26AC68C38, (void (*)(uint64_t))sub_20A4911E4);
              swift_arrayDestroy();
              MEMORY[0x210528850](v162, -1, -1);
              swift_arrayDestroy();
              MEMORY[0x210528850](v168, -1, -1);
              MEMORY[0x210528850](v130, -1, -1);
            }
            else
            {

              v178(v126, v127);
              v125(v128, v129);
            }
          }
          else
          {
            sub_20A4912D8(*(void *)(v189 + 176), &qword_26763ACE8, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
          }
          uint64_t v137 = v54[37];
          uint64_t v138 = v54[34];
          uint64_t v139 = v54[32];
          v173(v54[29], v54[30], v54[27]);
          v183(v138, v137, v139);
          uint64_t v140 = sub_20A8C7DD0();
          os_log_type_t v141 = sub_20A8CEA00();
          BOOL v142 = os_log_type_enabled(v140, v141);
          uint64_t v143 = v54[37];
          uint64_t v144 = v54[33];
          uint64_t v145 = v54[34];
          uint64_t v146 = v54[32];
          uint64_t v147 = v54[29];
          uint64_t v148 = v54[30];
          uint64_t v149 = v54[28];
          uint64_t v185 = v54[26];
          uint64_t v188 = v54[27];
          if (v142)
          {
            *(void *)id v164 = v54[34];
            uint64_t v150 = swift_slowAlloc();
            uint64_t typea = swift_slowAlloc();
            v190[0] = typea;
            *(_DWORD *)uint64_t v150 = 136315650;
            uint64_t v169 = v146;
            v54[4] = sub_20A687610(v165, v171, v190);
            sub_20A8CF1C0();
            swift_bridgeObjectRelease();
            *(_WORD *)(v150 + 12) = 2080;
            uint64_t v151 = sub_20A8C3E20();
            v54[5] = sub_20A687610(v151, v152, v190);
            sub_20A8CF1C0();
            swift_bridgeObjectRelease();
            uint64_t v153 = *(void (**)(uint64_t, uint64_t))(v149 + 8);
            v153(v147, v188);
            *(_WORD *)(v150 + 22) = 2080;
            uint64_t v154 = sub_20A8C4050();
            *(void *)(v189 + 48) = sub_20A687610(v154, v155, v190);
            uint64_t v54 = (void *)v189;
            sub_20A8CF1C0();
            swift_bridgeObjectRelease();
            id v156 = *(void (**)(uint64_t, uint64_t))(v144 + 8);
            v156(*(void *)v164, v169);
            _os_log_impl(&dword_20A414000, v140, v141, "Successfully toggled symbol membership to watchlist to state=%s, symbolID=%s, watchlistID=%s", (uint8_t *)v150, 0x20u);
            swift_arrayDestroy();
            MEMORY[0x210528850](typea, -1, -1);
            MEMORY[0x210528850](v150, -1, -1);

            sub_20A49111C(v185, type metadata accessor for WatchlistMembershipCommandContext);
            v153(v148, v188);
            v156(v143, v169);
          }
          else
          {

            uint64_t v157 = *(void (**)(uint64_t, uint64_t))(v144 + 8);
            v157(v145, v146);
            uint64_t v158 = *(void (**)(uint64_t, uint64_t))(v149 + 8);
            v158(v147, v188);
            sub_20A49111C(v185, type metadata accessor for WatchlistMembershipCommandContext);
            v158(v148, v188);
            v157(v143, v146);
          }
          goto LABEL_50;
        }
      }
      uint64_t v81 = v76;
      uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v189 + 456);
      uint64_t v83 = *(void *)(v189 + 336);
      uint64_t v84 = *(void *)(v189 + 304);
      uint64_t v85 = *(void *)(v189 + 160);
      (*(void (**)(void, void, void))(v189 + 440))(*(void *)(v189 + 384), *(void *)(v189 + 152), *(void *)(v189 + 360));
      v82(v83, v85, v84);
      char v86 = sub_20A8C7DD0();
      os_log_type_t v87 = sub_20A8CE9E0();
      BOOL v88 = os_log_type_enabled(v86, v87);
      CGRect v89 = *(void (**)(uint64_t, uint64_t))(v189 + 480);
      uint64_t v90 = *(void *)(v189 + 384);
      uint64_t v91 = *(void *)(v189 + 336);
      uint64_t v92 = *(void *)(v189 + 304);
      if (v88)
      {
        os_log_t log = *(os_log_t *)(v189 + 360);
        uint64_t v161 = *(void (**)(uint64_t, os_log_t))(v189 + 472);
        double v177 = *(void (**)(uint64_t, uint64_t))(v189 + 480);
        uint64_t v93 = swift_slowAlloc();
        uint64_t v184 = swift_slowAlloc();
        v190[0] = v184;
        *(_DWORD *)uint64_t v93 = 136315906;
        *(void *)(v189 + 88) = sub_20A687610(v165, v171, v190);
        sub_20A8CF1C0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v93 + 12) = 2080;
        *(void *)(v189 + 96) = sub_20A687610(v81, v77, v190);
        sub_20A8CF1C0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v93 + 22) = 2080;
        uint64_t v94 = sub_20A8C2CF0();
        *(void *)(v189 + 104) = sub_20A687610(v94, v95, v190);
        sub_20A8CF1C0();
        swift_bridgeObjectRelease();
        v161(v90, log);
        *(_WORD *)(v93 + 32) = 2080;
        uint64_t v96 = sub_20A8C2F50();
        *(void *)(v189 + 112) = sub_20A687610(v96, v97, v190);
        sub_20A8CF1C0();
        swift_bridgeObjectRelease();
        v177(v91, v92);
        _os_log_impl(&dword_20A414000, v86, v87, "Unable to toggle symbol watchlist membership to state it's already in expectedState=%s, currentState=%s, symbolID=%s, watchlistID=%s", (uint8_t *)v93, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x210528850](v184, -1, -1);
        MEMORY[0x210528850](v93, -1, -1);
      }
      else
      {
        (*(void (**)(uint64_t, void))(v189 + 472))(v90, *(void *)(v189 + 360));
        v89(v91, v92);
      }

      uint64_t v98 = sub_20A8C35A0();
      sub_20A4913C8(&qword_26763B140, MEMORY[0x263F7AC50]);
      swift_allocError();
      id v100 = v99;
      if (v179) {
        char v101 = sub_20A8CF760();
      }
      else {
        char v101 = 1;
      }
      uint64_t v102 = *(void *)(v189 + 296);
      uint64_t v103 = *(void *)(v189 + 256);
      uint64_t v104 = *(void *)(v189 + 240);
      uint64_t v105 = *(void *)(v189 + 224);
      uint64_t v106 = *(void *)(v189 + 216);
      uint64_t v107 = *(void *)(v189 + 208);
      swift_bridgeObjectRelease();
      *id v100 = v101 & 1;
      (*(void (**)(unsigned char *, void, uint64_t))(*(void *)(v98 - 8) + 104))(v100, *MEMORY[0x263F7AC48], v98);
      swift_willThrow();
      sub_20A49111C(v107, type metadata accessor for WatchlistMembershipCommandContext);
      (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v104, v106);
      uint64_t v74 = v102;
      uint64_t v54 = (void *)v189;
      uint64_t v75 = v103;
    }
    v163(v74, v75);
  }
LABEL_50:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v108 = (uint64_t (*)(void))v54[1];
  return v108();
}

uint64_t sub_20A490A24()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_20A490B90(uint64_t a1)
{
  uint64_t v10 = a1;
  sub_20A4910C8(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - v3;
  __swift_project_boxed_opaque_existential_1(v1 + 16, v1[19]);
  sub_20A43F7E0(0, (unint64_t *)&unk_26AC695F0);
  sub_20A8C5B70();
  sub_20A49127C((uint64_t)v14, &qword_26AC69600, (unint64_t *)&unk_26AC695F0);
  sub_20A48D0D8();
  uint64_t v5 = v1[14];
  uint64_t v6 = sub_20A8C6D60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v15 = 0;
  memset(v14, 0, sizeof(v14));
  __swift_project_boxed_opaque_existential_1(v1 + 16, v1[19]);
  sub_20A8C5B70();
  if (v12)
  {
    sub_20A42BEBC(&v11, (uint64_t)v13);
  }
  else
  {
    sub_20A4342F4((uint64_t)(v1 + 16), (uint64_t)v13);
    sub_20A49127C((uint64_t)&v11, &qword_26AC69600, (unint64_t *)&unk_26AC695F0);
  }
  uint64_t v7 = v16;
  sub_20A5BFAAC(v10, v5, (uint64_t)v4, (uint64_t)v14, 0, 0, (uint64_t)v13);
  if (!v7) {
    swift_release();
  }
  sub_20A49127C((uint64_t)v13, &qword_26AC69600, (unint64_t *)&unk_26AC695F0);
  sub_20A49127C((uint64_t)v14, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
  sub_20A4912D8((uint64_t)v4, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28]);
  return swift_release();
}

uint64_t sub_20A490E54()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StocksIntentHandler()
{
  return self;
}

uint64_t sub_20A490ED8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_20A490F70;
  return sub_20A48D208(a1);
}

uint64_t sub_20A490F70()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_20A491064(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StocksActivity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20A4910C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A49111C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A49117C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_20A4911E4()
{
  unint64_t result = qword_26AC68C30;
  if (!qword_26AC68C30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC68C30);
  }
  return result;
}

void sub_20A491224(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_20A43F7E0(255, a3);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A49127C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_20A491224(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A4912D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A4910C8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_20A491334()
{
  if (!qword_26AC69E60)
  {
    type metadata accessor for StocksActivity(255);
    sub_20A4913C8((unint64_t *)&unk_26AC6C730, (void (*)(uint64_t))type metadata accessor for StocksActivity);
    unint64_t v0 = sub_20A8C85A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69E60);
    }
  }
}

uint64_t sub_20A4913C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A491410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v51 = a3;
  uint64_t v46 = sub_20A8C70D0();
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v43 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_20A8C6A40();
  *(void *)&long long v41 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v40 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_20A8C6A30();
  uint64_t v45 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v52 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C73B0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8C74A0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_20A8C7460();
  uint64_t v49 = *(void *)(v16 - 8);
  uint64_t v50 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20.n128_f64[0] = MEMORY[0x270FA5388](v19);
  uint64_t v47 = a1;
  uint64_t v48 = (char *)&v39 - v21;
  if ((unint64_t)(a2 - 1) > 2) {
    int v22 = (unsigned int *)MEMORY[0x263F7A3D0];
  }
  else {
    int v22 = (unsigned int *)qword_263FDD2F8[a2 - 1];
  }
  char v23 = v48;
  uint64_t v24 = v49;
  uint64_t v25 = v50;
  (*(void (**)(char *, void, uint64_t, __n128))(v49 + 104))(v48, *v22, v50, v20);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F7A308], v8);
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v18, v23, v25);
  sub_20A8C7490();
  sub_20A491E4C(&qword_26763B148, MEMORY[0x263F7A420]);
  unint64_t v39 = 0x800000020A8FB2E0;
  sub_20A8C45B0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_20A8C7980();
  unint64_t v26 = sub_20A8C79A0();
  if (v26 > 4) {
    uint64_t v27 = (unsigned int *)MEMORY[0x263F79B90];
  }
  else {
    uint64_t v27 = (unsigned int *)qword_263FDD310[v26];
  }
  (*(void (**)(char *, void, uint64_t))(v41 + 104))(v40, *v27, v42);
  sub_20A8C6A20();
  sub_20A491DF4();
  uint64_t v42 = v28;
  uint64_t v29 = sub_20A8C4620();
  uint64_t v30 = *(void *)(v29 - 8);
  unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v32 = swift_allocObject();
  long long v41 = xmmword_20A8D3DC0;
  *(_OWORD *)(v32 + 16) = xmmword_20A8D3DC0;
  uint64_t v33 = *MEMORY[0x263F24D48];
  unint64_t v34 = *(void (**)(unint64_t, uint64_t, uint64_t))(v30 + 104);
  v34(v32 + v31, v33, v29);
  sub_20A491E4C(&qword_26AC69970, MEMORY[0x263F79B70]);
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  sub_20A8C79C0();
  uint64_t v35 = v43;
  sub_20A8C70C0();
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = v41;
  v34(v36 + v31, v33, v29);
  sub_20A491E4C(&qword_26AC69A70, MEMORY[0x263F7A090]);
  uint64_t v37 = v46;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v35, v37);
  sub_20A8C73C0();
  sub_20A491E4C((unint64_t *)&unk_26763B150, MEMORY[0x263F7A328]);
  memset(v54, 0, 32);
  sub_20A8C45D0();
  sub_20A44349C((uint64_t)v54);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v52, v53);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v48, v50);
}

uint64_t type metadata accessor for CampaignLandingPageTracker()
{
  return self;
}

uint64_t sub_20A491BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C79F0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  double v7 = MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_20A8C48E0();
  return swift_release();
}

uint64_t sub_20A491CF0()
{
  uint64_t v1 = sub_20A8C79F0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_20A491D80(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_20A8C79F0() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_20A491410(a1, v4, v5);
}

void sub_20A491DF4()
{
  if (!qword_26AC7FEC0)
  {
    sub_20A8C4620();
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FEC0);
    }
  }
}

uint64_t sub_20A491E4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ForYouFeedScrollTestCase()
{
  return self;
}

void sub_20A492074(void *a1)
{
  uint64_t v2 = (void *)sub_20A8CE240();
  id v3 = objc_msgSend(a1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
    sub_20A441D28(&v5, &v6);
    type metadata accessor for ForYouFeedViewController();
    swift_dynamicCast();
    sub_20A8C9BF0();
    sub_20A8C94C0();

    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t *sub_20A492168(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C2EF0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    long long v14 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)v4 + v13 + 24) = v14;
    (**(void (***)(void))(v14 - 8))();
  }
  return v4;
}

uint64_t sub_20A4922B4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_20A8C2EF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);

  return __swift_destroy_boxed_opaque_existential_1(v6);
}

void *sub_20A492340(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C2EF0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  long long v13 = *(_OWORD *)((char *)a2 + v12 + 24);
  *(_OWORD *)((char *)a1 + v12 + 24) = v13;
  (**(void (***)(void))(v13 - 8))();
  return a1;
}

void *sub_20A49243C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2EF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + *(int *)(a3 + 24)), (void *)((char *)a2 + *(int *)(a3 + 24)));
  return a1;
}

_OWORD *sub_20A4924F0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2EF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((void *)v11 + 4) = *((void *)v12 + 4);
  return a1;
}

void *sub_20A492598(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C2EF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  long long v13 = (char *)a2 + v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v11);
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((void *)v12 + 4) = *((void *)v13 + 4);
  return a1;
}

uint64_t sub_20A492650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A492664);
}

uint64_t sub_20A492664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C2EF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_20A492714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A492728);
}

uint64_t sub_20A492728(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_20A8C2EF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for TickerRefreshPriceDataBlueprintModifier()
{
  uint64_t result = qword_26AC685C0;
  if (!qword_26AC685C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A49281C()
{
  uint64_t result = sub_20A8C2EF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A4928BC(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v33 = a3;
  unint64_t v34 = a2;
  uint64_t v5 = sub_20A8C8B80();
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  unint64_t v26 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A494AE0(0, &qword_26AC6A418, MEMORY[0x263F7D950]);
  uint64_t v31 = *(void *)(v7 - 8);
  uint64_t v32 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - v8;
  sub_20A4949B4();
  MEMORY[0x270FA5388](v10 - 8);
  sub_20A494AE0(0, (unint64_t *)&qword_26AC6AC90, MEMORY[0x263F7E0A8]);
  uint64_t v29 = *(void *)(v11 - 8);
  uint64_t v30 = v11;
  MEMORY[0x270FA5388](v11);
  long long v13 = (char *)&v25 - v12;
  uint64_t v36 = v3;
  uint64_t v37 = a1;
  uint64_t v14 = sub_20A449A28((void (*)(char *))sub_20A494BA0, (uint64_t)v35, (uint64_t)v39);
  sub_20A494AE0(0, (unint64_t *)&qword_26AC69EE0, MEMORY[0x263F7D450]);
  uint64_t v16 = v15;
  uint64_t v17 = sub_20A494A80(&qword_26AC69ED0);
  uint64_t v18 = sub_20A494A80(&qword_26AC69EC8);
  MEMORY[0x21051E250](v14, v16, v17, v18);
  type metadata accessor for TickerModel();
  sub_20A44DD30();
  sub_20A49496C(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
  sub_20A8CBB20();
  sub_20A494BC0();
  sub_20A8C9300();
  __swift_project_boxed_opaque_existential_1(v38, v38[3]);
  if (sub_20A8C8B90())
  {
    uint64_t v20 = v31;
    uint64_t v19 = v32;
    (*(void (**)(char *, void, uint64_t))(v31 + 104))(v9, *MEMORY[0x263F7D948], v32);
  }
  else
  {
    int v22 = v26;
    uint64_t v21 = v27;
    uint64_t v23 = v28;
    (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, *MEMORY[0x263F7D528], v28);
    sub_20A8C9B50();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v23);
    uint64_t v20 = v31;
    uint64_t v19 = v32;
  }
  v34(v9);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v19);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v30);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
}

uint64_t sub_20A492D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A494C14();
  MEMORY[0x270FA5388](v6 - 8);
  sub_20A494AE0(0, (unint64_t *)&qword_26AC69EE0, MEMORY[0x263F7D450]);
  sub_20A8C8820();
  uint64_t v18 = v19;
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  uint64_t v16 = a1;
  uint64_t v7 = sub_20A449A90((void (*)(char *))sub_20A494CE0, (uint64_t)v13, (uint64_t)v17);
  sub_20A44DF90(0);
  uint64_t v9 = v8;
  uint64_t v10 = sub_20A49496C(&qword_26AC69D58, sub_20A44DF90);
  uint64_t v11 = sub_20A49496C(&qword_26AC69D50, sub_20A44DF90);
  MEMORY[0x21051E250](v7, v9, v10, v11);
  type metadata accessor for TickerModel();
  sub_20A44DD30();
  sub_20A49496C(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
  return sub_20A8C8810();
}

uint64_t sub_20A492F44@<X0>(uint64_t (*a1)(uint64_t)@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v97 = a4;
  uint64_t v98 = a3;
  uint64_t v110 = a2;
  uint64_t v114 = a5;
  uint64_t v6 = sub_20A8C4030();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v96 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v93 = (uint64_t)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_20A8C3410();
  uint64_t v95 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  id v100 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_20A8C3F00();
  uint64_t v112 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  uint64_t v105 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A494F90(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v99 = (uint64_t)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v108 = (uint64_t)&v86 - v16;
  sub_20A494F90(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], v12);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v94 = (uint64_t)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v113 = (uint64_t)&v86 - v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v104 = (char *)&v86 - v22;
  uint64_t v23 = sub_20A8C3E10();
  uint64_t v106 = *(void *)(v23 - 8);
  uint64_t v107 = v23;
  MEMORY[0x270FA5388](v23);
  char v101 = (char *)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A494F90(0, &qword_26AC6DA90, (uint64_t (*)(uint64_t))type metadata accessor for StockViewModel, v12);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v27 = (char *)&v86 - v26;
  uint64_t v28 = type metadata accessor for TickerModel();
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v86 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v86 - v32;
  uint64_t v34 = type metadata accessor for StockViewModel();
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v37 = (char *)&v86 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = ((char *)&v86 - v39);
  sub_20A44DF90(0);
  uint64_t v109 = v41;
  uint64_t v111 = a1;
  sub_20A8C8330();
  uint64_t v42 = (uint64_t *)v30;
  sub_20A494F28((uint64_t)v33, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for TickerModel);
  sub_20A494D04();
  uint64_t v44 = v43;
  sub_20A494EC0((uint64_t)v42 + *(int *)(v43 + 48), (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v27, 0, 1, v34);
  sub_20A494DE0((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for TickerModel);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v27, 1, v34) == 1)
  {
    uint64_t v45 = &qword_26AC6DA90;
    uint64_t v46 = type metadata accessor for StockViewModel;
    uint64_t v47 = (uint64_t)v27;
LABEL_11:
    sub_20A494D70(v47, v45, (uint64_t (*)(uint64_t))v46);
    return (*(uint64_t (**)(uint64_t, uint64_t (*)(uint64_t)))(*(void *)(v109 - 8) + 16))(v114, v111);
  }
  os_log_type_t v87 = (int *)v34;
  uint64_t v88 = v44;
  uint64_t v91 = v37;
  CGRect v89 = v42;
  uint64_t v90 = v28;
  uint64_t v49 = v106;
  uint64_t v48 = v107;
  uint64_t v50 = v108;
  sub_20A494EC0((uint64_t)v27, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  type metadata accessor for TickerRefreshPriceDataBlueprintModifier();
  uint64_t v51 = sub_20A8C2EE0();
  uint64_t v92 = v40;
  uint64_t v52 = sub_20A8C3EC0();
  if (*(void *)(v51 + 16))
  {
    unint64_t v54 = sub_20A4D1B24(v52, v53);
    uint64_t v55 = v48;
    uint64_t v56 = v113;
    if (v57)
    {
      uint64_t v58 = v104;
      (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(v104, *(void *)(v51 + 56) + *(void *)(v49 + 72) * v54, v48);
      uint64_t v59 = *(uint64_t (**)(uint64_t))(v49 + 56);
      ((void (*)(char *, void, uint64_t, uint64_t))v59)(v58, 0, 1, v48);
    }
    else
    {
      uint64_t v59 = *(uint64_t (**)(uint64_t))(v49 + 56);
      uint64_t v58 = v104;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v59)(v104, 1, 1, v48);
    }
    uint64_t v60 = v112;
  }
  else
  {
    uint64_t v59 = *(uint64_t (**)(uint64_t))(v49 + 56);
    uint64_t v58 = v104;
    uint64_t v55 = v48;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v59)(v104, 1, 1, v48);
    uint64_t v60 = v112;
    uint64_t v56 = v113;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v58, 1, v55) == 1)
  {
    sub_20A494DE0((uint64_t)v92, (uint64_t (*)(void))type metadata accessor for StockViewModel);
    uint64_t v45 = &qword_26AC68FB0;
    uint64_t v46 = (uint64_t (*)())MEMORY[0x263F7AEF0];
    uint64_t v47 = (uint64_t)v58;
    goto LABEL_11;
  }
  uint64_t v62 = (uint64_t)v101;
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v101, v58, v55);
  uint64_t v63 = v92;
  sub_20A493B5C(v110, v92, v62, v50);
  uint64_t v111 = v59;
  uint64_t v110 = *(char **)(v60 + 16);
  uint64_t v64 = v102;
  ((void (*)(char *, NSObject *, uint64_t))v110)(v105, v63, v102);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v56, v62, v55);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v111)(v56, 0, 1, v55);
  uint64_t v111 = type metadata accessor for StockSparklineViewModel;
  uint64_t v65 = v99;
  sub_20A494E40(v50, v99, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel);
  uint64_t v66 = v95;
  uint64_t v67 = v87;
  uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v95 + 16);
  v68(v100, (char *)v63 + v87[8], v103);
  LODWORD(v109) = *((unsigned __int8 *)&v63->isa + v67[9]);
  uint64_t v69 = v91;
  ((void (*)(char *, char *, uint64_t))v110)(v91, v105, v64);
  uint64_t v70 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AEF0];
  uint64_t v71 = v113;
  sub_20A494E40(v113, (uint64_t)&v69[v67[5]], &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  sub_20A494E40(v65, (uint64_t)&v69[v67[6]], &qword_26AC754A0, v111);
  uint64_t v72 = v100;
  uint64_t v73 = v103;
  v68(&v69[v67[8]], v100, v103);
  v69[v67[9]] = v109;
  uint64_t v74 = v71;
  uint64_t v75 = v94;
  uint64_t v76 = v70;
  sub_20A494E40(v74, v94, &qword_26AC68FB0, v70);
  unint64_t v77 = v96;
  uint64_t v78 = v105;
  sub_20A8C3E70();
  uint64_t v79 = v93;
  sub_20A5EC850(v75, v77, 9666786, 0xA300000000000000, v93);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v72, v73);
  char v80 = v111;
  sub_20A494D70(v99, &qword_26AC754A0, v111);
  sub_20A494D70(v113, &qword_26AC68FB0, v76);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v78, v102);
  uint64_t v81 = (uint64_t)v91;
  sub_20A494EC0(v79, (uint64_t)&v91[v67[7]], (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  sub_20A494AE0(0, (unint64_t *)&qword_26AC69EE0, MEMORY[0x263F7D450]);
  sub_20A8C8830();
  sub_20A494AE0(0, (unint64_t *)&qword_26AC6AC90, MEMORY[0x263F7E0A8]);
  uint64_t v82 = sub_20A8CBA20();
  LOBYTE(v67) = v83;
  swift_bridgeObjectRelease();
  if (v67) {
    uint64_t v84 = 0;
  }
  else {
    uint64_t v84 = v82;
  }
  uint64_t v85 = (uint64_t)v89 + *(int *)(v88 + 48);
  *CGRect v89 = v84;
  sub_20A494F28(v81, v85, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  sub_20A49496C(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
  sub_20A8C8320();
  sub_20A494DE0(v81, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  sub_20A494D70(v108, &qword_26AC754A0, v80);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v101, v107);
  return sub_20A494DE0((uint64_t)v92, (uint64_t (*)(void))type metadata accessor for StockViewModel);
}

uint64_t sub_20A493B5C@<X0>(char *a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v122 = a3;
  uint64_t v113 = type metadata accessor for StockSparklineViewModel.CacheModel(0);
  MEMORY[0x270FA5388](v113);
  uint64_t v114 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A494F90(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v118 = (uint64_t)&v106 - v10;
  sub_20A494F90(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], v8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v106 - v12;
  sub_20A494F90(0, &qword_26AC7F4E0, MEMORY[0x263F7CB28], v8);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v115 = (uint64_t)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v116 = (uint64_t)&v106 - v17;
  uint64_t v18 = sub_20A8CDCD0();
  uint64_t v120 = *(void *)(v18 - 8);
  uint64_t v121 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v109 = (char *)&v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v117 = (char *)&v106 - v21;
  MEMORY[0x270FA5388](v22);
  uint64_t v110 = (char *)&v106 - v23;
  sub_20A494F90(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], v8);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v26 = (char *)&v106 - v25;
  uint64_t v27 = sub_20A8C3D00();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v111 = (char *)&v106 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v112 = (char *)&v106 - v31;
  MEMORY[0x270FA5388](v32);
  uint64_t v119 = (char *)&v106 - v33;
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)&v106 - v35;
  uint64_t refreshed = type metadata accessor for TickerRefreshPriceDataBlueprintModifier();
  uint64_t v37 = sub_20A8C2EC0();
  uint64_t v126 = a2;
  uint64_t v38 = sub_20A8C3EC0();
  uint64_t v40 = *(void *)(v37 + 16);
  uint64_t v125 = v27;
  if (v40)
  {
    unint64_t v41 = sub_20A4D1B24(v38, v39);
    if (v42)
    {
      uint64_t v27 = v125;
      (*(void (**)(char *, unint64_t, uint64_t))(v28 + 16))(v26, *(void *)(v37 + 56) + *(void *)(v28 + 72) * v41, v125);
      uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
      uint64_t v44 = v26;
      uint64_t v45 = 0;
    }
    else
    {
      uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
      uint64_t v44 = v26;
      uint64_t v45 = 1;
      uint64_t v27 = v125;
    }
  }
  else
  {
    uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
    uint64_t v44 = v26;
    uint64_t v45 = 1;
  }
  v43(v44, v45, 1, v27);
  uint64_t v46 = refreshed;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27);
  uint64_t v123 = a4;
  if (v47 == 1)
  {
    uint64_t v108 = v13;
    uint64_t v110 = a1;
    sub_20A494D70((uint64_t)v26, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
    uint64_t v48 = v126;
  }
  else
  {
    uint64_t v107 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    uint64_t v108 = (char *)(v28 + 32);
    v107(v36, v26, v27);
    __swift_project_boxed_opaque_existential_1(&a1[*(int *)(v46 + 24)], *(void *)&a1[*(int *)(v46 + 24) + 24]);
    uint64_t v49 = sub_20A8C3E10();
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v51 = a1;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v13, v122, v49);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v13, 0, 1, v49);
    uint64_t v52 = v116;
    uint64_t v48 = v126;
    sub_20A61E8FC(v36, (uint64_t)v13, v126, v116, 0.02);
    uint64_t v53 = v52;
    sub_20A494D70((uint64_t)v13, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    uint64_t v54 = v120;
    uint64_t v55 = v52;
    uint64_t v56 = v121;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48))(v55, 1, v121) != 1)
    {
      uint64_t v87 = v123;
      uint64_t v126 = *(NSObject **)(v54 + 32);
      uint64_t v88 = v110;
      ((void (*)(char *, uint64_t, uint64_t))v126)(v110, v53, v56);
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v117, v88, v56);
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v119, v36, v27);
      uint64_t refreshed = sub_20A8C3E00();
      LODWORD(v118) = v89;
      uint64_t v90 = sub_20A8C3D10();
      char v92 = v91;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v88, v56);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v36, v27);
      ((void (*)(uint64_t, char *, uint64_t))v126)(v87, v117, v56);
      uint64_t v93 = (int *)type metadata accessor for StockSparklineViewModel(0);
      v107((char *)(v87 + v93[8]), v119, v27);
      uint64_t v94 = v87 + v93[5];
      *(void *)uint64_t v94 = refreshed;
      *(unsigned char *)(v94 + 8) = v118 & 1;
      uint64_t v95 = v87 + v93[6];
      *(void *)uint64_t v95 = v90;
      *(unsigned char *)(v95 + 8) = v92 & 1;
      *(unsigned char *)(v87 + v93[7]) = 0;
      return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v93 - 1) + 56))(v87, 0, 1, v93);
    }
    uint64_t v108 = v13;
    uint64_t v110 = v51;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v36, v27);
    sub_20A494D70(v53, &qword_26AC7F4E0, MEMORY[0x263F7CB28]);
  }
  uint64_t v57 = type metadata accessor for StockViewModel();
  uint64_t v58 = v118;
  sub_20A494E40((uint64_t)v48 + *(int *)(v57 + 24), v118, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel);
  uint64_t v59 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v60 = *((void *)v59 - 1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v60 + 48))(v58, 1, v59) == 1)
  {
    sub_20A494D70(v58, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel);
LABEL_14:
    sub_20A8CE9E0();
    sub_20A494F90(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
    uint64_t v81 = swift_allocObject();
    *(_OWORD *)(v81 + 16) = xmmword_20A8D3DC0;
    uint64_t v82 = sub_20A8C3EC0();
    uint64_t v84 = v83;
    *(void *)(v81 + 56) = MEMORY[0x263F8D310];
    *(void *)(v81 + 64) = sub_20A43F830();
    *(void *)(v81 + 32) = v82;
    *(void *)(v81 + 40) = v84;
    sub_20A43F884();
    uint64_t v85 = (void *)sub_20A8CF180();
    sub_20A8C7D90();
    swift_bridgeObjectRelease();

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v60 + 56))(v123, 1, 1, v59);
  }
  uint64_t v116 = v60;
  uint64_t v61 = v58 + v59[5];
  uint64_t v62 = *(void *)v61;
  char v63 = *(unsigned char *)(v61 + 8);
  uint64_t v64 = v58 + v59[6];
  uint64_t v65 = *(void *)v64;
  char v66 = *(unsigned char *)(v64 + 8);
  uint64_t v67 = v58 + v59[8];
  uint64_t v68 = v114;
  uint64_t v69 = &v114[*(int *)(v113 + 24)];
  uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  uint64_t v71 = v125;
  uint64_t v113 = v28 + 16;
  uint64_t v107 = v70;
  v70(v69, (char *)v67, v125);
  *(void *)uint64_t v68 = v62;
  v68[8] = v63;
  *((void *)v68 + 2) = v65;
  v68[24] = v66;
  sub_20A494DE0(v58, type metadata accessor for StockSparklineViewModel);
  uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  uint64_t v73 = v111;
  v72(v111, v69, v71);
  uint64_t v74 = v112;
  uint64_t v118 = (uint64_t)v72;
  v72(v112, v73, v71);
  __swift_project_boxed_opaque_existential_1(&v110[*(int *)(refreshed + 24)], *(void *)&v110[*(int *)(refreshed + 24) + 24]);
  uint64_t v75 = sub_20A8C3E10();
  uint64_t v76 = *(void *)(v75 - 8);
  uint64_t v77 = (uint64_t)v108;
  (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v108, v122, v75);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v76 + 56))(v77, 0, 1, v75);
  uint64_t v78 = v115;
  sub_20A61E8FC(v74, v77, v126, v115, 0.02);
  sub_20A494D70(v77, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  uint64_t v79 = v120;
  uint64_t v80 = v121;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48))(v78, 1, v121) == 1)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v74, v125);
    sub_20A494D70(v78, &qword_26AC7F4E0, MEMORY[0x263F7CB28]);
    uint64_t v60 = v116;
    goto LABEL_14;
  }
  uint64_t v126 = (v28 + 32);
  uint64_t v96 = v74;
  uint64_t refreshed = *(void *)(v79 + 32);
  uint64_t v97 = v109;
  ((void (*)(char *, uint64_t, uint64_t))refreshed)(v109, v78, v80);
  uint64_t v98 = v117;
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v117, v97, v80);
  uint64_t v99 = v125;
  v107(v119, v96, v125);
  uint64_t v115 = sub_20A8C3E00();
  LODWORD(v114) = v100;
  uint64_t v101 = sub_20A8C3D10();
  LODWORD(v122) = v102;
  (*(void (**)(char *, uint64_t))(v79 + 8))(v97, v80);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v96, v99);
  uint64_t v103 = v123;
  ((void (*)(uint64_t, char *, uint64_t))refreshed)(v123, v98, v80);
  ((void (*)(uint64_t, char *, uint64_t))v118)(v103 + v59[8], v119, v99);
  uint64_t v104 = v103 + v59[5];
  *(void *)uint64_t v104 = v115;
  *(unsigned char *)(v104 + 8) = v114 & 1;
  uint64_t v105 = v103 + v59[6];
  *(void *)uint64_t v105 = v101;
  *(unsigned char *)(v105 + 8) = v122 & 1;
  *(unsigned char *)(v103 + v59[7]) = 0;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v116 + 56))(v103, 0, 1, v59);
}

uint64_t sub_20A4948D8()
{
  return sub_20A49496C(qword_26AC7DF58, (void (*)(uint64_t))type metadata accessor for TickerRefreshPriceDataBlueprintModifier);
}

uint64_t sub_20A494924()
{
  return sub_20A49496C(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
}

uint64_t sub_20A49496C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A4949B4()
{
  if (!qword_26AC69758)
  {
    sub_20A494AE0(255, (unint64_t *)&qword_26AC69EE0, MEMORY[0x263F7D450]);
    sub_20A494A80(&qword_26AC69ED0);
    sub_20A494A80(&qword_26AC69EC8);
    unint64_t v0 = sub_20A8C5F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69758);
    }
  }
}

uint64_t sub_20A494A80(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A494AE0(255, (unint64_t *)&qword_26AC69EE0, MEMORY[0x263F7D450]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A494AE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for TickerSectionDescriptor;
    v8[1] = type metadata accessor for TickerModel();
    long long v8[2] = sub_20A44DD30();
    void v8[3] = sub_20A49496C(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A494BA0(uint64_t a1)
{
  return sub_20A492D54(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_20A494BC0()
{
  unint64_t result = qword_26AC680E0;
  if (!qword_26AC680E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC680E0);
  }
  return result;
}

void sub_20A494C14()
{
  if (!qword_26AC69730)
  {
    sub_20A44DF90(255);
    sub_20A49496C(&qword_26AC69D58, sub_20A44DF90);
    sub_20A49496C(&qword_26AC69D50, sub_20A44DF90);
    unint64_t v0 = sub_20A8C5F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69730);
    }
  }
}

uint64_t sub_20A494CE0@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  return sub_20A492F44(a1, *(char **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

void sub_20A494D04()
{
  if (!qword_26AC7F880)
  {
    type metadata accessor for StockViewModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC7F880);
    }
  }
}

uint64_t sub_20A494D70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A494F90(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A494DE0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A494E40(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_20A494F90(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A494EC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A494F28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_20A494F90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

ValueMetadata *type metadata accessor for ForYouFeedPrewarmBlueprintModifier()
{
  return &type metadata for ForYouFeedPrewarmBlueprintModifier;
}

unint64_t sub_20A49500C()
{
  unint64_t result = qword_26AC684D8[0];
  if (!qword_26AC684D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26AC684D8);
  }
  return result;
}

uint64_t sub_20A495060()
{
  return sub_20A4950F0(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
}

uint64_t sub_20A4950A8()
{
  return sub_20A4950F0((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
}

uint64_t sub_20A4950F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A495138(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v30 = a3;
  uint64_t v31 = a2;
  sub_20A4956BC(0, &qword_26AC6A430, MEMORY[0x263F7D950]);
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v29 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v26 - v4;
  sub_20A4956BC(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  uint64_t v7 = v6;
  uint64_t v27 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v26 - v9;
  sub_20A495590();
  MEMORY[0x270FA5388](v11 - 8);
  sub_20A4956BC(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v26 - v15;
  uint64_t v17 = sub_20A49565C(&qword_26AC69E98);
  uint64_t v18 = sub_20A49565C(&qword_26AC69E90);
  MEMORY[0x21051E240](MEMORY[0x263F8EE78], v7, v17, v18);
  type metadata accessor for ForYouFeedSectionDescriptor();
  type metadata accessor for ForYouFeedModel();
  sub_20A4950F0(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
  sub_20A4950F0((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
  sub_20A8CBB20();
  sub_20A4EFA3C(0, (uint64_t)v10);
  sub_20A8CBA80();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v27);
  sub_20A4957B0();
  uint64_t v20 = &v5[*(int *)(v19 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v5, v16, v13);
  uint64_t v21 = *MEMORY[0x263F7D528];
  uint64_t v22 = sub_20A8C8B80();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v20, v21, v22);
  uint64_t v24 = v28;
  uint64_t v23 = v29;
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v5, *MEMORY[0x263F7D938], v29);
  v31(v5);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

void sub_20A495590()
{
  if (!qword_26AC69750)
  {
    sub_20A4956BC(255, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
    sub_20A49565C(&qword_26AC69E98);
    sub_20A49565C(&qword_26AC69E90);
    unint64_t v0 = sub_20A8C5F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69750);
    }
  }
}

uint64_t sub_20A49565C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A4956BC(255, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A4956BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for ForYouFeedSectionDescriptor();
    v8[1] = type metadata accessor for ForYouFeedModel();
    long long v8[2] = sub_20A4950F0(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
    void v8[3] = sub_20A4950F0((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_20A4957B0()
{
  if (!qword_26AC6ACF8)
  {
    sub_20A4956BC(255, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
    sub_20A8C8B80();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC6ACF8);
    }
  }
}

__n128 sub_20A495840@<Q0>(int a1@<W0>, double a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v311 = a4;
  uint64_t v9 = sub_20A8C4030();
  v301.origin.CGFloat x = *(CGFloat *)(v9 - 8);
  *(void *)&v301.origin.CGFloat y = v9;
  MEMORY[0x270FA5388](v9);
  *(void *)&double v300 = (char *)&v282 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8CADF0();
  uint64_t v309 = *(void *)(v11 - 8);
  uint64_t v310 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v282 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v299 = COERCE_DOUBLE(type metadata accessor for PriceViewModel());
  MEMORY[0x270FA5388](*(void *)&v299);
  *(void *)&v301.size.CGFloat height = (char *)&v282 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  *(void *)&v301.size.CGFloat width = (char *)&v282 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v282 - v18;
  uint64_t v20 = sub_20A8C3F00();
  double v21 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v282 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v306 = v25;
  uint64_t v307 = v24;
  (*(void (**)(char *, double, double))(v25 + 16))(v23, COERCE_DOUBLE(*(void *)&a2), v21);
  *(double *)&uint64_t v26 = COERCE_DOUBLE(type metadata accessor for StockViewModel());
  uint64_t v27 = *(void *)&a2 + *(int *)(v26 + 28);
  CGFloat v318 = *(double *)&v19;
  sub_20A458F00(v27, (uint64_t)v19);
  sub_20A8C96E0();
  v308 = v13;
  sub_20A8CADC0();
  double v30 = v28 + v29;
  sub_20A8C9710();
  double v32 = v31;
  sub_20A8C9720();
  double v34 = v33;
  CGFloat v296 = v32;
  sub_20A8CE970();
  double v303 = v30;
  double v36 = v34 - v35 - v30;
  id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, *MEMORY[0x263F83588]);
  uint64_t v304 = a3;
  uint64_t v38 = (void *)sub_20A8C9750();
  objc_msgSend(v37, sel_scaledValueForValue_compatibleWithTraitCollection_, v38, 22.0);
  double v40 = v39;

  LODWORD(v313) = a1;
  double v41 = 8.0;
  if ((a1 & 1) == 0) {
    double v41 = 24.0;
  }
  double v42 = v41 + v40;
  double v43 = 12.0;
  if ((a1 & 1) == 0) {
    double v43 = 4.0;
  }
  CGFloat v302 = v42;
  double v44 = v43 + v42;
  uint64_t v45 = (void *)(v5 + 16);
  __swift_project_boxed_opaque_existential_1((void *)(v5 + 16), *(void *)(v5 + 40));
  uint64_t v46 = sub_20A8C3E60();
  id v317 = sub_20A53266C(v46, v47, 0);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1((void *)(v5 + 16), *(void *)(v5 + 40));
  CGFloat v312 = *(double *)&v26;
  uint64_t v48 = *(int *)(v26 + 20);
  uint64_t v49 = v5;
  CGFloat v314 = a2;
  sub_20A817594(*(void *)&a2 + v48);
  CGFloat v316 = COERCE_DOUBLE(sub_20A532FC0());
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1((void *)(v5 + 16), *(void *)(v5 + 40));
  double v305 = v23;
  sub_20A8C3EF0();
  id v315 = sub_20A5331D0();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1((void *)(v5 + 16), *(void *)(v5 + 40));
  sub_20A8C4250();
  sub_20A8C4230();
  if (qword_26AC69070 != -1) {
    swift_once();
  }
  double v50 = v36 - v44;
  sub_20A8C4220();
  swift_release();
  uint64_t v51 = *(void *)&v318;
  char v52 = *(unsigned char *)(*(void *)&v318 + 8);
  CGFloat v319 = v44;
  double v294 = v36;
  if (v52)
  {
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  char v53 = v335;
  double v54 = **(double **)&v318;
  uint64_t v55 = *(void *)&v301.size.width;
  sub_20A458F00(*(uint64_t *)&v318, *(uint64_t *)&v301.size.width);
  if (v53)
  {
    double v56 = v300;
    CGFloat x = v301.origin.x;
    CGFloat y = v301.origin.y;
    (*(void (**)(double, uint64_t, void))(*(void *)&v301.origin.x + 16))(COERCE_DOUBLE(*(void *)&v300), v55 + *(int *)(*(void *)&v299 + 40), *(void *)&v301.origin.y);
    int v59 = (*(uint64_t (**)(double, CGFloat))(*(void *)&x + 88))(COERCE_DOUBLE(*(void *)&v56), COERCE_CGFLOAT(*(void *)&y));
    char v60 = 2;
    if (v59 == *MEMORY[0x263F7AF90]
      || v59 == *MEMORY[0x263F7AF98]
      || v59 == *MEMORY[0x263F7AF68]
      || v59 == *MEMORY[0x263F7AF80]
      || v59 == *MEMORY[0x263F7AF70]
      || v59 == *MEMORY[0x263F7AF88])
    {
      goto LABEL_18;
    }
    if (v59 != *MEMORY[0x263F7AF78])
    {
      if (v59 != *MEMORY[0x263F7AF60]) {
        (*(void (**)(double, CGFloat))(*(void *)&x + 8))(COERCE_DOUBLE(*(void *)&v56), COERCE_CGFLOAT(*(void *)&y));
      }
      char v60 = 2;
      goto LABEL_18;
    }
  }
  char v60 = 0;
LABEL_18:
  sub_20A49716C(v55);
  if (qword_26AC6D680 != -1) {
    swift_once();
  }
  sub_20A6573EC(*(void *)(v51 + 48), *(void *)(v51 + 56), 5, 1, v60, v54);
  uint64_t v62 = v61;
  uint64_t v63 = *(void *)&v301.size.height;
  sub_20A458F00(v51, *(uint64_t *)&v301.size.height);
  if (!v62) {
    swift_bridgeObjectRetain();
  }
  sub_20A49716C(v63);
LABEL_23:
  uint64_t v64 = *(void *)(v51 + 16);
  char v65 = *(unsigned char *)(v51 + 24);
  double v66 = COERCE_DOUBLE(sub_20A5333E4());
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v45, *(void *)(v49 + 40));
  uint64_t v67 = sub_20A5EBCFC(*(void *)&v314 + *(int *)(*(void *)&v312 + 32), 0);
  double v69 = COERCE_DOUBLE(sub_20A5328A8(v67, v68, v64, v65));
  swift_bridgeObjectRelease();
  id v70 = v315;
  objc_msgSend(v315, sel_boundingRectWithSize_options_context_, 32, 0, v50, 1.79769313e308);
  CGFloat v72 = v71;
  CGFloat v314 = v73;
  CGFloat v75 = v74;
  CGFloat v312 = v76;
  objc_msgSend(*(id *)&v66, sel_boundingRectWithSize_options_context_, 32, 0, v50, 1.79769313e308);
  CGFloat v78 = v77;
  CGFloat v80 = v79;
  CGFloat v82 = v81;
  CGFloat v84 = v83;
  objc_msgSend(*(id *)&v69, sel_boundingRectWithSize_options_context_, 32, 0, v50, 1.79769313e308);
  v301.size.CGFloat width = v87;
  v301.size.CGFloat height = v88;
  v301.origin.CGFloat x = v85;
  v301.origin.CGFloat y = v86;
  double v299 = v78;
  double v300 = v80;
  CGFloat v297 = v84;
  CGFloat v298 = v82;
  if (LOBYTE(v313))
  {
    CGFloat v295 = v50;
    objc_msgSend(v317, sel_boundingRectWithSize_options_context_, 1, 0, v50, 1.79769313e308);
    CGFloat v296 = v143;
    double v287 = v145;
    CGFloat v288 = v144;
    CGFloat v286 = v146;
    CGFloat v147 = v316;
    objc_msgSend(*(id *)&v316, sel_size);
    double v149 = v148;
    CGFloat v313 = v150;
    uint64_t v151 = (void *)sub_20A8CEC60();
    unint64_t v152 = (void *)sub_20A8CEC60();
    objc_msgSend(v151, sel_ascender);
    double v154 = v153;
    objc_msgSend(v152, sel_ascender);
    if (v154 > v155) {
      double v155 = v154;
    }
    double v156 = v155 + 14.0;
    objc_msgSend(v151, sel_ascender);
    double v294 = v156;
    double v158 = v156 - v157;
    v363.origin.CGFloat x = v72;
    CGFloat v159 = v314;
    v363.origin.CGFloat y = v314;
    v363.size.CGFloat width = v75;
    CGFloat v160 = v72;
    CGFloat v161 = v75;
    CGFloat v162 = v312;
    v363.size.CGFloat height = v312;
    CGFloat Width = CGRectGetWidth(v363);
    v364.origin.CGFloat x = v160;
    v364.origin.CGFloat y = v159;
    v364.size.CGFloat width = v161;
    v364.size.CGFloat height = v162;
    CGFloat Height = CGRectGetHeight(v364);
    double v165 = v319;
    v365.origin.CGFloat x = v319;
    v365.origin.CGFloat y = v158;
    v365.size.CGFloat width = Width;
    v365.size.CGFloat height = Height;
    CGFloat MaxX = CGRectGetMaxX(v365);
    CGFloat v292 = Width;
    CGFloat v293 = v158;
    CGFloat v291 = Height;
    if (v149 + MaxX + 8.0 <= v295)
    {
      v369.origin.CGFloat x = v165;
      v369.origin.CGFloat y = v158;
      v369.size.CGFloat width = Width;
      v369.size.CGFloat height = Height;
      CGFloat MinX = CGRectGetMinX(v369);
      v370.origin.CGFloat y = v158;
      double v183 = MinX;
      v370.origin.CGFloat x = v165;
      v370.size.CGFloat width = Width;
      v370.size.CGFloat height = Height;
      double v165 = v183 + CGRectGetWidth(v370) + 8.0;
      objc_msgSend(v152, sel_ascender);
      double MaxY = v294 - v184;
      CGFloat v179 = v318;
      CGFloat v180 = v297;
      CGFloat v181 = v298;
      CGFloat v178 = v313;
    }
    else
    {
      objc_msgSend(*(id *)&v147, sel_boundingRectWithSize_options_context_, 1, 0, v295, 1.79769313e308);
      CGFloat v167 = v158;
      CGFloat v169 = v168;
      CGFloat v171 = v170;
      CGFloat v173 = v172;
      CGFloat v175 = v174;
      v366.origin.CGFloat x = v165;
      v366.origin.CGFloat y = v167;
      v366.size.CGFloat width = Width;
      v366.size.CGFloat height = Height;
      double MaxY = CGRectGetMaxY(v366);
      v367.origin.CGFloat x = v169;
      v367.origin.CGFloat y = v171;
      v367.size.CGFloat width = v173;
      v367.size.CGFloat height = v175;
      CGFloat v177 = CGRectGetWidth(v367);
      v368.origin.CGFloat x = v169;
      v368.origin.CGFloat y = v171;
      v368.size.CGFloat width = v173;
      double v149 = v177;
      v368.size.CGFloat height = v175;
      CGFloat v178 = CGRectGetHeight(v368);
      CGFloat v179 = v318;
      CGFloat v180 = v297;
      CGFloat v181 = v298;
    }
    double v289 = v165;
    CGFloat v290 = MaxY;
    v371.origin.CGFloat x = v165;
    v371.origin.CGFloat y = MaxY;
    double v294 = v149;
    v371.size.CGFloat width = v149;
    CGFloat v313 = v178;
    v371.size.CGFloat height = v178;
    CGFloat v185 = CGRectGetMaxY(v371);
    CGFloat v186 = v296;
    v372.origin.CGFloat x = v296;
    CGFloat v188 = v287;
    CGFloat v187 = v288;
    v372.origin.CGFloat y = v288;
    v372.size.CGFloat width = v287;
    CGFloat v189 = v286;
    v372.size.CGFloat height = v286;
    CGFloat v190 = CGRectGetWidth(v372);
    v373.origin.CGFloat x = v186;
    v373.origin.CGFloat y = v187;
    v373.size.CGFloat width = v188;
    v373.size.CGFloat height = v189;
    v374.size.CGFloat height = CGRectGetHeight(v373);
    v374.origin.CGFloat x = v319;
    CGFloat v288 = v185;
    v374.origin.CGFloat y = v185;
    CGFloat v191 = v190;
    CGFloat v192 = v319;
    v374.size.CGFloat width = v191;
    CGFloat v296 = v374.size.height;
    CGFloat v193 = CGRectGetMaxY(v374);
    CGFloat v195 = v299;
    CGFloat v194 = v300;
    v375.origin.CGFloat x = v299;
    v375.origin.CGFloat y = v300;
    v375.size.CGFloat width = v181;
    v375.size.CGFloat height = v180;
    CGFloat v196 = CGRectGetWidth(v375);
    v376.origin.CGFloat x = v195;
    v376.origin.CGFloat y = v194;
    v376.size.CGFloat width = v181;
    v376.size.CGFloat height = v180;
    v377.size.CGFloat height = CGRectGetHeight(v376);
    v377.origin.CGFloat x = v192;
    CGFloat v318 = v193;
    v377.origin.CGFloat y = v193;
    CGFloat v314 = v196;
    v377.size.CGFloat width = v196;
    CGFloat v312 = v377.size.height;
    CGFloat v197 = CGRectGetMaxX(v377) + 8.0;
    CGFloat v198 = v301.origin.x;
    CGFloat v199 = v301.origin.y;
    CGFloat v200 = v301.size.width;
    CGFloat v201 = v301.size.height;
    if (v295 >= v197 + CGRectGetWidth(v301))
    {
      v379.origin.CGFloat x = v192;
      v379.origin.CGFloat y = v318;
      v379.size.CGFloat width = v314;
      v379.size.CGFloat height = v312;
      double v299 = CGRectGetMaxX(v379) + 8.0;
      v380.origin.CGFloat x = v192;
      CGFloat v203 = v288;
      v380.origin.CGFloat y = v288;
      v380.size.CGFloat width = v191;
      v380.size.CGFloat height = v296;
      double v300 = CGRectGetMaxY(v380);
      v381.origin.CGFloat x = v198;
      v381.origin.CGFloat y = v199;
      v381.size.CGFloat width = v200;
      v381.size.CGFloat height = v201;
      CGFloat v205 = v191;
      CGFloat v206 = CGRectGetWidth(v381);
      v382.origin.CGFloat x = v198;
      v382.origin.CGFloat y = v199;
      v382.size.CGFloat width = v200;
      v382.size.CGFloat height = v201;
      CGFloat v201 = CGRectGetHeight(v382);
      CGFloat v200 = v206;
      double v204 = v205;
    }
    else
    {
      v378.origin.CGFloat x = v192;
      v378.origin.CGFloat y = v318;
      v378.size.CGFloat width = v314;
      v378.size.CGFloat height = v312;
      CGFloat v202 = CGRectGetMaxY(v378);
      double v299 = v192;
      double v300 = v202;
      CGFloat v203 = v288;
      double v204 = v191;
    }
    CGFloat v285 = v204;
    CGFloat v207 = v192;
    CGFloat v208 = v203;
    CGFloat v209 = v296;
    CGFloat v210 = v296;
    double v211 = CGRectGetMaxY(*(CGRect *)(&v204 - 2)) + 14.0;
    double v212 = v299;
    v383.origin.CGFloat y = v300;
    v383.origin.CGFloat x = v299;
    v383.size.CGFloat width = v200;
    v383.size.CGFloat height = v201;
    double v213 = CGRectGetMaxY(v383) + 14.0;
    if (v211 <= v213) {
      double v211 = v213;
    }
    v384.origin.CGFloat x = 0.0;
    v384.origin.CGFloat y = 0.0;
    v384.size.CGFloat width = v302;
    v384.size.CGFloat height = v211;
    CGRect v385 = CGRectIntegral(v384);
    v301.size.CGFloat height = v385.origin.y;
    CGFloat v302 = v385.origin.x;
    CGFloat v214 = v385.size.width;
    v301.size.CGFloat width = v385.size.height;
    uint64_t v215 = sub_20A8C9720();
    CGFloat v216 = MEMORY[0x270FA5388](v215);
    *(&v282 - 30) = 0.0;
    *(&v282 - 29) = 0.0;
    *(&v282 - 28) = v216;
    *(&v282 - 27) = v211;
    *(&v282 - 26) = v211;
    *(&v282 - 25) = v192;
    CGFloat v217 = v292;
    *(&v282 - 24) = v293;
    *(&v282 - 23) = v217;
    *(&v282 - 22) = v291;
    *(&v282 - 21) = v192;
    CGFloat v218 = v285;
    *(&v282 - 20) = v203;
    *(&v282 - 19) = v218;
    double v219 = v289;
    *(&v282 - 18) = v209;
    *(&v282 - 17) = v219;
    double v220 = v294;
    *(&v282 - 16) = v290;
    *(&v282 - 15) = v220;
    *(&v282 - 14) = v313;
    *(&v282 - 13) = v192;
    CGFloat v221 = v314;
    *(&v282 - 12) = v318;
    *(&v282 - 11) = v221;
    *(&v282 - 10) = v312;
    *(&v282 - 9) = v212;
    *(&v282 - 8) = v300;
    *(&v282 - 7) = v200;
    CGFloat v222 = v302;
    *(&v282 - 6) = v201;
    *(&v282 - 5) = v222;
    *(&v282 - 4) = v301.size.height;
    *(&v282 - 3) = v214;
    *(&v282 - 2) = v301.size.width;
    sub_20A8C9690();

    (*(void (**)(char *, uint64_t))(v309 + 8))(v308, v310);
    uint64_t v223 = *(void *)&v179;
  }
  else
  {
    objc_msgSend(v317, sel_boundingRectWithSize_options_context_, 33, 0, v50 - CGRectGetWidth(*(CGRect *)&v85) + -10.0, 1.79769313e308);
    CGFloat v285 = v90;
    CGFloat v286 = v89;
    CGFloat v283 = v92;
    CGFloat v284 = v91;
    v350.origin.CGFloat x = v72;
    CGFloat v293 = v72;
    v350.origin.CGFloat y = v314;
    v350.size.CGFloat width = v75;
    CGFloat v313 = v75;
    CGFloat v93 = v312;
    v350.size.CGFloat height = v312;
    double v94 = v50 - CGRectGetWidth(v350) + -8.0;
    v351.origin.CGFloat x = v78;
    v351.origin.CGFloat y = v80;
    v351.size.CGFloat width = v82;
    CGFloat v95 = v84;
    v351.size.CGFloat height = v84;
    objc_msgSend(*(id *)&v316, sel_boundingRectWithSize_options_context_, 1, 0, v94 - CGRectGetWidth(v351) + -10.0, 1.79769313e308);
    CGFloat v290 = v97;
    CGFloat v291 = v96;
    CGFloat v282 = v98;
    CGFloat v292 = v99;
    int v100 = (void *)sub_20A8CEC60();
    uint64_t v101 = (void *)sub_20A8CEC60();
    CGFloat v288 = v66;
    int v102 = (void *)sub_20A8CEC60();
    objc_msgSend(v100, sel_ascender);
    double v104 = v103;
    objc_msgSend(v101, sel_ascender);
    double v106 = v105;
    objc_msgSend(v102, sel_ascender);
    if (v104 > v106) {
      double v108 = v104;
    }
    else {
      double v108 = v106;
    }
    if (v108 > v107) {
      double v107 = v108;
    }
    double v109 = v107 + 14.0;
    uint64_t v110 = (void *)sub_20A8CEC60();
    double v287 = v69;
    uint64_t v111 = (void *)sub_20A8CEC60();
    objc_msgSend(v100, sel_ascender);
    double v289 = v109;
    CGFloat v113 = v109 - v112;
    CGFloat v114 = v293;
    v352.origin.CGFloat x = v293;
    CGFloat v116 = v313;
    CGFloat v115 = v314;
    v352.origin.CGFloat y = v314;
    v352.size.CGFloat width = v313;
    v352.size.CGFloat height = v93;
    CGFloat v117 = CGRectGetWidth(v352);
    v353.origin.CGFloat x = v114;
    v353.origin.CGFloat y = v115;
    v353.size.CGFloat width = v116;
    v353.size.CGFloat height = v93;
    v354.size.CGFloat height = CGRectGetHeight(v353);
    v354.origin.CGFloat x = v319;
    CGFloat v313 = v117;
    CGFloat v314 = v113;
    v354.origin.CGFloat y = v113;
    v354.size.CGFloat width = v117;
    CGFloat v312 = v354.size.height;
    CGFloat v118 = CGRectGetMaxX(v354) + 8.0;
    v355.origin.CGFloat y = v290;
    v355.origin.CGFloat x = v291;
    CGFloat v119 = v282;
    v355.size.CGFloat width = v282;
    v355.size.CGFloat height = v292;
    CGFloat v120 = v118 + CGRectGetWidth(v355);
    CGFloat v121 = v299;
    CGFloat v122 = v300;
    v356.origin.CGFloat x = v299;
    v356.origin.CGFloat y = v300;
    CGFloat v123 = v298;
    v356.size.CGFloat width = v298;
    v356.size.CGFloat height = v95;
    double v124 = v50;
    BOOL v125 = v50 < v120 + CGRectGetWidth(v356);
    CGFloat v126 = v121;
    if (v125) {
      goto LABEL_31;
    }
    v357.origin.CGFloat y = v290;
    v357.origin.CGFloat x = v291;
    v357.size.CGFloat width = v119;
    v357.size.CGFloat height = v292;
    double v127 = CGRectGetHeight(v357);
    v358.origin.CGFloat x = v319;
    v358.size.CGFloat width = v313;
    v358.origin.CGFloat y = v314;
    v358.size.CGFloat height = v312;
    if (CGRectGetHeight(v358) < v127)
    {
LABEL_31:
      v359.origin.CGFloat x = v121;
      v359.origin.CGFloat y = v122;
      v359.size.CGFloat width = v123;
      v359.size.CGFloat height = v95;
      CGFloat v128 = CGRectGetWidth(v359);
      CGFloat v129 = v316;
      objc_msgSend(*(id *)&v316, sel_boundingRectWithSize_options_context_, 1, 0, v124 + -8.0 - v128 - v296, 1.79769313e308);
      CGFloat v131 = v130;
      CGFloat v133 = v132;
      double v134 = v121;
      double v135 = v123;
      CGFloat v137 = v136;
      CGFloat v139 = v138;
      CGFloat v140 = v319;
      v360.origin.CGFloat x = v319;
      v360.size.CGFloat width = v313;
      v360.origin.CGFloat y = v314;
      v360.size.CGFloat height = v312;
      CGFloat v295 = CGRectGetMaxY(v360);
      v361.origin.CGFloat x = v131;
      v361.origin.CGFloat y = v133;
      v361.size.CGFloat width = v137;
      v361.size.CGFloat height = v139;
      CGFloat v293 = CGRectGetWidth(v361);
      v362.origin.CGFloat x = v131;
      v362.origin.CGFloat y = v133;
      v362.size.CGFloat width = v137;
      CGFloat v123 = v135;
      CGFloat v126 = v134;
      v362.size.CGFloat height = v139;
      CGFloat v141 = CGRectGetHeight(v362);
      double v142 = v140;
    }
    else
    {
      v386.origin.CGFloat x = v319;
      v386.size.CGFloat width = v313;
      v386.origin.CGFloat y = v314;
      v386.size.CGFloat height = v312;
      double v142 = CGRectGetMaxX(v386) + 8.0;
      objc_msgSend(v101, sel_ascender);
      CGFloat v224 = v290;
      CGFloat v295 = v289 - v225;
      CGFloat v226 = v291;
      v387.size.CGFloat height = v292;
      v387.origin.CGFloat x = v291;
      v387.origin.CGFloat y = v290;
      v387.size.CGFloat width = v119;
      CGFloat v293 = CGRectGetWidth(v387);
      v388.origin.CGFloat x = v226;
      v388.origin.CGFloat y = v224;
      v388.size.CGFloat width = v119;
      v388.size.CGFloat height = v292;
      CGFloat v141 = CGRectGetHeight(v388);
      CGFloat v129 = v316;
    }
    CGFloat v290 = v142;
    CGFloat v291 = v141;
    double v227 = v142;
    CGFloat v228 = v295;
    CGFloat v229 = v293;
    double v230 = CGRectGetMaxY(*(CGRect *)(&v141 - 3));
    v389.origin.CGFloat x = v319;
    v389.size.CGFloat width = v313;
    v389.origin.CGFloat y = v314;
    v389.size.CGFloat height = v312;
    double v231 = CGRectGetMaxY(v389);
    if (v230 > v231) {
      double v232 = v230;
    }
    else {
      double v232 = v231;
    }
    objc_msgSend(v110, sel_ascender);
    double v234 = v233;
    objc_msgSend(v111, sel_ascender);
    if (v234 > v235) {
      double v235 = v234;
    }
    double v236 = v232 + 2.0 + v235;
    objc_msgSend(v110, sel_ascender);
    CGFloat v282 = v236 - v237;
    CGFloat v239 = v285;
    CGFloat v238 = v286;
    v390.origin.CGFloat x = v286;
    v390.origin.CGFloat y = v285;
    CGFloat v240 = v283;
    CGFloat v241 = v284;
    v390.size.CGFloat width = v284;
    v390.size.CGFloat height = v283;
    CGFloat v316 = CGRectGetWidth(v390);
    v391.origin.CGFloat x = v238;
    v391.origin.CGFloat y = v239;
    v391.size.CGFloat width = v241;
    v391.size.CGFloat height = v240;
    CGFloat v292 = CGRectGetHeight(v391);
    v392.origin.CGFloat x = v126;
    v392.origin.CGFloat y = v122;
    v392.size.CGFloat width = v123;
    CGFloat v242 = v297;
    v392.size.CGFloat height = v297;
    CGFloat v243 = CGRectGetWidth(v392);
    double v244 = v294;
    double v245 = v296;
    CGFloat v286 = v296 + v294 - v243;
    objc_msgSend(v102, sel_ascender);
    double v289 = v289 - v246;
    v393.origin.CGFloat x = v126;
    v393.origin.CGFloat y = v122;
    v393.size.CGFloat width = v123;
    v393.size.CGFloat height = v242;
    CGFloat v285 = CGRectGetWidth(v393);
    v394.origin.CGFloat x = v126;
    v394.origin.CGFloat y = v122;
    v394.size.CGFloat width = v123;
    v394.size.CGFloat height = v242;
    double v300 = CGRectGetHeight(v394);
    CGFloat v248 = v301.origin.x;
    CGFloat v247 = v301.origin.y;
    CGFloat v250 = v301.size.width;
    CGFloat v249 = v301.size.height;
    CGFloat v251 = v245 + v244 - CGRectGetWidth(v301);
    double v299 = v251;
    objc_msgSend(v111, sel_ascender);
    double v253 = v236 - v252;
    v395.origin.CGFloat x = v248;
    v395.origin.CGFloat y = v247;
    v395.size.CGFloat width = v250;
    v395.size.CGFloat height = v249;
    CGFloat v254 = CGRectGetWidth(v395);
    CGFloat v298 = v254;
    v396.origin.CGFloat x = v248;
    v396.origin.CGFloat y = v247;
    v396.size.CGFloat width = v250;
    v396.size.CGFloat height = v249;
    CGFloat v255 = CGRectGetHeight(v396);
    CGFloat v256 = v319;
    v397.origin.CGFloat x = v319;
    CGFloat v257 = v282;
    v397.origin.CGFloat y = v282;
    v397.size.CGFloat width = v316;
    v397.size.CGFloat height = v292;
    double v258 = CGRectGetMaxY(v397) + 14.0;
    v398.origin.CGFloat x = v251;
    v398.origin.CGFloat y = v253;
    v398.size.CGFloat width = v254;
    v398.size.CGFloat height = v255;
    double v259 = CGRectGetMaxY(v398) + 14.0;
    if (v258 > v259) {
      double v260 = v258;
    }
    else {
      double v260 = v259;
    }
    v399.origin.CGFloat x = 0.0;
    v399.origin.CGFloat y = 0.0;
    v399.size.CGFloat width = v302;
    v399.size.CGFloat height = v260;
    CGRect v400 = CGRectIntegral(v399);
    CGFloat v261 = v400.origin.x;
    CGFloat v302 = v400.origin.y;
    CGFloat v262 = v400.size.width;
    CGFloat v263 = v400.size.height;
    uint64_t v264 = sub_20A8C9720();
    CGFloat v265 = MEMORY[0x270FA5388](v264);
    *(&v282 - 30) = 0.0;
    *(&v282 - 29) = 0.0;
    *(&v282 - 28) = v265;
    *(&v282 - 27) = v260;
    *(&v282 - 26) = v260;
    *(&v282 - 25) = v256;
    CGFloat v266 = v313;
    *(&v282 - 24) = v314;
    *(&v282 - 23) = v266;
    *(&v282 - 22) = v312;
    *(&v282 - 21) = v256;
    CGFloat v267 = v316;
    *(&v282 - 20) = v257;
    *(&v282 - 19) = v267;
    CGFloat v268 = v290;
    *(&v282 - 18) = v292;
    *(&v282 - 17) = v268;
    CGFloat v269 = v293;
    *(&v282 - 16) = v295;
    *(&v282 - 15) = v269;
    CGFloat v270 = v286;
    *(&v282 - 14) = v291;
    *(&v282 - 13) = v270;
    CGFloat v271 = v285;
    *(&v282 - 12) = v289;
    *(&v282 - 11) = v271;
    double v272 = v299;
    *(&v282 - 10) = v300;
    *(&v282 - 9) = v272;
    CGFloat v273 = v298;
    *(&v282 - 8) = v253;
    *(&v282 - 7) = v273;
    *(&v282 - 6) = v255;
    *(&v282 - 5) = v261;
    *(&v282 - 4) = v302;
    *(&v282 - 3) = v262;
    *(&v282 - 2) = v263;
    sub_20A8C9690();

    (*(void (**)(char *, uint64_t))(v309 + 8))(v308, v310);
    uint64_t v223 = *(void *)&v318;
  }
  sub_20A49716C(v223);
  (*(void (**)(char *, uint64_t))(v306 + 8))(v305, v307);
  long long v347 = v332;
  long long v348 = v333;
  uint64_t v349 = v334;
  long long v343 = v328;
  long long v344 = v329;
  long long v345 = v330;
  long long v346 = v331;
  long long v339 = v324;
  long long v340 = v325;
  long long v341 = v326;
  long long v342 = v327;
  long long v335 = v320;
  long long v336 = v321;
  long long v337 = v322;
  __n128 v338 = v323;
  long long v274 = v333;
  uint64_t v275 = v311;
  *(_OWORD *)(v311 + 192) = v332;
  *(_OWORD *)(v275 + 208) = v274;
  *(void *)(v275 + 224) = v349;
  long long v276 = v344;
  *(_OWORD *)(v275 + 128) = v343;
  *(_OWORD *)(v275 + 144) = v276;
  long long v277 = v346;
  *(_OWORD *)(v275 + 160) = v345;
  *(_OWORD *)(v275 + 176) = v277;
  long long v278 = v340;
  *(_OWORD *)(v275 + 64) = v339;
  *(_OWORD *)(v275 + 80) = v278;
  long long v279 = v342;
  *(_OWORD *)(v275 + 96) = v341;
  *(_OWORD *)(v275 + 112) = v279;
  long long v280 = v336;
  *(_OWORD *)uint64_t v275 = v335;
  *(_OWORD *)(v275 + 16) = v280;
  __n128 result = v338;
  *(_OWORD *)(v275 + 32) = v337;
  *(__n128 *)(v275 + 48) = result;
  return result;
}

double sub_20A496C4C@<D0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, double a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  double v97 = a5;
  double v98 = a6;
  double v95 = a3;
  double v96 = a4;
  double v94 = a2;
  uint64_t v93 = a25;
  uint64_t v92 = a26;
  uint64_t v91 = a27;
  uint64_t v89 = a21;
  uint64_t v88 = a22;
  uint64_t v90 = a24;
  uint64_t v87 = a23;
  uint64_t v81 = a17;
  uint64_t v80 = a18;
  uint64_t v86 = a20;
  uint64_t v79 = a19;
  uint64_t v73 = a13;
  uint64_t v72 = a14;
  double v74 = a16;
  uint64_t v71 = a15;
  uint64_t v70 = a12;
  uint64_t v28 = sub_20A8C8180();
  uint64_t v29 = *(void *)(v28 - 8);
  double v30 = MEMORY[0x270FA5388](v28);
  double v32 = (char *)&v69 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = *MEMORY[0x263F7D268];
  double v34 = *(void (**)(char *, uint64_t, uint64_t, double))(v29 + 104);
  v34(v32, v33, v28, v30);
  sub_20A8C8170();
  uint64_t v85 = v35;
  uint64_t v84 = v36;
  uint64_t v83 = v37;
  uint64_t v82 = v38;
  double v39 = *(void (**)(char *, uint64_t))(v29 + 8);
  v39(v32, v28);
  ((void (*)(char *, uint64_t, uint64_t))v34)(v32, v33, v28);
  sub_20A8C8170();
  uint64_t v78 = v40;
  uint64_t v77 = v41;
  uint64_t v76 = v42;
  uint64_t v75 = v43;
  v39(v32, v28);
  ((void (*)(char *, uint64_t, uint64_t))v34)(v32, v33, v28);
  sub_20A8C8170();
  uint64_t v73 = v44;
  uint64_t v72 = v45;
  uint64_t v71 = v46;
  uint64_t v70 = v47;
  v39(v32, v28);
  ((void (*)(char *, uint64_t, uint64_t))v34)(v32, v33, v28);
  sub_20A8C8170();
  uint64_t v81 = v48;
  uint64_t v80 = v49;
  uint64_t v79 = v50;
  double v74 = v51;
  v39(v32, v28);
  ((void (*)(char *, uint64_t, uint64_t))v34)(v32, v33, v28);
  sub_20A8C8170();
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  v39(v32, v28);
  ((void (*)(char *, uint64_t, uint64_t))v34)(v32, v33, v28);
  sub_20A8C8170();
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  v39(v32, v28);
  *a1 = v94;
  a1[1] = v95;
  a1[2] = v96;
  a1[3] = v97;
  a1[4] = v98;
  *((void *)a1 + 5) = v85;
  *((void *)a1 + 6) = v84;
  *((void *)a1 + 7) = v83;
  *((void *)a1 + 8) = v82;
  *((void *)a1 + 9) = v78;
  *((void *)a1 + 10) = v77;
  *((void *)a1 + 11) = v76;
  *((void *)a1 + 12) = v75;
  *((void *)a1 + 13) = v73;
  *((void *)a1 + 14) = v72;
  *((void *)a1 + 15) = v71;
  *((void *)a1 + 16) = v70;
  *((void *)a1 + 17) = v81;
  *((void *)a1 + 18) = v80;
  *((void *)a1 + 19) = v79;
  double result = v74;
  a1[20] = v74;
  *((void *)a1 + 21) = v53;
  *((void *)a1 + 22) = v55;
  *((void *)a1 + 23) = v57;
  *((void *)a1 + 24) = v59;
  *((void *)a1 + 25) = v61;
  *((void *)a1 + 26) = v63;
  *((void *)a1 + 27) = v65;
  *((void *)a1 + 28) = v67;
  return result;
}

uint64_t type metadata accessor for StockSearchCellViewLayoutAttributesFactory()
{
  return self;
}

uint64_t sub_20A49716C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PriceViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_20A4971C8@<D0>(double *a1@<X8>)
{
  return sub_20A496C4C(a1, *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120), *(void *)(v1 + 128), *(void *)(v1 + 136), *(void *)(v1 + 144), *(double *)(v1 + 152), *(void *)(v1 + 160), *(void *)(v1 + 168), *(void *)(v1 + 176),
           *(void *)(v1 + 184),
           *(void *)(v1 + 192),
           *(void *)(v1 + 200),
           *(void *)(v1 + 208),
           *(void *)(v1 + 216),
           *(void *)(v1 + 224),
           *(void *)(v1 + 232),
           *(void *)(v1 + 240));
}

uint64_t type metadata accessor for StockSectionFooterViewStyler()
{
  return self;
}

uint64_t sub_20A49724C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 40);
  uint64_t v8 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  void v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  uint64_t v12 = v10(a1, v7, v9);
  double v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A431A50((uint64_t)v15, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

uint64_t *sub_20A497398(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20A8C3190();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8CC920();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    double v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    uint64_t v15 = *(int *)(type metadata accessor for StockFeedConfig() + 20);
    __dst = &v13[v15];
    uint64_t v45 = v13;
    uint64_t v16 = &v14[v15];
    uint64_t v17 = sub_20A8C2800();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    swift_bridgeObjectRetain();
    if (v19(v16, 1, v17))
    {
      sub_20A42D040(0);
      memcpy(__dst, v16, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(__dst, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
    }
    uint64_t v22 = *(int *)(type metadata accessor for StockFeedContentConfig() + 20);
    uint64_t v23 = &v45[v22];
    uint64_t v24 = &v14[v22];
    sub_20A497708();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    uint64_t v26 = type metadata accessor for NewsStockFeedGroupKnobs();
    *(void *)&v23[*(int *)(v26 + 20)] = *(void *)&v24[*(int *)(v26 + 20)];
    *(void *)&v23[*(int *)(v26 + 24)] = *(void *)&v24[*(int *)(v26 + 24)];
    uint64_t v27 = type metadata accessor for StockFeedKnobsConfig();
    *(void *)&v23[*(int *)(v27 + 20)] = *(void *)&v24[*(int *)(v27 + 20)];
    uint64_t v28 = a3[7];
    uint64_t v29 = (uint64_t *)((char *)a1 + v28);
    double v30 = (char *)a2 + v28;
    uint64_t v31 = *(uint64_t *)((char *)a2 + v28 + 8);
    *uint64_t v29 = *(uint64_t *)((char *)a2 + v28);
    v29[1] = v31;
    uint64_t v32 = *(int *)(type metadata accessor for StockFeedServiceContext() + 20);
    uint64_t v46 = (char *)v29 + v32;
    uint64_t v33 = &v30[v32];
    uint64_t v34 = sub_20A8C3F00();
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v35(v46, v33, v34);
    uint64_t v36 = a3[8];
    uint64_t v37 = a3[9];
    uint64_t v38 = *(void **)((char *)a2 + v36);
    *(uint64_t *)((char *)a1 + v36) = (uint64_t)v38;
    *(uint64_t *)((char *)a1 + v37) = *(uint64_t *)((char *)a2 + v37);
    uint64_t v39 = a3[10];
    uint64_t v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    id v42 = v38;
    v35(v40, v41, v34);
  }
  return a1;
}

void sub_20A497708()
{
  if (!qword_26AC6B018)
  {
    type metadata accessor for StockFeedServiceConfig();
    sub_20A4993CC(&qword_26AC73FD0, (void (*)(uint64_t))type metadata accessor for StockFeedServiceConfig);
    unint64_t v0 = sub_20A8CC8E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6B018);
    }
  }
}

uint64_t type metadata accessor for StockFeedServiceConfig()
{
  uint64_t result = qword_26AC73FD8;
  if (!qword_26AC73FD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A4977E8(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_20A8CC920();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  swift_bridgeObjectRelease();
  uint64_t v8 = v7 + *(int *)(type metadata accessor for StockFeedConfig() + 20);
  uint64_t v9 = sub_20A8C2800();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v7 + *(int *)(type metadata accessor for StockFeedContentConfig() + 20);
  sub_20A497708();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  type metadata accessor for NewsStockFeedGroupKnobs();
  swift_release();
  swift_release();
  uint64_t v13 = a1 + a2[7];
  swift_bridgeObjectRelease();
  uint64_t v14 = v13 + *(int *)(type metadata accessor for StockFeedServiceContext() + 20);
  uint64_t v15 = sub_20A8C3F00();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v18)((void *)(v15 - 8), v14, v15);

  uint64_t v16 = a1 + a2[10];

  return v18(v16, v15);
}

uint64_t sub_20A497A34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20A8CC920();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v14 = *(int *)(type metadata accessor for StockFeedConfig() + 20);
  uint64_t v15 = (void *)(v12 + v14);
  uint64_t v16 = (const void *)(v13 + v14);
  uint64_t v17 = sub_20A8C2800();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain();
  if (v19(v16, 1, v17))
  {
    sub_20A42D040(0);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v21 = *(int *)(type metadata accessor for StockFeedContentConfig() + 20);
  uint64_t v22 = v12 + v21;
  uint64_t v23 = v13 + v21;
  sub_20A497708();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  uint64_t v25 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(void *)(v22 + *(int *)(v25 + 20)) = *(void *)(v23 + *(int *)(v25 + 20));
  *(void *)(v22 + *(int *)(v25 + 24)) = *(void *)(v23 + *(int *)(v25 + 24));
  uint64_t v26 = type metadata accessor for StockFeedKnobsConfig();
  *(void *)(v22 + *(int *)(v26 + 20)) = *(void *)(v23 + *(int *)(v26 + 20));
  uint64_t v27 = v45[7];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = v44 + v27;
  uint64_t v30 = *(void *)(v44 + v27 + 8);
  *uint64_t v28 = *(void *)(v44 + v27);
  v28[1] = v30;
  uint64_t v31 = *(int *)(type metadata accessor for StockFeedServiceContext() + 20);
  uint64_t v32 = (char *)v28 + v31;
  uint64_t v33 = v29 + v31;
  uint64_t v34 = sub_20A8C3F00();
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v35(v32, v33, v34);
  uint64_t v36 = v45[8];
  uint64_t v37 = v45[9];
  uint64_t v38 = *(void **)(v44 + v36);
  *(void *)(a1 + v36) = v38;
  *(void *)(a1 + v37) = *(void *)(v44 + v37);
  uint64_t v39 = v45[10];
  uint64_t v40 = (char *)(a1 + v39);
  uint64_t v41 = v44 + v39;
  id v42 = v38;
  v35(v40, v41, v34);
  return a1;
}

uint64_t sub_20A497D50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20A8CC920();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v43 = a3;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(int *)(type metadata accessor for StockFeedConfig() + 20);
  uint64_t v15 = (void *)(v12 + v14);
  uint64_t v42 = v13;
  uint64_t v16 = (void *)(v13 + v14);
  uint64_t v17 = sub_20A8C2800();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 24))(v15, v16, v17);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    sub_20A42D040(0);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_7:
  uint64_t v23 = *(int *)(type metadata accessor for StockFeedContentConfig() + 20);
  uint64_t v24 = v12 + v23;
  uint64_t v25 = v42 + v23;
  sub_20A497708();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(void *)(v24 + *(int *)(v27 + 20)) = *(void *)(v25 + *(int *)(v27 + 20));
  swift_retain();
  swift_release();
  *(void *)(v24 + *(int *)(v27 + 24)) = *(void *)(v25 + *(int *)(v27 + 24));
  swift_retain();
  swift_release();
  uint64_t v28 = type metadata accessor for StockFeedKnobsConfig();
  *(void *)(v24 + *(int *)(v28 + 20)) = *(void *)(v25 + *(int *)(v28 + 20));
  uint64_t v29 = v43[7];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = a2 + v29;
  *uint64_t v30 = *(void *)(a2 + v29);
  v30[1] = *(void *)(a2 + v29 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = *(int *)(type metadata accessor for StockFeedServiceContext() + 20);
  uint64_t v33 = (char *)v30 + v32;
  uint64_t v34 = v31 + v32;
  uint64_t v35 = sub_20A8C3F00();
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 24);
  v36(v33, v34, v35);
  uint64_t v37 = v43[8];
  uint64_t v38 = *(void **)(a2 + v37);
  uint64_t v39 = *(void **)(a1 + v37);
  *(void *)(a1 + v37) = v38;
  id v40 = v38;

  *(void *)(a1 + v43[9]) = *(void *)(a2 + v43[9]);
  v36((char *)(a1 + v43[10]), a2 + v43[10], v35);
  return a1;
}

uint64_t sub_20A4980FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20A8CC920();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v14 = *(int *)(type metadata accessor for StockFeedConfig() + 20);
  uint64_t v15 = (void *)(v12 + v14);
  uint64_t v16 = (const void *)(v13 + v14);
  uint64_t v17 = sub_20A8C2800();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_20A42D040(0);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = *(int *)(type metadata accessor for StockFeedContentConfig() + 20);
  uint64_t v21 = v12 + v20;
  uint64_t v22 = v13 + v20;
  sub_20A497708();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(void *)(v21 + *(int *)(v24 + 20)) = *(void *)(v22 + *(int *)(v24 + 20));
  *(void *)(v21 + *(int *)(v24 + 24)) = *(void *)(v22 + *(int *)(v24 + 24));
  uint64_t v25 = type metadata accessor for StockFeedKnobsConfig();
  *(void *)(v21 + *(int *)(v25 + 20)) = *(void *)(v22 + *(int *)(v25 + 20));
  uint64_t v26 = a3[7];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(_OWORD *)(a1 + v26) = *(_OWORD *)(a2 + v26);
  uint64_t v29 = *(int *)(type metadata accessor for StockFeedServiceContext() + 20);
  uint64_t v30 = v27 + v29;
  uint64_t v31 = v28 + v29;
  uint64_t v32 = sub_20A8C3F00();
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32);
  v33(v30, v31, v32);
  uint64_t v34 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v34) = *(void *)(a2 + v34);
  v33(a1 + a3[10], a2 + a3[10], v32);
  return a1;
}

uint64_t sub_20A4983D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20A8CC920();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v43 = a3;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(int *)(type metadata accessor for StockFeedConfig() + 20);
  uint64_t v15 = (void *)(v12 + v14);
  uint64_t v42 = v13;
  uint64_t v16 = (void *)(v13 + v14);
  uint64_t v17 = sub_20A8C2800();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v15, v16, v17);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    sub_20A42D040(0);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v15, v16, v17);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_7:
  uint64_t v23 = *(int *)(type metadata accessor for StockFeedContentConfig() + 20);
  uint64_t v24 = v12 + v23;
  uint64_t v25 = v42 + v23;
  sub_20A497708();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(void *)(v24 + *(int *)(v27 + 20)) = *(void *)(v25 + *(int *)(v27 + 20));
  swift_release();
  *(void *)(v24 + *(int *)(v27 + 24)) = *(void *)(v25 + *(int *)(v27 + 24));
  swift_release();
  uint64_t v28 = type metadata accessor for StockFeedKnobsConfig();
  *(void *)(v24 + *(int *)(v28 + 20)) = *(void *)(v25 + *(int *)(v28 + 20));
  uint64_t v29 = v43[7];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = a2 + v29;
  uint64_t v32 = *(void *)(a2 + v29 + 8);
  *uint64_t v30 = *(void *)(a2 + v29);
  v30[1] = v32;
  swift_bridgeObjectRelease();
  uint64_t v33 = *(int *)(type metadata accessor for StockFeedServiceContext() + 20);
  uint64_t v34 = (char *)v30 + v33;
  uint64_t v35 = v31 + v33;
  uint64_t v36 = sub_20A8C3F00();
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 40);
  v37(v34, v35, v36);
  uint64_t v38 = v43[8];
  uint64_t v39 = *(void **)(a1 + v38);
  *(void *)(a1 + v38) = *(void *)(a2 + v38);

  uint64_t v40 = v43[10];
  *(void *)(a1 + v43[9]) = *(void *)(a2 + v43[9]);
  v37((char *)(a1 + v40), a2 + v40, v36);
  return a1;
}

uint64_t sub_20A498754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A498768);
}

uint64_t sub_20A498768(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3190();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20A8CC920();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = type metadata accessor for StockFeedContentConfig();
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = type metadata accessor for StockFeedServiceContext();
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v17 = *(void *)(a1 + a3[8]);
    if (v17 >= 0xFFFFFFFF) {
      LODWORD(v17) = -1;
    }
    return (v17 + 1);
  }
  else
  {
    uint64_t v18 = sub_20A8C3F00();
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
    uint64_t v20 = v18;
    uint64_t v21 = a1 + a3[10];
    return v19(v21, a2, v20);
  }
}

uint64_t sub_20A498980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A498994);
}

uint64_t sub_20A498994(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_20A8C3190();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_20A8CC920();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = type metadata accessor for StockFeedContentConfig();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  uint64_t result = type metadata accessor for StockFeedServiceContext();
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[8]) = (a2 - 1);
  }
  else
  {
    uint64_t v18 = sub_20A8C3F00();
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v20 = v18;
    uint64_t v21 = a1 + a4[10];
    return v19(v21, a2, a2, v20);
  }
  return result;
}

uint64_t sub_20A498BAC()
{
  uint64_t result = sub_20A8C3190();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20A8CC920();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for StockFeedContentConfig();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for StockFeedServiceContext();
        if (v4 <= 0x3F)
        {
          uint64_t result = sub_20A8C3F00();
          if (v5 <= 0x3F)
          {
            swift_initStructMetadata();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_20A498D44@<X0>(uint64_t (*a1)()@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v46 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for StockFeedServiceContext() - 8;
  MEMORY[0x270FA5388](v45);
  uint64_t v50 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StockFeedContentConfig();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v40 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8CC920();
  uint64_t v37 = v9;
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v10 = v41;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_20A8C3190();
  uint64_t v42 = *(void *)(v49 - 8);
  uint64_t v13 = v42;
  double v14 = MEMORY[0x270FA5388](v49);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = *(void (**)(char *, uint64_t, double))(v13 + 16);
  v39(v16, v3, v14);
  unint64_t v17 = (int *)type metadata accessor for StockFeedServiceConfig();
  uint64_t v18 = v3 + v17[5];
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v38 = v12;
  v19(v12, v18, v9);
  uint64_t v20 = v40;
  sub_20A49946C((uint64_t)v43, v40, (uint64_t (*)(void))type metadata accessor for StockFeedContentConfig);
  uint64_t v21 = v3 + v17[7];
  uint64_t v43 = type metadata accessor for StockFeedServiceContext;
  sub_20A49946C(v21, v50, (uint64_t (*)(void))type metadata accessor for StockFeedServiceContext);
  uint64_t v22 = *(void **)(v3 + v17[8]);
  uint64_t v23 = v44;
  ((void (*)(uint64_t, char *, uint64_t))v39)(v44, v16, v49);
  uint64_t v24 = v37;
  v19((char *)(v23 + v17[5]), (uint64_t)v12, v37);
  uint64_t v25 = v20;
  sub_20A49946C(v20, v23 + v17[6], (uint64_t (*)(void))type metadata accessor for StockFeedContentConfig);
  uint64_t v26 = v50;
  uint64_t v27 = v43;
  sub_20A49946C(v50, v23 + v17[7], (uint64_t (*)(void))v43);
  *(void *)(v23 + v17[8]) = v22;
  id v28 = v22;
  sub_20A8C3150();
  uint64_t v30 = v29;
  sub_20A4994D4(v25, (uint64_t (*)(void))type metadata accessor for StockFeedContentConfig);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v24);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v49);
  *(void *)(v23 + v17[9]) = v30;
  uint64_t v31 = v46;
  uint64_t v32 = v26 + *(int *)(v45 + 28);
  uint64_t v33 = v26;
  uint64_t v35 = v47;
  uint64_t v34 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v46, v32, v48);
  sub_20A4994D4(v33, (uint64_t (*)(void))v27);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v35 + 32))(v23 + v17[10], v31, v34);
}

uint64_t sub_20A49917C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A49946C(v2 + *(int *)(a1 + 28), a2, (uint64_t (*)(void))type metadata accessor for StockFeedServiceContext);
}

uint64_t sub_20A4991B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A49946C(v2 + *(int *)(a1 + 24), a2, (uint64_t (*)(void))type metadata accessor for StockFeedContentConfig);
}

uint64_t sub_20A4991F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_20A8CC920();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_20A499260(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

double sub_20A4992A0(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 36));
}

uint64_t sub_20A4992B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F59AC8];
  uint64_t v3 = sub_20A8CCF20();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_20A49933C()
{
  return sub_20A4993CC(&qword_26AC73FC8, (void (*)(uint64_t))type metadata accessor for StockFeedServiceConfig);
}

uint64_t sub_20A499384()
{
  return sub_20A4993CC(&qword_26AC73E78, (void (*)(uint64_t))type metadata accessor for StockFeedContentConfig);
}

uint64_t sub_20A4993CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A499418()
{
  unint64_t result = qword_26AC6D2F0;
  if (!qword_26AC6D2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6D2F0);
  }
  return result;
}

uint64_t sub_20A49946C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A4994D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for StockSearchOfflineModel()
{
  return &type metadata for StockSearchOfflineModel;
}

uint64_t sub_20A499544()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_267652D20);
  __swift_project_value_buffer(v0, (uint64_t)qword_267652D20);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A8FB900);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A4996EC()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_267652D38);
  __swift_project_value_buffer(v0, (uint64_t)qword_267652D38);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A8FB7E0);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A499890()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_267652D50);
  __swift_project_value_buffer(v0, (uint64_t)qword_267652D50);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A8FB6E0);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A499A34()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_267652D68);
  __swift_project_value_buffer(v0, (uint64_t)qword_267652D68);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A8FB5E0);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A499BD4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639930, (uint64_t)qword_267652D20, a1);
}

uint64_t sub_20A499BFC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639938, (uint64_t)qword_267652D38, a1);
}

uint64_t sub_20A499C20@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639940, (uint64_t)qword_267652D50, a1);
}

uint64_t sub_20A499C44@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(qword_267639948, (uint64_t)qword_267652D68, a1);
}

uint64_t sub_20A499C68@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_20A8CD2C0();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

char *sub_20A499D08(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_20A49A408(0, &qword_26AC6AAE0, MEMORY[0x263F7E040]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (id *)((char *)&v27.receiver - v14);
  uint64_t v16 = OBJC_IVAR____TtC8StocksUI18TextAndImageButton_label;
  id v17 = objc_allocWithZone(MEMORY[0x263F828E0]);
  uint64_t v18 = v5;
  *(void *)&v5[v16] = objc_msgSend(v17, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v19 = OBJC_IVAR____TtC8StocksUI18TextAndImageButton_imageView;
  *(void *)&v18[v19] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v20 = OBJC_IVAR____TtC8StocksUI18TextAndImageButton_onTap;
  sub_20A49A408(0, (unint64_t *)&qword_26AC6AAE8, MEMORY[0x263F7E048]);
  *(void *)&v18[v20] = objc_msgSend(objc_allocWithZone(v21), sel_init);

  v27.receiver = v18;
  v27.super_class = ObjectType;
  uint64_t v22 = (char *)objc_msgSendSuper2(&v27, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v23 = *(void *)&v22[OBJC_IVAR____TtC8StocksUI18TextAndImageButton_label];
  uint64_t v24 = v22;
  objc_msgSend(v24, sel_addSubview_, v23);
  objc_msgSend(v24, sel_addSubview_, *(void *)&v24[OBJC_IVAR____TtC8StocksUI18TextAndImageButton_imageView]);
  *uint64_t v15 = 1;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F7E038], v12);
  uint64_t v25 = v24;

  (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  return v25;
}

uint64_t sub_20A49A0E4(void *a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_20A49A264();
  sub_20A49A2A4();
  sub_20A8CE7F0();
  id v9 = a4;
  uint64_t v10 = a1;
  uint64_t v11 = (void *)sub_20A8CE7E0();
  v13.receiver = v10;
  v13.super_class = ObjectType;
  objc_msgSendSuper2(&v13, *a5, v11, v9);

  objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC8StocksUI18TextAndImageButton_label], sel_setAlpha_, 1.0);
  objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC8StocksUI18TextAndImageButton_imageView], sel_setAlpha_, 1.0);

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for TextAndImageButton()
{
  return self;
}

unint64_t sub_20A49A264()
{
  unint64_t result = qword_26763B268;
  if (!qword_26763B268)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26763B268);
  }
  return result;
}

unint64_t sub_20A49A2A4()
{
  unint64_t result = qword_26763B270;
  if (!qword_26763B270)
  {
    sub_20A49A264();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B270);
  }
  return result;
}

void sub_20A49A2FC()
{
  uint64_t v1 = OBJC_IVAR____TtC8StocksUI18TextAndImageButton_label;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = OBJC_IVAR____TtC8StocksUI18TextAndImageButton_imageView;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = OBJC_IVAR____TtC8StocksUI18TextAndImageButton_onTap;
  sub_20A49A408(0, (unint64_t *)&qword_26AC6AAE8, MEMORY[0x263F7E048]);
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(v4), sel_init);

  sub_20A8CF520();
  __break(1u);
}

void sub_20A49A408(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F8EE60] + 8);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t CampaignRouteModel.init(routeTarget:postPurchaseBehavior:purchaseTraits:sourceChannelID:purchaseSessionID:paywallType:postPurchaseDestination:delegate:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16 = *a1;
  uint64_t v17 = a1[1];
  uint64_t v18 = (int *)type metadata accessor for CampaignRouteModel();
  uint64_t v19 = (char *)a9 + v18[11];
  *((void *)v19 + 1) = 0;
  swift_unknownObjectWeakInit();
  *a9 = v16;
  a9[1] = v17;
  uint64_t v20 = (char *)a9 + v18[5];
  uint64_t v21 = sub_20A8C56A0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a2, v21);
  uint64_t v22 = (void *)((char *)a9 + v18[6]);
  *uint64_t v22 = a4;
  v22[1] = a5;
  uint64_t v23 = (void *)((char *)a9 + v18[7]);
  *uint64_t v23 = a6;
  v23[1] = a7;
  *(void *)((char *)a9 + v18[8]) = a3;
  *(void *)((char *)a9 + v18[9]) = a8;
  sub_20A49A5F4(a10, (uint64_t)a9 + v18[10]);
  *((void *)v19 + 1) = a12;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t type metadata accessor for CampaignRouteModel()
{
  uint64_t result = qword_26AC702F0;
  if (!qword_26AC702F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A49A5F4(uint64_t a1, uint64_t a2)
{
  sub_20A49A658();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20A49A658()
{
  if (!qword_26AC69BD0)
  {
    sub_20A8C7B50();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69BD0);
    }
  }
}

unint64_t CampaignRouteModel.identifier.getter()
{
  if (v0[1]) {
    unint64_t v1 = *v0;
  }
  else {
    unint64_t v1 = 0xD000000000000012;
  }
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_20A49A704()
{
  if (v0[1]) {
    unint64_t v1 = *v0;
  }
  else {
    unint64_t v1 = 0xD000000000000012;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t getEnumTagSinglePayload for CampaignRouteTarget(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CampaignRouteTarget(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void *sub_20A49A7FC(void *result, int a2)
{
  if (a2 < 0)
  {
    *uint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for CampaignRouteTarget()
{
  return &type metadata for CampaignRouteTarget;
}

uint64_t *initializeBufferWithCopyOfBuffer for CampaignRouteModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    id v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C56A0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)v4 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (uint64_t *)((char *)v4 + v14);
    uint64_t v19 = (uint64_t *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)v4 + v21) = *(uint64_t *)((char *)a2 + v21);
    uint64_t v22 = a3[10];
    __dst = (char *)v4 + v22;
    uint64_t v23 = (char *)a2 + v22;
    uint64_t v24 = sub_20A8C7B50();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30(v23, 1, v24))
    {
      sub_20A49A658();
      memcpy(__dst, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
    }
    id v28 = (char *)a2 + a3[11];
    *(void *)(swift_unknownObjectWeakCopyInit() + 8) = *((void *)v28 + 1);
  }
  return v4;
}

uint64_t destroy for CampaignRouteModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_20A8C56A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 40);
  uint64_t v7 = sub_20A8C7B50();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }

  return swift_unknownObjectWeakDestroy();
}

void *initializeWithCopy for CampaignRouteModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  id v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C56A0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)((char *)a1 + v13);
  uint64_t v18 = (void *)((char *)a2 + v13);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);
  uint64_t v21 = a3[10];
  __dst = (char *)a1 + v21;
  uint64_t v22 = (char *)a2 + v21;
  uint64_t v23 = sub_20A8C7B50();
  uint64_t v24 = *(void *)(v23 - 8);
  id v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28(v22, 1, v23))
  {
    sub_20A49A658();
    memcpy(__dst, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(__dst, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
  }
  uint64_t v26 = (char *)a2 + a3[11];
  *(void *)(swift_unknownObjectWeakCopyInit() + 8) = *((void *)v26 + 1);
  return a1;
}

void *assignWithCopy for CampaignRouteModel(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C56A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  void *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  uint64_t v16 = a3[10];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_20A8C7B50();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    sub_20A49A658();
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_7:
  uint64_t v25 = (char *)a2 + a3[11];
  *(void *)(swift_unknownObjectWeakCopyAssign() + 8) = *((void *)v25 + 1);
  return a1;
}

_OWORD *initializeWithTake for CampaignRouteModel(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C56A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  uint64_t v11 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  uint64_t v12 = a3[10];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_20A8C7B50();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_20A49A658();
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = (char *)a2 + a3[11];
  *(void *)(swift_unknownObjectWeakTakeInit() + 8) = *((void *)v18 + 1);
  return a1;
}

void *assignWithTake for CampaignRouteModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C56A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  int v22 = (char *)a1 + v21;
  int v23 = (char *)a2 + v21;
  uint64_t v24 = sub_20A8C7B50();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    sub_20A49A658();
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_7:
  uint64_t v30 = (char *)a2 + a3[11];
  *(void *)(swift_unknownObjectWeakTakeAssign() + 8) = *((void *)v30 + 1);
  return a1;
}

uint64_t getEnumTagSinglePayload for CampaignRouteModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A49B444);
}

uint64_t sub_20A49B444(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C56A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[5];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v12 = *(void *)(a1 + a3[8]);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
  else
  {
    sub_20A49A658();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a3[10];
    return v14(v16, a2, v15);
  }
}

uint64_t storeEnumTagSinglePayload for CampaignRouteModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A49B588);
}

uint64_t sub_20A49B588(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_20A8C56A0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[5];
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[8]) = (a2 - 1);
  }
  else
  {
    sub_20A49A658();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[10];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

void sub_20A49B6B8()
{
  sub_20A8C56A0();
  if (v0 <= 0x3F)
  {
    sub_20A49A658();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void __swiftcall MainModule.createViewController()(UIViewController *__return_ptr retstr)
{
  uint64_t v2 = v1;
  uint64_t v69 = (void *)sub_20A8C7770();
  uint64_t v68 = (void (**)(void, void, void))*(v69 - 1);
  MEMORY[0x270FA5388](v69);
  uint64_t v4 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v1 + 2;
  __swift_project_boxed_opaque_existential_1(v1 + 2, v1[5]);
  sub_20A4301D4(0, &qword_26AC71470);
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v1;
  sub_20A8C5B90();
  swift_unownedRelease();
  swift_release();
  if (!v82)
  {
    __break(1u);
    goto LABEL_17;
  }
  sub_20A42BEBC(&v81, (uint64_t)v83);
  __swift_project_boxed_opaque_existential_1(v83, v83[3]);
  uint64_t v6 = (void *)sub_20A69013C();
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F829B8]), sel_initWithRootViewController_, v6);
  __swift_project_boxed_opaque_existential_1(v5, v1[5]);
  sub_20A4301D4(0, &qword_26AC6F550);
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v1;
  sub_20A8C5B90();
  swift_unownedRelease();
  swift_release();
  if (!v80)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_20A42BEBC(&v79, (uint64_t)&v81);
  uint64_t v8 = v1[5];
  uint64_t v71 = v1 + 2;
  __swift_project_boxed_opaque_existential_1(v5, v8);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  sub_20A8C5BB0();
  uint64_t v72 = v79;
  if (!(void)v79)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v70 = *((void *)&v79 + 1);
  uint64_t v9 = *__swift_project_boxed_opaque_existential_1(&v81, v82);
  uint64_t v10 = v68;
  uint64_t v11 = v69;
  ((void (**)(char *, void, void *))v68)[13](v4, *MEMORY[0x263F7A6D8], v69);
  uint64_t v12 = sub_20A8C4890();
  ((void (*)(char *, void *))v10[1])(v4, v11);
  __swift_project_boxed_opaque_existential_1((void *)(v9 + 16), *(void *)(v9 + 40));
  type metadata accessor for TickerCardContainerController();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = v7;
  swift_retain();
  id v14 = v7;
  uint64_t v15 = (void *)sub_20A8C5B80();
  swift_release();
  if (!v15)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  swift_release();
  sub_20A49F278(&qword_26AC75328, 255, (void (*)(uint64_t))type metadata accessor for StockListViewController);
  uint64_t v16 = v15;
  id v17 = v6;
  sub_20A8C9D50();

  *(void *)&v16[qword_26AC798F0 + 8] = &off_26BE6C280;
  swift_unknownObjectWeakAssign();
  uint64_t v68 = (void (**)(void, void, void))sub_20A8C9F00();
  objc_allocWithZone((Class)v68);
  uint64_t v18 = v16;
  swift_unknownObjectRetain();
  uint64_t v69 = (void *)sub_20A8C9EF0();
  objc_msgSend(v69, sel_setToolbarHidden_, 0);
  uint64_t v19 = v71;
  __swift_project_boxed_opaque_existential_1(v71, v2[5]);
  sub_20A4301D4(0, &qword_26AC6D498);
  sub_20A8C5BB0();
  if (!v80)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  __swift_project_boxed_opaque_existential_1(v19, v2[5]);
  sub_20A4301D4(0, &qword_26AC79D48);
  sub_20A8C5BB0();
  if (!v78)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_project_boxed_opaque_existential_1(v19, v2[5]);
  sub_20A8C5BB0();
  if (!v76)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v65 = v17;
  id v66 = v14;
  uint64_t v20 = v2[7];
  uint64_t v74 = sub_20A8C4990();
  uint64_t v75 = sub_20A49F278((unint64_t *)&qword_26AC69370, 255, MEMORY[0x263F24E68]);
  v73[0] = v20;
  sub_20A8C8A10();
  swift_allocObject();
  swift_retain();
  uint64_t v21 = sub_20A8C89F0();
  __swift_project_boxed_opaque_existential_1(v19, v2[5]);
  sub_20A4301D4(0, &qword_26AC70E98);
  sub_20A8C5BB0();
  if (!v74)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v79, v80);
  double v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (uint64_t *)((char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v26 + 16))(v25, v23);
  uint64_t v27 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v77, v78);
  double v28 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = (uint64_t *)((char *)&v65 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v31 + 16))(v30, v28);
  uint64_t v32 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v73, v74);
  double v33 = MEMORY[0x270FA5388](v32);
  uint64_t v35 = (uint64_t **)((char *)&v65 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t **, double))(v36 + 16))(v35, v33);
  uint64_t v37 = *v25;
  uint64_t v38 = *v30;
  uint64_t v39 = *v35;
  uint64_t v67 = v18;
  uint64_t v40 = sub_20A49E978(v67, v37, v38, v21, v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
  id v41 = objc_msgSend(v40, sel_traitCollection);
  id v42 = objc_msgSend(v41, sel_horizontalSizeClass);

  if (v42 == (id)1 && (__swift_project_boxed_opaque_existential_1(v2 + 13, v2[16]), (sub_20A8C3850() & 1) != 0))
  {
    objc_msgSend(objc_allocWithZone((Class)type metadata accessor for HiddenCardViewController()), sel_init);
    id v43 = objc_allocWithZone((Class)v68);
    swift_unknownObjectRetain();
    uint64_t v44 = (void *)sub_20A8C9EF0();
    sub_20A45F33C();
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_20A8D5C90;
    id v46 = v69;
    *(void *)(v45 + 32) = v69;
    *(void *)(v45 + 40) = v44;
    *(void *)&long long v79 = v45;
    sub_20A8CE620();
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F920);
    uint64_t v47 = v40;
    id v48 = v46;
    id v49 = v44;
    uint64_t v50 = (void *)sub_20A8CE5D0();
    swift_bridgeObjectRelease();
    objc_msgSend(v47, sel_setViewControllers_, v50);
  }
  else
  {
    sub_20A49C558(0, (uint64_t *)&v79);
    double v51 = (void *)v79;
    id v52 = objc_allocWithZone((Class)v68);
    swift_unknownObjectRetain();
    id v53 = v51;
    uint64_t v54 = (void *)sub_20A8C9EF0();
    sub_20A45F33C();
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_20A8D5C90;
    id v56 = v69;
    *(void *)(v55 + 32) = v69;
    *(void *)(v55 + 40) = v54;
    *(void *)&long long v79 = v55;
    sub_20A8CE620();
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F920);
    uint64_t v57 = v40;
    id v58 = v56;
    id v49 = v54;
    uint64_t v50 = (void *)sub_20A8CE5D0();
    swift_bridgeObjectRelease();
    objc_msgSend(v57, sel_setViewControllers_, v50);
  }
  uint64_t v59 = v71;

  objc_msgSend(v40, sel_setPreferredDisplayMode_, 2);
  __swift_project_boxed_opaque_existential_1(v59, v2[5]);
  type metadata accessor for Router();
  uint64_t v60 = swift_allocObject();
  uint64_t v61 = v67;
  *(void *)(v60 + 16) = v40;
  *(void *)(v60 + 24) = v61;
  uint64_t v62 = v61;
  uint64_t v63 = v40;
  uint64_t v64 = sub_20A8C5B80();
  swift_release();
  if (!v64) {
    goto LABEL_24;
  }
  __swift_project_boxed_opaque_existential_1(v59, v2[5]);
  sub_20A491334();
  if (sub_20A8C5BA0())
  {
    sub_20A49F278(&qword_26AC7F250, 255, (void (*)(uint64_t))type metadata accessor for Router);
    sub_20A8C8580();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
    sub_20A49CBC8(v63);
    swift_unknownObjectRelease();

    swift_release();
    swift_release();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v81);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
    return;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_20A49C490()
{
  swift_unownedRelease();

  return swift_deallocObject();
}

uint64_t sub_20A49C4C8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_unownedRetainStrong();
  swift_retain();
  swift_release();
  sub_20A8C4990();
  sub_20A8C5A40();

  return swift_release();
}

uint64_t sub_20A49C558@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_20A8C89A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A49F2C0(0, &qword_26AC69F60, MEMORY[0x263F7D4C8], MEMORY[0x263F8D8F0]);
  swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v10, 1, 1, v6);
  __swift_project_boxed_opaque_existential_1(v3 + 33, v3[36]);
  if ((sub_20A8C3AA0() & 1) == 0 && (a1 & 1) == 0)
  {
    if (qword_26AC67598 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_20A8C7DF0();
    __swift_project_value_buffer(v11, (uint64_t)qword_26AC9E870);
    uint64_t v12 = sub_20A8C7DD0();
    os_log_type_t v13 = sub_20A8CEA00();
    if (os_log_type_enabled(v12, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v14 = 0;
      _os_log_impl(&dword_20A414000, v12, v13, "app config has not been fetched yet, attempting fetch", v14, 2u);
      MEMORY[0x210528850](v14, -1, -1);
    }

    sub_20A8C3190();
    sub_20A8C6670();
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
    uint64_t v15 = (void *)sub_20A8CEBE0();
    sub_20A49EE28();
    swift_retain();
    sub_20A8C6500();
    swift_release();

    swift_release();
    uint64_t v16 = (void *)sub_20A8CEBE0();
    swift_retain();
    sub_20A8C65C0();
    swift_release();

    swift_release();
    sub_20A49CD18((uint64_t)v9);
    objc_allocWithZone((Class)sub_20A8CA230());
LABEL_14:
    uint64_t v21 = sub_20A8CA220();
    uint64_t result = swift_release();
    uint64_t v23 = MEMORY[0x263F7DB88];
    uint64_t v24 = MEMORY[0x263F7DB90];
    uint64_t v25 = MEMORY[0x263F7DB98];
    uint64_t v26 = MEMORY[0x263F7DB80];
LABEL_21:
    *a2 = v21;
    a2[1] = v26;
    a2[2] = v25;
    a2[3] = v24;
    a2[4] = v23;
    return result;
  }
  __swift_project_boxed_opaque_existential_1(v3 + 13, v3[16]);
  if (sub_20A8C3850())
  {
    if (qword_26AC67598 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_20A8C7DF0();
    __swift_project_value_buffer(v17, (uint64_t)qword_26AC9E870);
    uint64_t v18 = sub_20A8C7DD0();
    os_log_type_t v19 = sub_20A8CEA00();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_20A414000, v18, v19, "news-free experience is enabled, fetching first stock in active watchlist", v20, 2u);
      MEMORY[0x210528850](v20, -1, -1);
    }

    sub_20A49D58C();
    sub_20A49CD18((uint64_t)v9);
    objc_allocWithZone((Class)sub_20A8CA230());
    goto LABEL_14;
  }
  if (qword_26AC67598 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_20A8C7DF0();
  __swift_project_value_buffer(v27, (uint64_t)qword_26AC9E870);
  double v28 = sub_20A8C7DD0();
  os_log_type_t v29 = sub_20A8CEA00();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl(&dword_20A414000, v28, v29, "news-free experience is disabled, showing For You-feed", v30, 2u);
    MEMORY[0x210528850](v30, -1, -1);
  }

  __swift_project_boxed_opaque_existential_1(v3 + 2, v3[5]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC71920);
  uint64_t result = sub_20A8C5BB0();
  if (v33)
  {
    __swift_project_boxed_opaque_existential_1(v32, v33);
    sub_20A7FB2D4(v31);
    uint64_t v21 = v31[0];
    uint64_t v26 = v31[1];
    uint64_t v25 = v31[2];
    uint64_t v24 = v31[3];
    uint64_t v23 = v31[4];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    uint64_t result = swift_release();
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A49CB18(void *a1)
{
  return sub_20A8C5A70();
}

id sub_20A49CBC8(void *a1)
{
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  sub_20A49F2C0(0, &qword_26AC697C0, (uint64_t (*)(uint64_t))sub_20A49ED20, MEMORY[0x263F7CFF8]);
  if (sub_20A8C5BA0())
  {
    __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
    sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
    id result = (id)sub_20A8C5BB0();
    if (v5)
    {
      objc_allocWithZone((Class)sub_20A8CA560());
      id v3 = a1;
      return (id)sub_20A8CA550();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    return a1;
  }
  return result;
}

uint64_t sub_20A49CD18@<X0>(uint64_t a1@<X8>)
{
  sub_20A49F2C0(0, &qword_26AC69F60, MEMORY[0x263F7D4C8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v12 - v6;
  uint64_t v8 = swift_projectBox();
  sub_20A49F0C4(v8, (uint64_t)v7);
  uint64_t v9 = sub_20A8C89A0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v7, v9);
  }
  sub_20A49F158((uint64_t)v7);
  sub_20A49CEFC(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v4, a1, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v4, 0, 1, v9);
  swift_beginAccess();
  return sub_20A49F1E4((uint64_t)v4, v8);
}

uint64_t sub_20A49CEFC@<X0>(uint64_t a1@<X8>)
{
  v20[1] = a1;
  v20[0] = sub_20A8C8940();
  uint64_t v1 = *(void *)(v20[0] - 8);
  MEMORY[0x270FA5388](v20[0]);
  uint64_t v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v20 - v5;
  uint64_t v7 = sub_20A8C8950();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)v20 - v13;
  if (qword_26AC69290 != -1) {
    swift_once();
  }
  sub_20A49F278(&qword_26AC6C8D0, v12, (void (*)(uint64_t))type metadata accessor for MainModule);
  sub_20A8C41C0();
  if (v21 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v14, *MEMORY[0x263F7D488], v7);
    (*(void (**)(char *, void, void))(v1 + 104))(v6, *MEMORY[0x263F7D480], v20[0]);
  }
  else
  {
    sub_20A49F2C0(0, (unint64_t *)&qword_26AC7FF60, MEMORY[0x263F7D4B0], MEMORY[0x263F8E0F8]);
    uint64_t v16 = sub_20A8C8960();
    uint64_t v17 = *(void *)(v16 - 8);
    unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_20A8D3DC0;
    (*(void (**)(unint64_t, void, uint64_t))(v17 + 104))(v19 + v18, *MEMORY[0x263F7D4A0], v16);
    sub_20A7BABC8(v19);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7D490], v7);
    (*(void (**)(char *, void, void))(v1 + 104))(v3, *MEMORY[0x263F7D480], v20[0]);
  }
  return sub_20A8C8980();
}

double sub_20A49D354@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_26AC67598 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_20A8C7DF0();
  __swift_project_value_buffer(v4, (uint64_t)qword_26AC9E870);
  id v5 = a1;
  id v6 = a1;
  uint64_t v7 = sub_20A8C7DD0();
  os_log_type_t v8 = sub_20A8CE9E0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(void *)&v17[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v19 = (uint64_t)a1;
    id v11 = a1;
    sub_20A4301D4(0, (unint64_t *)&qword_26AC80150);
    uint64_t v12 = sub_20A8CE2F0();
    uint64_t v19 = sub_20A687610(v12, v13, (uint64_t *)v17);
    sub_20A8CF1C0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_20A414000, v7, v8, "error fetching app config, error=%s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x210528850](v10, -1, -1);
    MEMORY[0x210528850](v9, -1, -1);
  }
  else
  {
  }
  sub_20A49C558(v17, 1);
  uint64_t v14 = v18;
  double result = *(double *)v17;
  long long v16 = v17[1];
  *(_OWORD *)a2 = v17[0];
  *(_OWORD *)(a2 + 16) = v16;
  *(void *)(a2 + 32) = v14;
  return result;
}

uint64_t sub_20A49D57C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A49D844(a1, MEMORY[0x263F7DB30], a2);
}

uint64_t sub_20A49D58C()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_20A4301D4(0, &qword_26AC76788);
  uint64_t result = sub_20A8C5BB0();
  if (v9)
  {
    sub_20A42BEBC(&v8, (uint64_t)v10);
    sub_20A49F2C0(0, &qword_26AC7F6D0, MEMORY[0x263F7AF08], MEMORY[0x263F8D488]);
    sub_20A8C6670();
    swift_retain();
    uint64_t v2 = (void *)sub_20A8C6450();
    sub_20A49EF38();
    sub_20A8C64F0();
    swift_release();
    swift_release();

    swift_retain();
    uint64_t v3 = (void *)sub_20A8C6450();
    sub_20A8C6500();
    swift_release();
    swift_release();

    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
    uint64_t v4 = (void *)sub_20A8CEBE0();
    sub_20A4342F4((uint64_t)v10, (uint64_t)&v8);
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v0;
    sub_20A42BEBC(&v8, v5 + 24);
    sub_20A49EE28();
    swift_retain();
    sub_20A8C6500();
    swift_release();

    swift_release();
    id v6 = (void *)sub_20A8CEBE0();
    swift_retain();
    uint64_t v7 = sub_20A8C65C0();
    swift_release();

    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A49D834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A49D844(a1, MEMORY[0x263F7DB38], a2);
}

uint64_t sub_20A49D844@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_20A8C8EB0();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v10, a1, v6, v8);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
  if (v11 == *MEMORY[0x263F7D5D8])
  {
    uint64_t v12 = *a2;
    uint64_t v13 = sub_20A8CA180();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(a3, v12, v13);
    uint64_t v14 = (unsigned int *)MEMORY[0x263F7DB10];
LABEL_5:
    uint64_t v17 = *v14;
    uint64_t v18 = sub_20A8CA140();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(a3, v17, v18);
  }
  if (v11 == *MEMORY[0x263F7D5D0])
  {
    uint64_t v15 = *MEMORY[0x263F7DAE8];
    uint64_t v16 = sub_20A8CA120();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(a3, v15, v16);
    uint64_t v14 = (unsigned int *)MEMORY[0x263F7DAF0];
    goto LABEL_5;
  }
  uint64_t result = sub_20A8CF520();
  __break(1u);
  return result;
}

uint64_t sub_20A49DA90(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 184), *(void *)(a2 + 208));
  sub_20A8C39E0();
  *(void *)(swift_allocObject() + 16) = v2;
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_20A8C6450();
  sub_20A49EF38();
  uint64_t v4 = sub_20A8C6500();
  swift_release();
  swift_release();

  return v4;
}

uint64_t sub_20A49DB68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_20A49EF38();
  uint64_t v7 = (char *)a3 + *(int *)(v6 + 48);
  *a3 = a2;
  uint64_t v8 = sub_20A8C2EF0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v7, a1, v8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_20A49DC00@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v30 = a3;
  uint64_t v5 = sub_20A8C34C0();
  uint64_t v28 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_20A8C40E0();
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A49EF38();
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C2EF0();
  uint64_t v14 = *(void *)(v13 - 8);
  double v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(int *)(v10 + 56);
  uint64_t v19 = &v12[v18];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))(&v12[v18], a1 + v18, v13, v15);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v19, v13);
  uint64_t v20 = a2[31];
  v24[1] = a2[32];
  v24[0] = __swift_project_boxed_opaque_existential_1(a2 + 28, v20);
  __swift_project_boxed_opaque_existential_1(a2 + 18, a2[21]);
  swift_bridgeObjectRetain();
  sub_20A8C3600();
  char v21 = v26;
  sub_20A8C40D0();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v27);
  uint64_t v22 = sub_20A8C3B10();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v21, v29);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  *uint64_t v30 = v22;
  return result;
}

uint64_t sub_20A49DF20@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v9 = sub_20A8C3F00();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v15 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v38 - v14;
  uint64_t v17 = *a1;
  uint64_t v18 = *(void *)(*a1 + 16);
  uint64_t v44 = a4;
  if (v18)
  {
    id v42 = a3;
    uint64_t v43 = v4;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t, double))(v10 + 16);
    unint64_t v20 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v41 = v17;
    v19((char *)&v38 - v14, v17 + v20, v9, v15);
    if (qword_26AC67598 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_20A8C7DF0();
    __swift_project_value_buffer(v21, (uint64_t)qword_26AC9E870);
    ((void (*)(char *, char *, uint64_t))v19)(v12, v16, v9);
    uint64_t v22 = sub_20A8C7DD0();
    os_log_type_t v23 = sub_20A8CEA00();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      v45[0] = v40;
      os_log_t v39 = v22;
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v25 = sub_20A8C3EC0();
      v45[6] = sub_20A687610(v25, v26, v45);
      sub_20A8CF1C0();
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void (**)(char *, uint64_t))(v10 + 8);
      v27(v12, v9);
      uint64_t v28 = (uint64_t (*)(char *, uint64_t))v27;
      uint64_t v22 = v39;
      _os_log_impl(&dword_20A414000, v39, v23, "fetched first stock in active watchlist, symbol=%s", v24, 0xCu);
      uint64_t v29 = v40;
      swift_arrayDestroy();
      MEMORY[0x210528850](v29, -1, -1);
      MEMORY[0x210528850](v24, -1, -1);
    }
    else
    {
      uint64_t v36 = *(void (**)(char *, uint64_t))(v10 + 8);
      v36(v12, v9);
      uint64_t v28 = (uint64_t (*)(char *, uint64_t))v36;
    }

    __swift_project_boxed_opaque_existential_1(v42, v42[3]);
    sub_20A4422A8((uint64_t)v16, v41, v45);
    uint64_t v31 = v45[0];
    uint64_t v32 = v45[1];
    uint64_t v33 = v45[2];
    uint64_t v34 = v45[3];
    uint64_t v35 = v45[4];
    uint64_t result = v28(v16, v9);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 16), *(void *)(a2 + 40));
  type metadata accessor for EmptyListViewController();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v31 = result;
    uint64_t v32 = sub_20A49F278(&qword_26763B280, 255, (void (*)(uint64_t))type metadata accessor for EmptyListViewController);
    uint64_t v33 = sub_20A49F278(&qword_26763B288, 255, (void (*)(uint64_t))type metadata accessor for EmptyListViewController);
    uint64_t v34 = sub_20A49F278(&qword_26763B290, 255, (void (*)(uint64_t))type metadata accessor for EmptyListViewController);
    uint64_t result = sub_20A49F278(&qword_26763B298, 255, (void (*)(uint64_t))type metadata accessor for EmptyListViewController);
    uint64_t v35 = result;
LABEL_10:
    uint64_t v37 = v44;
    uint64_t *v44 = v31;
    v37[1] = v32;
    v37[2] = v33;
    v37[3] = v34;
    v37[4] = v35;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A49E350@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (qword_26AC67598 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_20A8C7DF0();
  __swift_project_value_buffer(v6, (uint64_t)qword_26AC9E870);
  id v7 = a1;
  id v8 = a1;
  uint64_t v9 = sub_20A8C7DD0();
  os_log_type_t v10 = sub_20A8CE9E0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v21 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    id v13 = a1;
    sub_20A4301D4(0, (unint64_t *)&qword_26AC80150);
    uint64_t v14 = sub_20A8CE2F0();
    sub_20A687610(v14, v15, &v21);
    sub_20A8CF1C0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_20A414000, v9, v10, "failed to fetch first stock in active watchlist, error=%s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x210528850](v12, -1, -1);
    MEMORY[0x210528850](v11, -1, -1);
  }
  else
  {
  }
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 16), *(void *)(a2 + 40));
  type metadata accessor for EmptyListViewController();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v17 = result;
    uint64_t v18 = sub_20A49F278(&qword_26763B280, 255, (void (*)(uint64_t))type metadata accessor for EmptyListViewController);
    uint64_t v19 = sub_20A49F278(&qword_26763B288, 255, (void (*)(uint64_t))type metadata accessor for EmptyListViewController);
    uint64_t v20 = sub_20A49F278(&qword_26763B290, 255, (void (*)(uint64_t))type metadata accessor for EmptyListViewController);
    uint64_t result = sub_20A49F278(&qword_26763B298, 255, (void (*)(uint64_t))type metadata accessor for EmptyListViewController);
    *a3 = v17;
    a3[1] = v18;
    a3[2] = v19;
    a3[3] = v20;
    a3[4] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MainModule.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  __swift_destroy_boxed_opaque_existential_1(v0 + 224);
  __swift_destroy_boxed_opaque_existential_1(v0 + 264);
  return v0;
}

uint64_t MainModule.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  __swift_destroy_boxed_opaque_existential_1(v0 + 224);
  __swift_destroy_boxed_opaque_existential_1(v0 + 264);

  return swift_deallocClassInstance();
}

void sub_20A49E718(UIViewController *a1@<X8>)
{
}

uint64_t sub_20A49E73C(void *a1)
{
  return sub_20A49C4C8(a1);
}

uint64_t sub_20A49E758()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A49E798(void *a1)
{
  return sub_20A66DF5C(a1);
}

char *sub_20A49E7A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v19[3] = type metadata accessor for MainStyler();
  v19[4] = &off_26BE60538;
  v19[0] = a2;
  v18[3] = type metadata accessor for InvertColorsRefreshManager();
  v18[4] = &off_26BE69770;
  v18[0] = a3;
  void v17[3] = type metadata accessor for EmptyListModule();
  v17[4] = &off_26BE671F8;
  v17[0] = a5;
  *(void *)(a6 + qword_26AC74BD8) = 0;
  sub_20A4342F4((uint64_t)v19, a6 + qword_26AC74BE0);
  sub_20A4342F4((uint64_t)v18, a6 + qword_26AC74BD0);
  sub_20A4342F4((uint64_t)v17, a6 + qword_26AC74BC8);
  id v11 = a1;
  swift_retain();
  uint64_t v12 = (char *)sub_20A8C9D80();
  id v13 = *(void **)(*__swift_project_boxed_opaque_existential_1(&v12[qword_26AC74BD0], *(void *)&v12[qword_26AC74BD0 + 24])+ 16);
  uint64_t v14 = v12;
  objc_msgSend(v13, sel_addObject_, v14);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_20A8CAB00();
  swift_allocObject();
  swift_retain();
  uint64_t v15 = sub_20A8CAB10();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  swift_release();
  *(void *)&v14[qword_26AC74BD8] = v15;
  swift_release();
  return v14;
}

char *sub_20A49E978(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10 = *a5;
  uint64_t v37 = type metadata accessor for MainStyler();
  uint64_t v38 = &off_26BE60538;
  v36[0] = a2;
  uint64_t refreshed = type metadata accessor for InvertColorsRefreshManager();
  uint64_t v35 = &off_26BE69770;
  v33[0] = a3;
  uint64_t v31 = v10;
  uint64_t v32 = &off_26BE671F8;
  v30[0] = a5;
  id v11 = objc_allocWithZone((Class)type metadata accessor for MainSplitViewController());
  uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v37);
  double v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (void *)((char *)&v30[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
  uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v33, refreshed);
  double v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (void *)((char *)&v30[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v21 + 16))(v20, v18);
  uint64_t v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
  double v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (void *)((char *)&v30[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v26 + 16))(v25, v23);
  uint64_t v27 = sub_20A49E7A0(a1, *v15, *v20, a4, *v25, (uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return v27;
}

uint64_t sub_20A49EC44()
{
  return swift_deallocObject();
}

uint64_t sub_20A49EC84(void *a1)
{
  return sub_20A49CB18(a1);
}

uint64_t sub_20A49EC8C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_20A49F278(&qword_26AC6C8C8, a2, (void (*)(uint64_t))type metadata accessor for MainModule);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for MainModule()
{
  return self;
}

uint64_t method lookup function for MainModule(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MainModule);
}

unint64_t sub_20A49ED20()
{
  unint64_t result = qword_26AC6AC60;
  if (!qword_26AC6AC60)
  {
    sub_20A42CFF0(255, (unint64_t *)&qword_26AC7F920);
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC6AC60);
  }
  return result;
}

uint64_t sub_20A49ED90()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 264), *(void *)(v0 + 288));
  return sub_20A8C3AD0();
}

double sub_20A49EDDC@<D0>(uint64_t a1@<X8>)
{
  sub_20A49C558(v5, 1);
  uint64_t v2 = v6;
  double result = *(double *)v5;
  long long v4 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v2;
  return result;
}

unint64_t sub_20A49EE28()
{
  unint64_t result = qword_26763B278;
  if (!qword_26763B278)
  {
    sub_20A42CFF0(255, (unint64_t *)&qword_26AC7F920);
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26763B278);
  }
  return result;
}

double sub_20A49EEB4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A49D354(a1, a2);
}

uint64_t sub_20A49EED0()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 144), *(void *)(v0 + 168));
  return sub_20A8C35B0();
}

uint64_t sub_20A49EF1C(uint64_t *a1)
{
  return sub_20A49DA90(a1, v1);
}

void sub_20A49EF38()
{
  if (!qword_26AC7F6D8)
  {
    sub_20A49F2C0(255, &qword_26AC7F6D0, MEMORY[0x263F7AF08], MEMORY[0x263F8D488]);
    sub_20A8C2EF0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC7F6D8);
    }
  }
}

uint64_t sub_20A49EFD8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A49DC00(a1, v2, a2);
}

uint64_t sub_20A49EFF4()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_deallocObject();
}

uint64_t sub_20A49F034@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A49DF20(a1, *(void *)(v2 + 16), (void *)(v2 + 24), a2);
}

uint64_t sub_20A49F054@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A49E350(a1, v2, a2);
}

uint64_t sub_20A49F070()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A49F0A8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_20A49DB68(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_20A49F0C4(uint64_t a1, uint64_t a2)
{
  sub_20A49F2C0(0, &qword_26AC69F60, MEMORY[0x263F7D4C8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A49F158(uint64_t a1)
{
  sub_20A49F2C0(0, &qword_26AC69F60, MEMORY[0x263F7D4C8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A49F1E4(uint64_t a1, uint64_t a2)
{
  sub_20A49F2C0(0, &qword_26AC69F60, MEMORY[0x263F7D4C8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A49F278(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A49F2C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A49F324()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_20A49F35C()
{
  sub_20A581D64(v0);
}

ValueMetadata *type metadata accessor for TickerRelayoutBlueprintModifier()
{
  return &type metadata for TickerRelayoutBlueprintModifier;
}

uint64_t sub_20A49F37C()
{
  sub_20A49F7D4();
  uint64_t v0 = sub_20A8C9880();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, void, uint64_t))(v1 + 104))(v3 + v2, *MEMORY[0x263F7D870], v0);
  uint64_t v4 = sub_20A7BAEDC(v3);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v4;
}

uint64_t sub_20A49F488(uint64_t a1, void (*a2)(char *))
{
  sub_20A49F744(0, &qword_26AC6A418, MEMORY[0x263F7D950]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v15 - v7;
  sub_20A49F6B4();
  uint64_t v10 = &v8[*(int *)(v9 + 48)];
  sub_20A49F744(0, (unint64_t *)&qword_26AC6AC90, MEMORY[0x263F7E0A8]);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v8, a1, v11);
  uint64_t v12 = *MEMORY[0x263F7D528];
  uint64_t v13 = sub_20A8C8B80();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v10, v12, v13);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F7D938], v5);
  a2(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20A49F65C()
{
  unint64_t result = qword_26AC80F28;
  if (!qword_26AC80F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC80F28);
  }
  return result;
}

void sub_20A49F6B4()
{
  if (!qword_26AC6AC80)
  {
    sub_20A49F744(255, (unint64_t *)&qword_26AC6AC90, MEMORY[0x263F7E0A8]);
    sub_20A8C8B80();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC6AC80);
    }
  }
}

void sub_20A49F744(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for TickerSectionDescriptor;
    v8[1] = type metadata accessor for TickerModel();
    long long v8[2] = sub_20A44DD30();
    void v8[3] = sub_20A44DD84();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_20A49F7D4()
{
  if (!qword_26AC7FFC8)
  {
    sub_20A8C9880();
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FFC8);
    }
  }
}

id StockChartRangeCalloutView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id StockChartRangeCalloutView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

char *StockChartRangeCalloutView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_dateLabel;
  id v10 = objc_allocWithZone(MEMORY[0x263F828E0]);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v12 = OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_priceChangeLabel;
  *(void *)&v11[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v13 = OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_percentageChangeLabel;
  *(void *)&v11[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v18.receiver = v11;
  v18.super_class = (Class)type metadata accessor for StockChartRangeCalloutView();
  uint64_t v14 = (char *)objc_msgSendSuper2(&v18, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v15 = *(void *)&v14[OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_dateLabel];
  uint64_t v16 = v14;
  objc_msgSend(v16, sel_addSubview_, v15);
  objc_msgSend(v16, sel_addSubview_, *(void *)&v16[OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_priceChangeLabel]);
  objc_msgSend(v16, sel_addSubview_, *(void *)&v16[OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_percentageChangeLabel]);

  return v16;
}

id StockChartRangeCalloutView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StockChartRangeCalloutView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void _s8StocksUI26StockChartRangeCalloutViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_dateLabel;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_priceChangeLabel;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_percentageChangeLabel;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_20A8CF520();
  __break(1u);
}

uint64_t type metadata accessor for StockChartRangeCalloutView()
{
  return self;
}

uint64_t SymbolAutomation.init(stock:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_20A8C3E20();
  uint64_t v6 = v5;
  uint64_t v7 = sub_20A8C3EC0();
  uint64_t v9 = v8;
  uint64_t v10 = sub_20A8C3EE0();
  uint64_t v12 = v11;
  uint64_t v13 = sub_20A8C3F00();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
  *a2 = v4;
  a2[1] = v6;
  a2[2] = v7;
  a2[3] = v9;
  a2[4] = v10;
  a2[5] = v12;
  return result;
}

uint64_t SymbolAutomation.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SymbolAutomation.symbol.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SymbolAutomation.exchange.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SymbolAutomation.automationType.getter()
{
  return 0x6C6F626D7973;
}

uint64_t sub_20A49FD84()
{
  uint64_t v1 = 0x6C6F626D7973;
  if (*v0 != 1) {
    uint64_t v1 = 0x65676E6168637865;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_20A49FDE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A4A08DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A49FE08(uint64_t a1)
{
  unint64_t v2 = sub_20A4A0048();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A49FE44(uint64_t a1)
{
  unint64_t v2 = sub_20A4A0048();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SymbolAutomation.encode(to:)(void *a1)
{
  sub_20A4A0350(0, &qword_26763B2B8, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v12 - v6;
  uint64_t v8 = v1[2];
  void v12[3] = v1[3];
  v12[4] = v8;
  uint64_t v9 = v1[4];
  v12[1] = v1[5];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4A0048();
  sub_20A8CF8F0();
  char v15 = 0;
  uint64_t v10 = v12[5];
  sub_20A8CF6B0();
  if (!v10)
  {
    char v14 = 1;
    sub_20A8CF6B0();
    char v13 = 2;
    sub_20A8CF6B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20A4A0048()
{
  unint64_t result = qword_26763B2C0;
  if (!qword_26763B2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B2C0);
  }
  return result;
}

uint64_t SymbolAutomation.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20A4A0350(0, &qword_26763B2C8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4A0048();
  sub_20A8CF8E0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v28 = 0;
  uint64_t v10 = sub_20A8CF620();
  uint64_t v12 = v11;
  uint64_t v25 = v10;
  char v27 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_20A8CF620();
  uint64_t v15 = v14;
  uint64_t v23 = v13;
  char v26 = 2;
  swift_bridgeObjectRetain();
  uint64_t v24 = v15;
  uint64_t v16 = sub_20A8CF620();
  uint64_t v18 = v17;
  uint64_t v19 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = v24;
  *a2 = v25;
  a2[1] = v12;
  a2[2] = v23;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_20A4A0350(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A4A0048();
    unint64_t v7 = a3(a1, &type metadata for SymbolAutomation.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20A4A03B8()
{
  unint64_t result = qword_26AC6F4C0[0];
  if (!qword_26AC6F4C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26AC6F4C0);
  }
  return result;
}

unint64_t sub_20A4A0410()
{
  unint64_t result = qword_26AC6F4B8;
  if (!qword_26AC6F4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6F4B8);
  }
  return result;
}

uint64_t sub_20A4A0464()
{
  return 0x6C6F626D7973;
}

uint64_t sub_20A4A0478@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SymbolAutomation.init(from:)(a1, a2);
}

uint64_t sub_20A4A0490(void *a1)
{
  return SymbolAutomation.encode(to:)(a1);
}

uint64_t destroy for SymbolAutomation()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SymbolAutomation(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SymbolAutomation(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SymbolAutomation(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolAutomation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolAutomation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolAutomation()
{
  return &type metadata for SymbolAutomation;
}

unsigned char *storeEnumTagSinglePayload for SymbolAutomation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A4A079CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolAutomation.CodingKeys()
{
  return &type metadata for SymbolAutomation.CodingKeys;
}

unint64_t sub_20A4A07D8()
{
  unint64_t result = qword_26763B2D0;
  if (!qword_26763B2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B2D0);
  }
  return result;
}

unint64_t sub_20A4A0830()
{
  unint64_t result = qword_26763B2D8;
  if (!qword_26763B2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B2D8);
  }
  return result;
}

unint64_t sub_20A4A0888()
{
  unint64_t result = qword_26763B2E0;
  if (!qword_26763B2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B2E0);
  }
  return result;
}

uint64_t sub_20A4A08DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65676E6168637865 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

id sub_20A4A0BA0()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  BOOL v2 = &v0[OBJC_IVAR____TtC8StocksUI32StockFeedScrollLandscapeTestCase_testName];
  *BOOL v2 = 0xD000000000000018;
  v2[1] = 0x800000020A8FBC80;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI32StockFeedScrollLandscapeTestCase_timeoutInSeconds] = 0x405E000000000000;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI32StockFeedScrollLandscapeTestCase_aggregate] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI32StockFeedScrollLandscapeTestCase_requiredCapabilities] = &unk_26BE5E8E0;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI32StockFeedScrollLandscapeTestCase_iterations] = 2;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI32StockFeedScrollLandscapeTestCase_offset] = 15;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI32StockFeedScrollLandscapeTestCase_numberOfScreens] = 5;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI32StockFeedScrollLandscapeTestCase_orientation] = 4;
  v0[OBJC_IVAR____TtC8StocksUI32StockFeedScrollLandscapeTestCase_waitForCommitToFinish] = 0;
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for StockFeedScrollLandscapeTestCase()
{
  return self;
}

void sub_20A4A0D14(void *a1)
{
  BOOL v2 = (void *)sub_20A8CE240();
  id v3 = objc_msgSend(a1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
    sub_20A441D28(&v5, &v6);
    type metadata accessor for StockFeedViewController();
    swift_dynamicCast();
    sub_20A8C9BF0();
    sub_20A8C94C0();

    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t *sub_20A4A0E08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  objc_super v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *objc_super v4 = *a2;
    objc_super v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = (char *)a1 + v9;
    a1[4] = a2[4];
    uint64_t v10 = sub_20A8C40E0();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v15, v14, v10);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_20A4A0F40(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void *sub_20A4A0FE4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a2 + v8;
  uint64_t v13 = (char *)a1 + v8;
  uint64_t v9 = sub_20A8C40E0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v13, v12, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_20A4A10CC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C40E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A4A11D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

void *sub_20A4A1274(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C40E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A4A134C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A4A1360);
}

uint64_t sub_20A4A1360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C40E0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_20A4A1410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A4A1424);
}

uint64_t sub_20A4A1424(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_20A8C40E0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for StockSearchResultsUpdateModifier()
{
  uint64_t result = qword_26763B400;
  if (!qword_26763B400) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A4A1518()
{
  uint64_t result = sub_20A8C40E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A4A15C4(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  sub_20A4A21F0(0, (unint64_t *)&qword_26AC82498, MEMORY[0x263F7D950]);
  uint64_t v7 = v6;
  uint64_t v62 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v57 = (char *)v53 - v8;
  sub_20A4A20C4();
  MEMORY[0x270FA5388](v9 - 8);
  id v58 = (char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4A21F0(0, (unint64_t *)&qword_26AC6AD38, MEMORY[0x263F7E0A8]);
  uint64_t v60 = *(void *)(v11 - 8);
  uint64_t v61 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v59 = (char *)v53 - v12;
  sub_20A4A22E4();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v14 = type metadata accessor for StockSearchSectionDescriptor();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4A21F0(0, (unint64_t *)&qword_26AC82470, MEMORY[0x263F7D450]);
  uint64_t v63 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v53 - v19;
  uint64_t v21 = *(void *)(v3 + 32);
  if (*(void *)(v21 + 16))
  {
    uint64_t v54 = v7;
    uint64_t v55 = a3;
    id v56 = a2;
    sub_20A4A24B8(0, (unint64_t *)&qword_26763B418, MEMORY[0x263F7AFD8], (void (*)(uint64_t))sub_20A4A23B0);
    uint64_t v23 = v22;
    uint64_t v24 = *(int *)(v22 + 48);
    uint64_t updated = type metadata accessor for StockSearchResultsUpdateModifier();
    uint64_t v26 = *(int *)(updated + 24);
    v53[1] = v14;
    uint64_t v27 = v3 + v26;
    uint64_t v28 = sub_20A8C40E0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v16, v27, v28);
    *(void *)&v16[v24] = *(void *)(v3 + *(int *)(updated + 28));
    uint64_t v29 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v16, 0, 2, v23);
    MEMORY[0x270FA5388](v29);
    v53[-2] = v3;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_20A449AF8((void (*)(uint64_t))sub_20A4A2408, (uint64_t)&v53[-4], v21, (uint64_t)v64);
    sub_20A44DB30(0);
    uint64_t v32 = v31;
    uint64_t v33 = sub_20A4A2034(&qword_26AC82E00, sub_20A44DB30);
    uint64_t v34 = sub_20A4A2034(&qword_26AC82F30, sub_20A44DB30);
    MEMORY[0x21051E250](v30, v32, v33, v34);
    type metadata accessor for StockSearchModel();
    sub_20A4A2034(&qword_26AC78AC0, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
    sub_20A4A2034(&qword_26AC6F3E0, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
    sub_20A8C8810();
    unint64_t v35 = sub_20A46DC60(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v37 = *(void *)(v35 + 16);
    unint64_t v36 = *(void *)(v35 + 24);
    if (v37 >= v36 >> 1) {
      unint64_t v35 = sub_20A46DC60(v36 > 1, v37 + 1, 1, v35);
    }
    *(void *)(v35 + 16) = v37 + 1;
    unint64_t v38 = v35
        + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))
        + *(void *)(v18 + 72) * v37;
    uint64_t v39 = v63;
    (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v38, v20, v63);
    uint64_t v40 = v56;
    uint64_t v7 = v54;
  }
  else
  {
    unint64_t v35 = MEMORY[0x263F8EE78];
    uint64_t v39 = v63;
    uint64_t v40 = a2;
  }
  uint64_t v41 = sub_20A4A2190((unint64_t *)&unk_26AC82460);
  uint64_t v42 = sub_20A4A2190(&qword_26AC82458);
  MEMORY[0x21051E250](v35, v39, v41, v42);
  type metadata accessor for StockSearchModel();
  sub_20A4A2034(&qword_26AC78AC0, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
  sub_20A4A2034(&qword_26AC6F3E0, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
  uint64_t v43 = v59;
  sub_20A8CBB20();
  sub_20A4A2428();
  uint64_t v45 = v57;
  id v46 = &v57[*(int *)(v44 + 48)];
  uint64_t v48 = v60;
  uint64_t v47 = v61;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v43, v61);
  uint64_t v49 = *MEMORY[0x263F7D528];
  uint64_t v50 = sub_20A8C8B80();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 104))(v46, v49, v50);
  uint64_t v51 = v62;
  (*(void (**)(char *, void, uint64_t))(v62 + 104))(v45, *MEMORY[0x263F7D938], v7);
  v40(v45);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v45, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v43, v47);
}

uint64_t sub_20A4A1D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockSearchModel();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = a2 + *(int *)(type metadata accessor for StockSearchResultsUpdateModifier() + 24);
  uint64_t v11 = (void *)sub_20A8C40B0();
  uint64_t v12 = sub_20A8C3EC0();
  char v14 = sub_20A597330(v12, v13, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A4A24B8(0, (unint64_t *)&qword_26763B428, (void (*)(uint64_t))type metadata accessor for StockViewModel, MEMORY[0x263F7AFD8]);
  uint64_t v16 = &v6[*(int *)(v15 + 48)];
  sub_20A4A2540(a1, (uint64_t)v6);
  uint64_t v17 = sub_20A8C40E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v16, v10, v17);
  swift_storeEnumTagMultiPayload();
  if (v14) {
    int v18 = 0;
  }
  else {
    int v18 = 2;
  }
  sub_20A81CD08(v18, v9);
  sub_20A4A25A4((uint64_t)v6);
  sub_20A4A2034(&qword_26AC6F3E0, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
  return sub_20A8C8320();
}

uint64_t sub_20A4A1FA4()
{
  return sub_20A4A2034(&qword_26763B410, (void (*)(uint64_t))type metadata accessor for StockSearchResultsUpdateModifier);
}

uint64_t sub_20A4A1FEC()
{
  return sub_20A4A2034(&qword_26AC78AC0, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
}

uint64_t sub_20A4A2034(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4A207C()
{
  return sub_20A4A2034(&qword_26AC6F3E0, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
}

void sub_20A4A20C4()
{
  if (!qword_26AC82448)
  {
    sub_20A4A21F0(255, (unint64_t *)&qword_26AC82470, MEMORY[0x263F7D450]);
    sub_20A4A2190((unint64_t *)&unk_26AC82460);
    sub_20A4A2190(&qword_26AC82458);
    unint64_t v0 = sub_20A8C5F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC82448);
    }
  }
}

uint64_t sub_20A4A2190(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A4A21F0(255, (unint64_t *)&qword_26AC82470, MEMORY[0x263F7D450]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A4A21F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for StockSearchSectionDescriptor();
    v8[1] = type metadata accessor for StockSearchModel();
    long long v8[2] = sub_20A4A2034(&qword_26AC78AC0, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
    void v8[3] = sub_20A4A2034(&qword_26AC6F3E0, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_20A4A22E4()
{
  if (!qword_26AC82F20)
  {
    sub_20A44DB30(255);
    sub_20A4A2034(&qword_26AC82E00, sub_20A44DB30);
    sub_20A4A2034(&qword_26AC82F30, sub_20A44DB30);
    unint64_t v0 = sub_20A8C5F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC82F20);
    }
  }
}

void sub_20A4A23B0()
{
  if (!qword_26AC82CC0)
  {
    sub_20A8C40E0();
    unint64_t v0 = sub_20A8CE6C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC82CC0);
    }
  }
}

uint64_t sub_20A4A2408(uint64_t a1)
{
  return sub_20A4A1D94(a1, *(void *)(v1 + 16));
}

void sub_20A4A2428()
{
  if (!qword_26763B420)
  {
    sub_20A4A21F0(255, (unint64_t *)&qword_26AC6AD38, MEMORY[0x263F7E0A8]);
    sub_20A8C8B80();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763B420);
    }
  }
}

void sub_20A4A24B8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_20A4A2540(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4A25A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockSearchModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for MastheadModel()
{
  return &type metadata for MastheadModel;
}

id sub_20A4A2610()
{
  id result = sub_20A4A2630();
  qword_26AC678C8 = (uint64_t)result;
  return result;
}

id sub_20A4A2630()
{
  uint64_t v0 = sub_20A8C2990();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C2940();
  sub_20A8C2880();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v4 = (void *)sub_20A8CE240();
  uint64_t v5 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(self, sel_dateFormatterWithFormat_localeIdentifier_forReuse_, v4, v5, 1);

  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = (void *)sub_20A8CE240();
    objc_msgSend(v7, sel_setLocalizedDateFormatFromTemplate_, v8);
  }
  return v6;
}

id sub_20A4A27B0()
{
  id result = sub_20A4A27D4();
  qword_26AC678D8 = (uint64_t)result;
  unk_26AC678E0 = v1;
  return result;
}

id sub_20A4A27D4()
{
  uint64_t v0 = self;
  id result = objc_msgSend(v0, sel_mainBundle);
  if (*MEMORY[0x263EFFA90])
  {
    uint64_t v2 = result;
    id v3 = objc_msgSend(result, sel_objectForInfoDictionaryKey_);

    if (v3)
    {
      sub_20A8CF270();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v9 = 0u;
      long long v10 = 0u;
    }
    sub_20A443438((uint64_t)&v9, (uint64_t)v11);
    if (v12)
    {
      if (swift_dynamicCast()) {
        return (id)v8;
      }
    }
    else
    {
      sub_20A44349C((uint64_t)v11);
    }
    id result = objc_msgSend(v0, sel_mainBundle);
    if (*MEMORY[0x263EFFB68])
    {
      uint64_t v4 = result;
      id v5 = objc_msgSend(result, sel_objectForInfoDictionaryKey_);

      if (v5)
      {
        sub_20A8CF270();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v9 = 0u;
        long long v10 = 0u;
      }
      sub_20A443438((uint64_t)&v9, (uint64_t)v11);
      if (v12)
      {
        if (swift_dynamicCast()) {
          return (id)v8;
        }
      }
      else
      {
        sub_20A44349C((uint64_t)v11);
      }
      type metadata accessor for Localized();
      id v7 = objc_msgSend(v0, sel_bundleForClass_, swift_getObjCClassFromMetadata());
      uint64_t v6 = sub_20A8C2370();

      return (id)v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t MailShareLinkTextProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t MailShareLinkTextProvider.init()()
{
  return v0;
}

uint64_t MailShareLinkTextProvider.sharedFromName.getter()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t MailShareLinkTextProvider.sharedFromURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_20A8C2530();
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t MailShareLinkTextProvider.deinit()
{
  return v0;
}

uint64_t MailShareLinkTextProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_20A4A2B64()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t sub_20A4A2C2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_20A8C2530();
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t type metadata accessor for MailShareLinkTextProvider()
{
  return self;
}

uint64_t method lookup function for MailShareLinkTextProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MailShareLinkTextProvider);
}

uint64_t dispatch thunk of MailShareLinkTextProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_20A4A2CE8@<X0>(double a1@<X0>, double a2@<X1>, uint64_t a3@<X8>)
{
  double v86 = a2;
  CGFloat v81 = a1;
  uint64_t v76 = a3;
  uint64_t v4 = sub_20A8C9830();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v3[5];
  uint64_t v8 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v9);
  long long v10 = (void *)sub_20A8C9750();
  double v78 = *(double *)&v8;
  uint64_t v11 = *(void *)(v8 + 8);
  uint64_t v12 = *(void (**)(void *, uint64_t, uint64_t))(v11 + 8);
  v98[3] = v9;
  v98[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v98);
  v12(v10, v9, v11);

  uint64_t v79 = v5;
  uint64_t v13 = *(void (**)(char *, void, uint64_t))(v5 + 16);
  uint64_t v75 = v7;
  uint64_t v80 = v4;
  v13(v7, *(void *)&v86, v4);
  sub_20A8C9720();
  double v15 = v14;
  sub_20A8C9710();
  double v17 = v16;
  sub_20A8C9710();
  double v19 = v18;
  double v20 = v15 - v17;
  *((void *)&v88 + 1) = sub_20A8CA520();
  *(void *)&long long v89 = sub_20A4A3A44(&qword_26763B430, MEMORY[0x263F7DC60]);
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v87);
  sub_20A8CA510();
  sub_20A8C9810();
  CGFloat v83 = v21;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
  *((void *)&v88 + 1) = sub_20A8CA540();
  *(void *)&long long v89 = sub_20A4A3A44((unint64_t *)&unk_26AC6A638, MEMORY[0x263F7DC70]);
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v87);
  sub_20A8CA530();
  sub_20A8C9810();
  CGFloat v82 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
  *((void *)&v88 + 1) = &type metadata for WatchlistSelectionIndicatorCellAccessory;
  *(void *)&long long v89 = sub_20A4A3954();
  uint64_t v23 = (void *)swift_allocObject();
  *(void *)&long long v87 = v23;
  void v23[2] = 0xD00000000000001BLL;
  v23[3] = 0x800000020A8FBE00;
  uint64_t v23[4] = 0x656C63726963;
  v23[5] = 0xE600000000000000;
  sub_20A8C9810();
  CGFloat v85 = v24;
  CGFloat v84 = v25;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
  *((void *)&v88 + 1) = &type metadata for RenameWatchlistCellAccessory;
  *(void *)&long long v89 = sub_20A4A39AC();
  uint64_t v26 = (void *)swift_allocObject();
  *(void *)&long long v87 = v26;
  void v26[2] = 0xD000000000000015;
  v26[3] = 0x800000020A8FBE20;
  v26[4] = 0x6C69636E6570;
  void v26[5] = 0xE600000000000000;
  sub_20A8C9810();
  double v86 = v27;
  double v29 = v28;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
  if (v29 <= 44.0) {
    double v30 = v29;
  }
  else {
    double v30 = 44.0;
  }
  int v31 = *(unsigned __int8 *)(*(void *)&v81 + 32);
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)&v78 + 16))(*(unsigned __int8 *)(*(void *)&v81 + 32), 1, v9);
  boxed_opaque_existential_1 = *(uint64_t **)&v20;
  double v32 = v20 + -16.0;
  id v33 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v34 = (void *)sub_20A8CE240();
  type metadata accessor for Key(0);
  sub_20A4A3A44((unint64_t *)&qword_26AC7F9F8, type metadata accessor for Key);
  unint64_t v35 = (void *)sub_20A8CE170();
  id v36 = objc_msgSend(v33, sel_initWithString_attributes_, v34, v35);

  sub_20A8CEC70();
  double v38 = v37;

  double v39 = v38 + v38;
  type metadata accessor for WatchlistCellViewModel(0);
  sub_20A8C40A0();
  id v40 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v41 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  uint64_t v42 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v43 = objc_msgSend(v40, sel_initWithString_attributes_, v41, v42);

  uint64_t v44 = v75;
  double v74 = v32 + -16.0 - v19;
  sub_20A8CEC70();
  double v46 = v45;

  if (v39 >= v46) {
    double v47 = v46;
  }
  else {
    double v47 = v39;
  }
  double v48 = v47 + 16.0 + 16.0;
  double v49 = v32 - v83;
  if (!v31) {
    double v49 = v49 - v82 + -16.0;
  }
  double v78 = v19;
  double v50 = v49 - v19;
  sub_20A8C9700();
  double v52 = 1.0 / v51;
  double v53 = v50 + -16.0;
  v99.origin.CGFloat x = v50 + -16.0 - 1.0 / v51;
  v99.origin.CGFloat y = 0.0;
  CGFloat x = v99.origin.x;
  v99.size.CGFloat width = v52;
  v99.size.CGFloat height = v47 + 16.0 + 16.0;
  CGFloat v82 = CGRectGetMinX(v99) - v86 + -16.0;
  CGFloat v83 = v30;
  CGFloat v81 = floor((v48 - v30) * 0.5);
  CGFloat v54 = v84;
  double v55 = floor((v48 - v84) * 0.5);
  v100.origin.CGFloat x = 16.0;
  v100.origin.CGFloat y = v55;
  CGFloat v56 = v85;
  v100.size.CGFloat width = v85;
  v100.size.CGFloat height = v84;
  CGRectGetWidth(v100);
  v101.origin.CGFloat x = 16.0;
  v101.origin.CGFloat y = v55;
  v101.size.CGFloat width = v56;
  v101.size.CGFloat height = v54;
  CGRectGetMaxX(v101);
  if ((v31 & 1) == 0)
  {
    v102.origin.CGFloat x = v82;
    v102.origin.CGFloat y = v81;
    v102.size.CGFloat width = v86;
    v102.size.CGFloat height = v83;
    double v53 = CGRectGetMinX(v102) + -16.0 + -16.0;
  }
  MEMORY[0x270FA5388](v57);
  *((double *)&v72 - 22) = v48;
  *(&v72 - 21) = v58;
  *(&v72 - 20) = 0x4030000000000000;
  *(&v72 - 19) = v59;
  *((double *)&v72 - 18) = v47;
  __asm { FMOV            V1.2D, #16.0 }
  *(_OWORD *)(&v72 - 17) = _Q1;
  *((double *)&v72 - 15) = v53;
  *((double *)&v72 - 14) = v47;
  *(&v72 - 13) = 0x4030000000000000;
  *(CGFloat *)&_Q1 = v85;
  *((double *)&v72 - 12) = v55;
  *(&v72 - 11) = _Q1;
  *(CGFloat *)&_Q1 = v82;
  *((CGFloat *)&v72 - 10) = v84;
  *(&v72 - 9) = _Q1;
  *(double *)&_Q1 = v86;
  *((CGFloat *)&v72 - 8) = v81;
  *(&v72 - 7) = _Q1;
  *(CGFloat *)&_Q1 = x;
  *((CGFloat *)&v72 - 6) = v83;
  *(&v72 - 5) = _Q1;
  *(&v72 - 4) = 0;
  *((double *)&v72 - 3) = v52;
  *((double *)&v72 - 2) = v48;
  sub_20A8C9690();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v44, v80);
  long long v65 = v96;
  uint64_t v66 = v76;
  *(_OWORD *)(v76 + 128) = v95;
  *(_OWORD *)(v66 + 144) = v65;
  *(void *)(v66 + 160) = v97;
  long long v67 = v92;
  *(_OWORD *)(v66 + 64) = v91;
  *(_OWORD *)(v66 + 80) = v67;
  long long v68 = v94;
  *(_OWORD *)(v66 + 96) = v93;
  *(_OWORD *)(v66 + 112) = v68;
  long long v69 = v88;
  *(_OWORD *)uint64_t v66 = v87;
  *(_OWORD *)(v66 + 16) = v69;
  long long v70 = v90;
  *(_OWORD *)(v66 + 32) = v89;
  *(_OWORD *)(v66 + 48) = v70;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
}

double sub_20A4A351C@<D0>(double *a1@<X8>, double a2@<D0>, uint64_t a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  double v74 = a2;
  uint64_t v73 = a13;
  uint64_t v72 = a14;
  uint64_t v71 = a15;
  uint64_t v69 = a9;
  uint64_t v68 = a10;
  uint64_t v70 = a12;
  uint64_t v67 = a11;
  uint64_t v61 = a5;
  uint64_t v60 = a6;
  uint64_t v66 = a8;
  uint64_t v59 = a7;
  double v54 = a4;
  uint64_t v16 = sub_20A8C8180();
  uint64_t v17 = *(void *)(v16 - 8);
  double v18 = MEMORY[0x270FA5388](v16);
  double v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *MEMORY[0x263F7D268];
  double v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v17 + 104);
  v22(v20, v21, v16, v18);
  sub_20A8C8170();
  uint64_t v64 = v24;
  uint64_t v65 = v23;
  uint64_t v62 = v26;
  uint64_t v63 = v25;
  double v27 = *(void (**)(char *, uint64_t))(v17 + 8);
  v27(v20, v16);
  ((void (*)(char *, uint64_t, uint64_t))v22)(v20, v21, v16);
  sub_20A8C8170();
  uint64_t v58 = v28;
  uint64_t v57 = v29;
  uint64_t v56 = v30;
  uint64_t v55 = v31;
  v27(v20, v16);
  ((void (*)(char *, uint64_t, uint64_t))v22)(v20, v21, v16);
  sub_20A8C8170();
  uint64_t v61 = v32;
  uint64_t v60 = v33;
  uint64_t v59 = v34;
  double v54 = v35;
  v27(v20, v16);
  ((void (*)(char *, uint64_t, uint64_t))v22)(v20, v21, v16);
  sub_20A8C8170();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  v27(v20, v16);
  ((void (*)(char *, uint64_t, uint64_t))v22)(v20, v21, v16);
  sub_20A8C8170();
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  v27(v20, v16);
  *a1 = v74;
  *((void *)a1 + 1) = v65;
  *((void *)a1 + 2) = v64;
  *((void *)a1 + 3) = v63;
  *((void *)a1 + 4) = v62;
  *((void *)a1 + 5) = v58;
  *((void *)a1 + 6) = v57;
  *((void *)a1 + 7) = v56;
  *((void *)a1 + 8) = v55;
  *((void *)a1 + 9) = v61;
  *((void *)a1 + 10) = v60;
  *((void *)a1 + 11) = v59;
  double result = v54;
  a1[12] = v54;
  *((void *)a1 + 13) = v37;
  *((void *)a1 + 14) = v39;
  *((void *)a1 + 15) = v41;
  *((void *)a1 + 16) = v43;
  *((void *)a1 + 17) = v45;
  *((void *)a1 + 18) = v47;
  *((void *)a1 + 19) = v49;
  *((void *)a1 + 20) = v51;
  return result;
}

uint64_t sub_20A4A38F0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WatchlistCellViewLayoutAttributesFactory()
{
  return self;
}

unint64_t sub_20A4A3954()
{
  unint64_t result = qword_26763B438;
  if (!qword_26763B438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B438);
  }
  return result;
}

unint64_t sub_20A4A39AC()
{
  unint64_t result = qword_26763B440;
  if (!qword_26763B440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B440);
  }
  return result;
}

uint64_t objectdestroyTm_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A4A3A44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_20A4A3A8C@<D0>(double *a1@<X8>)
{
  return sub_20A4A351C(a1, *(double *)(v1 + 16), *(void *)(v1 + 80), *(double *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120), *(void *)(v1 + 128), *(void *)(v1 + 136), *(void *)(v1 + 144), *(void *)(v1 + 152), *(void *)(v1 + 160), *(void *)(v1 + 168), *(void *)(v1 + 176));
}

ValueMetadata *type metadata accessor for RenameWatchlistCellAccessory()
{
  return &type metadata for RenameWatchlistCellAccessory;
}

uint64_t destroy for TodayModel()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for TodayModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TodayModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for TodayModel(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TodayModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TodayModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistSelectionIndicatorCellAccessory()
{
  return &type metadata for WatchlistSelectionIndicatorCellAccessory;
}

uint64_t sub_20A4A3CD4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_20A4A3E54();

  return MEMORY[0x270F7C4E8](a1, a2, v4);
}

uint64_t sub_20A4A3D24()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_20A4A3D54(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_20A4A3EA8();

  return MEMORY[0x270F7C4E8](a1, a2, v4);
}

unint64_t sub_20A4A3DA8()
{
  unint64_t result = qword_26763B448;
  if (!qword_26763B448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B448);
  }
  return result;
}

unint64_t sub_20A4A3E00()
{
  unint64_t result = qword_26763B450;
  if (!qword_26763B450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B450);
  }
  return result;
}

unint64_t sub_20A4A3E54()
{
  unint64_t result = qword_26763B458;
  if (!qword_26763B458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B458);
  }
  return result;
}

unint64_t sub_20A4A3EA8()
{
  unint64_t result = qword_26763B460;
  if (!qword_26763B460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B460);
  }
  return result;
}

uint64_t sub_20A4A3F04@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v164 = a2;
  v204[5] = *MEMORY[0x263EF8340];
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A4AE150(0, &qword_26AC82C00, MEMORY[0x263F7D610], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  id v163 = (char *)&v145 - v5;
  uint64_t v151 = sub_20A8C8390();
  uint64_t v149 = *(void *)(v151 - 8);
  MEMORY[0x270FA5388](v151);
  double v148 = (char *)&v145 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4AE39C(0, &qword_26AC82D58, (uint64_t (*)(void))sub_20A4AE1B4, MEMORY[0x263F59C58], MEMORY[0x263F7D5B0]);
  MEMORY[0x270FA5388](v7 - 8);
  CGFloat v147 = (char *)&v145 - v8;
  sub_20A4AE150(0, &qword_26AC82C40, (uint64_t (*)(uint64_t))sub_20A4AE208, v3);
  MEMORY[0x270FA5388](v9 - 8);
  double v146 = (char *)&v145 - v10;
  uint64_t v11 = sub_20A8CB920();
  uint64_t v150 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  CGFloat v162 = (char *)&v145 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_20A8CBC50();
  uint64_t v13 = *(void *)(v170 - 8);
  MEMORY[0x270FA5388](v170);
  CGFloat v169 = (char *)&v145 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4AE150(0, (unint64_t *)&unk_26AC6A090, MEMORY[0x263F7D580], v3);
  MEMORY[0x270FA5388](v15 - 8);
  CGFloat v188 = (char *)&v145 - v16;
  sub_20A4AE150(0, &qword_26AC69D08, MEMORY[0x263F7D250], v3);
  MEMORY[0x270FA5388](v17 - 8);
  double v184 = (char *)&v145 - v18;
  uint64_t v19 = sub_20A8CBC00();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  double v22 = (char *)&v145 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_20A8CBC40();
  uint64_t v24 = *(void **)(v23 - 8);
  uint64_t v196 = v23;
  CGFloat v197 = v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v145 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, *((void *)a1 + 3));
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E90);
  sub_20A8C5BB0();
  if (!v203)
  {
    __break(1u);
    goto LABEL_17;
  }
  CGFloat v189 = v26;
  sub_20A42BEBC(&v202, (uint64_t)v204);
  __swift_project_boxed_opaque_existential_1(a1, *((void *)a1 + 3));
  sub_20A4301D4(0, &qword_26AC68E40);
  sub_20A8C5BB0();
  if (!v200)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  CGFloat v177 = a1;
  uint64_t v190 = v11;
  sub_20A42BEBC(&v199, (uint64_t)&v202);
  sub_20A4AE150(0, &qword_26AC82D90, MEMORY[0x263F7E120], MEMORY[0x263F8E0F8]);
  uint64_t v28 = v27;
  uint64_t v29 = v13;
  uint64_t v30 = *(void *)(v13 + 72);
  uint64_t v31 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v32 = (v31 + 32) & ~v31;
  uint64_t v33 = v31 | 7;
  uint64_t v175 = v32 + v30;
  uint64_t v34 = swift_allocObject();
  long long v198 = xmmword_20A8D3DC0;
  *(_OWORD *)(v34 + 16) = xmmword_20A8D3DC0;
  uint64_t v157 = v34;
  uint64_t v166 = v34 + v32;
  double v35 = (void *)*MEMORY[0x263F83828];
  uint64_t v154 = 2 * v30;
  uint64_t v176 = v28;
  id v156 = (id)(v32 + 2 * v30);
  uint64_t v174 = v33;
  uint64_t v36 = (_OWORD *)swift_allocObject();
  long long v167 = xmmword_20A8D4540;
  v36[1] = xmmword_20A8D4540;
  uint64_t v186 = v32;
  id v161 = v36;
  uint64_t v37 = (char *)v36 + v32;
  uint64_t v38 = (void *)*MEMORY[0x263F83820];
  uint64_t v39 = v189;
  *CGFloat v189 = *MEMORY[0x263F83820];
  uint64_t v40 = (void (*)(void))v197[13];
  LODWORD(v155) = *MEMORY[0x263F7E0F0];
  CGFloat v194 = (void (*)(void *, uint64_t, uint64_t))v40;
  v197 += 13;
  v40(v39);
  CGFloat v160 = v35;
  id v41 = v38;
  sub_20A4A5BA4((void (*)(unint64_t, char *, uint64_t))v204);
  uint64_t v168 = v29;
  unsigned int v42 = *MEMORY[0x263F7E0E0];
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 104);
  uint64_t v191 = v20 + 104;
  unsigned int v193 = v42;
  CGFloat v195 = v43;
  ((void (*)(char *))v43)(v22);
  sub_20A8CBC10();
  uint64_t v185 = v30;
  uint64_t v159 = (uint64_t)&v37[v30];
  sub_20A4AE23C(0, &qword_26AC82D88, &qword_26AC82D50, MEMORY[0x263F7D308], MEMORY[0x263F8E0F8]);
  uint64_t v173 = v44;
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = v198;
  uint64_t v46 = v19;
  CGFloat v192 = v22;
  if (qword_26AC6ABF0 != -1) {
    swift_once();
  }
  LOBYTE(v199) = 1;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v48 = self;
  swift_retain();
  id v171 = v48;
  uint64_t v172 = ObjCClassFromMetadata;
  id v49 = objc_msgSend(v48, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v50 = sub_20A8C8130();
  uint64_t v51 = *(void *)(v50 - 8);
  double v52 = *(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56);
  uint64_t v183 = v50;
  uint64_t v182 = v52;
  uint64_t v181 = v51 + 56;
  ((void (*)(char *, uint64_t, uint64_t))v52)(v184, 1, 1);
  uint64_t v53 = sub_20A8C8D90();
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56);
  uint64_t v180 = v53;
  CGFloat v179 = v55;
  uint64_t v178 = v54 + 56;
  ((void (*)(char *, uint64_t, uint64_t))v55)(v188, 1, 1);
  uint64_t v56 = MEMORY[0x263F7E098];
  *(void *)(v45 + 56) = v190;
  *(void *)(v45 + 64) = v56;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v45 + 32));
  sub_20A8CB8D0();
  uint64_t v158 = v45;
  uint64_t v57 = *MEMORY[0x263F7E100];
  uint64_t v58 = v196;
  uint64_t v59 = v194;
  v194(v39, v57, v196);
  uint64_t v60 = v192;
  uint64_t v61 = v193;
  uint64_t v62 = v195;
  uint64_t v187 = v46;
  v195(v192, v193, v46);
  sub_20A8CBC10();
  sub_20A8CBC60();
  LODWORD(v165) = v57;
  v59(v39, v57, v58);
  v62(v60, v61, v46);
  uint64_t v63 = v169;
  sub_20A8CBC10();
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = v198;
  id v161 = (id)*MEMORY[0x263F83858];
  sub_20A4AE150(0, &qword_26AC82D98, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, MEMORY[0x263F8E0F8]);
  uint64_t v166 = v65;
  uint64_t v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = v167;
  uint64_t v67 = (void *)*MEMORY[0x263F83878];
  uint64_t v68 = (void *)*MEMORY[0x263F83848];
  *(void *)(v66 + 32) = *MEMORY[0x263F83878];
  *(void *)(v66 + 40) = v68;
  CGFloat v160 = (char *)v66;
  uint64_t v69 = v186;
  uint64_t v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = xmmword_20A8D7FF0;
  uint64_t v159 = v70;
  uint64_t v71 = v39;
  uint64_t v72 = v70 + v69;
  (*(void (**)(uint64_t, char *, uint64_t))(v168 + 16))(v70 + v69, v63, v170);
  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = v198;
  __swift_project_boxed_opaque_existential_1(v177, *((void *)v177 + 3));
  uint64_t v74 = type metadata accessor for ShareDynamicMenuItemProvider();
  id v161 = v161;
  id v75 = v67;
  id v76 = v68;
  uint64_t v77 = sub_20A8C5BA0();
  uint64_t v78 = v187;
  if (!v77) {
LABEL_18:
  }
    __break(1u);
  uint64_t v79 = v77;
  uint64_t v158 = v64;
  id v153 = (id)(v64 + v186);
  uint64_t v200 = v74;
  uint64_t v201 = sub_20A4AE708(&qword_26AC82C50, (void (*)(uint64_t))type metadata accessor for ShareDynamicMenuItemProvider);
  *(void *)&long long v199 = v79;
  uint64_t v152 = v72;
  *(void *)(v73 + 56) = v190;
  *(void *)(v73 + 64) = MEMORY[0x263F7E098];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v73 + 32));
  sub_20A8CB910();
  uint64_t v80 = v71;
  uint64_t v81 = v165;
  uint64_t v82 = v196;
  v194(v80, v165, v196);
  v195(v192, v193, v78);
  sub_20A8CBC10();
  __swift_project_boxed_opaque_existential_1(v204, v204[3]);
  char v83 = sub_20A8C3810();
  uint64_t v84 = v152;
  if (v83)
  {
    sub_20A8CB7A0();
    sub_20A4AE208(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v146, 1, 1, v85);
    LOBYTE(v199) = 1;
    sub_20A4AE1B4();
    sub_20A8C8E00();
    double v86 = v184;
    sub_20A8C8110();
    v182(v86, 0, 1, v183);
    v179(v188, 1, 1, v180);
    (*(void (**)(char *, void, uint64_t))(v149 + 104))(v148, *MEMORY[0x263F7D310], v151);
    sub_20A8CB8F0();
    long long v87 = sub_20A46DCF0(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v89 = v87[2];
    unint64_t v88 = v87[3];
    uint64_t v90 = v84;
    if (v89 >= v88 >> 1) {
      long long v87 = sub_20A46DCF0((void *)(v88 > 1), v89 + 1, 1, v87);
    }
    uint64_t v91 = v190;
    uint64_t v151 = (uint64_t)v87;
    uint64_t v92 = v165;
    uint64_t v200 = v190;
    uint64_t v201 = MEMORY[0x263F7E098];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v199);
    uint64_t v94 = v150;
    long long v95 = v162;
    (*(void (**)(uint64_t *, char *, uint64_t))(v150 + 16))(boxed_opaque_existential_1, v162, v91);
    void v87[2] = v89 + 1;
    sub_20A42BEBC(&v199, (uint64_t)&v87[5 * v89 + 4]);
    (*(void (**)(char *, uint64_t))(v94 + 8))(v95, v91);
    uint64_t v96 = v187;
    uint64_t v82 = v196;
  }
  else
  {
    uint64_t v90 = v152;
    uint64_t v92 = v81;
    uint64_t v151 = MEMORY[0x263F8EE78];
    uint64_t v96 = v78;
  }
  uint64_t v97 = v90;
  uint64_t v98 = v92;
  uint64_t v99 = v92;
  CGRect v100 = v194;
  v194(v189, v99, v82);
  CGRect v101 = v192;
  uint64_t v102 = v193;
  double v103 = v195;
  v195(v192, v193, v96);
  double v104 = v189;
  sub_20A8CBC10();
  CGFloat v162 = (char *)(v97 + 3 * v185);
  sub_20A4A6E54(v177);
  uint64_t v105 = v98;
  uint64_t v106 = v196;
  v100(v104, v105, v196);
  v103(v101, v102, v96);
  double v107 = v104;
  sub_20A8CBC10();
  sub_20A8CBC60();
  uint64_t v108 = swift_allocObject();
  *(_OWORD *)(v108 + 16) = v198;
  uint64_t v109 = v186;
  uint64_t v165 = v108;
  CGFloat v162 = (char *)(v108 + v186);
  id v153 = (id)*MEMORY[0x263F83850];
  uint64_t v110 = (_OWORD *)swift_allocObject();
  v110[1] = v198;
  id v161 = v110;
  CGFloat v160 = (char *)v110 + v109;
  uint64_t v111 = swift_allocObject();
  *(_OWORD *)(v111 + 16) = xmmword_20A8D5CB0;
  double v112 = (void *)*MEMORY[0x263F838B0];
  CGFloat v113 = (void *)*MEMORY[0x263F838C8];
  *(void *)(v111 + 32) = *MEMORY[0x263F838B0];
  *(void *)(v111 + 40) = v113;
  CGFloat v114 = (void *)*MEMORY[0x263F83860];
  uint64_t v159 = v111;
  *(void *)(v111 + 48) = v114;
  uint64_t v115 = swift_allocObject();
  *(_OWORD *)(v115 + 16) = v167;
  *(void *)&long long v167 = v115;
  uint64_t v154 = v115 + v109;
  CGFloat v116 = (void *)*MEMORY[0x263F838A8];
  void *v104 = *MEMORY[0x263F838A8];
  v194(v104, v155, v106);
  uint64_t v117 = swift_allocObject();
  *(_OWORD *)(v117 + 16) = v198;
  double v155 = (uint64_t *)(v117 + 32);
  sub_20A8CB840();
  id v156 = v153;
  id v118 = v112;
  id v119 = v113;
  id v120 = v114;
  id v121 = v116;
  sub_20A8CB830();
  uint64_t v122 = sub_20A8C8F70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 56))(v163, 1, 1, v122);
  id v123 = objc_msgSend(v171, sel_bundleForClass_, v172);
  sub_20A8C2370();

  double v124 = v184;
  sub_20A8C8110();
  v182(v124, 0, 1, v183);
  v179(v188, 1, 1, v180);
  *(void *)(v117 + 56) = v190;
  *(void *)(v117 + 64) = MEMORY[0x263F7E098];
  __swift_allocate_boxed_opaque_existential_1(v155);
  sub_20A8CB8D0();
  v195(v192, v193, v187);
  sub_20A8CBC10();
  BOOL v125 = (void *)*MEMORY[0x263F838A0];
  void *v107 = *MEMORY[0x263F838A0];
  v194(v107, *MEMORY[0x263F7E108], v196);
  uint64_t v126 = swift_allocObject();
  *(_OWORD *)(v126 + 16) = v198;
  uint64_t v127 = qword_26AC6ABB8;
  id v128 = v125;
  if (v127 != -1) {
    swift_once();
  }
  LOBYTE(v199) = 1;
  swift_retain();
  id v129 = objc_msgSend(v171, sel_bundleForClass_, v172);
  sub_20A8C2370();

  sub_20A8C8110();
  v182(v124, 0, 1, v183);
  v179(v188, 1, 1, v180);
  *(void *)(v126 + 56) = v190;
  *(void *)(v126 + 64) = MEMORY[0x263F7E098];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v126 + 32));
  sub_20A8CB8D0();
  v195(v192, v193, v187);
  double v130 = v189;
  sub_20A8CBC10();
  sub_20A8CBC60();
  sub_20A8CBC60();
  uint64_t v131 = swift_allocObject();
  *(_OWORD *)(v131 + 16) = v198;
  uint64_t v185 = v131;
  id v132 = (id)*MEMORY[0x263F838D0];
  sub_20A4A7844((char *)v204, v177, &v202);
  sub_20A8CBC60();
  uint64_t v133 = swift_allocObject();
  *(_OWORD *)(v133 + 16) = v198;
  double v134 = (void *)*MEMORY[0x263F83870];
  *(_OWORD *)(swift_allocObject() + 16) = v198;
  v194(v130, *MEMORY[0x263F7E0F8], v196);
  uint64_t v135 = swift_allocObject();
  *(_OWORD *)(v135 + 16) = v198;
  uint64_t v136 = qword_26AC6ABE0;
  CGFloat v197 = v134;
  if (v136 != -1) {
    swift_once();
  }
  CGFloat v177 = (char *)v133;
  LOBYTE(v199) = 1;
  swift_retain();
  id v137 = objc_msgSend(v171, sel_bundleForClass_, v172);
  sub_20A8C2370();

  v182(v184, 1, 1, v183);
  v179(v188, 1, 1, v180);
  *(void *)(v135 + 56) = v190;
  *(void *)(v135 + 64) = MEMORY[0x263F7E098];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v135 + 32));
  sub_20A8CB8D0();
  v195(v192, v193, v187);
  sub_20A8CBC10();
  uint64_t v138 = MEMORY[0x263F8EE78];
  sub_20A8CBC60();
  uint64_t v139 = sub_20A4AADD8();
  uint64_t v140 = swift_allocObject();
  *(_OWORD *)(v140 + 16) = v198;
  CGFloat v141 = (void *)*MEMORY[0x263F83868];
  *(void *)(v140 + 32) = *MEMORY[0x263F83868];
  *(void *)&long long v199 = v157;
  id v142 = v141;
  double v143 = (uint64_t (*)(void))MEMORY[0x263F7E120];
  sub_20A4ACF00(v158, (uint64_t (*)(void))sub_20A46DD0C, MEMORY[0x263F7E120]);
  sub_20A4ACF00(v165, (uint64_t (*)(void))sub_20A46DD0C, v143);
  sub_20A4ACF00(v185, (uint64_t (*)(void))sub_20A46DD0C, v143);
  sub_20A4ACF00(v138, (uint64_t (*)(void))sub_20A46DD0C, v143);
  sub_20A4ACF00((uint64_t)v177, (uint64_t (*)(void))sub_20A46DD0C, v143);
  sub_20A4ACF00(v139, (uint64_t (*)(void))sub_20A46DD0C, v143);
  sub_20A8CB380();
  (*(void (**)(char *, uint64_t))(v168 + 8))(v169, v170);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v202);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v204);
}

uint64_t sub_20A4A5BA4(void (*a1)(unint64_t, char *, uint64_t))
{
  uint64_t v55 = a1;
  uint64_t v1 = sub_20A8C8390();
  unint64_t v53 = *(void *)(v1 - 8);
  uint64_t v54 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A4AE150(0, (unint64_t *)&unk_26AC6A090, MEMORY[0x263F7D580], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v44 - v6;
  sub_20A4AE39C(0, (unint64_t *)&qword_26763C3C0, (uint64_t (*)(void))sub_20A4AE404, (uint64_t)&type metadata for FeatureControlState, MEMORY[0x263F7D728]);
  MEMORY[0x270FA5388](v8 - 8);
  sub_20A4AE150(0, &qword_26AC69D08, MEMORY[0x263F7D250], v4);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v44 - v10;
  uint64_t v56 = sub_20A8CB920();
  uint64_t v12 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v51 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v44 - v15;
  if (qword_26AC6ABC8 != -1) {
    swift_once();
  }
  char v59 = 0;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v18 = self;
  swift_retain();
  id v49 = v18;
  uint64_t v50 = ObjCClassFromMetadata;
  id v19 = objc_msgSend(v18, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v20 = sub_20A8C8130();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 56);
  uint64_t v48 = v20;
  uint64_t v46 = v21 + 56;
  v47(v11, 1, 1);
  char v58 = 1;
  sub_20A4AE404();
  sub_20A8C9280();
  double v22 = v11;
  uint64_t v23 = sub_20A8C8D90();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  v44[1] = v24 + 56;
  uint64_t v45 = v25;
  v25(v7, 1, 1, v23);
  (*(void (**)(char *, void, uint64_t))(v53 + 104))(v3, *MEMORY[0x263F7D310], v54);
  uint64_t v54 = (uint64_t)v22;
  sub_20A8CB8E0();
  uint64_t v26 = sub_20A46DCA8(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v28 = *(void *)(v26 + 16);
  unint64_t v27 = *(void *)(v26 + 24);
  double v52 = v7;
  if (v28 >= v27 >> 1) {
    uint64_t v26 = sub_20A46DCA8(v27 > 1, v28 + 1, 1, v26);
  }
  *(void *)(v26 + 16) = v28 + 1;
  uint64_t v31 = *(void (**)(unint64_t, char *, uint64_t))(v12 + 32);
  uint64_t v30 = v12 + 32;
  uint64_t v29 = v31;
  unint64_t v32 = (*(unsigned __int8 *)(v30 + 48) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 48);
  uint64_t v33 = *(void *)(v30 + 40);
  uint64_t v34 = v16;
  uint64_t v35 = v56;
  v31(v26 + v32 + v33 * v28, v34, v56);
  __swift_project_boxed_opaque_existential_1(v55, *((void *)v55 + 3));
  if ((sub_20A8C3850() & 1) == 0)
  {
    unint64_t v53 = v32;
    uint64_t v55 = v29;
    uint64_t v36 = sub_20A8CB7E0();
    uint64_t v57 = 0;
    id v37 = objc_msgSend(v49, sel_bundleForClass_, v50, v36);
    sub_20A8C2370();

    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v47)(v54, 1, 1, v48);
    v45(v52, 1, 1, v23);
    uint64_t v38 = v51;
    sub_20A8CB8D0();
    unint64_t v40 = *(void *)(v26 + 16);
    unint64_t v39 = *(void *)(v26 + 24);
    if (v40 >= v39 >> 1) {
      uint64_t v26 = sub_20A46DCA8(v39 > 1, v40 + 1, 1, v26);
    }
    unint64_t v41 = v53;
    *(void *)(v26 + 16) = v40 + 1;
    v55(v26 + v41 + v40 * v33, v38, v35);
  }
  uint64_t v42 = sub_20A4A630C(v26);
  swift_bridgeObjectRelease();
  return v42;
}

uint64_t sub_20A4A6270@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = *a1;
  uint64_t v4 = sub_20A8C8F40();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104);
  uint64_t v6 = (unsigned int *)MEMORY[0x263F7D5F8];
  if (!v3) {
    uint64_t v6 = (unsigned int *)MEMORY[0x263F7D600];
  }
  uint64_t v7 = *v6;

  return v5(a2, v7, v4);
}

uint64_t sub_20A4A62F4(unint64_t a1)
{
  return sub_20A4A6A9C(a1, MEMORY[0x263F7D418]);
}

uint64_t sub_20A4A630C(uint64_t a1)
{
  uint64_t v2 = sub_20A8CB920();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_20A68C774(0, v6, 0);
    uint64_t v7 = v22;
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v8 = v3 + 16;
    uint64_t v9 = v10;
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
    uint64_t v18 = *(void *)(v8 + 56);
    do
    {
      v9(v5, v11, v2);
      uint64_t v22 = v7;
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v12 = *(void *)(v7 + 24);
      if (v13 >= v12 >> 1) {
        sub_20A68C774(v12 > 1, v13 + 1, 1);
      }
      uint64_t v20 = v2;
      uint64_t v21 = MEMORY[0x263F7E098];
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v19);
      v9((char *)boxed_opaque_existential_1, (uint64_t)v5, v2);
      uint64_t v15 = v22;
      *(void *)(v22 + 16) = v13 + 1;
      sub_20A42BEBC(&v19, v15 + 40 * v13 + 32);
      (*(void (**)(char *, uint64_t))(v8 - 8))(v5, v2);
      uint64_t v7 = v22;
      v11 += v18;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_20A4A64DC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_20A8CF540();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t result = sub_20A68C93C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x210527700](i, a1);
        sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FA30);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_20A68C93C(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_20A68C93C(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_20A441D28(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      uint64_t v8 = (id *)(a1 + 32);
      sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FA30);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_20A68C93C(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_20A68C93C(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v11 + 1;
        sub_20A441D28(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A4A6740(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_20A8CF540();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t result = sub_20A68CA4C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v18;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      uint64_t v6 = MEMORY[0x263F7D410];
      do
      {
        uint64_t v7 = MEMORY[0x210527700](v5, a1);
        uint64_t v18 = v3;
        unint64_t v9 = *(void *)(v3 + 16);
        unint64_t v8 = *(void *)(v3 + 24);
        if (v9 >= v8 >> 1)
        {
          sub_20A68CA4C(v8 > 1, v9 + 1, 1);
          uint64_t v3 = v18;
        }
        ++v5;
        uint64_t v16 = sub_20A8C8720();
        uint64_t v17 = v6;
        *(void *)&long long v15 = v7;
        *(void *)(v3 + 16) = v9 + 1;
        sub_20A42BEBC(&v15, v3 + 40 * v9 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      unint64_t v10 = (uint64_t *)(a1 + 32);
      uint64_t v11 = MEMORY[0x263F7D410];
      do
      {
        uint64_t v12 = *v10;
        uint64_t v18 = v3;
        unint64_t v13 = *(void *)(v3 + 16);
        unint64_t v14 = *(void *)(v3 + 24);
        swift_retain();
        if (v13 >= v14 >> 1)
        {
          sub_20A68CA4C(v14 > 1, v13 + 1, 1);
          uint64_t v3 = v18;
        }
        uint64_t v16 = sub_20A8C8720();
        uint64_t v17 = v11;
        *(void *)&long long v15 = v12;
        *(void *)(v3 + 16) = v13 + 1;
        sub_20A42BEBC(&v15, v3 + 40 * v13 + 32);
        ++v10;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A4A690C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_20A68C5C4(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v5 = MEMORY[0x263F7D750];
    do
    {
      sub_20A4342F4(v4, (uint64_t)v9);
      sub_20A4301D4(0, (unint64_t *)&qword_26AC6A1F0);
      sub_20A4AE23C(0, &qword_26AC6A1F8, (unint64_t *)&qword_26AC6A1F0, v5, MEMORY[0x263F8D8F0]);
      swift_dynamicCast();
      uint64_t v2 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C5C4(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v11;
      }
      unint64_t v7 = *(void *)(v2 + 16);
      unint64_t v6 = *(void *)(v2 + 24);
      if (v7 >= v6 >> 1)
      {
        sub_20A68C5C4(v6 > 1, v7 + 1, 1);
        uint64_t v2 = v11;
      }
      *(void *)(v2 + 16) = v7 + 1;
      sub_20A4AE458((uint64_t)v10, v2 + 40 * v7 + 32);
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_20A4A6A84(unint64_t a1)
{
  return sub_20A4A6A9C(a1, MEMORY[0x263F7D4D8]);
}

uint64_t sub_20A4A6A9C(unint64_t a1, void (*a2)(void))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_20A8CF540();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (!v4) {
    return v5;
  }
  uint64_t v15 = MEMORY[0x263F8EE78];
  uint64_t result = sub_20A68C5C4(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v7 = 0;
      uint64_t v8 = MEMORY[0x263F7D750];
      do
      {
        MEMORY[0x210527700](v7, a1);
        a2(0);
        sub_20A4AE23C(0, &qword_26AC6A1F8, (unint64_t *)&qword_26AC6A1F0, v8, MEMORY[0x263F8D8F0]);
        swift_dynamicCast();
        uint64_t v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_20A68C5C4(0, *(void *)(v5 + 16) + 1, 1);
          uint64_t v5 = v15;
        }
        unint64_t v10 = *(void *)(v5 + 16);
        unint64_t v9 = *(void *)(v5 + 24);
        if (v10 >= v9 >> 1)
        {
          sub_20A68C5C4(v9 > 1, v10 + 1, 1);
          uint64_t v5 = v15;
        }
        ++v7;
        *(void *)(v5 + 16) = v10 + 1;
        sub_20A4AE458((uint64_t)v14, v5 + 40 * v10 + 32);
      }
      while (v4 != v7);
    }
    else
    {
      unint64_t v11 = a1 + 32;
      a2(0);
      sub_20A4AE23C(0, &qword_26AC6A1F8, (unint64_t *)&qword_26AC6A1F0, MEMORY[0x263F7D750], MEMORY[0x263F8D8F0]);
      do
      {
        swift_retain();
        swift_dynamicCast();
        uint64_t v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_20A68C5C4(0, *(void *)(v5 + 16) + 1, 1);
          uint64_t v5 = v15;
        }
        unint64_t v13 = *(void *)(v5 + 16);
        unint64_t v12 = *(void *)(v5 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_20A68C5C4(v12 > 1, v13 + 1, 1);
          uint64_t v5 = v15;
        }
        *(void *)(v5 + 16) = v13 + 1;
        sub_20A4AE458((uint64_t)v14, v5 + 40 * v13 + 32);
        v11 += 8;
        --v4;
      }
      while (v4);
    }
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A4A6D4C()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t sub_20A4A6E54(void *a1)
{
  uint64_t v45 = a1;
  uint64_t v1 = sub_20A8CBC40();
  uint64_t v39 = *(void *)(v1 - 8);
  uint64_t v40 = v1;
  MEMORY[0x270FA5388](v1);
  unint64_t v41 = (char *)v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A4AE150(0, &qword_26AC82C38, MEMORY[0x263F7D588], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v47 = (char *)v38 - v5;
  uint64_t v6 = sub_20A8CBC00();
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v46 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_20A8C8390();
  uint64_t v8 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v44 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  unint64_t v12 = (char *)v38 - v11;
  sub_20A4AE150(0, (unint64_t *)&unk_26AC6A090, MEMORY[0x263F7D580], v3);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v38 - v14;
  sub_20A4AE150(0, &qword_26AC69D08, MEMORY[0x263F7D250], v3);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v38 - v17;
  sub_20A4AE39C(0, &qword_26AC81908, (uint64_t (*)(void))sub_20A4AE348, (uint64_t)&type metadata for WatchlistCommandState, MEMORY[0x263F7D5B0]);
  MEMORY[0x270FA5388](v19 - 8);
  sub_20A4AE150(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], v3);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)v38 - v21;
  sub_20A4AE23C(0, &qword_26AC82D88, &qword_26AC82D50, MEMORY[0x263F7D308], MEMORY[0x263F8E0F8]);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_20A8D4540;
  if (qword_26AC6AC40 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_20A8C3F00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v22, 1, 1, v24);
  LOWORD(v49) = 1;
  uint64_t v50 = 0;
  sub_20A4AE348();
  swift_retain();
  sub_20A8C8E00();
  sub_20A8C8110();
  uint64_t v25 = sub_20A8C8130();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v18, 0, 1, v25);
  uint64_t v26 = sub_20A8C8D90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v15, 1, 1, v26);
  unint64_t v27 = *(void (**)(char *, void, uint64_t))(v8 + 104);
  v27(v12, *MEMORY[0x263F7D310], v48);
  uint64_t v28 = sub_20A8CB920();
  uint64_t v29 = MEMORY[0x263F7E098];
  *(void *)(v23 + 56) = v28;
  *(void *)(v23 + 64) = v29;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v23 + 32));
  sub_20A8CB8F0();
  if (qword_26AC6ABF8 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v31 = self;
  swift_retain();
  id v32 = objc_msgSend(v31, sel_bundleForClass_, ObjCClassFromMetadata);
  v38[1] = sub_20A8C2370();

  (*(void (**)(char *, void, uint64_t))(v42 + 104))(v46, *MEMORY[0x263F7E0E8], v43);
  v27(v44, *MEMORY[0x263F7D318], v48);
  uint64_t v33 = v47;
  sub_20A8C8DA0();
  uint64_t v34 = sub_20A8C8DB0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 0, 1, v34);
  __swift_project_boxed_opaque_existential_1(v45, v45[3]);
  type metadata accessor for WatchlistMembershipMenuGroupOptionProvider();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v49 = result;
    (*(void (**)(char *, void, uint64_t))(v39 + 104))(v41, *MEMORY[0x263F7E100], v40);
    uint64_t v36 = sub_20A8CBC50();
    uint64_t v37 = MEMORY[0x263F7E118];
    *(void *)(v23 + 96) = v36;
    *(void *)(v23 + 104) = v37;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v23 + 72));
    sub_20A4AE708(&qword_26AC82CA0, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipMenuGroupOptionProvider);
    sub_20A8CBC30();
    return v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A4A76C8()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t sub_20A4A7844(char *a1, char *a2, void *a3)
{
  uint64_t v131 = a3;
  CGFloat v141 = a2;
  uint64_t v139 = a1;
  uint64_t v140 = sub_20A8CBC50();
  uint64_t v3 = *(void *)(v140 - 8);
  MEMORY[0x270FA5388](v140);
  BOOL v125 = (char *)&v123 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  double v124 = (char *)&v123 - v6;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A4AE150(0, &qword_26AC82C38, MEMORY[0x263F7D588], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v138 = (uint64_t *)((char *)&v123 - v9);
  uint64_t v145 = sub_20A8C8390();
  uint64_t v136 = *(void *)(v145 - 8);
  MEMORY[0x270FA5388](v145);
  *(void *)&long long v137 = (char *)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4AE2A8();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v135 = (char *)&v123 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_20A8CBC00();
  uint64_t v148 = *(void *)(v161 - 8);
  MEMORY[0x270FA5388](v161);
  id v142 = (char *)&v123 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4AE150(0, (unint64_t *)&unk_26AC6A090, MEMORY[0x263F7D580], v7);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v123 - v15;
  sub_20A4AE150(0, &qword_26AC69D08, MEMORY[0x263F7D250], v7);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v123 - v18;
  uint64_t v20 = sub_20A8CBC40();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v123 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4AE150(0, &qword_26AC82D90, MEMORY[0x263F7E120], MEMORY[0x263F8E0F8]);
  uint64_t v24 = *(void *)(v3 + 72);
  uint64_t v126 = v3;
  uint64_t v25 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v26 = (v25 + 32) & ~v25;
  uint64_t v155 = v24;
  uint64_t v128 = v27;
  uint64_t v127 = v25 | 7;
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_20A8D8000;
  uint64_t v130 = v28;
  uint64_t v129 = v26;
  uint64_t v150 = v28 + v26;
  uint64_t v29 = *MEMORY[0x263F7E110];
  uint64_t v30 = *(void (**)(void *))(v21 + 104);
  double v143 = v23;
  uint64_t v160 = v20;
  id v156 = v30;
  uint64_t v157 = v21 + 104;
  ((void (*)(char *, uint64_t, uint64_t))v30)(v23, v29, v20);
  sub_20A4AE23C(0, &qword_26AC82D88, &qword_26AC82D50, MEMORY[0x263F7D308], MEMORY[0x263F8E0F8]);
  uint64_t v147 = v31;
  uint64_t v32 = swift_allocObject();
  long long v146 = xmmword_20A8D3DC0;
  *(_OWORD *)(v32 + 16) = xmmword_20A8D3DC0;
  if (qword_26AC6ABB0 != -1) {
    swift_once();
  }
  LOBYTE(v166) = 1;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v149 = ObjCClassFromMetadata;
  uint64_t v34 = self;
  id v151 = v34;
  swift_retain();
  id v35 = objc_msgSend(v34, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  sub_20A8C8110();
  uint64_t v159 = sub_20A8C8130();
  uint64_t v36 = *(void *)(v159 - 8);
  uint64_t v165 = *(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56);
  uint64_t v158 = v36 + 56;
  v165(v19, 0, 1, v159);
  uint64_t v164 = sub_20A8C8D90();
  uint64_t v37 = *(void *)(v164 - 8);
  id v163 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
  uint64_t v38 = v37 + 56;
  double v144 = v16;
  v163(v16, 1, 1, v164);
  uint64_t v154 = v38;
  uint64_t v162 = sub_20A8CB920();
  uint64_t v39 = MEMORY[0x263F7E098];
  *(void *)(v32 + 56) = v162;
  *(void *)(v32 + 64) = v39;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v32 + 32));
  sub_20A8CB8D0();
  unsigned int v153 = *MEMORY[0x263F7E0E0];
  uint64_t v40 = v19;
  uint64_t v41 = v148 + 104;
  uint64_t v152 = *(void (**)(char *))(v148 + 104);
  uint64_t v42 = v142;
  v152(v142);
  uint64_t v43 = v150;
  uint64_t v44 = v143;
  sub_20A8CBC10();
  uint64_t v133 = v43 + v155;
  uint64_t v45 = (void *)*MEMORY[0x263F838C0];
  void *v44 = *MEMORY[0x263F838C0];
  LODWORD(v134) = *MEMORY[0x263F7E108];
  v156(v44);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = v146;
  id v132 = v45;
  sub_20A8CB820();
  LOBYTE(v166) = 1;
  char v167 = 0;
  sub_20A8C8E00();
  sub_20A8C8110();
  v165(v40, 0, 1, v159);
  v163(v144, 1, 1, v164);
  (*(void (**)(void, void, uint64_t))(v136 + 104))(v137, *MEMORY[0x263F7D310], v145);
  *(void *)(v46 + 56) = v162;
  *(void *)(v46 + 64) = MEMORY[0x263F7E098];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v46 + 32));
  sub_20A8CB8F0();
  ((void (*)(char *, void, uint64_t))v152)(v42, v153, v161);
  sub_20A8CBC10();
  uint64_t v145 = v150 + 2 * v155;
  uint64_t v47 = v132;
  void *v44 = v132;
  ((void (*)(void *, void, uint64_t))v156)(v44, v134, v160);
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = v146;
  *(void *)&long long v137 = v48 + 32;
  sub_20A8CB840();
  id v49 = v47;
  sub_20A8CB680();
  LOBYTE(v166) = 1;
  id v50 = objc_msgSend(v151, sel_bundleForClass_, v149);
  sub_20A8C2370();

  sub_20A8C8110();
  v165(v40, 0, 1, v159);
  v163(v144, 1, 1, v164);
  *(void *)(v48 + 56) = v162;
  *(void *)(v48 + 64) = MEMORY[0x263F7E098];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)v137);
  sub_20A8CB8D0();
  uint64_t v51 = v153;
  uint64_t v52 = v161;
  unint64_t v53 = (void (*)(char *, uint64_t, uint64_t))v152;
  ((void (*)(char *, void, uint64_t))v152)(v42, v153, v161);
  sub_20A8CBC10();
  sub_20A4A95D8(v139);
  LODWORD(v145) = *MEMORY[0x263F7E100];
  v156(v44);
  uint64_t v148 = v41;
  v53(v42, v51, v52);
  sub_20A8CBC10();
  uint64_t v54 = swift_allocObject();
  long long v137 = xmmword_20A8D5CB0;
  *(_OWORD *)(v54 + 16) = xmmword_20A8D5CB0;
  uint64_t v55 = v144;
  if (qword_26AC6AC58 != -1) {
    swift_once();
  }
  char v167 = 1;
  swift_retain();
  id v56 = objc_msgSend(v151, sel_bundleForClass_, v149);
  uint64_t v57 = sub_20A8C2370();
  uint64_t v59 = v58;

  *(void *)&long long v166 = v57;
  *((void *)&v166 + 1) = v59;
  sub_20A8CE480();
  sub_20A8CE280();
  sub_20A8C8120();
  v165(v40, 0, 1, v159);
  v163(v55, 1, 1, v164);
  *(void *)(v54 + 56) = v162;
  *(void *)(v54 + 64) = MEMORY[0x263F7E098];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v54 + 32));
  sub_20A8CB8D0();
  uint64_t v60 = v40;
  if (qword_26AC6AC00 != -1) {
    swift_once();
  }
  char v167 = 1;
  swift_retain();
  uint64_t v61 = v149;
  id v62 = objc_msgSend(v151, sel_bundleForClass_, v149);
  uint64_t v63 = sub_20A8C2370();
  uint64_t v65 = v64;

  *(void *)&long long v166 = v63;
  *((void *)&v166 + 1) = v65;
  sub_20A8CE480();
  sub_20A8CE280();
  sub_20A8C8120();
  v165(v60, 0, 1, v159);
  v163(v55, 1, 1, v164);
  *(void *)(v54 + 96) = v162;
  *(void *)(v54 + 104) = MEMORY[0x263F7E098];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v54 + 72));
  uint64_t v139 = v60;
  sub_20A8CB8D0();
  if (qword_26AC6AC30 != -1) {
    swift_once();
  }
  uint64_t v136 = qword_26AC9E8D8;
  swift_retain();
  id v66 = objc_msgSend(v151, sel_bundleForClass_, v61);
  uint64_t v67 = sub_20A8C2370();
  uint64_t v69 = v68;

  *(void *)&long long v166 = v67;
  *((void *)&v166 + 1) = v69;
  uint64_t v135 = (char *)sub_20A8CE480();
  uint64_t v134 = v70;
  uint64_t v71 = v138;
  sub_20A8C8DA0();
  uint64_t v72 = sub_20A8C8DB0();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v71, 0, 1, v72);
  __swift_project_boxed_opaque_existential_1(v141, *((void *)v141 + 3));
  type metadata accessor for GoToWatchlistMenuGroupOptionProvider();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v133 = 4 * v155;
    id v132 = (id)(v150 + 4 * v155);
    *(void *)&long long v166 = result;
    uint64_t v74 = v143;
    ((void (*)(void *, void, uint64_t))v156)(v143, v145, v160);
    id v75 = v142;
    id v76 = v152;
    ((void (*)(char *, void, uint64_t))v152)(v142, v153, v161);
    uint64_t v77 = MEMORY[0x263F7E118];
    *(void *)(v54 + 136) = v140;
    *(void *)(v54 + 144) = v77;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v54 + 112));
    sub_20A4AE708(&qword_26AC82C58, (void (*)(uint64_t))type metadata accessor for GoToWatchlistMenuGroupOptionProvider);
    sub_20A8CBC20();
    uint64_t v78 = v145;
    uint64_t v79 = v160;
    uint64_t v80 = (void (*)(void *, uint64_t, uint64_t))v156;
    ((void (*)(void *, void, uint64_t))v156)(v74, v145, v160);
    uint64_t v81 = v75;
    uint64_t v82 = v75;
    uint64_t v83 = v153;
    ((void (*)(char *, void, uint64_t))v76)(v82, v153, v161);
    sub_20A8CBC10();
    uint64_t v84 = v155;
    uint64_t v85 = v150;
    uint64_t v136 = v150 + v133 + v155;
    uint64_t v138 = (uint64_t *)sub_20A4A9BC4();
    v80(v74, v78, v79);
    uint64_t v86 = v161;
    long long v87 = (void (*)(char *, uint64_t, uint64_t))v152;
    ((void (*)(char *, uint64_t, uint64_t))v152)(v81, v83, v161);
    sub_20A8CBC10();
    uint64_t v138 = (uint64_t *)(v85 + 6 * v84);
    CGFloat v141 = (char *)sub_20A4A9F80(v141);
    v80(v74, v145, v160);
    v87(v81, v83, v86);
    sub_20A8CBC10();
    uint64_t v150 = v85 - v84 + 8 * v84;
    uint64_t v88 = swift_allocObject();
    *(_OWORD *)(v88 + 16) = v137;
    CGFloat v141 = (char *)sub_20A8CB620();
    *(void *)&long long v166 = 0;
    id v89 = v151;
    id v90 = objc_msgSend(v151, sel_bundleForClass_, v149);
    sub_20A8C2370();

    uint64_t v91 = v139;
    sub_20A8C8110();
    uint64_t v92 = v159;
    v165(v91, 0, 1, v159);
    long long v93 = v144;
    v163(v144, 1, 1, v164);
    *(void *)(v88 + 56) = v162;
    *(void *)(v88 + 64) = MEMORY[0x263F7E098];
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v88 + 32));
    sub_20A8CB8D0();
    uint64_t v138 = (uint64_t *)(v88 + 72);
    CGFloat v141 = (char *)sub_20A8CB600();
    *(void *)&long long v166 = 0;
    uint64_t v94 = v149;
    id v95 = objc_msgSend(v89, sel_bundleForClass_, v149);
    *(void *)&long long v137 = sub_20A8C2370();
    uint64_t v136 = v96;

    sub_20A8C8110();
    v165(v91, 0, 1, v92);
    sub_20A8CB5E0();
    uint64_t v97 = v94;
    id v98 = objc_msgSend(v89, sel_bundleForClass_, v94);
    sub_20A8C2370();

    sub_20A8C8D80();
    v163(v93, 0, 1, v164);
    *(void *)(v88 + 96) = v162;
    *(void *)(v88 + 104) = MEMORY[0x263F7E098];
    __swift_allocate_boxed_opaque_existential_1(v138);
    sub_20A8CB8D0();
    uint64_t v138 = (uint64_t *)(v88 + 112);
    CGFloat v141 = (char *)sub_20A8CB610();
    *(void *)&long long v166 = 0;
    id v99 = objc_msgSend(v89, sel_bundleForClass_, v97);
    sub_20A8C2370();
    *(void *)&long long v137 = v100;

    sub_20A8C8110();
    v165(v91, 0, 1, v159);
    sub_20A8CB5F0();
    id v101 = objc_msgSend(v89, sel_bundleForClass_, v97);
    sub_20A8C2370();

    uint64_t v102 = v160;
    double v103 = v142;
    sub_20A8C8D80();
    v163(v93, 0, 1, v164);
    *(void *)(v88 + 136) = v162;
    *(void *)(v88 + 144) = MEMORY[0x263F7E098];
    __swift_allocate_boxed_opaque_existential_1(v138);
    uint64_t v104 = v161;
    sub_20A8CB8D0();
    ((void (*)(void *, void, uint64_t))v156)(v143, v145, v102);
    ((void (*)(char *, void, uint64_t))v152)(v103, v153, v104);
    sub_20A8CBC10();
    uint64_t v105 = v131;
    __swift_project_boxed_opaque_existential_1(v131, v131[3]);
    if (sub_20A8C3520())
    {
      uint64_t v106 = swift_allocObject();
      *(_OWORD *)(v106 + 16) = v146;
      if (qword_26AC6ABA0 != -1) {
        swift_once();
      }
      char v167 = 1;
      sub_20A4342F4((uint64_t)v105, (uint64_t)&v166);
      uint64_t v107 = swift_allocObject();
      sub_20A42BEBC(&v166, v107 + 16);
      v165(v139, 1, 1, v159);
      v163(v93, 1, 1, v164);
      *(void *)(v106 + 56) = v162;
      *(void *)(v106 + 64) = MEMORY[0x263F7E098];
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v106 + 32));
      swift_retain();
      sub_20A8CB8C0();
      ((void (*)(void *, void, uint64_t))v156)(v143, v145, v102);
      ((void (*)(char *, void, uint64_t))v152)(v103, v153, v104);
      uint64_t v108 = v124;
      sub_20A8CBC10();
      uint64_t v109 = v126;
      uint64_t v110 = v125;
      (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v125, v108, v140);
      uint64_t v111 = v130;
      unint64_t v113 = *(void *)(v130 + 16);
      unint64_t v112 = *(void *)(v130 + 24);
      if (v113 >= v112 >> 1) {
        uint64_t v111 = sub_20A46DD0C(v112 > 1, v113 + 1, 1, v130);
      }
      uint64_t v114 = v129;
      uint64_t v115 = v155;
      *(void *)(v111 + 16) = v113 + 1;
      uint64_t v116 = v140;
      (*(void (**)(unint64_t, char *, uint64_t))(v109 + 32))(v111 + v114 + v113 * v115, v110, v140);
      (*(void (**)(char *, uint64_t))(v109 + 8))(v108, v116);
    }
    uint64_t v117 = swift_allocObject();
    *(_OWORD *)(v117 + 16) = v146;
    id v118 = (void *)*MEMORY[0x263F838D0];
    sub_20A4AE150(0, &qword_26AC82D98, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, MEMORY[0x263F8E0F8]);
    uint64_t v119 = swift_allocObject();
    *(_OWORD *)(v119 + 16) = v146;
    id v120 = (void *)*MEMORY[0x263F83898];
    *(void *)(v119 + 32) = *MEMORY[0x263F83898];
    id v121 = v118;
    id v122 = v120;
    sub_20A8CBC60();
    return v117;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A4A94E8()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

void *sub_20A4A95D8(void *a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A4AE150(0, (unint64_t *)&unk_26AC6A090, MEMORY[0x263F7D580], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v36 - v4;
  sub_20A4AE150(0, &qword_26AC69D08, MEMORY[0x263F7D250], v2);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v36 - v7;
  uint64_t v9 = sub_20A8CB920();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v36 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (sub_20A8C3850()) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v45 = v12;
  uint64_t v46 = v10;
  sub_20A8CB7F0();
  LOBYTE(v47) = 2;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v18 = self;
  uint64_t v44 = ObjCClassFromMetadata;
  id v19 = objc_msgSend(v18, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  sub_20A8CE280();
  sub_20A8C8120();
  uint64_t v20 = sub_20A8C8130();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v42 = *(void (**)(char *, void, uint64_t))(v21 + 56);
  uint64_t v43 = v20;
  uint64_t v41 = v21 + 56;
  v42(v8, 0, 1);
  uint64_t v22 = sub_20A8C8D90();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 56);
  uint64_t v40 = v22;
  uint64_t v38 = v23 + 56;
  v39(v5, 1, 1);
  sub_20A8CB8D0();
  uint64_t v16 = sub_20A46DCF0(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v25 = v16[2];
  unint64_t v24 = v16[3];
  if (v25 >= v24 >> 1) {
    uint64_t v16 = sub_20A46DCF0((void *)(v24 > 1), v25 + 1, 1, v16);
  }
  uint64_t v48 = v9;
  uint64_t v49 = MEMORY[0x263F7E098];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v47);
  uint64_t v27 = v46;
  uint64_t v37 = *(void (**)(uint64_t *, char *, uint64_t))(v46 + 16);
  v37(boxed_opaque_existential_1, v15, v9);
  void v16[2] = v25 + 1;
  sub_20A42BEBC(&v47, (uint64_t)&v16[5 * v25 + 4]);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v46 = v27 + 8;
  v28(v15, v9);
  uint64_t v29 = v28;
  sub_20A8CB800();
  LOBYTE(v47) = 2;
  id v30 = objc_msgSend(v18, sel_bundleForClass_, v44);
  sub_20A8C2370();

  sub_20A8CE280();
  sub_20A8C8120();
  ((void (*)(char *, void, uint64_t, uint64_t))v42)(v8, 0, 1, v43);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v39)(v5, 1, 1, v40);
  uint64_t v31 = v45;
  sub_20A8CB8D0();
  unint64_t v33 = v16[2];
  unint64_t v32 = v16[3];
  if (v33 >= v32 >> 1) {
    uint64_t v16 = sub_20A46DCF0((void *)(v32 > 1), v33 + 1, 1, v16);
  }
  uint64_t v48 = v9;
  uint64_t v49 = MEMORY[0x263F7E098];
  uint64_t v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v47);
  v37(v34, v31, v9);
  void v16[2] = v33 + 1;
  sub_20A42BEBC(&v47, (uint64_t)&v16[5 * v33 + 4]);
  v29(v31, v9);
  return v16;
}

uint64_t sub_20A4A9BA0()
{
  return sub_20A8C40A0();
}

uint64_t sub_20A4A9BC4()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A4AE150(0, (unint64_t *)&unk_26AC6A090, MEMORY[0x263F7D580], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v20 - v2;
  sub_20A4AE150(0, &qword_26AC69D08, MEMORY[0x263F7D250], v0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v20 - v5;
  uint64_t v7 = sub_20A8C8390();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4AE23C(0, &qword_26AC82D88, &qword_26AC82D50, MEMORY[0x263F7D308], MEMORY[0x263F8E0F8]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_20A8D3DC0;
  if (qword_26AC6AB98 != -1) {
    swift_once();
  }
  uint64_t v20 = (uint64_t *)(v11 + 32);
  char v21 = 1;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v13 = self;
  swift_retain();
  id v14 = objc_msgSend(v13, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7D318], v7);
  uint64_t v15 = sub_20A8C8130();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
  uint64_t v16 = sub_20A8C8D90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v3, 1, 1, v16);
  uint64_t v17 = sub_20A8CB920();
  uint64_t v18 = MEMORY[0x263F7E098];
  *(void *)(v11 + 56) = v17;
  *(void *)(v11 + 64) = v18;
  __swift_allocate_boxed_opaque_existential_1(v20);
  sub_20A8CB900();
  return v11;
}

uint64_t sub_20A4A9F80(char *a1)
{
  uint64_t v89 = sub_20A8CBC40();
  uint64_t v93 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v3 = (char *)v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4AE150(0, &qword_26AC82C38, MEMORY[0x263F7D588], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v77 = (char *)v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v84 = (char *)v64 - v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v88 = (char *)v64 - v9;
  uint64_t v10 = sub_20A8C8390();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v76 = (char *)v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v83 = (char *)v64 - v14;
  MEMORY[0x270FA5388](v15);
  long long v87 = (uint64_t *)((char *)v64 - v16);
  uint64_t v17 = sub_20A8CBC00();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  id v75 = (char *)v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v78 = (char *)v64 - v21;
  MEMORY[0x270FA5388](v22);
  unint64_t v24 = (char *)v64 - v23;
  sub_20A4AE23C(0, &qword_26AC82D88, &qword_26AC82D50, MEMORY[0x263F7D308], MEMORY[0x263F8E0F8]);
  uint64_t v26 = v25;
  uint64_t v27 = swift_allocObject();
  long long v86 = xmmword_20A8D4540;
  uint64_t v74 = v27;
  *(_OWORD *)(v27 + 16) = xmmword_20A8D4540;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v66 = self;
  uint64_t v67 = ObjCClassFromMetadata;
  id v29 = objc_msgSend(v66, sel_bundleForClass_, ObjCClassFromMetadata);
  v64[3] = (uint64_t *)sub_20A8C2370();
  v64[2] = v30;

  unsigned int v31 = *MEMORY[0x263F7E0E8];
  unint64_t v32 = *(void (**)(char *))(v18 + 104);
  uint64_t v68 = v24;
  unsigned int v65 = v31;
  uint64_t v91 = v18 + 104;
  uint64_t v92 = v17;
  id v90 = v32;
  v32(v24);
  uint64_t v69 = v26;
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v86;
  if (qword_26AC6AC20 != -1) {
    swift_once();
  }
  uint64_t v34 = *(void (**)(void))(v11 + 104);
  unsigned int v82 = *MEMORY[0x263F7D318];
  uint64_t v85 = v11 + 104;
  uint64_t v81 = (void (*)(char *, void, void))v34;
  v34(v87);
  id v35 = (uint64_t *)sub_20A8C8DB0();
  uint64_t v36 = *(v35 - 1);
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t *))(v36 + 56);
  uint64_t v79 = v36 + 56;
  uint64_t v80 = v37;
  v37(v88, 1, 1, v35);
  __swift_project_boxed_opaque_existential_1((char *)a1, a1[3]);
  type metadata accessor for SortWatchlistMenuGroupOptionProvider();
  *(void *)&long long v86 = v10;
  swift_retain();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v94 = result;
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v93 + 104);
  uint64_t v40 = v3;
  unsigned int v70 = *MEMORY[0x263F7E100];
  v93 += 104;
  uint64_t v73 = v39;
  ((void (*)(char *))v39)(v3);
  uint64_t v41 = v78;
  unsigned int v71 = *MEMORY[0x263F7E0E0];
  v90(v78);
  uint64_t v42 = sub_20A8CBC50();
  uint64_t v43 = MEMORY[0x263F7E118];
  uint64_t v72 = v42;
  *(void *)(v33 + 56) = v42;
  *(void *)(v33 + 64) = v43;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v33 + 32));
  sub_20A4AE708(&qword_26AC82C70, (void (*)(uint64_t))type metadata accessor for SortWatchlistMenuGroupOptionProvider);
  sub_20A8CBC30();
  uint64_t v44 = (uint64_t *)qword_26AC9EA28;
  v81(v83, v82, v86);
  long long v87 = v35;
  v80(v84, 1, 1, v35);
  uint64_t v45 = a1[3];
  uint64_t v88 = (char *)a1;
  __swift_project_boxed_opaque_existential_1((char *)a1, v45);
  type metadata accessor for OrderWatchlistMenuGroupOptionProvider();
  v64[1] = v44;
  swift_retain();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v46 = v74;
  v64[0] = (uint64_t *)(v74 + 32);
  uint64_t v94 = result;
  uint64_t v47 = v70;
  uint64_t v48 = v89;
  uint64_t v49 = v73;
  v73(v40, v70, v89);
  ((void (*)(char *, void, uint64_t))v90)(v41, v71, v92);
  uint64_t v50 = v72;
  *(void *)(v33 + 96) = v72;
  *(void *)(v33 + 104) = MEMORY[0x263F7E118];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v33 + 72));
  sub_20A4AE708(&qword_26AC82C88, (void (*)(uint64_t))type metadata accessor for OrderWatchlistMenuGroupOptionProvider);
  sub_20A8CBC30();
  v49(v40, v47, v48);
  *(void *)(v46 + 56) = v50;
  *(void *)(v46 + 64) = MEMORY[0x263F7E118];
  __swift_allocate_boxed_opaque_existential_1(v64[0]);
  sub_20A8CBC10();
  id v51 = objc_msgSend(v66, sel_bundleForClass_, v67);
  uint64_t v52 = sub_20A8C2370();
  uint64_t v83 = v53;
  uint64_t v84 = (char *)v52;

  ((void (*)(char *, void, uint64_t))v90)(v75, v65, v92);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_20A8D3DC0;
  uint64_t v55 = v48;
  uint64_t v57 = v76;
  id v56 = v77;
  uint64_t v58 = v40;
  if (qword_26AC6AC08 != -1) {
    swift_once();
  }
  uint64_t v59 = (void *)qword_26AC9EA18;
  v81(v57, v82, v86);
  v80(v56, 1, 1, v87);
  __swift_project_boxed_opaque_existential_1(v88, *((void *)v88 + 3));
  type metadata accessor for ChangeWatchlistDisplayMenuGroupOptionProvider();
  uint64_t v88 = (char *)v59;
  swift_retain();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v60 = v74;
    long long v87 = (uint64_t *)(v74 + 72);
    uint64_t v94 = result;
    uint64_t v61 = v70;
    id v62 = v73;
    v73(v58, v70, v55);
    ((void (*)(char *, void, uint64_t))v90)(v78, v71, v92);
    uint64_t v63 = v72;
    *(void *)(v54 + 56) = v72;
    *(void *)(v54 + 64) = MEMORY[0x263F7E118];
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v54 + 32));
    sub_20A4AE708(&qword_26AC82CB0, (void (*)(uint64_t))type metadata accessor for ChangeWatchlistDisplayMenuGroupOptionProvider);
    sub_20A8CBC30();
    v62(v58, v61, v89);
    *(void *)(v60 + 96) = v63;
    *(void *)(v60 + 104) = MEMORY[0x263F7E118];
    __swift_allocate_boxed_opaque_existential_1(v87);
    sub_20A8CBC10();
    return v60;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20A4AAB38(uint64_t a1)
{
  return sub_20A4AAC84(a1, (void (*)(void))type metadata accessor for SortWatchlistCommandContext, MEMORY[0x263F7ABC0]);
}

uint64_t sub_20A4AAB64()
{
  uint64_t v0 = sub_20A8C3480();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SortWatchlistCommandContext(0);
  sub_20A8C3490();
  uint64_t v4 = sub_20A8C3450();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_20A4AAC58(uint64_t a1)
{
  return sub_20A4AAC84(a1, (void (*)(void))type metadata accessor for ChangeWatchlistDisplayContext, MEMORY[0x263F7AB80]);
}

uint64_t sub_20A4AAC84(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_20A4AACC4(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A8C3500();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = sub_20A8C2370();

  return v4;
}

uint64_t sub_20A4AADD8()
{
  uint64_t v0 = sub_20A8CBC00();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A4AE150(0, (unint64_t *)&unk_26AC6A090, MEMORY[0x263F7D580], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v34 - v6;
  sub_20A4AE150(0, &qword_26AC69D08, MEMORY[0x263F7D250], v4);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v34 - v9;
  uint64_t v11 = sub_20A8CBC40();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C5AC0();
  if ((sub_20A8C5AB0() & 1) == 0) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v40 = v7;
  uint64_t v41 = v1;
  uint64_t v42 = v0;
  sub_20A4AE150(0, &qword_26AC82D90, MEMORY[0x263F7E120], MEMORY[0x263F8E0F8]);
  uint64_t v38 = sub_20A8CBC50();
  unint64_t v15 = (*(unsigned __int8 *)(*(void *)(v38 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v38 - 8) + 80);
  uint64_t v16 = swift_allocObject();
  long long v43 = xmmword_20A8D3DC0;
  *(_OWORD *)(v16 + 16) = xmmword_20A8D3DC0;
  unint64_t v39 = v16 + v15;
  sub_20A4AE23C(0, &qword_26AC82D88, &qword_26AC82D50, MEMORY[0x263F7D308], MEMORY[0x263F8E0F8]);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = v43;
  uint64_t v36 = (uint64_t *)(v17 + 32);
  uint64_t v18 = *MEMORY[0x263F7E110];
  uint64_t v19 = *(void (**)(char *, void, uint64_t))(v12 + 104);
  v34[1] = v12 + 104;
  uint64_t v37 = v19;
  v19(v14, v18, v11);
  uint64_t v20 = swift_allocObject();
  uint64_t v35 = v11;
  uint64_t v21 = v20;
  *(_OWORD *)(v20 + 16) = v43;
  *(void *)&long long v43 = v20 + 32;
  if (qword_26AC6ABC0 != -1) {
    swift_once();
  }
  char v44 = 1;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v23 = self;
  swift_retain();
  id v24 = objc_msgSend(v23, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  sub_20A8C8110();
  uint64_t v25 = sub_20A8C8130();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v10, 0, 1, v25);
  uint64_t v26 = sub_20A8C8D90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v40, 1, 1, v26);
  uint64_t v27 = sub_20A8CB920();
  uint64_t v28 = MEMORY[0x263F7E098];
  *(void *)(v21 + 56) = v27;
  *(void *)(v21 + 64) = v28;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)v43);
  sub_20A8CB8D0();
  uint64_t v29 = *MEMORY[0x263F7E0E0];
  uint64_t v30 = v42;
  unsigned int v31 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 104);
  v31(v3, v29, v42);
  uint64_t v32 = MEMORY[0x263F7E118];
  *(void *)(v17 + 56) = v38;
  *(void *)(v17 + 64) = v32;
  __swift_allocate_boxed_opaque_existential_1(v36);
  sub_20A8CBC10();
  v37(v14, *MEMORY[0x263F7E100], v35);
  v31(v3, v29, v30);
  sub_20A8CBC10();
  return v16;
}

uint64_t sub_20A4AB400@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20A4AE150(0, &qword_26AC82C08, MEMORY[0x263F7DFF0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v7 = sub_20A8CB390();
  sub_20A8C5B70();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    id v9 = objc_allocWithZone((Class)sub_20A8C8140());
    uint64_t result = sub_20A8C8150();
    uint64_t v10 = MEMORY[0x263F7D258];
    *a2 = result;
    a2[1] = v10;
  }
  return result;
}

uint64_t sub_20A4AB54C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for ShareDynamicMenuItemProvider();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for ShareMenuItemManager();
    swift_allocObject();
    uint64_t v6 = sub_20A5A99FC(v4);
    a2[3] = v5;
    uint64_t result = sub_20A4AE708(&qword_26AC819E0, (void (*)(uint64_t))type metadata accessor for ShareMenuItemManager);
    a2[4] = result;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A4AB614(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC697A0);
  sub_20A8C5BB0();
  if (!v4) {
    return sub_20A4AE0C8((uint64_t)&v3);
  }
  sub_20A42BEBC(&v3, (uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_20A4AE708(&qword_26AC819E8, (void (*)(uint64_t))type metadata accessor for ShareMenuItemManager);
  sub_20A8C62B0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

uint64_t sub_20A4AB718()
{
  uint64_t v0 = sub_20A8C6410();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  long long v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WatchlistMembershipMenuGroupOptionProvider();
  sub_20A8C6290();
  uint64_t v4 = *MEMORY[0x263F7D010];
  uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, v4, v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  type metadata accessor for GoToWatchlistMenuGroupOptionProvider();
  sub_20A8C6290();
  v5(v3, v4, v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v6(v3, v0);
  type metadata accessor for SortWatchlistMenuGroupOptionProvider();
  sub_20A8C6290();
  v5(v3, v4, v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v6(v3, v0);
  type metadata accessor for OrderWatchlistMenuGroupOptionProvider();
  sub_20A8C6290();
  v5(v3, v4, v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v6(v3, v0);
  type metadata accessor for ChangeWatchlistDisplayMenuGroupOptionProvider();
  sub_20A8C6290();
  v5(v3, v4, v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v6(v3, v0);
  type metadata accessor for ShareDynamicMenuItemProvider();
  sub_20A8C6290();
  v5(v3, v4, v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v6)(v3, v0);
}

void *sub_20A4ABABC(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = (void *)sub_20A8C5BB0();
  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, (unint64_t *)&unk_26AC68E50);
    uint64_t result = (void *)sub_20A8C5BB0();
    if (v3[3])
    {
      type metadata accessor for WatchlistMembershipMenuGroupOptionProvider();
      swift_allocObject();
      return sub_20A44C030(v4, v5, v3);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_20A4ABBBC(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E50);
  uint64_t result = (void *)sub_20A8C5BB0();
  if (v2[3])
  {
    type metadata accessor for GoToWatchlistMenuGroupOptionProvider();
    swift_allocObject();
    return sub_20A51FD04(v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A4ABC54(void *a1)
{
  return sub_20A4ABCAC(a1, (void (*)(void))type metadata accessor for SortWatchlistMenuGroupOptionProvider, (uint64_t (*)(uint64_t, uint64_t, unsigned char *))sub_20A590D98);
}

uint64_t sub_20A4ABC80(void *a1)
{
  return sub_20A4ABCAC(a1, (void (*)(void))type metadata accessor for OrderWatchlistMenuGroupOptionProvider, (uint64_t (*)(uint64_t, uint64_t, unsigned char *))sub_20A555560);
}

uint64_t sub_20A4ABCAC(void *a1, void (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t, unsigned char *))
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  if (v10)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, (unint64_t *)&unk_26AC68E50);
    uint64_t result = sub_20A8C5BB0();
    if (v9)
    {
      a2(0);
      swift_allocObject();
      uint64_t v7 = a3(v10, v11, v8);
      swift_unknownObjectRelease();
      return v7;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A4ABDD4(void *a1)
{
  return sub_20A4ABCAC(a1, (void (*)(void))type metadata accessor for ChangeWatchlistDisplayMenuGroupOptionProvider, (uint64_t (*)(uint64_t, uint64_t, unsigned char *))sub_20A689624);
}

uint64_t sub_20A4ABE00()
{
  uint64_t v0 = sub_20A8CB920();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  long long v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC6AC70 != -1) {
    swift_once();
  }
  uint64_t v4 = __swift_project_value_buffer(v0, (uint64_t)qword_26AC9E8E8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  type metadata accessor for ShareDynamicMenuItemProvider();
  uint64_t v5 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5 + OBJC_IVAR____TtC8StocksUI28ShareDynamicMenuItemProvider_menuItem, v3, v0);
  return v5;
}

uint64_t type metadata accessor for MenuAssembly()
{
  return self;
}

uint64_t sub_20A4ABF6C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  long long v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  long long v3 = sub_20A46D5E8(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = &v3[v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + 8 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 8 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A4AC0B4(unint64_t a1)
{
  return sub_20A4ACA0C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_20A4AD54C);
}

uint64_t sub_20A4AC0CC(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_20A42D93C();
  uint64_t v95 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v99 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D908(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v100 = (uint64_t)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v94 = (uint64_t)&v80 - v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v101 = (uint64_t)&v80 - v12;
  sub_20A4AE540();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v102 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4AE60C(0);
  uint64_t v92 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v104 = (uint64_t)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))sub_20A4AE708((unint64_t *)&unk_26763B4B8, (void (*)(uint64_t))sub_20A4AE540);
  uint64_t v20 = v14;
  uint64_t v21 = sub_20A8CE4E0();
  unint64_t v23 = *v1;
  int64_t v24 = *(void *)(*v2 + 16);
  int64_t v25 = v24 + v21;
  if (__OFADD__(v24, v21))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v26 = v21;
  int64_t v91 = v5;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  double v103 = v2;
  *uint64_t v2 = v23;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v28 = *(void *)(v23 + 24) >> 1, v28 < v25))
  {
    if (v24 <= v25) {
      int64_t v29 = v25;
    }
    else {
      int64_t v29 = v24;
    }
    unint64_t v23 = sub_20A46DDE4(isUniquelyReferenced_nonNull_native, v29, 1, v23);
    unint64_t *v103 = v23;
    int64_t v28 = *(void *)(v23 + 24) >> 1;
  }
  uint64_t v30 = *(void *)(v5 + 72);
  int64_t v31 = v28 - *(void *)(v23 + 16);
  unint64_t v93 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v98 = v30;
  uint64_t v32 = v15;
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v15 += 16;
  uint64_t v96 = v33;
  v33(v102, a1, v20);
  uint64_t v34 = sub_20A8CE4D0();
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8);
  uint64_t v97 = v32 + 8;
  uint64_t v21 = v19(a1, v20);
  if (v34 < v26) {
    goto LABEL_16;
  }
  uint64_t v22 = v103;
  uint64_t v21 = v104;
  if (v34 >= 1)
  {
    uint64_t v35 = *(void *)(*v103 + 16);
    BOOL v36 = __OFADD__(v35, v34);
    uint64_t v37 = v35 + v34;
    if (v36)
    {
      __break(1u);
      goto LABEL_20;
    }
    *(void *)(*v103 + 16) = v37;
  }
  if (v34 != v31)
  {
    uint64_t v38 = sub_20A4AE60C;
    return sub_20A4AE7B4(v21, (uint64_t (*)(void))v38);
  }
LABEL_17:
  uint64_t v82 = v15;
  int64_t v90 = *(void *)(*v22 + 16);
  uint64_t v40 = (uint64_t *)(v21 + v92[9]);
  uint64_t v41 = *v40;
  uint64_t v34 = v21;
  uint64_t v42 = sub_20A4AE6D4();
  sub_20A8CE8A0();
  uint64_t v88 = v40;
  uint64_t v87 = v42;
  if (v41 != v105[0])
  {
LABEL_20:
    uint64_t v50 = (void (*)(void *, void))sub_20A8CE8C0();
    uint64_t v45 = v101;
    uint64_t v51 = v95;
    (*(void (**)(uint64_t))(v5 + 16))(v101);
    v50(v105, 0);
    uint64_t v43 = v5;
    uint64_t v52 = v102;
    v96(v102, v34, v20);
    sub_20A8CE8B0();
    uint64_t v48 = v51;
    v19((uint64_t)v52, v20);
    char v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    uint64_t v46 = v45;
    uint64_t v47 = 0;
    uint64_t v49 = v51;
    goto LABEL_21;
  }
  uint64_t v43 = v5;
  char v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v45 = v101;
  uint64_t v46 = v101;
  uint64_t v47 = 1;
  uint64_t v48 = v95;
  uint64_t v49 = v95;
LABEL_21:
  long long v86 = v44;
  v44(v46, v47, 1, v49);
  uint64_t v53 = v100;
  uint64_t v54 = v94;
  sub_20A4AE750(v45, v94);
  id v56 = *(int **)(v43 + 48);
  uint64_t v55 = v43 + 48;
  uint64_t v92 = v56;
  int v57 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v56)(v54, 1, v48);
  uint64_t v58 = v103;
  int64_t v59 = v90;
  if (v57 != 1)
  {
    uint64_t v60 = (void (**)(unint64_t, char *, uint64_t))(v91 + 32);
    uint64_t v81 = (void (**)(uint64_t))(v91 + 16);
    uint64_t v83 = v91 + 56;
    uint64_t v80 = (void (**)(char *, uint64_t))(v91 + 8);
    uint64_t v85 = v55;
    uint64_t v84 = (void (**)(unint64_t, char *, uint64_t))(v91 + 32);
    uint64_t v61 = v95;
    do
    {
      sub_20A4AE7B4(v54, (uint64_t (*)(void))sub_20A42D908);
      unint64_t v63 = *v58;
      unint64_t v64 = *(void *)(v63 + 24);
      int64_t v65 = v64 >> 1;
      if ((uint64_t)(v64 >> 1) < v59 + 1)
      {
        unint64_t v63 = sub_20A46DDE4(v64 > 1, v59 + 1, 1, v63);
        unint64_t *v103 = v63;
        int64_t v65 = *(void *)(v63 + 24) >> 1;
      }
      sub_20A4AE750(v101, v53);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v92)(v53, 1, v95) == 1)
      {
        uint64_t v53 = v100;
LABEL_30:
        sub_20A4AE7B4(v53, (uint64_t (*)(void))sub_20A42D908);
        int64_t v62 = v59;
      }
      else
      {
        uint64_t v89 = *v60;
        if (v59 <= v65) {
          int64_t v66 = v65;
        }
        else {
          int64_t v66 = v59;
        }
        int64_t v91 = v66;
        unint64_t v67 = v63 + v93;
        uint64_t v68 = v99;
        unint64_t v69 = v67 + v98 * v59;
        uint64_t v53 = v100;
        while (1)
        {
          id v76 = v89;
          v89((unint64_t)v68, (char *)v53, v61);
          if (v91 == v59) {
            break;
          }
          int64_t v90 = v59;
          uint64_t v77 = v101;
          sub_20A4AE7B4(v101, (uint64_t (*)(void))sub_20A42D908);
          v76(v69, v68, v61);
          uint64_t v78 = *v88;
          uint64_t v79 = v104;
          sub_20A8CE8A0();
          if (v78 == v105[0])
          {
            uint64_t v72 = v77;
            uint64_t v73 = 1;
          }
          else
          {
            unsigned int v70 = (void (*)(void *, void))sub_20A8CE8C0();
            (*v81)(v77);
            v70(v105, 0);
            unsigned int v71 = v102;
            v96(v102, v79, v20);
            sub_20A8CE8B0();
            v19((uint64_t)v71, v20);
            uint64_t v72 = v77;
            uint64_t v73 = 0;
          }
          v86(v72, v73, 1, v61);
          uint64_t v74 = v77;
          uint64_t v53 = v100;
          sub_20A4AE750(v74, v100);
          int v75 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v92)(v53, 1, v61);
          uint64_t v68 = v99;
          v69 += v98;
          int64_t v59 = v90 + 1;
          uint64_t v60 = v84;
          if (v75 == 1) {
            goto LABEL_30;
          }
        }
        (*v80)(v68, v61);
        int64_t v62 = v91;
        int64_t v59 = v91;
        uint64_t v53 = v100;
      }
      uint64_t v58 = v103;
      *(void *)(*v103 + 16) = v62;
      uint64_t v54 = v94;
      sub_20A4AE750(v101, v94);
    }
    while (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v92)(v54, 1, v95) != 1);
  }
  sub_20A4AE7B4(v101, (uint64_t (*)(void))sub_20A42D908);
  sub_20A4AE7B4(v104, (uint64_t (*)(void))sub_20A4AE60C);
  uint64_t v21 = v54;
  uint64_t v38 = sub_20A42D908;
  return sub_20A4AE7B4(v21, (uint64_t (*)(void))v38);
}

uint64_t sub_20A4AC9C8(uint64_t a1)
{
  return sub_20A4ACF00(a1, (uint64_t (*)(void))sub_20A46DD9C, MEMORY[0x263F7AF08]);
}

uint64_t sub_20A4AC9F4(unint64_t a1)
{
  return sub_20A4ACA0C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_20A4ADC24);
}

uint64_t sub_20A4ACA0C(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_20A8CF540();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_20A8CF540();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x210527710](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *uint64_t v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_20A8CF540();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return sub_20A8CE620();
}

uint64_t sub_20A4ACBE0(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  long long v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  long long v3 = sub_20A46E25C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  sub_20A4AE23C(0, &qword_26AC6A1F8, (unint64_t *)&qword_26AC6A1F0, MEMORY[0x263F7D750], MEMORY[0x263F8D8F0]);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A4ACD80(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  long long v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  long long v3 = sub_20A46DEBC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A4ACED4(uint64_t a1)
{
  return sub_20A4ACF00(a1, (uint64_t (*)(void))sub_20A46E40C, MEMORY[0x263F7AF50]);
}

uint64_t sub_20A4ACF00(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *long long v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A4AD0BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  long long v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  long long v3 = sub_20A46E574(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6AA00);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t (*sub_20A4AD238(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_20A4AD3BC(v6, a2, a3);
  return sub_20A4AD2A0;
}

uint64_t (*sub_20A4AD2A4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_20A4AD444(v6, a2, a3);
  return sub_20A4AD2A0;
}

uint64_t (*sub_20A4AD30C(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_20A4AD4CC(v6, a2, a3);
  return sub_20A4AD2A0;
}

void sub_20A4AD374(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_20A4AD3BC(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  long long v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x210527700](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)long long v3 = v4;
    return destroy for StockChartModelFactoryProviderOptions;
  }
  __break(1u);
  return result;
}

void destroy for StockChartModelFactoryProviderOptions(id *a1)
{
}

uint64_t (*sub_20A4AD444(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  long long v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x210527700](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *long long v3 = v4;
    return destroy for StockLocation;
  }
  __break(1u);
  return result;
}

uint64_t destroy for StockLocation()
{
  return swift_release();
}

void (*sub_20A4AD4CC(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  long long v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x210527700](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)long long v3 = v4;
    return j__s8StocksUI37StockChartModelFactoryProviderOptionsVwxx;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A4AD54C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_20A8CF540();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_20A8CF540();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_20A4AE4E8(0, &qword_26763B480, &qword_26AC7F8C8);
        sub_20A4AE814((unint64_t *)&unk_26763B488, &qword_26763B480, &qword_26AC7F8C8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          BOOL v12 = sub_20A4AD238(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_20A42CFF0(0, &qword_26AC7F8C8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A4AD794(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_20A8CF540();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_20A8CF540();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_20A4AE4E8(0, &qword_26763B4C8, (unint64_t *)&unk_26AC7FB30);
        sub_20A4AE814(&qword_26763B4D0, &qword_26763B4C8, (unint64_t *)&unk_26AC7FB30);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          BOOL v12 = sub_20A4AD30C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_20A42CFF0(0, (unint64_t *)&unk_26AC7FB30);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A4AD9DC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_20A8CF540();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_20A8CF540();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_20A4AE4E8(0, &qword_26763B498, (unint64_t *)&qword_26AC7FA30);
        sub_20A4AE814(&qword_26763B4A0, &qword_26763B498, (unint64_t *)&qword_26AC7FA30);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          BOOL v12 = sub_20A4AD30C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FA30);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A4ADC24(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_20A8CF540();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_20A8CF540();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_20A4AE150(0, &qword_26763B4D8, MEMORY[0x263F7D418], MEMORY[0x263F8D488]);
        sub_20A4AE864();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          BOOL v12 = sub_20A4AD2A4(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_20A8C8720();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A4ADE54()
{
  uint64_t v0 = sub_20A8C6410();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  long long v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C5CC0();
  sub_20A8CB390();
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC69E78);
  sub_20A8C62A0();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D010], v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC6A510);
  sub_20A8C62A0();
  swift_release();
  type metadata accessor for ShareMenuItemManager();
  sub_20A8C5990();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A8C6280();
  return swift_release();
}

uint64_t sub_20A4AE0C8(uint64_t a1)
{
  sub_20A4AE23C(0, (unint64_t *)&unk_26763B470, (unint64_t *)&unk_26AC697A0, MEMORY[0x263F7CF90], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_20A4AE150(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_20A4AE1B4()
{
  unint64_t result = qword_26AC6B240;
  if (!qword_26AC6B240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6B240);
  }
  return result;
}

void sub_20A4AE208(uint64_t a1)
{
}

void sub_20A4AE23C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_20A4301D4(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_20A4AE2A8()
{
  if (!qword_26AC82D60)
  {
    unint64_t v0 = sub_20A8C8E10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC82D60);
    }
  }
}

uint64_t sub_20A4AE308()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_20A4AE340(uint64_t a1)
{
  return sub_20A4AACC4(a1, (void *)(v1 + 16));
}

unint64_t sub_20A4AE348()
{
  unint64_t result = qword_26AC73680;
  if (!qword_26AC73680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC73680);
  }
  return result;
}

void sub_20A4AE39C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_20A4AE404()
{
  unint64_t result = qword_26AC813D0;
  if (!qword_26AC813D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC813D0);
  }
  return result;
}

uint64_t sub_20A4AE458(uint64_t a1, uint64_t a2)
{
  sub_20A4AE23C(0, &qword_26AC6A1F8, (unint64_t *)&qword_26AC6A1F0, MEMORY[0x263F7D750], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20A4AE4E8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_20A42CFF0(255, a3);
    unint64_t v4 = sub_20A8CE6C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_20A4AE540()
{
  if (!qword_26AC69740)
  {
    sub_20A42D93C();
    sub_20A4AE708(&qword_26AC69D98, (void (*)(uint64_t))sub_20A42D93C);
    sub_20A4AE708(&qword_26AC69D90, (void (*)(uint64_t))sub_20A42D93C);
    unint64_t v0 = sub_20A8C5F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69740);
    }
  }
}

void sub_20A4AE60C(uint64_t a1)
{
}

void sub_20A4AE654(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_20A4AE6D4()
{
  return sub_20A4AE708(&qword_26763B4B0, (void (*)(uint64_t))sub_20A4AE540);
}

uint64_t sub_20A4AE708(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4AE750(uint64_t a1, uint64_t a2)
{
  sub_20A42D908(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4AE7B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A4AE814(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A4AE4E8(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A4AE864()
{
  unint64_t result = qword_26763B4E0;
  if (!qword_26763B4E0)
  {
    sub_20A4AE150(255, &qword_26763B4D8, MEMORY[0x263F7D418], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B4E0);
  }
  return result;
}

uint64_t *sub_20A4AE8F4(uint64_t *a1, uint64_t *a2)
{
  sub_20A484450(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t v7 = sub_20A8C40E0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_20A4AEA48(uint64_t a1)
{
  uint64_t v2 = sub_20A8C40E0();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_20A4AEB18(void *a1, const void *a2)
{
  uint64_t v4 = sub_20A8C40E0();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_20A484450(0);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_20A4AEC24(void *a1, void *a2)
{
  uint64_t v4 = sub_20A8C40E0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    sub_20A484450(0);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *sub_20A4AED9C(void *a1, const void *a2)
{
  uint64_t v4 = sub_20A8C40E0();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_20A484450(0);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_20A4AEEA8(void *a1, void *a2)
{
  uint64_t v4 = sub_20A8C40E0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    sub_20A484450(0);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_20A4AF020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A4AF034);
}

uint64_t sub_20A4AF034(uint64_t a1, uint64_t a2)
{
  sub_20A484450(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A4AF0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A4AF0B4);
}

uint64_t sub_20A4AF0B4(uint64_t a1, uint64_t a2)
{
  sub_20A484450(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WatchlistRenameAlert()
{
  uint64_t result = qword_26763B4E8;
  if (!qword_26763B4E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A4AF170()
{
  sub_20A484450(319);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_20A4AF1FC()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t sub_20A4AF2C4()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

void sub_20A4AF38C(void *a1, void *a2)
{
  sub_20A484450(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  int v8 = self;
  id v9 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v10 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setPlaceholder_, v10);

  id v11 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v12 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setAccessibilityLabel_, v12);

  if (a2)
  {
    id v13 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_20A8C2370();

    uint64_t v14 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    objc_msgSend(a2, sel_setText_, v14);
  }
  objc_msgSend(a1, sel_setEnablesReturnKeyAutomatically_, 1);
  objc_msgSend(a1, sel_setReturnKeyType_, 9);
  objc_msgSend(a1, sel_setAutocapitalizationType_, 1);
  sub_20A4AF8DC(v18[1], (uint64_t)v6);
  uint64_t v15 = sub_20A8C40E0();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v6, 1, v15) == 1)
  {
    sub_20A4AF940((uint64_t)v6);
    uint64_t v17 = 0;
  }
  else
  {
    sub_20A8C40A0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v15);
    uint64_t v17 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(a1, sel_setText_, v17);
}

uint64_t sub_20A4AF734()
{
  return sub_20A4AF1FC();
}

uint64_t sub_20A4AF74C()
{
  return sub_20A4AF2C4();
}

uint64_t sub_20A4AF764()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t sub_20A4AF81C()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t sub_20A4AF8DC(uint64_t a1, uint64_t a2)
{
  sub_20A484450(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4AF940(uint64_t a1)
{
  sub_20A484450(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A4AF99C(unint64_t *a1, uint64_t a2)
{
  unint64_t v3 = *a1;
  switch(*a1 >> 61)
  {
    case 1uLL:
      uint64_t v6 = qword_267639AE8;
      swift_retain();
      if (v6 != -1) {
        goto LABEL_14;
      }
      goto LABEL_9;
    case 2uLL:
      uint64_t v7 = qword_267639AD0;
      swift_retain();
      if (v7 == -1) {
        goto LABEL_9;
      }
      goto LABEL_14;
    case 3uLL:
      uint64_t v8 = qword_267639AD8;
      swift_retain();
      if (v8 == -1) {
        goto LABEL_9;
      }
      goto LABEL_14;
    case 4uLL:
      goto LABEL_10;
    default:
      uint64_t v5 = qword_267639AE0;
      swift_retain();
      if (v5 == -1) {
        goto LABEL_9;
      }
LABEL_14:
      swift_once();
LABEL_9:
      swift_retain();
      sub_20A485620(v3);
      sub_20A4AFFCC();
      sub_20A8C41C0();
      swift_release();
      if (v12 != 1) {
        return 0;
      }
LABEL_10:
      __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
      sub_20A8C4E90();
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v3;
      *(void *)(v9 + 24) = a2;
      sub_20A4855D4(v3);
      swift_retain();
      uint64_t v10 = sub_20A8C5B80();
      swift_release();
      if (!v10)
      {
        __break(1u);
        return 0;
      }
      return v10;
  }
}

uint64_t sub_20A4AFC20(void *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C4C10();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a2 >> 61)
  {
    case 1uLL:
      uint64_t v11 = qword_267639AE8;
      swift_retain();
      if (v11 != -1) {
        goto LABEL_13;
      }
      goto LABEL_9;
    case 2uLL:
      uint64_t v12 = qword_267639AD0;
      swift_retain();
      if (v12 == -1) {
        goto LABEL_9;
      }
      goto LABEL_13;
    case 3uLL:
      uint64_t v13 = qword_267639AD8;
      swift_retain();
      if (v13 == -1) {
        goto LABEL_9;
      }
      goto LABEL_13;
    case 4uLL:
      goto LABEL_10;
    default:
      uint64_t v10 = qword_267639AE0;
      swift_retain();
      if (v10 == -1) {
        goto LABEL_9;
      }
LABEL_13:
      swift_once();
LABEL_9:
      swift_retain();
      sub_20A485620(a2);
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_20A4B00C0();
      sub_20A8C5A40();
      swift_release();
LABEL_10:
      if (a3)
      {
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        sub_20A8C4990();
        swift_retain();
        sub_20A8C5A40();
        swift_release();
      }
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      v16[0] = a2;
      sub_20A4855D4(a2);
      sub_20A4851B4((unint64_t *)v16, (uint64_t)v9);
      sub_20A8C5A50();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      unint64_t v15 = a2;
      sub_20A7B6FFC(v16);
      sub_20A4B0068();
      sub_20A8C5A50();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      v16[0] = a2;
      return sub_20A8C5A50();
  }
}

uint64_t type metadata accessor for TipsModule()
{
  return self;
}

unint64_t sub_20A4AFFCC()
{
  unint64_t result = qword_26763B4F8;
  if (!qword_26763B4F8)
  {
    type metadata accessor for TipsModule();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B4F8);
  }
  return result;
}

uint64_t sub_20A4B0020()
{
  sub_20A485620(*(void *)(v0 + 16));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A4B0060(void *a1)
{
  return sub_20A4AFC20(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_20A4B0068()
{
  unint64_t result = qword_26AC69510;
  if (!qword_26AC69510)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC69510);
  }
  return result;
}

void sub_20A4B00C0()
{
  if (!qword_26AC692F8)
  {
    unint64_t v0 = sub_20A8C42D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC692F8);
    }
  }
}

uint64_t sub_20A4B0120@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_20A8CD1F0();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))(v7, v1, v3, v5);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v7, v3);
  if (v8 == *MEMORY[0x263F59B78] || v8 == *MEMORY[0x263F59B80]) {
    goto LABEL_3;
  }
  if (v8 == *MEMORY[0x263F59B70])
  {
    uint64_t v9 = (unsigned int *)MEMORY[0x263F7A150];
    goto LABEL_4;
  }
  BOOL v13 = v8 == *MEMORY[0x263F59B90] || v8 == *MEMORY[0x263F59B50];
  BOOL v14 = v13 || v8 == *MEMORY[0x263F59B60];
  if (v14 || v8 == *MEMORY[0x263F59B68]) {
    goto LABEL_3;
  }
  if (v8 == *MEMORY[0x263F59B58])
  {
    uint64_t v9 = (unsigned int *)MEMORY[0x263F7A148];
    goto LABEL_4;
  }
  if (v8 == *MEMORY[0x263F59B88])
  {
LABEL_3:
    uint64_t v9 = (unsigned int *)MEMORY[0x263F7A158];
LABEL_4:
    uint64_t v10 = *v9;
    uint64_t v11 = sub_20A8C71C0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(a1, v10, v11);
  }
  uint64_t result = sub_20A8CF520();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for StockChartGridFactory()
{
  return self;
}

unint64_t sub_20A4B0384(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  uint64_t v6 = v5;
  uint64_t v73 = a1;
  uint64_t v11 = MEMORY[0x263F8D538];
  sub_20A4B1364(0, &qword_26AC7F620, MEMORY[0x263F8D538], MEMORY[0x263F7CCC0]);
  uint64_t v77 = v12;
  uint64_t v81 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v76 = (uint64_t *)&v60[-v13];
  uint64_t v14 = sub_20A8CE100();
  MEMORY[0x270FA5388](v14 - 8);
  int v75 = &v60[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A4B1364(0, &qword_26AC7F610, v11, MEMORY[0x263F7CCA8]);
  uint64_t v80 = v16;
  uint64_t v83 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  unint64_t v18 = (double *)&v60[-v17];
  sub_20A4B1364(0, &qword_26AC7F5F0, v11, MEMORY[0x263F7CC78]);
  uint64_t v71 = v19;
  uint64_t v69 = *(void *)(v19 - 8);
  uint64_t v70 = v19 - 8;
  uint64_t v79 = v69;
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v68 = &v60[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v21);
  uint64_t v78 = &v60[-v22];
  MEMORY[0x270FA5388](v23);
  uint64_t v82 = &v60[-v24];
  uint64_t v26 = v6[5];
  uint64_t v25 = v6[6];
  __swift_project_boxed_opaque_existential_1(v6 + 2, v26);
  uint64_t v27 = *(void *)(v25 + 8);
  int64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 8);
  v87[3] = v26;
  v87[4] = v25;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v87);
  v28(a2, v26, v27);
  double v29 = a4 - a3;
  sub_20A4342F4((uint64_t)(v6 + 7), (uint64_t)v84);
  __swift_project_boxed_opaque_existential_1(v84, v85);
  uint64_t v30 = sub_20A52490C(v29 > 4.0, 2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
  *unint64_t v18 = v29 * 0.25;
  uint64_t v31 = *MEMORY[0x263F7CCA0];
  uint64_t v32 = *(void (**)(double *, uint64_t, uint64_t))(v83 + 104);
  v83 += 104;
  v32(v18, v31, v80);
  (*(void (**)(uint64_t, uint64_t, double))(v25 + 80))(v26, v25, a5);
  sub_20A4B1364(0, &qword_26AC7F558, MEMORY[0x263F8D538], MEMORY[0x263F7CBA0]);
  uint64_t v85 = type metadata accessor for StockChartPriceLabelFormatter();
  uint64_t v86 = sub_20A4B131C(qword_26AC79688, (void (*)(uint64_t))type metadata accessor for StockChartPriceLabelFormatter);
  v84[0] = v30;
  uint64_t v72 = v30;
  swift_retain();
  uint64_t v33 = sub_20A8CDE50();
  uint64_t v34 = v76;
  *id v76 = v33;
  uint64_t v36 = v81 + 104;
  uint64_t v35 = *(void (**)(uint64_t *, void, uint64_t))(v81 + 104);
  v35(v34, *MEMORY[0x263F7CCB8], v77);
  uint64_t v37 = MEMORY[0x263F8D538];
  sub_20A8CE070();
  sub_20A4B1364(0, &qword_26AC800F0, v37, MEMORY[0x263F8E0F8]);
  uint64_t v64 = v38;
  uint64_t v39 = swift_allocObject();
  long long v62 = xmmword_20A8D3DC0;
  *(_OWORD *)(v39 + 16) = xmmword_20A8D3DC0;
  *(double *)(v39 + 32) = a3;
  *(void *)unint64_t v18 = v39;
  unsigned int v63 = *MEMORY[0x263F7CC98];
  int64_t v66 = v32;
  ((void (*)(double *))v32)(v18);
  uint64_t v40 = *(void (**)(uint64_t, uint64_t, double))(v25 + 96);
  uint64_t v67 = v26;
  v40(v26, v25, a5);
  unsigned int v61 = *MEMORY[0x263F7CCB0];
  uint64_t v81 = v36;
  int64_t v65 = v35;
  ((void (*)(uint64_t *))v35)(v34);
  uint64_t v41 = v78;
  sub_20A8CE070();
  sub_20A4B13B0();
  uint64_t v42 = *(void *)(v69 + 72);
  uint64_t v43 = v79;
  unint64_t v44 = (*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
  unint64_t v45 = v44 + 2 * v42;
  unint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_20A8D4540;
  unint64_t v47 = v46 + v44;
  uint64_t v48 = *(void (**)(unint64_t, unsigned char *, uint64_t))(v43 + 16);
  uint64_t v49 = v71;
  v48(v47, v82, v71);
  unint64_t v50 = v47 + v42;
  uint64_t v51 = v49;
  v48(v50, v41, v49);
  uint64_t v52 = sub_20A8C3C30();
  if (v53)
  {
    swift_release();
    uint64_t v57 = v79;
  }
  else
  {
    uint64_t v54 = v52;
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = v62;
    *(void *)(v55 + 32) = v54;
    *(void *)unint64_t v18 = v55;
    v66(v18, v63, v80);
    (*(void (**)(uint64_t, uint64_t, double))(v25 + 104))(v67, v25, a5);
    v65(v76, v61, v77);
    id v56 = v68;
    sub_20A8CE070();
    unint64_t v46 = sub_20A46D760(1, 3, 1, v46);
    *(void *)(v46 + 16) = 3;
    uint64_t v57 = v79;
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v79 + 32))(v46 + v45, v56, v51);
    swift_release();
  }
  uint64_t v58 = *(void (**)(unsigned char *, uint64_t))(v57 + 8);
  v58(v78, v51);
  v58(v82, v51);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
  return v46;
}

unint64_t sub_20A4B0B9C(char *a1, uint64_t a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v78 = a1;
  uint64_t v7 = MEMORY[0x263F8D310];
  sub_20A4B1364(0, &qword_26AC7F618, MEMORY[0x263F8D310], MEMORY[0x263F7CCC0]);
  uint64_t v77 = v8;
  uint64_t v80 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v76 = (uint64_t *)((char *)&v60 - v9);
  uint64_t v10 = sub_20A8CE100();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v74 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4B1364(0, &qword_26AC7F608, v7, MEMORY[0x263F7CCA8]);
  uint64_t v72 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v73 = (uint64_t *)((char *)&v60 - v14);
  sub_20A4B1364(0, &qword_26AC7F5E8, v7, MEMORY[0x263F7CC78]);
  uint64_t v70 = v15;
  uint64_t v75 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v67 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v68 = (char *)&v60 - v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v79 = (char *)&v60 - v20;
  uint64_t v21 = v4[5];
  uint64_t v22 = (void *)v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v21);
  uint64_t v23 = v22[1];
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 8);
  void v84[3] = v21;
  v84[4] = (uint64_t)v22;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v84);
  v24(a2, v21, v23);
  __swift_project_boxed_opaque_existential_1(v4 + 7, v4[10]);
  uint64_t v26 = type metadata accessor for StockChartDescriptor();
  uint64_t v27 = v78;
  uint64_t v28 = sub_20A524B10((uint64_t)v78, (uint64_t)&v78[*(int *)(v26 + 24)]);
  unint64_t v69 = v26;
  double v29 = v73;
  *uint64_t v73 = *(void *)&v27[*(int *)(v26 + 32)];
  uint64_t v30 = *(void (**)(void))(v13 + 104);
  unsigned int v63 = *MEMORY[0x263F7CC98];
  uint64_t v66 = v13 + 104;
  long long v62 = (void (*)(uint64_t *, void, uint64_t))v30;
  v30(v29);
  uint64_t v31 = (void (*)(uint64_t, void *, double))v22[10];
  swift_bridgeObjectRetain();
  uint64_t v64 = boxed_opaque_existential_1;
  uint64_t v32 = v68;
  uint64_t v65 = v21;
  v31(v21, v22, a3);
  sub_20A4B1364(0, &qword_26AC7F550, MEMORY[0x263F8D310], MEMORY[0x263F7CBA0]);
  uint64_t v82 = type metadata accessor for StockChartCategoryLabelFormatter();
  uint64_t v83 = sub_20A4B131C(&qword_26AC7B058, (void (*)(uint64_t))type metadata accessor for StockChartCategoryLabelFormatter);
  uint64_t v81 = v28;
  uint64_t v71 = v28;
  swift_retain();
  uint64_t v33 = sub_20A8CDE40();
  uint64_t v35 = v76;
  uint64_t v34 = v77;
  *id v76 = v33;
  uint64_t v36 = *MEMORY[0x263F7CCB8];
  uint64_t v37 = *(void (**)(uint64_t *, void, uint64_t))(v80 + 104);
  v80 += 104;
  unsigned int v61 = v37;
  v37(v35, v36, v34);
  uint64_t v38 = v75;
  uint64_t v39 = v79;
  uint64_t v40 = v70;
  sub_20A8CE070();
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v32, v39, v40);
  unint64_t v41 = sub_20A46DA3C(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v43 = *(void *)(v41 + 16);
  unint64_t v42 = *(void *)(v41 + 24);
  if (v43 >= v42 >> 1) {
    unint64_t v41 = sub_20A46DA3C(v42 > 1, v43 + 1, 1, v41);
  }
  *(void *)(v41 + 16) = v43 + 1;
  unint64_t v44 = *(void (**)(unint64_t, char *, uint64_t))(v38 + 32);
  unint64_t v45 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v46 = *(void *)(v38 + 72);
  v44(v41 + v45 + v46 * v43, v32, v40);
  uint64_t v47 = *(void *)&v78[*(int *)(v69 + 28)];
  uint64_t v48 = *(void *)(v47 + 16);
  if (v48)
  {
    unint64_t v69 = v45;
    uint64_t v78 = (char *)v44;
    uint64_t v49 = v47 + 16 * v48;
    uint64_t v51 = *(void *)(v49 + 16);
    uint64_t v50 = *(void *)(v49 + 24);
    sub_20A4B1364(0, (unint64_t *)&qword_26AC800B8, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_20A8D3DC0;
    *(void *)(v52 + 32) = v51;
    *(void *)(v52 + 40) = v50;
    uint64_t v53 = v72;
    uint64_t v54 = v73;
    *uint64_t v73 = v52;
    v62(v54, v63, v53);
    uint64_t v55 = (void (*)(uint64_t, void *, double))v22[11];
    swift_bridgeObjectRetain();
    v55(v65, v22, a3);
    v61(v76, *MEMORY[0x263F7CCB0], v77);
    id v56 = v67;
    sub_20A8CE070();
    unint64_t v58 = *(void *)(v41 + 16);
    unint64_t v57 = *(void *)(v41 + 24);
    if (v58 >= v57 >> 1) {
      unint64_t v41 = sub_20A46DA3C(v57 > 1, v58 + 1, 1, v41);
    }
    *(void *)(v41 + 16) = v58 + 1;
    ((void (*)(unint64_t, char *, uint64_t))v78)(v41 + v69 + v58 * v46, v56, v40);
    swift_release();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v79, v40);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v79, v40);
    swift_release();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
  return v41;
}

uint64_t sub_20A4B131C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A4B1364(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_20A4B13B0()
{
  if (!qword_26AC800A0)
  {
    sub_20A4B1364(255, &qword_26AC7F5F0, MEMORY[0x263F8D538], MEMORY[0x263F7CC78]);
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC800A0);
    }
  }
}

uint64_t sub_20A4B142C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_20A4B1784();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C5620();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v26 - v15;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v26 - v15, v2, v9, v14);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v16, v9);
  if (v17 == *MEMORY[0x263F58E18])
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    uint64_t v18 = (unsigned int *)MEMORY[0x263F7A738];
LABEL_5:
    uint64_t v19 = *v18;
    uint64_t v20 = sub_20A8C77E0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(a1, v19, v20);
  }
  if (v17 == *MEMORY[0x263F58E10])
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    uint64_t v18 = (unsigned int *)MEMORY[0x263F7A728];
    goto LABEL_5;
  }
  if (v17 == *MEMORY[0x263F58E20])
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v16, v9);
    uint64_t v22 = swift_projectBox();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v22, v5);
    uint64_t v23 = sub_20A8CC720();
    sub_20A4B142C(v23);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_release();
  }
  else
  {
    uint64_t v24 = *MEMORY[0x263F7A730];
    uint64_t v25 = sub_20A8C77E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(a1, v24, v25);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
  }
}

void sub_20A4B1784()
{
  if (!qword_26763B500)
  {
    sub_20A8C5620();
    sub_20A4B17E8();
    unint64_t v0 = sub_20A8CC730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763B500);
    }
  }
}

unint64_t sub_20A4B17E8()
{
  unint64_t result = qword_26763B508;
  if (!qword_26763B508)
  {
    sub_20A8C5620();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B508);
  }
  return result;
}

uint64_t sub_20A4B1840(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_20A8CA640();
  uint64_t v37 = *(void *)(v6 - 8);
  uint64_t v38 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (uint64_t *)((char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v36 = (char *)&v35 - v10;
  sub_20A4B2764(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v35 - v12;
  sub_20A4B2764(0, (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v35 - v15;
  uint64_t v17 = type metadata accessor for StocksActivity(0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v21 = *a2;
  v41[0] = *a2;
  sub_20A4B1D5C(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1) {
    return sub_20A4B27B8((uint64_t)v16, (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
  }
  sub_20A4B29B4((uint64_t)v16, (uint64_t)v20, type metadata accessor for StocksActivity);
  uint64_t v23 = (uint64_t)v20;
  if (v21)
  {
    uint64_t v24 = (void *)(v3 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_sceneProvider);
    __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_sceneProvider), *(void *)(v3 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_sceneProvider + 24));
    uint64_t v25 = sub_20A8C8DC0();
    if (v25)
    {
      uint64_t v26 = (void *)v25;
      __swift_project_boxed_opaque_existential_1(v24, v24[3]);
      id v27 = v26;
      uint64_t v28 = sub_20A8C8DD0();
      if (v21 == 1)
      {

        *uint64_t v8 = v28;
        uint64_t v32 = (unsigned int *)MEMORY[0x263F7DCA0];
        uint64_t v29 = v37;
        uint64_t v33 = v38;
      }
      else
      {
        uint64_t v29 = v37;
        if (v21 == 2)
        {

          *uint64_t v8 = 0;
        }
        else
        {
          *uint64_t v8 = (uint64_t)v26;
        }
        v8[1] = v28;
        uint64_t v32 = (unsigned int *)MEMORY[0x263F7DCA8];
        uint64_t v33 = v38;
      }
      (*(void (**)(uint64_t *, void, uint64_t))(v29 + 104))(v8, *v32, v33);
      uint64_t v34 = v36;
      (*(void (**)(char *, uint64_t *, uint64_t))(v29 + 32))(v36, v8, v33);
      sub_20A8C8590();

      (*(void (**)(char *, uint64_t))(v29 + 8))(v34, v33);
    }
  }
  else
  {
    uint64_t v30 = *(void *)(v3 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_tracker);
    uint64_t v31 = sub_20A8C6D60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v13, 1, 1, v31);
    sub_20A4342F4(v3 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_contextBuilder, (uint64_t)v41);
    uint64_t v40 = 0;
    memset(v39, 0, sizeof(v39));
    swift_retain();
    sub_20A5BFAAC((uint64_t)v20, v30, (uint64_t)v13, (uint64_t)v41, 0, 0, (uint64_t)v39);
    swift_release();
    sub_20A49127C((uint64_t)v39, &qword_26AC69600, (unint64_t *)&unk_26AC695F0);
    sub_20A49127C((uint64_t)v41, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
    sub_20A4B27B8((uint64_t)v13, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28]);
    swift_release();
  }
  return sub_20A4B2BB0(v23, type metadata accessor for StocksActivity);
}

uint64_t sub_20A4B1D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StockFeedRouteModel();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4B2814(a1, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_20A4B2878();
    uint64_t v11 = *(void *)&v9[*(int *)(v10 + 48)];
    sub_20A4B2908();
    uint64_t v13 = *(int *)(v12 + 48);
    uint64_t v14 = sub_20A8C3F00();
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a2, v9, v14);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v14);
    *(void *)(a2 + v13) = v11;
  }
  else
  {
    sub_20A4B29B4((uint64_t)v9, (uint64_t)v6, type metadata accessor for StocksActivity.Article);
    sub_20A4B29B4((uint64_t)v6, a2, type metadata accessor for StocksActivity.Article);
  }
  uint64_t v16 = type metadata accessor for StocksActivity(0);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a2, 0, 1, v16);
}

uint64_t sub_20A4B1F80(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for StockFeedRouteModel();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v24[-v10 - 8];
  sub_20A4B2814(a1, (uint64_t)v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_20A4B2878();
    uint64_t v13 = *(void *)&v5[*(int *)(v12 + 48)];
    sub_20A4B2908();
    uint64_t v15 = *(int *)(v14 + 48);
    uint64_t v16 = sub_20A8C3F00();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32))(v8, v5, v16);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v16);
    *(void *)&v8[v15] = v13;
  }
  else
  {
    sub_20A4B29B4((uint64_t)v5, (uint64_t)v8, type metadata accessor for StocksActivity.Article);
  }
  swift_storeEnumTagMultiPayload();
  sub_20A4B29B4((uint64_t)v8, (uint64_t)v11, type metadata accessor for StocksActivity);
  uint64_t v18 = *(void *)(v1 + 80);
  uint64_t v19 = *(void *)(v1 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_tracker);
  sub_20A4342F4(v1 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_contextBuilder, (uint64_t)v26);
  v25[4] = v18;
  void v25[3] = sub_20A8C4990();
  v25[0] = v19;
  sub_20A4B2A1C((uint64_t)v26, (uint64_t)v24);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  sub_20A4B2AE0((uint64_t)v24, v20 + 24);
  sub_20A491334();
  sub_20A4B2B68((unint64_t *)&qword_26AC69E50, (void (*)(uint64_t))sub_20A491334);
  swift_retain_n();
  swift_retain();
  uint64_t v21 = sub_20A8CBC70();
  swift_release();
  sub_20A4B2BB0((uint64_t)v25, (uint64_t (*)(void))sub_20A42F348);
  sub_20A49127C((uint64_t)v26, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
  swift_release();
  sub_20A4B2BB0((uint64_t)v11, type metadata accessor for StocksActivity);
  return v21;
}

uint64_t sub_20A4B2310()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = MEMORY[0x2105289B0](result + 24);
    if (v1)
    {
      uint64_t v2 = *(void *)(v1 + 40);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v2 + 112);
      swift_retain();
      v4(ObjectType, v2);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_20A4B23D8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = MEMORY[0x2105289B0](result + 24);
    if (v1)
    {
      uint64_t v2 = *(void *)(v1 + 40);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v2 + 120);
      swift_retain();
      v4(ObjectType, v2);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_20A4B24A0()
{
  swift_unknownObjectWeakDestroy();
  sub_20A4380C4(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_stock;
  uint64_t v2 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_contextBuilder);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_baseStyler);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_offlineAlertControllerFactory);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_channelDataFactory);

  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_sceneProvider);
  return v0;
}

uint64_t sub_20A4B2594()
{
  sub_20A4B24A0();

  return swift_deallocClassInstance();
}

uint64_t sub_20A4B25EC()
{
  return type metadata accessor for StockFeedRouter();
}

uint64_t type metadata accessor for StockFeedRouter()
{
  uint64_t result = qword_26AC6E5C8;
  if (!qword_26AC6E5C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A4B2640()
{
  uint64_t result = sub_20A8C3F00();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_20A4B271C(uint64_t a1, uint64_t a2)
{
  *(void *)(*(void *)v2 + 32) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

void sub_20A4B2764(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A4B27B8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A4B2764(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A4B2814(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockFeedRouteModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_20A4B2878()
{
  if (!qword_26763B510)
  {
    sub_20A8C3F00();
    sub_20A4B2764(255, &qword_26763BAC0, MEMORY[0x263F7D8B0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763B510);
    }
  }
}

void sub_20A4B2908()
{
  if (!qword_26763B518)
  {
    sub_20A4B2764(255, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
    sub_20A4B2764(255, &qword_26763BAC0, MEMORY[0x263F7D8B0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763B518);
    }
  }
}

uint64_t sub_20A4B29B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A4B2A1C(uint64_t a1, uint64_t a2)
{
  sub_20A491224(0, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4B2A98()
{
  swift_release();
  if (*(void *)(v0 + 48)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  }

  return swift_deallocObject();
}

uint64_t sub_20A4B2AE0(uint64_t a1, uint64_t a2)
{
  sub_20A491224(0, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4B2B5C(void *a1)
{
  return sub_20A480D64(a1);
}

uint64_t sub_20A4B2B68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4B2BB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for ArticleStocksFeedService()
{
  return self;
}

uint64_t sub_20A4B2C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A4B2C64(a1, a2, a3, MEMORY[0x263F7AE88]);
}

uint64_t sub_20A4B2C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A4B2C64(a1, a2, a3, MEMORY[0x263F7AE80]);
}

uint64_t sub_20A4B2C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(*(void *)v4 + 40);
  uint64_t v8 = *(void *)(*(void *)v4 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v4 + 16), v7);
  return a4(a1, v7, v8);
}

uint64_t *sub_20A4B2CC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_20A8C3F00();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_20A4B2DAC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_20A8C3F00();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_20A4B2E24(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_20A8C3F00();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_20A4B2EBC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C3F00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_20A4B2F58(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_20A8C3F00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_20A4B2FD4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C3F00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_20A4B3060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A4B3074);
}

uint64_t sub_20A4B3074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C3F00();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_20A4B3124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A4B3138);
}

uint64_t sub_20A4B3138(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_20A8C3F00();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for StockFeedServiceContext()
{
  uint64_t result = qword_26AC75018;
  if (!qword_26AC75018) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A4B322C()
{
  uint64_t result = sub_20A8C3F00();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A4B32C8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for AttributionSource();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8C3410();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (int *)type metadata accessor for StockListPrewarmBlueprintModifier();
  MEMORY[0x270FA5388](v15);
  uint64_t v29 = (uint64_t)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v25 - v18;
  uint64_t v28 = *a1;
  uint64_t v27 = a1[1];
  uint64_t v25 = a1[2];
  uint64_t v26 = a1[3];
  sub_20A4342F4(v4 + 16, (uint64_t)v33);
  sub_20A4342F4(v4 + 56, (uint64_t)v32);
  sub_20A4342F4(v4 + 96, (uint64_t)v31);
  sub_20A4342F4(v4 + 136, (uint64_t)v30);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  sub_20A4B4DA0(a3, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AttributionSource);
  __swift_project_boxed_opaque_existential_1((void *)(v4 + 176), *(void *)(v4 + 200));
  sub_20A8C3AC0();
  sub_20A4342F4(v4 + 216, (uint64_t)&v19[v15[12]]);
  *(void *)uint64_t v19 = 0x6D726177657250;
  *((void *)v19 + 1) = 0xE700000000000000;
  sub_20A42BEBC(v33, (uint64_t)(v19 + 16));
  sub_20A42BEBC(v32, (uint64_t)(v19 + 56));
  sub_20A42BEBC(v31, (uint64_t)(v19 + 96));
  sub_20A42BEBC(v30, (uint64_t)(v19 + 136));
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v19[v15[9]], v14, v11);
  sub_20A4B4C40((uint64_t)v10, (uint64_t)&v19[v15[10]]);
  uint64_t v20 = &v19[v15[13]];
  uint64_t v21 = v27;
  *(void *)uint64_t v20 = v28;
  *((void *)v20 + 1) = v21;
  uint64_t v22 = v26;
  *((void *)v20 + 2) = v25;
  *((void *)v20 + 3) = v22;
  sub_20A4B4DA0((uint64_t)v19, v29, (uint64_t (*)(void))type metadata accessor for StockListPrewarmBlueprintModifier);
  sub_20A4B4B88();
  swift_allocObject();
  sub_20A4B4E08(&qword_26AC7C230, (void (*)(uint64_t))type metadata accessor for StockListPrewarmBlueprintModifier);
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_20A8C8BA0();
  sub_20A4B4E50((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StockListPrewarmBlueprintModifier);
  return v23;
}

uint64_t sub_20A4B3678(uint64_t a1)
{
  uint64_t v3 = (int *)type metadata accessor for StockListWatchlistChangeBlueprintModifier();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (uint64_t *)((char *)&v14 - v7);
  uint64_t v10 = (char *)&v14 + *(int *)(v9 + 20) - v7;
  uint64_t v11 = sub_20A8C2E80();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v10, a1, v11);
  sub_20A4342F4(v1 + 16, (uint64_t)v8 + v3[6]);
  sub_20A4342F4(v1 + 136, (uint64_t)v8 + v3[8]);
  sub_20A4342F4(v1 + 56, (uint64_t)v8 + v3[7]);
  sub_20A4342F4(v1 + 216, (uint64_t)v8 + v3[9]);
  *uint64_t v8 = 0x73696C6863746157;
  v8[1] = 0xEF65676E61684374;
  sub_20A4B4DA0((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StockListWatchlistChangeBlueprintModifier);
  sub_20A4B4B88();
  swift_allocObject();
  sub_20A4B4E08(&qword_26AC826E8, (void (*)(uint64_t))type metadata accessor for StockListWatchlistChangeBlueprintModifier);
  uint64_t v12 = sub_20A8C8BA0();
  sub_20A4B4E50((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockListWatchlistChangeBlueprintModifier);
  return v12;
}

uint64_t sub_20A4B3860(uint64_t a1)
{
  uint64_t updated = (int *)type metadata accessor for StockListPriceDataUpdateBlueprintModifier();
  MEMORY[0x270FA5388](updated);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (uint64_t *)((char *)&v13 - v7);
  sub_20A4342F4(v1 + 96, (uint64_t)&v13 - v7 + 16);
  uint64_t v9 = (char *)v8 + updated[6];
  uint64_t v10 = sub_20A8C2EF0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, a1, v10);
  sub_20A4342F4(v1 + 16, (uint64_t)v8 + updated[7]);
  sub_20A4342F4(v1 + 136, (uint64_t)v8 + updated[8]);
  sub_20A4342F4(v1 + 216, (uint64_t)v8 + updated[9]);
  *uint64_t v8 = 0x7461446563697250;
  v8[1] = 0xEF65746164705561;
  sub_20A4B4DA0((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StockListPriceDataUpdateBlueprintModifier);
  sub_20A4B4B88();
  swift_allocObject();
  sub_20A4B4E08(&qword_26AC7E6B8, (void (*)(uint64_t))type metadata accessor for StockListPriceDataUpdateBlueprintModifier);
  uint64_t v11 = sub_20A8C8BA0();
  sub_20A4B4E50((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockListPriceDataUpdateBlueprintModifier);
  return v11;
}

uint64_t sub_20A4B3A44(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for AttributionSource();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C3410();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for StockListChangeWatchlistBlueprintModifier();
  MEMORY[0x270FA5388](v13);
  uint64_t v20 = (uint64_t)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v20 - v16;
  sub_20A4342F4(v3 + 16, (uint64_t)v24);
  sub_20A4342F4(v3 + 56, (uint64_t)v23);
  sub_20A4342F4(v3 + 96, (uint64_t)v22);
  sub_20A4342F4(v3 + 136, (uint64_t)v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  sub_20A4B4DA0(a2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AttributionSource);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 176), *(void *)(v3 + 200));
  sub_20A8C3AC0();
  sub_20A4342F4(v3 + 216, (uint64_t)&v17[v13[12]]);
  *(void *)uint64_t v17 = 0x615765676E616843;
  *((void *)v17 + 1) = 0xEF7473696C686374;
  sub_20A42BEBC(v24, (uint64_t)(v17 + 16));
  sub_20A42BEBC(v23, (uint64_t)(v17 + 56));
  sub_20A42BEBC(v22, (uint64_t)(v17 + 96));
  sub_20A42BEBC(v21, (uint64_t)(v17 + 136));
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v17[v13[9]], v12, v9);
  sub_20A4B4C40((uint64_t)v8, (uint64_t)&v17[v13[10]]);
  sub_20A4B4DA0((uint64_t)v17, v20, (uint64_t (*)(void))type metadata accessor for StockListChangeWatchlistBlueprintModifier);
  sub_20A4B4B88();
  swift_allocObject();
  sub_20A4B4E08(&qword_26AC7E5F8, (void (*)(uint64_t))type metadata accessor for StockListChangeWatchlistBlueprintModifier);
  uint64_t v18 = sub_20A8C8BA0();
  sub_20A4B4E50((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StockListChangeWatchlistBlueprintModifier);
  return v18;
}

uint64_t sub_20A4B3D90(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v15 = a1;
  uint64_t v16 = sub_20A8C40E0();
  uint64_t v3 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (int *)type metadata accessor for StockListEmptyWatchlistBlueprintModifier();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v15 - v10;
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  sub_20A8C3600();
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  uint64_t v12 = sub_20A8C3690();
  sub_20A4B4DA0(v15, (uint64_t)&v11[v6[7]], (uint64_t (*)(void))type metadata accessor for AttributionSource);
  sub_20A4342F4(v2 + 216, (uint64_t)&v11[v6[8]]);
  strcpy(v11, "EmptyWatchlist");
  v11[15] = -18;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v11[v6[5]], v5, v16);
  *(void *)&v11[v6[6]] = v12;
  sub_20A4B4DA0((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockListEmptyWatchlistBlueprintModifier);
  sub_20A4B4B88();
  swift_allocObject();
  sub_20A4B4E08(&qword_26763B520, (void (*)(uint64_t))type metadata accessor for StockListEmptyWatchlistBlueprintModifier);
  uint64_t v13 = sub_20A8C8BA0();
  sub_20A4B4E50((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StockListEmptyWatchlistBlueprintModifier);
  return v13;
}

uint64_t sub_20A4B402C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1(v0 + 216);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockListBlueprintModifierFactory()
{
  return self;
}

uint64_t sub_20A4B40B0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_20A4B32C8(a1, a2, a3);
}

uint64_t sub_20A4B40D4()
{
  return sub_20A8C8BA0();
}

uint64_t sub_20A4B4140(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for StockListPriceChangeDisplayBlueprintModifier();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *v1;
  uint64_t v11 = (char *)&v15 + *(int *)(v10 + 20) - v7;
  uint64_t v12 = sub_20A8C3410();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, a1, v12);
  sub_20A4342F4(v9 + 16, (uint64_t)&v8[*(int *)(v3 + 24)]);
  strcpy(v8, "ChangeDisplay");
  *((_WORD *)v8 + 7) = -4864;
  sub_20A4B4DA0((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StockListPriceChangeDisplayBlueprintModifier);
  sub_20A4B4B88();
  swift_allocObject();
  sub_20A4B4E08(&qword_26AC82100, (void (*)(uint64_t))type metadata accessor for StockListPriceChangeDisplayBlueprintModifier);
  uint64_t v13 = sub_20A8C8BA0();
  sub_20A4B4E50((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockListPriceChangeDisplayBlueprintModifier);
  return v13;
}

uint64_t sub_20A4B42FC(uint64_t a1)
{
  return sub_20A4B3678(a1);
}

uint64_t sub_20A4B4320(uint64_t a1)
{
  return sub_20A4B3860(a1);
}

uint64_t sub_20A4B4344(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_20A4342F4(v3 + 16, (uint64_t)v8);
  sub_20A4342F4(v3 + 216, (uint64_t)&v9);
  v7[0] = 0x745365766F6D6552;
  v7[1] = 0xEB000000006B636FLL;
  v8[5] = a1;
  sub_20A470EF8((uint64_t)v7, (uint64_t)&v6);
  sub_20A4B4B88();
  swift_allocObject();
  sub_20A4B4CA4();
  swift_retain();
  uint64_t v4 = sub_20A8C8BA0();
  sub_20A4B4CF8((uint64_t)v7);
  return v4;
}

uint64_t sub_20A4B4410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (int *)type metadata accessor for StockListMoveStockBlueprintModifier();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (uint64_t *)((char *)&v15 - v11);
  sub_20A4342F4(*v3 + 16, (uint64_t)&v15 - v11 + 16);
  sub_20A4B4DA0(a1, (uint64_t)v12 + v7[6], (uint64_t (*)(void))type metadata accessor for StockViewModel);
  *uint64_t v12 = 0x636F745365766F4DLL;
  v12[1] = 0xE90000000000006BLL;
  *(void *)((char *)v12 + v7[7]) = a2;
  *(void *)((char *)v12 + v7[8]) = a3;
  sub_20A4B4DA0((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StockListMoveStockBlueprintModifier);
  sub_20A4B4B88();
  swift_allocObject();
  sub_20A4B4E08(&qword_26763B538, (void (*)(uint64_t))type metadata accessor for StockListMoveStockBlueprintModifier);
  swift_retain();
  uint64_t v13 = sub_20A8C8BA0();
  sub_20A4B4E50((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StockListMoveStockBlueprintModifier);
  return v13;
}

uint64_t sub_20A4B45CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockListNewsAttributionBlueprintModifier();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t *)((char *)&v11 - v6);
  sub_20A4B4DA0(a1, (uint64_t)&v11 + *(int *)(v8 + 20) - v6, (uint64_t (*)(void))type metadata accessor for AttributionSource);
  *uint64_t v7 = 0x72756F537377654ELL;
  v7[1] = 0xEA00000000006563;
  sub_20A4B4DA0((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StockListNewsAttributionBlueprintModifier);
  sub_20A4B4B88();
  swift_allocObject();
  sub_20A4B4E08(&qword_26763B530, (void (*)(uint64_t))type metadata accessor for StockListNewsAttributionBlueprintModifier);
  uint64_t v9 = sub_20A8C8BA0();
  sub_20A4B4E50((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StockListNewsAttributionBlueprintModifier);
  return v9;
}

uint64_t sub_20A4B4748(uint64_t a1, uint64_t a2)
{
  return sub_20A4B3A44(a1, a2);
}

uint64_t sub_20A4B476C(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for StockListWatchlistPickerUpdateBlueprintModifier();
  MEMORY[0x270FA5388](updated);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (uint64_t *)((char *)&v15 - v8);
  uint64_t v11 = (char *)&v15 + *(int *)(v10 + 20) - v8;
  uint64_t v12 = sub_20A8C40E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, a1, v12);
  *uint64_t v9 = 0xD000000000000015;
  v9[1] = 0x800000020A8FCB20;
  *(void *)((char *)v9 + *(int *)(updated + 24)) = a2;
  sub_20A4B4DA0((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StockListWatchlistPickerUpdateBlueprintModifier);
  sub_20A4B4B88();
  swift_allocObject();
  sub_20A4B4E08(&qword_26763B528, (void (*)(uint64_t))type metadata accessor for StockListWatchlistPickerUpdateBlueprintModifier);
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_20A8C8BA0();
  sub_20A4B4E50((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StockListWatchlistPickerUpdateBlueprintModifier);
  return v13;
}

uint64_t sub_20A4B4928(uint64_t a1)
{
  return sub_20A4B3D90(a1);
}

uint64_t sub_20A4B494C()
{
  return sub_20A4B4E08(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
}

void *sub_20A4B4994(long long *a1, long long *a2, uint64_t a3, long long *a4, long long *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v32 = a9;
  uint64_t v33 = a11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v31);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32))(boxed_opaque_existential_1, a3, a9);
  uint64_t v29 = a8;
  uint64_t v30 = a10;
  uint64_t v19 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v28);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(v19, a6, a8);
  uint64_t v20 = (void *)swift_allocObject();
  uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
  double v22 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (uint64_t *)((char *)&v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v25 + 16))(v24, v22);
  uint64_t v26 = *v24;
  v20[15] = type metadata accessor for SparklineModelProvider();
  unsigned char v20[16] = &off_26BE68660;
  v20[12] = v26;
  sub_20A42BEBC(a1, (uint64_t)(v20 + 2));
  sub_20A42BEBC(a2, (uint64_t)(v20 + 7));
  sub_20A42BEBC(a4, (uint64_t)(v20 + 17));
  sub_20A42BEBC(a5, (uint64_t)(v20 + 22));
  sub_20A42BEBC(&v28, (uint64_t)(v20 + 27));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return v20;
}

void sub_20A4B4B88()
{
  if (!qword_26AC69FC0)
  {
    type metadata accessor for StockListModel(255);
    sub_20A42D40C();
    sub_20A4B4E08(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unint64_t v0 = sub_20A8C8BB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69FC0);
    }
  }
}

uint64_t sub_20A4B4C40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AttributionSource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_20A4B4CA4()
{
  unint64_t result = qword_26763B540;
  if (!qword_26763B540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B540);
  }
  return result;
}

uint64_t sub_20A4B4CF8(uint64_t a1)
{
  return a1;
}

unint64_t sub_20A4B4D4C()
{
  unint64_t result = qword_26AC7CB88;
  if (!qword_26AC7CB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7CB88);
  }
  return result;
}

uint64_t sub_20A4B4DA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A4B4E08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4B4E50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A4B4EB0(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *(void *)a1 = *a2;
    a1 = v29 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    long long v8 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v8;
    uint64_t v9 = v8;
    uint64_t v10 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v8 - 8);
    swift_bridgeObjectRetain();
    v10(a1 + 16, a2 + 2, v9);
    long long v11 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 80) = v11;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 56, (uint64_t)(a2 + 7));
    long long v12 = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(a1 + 120) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 96, (uint64_t)(a2 + 12));
    long long v13 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 160) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 136, (uint64_t)(a2 + 17));
    uint64_t v14 = a3[9];
    uint64_t v15 = a1 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = sub_20A8C3410();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v47 = a3;
    uint64_t v18 = a3[10];
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (uint64_t)a2 + v18;
    uint64_t v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    *uint64_t v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    uint64_t v22 = type metadata accessor for AttributionSource();
    uint64_t v23 = *(int *)(v22 + 20);
    __dst = (char *)v19 + v23;
    uint64_t v46 = v22;
    uint64_t v24 = (const void *)(v20 + v23);
    uint64_t v25 = sub_20A8C2530();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      sub_20A4BA088(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
      memcpy(__dst, v24, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v26 + 16))(__dst, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
    }
    uint64_t v30 = *(int *)(v46 + 24);
    uint64_t v31 = *(void **)(v20 + v30);
    *(void *)((char *)v19 + v30) = v31;
    uint64_t v32 = v47[11];
    uint64_t v33 = a1 + v32;
    uint64_t v34 = (uint64_t)a2 + v32;
    uint64_t v35 = sub_20A8C3190();
    uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16);
    id v37 = v31;
    v36(v33, v34, v35);
    uint64_t v38 = v47[12];
    long long v39 = *(_OWORD *)((char *)a2 + v38 + 24);
    *(_OWORD *)(a1 + v38 + 24) = v39;
    (**(void (***)(void))(v39 - 8))();
    uint64_t v40 = v47[13];
    uint64_t v41 = a1 + v40;
    uint64_t v42 = (uint64_t)a2 + v40;
    uint64_t v43 = *(void *)(v42 + 8);
    *(void *)uint64_t v41 = *(void *)v42;
    *(void *)(v41 + 8) = v43;
    *(_OWORD *)(v41 + 16) = *(_OWORD *)(v42 + 16);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_20A4B52EC(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  __swift_destroy_boxed_opaque_existential_1(a1 + 96);
  __swift_destroy_boxed_opaque_existential_1(a1 + 136);
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[10];
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for AttributionSource();
  uint64_t v8 = v6 + *(int *)(v7 + 20);
  uint64_t v9 = sub_20A8C2530();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }

  uint64_t v11 = a1 + a2[11];
  uint64_t v12 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[12]);

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A4B549C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2 + 16;
  long long v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  v10(a1 + 16, v7, v9);
  long long v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 56, a2 + 56);
  long long v12 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 96, a2 + 96);
  long long v13 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 160) = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 136, a2 + 136);
  uint64_t v14 = a3[9];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v46 = a3;
  uint64_t v18 = a3[10];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)(a2 + v18 + 8);
  *uint64_t v19 = *(void *)(a2 + v18);
  v19[1] = v21;
  uint64_t v22 = type metadata accessor for AttributionSource();
  uint64_t v23 = *(int *)(v22 + 20);
  __dst = (char *)v19 + v23;
  uint64_t v45 = v22;
  uint64_t v24 = (const void *)(v20 + v23);
  uint64_t v25 = sub_20A8C2530();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48);
  swift_bridgeObjectRetain();
  if (v27(v24, 1, v25))
  {
    sub_20A4BA088(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    memcpy(__dst, v24, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v26 + 16))(__dst, v24, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
  }
  uint64_t v29 = *(int *)(v45 + 24);
  uint64_t v30 = *(void **)(v20 + v29);
  *(void *)((char *)v19 + v29) = v30;
  uint64_t v31 = v46[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_20A8C3190();
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);
  id v36 = v30;
  v35(v32, v33, v34);
  uint64_t v37 = v46[12];
  long long v38 = *(_OWORD *)(a2 + v37 + 24);
  *(_OWORD *)(a1 + v37 + 24) = v38;
  (**(void (***)(void))(v38 - 8))();
  uint64_t v39 = v46[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = *(void *)(v41 + 8);
  *(void *)uint64_t v40 = *(void *)v41;
  *(void *)(v40 + 8) = v42;
  *(_OWORD *)(v40 + 16) = *(_OWORD *)(v41 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_20A4B5888(uint64_t *a1, uint64_t *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  __swift_assign_boxed_opaque_existential_1(a1 + 7, a2 + 7);
  __swift_assign_boxed_opaque_existential_1(a1 + 12, a2 + 12);
  __swift_assign_boxed_opaque_existential_1(a1 + 17, a2 + 17);
  uint64_t v6 = a3[9];
  uint64_t v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C3410();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  long long v38 = a3;
  uint64_t v10 = a3[10];
  long long v11 = (uint64_t *)((char *)a1 + v10);
  long long v12 = (char *)a2 + v10;
  *long long v11 = *(uint64_t *)((char *)a2 + v10);
  v11[1] = *(uint64_t *)((char *)a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = type metadata accessor for AttributionSource();
  uint64_t v13 = *(int *)(v37 + 20);
  uint64_t v14 = (char *)v11 + v13;
  uint64_t v15 = &v12[v13];
  uint64_t v16 = sub_20A8C2530();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  id v36 = v14;
  LODWORD(v14) = v18(v14, 1, v16);
  int v19 = v18(v15, 1, v16);
  if (v14)
  {
    if (!v19)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v36, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v36, 0, 1, v16);
      goto LABEL_9;
    }
    sub_20A4BA088(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    size_t v21 = *(void *)(*(void *)(v20 - 8) + 64);
    uint64_t v22 = v36;
  }
  else
  {
    if (!v19)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 24))(v36, v15, v16);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v36, v16);
    sub_20A4BA088(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    size_t v21 = *(void *)(*(void *)(v23 - 8) + 64);
    uint64_t v22 = v36;
  }
  memcpy(v22, v15, v21);
LABEL_9:
  uint64_t v24 = *(int *)(v37 + 24);
  uint64_t v25 = *(void **)((char *)v11 + v24);
  uint64_t v26 = *(void **)&v12[v24];
  *(void *)((char *)v11 + v24) = v26;
  id v27 = v26;

  uint64_t v28 = v38[11];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = sub_20A8C3190();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 24))(v29, v30, v31);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)a1 + v38[12]), (uint64_t *)((char *)a2 + v38[12]));
  uint64_t v32 = v38[13];
  uint64_t v33 = (uint64_t *)((char *)a1 + v32);
  uint64_t v34 = (char *)a2 + v32;
  *uint64_t v33 = *(uint64_t *)((char *)a2 + v32);
  v33[1] = *(uint64_t *)((char *)a2 + v32 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33[2] = *((void *)v34 + 2);
  long long v33[3] = *((void *)v34 + 3);
  return a1;
}

uint64_t sub_20A4B5C20(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  uint64_t v8 = a3[9];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  uint64_t v11 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[10];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  uint64_t v15 = type metadata accessor for AttributionSource();
  uint64_t v16 = *(int *)(v15 + 20);
  uint64_t v17 = (void *)(v13 + v16);
  uint64_t v18 = (const void *)(v14 + v16);
  uint64_t v19 = sub_20A8C2530();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_20A4BA088(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  *(void *)(v13 + *(int *)(v15 + 24)) = *(void *)(v14 + *(int *)(v15 + 24));
  uint64_t v22 = a3[11];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  uint64_t v26 = a3[12];
  uint64_t v27 = a3[13];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  long long v30 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v30;
  *(void *)(v28 + 32) = *(void *)(v29 + 32);
  uint64_t v31 = (_OWORD *)(a1 + v27);
  uint64_t v32 = (_OWORD *)(a2 + v27);
  long long v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  return a1;
}

uint64_t sub_20A4B5EB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  __swift_destroy_boxed_opaque_existential_1(a1 + 96);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  __swift_destroy_boxed_opaque_existential_1(a1 + 136);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  uint64_t v9 = a3[9];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v45 = a3;
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(a2 + v13 + 8);
  void *v14 = *(void *)(a2 + v13);
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v44 = type metadata accessor for AttributionSource();
  uint64_t v17 = *(int *)(v44 + 20);
  uint64_t v18 = (char *)v14 + v17;
  uint64_t v19 = (char *)(v15 + v17);
  uint64_t v20 = sub_20A8C2530();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v43 = v18;
  LODWORD(v18) = v22(v18, 1, v20);
  int v23 = v22(v19, 1, v20);
  if (v18)
  {
    if (!v23)
    {
      (*(void (**)(void *, char *, uint64_t))(v21 + 32))(v43, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v43, 0, 1, v20);
      goto LABEL_9;
    }
    sub_20A4BA088(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    size_t v25 = *(void *)(*(void *)(v24 - 8) + 64);
    uint64_t v26 = v43;
  }
  else
  {
    if (!v23)
    {
      (*(void (**)(void *, char *, uint64_t))(v21 + 40))(v43, v19, v20);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v43, v20);
    sub_20A4BA088(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    size_t v25 = *(void *)(*(void *)(v27 - 8) + 64);
    uint64_t v26 = v43;
  }
  memcpy(v26, v19, v25);
LABEL_9:
  uint64_t v28 = *(int *)(v44 + 24);
  uint64_t v29 = *(void **)((char *)v14 + v28);
  *(void *)((char *)v14 + v28) = *(void *)(v15 + v28);

  uint64_t v30 = v45[11];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
  uint64_t v34 = v45[12];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  __swift_destroy_boxed_opaque_existential_1(a1 + v34);
  long long v37 = *(_OWORD *)(v36 + 16);
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  *(_OWORD *)(v35 + 16) = v37;
  *(void *)(v35 + 32) = *(void *)(v36 + 32);
  uint64_t v38 = v45[13];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  uint64_t v41 = *(void *)(v40 + 8);
  *(void *)uint64_t v39 = *(void *)v40;
  *(void *)(v39 + 8) = v41;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v39 + 16) = *(_OWORD *)(v40 + 16);
  return a1;
}

uint64_t sub_20A4B6260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A4B6274);
}

uint64_t sub_20A4B6274(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_20A8C3410();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[9];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = type metadata accessor for AttributionSource();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[10];
    goto LABEL_9;
  }
  uint64_t v14 = sub_20A8C3190();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[11];

  return v15(v17, a2, v16);
}

uint64_t sub_20A4B63EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A4B6400);
}

uint64_t sub_20A4B6400(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_20A8C3410();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[9];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = type metadata accessor for AttributionSource();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_7;
  }
  uint64_t v14 = sub_20A8C3190();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[11];

  return v15(v17, a2, a2, v16);
}

uint64_t type metadata accessor for StockListPrewarmBlueprintModifier()
{
  uint64_t result = qword_26AC7C240;
  if (!qword_26AC7C240) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A4B65C4()
{
  uint64_t result = sub_20A8C3410();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for AttributionSource();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_20A8C3190();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void sub_20A4B66F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v4 = type metadata accessor for StockListPrewarmBlueprintModifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  long long v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v3;
  uint64_t v19 = v3;
  sub_20A4BA088(0, &qword_26AC7F6D0, MEMORY[0x263F7AF08], MEMORY[0x263F8D488]);
  sub_20A8C6670();
  sub_20A4B9DB4(v3, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StockListPrewarmBlueprintModifier);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  sub_20A4B9FC0((uint64_t)v7, v9 + v8, (uint64_t (*)(void))type metadata accessor for StockListPrewarmBlueprintModifier);
  uint64_t v10 = (void *)sub_20A8C6450();
  sub_20A8C64F0();
  swift_release();
  swift_release();

  sub_20A4B9DB4(v19, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StockListPrewarmBlueprintModifier);
  uint64_t v11 = swift_allocObject();
  sub_20A4B9FC0((uint64_t)v7, v11 + v8, (uint64_t (*)(void))type metadata accessor for StockListPrewarmBlueprintModifier);
  uint64_t v12 = (void *)(v11 + ((v8 + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v14 = v20;
  uint64_t v13 = v21;
  *uint64_t v12 = v20;
  v12[1] = v13;
  swift_retain();
  uint64_t v15 = (void *)sub_20A8C6450();
  sub_20A8C6500();
  swift_release();
  swift_release();

  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v14;
  *(void *)(v16 + 24) = v13;
  swift_retain();
  uint64_t v17 = (void *)sub_20A8C6450();
  sub_20A8C6550();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_20A4B69C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockListPrewarmBlueprintModifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = *a1;
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 56), *(void *)(a2 + 80));
  sub_20A8C39E0();
  sub_20A4B9DB4(a2, (uint64_t)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StockListPrewarmBlueprintModifier);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  sub_20A4B9FC0((uint64_t)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, (uint64_t (*)(void))type metadata accessor for StockListPrewarmBlueprintModifier);
  *(void *)(v9 + ((v6 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v7;
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)sub_20A8C6450();
  uint64_t v11 = sub_20A8C6500();
  swift_release();
  swift_release();

  return v11;
}

uint64_t sub_20A4B6B74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v18 = a3;
  uint64_t v20 = a4;
  uint64_t v19 = sub_20A8C34C0();
  uint64_t v16 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C40E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4342F4(a2 + 136, (uint64_t)v21);
  v15[1] = v21[4];
  __swift_project_boxed_opaque_existential_1(v21, v21[3]);
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 16), *(void *)(a2 + 40));
  sub_20A8C3600();
  sub_20A8C40D0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v11 = sub_20A8C3B10();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  uint64_t v12 = sub_20A8C2EE0();
  uint64_t result = sub_20A8C2EC0();
  uint64_t v14 = v20;
  *uint64_t v20 = v11;
  v14[1] = v12;
  _OWORD v14[2] = result;
  return result;
}

uint64_t sub_20A4B6D88(long long *a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v135 = a4;
  uint64_t v136 = a3;
  sub_20A4B9C9C(0, &qword_26AC6A428, MEMORY[0x263F7D950]);
  uint64_t v134 = v6;
  uint64_t v133 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  long long v146 = (char *)&v117 - v7;
  sub_20A4B9B70();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v126 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4B9C9C(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v144 = *(void *)(v10 - 8);
  uint64_t v145 = v10;
  MEMORY[0x270FA5388](v10);
  double v143 = (char *)&v117 - v11;
  uint64_t v130 = sub_20A8C40E0();
  uint64_t v129 = *(void *)(v130 - 8);
  MEMORY[0x270FA5388](v130);
  uint64_t v128 = (char *)&v117 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  BOOL v125 = (char *)&v117 - v14;
  sub_20A4AE540();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v138 = (char *)&v117 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4B9C9C(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  uint64_t v137 = v17;
  uint64_t v139 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  id v121 = (char *)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v123 = (char *)&v117 - v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v119 = (char *)&v117 - v22;
  uint64_t v23 = type metadata accessor for AttributionSource();
  MEMORY[0x270FA5388](v23 - 8);
  size_t v25 = (uint64_t *)((char *)&v117 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v148 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v148);
  double v124 = (uint64_t *)((char *)&v117 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A42D93C();
  uint64_t v28 = v27;
  uint64_t v29 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  id v122 = (char *)&v117 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v127 = (char *)&v117 - v32;
  uint64_t v152 = sub_20A8C3F00();
  uint64_t v33 = *(void *)(v152 - 8);
  MEMORY[0x270FA5388](v152);
  *((void *)&v151 + 1) = (char *)&v117 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v141 = *a1;
  uint64_t v120 = *((void *)a1 + 2);
  sub_20A4BA088(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
  uint64_t v35 = swift_allocObject();
  uint64_t v36 = v35;
  *(_OWORD *)(v35 + 16) = xmmword_20A8D4540;
  uint64_t v37 = v141;
  int64_t v38 = *(void *)(v141 + 16);
  uint64_t v39 = MEMORY[0x263F8D750];
  *(void *)(v35 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v35 + 64) = v39;
  *(void *)(v35 + 32) = v38;
  *(void *)&long long v154 = 0;
  *((void *)&v154 + 1) = 0xE000000000000000;
  uint64_t v40 = MEMORY[0x263F8EE78];
  uint64_t v142 = v28;
  uint64_t v131 = v29;
  uint64_t v132 = a2;
  uint64_t v140 = v37;
  if (v38)
  {
    uint64_t v117 = v35;
    id v118 = v25;
    uint64_t v158 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_20A68C494(0, v38, 0);
    uint64_t v42 = *(void *)(v33 + 16);
    uint64_t v41 = v33 + 16;
    unint64_t v43 = v37 + ((*(unsigned __int8 *)(v41 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 64));
    uint64_t v150 = *(void *)(v41 + 56);
    *(void *)&long long v151 = v42;
    uint64_t v149 = (int *)(v41 - 8);
    do
    {
      uint64_t v45 = *((void *)&v151 + 1);
      uint64_t v44 = v152;
      ((void (*)(void, unint64_t, uint64_t))v151)(*((void *)&v151 + 1), v43, v152);
      uint64_t v46 = sub_20A8C3EC0();
      uint64_t v48 = v47;
      (*(void (**)(uint64_t, uint64_t))v149)(v45, v44);
      uint64_t v40 = v158;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C494(0, *(void *)(v40 + 16) + 1, 1);
        uint64_t v40 = v158;
      }
      unint64_t v50 = *(void *)(v40 + 16);
      unint64_t v49 = *(void *)(v40 + 24);
      if (v50 >= v49 >> 1)
      {
        sub_20A68C494(v49 > 1, v50 + 1, 1);
        uint64_t v40 = v158;
      }
      *(void *)(v40 + 16) = v50 + 1;
      uint64_t v51 = v40 + 16 * v50;
      *(void *)(v51 + 32) = v46;
      *(void *)(v51 + 40) = v48;
      v43 += v150;
      --v38;
    }
    while (v38);
    swift_bridgeObjectRelease();
    a2 = v132;
    uint64_t v28 = v142;
    uint64_t v52 = v131;
    size_t v25 = v118;
    uint64_t v36 = v117;
  }
  else
  {
    uint64_t v52 = v29;
  }
  uint64_t v158 = v40;
  sub_20A4B9D5C();
  sub_20A4B94F8((unint64_t *)&qword_26AC7F808, (void (*)(uint64_t))sub_20A4B9D5C);
  sub_20A8CE1E0();
  swift_bridgeObjectRelease();
  sub_20A8CE3D0();
  swift_bridgeObjectRelease();
  long long v53 = v154;
  *(void *)(v36 + 96) = MEMORY[0x263F8D310];
  *(void *)(v36 + 104) = sub_20A43F830();
  *(_OWORD *)(v36 + 72) = v53;
  sub_20A43F884();
  uint64_t v54 = (void *)sub_20A8CF180();
  sub_20A8CEA00();
  sub_20A8C7D90();
  swift_bridgeObjectRelease();

  uint64_t v55 = type metadata accessor for StockListPrewarmBlueprintModifier();
  __swift_project_boxed_opaque_existential_1((void *)(a2 + *(int *)(v55 + 48)), *(void *)(a2 + *(int *)(v55 + 48) + 24));
  char v56 = sub_20A8C3850();
  uint64_t v149 = (int *)v55;
  if (v56)
  {
    uint64_t v152 = MEMORY[0x263F8EE78];
    unint64_t v57 = v125;
  }
  else
  {
    sub_20A4B9DB4(a2 + *(int *)(v55 + 40), (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for AttributionSource);
    uint64_t v58 = sub_20A6868E8(v25);
    int64_t v59 = v124;
    *double v124 = v58;
    v59[1] = v60;
    v59[2] = v61;
    v59[3] = v62;
    swift_storeEnumTagMultiPayload();
    sub_20A4B94F8(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unsigned int v63 = v127;
    sub_20A8C8320();
    uint64_t v156 = 0;
    long long v154 = 0u;
    long long v155 = 0u;
    char v157 = 2;
    sub_20A4BA088(0, &qword_26AC7FF28, (uint64_t (*)(uint64_t))sub_20A42D93C, MEMORY[0x263F8E0F8]);
    unint64_t v64 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    uint64_t v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = xmmword_20A8D3DC0;
    (*(void (**)(unint64_t, char *, uint64_t))(v52 + 16))(v65 + v64, v63, v28);
    uint64_t v66 = sub_20A4B94F8(&qword_26AC69D98, (void (*)(uint64_t))sub_20A42D93C);
    uint64_t v67 = sub_20A4B94F8(&qword_26AC69D90, (void (*)(uint64_t))sub_20A42D93C);
    MEMORY[0x21051E250](v65, v28, v66, v67);
    sub_20A42D40C();
    uint64_t v68 = v119;
    sub_20A8C8810();
    unint64_t v69 = sub_20A46DD54(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v70 = v69;
    unint64_t v72 = *(void *)(v69 + 16);
    unint64_t v71 = *(void *)(v69 + 24);
    if (v72 >= v71 >> 1) {
      uint64_t v152 = sub_20A46DD54(v71 > 1, v72 + 1, 1, v69);
    }
    else {
      uint64_t v152 = v69;
    }
    unint64_t v57 = v125;
    uint64_t v73 = v152;
    *(void *)(v152 + 16) = v72 + 1;
    (*(void (**)(unint64_t, char *, uint64_t, unint64_t))(v139 + 32))(v73+ ((*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80))+ *(void *)(v139 + 72) * v72, v68, v137, v70);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v127, v28);
  }
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 16), *(void *)(a2 + 40));
  sub_20A8C3600();
  *(void *)&long long v151 = sub_20A8C4070();
  *((void *)&v151 + 1) = v74;
  uint64_t v75 = a2;
  id v76 = *(void (**)(char *, uint64_t))(v129 + 8);
  uint64_t v77 = v130;
  v76(v57, v130);
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 16), *(void *)(a2 + 40));
  uint64_t v78 = v128;
  sub_20A8C3600();
  uint64_t v79 = sub_20A8C4050();
  uint64_t v150 = v80;
  v76(v78, v77);
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 16), *(void *)(a2 + 40));
  uint64_t v81 = sub_20A8C3690();
  uint64_t v82 = v81;
  uint64_t v83 = v140;
  if (*(void *)(v140 + 16))
  {
    MEMORY[0x270FA5388](v81);
    *((_OWORD *)&v117 - 2) = v141;
    *(&v117 - 2) = v120;
    *(&v117 - 1) = v75;
    swift_bridgeObjectRetain();
    uint64_t v84 = v147;
    uint64_t v85 = sub_20A449B4C((void (*)(uint64_t))sub_20A4B9E1C, (uint64_t)(&v117 - 6), v83, (uint64_t)v153);
    uint64_t v147 = v84;
    swift_bridgeObjectRelease();
    long long v154 = v151;
    *(void *)&long long v155 = v79;
    *((void *)&v155 + 1) = v150;
    uint64_t v156 = v82;
    char v157 = 0;
    uint64_t v86 = sub_20A4B94F8(&qword_26AC69D98, (void (*)(uint64_t))sub_20A42D93C);
    uint64_t v87 = sub_20A4B94F8(&qword_26AC69D90, (void (*)(uint64_t))sub_20A42D93C);
    MEMORY[0x21051E250](v85, v142, v86, v87);
    sub_20A42D40C();
    sub_20A4B94F8(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    uint64_t v88 = v121;
    sub_20A8C8810();
    unint64_t v89 = v152;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v89 = sub_20A46DD54(0, *(void *)(v89 + 16) + 1, 1, v89);
    }
    uint64_t v90 = v137;
    int64_t v91 = v149;
    unint64_t v93 = *(void *)(v89 + 16);
    unint64_t v92 = *(void *)(v89 + 24);
    if (v93 >= v92 >> 1) {
      unint64_t v89 = sub_20A46DD54(v92 > 1, v93 + 1, 1, v89);
    }
    *(void *)(v89 + 16) = v93 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v139 + 32))(v89+ ((*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80))+ *(void *)(v139 + 72) * v93, v88, v90);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_20A4B94F8(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    uint64_t v94 = v122;
    sub_20A8C8320();
    long long v154 = v151;
    *(void *)&long long v155 = v79;
    *((void *)&v155 + 1) = v150;
    uint64_t v156 = v82;
    char v157 = 1;
    sub_20A4BA088(0, &qword_26AC7FF28, (uint64_t (*)(uint64_t))sub_20A42D93C, MEMORY[0x263F8E0F8]);
    uint64_t v95 = v131;
    unint64_t v96 = (*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
    uint64_t v97 = swift_allocObject();
    *(_OWORD *)(v97 + 16) = xmmword_20A8D3DC0;
    uint64_t v98 = v142;
    (*(void (**)(unint64_t, char *, uint64_t))(v95 + 16))(v97 + v96, v94, v142);
    uint64_t v99 = sub_20A4B94F8(&qword_26AC69D98, (void (*)(uint64_t))sub_20A42D93C);
    uint64_t v100 = sub_20A4B94F8(&qword_26AC69D90, (void (*)(uint64_t))sub_20A42D93C);
    MEMORY[0x21051E250](v97, v98, v99, v100);
    sub_20A42D40C();
    sub_20A8C8810();
    unint64_t v89 = v152;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v89 = sub_20A46DD54(0, *(void *)(v89 + 16) + 1, 1, v89);
    }
    uint64_t v75 = v132;
    uint64_t v90 = v137;
    int64_t v91 = v149;
    unint64_t v102 = *(void *)(v89 + 16);
    unint64_t v101 = *(void *)(v89 + 24);
    if (v102 >= v101 >> 1) {
      unint64_t v89 = sub_20A46DD54(v101 > 1, v102 + 1, 1, v89);
    }
    *(void *)(v89 + 16) = v102 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v139 + 32))(v89+ ((*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80))+ *(void *)(v139 + 72) * v102, v123, v90);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v122, v98);
  }
  uint64_t v103 = sub_20A4B9C3C((unint64_t *)&unk_26AC69F20);
  uint64_t v104 = sub_20A4B9C3C(&qword_26AC69F18);
  MEMORY[0x21051E250](v89, v90, v103, v104);
  sub_20A42D40C();
  sub_20A4B94F8(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
  sub_20A8CBB20();
  sub_20A4B9E40();
  uint64_t v106 = &v146[*(int *)(v105 + 48)];
  (*(void (**)(void))(v144 + 16))();
  uint64_t v107 = v75 + v91[13];
  uint64_t v108 = *(void *)(v107 + 8);
  if (v108)
  {
    *(void *)uint64_t v106 = *(void *)v107;
    *((void *)v106 + 1) = v108;
    *((_OWORD *)v106 + 1) = *(_OWORD *)(v107 + 16);
    uint64_t v109 = *MEMORY[0x263F7D520];
    uint64_t v110 = sub_20A8C8B80();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v110 - 8) + 104))(v106, v109, v110);
  }
  else
  {
    uint64_t v111 = *MEMORY[0x263F7D528];
    uint64_t v112 = sub_20A8C8B80();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v112 - 8) + 104))(v106, v111, v112);
  }
  uint64_t v113 = v133;
  uint64_t v114 = v146;
  uint64_t v115 = v134;
  (*(void (**)(char *, void, uint64_t))(v133 + 104))(v146, *MEMORY[0x263F7D938], v134);
  swift_bridgeObjectRetain();
  v136(v114);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v114, v115);
  return (*(uint64_t (**)(char *, uint64_t))(v144 + 8))(v143, v145);
}

uint64_t sub_20A4B8100@<X0>(NSObject *a1@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(uint64_t)@<X3>, void *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v101 = a5;
  uint64_t v109 = a4;
  uint64_t v104 = a3;
  uint64_t v100 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v100);
  uint64_t v99 = (uint64_t)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C40E0();
  uint64_t v96 = *(void *)(v8 - 8);
  uint64_t v97 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v94 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x270FA5388](v95);
  uint64_t v98 = (uint64_t)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8C4030();
  MEMORY[0x270FA5388](v11 - 8);
  int64_t v91 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v93 = (uint64_t)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_20A8C3410();
  uint64_t v15 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v107 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8C3F00();
  uint64_t v108 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v106 = ((char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v88 = type metadata accessor for StockViewModel();
  MEMORY[0x270FA5388](v88);
  uint64_t v92 = (uint64_t)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v90 = (char *)&v82 - v21;
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A4BA088(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v105 = (uint64_t)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v82 - v26;
  sub_20A4BA088(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], v22);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v86 = (uint64_t)&v82 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v110 = (uint64_t)&v82 - v31;
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)&v82 - v33;
  uint64_t v35 = a1;
  uint64_t v36 = sub_20A8C3EC0();
  uint64_t v38 = *(void *)(a2 + 16);
  uint64_t v102 = v17;
  uint64_t v103 = v27;
  if (v38 && (unint64_t v39 = sub_20A4D1B24(v36, v37), (v40 & 1) != 0))
  {
    unint64_t v41 = v39;
    uint64_t v42 = v35;
    unint64_t v43 = v34;
    uint64_t v44 = *(void *)(a2 + 56);
    uint64_t v45 = sub_20A8C3E10();
    uint64_t v46 = *(void *)(v45 - 8);
    uint64_t v84 = (void (*)(char *, NSObject *, uint64_t))a2;
    uint64_t v47 = v46;
    uint64_t v48 = v44 + *(void *)(v46 + 72) * v41;
    uint64_t v34 = v43;
    uint64_t v35 = v42;
    uint64_t v17 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v34, v48, v45);
    uint64_t v49 = v45;
    uint64_t v27 = v103;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v34, 0, 1, v49);
  }
  else
  {
    uint64_t v50 = sub_20A8C3E10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v34, 1, 1, v50);
  }
  swift_bridgeObjectRelease();
  uint64_t v51 = v109;
  sub_20A4B8B54((uint64_t)v104, v35, v109, (uint64_t)v34, v27);
  uint64_t v52 = (uint64_t)v34;
  uint64_t v87 = v34;
  uint64_t v84 = *(void (**)(char *, NSObject *, uint64_t))(v108 + 16);
  long long v53 = v106;
  v84((char *)v106, v35, v17);
  uint64_t v104 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AEF0];
  sub_20A4B9ED0(v52, v110, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  uint64_t v83 = type metadata accessor for StockSparklineViewModel;
  uint64_t v54 = v105;
  sub_20A4B9ED0((uint64_t)v27, v105, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel);
  uint64_t v55 = (char *)v51 + *(int *)(type metadata accessor for StockListPrewarmBlueprintModifier() + 36);
  uint64_t v85 = v15;
  char v56 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  unint64_t v57 = v107;
  uint64_t v58 = v17;
  uint64_t v59 = v89;
  v56(v107, v55, v89);
  uint64_t v60 = (uint64_t)v90;
  v84(v90, v53, v58);
  uint64_t v61 = (int *)v88;
  uint64_t v62 = v110;
  unsigned int v63 = v104;
  sub_20A4B9ED0(v110, v60 + *(int *)(v88 + 20), &qword_26AC68FB0, v104);
  uint64_t v64 = v54;
  uint64_t v65 = v83;
  sub_20A4B9ED0(v64, v60 + v61[6], &qword_26AC754A0, v83);
  v56((char *)(v60 + v61[8]), v57, v59);
  *(unsigned char *)(v60 + v61[9]) = 0;
  uint64_t v66 = v86;
  sub_20A4B9ED0(v62, v86, &qword_26AC68FB0, v63);
  uint64_t v67 = v91;
  uint64_t v68 = (char *)v106;
  sub_20A8C3E70();
  uint64_t v69 = v93;
  sub_20A5EC850(v66, v67, 9666786, 0xA300000000000000, v93);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v107, v59);
  sub_20A4B9F50(v105, &qword_26AC754A0, v65);
  sub_20A4B9F50(v110, &qword_26AC68FB0, v63);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v68, v102);
  sub_20A4B9FC0(v69, v60 + v61[7], (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  uint64_t v70 = v60;
  uint64_t v71 = v92;
  sub_20A4B9DB4(v60, v92, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  unint64_t v72 = v109 + 2;
  uint64_t v73 = v109;
  __swift_project_boxed_opaque_existential_1(v109 + 2, v109[5]);
  LOBYTE(v59) = sub_20A8C36F0();
  __swift_project_boxed_opaque_existential_1(v72, v73[5]);
  uint64_t v74 = v94;
  sub_20A8C3600();
  uint64_t v75 = sub_20A8C4050();
  uint64_t v77 = v76;
  (*(void (**)(char *, uint64_t))(v96 + 8))(v74, v97);
  uint64_t v78 = v98;
  sub_20A4B9FC0(v71, v98, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  uint64_t v79 = v95;
  *(unsigned char *)(v78 + *(int *)(v95 + 20)) = v59 & 1;
  uint64_t v80 = (uint64_t *)(v78 + *(int *)(v79 + 24));
  *uint64_t v80 = v75;
  v80[1] = v77;
  sub_20A4B9DB4(v78, v99, type metadata accessor for StockListStockModel);
  swift_storeEnumTagMultiPayload();
  sub_20A4B94F8(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
  sub_20A8C8320();
  sub_20A4BA028(v78, type metadata accessor for StockListStockModel);
  sub_20A4BA028(v70, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  sub_20A4B9F50((uint64_t)v103, &qword_26AC754A0, v65);
  return sub_20A4B9F50((uint64_t)v87, &qword_26AC68FB0, v104);
}

uint64_t sub_20A4B8B54@<X0>(uint64_t a1@<X2>, NSObject *a2@<X3>, void *a3@<X4>, uint64_t a4@<X5>, unsigned char *a5@<X8>)
{
  uint64_t v66 = a4;
  uint64_t v61 = a3;
  uint64_t v68 = a5;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A4BA088(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v60 = &v55[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v55[-v11];
  sub_20A4BA088(0, &qword_26AC7F4E0, MEMORY[0x263F7CB28], v7);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = &v55[-v14];
  uint64_t v67 = sub_20A8CDCD0();
  uint64_t v65 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v64 = &v55[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v17);
  uint64_t v62 = &v55[-v18];
  sub_20A4BA088(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], v7);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = &v55[-v20];
  uint64_t v22 = sub_20A8C3D00();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  unsigned int v63 = &v55[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = &v55[-v26];
  uint64_t v28 = sub_20A8C3EC0();
  if (*(void *)(a1 + 16) && (unint64_t v30 = sub_20A4D1B24(v28, v29), (v31 & 1) != 0))
  {
    (*(void (**)(unsigned char *, unint64_t, uint64_t))(v23 + 16))(v21, *(void *)(a1 + 56) + *(void *)(v23 + 72) * v30, v22);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v22);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    uint64_t v32 = (unint64_t *)&unk_26AC68F80;
    uint64_t v33 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AEB8];
    uint64_t v34 = (uint64_t)v21;
LABEL_9:
    sub_20A4B9F50(v34, v32, v33);
    uint64_t v39 = type metadata accessor for StockSparklineViewModel(0);
    return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v68, 1, 1, v39);
  }
  uint64_t v35 = *(void **)(v23 + 32);
  ((void (*)(char *, unsigned char *, uint64_t))v35)(v27, v21, v22);
  __swift_project_boxed_opaque_existential_1(v61 + 12, v61[15]);
  uint64_t v36 = v66;
  sub_20A61E8FC(v27, v66, a2, (uint64_t)v15, 0.02);
  uint64_t v37 = v65;
  uint64_t v38 = v67;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v65 + 48))(v15, 1, v67) == 1)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
    uint64_t v32 = &qword_26AC7F4E0;
    uint64_t v33 = (uint64_t (*)(uint64_t))MEMORY[0x263F7CB28];
    uint64_t v34 = (uint64_t)v15;
    goto LABEL_9;
  }
  uint64_t v61 = v35;
  unint64_t v41 = v62;
  uint64_t v58 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v37 + 32);
  uint64_t v59 = v37 + 32;
  v58(v62, v15, v38);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v37 + 16))(v64, v41, v38);
  (*(void (**)(unsigned char *, char *, uint64_t))(v23 + 16))(v63, v27, v22);
  sub_20A4B9ED0(v36, (uint64_t)v12, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  uint64_t v42 = sub_20A8C3E10();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v43 + 48);
  if (v44(v12, 1, v42) == 1)
  {
    sub_20A4B9F50((uint64_t)v12, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    uint64_t v57 = 0;
    int v56 = 1;
  }
  else
  {
    uint64_t v57 = sub_20A8C3E00();
    int v56 = v45 & 1;
    (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v12, v42);
  }
  uint64_t v46 = v60;
  sub_20A4B9ED0(v66, (uint64_t)v60, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  if (v44(v46, 1, v42) == 1)
  {
    uint64_t v47 = v67;
    (*(void (**)(unsigned char *, uint64_t))(v65 + 8))(v62, v67);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
    sub_20A4B9F50((uint64_t)v46, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    uint64_t v48 = 0;
    char v49 = 1;
  }
  else
  {
    uint64_t v48 = sub_20A8C3D10();
    char v49 = v50 & 1;
    uint64_t v47 = v67;
    (*(void (**)(unsigned char *, uint64_t))(v65 + 8))(v62, v67);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
    (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v46, v42);
  }
  uint64_t v51 = v68;
  v58(v68, v64, v47);
  uint64_t v52 = (int *)type metadata accessor for StockSparklineViewModel(0);
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v61)(&v51[v52[8]], v63, v22);
  long long v53 = &v51[v52[5]];
  *(void *)long long v53 = v57;
  v53[8] = v56;
  uint64_t v54 = &v51[v52[6]];
  *(void *)uint64_t v54 = v48;
  v54[8] = v49;
  v51[v52[7]] = 0;
  return (*(uint64_t (**)(unsigned char *, void, uint64_t, int *))(*((void *)v52 - 1) + 56))(v51, 0, 1, v52);
}

uint64_t sub_20A4B9340(void *a1, void (*a2)(char *))
{
  sub_20A4B9C9C(0, &qword_26AC6A428, MEMORY[0x263F7D950]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  double v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v12 - v8;
  *(uint64_t *)((char *)&v12 - v8) = (uint64_t)a1;
  (*(void (**)(char *, void, uint64_t, double))(v6 + 104))((char *)&v12 - v8, *MEMORY[0x263F7D930], v5, v7);
  id v10 = a1;
  a2(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_20A4B9468()
{
  return sub_20A4B94F8(&qword_26AC7C238, (void (*)(uint64_t))type metadata accessor for StockListPrewarmBlueprintModifier);
}

uint64_t sub_20A4B94B0()
{
  return sub_20A4B94F8(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
}

uint64_t sub_20A4B94F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4B9540()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 16) + 16), *(void *)(*(void *)(v0 + 16) + 40));
  return sub_20A8C35B0();
}

uint64_t sub_20A4B9590()
{
  unint64_t v1 = (int *)type metadata accessor for StockListPrewarmBlueprintModifier();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  __swift_destroy_boxed_opaque_existential_1(v2 + 56);
  __swift_destroy_boxed_opaque_existential_1(v2 + 96);
  __swift_destroy_boxed_opaque_existential_1(v2 + 136);
  uint64_t v3 = v2 + v1[9];
  uint64_t v4 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v2 + v1[10];
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for AttributionSource();
  uint64_t v7 = v5 + *(int *)(v6 + 20);
  uint64_t v8 = sub_20A8C2530();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }

  uint64_t v10 = v2 + v1[11];
  uint64_t v11 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[12]);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A4B97C8(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for StockListPrewarmBlueprintModifier() - 8);
  return sub_20A4B69C8(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_20A4B9834()
{
  uint64_t v1 = (int *)type metadata accessor for StockListPrewarmBlueprintModifier();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  __swift_destroy_boxed_opaque_existential_1(v2 + 56);
  __swift_destroy_boxed_opaque_existential_1(v2 + 96);
  __swift_destroy_boxed_opaque_existential_1(v2 + 136);
  uint64_t v3 = v2 + v1[9];
  uint64_t v4 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v2 + v1[10];
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for AttributionSource();
  uint64_t v7 = v5 + *(int *)(v6 + 20);
  uint64_t v8 = sub_20A8C2530();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }

  uint64_t v10 = v2 + v1[11];
  uint64_t v11 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[12]);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A4B9A84(long long *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for StockListPrewarmBlueprintModifier() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_20A4B6D88(a1, v1 + v4, *(void (**)(char *))(v1 + v5), *(void *)(v1 + v5 + 8));
}

uint64_t sub_20A4B9B30()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A4B9B68(void *a1)
{
  return sub_20A4B9340(a1, *(void (**)(char *))(v1 + 16));
}

void sub_20A4B9B70()
{
  if (!qword_26AC69768)
  {
    sub_20A4B9C9C(255, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
    sub_20A4B9C3C((unint64_t *)&unk_26AC69F20);
    sub_20A4B9C3C(&qword_26AC69F18);
    unint64_t v0 = sub_20A8C5F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69768);
    }
  }
}

uint64_t sub_20A4B9C3C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A4B9C9C(255, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A4B9C9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for StockListSectionDescriptor;
    v8[1] = type metadata accessor for StockListModel(255);
    long long v8[2] = sub_20A42D40C();
    void v8[3] = sub_20A4B94F8(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_20A4B9D5C()
{
  if (!qword_26AC7F800)
  {
    unint64_t v0 = sub_20A8CE6C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7F800);
    }
  }
}

uint64_t sub_20A4B9DB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A4B9E1C@<X0>(NSObject *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A4B8100(a1, *(void *)(v2 + 24), *(uint64_t (**)(uint64_t))(v2 + 32), *(void **)(v2 + 40), a2);
}

void sub_20A4B9E40()
{
  if (!qword_26AC6ACC8)
  {
    sub_20A4B9C9C(255, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
    sub_20A8C8B80();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC6ACC8);
    }
  }
}

uint64_t sub_20A4B9ED0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_20A4BA088(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A4B9F50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A4BA088(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A4B9FC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A4BA028(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A4BA088(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A4BA0EC()
{
  uint64_t v1 = (int *)type metadata accessor for StockListPrewarmBlueprintModifier();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  __swift_destroy_boxed_opaque_existential_1(v2 + 56);
  __swift_destroy_boxed_opaque_existential_1(v2 + 96);
  __swift_destroy_boxed_opaque_existential_1(v2 + 136);
  uint64_t v3 = v2 + v1[9];
  uint64_t v4 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v2 + v1[10];
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for AttributionSource();
  uint64_t v7 = v5 + *(int *)(v6 + 20);
  uint64_t v8 = sub_20A8C2530();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }

  uint64_t v10 = v2 + v1[11];
  uint64_t v11 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[12]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A4BA338@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for StockListPrewarmBlueprintModifier() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_20A4B6B74(a1, v2 + v6, *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)), a2);
}

uint64_t destroy for StockSearchResults()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s8StocksUI18StockSearchResultsVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for StockSearchResults(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StockSearchResults(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StockListPrewarmBlueprintModifier.Results()
{
  return &type metadata for StockListPrewarmBlueprintModifier.Results;
}

uint64_t destroy for StockListSectionHeaderViewModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for StockListSectionHeaderViewModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for StockListSectionHeaderViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StockListSectionHeaderViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StockListSectionHeaderViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockListSectionHeaderViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockListSectionHeaderViewModel()
{
  return &type metadata for StockListSectionHeaderViewModel;
}

uint64_t sub_20A4BA76C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  BOOL v8 = *a1 == *a2 && a1[1] == a2[1];
  if (!v8 && (sub_20A8CF760() & 1) == 0) {
    return 0;
  }
  BOOL v9 = v2 == v5 && v4 == v6;
  if (!v9 && (sub_20A8CF760() & 1) == 0) {
    return 0;
  }

  return sub_20A4C8D20(v3, v7);
}

void *sub_20A4BA828@<X0>(CGFloat a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v64 = a3;
  CGFloat v65 = a1;
  sub_20A4BB2F0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for QuoteViewModel();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for QuoteViewLayoutOptions();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C9820();
  double v16 = v15;
  sub_20A8C9710();
  sub_20A8CE970();
  double v18 = v16 - v17;
  uint64_t v19 = sub_20A8C9830();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v14, a2, v19);
  CGFloat v62 = v3;
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)&v62 + 56), *(void *)(*(void *)&v62 + 80));
  CGFloat v20 = v65;
  sub_20A82F708(*(uint64_t *)&v65, (uint64_t)v68);
  CGFloat x = v68[0].origin.x;
  CGFloat y = v68[0].origin.y;
  CGFloat width = v68[0].size.width;
  CGFloat height = v68[0].size.height;
  double v25 = CGRectGetWidth(v68[0]);
  v80.origin.CGFloat x = x;
  v80.origin.CGFloat y = y;
  v80.size.CGFloat width = width;
  v80.size.CGFloat height = height;
  double v26 = CGRectGetHeight(v80);
  sub_20A8C9700();
  double v28 = 1.0 / v27;
  uint64_t v29 = type metadata accessor for QuoteSummaryViewModel();
  sub_20A4BB348(*(void *)&v20 + *(int *)(v29 + 20), (uint64_t)v7);
  int v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  CGFloat v63 = v18;
  if (v30 == 1)
  {
    sub_20A4BB4EC((uint64_t)v7, (uint64_t (*)(void))sub_20A4BB2F0);
    sub_20A4BB3AC((uint64_t)v66);
    sub_20A4BB484((uint64_t)v66, (uint64_t)v79, (uint64_t (*)(void))sub_20A4BB3D0);
    char v31 = 0;
  }
  else
  {
    sub_20A4BB484((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for QuoteViewModel);
    __swift_project_boxed_opaque_existential_1((void *)(*(void *)&v3 + 56), *(void *)(*(void *)&v62 + 80));
    sub_20A82F708((uint64_t)v11, (uint64_t)&v70);
    sub_20A4BB4EC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for QuoteViewModel);
    *(_OWORD *)&v66[96] = v75;
    *(_OWORD *)&v66[112] = v76;
    *(void *)&v66[128] = v77;
    *(_OWORD *)&v66[32] = v71;
    *(_OWORD *)&v66[48] = v72;
    *(_OWORD *)&v66[64] = v73;
    *(_OWORD *)&v66[80] = v74;
    *(CGRect *)uint64_t v66 = v70;
    sub_20A4BB54C((uint64_t)v66);
    v81.origin.CGFloat x = 0.0;
    v81.origin.CGFloat y = 0.0;
    v81.size.CGFloat width = v25;
    v81.size.CGFloat height = v26;
    CGFloat v32 = CGRectGetWidth(v81) + 8.0;
    char v31 = v18 < v28 + v32 + CGRectGetWidth(v70) + 13.0;
    sub_20A4BB484((uint64_t)v66, (uint64_t)v79, (uint64_t (*)(void))sub_20A4BB3D0);
  }
  sub_20A4BB484((uint64_t)v79, (uint64_t)v78, (uint64_t (*)(void))sub_20A4BB3D0);
  CGFloat v33 = v25;
  double v34 = sub_20A4BAEF4((uint64_t)v78, v31, 0.0, 0.0, v25, v26, v28, 8.0, 13.0);
  CGFloat v36 = v35;
  CGFloat v38 = v37;
  CGFloat v40 = v39;
  sub_20A4BB484((uint64_t)v79, (uint64_t)v67, (uint64_t (*)(void))sub_20A4BB3D0);
  int v41 = sub_20A478D68((uint64_t)v67);
  CGFloat v65 = v40;
  if (v41 == 1)
  {
    double v42 = 0.0;
    CGFloat v63 = 0.0;
    double v28 = 0.0;
    if ((v31 & 1) == 0)
    {
      CGFloat v62 = 0.0;
      CGFloat v63 = v34;
      CGFloat v60 = 0.0;
      CGFloat MinY = 0.0;
      double v43 = 0.0;
LABEL_12:
      double v59 = v69;
      v88.origin.CGFloat x = 0.0;
      v88.origin.CGFloat y = 0.0;
      v88.size.CGFloat width = v33;
      v88.size.CGFloat height = v26;
      CGFloat v44 = v26;
      double MaxY = CGRectGetMaxY(v88);
      CGFloat v46 = v63;
      v89.origin.CGFloat x = v63;
      v89.origin.CGFloat y = v36;
      v89.size.CGFloat width = v38;
      v89.size.CGFloat height = v65;
      double v51 = CGRectGetMaxY(v89);
      if (MaxY > v51) {
        double v51 = MaxY;
      }
      CGFloat v58 = v51;
      CGFloat v49 = v43;
      goto LABEL_15;
    }
  }
  else
  {
    if ((v31 & 1) == 0)
    {
      CGFloat v63 = v34;
      v85.origin.CGFloat x = 0.0;
      v85.origin.CGFloat y = 0.0;
      v85.size.CGFloat width = v33;
      v85.size.CGFloat height = v26;
      CGFloat v60 = CGRectGetWidth(v85) + 8.0;
      v86.origin.CGFloat x = 0.0;
      v86.origin.CGFloat y = 0.0;
      v86.size.CGFloat width = v33;
      v86.size.CGFloat height = v26;
      CGFloat MinY = CGRectGetMinY(v86);
      v87.origin.CGFloat x = 0.0;
      v87.origin.CGFloat y = 0.0;
      v87.size.CGFloat width = v33;
      v87.size.CGFloat height = v26;
      CGFloat v62 = CGRectGetHeight(v87);
      double v43 = v28;
      goto LABEL_12;
    }
    v82.origin.CGFloat x = 0.0;
    v82.origin.CGFloat y = 0.0;
    v82.size.CGFloat width = v33;
    v82.size.CGFloat height = v26;
    double v42 = CGRectGetHeight(v82) + 8.0;
  }
  CGFloat MinY = v42;
  CGFloat v62 = v28;
  CGFloat v44 = v26;
  v83.origin.CGFloat x = v34;
  v83.origin.CGFloat y = v36;
  v83.size.CGFloat width = v38;
  v83.size.CGFloat height = v40;
  CGFloat v45 = v40;
  CGFloat v46 = v34;
  double v47 = CGRectGetMinY(v83);
  sub_20A4BB484((uint64_t)v79, (uint64_t)v66, (uint64_t (*)(void))sub_20A4BB3D0);
  uint64_t result = (void *)sub_20A478D68((uint64_t)v66);
  if (result != 1)
  {
    double v59 = v47 + *(double *)&v66[128];
    v84.origin.CGFloat x = v46;
    v84.origin.CGFloat y = v36;
    v84.size.CGFloat width = v38;
    v84.size.CGFloat height = v45;
    CGFloat v58 = CGRectGetMaxY(v84);
    CGFloat v60 = 0.0;
    CGFloat v49 = v63;
LABEL_15:
    v90.origin.CGFloat x = 0.0;
    v90.origin.CGFloat y = 0.0;
    v90.size.CGFloat width = v33;
    v90.size.CGFloat height = v44;
    CGRectGetMaxX(v90);
    v91.origin.CGFloat x = v46;
    v91.origin.CGFloat y = v36;
    v91.size.CGFloat width = v38;
    CGFloat v52 = v65;
    v91.size.CGFloat height = v65;
    CGRectGetMaxX(v91);
    CGFloat v54 = MEMORY[0x270FA5388](v53);
    *(&v58 - 20) = 0.0;
    *(&v58 - 19) = 0.0;
    CGFloat v55 = v58;
    *(&v58 - 18) = v54;
    *(&v58 - 17) = v55;
    *(&v58 - 16) = 0.0;
    *(&v58 - 15) = 0.0;
    *(&v58 - 14) = v33;
    *(&v58 - 13) = v44;
    *((void *)&v58 - 12) = v68;
    CGFloat v56 = MinY;
    *(&v58 - 11) = v60;
    *(&v58 - 10) = v56;
    CGFloat v57 = v62;
    *(&v58 - 9) = v49;
    *(&v58 - 8) = v57;
    *(&v58 - 7) = v46;
    *(&v58 - 6) = v36;
    *(&v58 - 5) = v38;
    *(&v58 - 4) = v52;
    *((void *)&v58 - 3) = v78;
    *(&v58 - 2) = v59;
    *((unsigned char *)&v58 - 8) = v31;
    sub_20A8C9690();
    sub_20A4BB4EC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for QuoteViewLayoutOptions);
    return memcpy(v64, v66, 0x1A1uLL);
  }
  __break(1u);
  return result;
}

double sub_20A4BAEF4(uint64_t a1, char a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  sub_20A4BB484(a1, (uint64_t)v28, (uint64_t (*)(void))sub_20A4BB3D0);
  double v15 = 0.0;
  if (sub_20A478D68((uint64_t)v28) != 1)
  {
    double v16 = a8;
    CGFloat v17 = *(double *)v28;
    CGFloat v18 = *(double *)&v28[3];
    CGFloat v24 = *(double *)&v28[2];
    CGFloat v25 = *(double *)&v28[1];
    double v19 = a3;
    double v20 = a4;
    double v21 = a5;
    double v22 = a6;
    if (a2)
    {
      CGRectGetHeight(*(CGRect *)&v19);
      double v15 = 0.0;
    }
    else
    {
      double v15 = CGRectGetWidth(*(CGRect *)&v19) + v16 + a7 + a9;
    }
    v29.origin.CGFloat x = v17;
    v29.origin.CGFloat y = v25;
    v29.size.CGFloat width = v24;
    v29.size.CGFloat height = v18;
    CGRectGetWidth(v29);
    v30.origin.CGFloat x = v17;
    v30.origin.CGFloat y = v25;
    v30.size.CGFloat width = v24;
    v30.size.CGFloat height = v18;
    CGRectGetHeight(v30);
  }
  return v15;
}

void *sub_20A4BB02C@<X0>(long long *a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, void *a4@<X8>, double a5@<D4>, double a6@<D5>, double a7@<D6>, double a8@<D7>, long long a9, long long a10, long long a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v43 = a14;
  uint64_t v42 = a13;
  uint64_t v41 = a12;
  long long v40 = a11;
  long long v39 = a10;
  long long v38 = a9;
  sub_20A4BB484(a2, (uint64_t)v44, (uint64_t (*)(void))sub_20A4BB3D0);
  sub_20A4BB484((uint64_t)v44, (uint64_t)v45, (uint64_t (*)(void))sub_20A4BB3D0);
  long long v21 = a1[7];
  long long v52 = a1[6];
  long long v53 = v21;
  uint64_t v54 = *((void *)a1 + 16);
  long long v22 = a1[3];
  long long v48 = a1[2];
  long long v49 = v22;
  long long v23 = a1[5];
  long long v50 = a1[4];
  long long v51 = v23;
  long long v24 = a1[1];
  long long v46 = *a1;
  long long v47 = v24;
  uint64_t v25 = sub_20A8C8180();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  double v28 = (char *)&v38 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v28, *MEMORY[0x263F7D268], v25);
  sub_20A8C8170();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  *(void *)CGFloat v55 = v30;
  *(void *)&v55[8] = v32;
  *(void *)&v55[16] = v34;
  *(void *)&v55[24] = v36;
  *(double *)&v55[32] = a5;
  *(double *)&v55[40] = a6;
  *(double *)&v55[48] = a7;
  *(double *)&v55[56] = a8;
  *(_OWORD *)&v55[160] = v52;
  *(_OWORD *)&v55[176] = v53;
  *(void *)&v55[192] = v54;
  *(_OWORD *)&v55[96] = v48;
  *(_OWORD *)&v55[112] = v49;
  *(_OWORD *)&v55[128] = v50;
  *(_OWORD *)&v55[144] = v51;
  *(_OWORD *)&v55[64] = v46;
  *(_OWORD *)&v55[80] = v47;
  *(_OWORD *)&v55[200] = v38;
  *(_OWORD *)&v55[216] = v39;
  *(_OWORD *)&v55[232] = v40;
  *(void *)&v55[248] = v41;
  *(void *)&v55[256] = v42;
  sub_20A4BB484((uint64_t)v45, (uint64_t)&v55[264], (uint64_t (*)(void))sub_20A4BB3D0);
  *(void *)&v55[408] = v43;
  v55[416] = a3;
  return memcpy(a4, v55, 0x1A1uLL);
}

uint64_t type metadata accessor for QuoteSummaryViewLayoutAttributesFactory()
{
  return self;
}

void sub_20A4BB2F0()
{
  if (!qword_26AC82B28)
  {
    type metadata accessor for QuoteViewModel();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC82B28);
    }
  }
}

uint64_t sub_20A4BB348(uint64_t a1, uint64_t a2)
{
  sub_20A4BB2F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double sub_20A4BB3AC(uint64_t a1)
{
  *(void *)(a1 + 128) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 136) = 1;
  return result;
}

void sub_20A4BB3D0()
{
  if (!qword_26AC82B90)
  {
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC82B90);
    }
  }
}

void *sub_20A4BB428@<X0>(void *a1@<X8>)
{
  return sub_20A4BB02C(*(long long **)(v1 + 80), *(void *)(v1 + 152), *(unsigned char *)(v1 + 168), a1, *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 72), *(_OWORD *)(v1 + 88), *(_OWORD *)(v1 + 104), *(_OWORD *)(v1 + 120), *(void *)(v1 + 136), *(void *)(v1 + 144), *(void *)(v1 + 160));
}

uint64_t sub_20A4BB484(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A4BB4EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A4BB54C(uint64_t result)
{
  *(unsigned char *)(result + 136) = 0;
  return result;
}

char *sub_20A4BB55C(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC8StocksUI28StockSearchSectionHeaderView_watchlistSwitcherButton;
  id v11 = objc_allocWithZone((Class)sub_20A8C81C0());
  uint64_t v12 = v4;
  *(void *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v13 = OBJC_IVAR____TtC8StocksUI28StockSearchSectionHeaderView_onWatchlistSwitcherMenuPresentation;
  sub_20A45A1DC();
  *(void *)&v12[v13] = objc_msgSend(objc_allocWithZone(v14), sel_init);

  v23.receiver = v12;
  v23.super_class = ObjectType;
  double v15 = (char *)objc_msgSendSuper2(&v23, sel_initWithFrame_, a1, a2, a3, a4);
  double v16 = *(void **)&v15[OBJC_IVAR____TtC8StocksUI28StockSearchSectionHeaderView_onWatchlistSwitcherMenuPresentation];
  uint64_t v17 = OBJC_IVAR____TtC8StocksUI28StockSearchSectionHeaderView_watchlistSwitcherButton;
  CGFloat v18 = *(void **)&v15[OBJC_IVAR____TtC8StocksUI28StockSearchSectionHeaderView_watchlistSwitcherButton];
  double v19 = v15;
  id v20 = v16;
  id v21 = v18;
  sub_20A8CB530();

  objc_msgSend(v19, sel_addSubview_, *(void *)&v15[v17]);
  return v19;
}

uint64_t type metadata accessor for StockSearchSectionHeaderView()
{
  return self;
}

void sub_20A4BB810()
{
  sub_20A4BB89C(&qword_26AC68218);

  JUMPOUT(0x210523C60);
}

uint64_t sub_20A4BB868()
{
  return sub_20A4BB89C(&qword_26AC68210);
}

uint64_t sub_20A4BB89C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StockSearchSectionHeaderView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4BB8DC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
  uint64_t v7 = *(unsigned __int8 *)(a2 + 56);
  uint64_t v8 = 56;
  if (*(unsigned char *)(a2 + 56)) {
    uint64_t v8 = 96;
  }
  sub_20A4342F4(*v6 + v8, (uint64_t)v229);
  uint64_t v10 = v229[3];
  uint64_t v9 = v229[4];
  __swift_project_boxed_opaque_existential_1(v229, v229[3]);
  uint64_t v11 = *(void *)(a2 + 80);
  uint64_t v12 = v9;
  uint64_t v210 = v9;
  uint64_t v13 = *(void *)(v9 + 8);
  Class v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 8);
  v231[3] = v10;
  v231[4] = v12;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v231);
  v14(v11, v10, v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v229);
  sub_20A4BD734(v7, (uint64_t)v232, *(double *)(a2 + 64));
  long long v15 = *(_OWORD *)(a2 + 16);
  v248[0] = *(_OWORD *)a2;
  v248[1] = v15;
  v248[2] = *(_OWORD *)(a2 + 32);
  uint64_t v249 = *(void *)(a2 + 48);
  unsigned int v16 = *(unsigned __int8 *)(a2 + 72);
  double v17 = v232[1];
  CGFloat v228 = v232[2];
  sub_20A4BD90C((uint64_t)v248);
  sub_20A8CEDE0();
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  sub_20A8CED90();
  CGFloat v220 = v23;
  CGFloat v221 = v22;
  CGFloat v206 = v24;
  CGFloat v225 = v25;
  v255.origin.CGFloat x = 0.0;
  CGFloat v217 = v19;
  double v218 = -v17;
  v255.origin.CGFloat y = -v17;
  v255.size.CGFloat width = v19;
  CGFloat v216 = v21;
  v255.size.CGFloat height = v21;
  double Width = CGRectGetWidth(v255);
  double v26 = v232[0];
  double v27 = v232[3];
  double v28 = (void *)(*(uint64_t (**)(void, void, void, void, uint64_t))(v210 + 16))(a1[1], a1[2], a1[3], a1[4], v10);
  uint64_t v29 = (void *)sub_20A8CEC60();
  objc_msgSend(v29, sel_lineHeight);
  double v31 = v30;

  CGFloat v177 = v28;
  sub_20A4BD938(v28, (uint64_t)v229, v26, floor(v31 + v31));
  uint64_t v176 = (void *)v229[0];
  CGFloat v32 = *(double *)&v229[3];
  CGFloat v33 = *(double *)&v229[4];
  CGFloat v34 = (v26 - CGRectGetWidth(*(CGRect *)&v229[1])) * 0.5;
  v256.origin.CGFloat y = 0.0;
  v256.origin.CGFloat x = (v26 - v27) * 0.5;
  v256.size.CGFloat width = v27;
  v256.size.CGFloat height = v27;
  v257.origin.CGFloat y = CGRectGetMaxY(v256) + v232[4];
  v257.origin.CGFloat x = v34;
  v257.size.CGFloat width = v32;
  v257.size.CGFloat height = v33;
  CGFloat MaxY = CGRectGetMaxY(v257);
  unsigned int v195 = v16;
  double v193 = v17;
  if (v16 <= 1) {
    double v36 = v17;
  }
  else {
    double v36 = 0.0;
  }
  CGFloat v37 = v228 + v36;
  CGFloat v38 = v26;
  CGFloat v39 = Width * 0.5 - v26 * 0.5;
  CGFloat v40 = v233;
  CGFloat v224 = v26;
  double v41 = v26 - v233 - v236;
  double v42 = v237;
  double v207 = v237;
  double v43 = rect;
  CGFloat v227 = rect;
  CGFloat v228 = v39;
  CGFloat v214 = v37;
  double v215 = v41 - v237;
  double v44 = v246;
  if (v16 > 1) {
    double v44 = 0.0;
  }
  double v222 = v44;
  double v45 = v236;
  CGFloat v46 = v236;
  double v47 = v233;
  double v48 = v233;
  CGFloat v49 = v42 + CGRectGetMaxX(*(CGRect *)(&v43 - 1));
  sub_20A8C4A00();
  CGFloat v51 = v50;
  uint64_t v52 = a1[7];
  uint64_t v53 = a1[8];
  long long v199 = *(uint64_t (**)(void, void, uint64_t))(v210 + 24);
  uint64_t v202 = v10;
  uint64_t v54 = (void *)v199(a1[5], a1[6], v10);
  sub_20A8CEC70();
  CGFloat v56 = v55;

  v258.origin.CGFloat y = 0.0;
  v258.origin.CGFloat x = v49;
  v258.size.CGFloat width = v51;
  v258.size.CGFloat height = v56;
  CGFloat MinX = CGRectGetMinX(v258);
  v259.origin.CGFloat y = 0.0;
  v259.origin.CGFloat x = v49;
  v259.size.CGFloat width = v51;
  v259.size.CGFloat height = v56;
  CGFloat v57 = CGRectGetMaxY(v259);
  uint64_t v190 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v210 + 32);
  CGFloat v58 = (void *)v190(v52, v53, v10);
  sub_20A8CEC70();
  CGFloat v60 = v59;

  v260.origin.CGFloat x = v228;
  v260.origin.CGFloat y = v214;
  v260.size.CGFloat width = v38;
  v260.size.CGFloat height = MaxY;
  double v61 = CGRectGetMaxY(v260);
  CGFloat v219 = v46;
  v261.origin.CGFloat x = v46;
  v261.origin.CGFloat y = v227;
  v261.size.CGFloat width = v40;
  v261.size.CGFloat height = v40;
  double v62 = CGRectGetMaxY(v261);
  v262.origin.CGFloat x = MinX;
  v262.origin.CGFloat y = v57;
  v262.size.CGFloat width = v215;
  v262.size.CGFloat height = v60;
  double v63 = CGRectGetMaxY(v262);
  if (v62 > v63) {
    double v63 = v62;
  }
  CGFloat v212 = v63;
  double v196 = v234;
  CGFloat v64 = v222 + v61 + v234 + v235;
  v263.origin.CGFloat x = v46;
  CGFloat v65 = v40;
  v263.origin.CGFloat y = v227;
  v263.size.CGFloat width = v40;
  v263.size.CGFloat height = v40;
  CGFloat v66 = v207 + CGRectGetMaxX(v263);
  sub_20A8C4A00();
  CGFloat v68 = v67;
  uint64_t v69 = a1[11];
  uint64_t v70 = a1[12];
  long long v71 = (void *)((uint64_t (*)(void, void, uint64_t, uint64_t))v199)(a1[9], a1[10], v10, v210);
  sub_20A8CEC70();
  CGFloat v73 = v72;

  v264.origin.CGFloat y = 0.0;
  v264.origin.CGFloat x = v66;
  v264.size.CGFloat width = v68;
  v264.size.CGFloat height = v73;
  CGFloat v74 = CGRectGetMinX(v264);
  v265.origin.CGFloat y = 0.0;
  v265.origin.CGFloat x = v66;
  v265.size.CGFloat width = v68;
  v265.size.CGFloat height = v73;
  CGFloat v75 = CGRectGetMaxY(v265);
  long long v76 = (void *)((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v190)(v69, v70, v10, v210);
  sub_20A8CEC70();
  CGFloat v78 = v77;

  v266.origin.CGFloat x = v228;
  v266.origin.CGFloat y = v64;
  v266.size.CGFloat width = v224;
  v266.size.CGFloat height = v212;
  double v79 = CGRectGetMaxY(v266);
  v267.origin.CGFloat x = v219;
  v267.origin.CGFloat y = v227;
  v267.size.CGFloat width = v65;
  v267.size.CGFloat height = v65;
  double v80 = CGRectGetMaxY(v267);
  v268.origin.CGFloat x = v74;
  v268.origin.CGFloat y = v75;
  v268.size.CGFloat width = v215;
  v268.size.CGFloat height = v78;
  double v81 = CGRectGetMaxY(v268);
  if (v80 > v81) {
    CGFloat v82 = v80;
  }
  else {
    CGFloat v82 = v81;
  }
  double v83 = v222 + v196 + v79;
  CGFloat v188 = a1;
  sub_20A4BDCFC((uint64_t)(a1 + 13), (uint64_t)v247, &qword_26763AEE8);
  sub_20A4BDCFC((uint64_t)v247, (uint64_t)&v251, &qword_26763AEE8);
  uint64_t v84 = v252;
  if (v252)
  {
    uint64_t v85 = v251;
    uint64_t v86 = v253;
    uint64_t v87 = v254;
    v269.origin.CGFloat x = v219;
    v269.origin.CGFloat y = v227;
    v269.size.CGFloat width = v65;
    v269.size.CGFloat height = v65;
    CGFloat v88 = v222 + v196 + v79;
    CGFloat v89 = v207 + CGRectGetMaxX(v269);
    sub_20A8C4A00();
    CGFloat v91 = v90;
    uint64_t v92 = (void *)((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v199)(v85, v84, v202, v210);
    sub_20A8CEC70();
    CGFloat v94 = v93;
    CGFloat v200 = v93;

    v270.origin.CGFloat y = 0.0;
    CGFloat v208 = v89;
    v270.origin.CGFloat x = v89;
    v270.size.CGFloat width = v91;
    v270.size.CGFloat height = v94;
    CGFloat v189 = CGRectGetMinX(v270);
    v271.origin.CGFloat y = 0.0;
    v271.origin.CGFloat x = v89;
    v271.size.CGFloat width = v91;
    v271.size.CGFloat height = v94;
    CGFloat v186 = CGRectGetMaxY(v271);
    uint64_t v95 = (void *)((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v190)(v86, v87, v202, v210);
    sub_20A8CEC70();
    CGFloat v97 = v96;
    CGFloat v184 = v96;

    v272.origin.CGFloat x = v228;
    v272.origin.CGFloat y = v88;
    v272.size.CGFloat width = v224;
    v272.size.CGFloat height = v82;
    double v191 = CGRectGetMaxY(v272);
    v273.origin.CGFloat x = v219;
    v273.origin.CGFloat y = v227;
    v273.size.CGFloat width = v65;
    v273.size.CGFloat height = v65;
    double v98 = CGRectGetMaxY(v273);
    v274.origin.CGFloat x = v189;
    v274.origin.CGFloat y = v186;
    v274.size.CGFloat width = v215;
    v274.size.CGFloat height = v97;
    double v99 = CGRectGetMaxY(v274);
    if (v98 > v99) {
      double v100 = v98;
    }
    else {
      double v100 = v99;
    }
    double v197 = v222 + v196 + v191;
    double v101 = 1.0;
    if (v16 <= 1) {
      double v101 = 0.0;
    }
    double v192 = v101;
    v275.origin.CGFloat x = v219;
    v275.origin.CGFloat y = v227;
    v275.size.CGFloat width = v65;
    v275.size.CGFloat height = v65;
    CGRect v276 = CGRectIntegral(v275);
    CGFloat v180 = v276.size.width;
    CGFloat x = v276.origin.x;
    CGFloat y = v276.origin.y;
    CGFloat height = v276.size.height;
    v276.origin.CGFloat y = 0.0;
    v276.origin.CGFloat x = v208;
    v276.size.CGFloat width = v91;
    v276.size.CGFloat height = v200;
    CGRect v277 = CGRectIntegral(v276);
    CGFloat v103 = v277.origin.x;
    CGFloat v104 = v277.origin.y;
    CGFloat v105 = v277.size.width;
    CGFloat v106 = v277.size.height;
    v277.origin.CGFloat x = v189;
    v277.size.CGFloat height = v184;
    v277.origin.CGFloat y = v186;
    v277.size.CGFloat width = v215;
    CGRect v278 = CGRectIntegral(v277);
    *(CGFloat *)CGFloat v229 = v228;
    *(double *)&v229[1] = v197;
    *(CGFloat *)&v229[2] = v224;
    *(double *)&v229[3] = v100;
    *(double *)&v229[4] = v192;
    *(CGFloat *)&v229[5] = x;
    *(CGFloat *)&v229[6] = y;
    *(CGFloat *)&v229[7] = v180;
    *(CGFloat *)&v229[8] = height;
    *(CGFloat *)&v229[9] = v103;
    *(CGFloat *)&v229[10] = v104;
    *(CGFloat *)&v229[11] = v105;
    *(CGFloat *)&v229[12] = v106;
    *(CGRect *)&v229[13] = v278;
    sub_20A4BB54C((uint64_t)v229);
    sub_20A4BDCFC((uint64_t)v229, (uint64_t)v230, &qword_26763AEE0);
    CGFloat v107 = *(double *)v230;
    double v108 = *(double *)&v230[1];
    double v109 = *(double *)&v230[2];
    double v110 = *(double *)&v230[3];
    uint64_t v111 = v210;
  }
  else
  {
    sub_20A4BB3AC((uint64_t)v229);
    sub_20A4BDCFC((uint64_t)v229, (uint64_t)v230, &qword_26763AEE0);
    double v109 = v224;
    double v110 = v82;
    CGFloat v107 = v228;
    double v108 = v83;
    uint64_t v111 = v210;
  }
  uint64_t v112 = (void *)v188[20];
  objc_msgSend(v112, sel_size);
  CGFloat v185 = v110;
  CGFloat v187 = v109;
  CGFloat v181 = v108;
  CGFloat v183 = v107;
  if (v113 <= 0.0)
  {
    double v122 = 0.0;
    double v201 = 0.0;
    double v121 = 0.0;
    double v117 = 0.0;
  }
  else
  {
    sub_20A431DD0();
    objc_msgSend(self, sel_systemFontSize);
    uint64_t v175 = *MEMORY[0x263F81838];
    uint64_t v114 = (void *)sub_20A8CEE20();
    objc_msgSend(v114, sel_pointSize, v175);
    double v116 = v115;

    if (v116 < 20.0) {
      double v117 = 24.0;
    }
    else {
      double v117 = 28.0;
    }
    objc_msgSend(v112, sel_size);
    double v119 = v117 * v118;
    objc_msgSend(v112, sel_size);
    double v121 = v119 / v120;
    v279.origin.CGFloat x = v221;
    v279.origin.CGFloat y = v220;
    v279.size.CGFloat width = v206;
    v279.size.CGFloat height = v225;
    double v122 = CGRectGetWidth(v279) * 0.5 - v121 * 0.5;
    double v201 = v239;
  }
  id v123 = objc_msgSend(self, sel_defaultMetrics);
  objc_msgSend(v123, sel_scaledValueForValue_, v240);

  CGFloat v124 = sub_20A4BDD68((uint64_t)boxed_opaque_existential_1, (uint64_t)v188, v232, v202, v111, v221, v220, v206, v225, v122, v201, v121, v117);
  double v198 = v125;
  double v127 = v126;
  double v129 = v128;
  uint64_t v130 = (void *)(*(uint64_t (**)(void, void, uint64_t, uint64_t))(v111 + 40))(v188[17], v188[18], v202, v111);
  objc_msgSend(v130, sel_boundingRectWithSize_options_context_, 35, 0, 1.79769313e308, 1.79769313e308);
  CGFloat v132 = v131;
  CGFloat v134 = v133;
  CGFloat v136 = v135;
  CGFloat v138 = v137;

  sub_20A431DD0();
  objc_msgSend(self, (SEL)&selRef_setHeight_ + 3);
  uint64_t v139 = (void *)sub_20A8CEE20();
  objc_msgSend(v139, sel_pointSize);
  double v141 = v140;

  v280.origin.CGFloat x = v132;
  v280.origin.CGFloat y = v134;
  v280.size.CGFloat width = v136;
  v280.size.CGFloat height = v138;
  double v142 = CGRectGetHeight(v280) * v243;
  _NF = v141 < 20.0;
  CGFloat v209 = v129;
  CGFloat v144 = v127;
  if (_NF)
  {
    CGFloat v151 = v198;
    CGFloat v152 = v220;
    long long v146 = v177;
    uint64_t v145 = a3;
    unsigned int v147 = v195;
    uint64_t v148 = v176;
    CGFloat v149 = v206;
    CGFloat v150 = v225;
    CGFloat v203 = v142;
  }
  else
  {
    CGFloat v151 = v198;
    CGFloat v152 = v220;
    CGFloat v153 = v132;
    CGFloat v154 = v134;
    CGFloat v155 = v136;
    double v156 = v142;
    CGFloat v157 = v138;
    double v158 = CGRectGetHeight(*(CGRect *)&v153) + 25.0;
    if (v158 < v156) {
      double v156 = v158;
    }
    CGFloat v203 = v156;
    long long v146 = v177;
    uint64_t v145 = a3;
    unsigned int v147 = v195;
    uint64_t v148 = v176;
    CGFloat v149 = v206;
    CGFloat v150 = v225;
  }
  v281.origin.CGFloat x = v221;
  v281.origin.CGFloat y = v152;
  v281.size.CGFloat width = v149;
  v281.size.CGFloat height = v150;
  double v159 = CGRectGetWidth(v281);
  v282.origin.CGFloat x = v124;
  v282.origin.CGFloat y = v151;
  v282.size.CGFloat width = v144;
  v282.size.CGFloat height = v209;
  double v160 = CGRectGetMaxY(v282) + v241;
  double v161 = v159 * 0.5;
  CGFloat v162 = v242;
  CGFloat v211 = v242;
  double v163 = v161 - v242 * 0.5;
  CGFloat v205 = v163;
  v283.origin.CGFloat x = v221;
  v283.origin.CGFloat y = v152;
  v283.size.CGFloat width = v149;
  v283.size.CGFloat height = v150;
  double v164 = CGRectGetHeight(v283);
  double v165 = v193 + v222 * 4.0;
  if (v147 > 1) {
    double v165 = 0.0;
  }
  double v194 = v165 + v164;
  v284.origin.CGFloat x = v221;
  v284.origin.CGFloat y = v152;
  v284.size.CGFloat width = v149;
  v284.size.CGFloat height = v150;
  CGFloat v223 = CGRectGetWidth(v284);
  v285.origin.CGFloat x = v163;
  v285.origin.CGFloat y = v160;
  v285.size.CGFloat width = v162;
  v285.size.CGFloat height = v203;
  double v166 = CGRectGetMaxY(v285) + v244;
  v286.origin.CGFloat x = 0.0;
  v286.origin.CGFloat y = v218;
  v286.size.CGFloat width = v217;
  v286.size.CGFloat height = v216;
  double v167 = CGRectGetHeight(v286);
  v287.origin.CGFloat y = v181;
  v287.origin.CGFloat x = v183;
  v287.size.CGFloat height = v185;
  v287.size.CGFloat width = v187;
  double v168 = v167 - (CGRectGetMaxY(v287) + v245);
  if (v166 <= v168) {
    double v166 = v168;
  }
  v288.origin.CGFloat x = 0.0;
  v288.origin.CGFloat y = v218;
  v288.size.CGFloat width = v217;
  v288.size.CGFloat height = v216;
  CGRectGetWidth(v288);
  v289.origin.CGFloat x = v221;
  v289.origin.CGFloat y = v152;
  v289.size.CGFloat width = v149;
  v289.size.CGFloat height = v225;
  CGRectGetHeight(v289);
  v290.origin.CGFloat x = v221;
  v290.origin.CGFloat y = v152;
  v290.size.CGFloat width = v149;
  v290.size.CGFloat height = v225;
  CGRectGetHeight(v290);
  v291.origin.CGFloat x = 0.0;
  v291.origin.CGFloat y = v194 - v166;
  v291.size.CGFloat width = v223;
  v291.size.CGFloat height = v166;
  CGRectGetHeight(v291);
  v292.origin.CGFloat x = v205;
  v292.origin.CGFloat y = v160;
  v292.size.CGFloat width = v211;
  v292.size.CGFloat height = v203;
  CGRectGetMaxY(v292);
  v293.origin.CGFloat x = v205;
  v293.origin.CGFloat y = v160;
  v293.size.CGFloat width = v211;
  v293.size.CGFloat height = v203;
  CGRectGetHeight(v293);
  v294.origin.CGFloat x = v221;
  v294.origin.CGFloat y = v220;
  v294.size.CGFloat width = v149;
  v294.size.CGFloat height = v225;
  CGRectGetHeight(v294);
  uint64_t v169 = sub_20A4BDCFC((uint64_t)v230, (uint64_t)&v250, &qword_26763AEE0);
  MEMORY[0x270FA5388](v169);
  __asm { FMOV            V1.2D, #18.0 }
  sub_20A8C9690();

  sub_20A4BE0A4((uint64_t)v248);
  memcpy(v145, v229, 0x310uLL);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v231);
}

void *sub_20A4BC8D0@<X0>(int a1@<W1>, void *a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>, CGFloat a5@<D0>, CGFloat a6@<D1>, CGFloat a7@<D2>, CGFloat a8@<D3>, double a9@<D4>, double a10@<D5>, double a11@<D6>, double a12@<D7>, CGFloat a13, CGFloat a14, CGFloat a15, CGFloat a16, CGFloat a17, CGFloat a18, CGFloat a19, CGFloat a20,double a21,double a22,double a23,double a24,double a25,double a26,double a27,double a28,double a29,double a30,double a31,double a32,double a33,double a34,double a35,double a36,double a37,double a38,double a39,double a40,double a41,double a42,double a43,double a44,double a45,double a46,double a47,double a48,double a49,double a50,double a51,double a52,double a53,double a54,double a55,double a56,double a57,double a58,double a59,double a60,CGFloat a61,CGFloat a62,CGFloat a63)
{
  *(void *)&long long v175 = a3;
  LODWORD(v206) = a1;
  *((double *)&v211 + 1) = a12;
  *(double *)&long long v211 = a11;
  *((double *)&v210 + 1) = a10;
  *(double *)&long long v210 = a9;
  v204.size.CGFloat height = a8;
  v204.size.CGFloat width = a7;
  v204.origin.CGFloat x = a5;
  v204.origin.CGFloat y = a6;
  CGFloat v212 = a4;
  v209.size.CGFloat height = a76;
  v209.size.CGFloat width = a75;
  v209.origin.CGFloat y = a74;
  v209.origin.CGFloat x = a73;
  v208.size.CGFloat height = a72;
  v208.size.CGFloat width = a71;
  v208.origin.CGFloat y = a70;
  v208.origin.CGFloat x = a69;
  v207.size.CGFloat height = a68;
  v207.size.CGFloat width = a67;
  v207.origin.CGFloat y = a66;
  v207.origin.CGFloat x = a65;
  v205.size.CGFloat height = a64;
  v205.size.CGFloat width = a63;
  v205.origin.CGFloat y = a62;
  v205.origin.CGFloat x = a61;
  CGFloat v179 = a57;
  CGFloat v178 = a58;
  CGFloat v177 = a59;
  CGFloat v176 = a60;
  CGFloat v170 = a53;
  CGFloat v169 = a54;
  CGFloat v168 = a55;
  CGFloat v167 = a56;
  CGFloat v158 = a49;
  CGFloat v157 = a50;
  CGFloat v156 = a51;
  CGFloat v155 = a52;
  CGFloat v162 = a45;
  CGFloat v161 = a46;
  CGFloat v160 = a47;
  CGFloat v159 = a48;
  CGFloat v166 = a41;
  CGFloat v165 = a42;
  CGFloat v164 = a43;
  CGFloat v163 = a44;
  CGFloat v174 = a37;
  CGFloat v173 = a38;
  CGFloat v172 = a39;
  CGFloat v171 = a40;
  CGFloat v183 = a33;
  CGFloat v182 = a34;
  CGFloat v181 = a35;
  CGFloat v180 = a36;
  CGFloat v187 = a29;
  CGFloat v186 = a30;
  CGFloat v185 = a31;
  CGFloat v184 = a32;
  CGFloat v191 = a25;
  CGFloat v190 = a26;
  CGFloat v189 = a27;
  CGFloat v188 = a28;
  CGFloat v195 = a21;
  CGFloat v194 = a22;
  CGFloat v193 = a23;
  CGFloat v192 = a24;
  sub_20A4BDCFC(a3, (uint64_t)v215, &qword_26763AEE0);
  sub_20A4BDCFC((uint64_t)v215, (uint64_t)v222, &qword_26763AEE0);
  uint64_t v77 = sub_20A8C8180();
  uint64_t v78 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  double v80 = (char *)v148 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGRect v223 = CGRectIntegral(v204);
  v204.size.CGFloat height = v223.origin.x;
  v204.size.CGFloat width = v223.origin.y;
  v204.origin.CGFloat x = v223.size.height;
  v204.origin.CGFloat y = v223.size.width;
  v223.origin.CGFloat x = a13;
  v223.origin.CGFloat y = a14;
  v223.size.CGFloat width = a15;
  v223.size.CGFloat height = a16;
  CGRect v224 = CGRectIntegral(v223);
  CGFloat y = v224.origin.y;
  CGFloat x = v224.origin.x;
  CGFloat height = v224.size.height;
  CGFloat width = v224.size.width;
  v224.origin.CGFloat x = a17;
  v224.origin.CGFloat y = a18;
  v224.size.CGFloat width = a19;
  v224.size.CGFloat height = a20;
  CGRectIntegral(v224);
  uint64_t v81 = *MEMORY[0x263F7D268];
  CGFloat v82 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 104);
  v82(v80, v81, v77);
  sub_20A8C8170();
  uint64_t v198 = v84;
  uint64_t v199 = v83;
  uint64_t v196 = v86;
  uint64_t v197 = v85;
  uint64_t v87 = *(void (**)(char *, uint64_t))(v78 + 8);
  v87(v80, v77);
  v225.origin.CGFloat y = v194;
  v225.origin.CGFloat x = v195;
  v225.size.CGFloat height = v192;
  v225.size.CGFloat width = v193;
  CGRectIntegral(v225);
  v82(v80, v81, v77);
  sub_20A8C8170();
  CGFloat v194 = v89;
  CGFloat v195 = v88;
  CGFloat v192 = v91;
  CGFloat v193 = v90;
  v87(v80, v77);
  id v92 = a2;
  v226.origin.CGFloat y = v190;
  v226.origin.CGFloat x = v191;
  v226.size.CGFloat height = v188;
  v226.size.CGFloat width = v189;
  CGRect v227 = CGRectIntegral(v226);
  CGFloat v190 = v227.origin.y;
  CGFloat v191 = v227.origin.x;
  CGFloat v188 = v227.size.height;
  CGFloat v189 = v227.size.width;
  v227.origin.CGFloat y = v186;
  v227.origin.CGFloat x = v187;
  v227.size.CGFloat height = v184;
  v227.size.CGFloat width = v185;
  CGRect v228 = CGRectIntegral(v227);
  CGFloat v186 = v228.origin.y;
  CGFloat v187 = v228.origin.x;
  CGFloat v184 = v228.size.height;
  CGFloat v185 = v228.size.width;
  v228.origin.CGFloat y = v182;
  v228.origin.CGFloat x = v183;
  v228.size.CGFloat height = v180;
  v228.size.CGFloat width = v181;
  CGRectIntegral(v228);
  v82(v80, v81, v77);
  sub_20A8C8170();
  CGFloat v182 = v94;
  CGFloat v183 = v93;
  CGFloat v180 = v96;
  CGFloat v181 = v95;
  v87(v80, v77);
  v229.origin.CGFloat y = v173;
  v229.origin.CGFloat x = v174;
  v229.size.CGFloat height = v171;
  v229.size.CGFloat width = v172;
  CGRectIntegral(v229);
  v82(v80, v81, v77);
  sub_20A8C8170();
  CGFloat v173 = v98;
  CGFloat v174 = v97;
  CGFloat v171 = v100;
  CGFloat v172 = v99;
  v87(v80, v77);
  v230.origin.CGFloat y = v165;
  v230.origin.CGFloat x = v166;
  v230.size.CGFloat height = v163;
  v230.size.CGFloat width = v164;
  CGRectIntegral(v230);
  v82(v80, v81, v77);
  sub_20A8C8170();
  CGFloat v165 = v102;
  CGFloat v166 = v101;
  CGFloat v163 = v104;
  CGFloat v164 = v103;
  v87(v80, v77);
  v231.origin.CGFloat y = v161;
  v231.origin.CGFloat x = v162;
  v231.size.CGFloat height = v159;
  v231.size.CGFloat width = v160;
  CGRect v232 = CGRectIntegral(v231);
  CGFloat v161 = v232.origin.y;
  CGFloat v162 = v232.origin.x;
  CGFloat v159 = v232.size.height;
  CGFloat v160 = v232.size.width;
  v232.origin.CGFloat y = v157;
  v232.origin.CGFloat x = v158;
  v232.size.CGFloat height = v155;
  v232.size.CGFloat width = v156;
  CGRectIntegral(v232);
  v82(v80, v81, v77);
  sub_20A8C8170();
  CGFloat v157 = v106;
  CGFloat v158 = v105;
  CGFloat v155 = v108;
  CGFloat v156 = v107;
  v87(v80, v77);
  v233.origin.CGFloat y = v169;
  v233.origin.CGFloat x = v170;
  v233.size.CGFloat height = v167;
  v233.size.CGFloat width = v168;
  CGRectIntegral(v233);
  v82(v80, v81, v77);
  sub_20A8C8170();
  CGFloat v169 = v110;
  CGFloat v170 = v109;
  CGFloat v167 = v112;
  CGFloat v168 = v111;
  v87(v80, v77);
  v234.origin.CGFloat y = v178;
  v234.origin.CGFloat x = v179;
  v234.size.CGFloat height = v176;
  v234.size.CGFloat width = v177;
  CGRectIntegral(v234);
  v82(v80, v81, v77);
  sub_20A8C8170();
  CGFloat v177 = v114;
  CGFloat v178 = v113;
  CGFloat v176 = v115;
  CGFloat v179 = v116;
  v87(v80, v77);
  sub_20A4BDCFC(v175, (uint64_t)v216, &qword_26763AEE0);
  if (sub_20A478D68((uint64_t)v216) == 1)
  {
    double v117 = v222;
  }
  else
  {
    long long v175 = v216[0];
    long long v154 = v216[1];
    uint64_t v153 = v217;
    uint64_t v148[3] = v219;
    v148[4] = v218;
    v148[1] = v221;
    v148[2] = v220;
    v82(v80, v81, v77);
    sub_20A8C8170();
    uint64_t v151 = v119;
    uint64_t v152 = v118;
    uint64_t v149 = v121;
    uint64_t v150 = v120;
    v87(v80, v77);
    v82(v80, v81, v77);
    sub_20A8C8170();
    uint64_t v123 = v122;
    uint64_t v125 = v124;
    uint64_t v127 = v126;
    uint64_t v129 = v128;
    v87(v80, v77);
    v82(v80, v81, v77);
    sub_20A8C8170();
    uint64_t v131 = v130;
    uint64_t v133 = v132;
    uint64_t v135 = v134;
    uint64_t v137 = v136;
    v87(v80, v77);
    v213[0] = v175;
    v213[1] = v154;
    *(void *)&v213[2] = v153;
    *((void *)&v213[2] + 1) = v152;
    *(void *)&v213[3] = v151;
    *((void *)&v213[3] + 1) = v150;
    *(void *)&v213[4] = v149;
    *((void *)&v213[4] + 1) = v123;
    *(void *)&v213[5] = v125;
    *((void *)&v213[5] + 1) = v127;
    *(void *)&v213[6] = v129;
    *((void *)&v213[6] + 1) = v131;
    *(void *)&v213[7] = v133;
    *((void *)&v213[7] + 1) = v135;
    *(void *)&v213[8] = v137;
    sub_20A4BB54C((uint64_t)v213);
    double v117 = v213;
  }
  sub_20A4BDCFC((uint64_t)v117, (uint64_t)v214, &qword_26763AEE0);
  unsigned int v138 = LOBYTE(v206);
  double v139 = 1.0;
  if (LOBYTE(v206)) {
    double v140 = 1.0;
  }
  else {
    double v140 = 0.0;
  }
  if (LOBYTE(v206)) {
    double v141 = 1.0;
  }
  else {
    double v141 = 0.65;
  }
  CGRect v235 = CGRectIntegral(v205);
  CGFloat v206 = v235.origin.x;
  v205.size.CGFloat height = v235.origin.y;
  v205.size.CGFloat width = v235.size.width;
  v205.origin.CGFloat y = v235.size.height;
  if (v138 >= 2) {
    double v142 = 0.0;
  }
  else {
    double v142 = 1.0;
  }
  if (v138 == 1) {
    double v143 = 1.0;
  }
  else {
    double v143 = 0.0;
  }
  if (v138 <= 1) {
    double v139 = 0.0;
  }
  CGRect v236 = CGRectIntegral(v207);
  v207.size.CGFloat height = v236.origin.x;
  v207.size.CGFloat width = v236.origin.y;
  v207.origin.CGFloat y = v236.size.width;
  v207.origin.CGFloat x = v236.size.height;
  CGRect v237 = CGRectIntegral(v208);
  v208.size.CGFloat height = v237.origin.x;
  v208.size.CGFloat width = v237.origin.y;
  v208.origin.CGFloat y = v237.size.width;
  v208.origin.CGFloat x = v237.size.height;
  CGRect v238 = CGRectIntegral(v209);
  CGFloat v144 = v238.origin.x;
  v209.size.CGFloat height = v238.origin.y;
  CGFloat v145 = v238.size.width;
  CGFloat v146 = v238.size.height;
  *(CGFloat *)double v213 = v204.size.height;
  *((void *)&v213[0] + 1) = *(void *)&v204.size.width;
  *(CGFloat *)&v213[1] = v204.origin.y;
  *((void *)&v213[1] + 1) = *(void *)&v204.origin.x;
  v213[2] = v210;
  v213[3] = v211;
  *(CGFloat *)&v213[4] = x;
  *((CGFloat *)&v213[4] + 1) = y;
  *(CGFloat *)&v213[5] = width;
  *((CGFloat *)&v213[5] + 1) = height;
  *(double *)&v213[6] = v140;
  *((double *)&v213[6] + 1) = v141;
  *(void *)&v213[7] = v199;
  *((void *)&v213[7] + 1) = v198;
  *(void *)&v213[8] = v197;
  *((void *)&v213[8] + 1) = v196;
  *(double *)&v213[9] = v142;
  *((CGFloat *)&v213[9] + 1) = v195;
  *(CGFloat *)&v213[10] = v194;
  *((CGFloat *)&v213[10] + 1) = v193;
  *(CGFloat *)&v213[11] = v192;
  *(CGFloat *)&v213[12] = v191;
  *((CGFloat *)&v213[12] + 1) = v190;
  *(CGFloat *)&v213[13] = v189;
  *((CGFloat *)&v213[13] + 1) = v188;
  *(double *)&v213[14] = v143;
  *((CGFloat *)&v213[14] + 1) = v187;
  *(CGFloat *)&v213[15] = v186;
  *((CGFloat *)&v213[15] + 1) = v185;
  *(CGFloat *)&v213[16] = v184;
  *((double *)&v213[16] + 1) = v139;
  *((void *)&v213[11] + 1) = v92;
  *(CGFloat *)&v213[17] = v183;
  *((CGFloat *)&v213[17] + 1) = v182;
  *(CGFloat *)&v213[18] = v181;
  *((CGFloat *)&v213[18] + 1) = v180;
  *(CGFloat *)&v213[19] = v174;
  *((CGFloat *)&v213[19] + 1) = v173;
  *(CGFloat *)&v213[20] = v172;
  *((CGFloat *)&v213[20] + 1) = v171;
  *(CGFloat *)&v213[21] = v166;
  *((CGFloat *)&v213[21] + 1) = v165;
  *(CGFloat *)&v213[22] = v164;
  *((CGFloat *)&v213[22] + 1) = v163;
  *(CGFloat *)&v213[23] = v162;
  *((CGFloat *)&v213[23] + 1) = v161;
  *(CGFloat *)&v213[24] = v160;
  *((CGFloat *)&v213[24] + 1) = v159;
  *(double *)&v213[25] = v139;
  *((CGFloat *)&v213[25] + 1) = v158;
  *(CGFloat *)&v213[26] = v157;
  *((CGFloat *)&v213[26] + 1) = v156;
  *(CGFloat *)&v213[27] = v155;
  *((CGFloat *)&v213[27] + 1) = v170;
  *(CGFloat *)&v213[28] = v169;
  *((CGFloat *)&v213[28] + 1) = v168;
  *(CGFloat *)&v213[29] = v167;
  *((CGFloat *)&v213[29] + 1) = v178;
  *(CGFloat *)&v213[30] = v177;
  *((CGFloat *)&v213[30] + 1) = v176;
  *(CGFloat *)&v213[31] = v179;
  sub_20A4BDCFC((uint64_t)v214, (uint64_t)&v213[31] + 8, &qword_26763AEE0);
  *((CGFloat *)&v213[40] + 1) = v206;
  *(CGFloat *)&v213[41] = v205.size.height;
  *((void *)&v213[41] + 1) = *(void *)&v205.size.width;
  *(CGFloat *)&v213[42] = v205.origin.y;
  *((double *)&v213[42] + 1) = v139;
  *(CGFloat *)&v213[43] = v207.size.height;
  *((void *)&v213[43] + 1) = *(void *)&v207.size.width;
  *(CGFloat *)&v213[44] = v207.origin.y;
  *((void *)&v213[44] + 1) = *(void *)&v207.origin.x;
  *(CGFloat *)&v213[45] = v208.size.height;
  *((void *)&v213[45] + 1) = *(void *)&v208.size.width;
  *(CGFloat *)&v213[46] = v208.origin.y;
  *((void *)&v213[46] + 1) = *(void *)&v208.origin.x;
  *(CGFloat *)&v213[47] = v144;
  *((void *)&v213[47] + 1) = *(void *)&v209.size.height;
  *(CGFloat *)&v213[48] = v145;
  *((CGFloat *)&v213[48] + 1) = v146;
  return memcpy(v212, v213, 0x310uLL);
}

void sub_20A4BD51C(uint64_t a1, uint64_t a2, uint64_t a3, double a4, uint64_t a5, void *a6)
{
  sub_20A4BE194(a1, (uint64_t)v16);
  if (v17)
  {
    sub_20A431DD0();
    if (swift_dynamicCast())
    {
      uint64_t v10 = *MEMORY[0x263F814F0];
      objc_msgSend(a6, sel_removeAttribute_range_, *MEMORY[0x263F814F0], a2, a3);
      objc_msgSend(v15, sel_pointSize);
      double v12 = round(v11 * a4 * 4.0) * 0.25;
      id v13 = objc_msgSend(v15, sel_fontDescriptor);
      id v14 = objc_msgSend(self, sel_fontWithDescriptor_size_, v13, v12);

      objc_msgSend(a6, sel_addAttribute_value_range_, v10, v14, a2, a3);
    }
  }
  else
  {
    sub_20A44349C((uint64_t)v16);
  }
}

uint64_t sub_20A4BD680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void (**)(long long *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    *((void *)&v12 + 1) = swift_getObjectType();
    *(void *)&long long v11 = a2;
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_unknownObjectRetain();
  v9(&v11, a3, a4, a5);
  return sub_20A44349C((uint64_t)&v11);
}

uint64_t type metadata accessor for WelcomeViewLayoutAttributesFactory()
{
  return self;
}

uint64_t sub_20A4BD734@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  if (result)
  {
    int64x2_t v8 = vdupq_lane_s64(0x4054000000000000, 0);
    *(double *)v8.i64 = a3 * 98.0 + 105.0;
    __asm { FMOV            V5.2D, #-1.0 }
    *(double *)&_Q5 = a3 * 15.0 + 6.0;
    double v5 = a3 * 58.0 + 172.0;
    long long v9 = xmmword_20A8D8730;
    long long v10 = xmmword_20A8D8740;
    long long v11 = xmmword_20A8D8750;
    long long v12 = xmmword_20A8D8760;
    double v7 = 24.0;
    uint64_t v14 = 0x4071200000000000;
    uint64_t v15 = 0x4041800000000000;
    uint64_t v6 = 0x404A000000000000;
    uint64_t v16 = 0x4054800000000000;
  }
  else
  {
    double v5 = a3 * -32.0 + 218.0;
    double v21 = a3 * 14.0 + 125.0;
    uint64_t result = sub_20A8C4A00();
    double v7 = a3 * 26.0 + 22.0;
    int64x2_t v8 = vdupq_lane_s64(0x4061B00000000000, 0);
    *(double *)v8.i64 = v21;
    long long v9 = xmmword_20A8D8770;
    long long v10 = xmmword_20A8D8780;
    long long v11 = xmmword_20A8D8790;
    long long v12 = xmmword_20A8D87A0;
    _Q5 = xmmword_20A8D87B0;
    uint64_t v14 = 0x407EA00000000000;
    uint64_t v15 = 0x4040800000000000;
    uint64_t v16 = 0x4061600000000000;
  }
  *(void *)a2 = v14;
  *(double *)(a2 + 8) = v5;
  *(int64x2_t *)(a2 + 16) = v8;
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v6;
  *(double *)(a2 + 48) = v7;
  *(_OWORD *)(a2 + 56) = _Q5;
  *(_OWORD *)(a2 + 72) = v12;
  *(_OWORD *)(a2 + 88) = v11;
  *(_OWORD *)(a2 + 104) = v10;
  *(_OWORD *)(a2 + 120) = v9;
  *(void *)(a2 + 136) = v16;
  *(void *)(a2 + 144) = 0x403E000000000000;
  return result;
}

uint64_t sub_20A4BD90C(uint64_t a1)
{
  id v2 = *(id *)(a1 + 16);
  return a1;
}

void sub_20A4BD938(void *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, CGFloat a4@<D1>)
{
  objc_msgSend(a1, sel_boundingRectWithSize_options_context_, 1, 0);
  uint64_t v33 = *MEMORY[0x263F814F0];
  id v5 = a1;
  uint64_t v6 = 0;
  double v7 = 1.0;
  double v8 = 0.75;
  uint64_t v9 = 7;
  CGFloat v30 = 0.0;
  CGFloat v28 = 0.0;
  CGFloat v29 = 0.0;
  CGFloat v27 = 0.0;
  id v10 = v5;
  double v11 = 0.5;
  do
  {
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F089B8]), sel_initWithAttributedString_, v5);
    id v13 = objc_msgSend(v5, sel_length);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v12;
    *(double *)(v14 + 24) = v8;
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = sub_20A4BE108;
    *(void *)(v15 + 24) = v14;
    aBlock[4] = sub_20A4BE124;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_20A4BD680;
    aBlock[3] = &block_descriptor_4;
    uint64_t v16 = _Block_copy(aBlock);
    id v17 = v12;
    swift_retain();
    swift_release();
    objc_msgSend(v5, sel_enumerateAttribute_inRange_options_usingBlock_, v33, 0, v13, 0, v16);
    _Block_release(v16);
    LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();

    swift_release();
    swift_release();
    if (v16)
    {
      __break(1u);
      return;
    }
    id v10 = v17;
    objc_msgSend(v10, sel_boundingRectWithSize_options_context_, 1, 0, a3, 1.79769313e308);
    CGFloat x = v35.origin.x;
    CGFloat y = v35.origin.y;
    CGFloat width = v35.size.width;
    CGFloat height = v35.size.height;
    if (CGRectGetHeight(v35) <= a4)
    {

      uint64_t v6 = v10;
      CGFloat v29 = y;
      CGFloat v30 = x;
      CGFloat v27 = height;
      CGFloat v28 = width;
      double v11 = v8;
    }
    else
    {

      double v7 = v8;
    }
    if (v7 - v11 < 0.001) {
      break;
    }
    double v8 = v11 + (v7 - v11) * 0.5;
    --v9;
  }
  while (v9);
  if (v6)
  {
    v36.origin.CGFloat x = v30;
    v36.origin.CGFloat y = v29;
    v36.size.CGFloat width = v28;
    v36.size.CGFloat height = v27;
    double v22 = floor(CGRectGetMinX(v36));
    v37.origin.CGFloat x = v30;
    v37.origin.CGFloat y = v29;
    v37.size.CGFloat width = v28;
    v37.size.CGFloat height = v27;
    double v23 = floor(CGRectGetMinY(v37));
    v38.origin.CGFloat x = v30;
    v38.origin.CGFloat y = v29;
    v38.size.CGFloat width = v28;
    v38.size.CGFloat height = v27;
    double v24 = ceil(CGRectGetWidth(v38));
    v39.origin.CGFloat x = v30;
    v39.origin.CGFloat y = v29;
    v39.size.CGFloat width = v28;
    v39.size.CGFloat height = v27;
    double v25 = CGRectGetHeight(v39);

    id v10 = v6;
  }
  else
  {
    v40.origin.CGFloat x = x;
    v40.origin.CGFloat y = y;
    v40.size.CGFloat width = width;
    v40.size.CGFloat height = height;
    double v22 = floor(CGRectGetMinX(v40));
    v41.origin.CGFloat x = x;
    v41.origin.CGFloat y = y;
    v41.size.CGFloat width = width;
    v41.size.CGFloat height = height;
    double v23 = floor(CGRectGetMinY(v41));
    v42.origin.CGFloat x = x;
    v42.origin.CGFloat y = y;
    v42.size.CGFloat width = width;
    v42.size.CGFloat height = height;
    double v24 = ceil(CGRectGetWidth(v42));
    v43.origin.CGFloat x = x;
    v43.origin.CGFloat y = y;
    v43.size.CGFloat width = width;
    v43.size.CGFloat height = height;
    double v25 = CGRectGetHeight(v43);
  }
  *(void *)a2 = v10;
  *(double *)(a2 + 8) = v22;
  *(double *)(a2 + 16) = v23;
  *(double *)(a2 + 24) = v24;
  *(double *)(a2 + 32) = ceil(v25);
}

uint64_t sub_20A4BDCFC(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_20A4BE14C(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

CGFloat sub_20A4BDD68(uint64_t a1, uint64_t a2, double *a3, uint64_t a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, double a10, double a11, double a12, double a13)
{
  *(double *)&v37[16] = a12;
  *(double *)&unsigned char v37[24] = a13;
  *(double *)CGRect v37 = a10;
  *(double *)&v37[8] = a11;
  uint64_t v39 = a4;
  uint64_t v40 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v38);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  __swift_project_boxed_opaque_existential_1(v38, v39);
  double v21 = (void *)sub_20A7A002C(*(void **)(a2 + 152));
  sub_20A431DD0();
  objc_msgSend(self, sel_systemFontSize);
  double v22 = (void *)sub_20A8CEE20();
  objc_msgSend(v22, sel_pointSize);
  double v24 = v23;

  if (v24 >= 20.0) {
    double v25 = *a3;
  }
  else {
    double v25 = a3[14] + 10.0;
  }
  objc_msgSend(v21, sel_boundingRectWithSize_options_context_, 3, 0, v25, 1.79769313e308);
  CGFloat v27 = v26;
  CGFloat v29 = v28;
  CGFloat v31 = v30;
  CGFloat v33 = v32;
  v41.origin.CGFloat x = a6;
  v41.origin.CGFloat y = a7;
  v41.size.CGFloat width = a8;
  v41.size.CGFloat height = a9;
  CGFloat v34 = CGRectGetWidth(v41) * 0.5 - v25 * 0.5;
  CGRectGetMaxY(*(CGRect *)v37);
  v42.origin.CGFloat x = v27;
  v42.origin.CGFloat y = v29;
  v42.size.CGFloat width = v31;
  v42.size.CGFloat height = v33;
  CGRectGetHeight(v42);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return v34;
}

void *sub_20A4BDF64@<X0>(void *a1@<X8>)
{
  long long v18 = *(_OWORD *)(v1 + 464);
  long long v19 = *(_OWORD *)(v1 + 488);
  long long v16 = *(_OWORD *)(v1 + 432);
  long long v17 = *(_OWORD *)(v1 + 448);
  long long v14 = *(_OWORD *)(v1 + 400);
  long long v15 = *(_OWORD *)(v1 + 416);
  long long v12 = *(_OWORD *)(v1 + 368);
  long long v13 = *(_OWORD *)(v1 + 384);
  long long v10 = *(_OWORD *)(v1 + 336);
  long long v11 = *(_OWORD *)(v1 + 352);
  long long v8 = *(_OWORD *)(v1 + 304);
  long long v9 = *(_OWORD *)(v1 + 320);
  long long v6 = *(_OWORD *)(v1 + 272);
  long long v7 = *(_OWORD *)(v1 + 288);
  long long v4 = *(_OWORD *)(v1 + 240);
  long long v5 = *(_OWORD *)(v1 + 256);
  long long v3 = *(_OWORD *)(v1 + 208);
  return sub_20A4BC8D0(*(unsigned __int8 *)(v1 + 112), *(void **)(v1 + 184), *(void *)(v1 + 480), a1, *(CGFloat *)(v1 + 16), *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 72), *(CGFloat *)(v1 + 80), *(CGFloat *)(v1 + 88), *(CGFloat *)(v1 + 96), *(CGFloat *)(v1 + 104), *(CGFloat *)(v1 + 120), *(CGFloat *)(v1 + 128), *(CGFloat *)(v1 + 136),
           *(CGFloat *)(v1 + 144),
           *(double *)(v1 + 152),
           *(double *)(v1 + 160),
           *(double *)(v1 + 168),
           *(double *)(v1 + 176),
           *(double *)(v1 + 192),
           *(double *)(v1 + 200),
           *(double *)&v3,
           *((double *)&v3 + 1),
           *(double *)(v1 + 224),
           *(double *)(v1 + 232),
           *(double *)&v4,
           *((double *)&v4 + 1),
           *(double *)&v5,
           *((double *)&v5 + 1),
           *(double *)&v6,
           *((double *)&v6 + 1),
           *(double *)&v7,
           *((double *)&v7 + 1),
           *(double *)&v8,
           *((double *)&v8 + 1),
           *(double *)&v9,
           *((double *)&v9 + 1),
           *(double *)&v10,
           *((double *)&v10 + 1),
           *(double *)&v11,
           *((double *)&v11 + 1),
           *(double *)&v12,
           *((double *)&v12 + 1),
           *(double *)&v13,
           *((double *)&v13 + 1),
           *(double *)&v14,
           *((double *)&v14 + 1),
           *(double *)&v15,
           *((double *)&v15 + 1),
           *(double *)&v16,
           *((double *)&v16 + 1),
           *(double *)&v17,
           *((double *)&v17 + 1),
           *(double *)&v18,
           *((double *)&v18 + 1),
           *(CGFloat *)&v19,
           *((CGFloat *)&v19 + 1),
           *(CGFloat *)(v1 + 504));
}

uint64_t sub_20A4BE0A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_20A4BE0D0()
{
  return swift_deallocObject();
}

void sub_20A4BE108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_20A4BD51C(a1, a2, a3, *(double *)(v4 + 24), a4, *(void **)(v4 + 16));
}

uint64_t sub_20A4BE114()
{
  return swift_deallocObject();
}

uint64_t sub_20A4BE124()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_20A4BE14C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_20A8CF1B0();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_20A4BE194(uint64_t a1, uint64_t a2)
{
  sub_20A4BE14C(0, (unint64_t *)&qword_26AC80170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4BE20C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  int v78 = a2;
  uint64_t v67 = sub_20A8C4030();
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  CGFloat v65 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4BEC60(0, qword_26AC6D6E0, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v88 = (uint64_t)&v63 - v7;
  sub_20A4BEC60(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v79 = (char *)&v63 - v9;
  sub_20A4BEC60(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v72 = (uint64_t)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v71 = (uint64_t)&v63 - v13;
  MEMORY[0x270FA5388](v14);
  long long v16 = (char *)&v63 - v15;
  sub_20A4BEC60(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v77 = (uint64_t)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v85 = (uint64_t)&v63 - v20;
  uint64_t v21 = sub_20A8C3410();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  CGFloat v73 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  double v26 = (char *)&v63 - v25;
  uint64_t v27 = type metadata accessor for PriceViewModel();
  uint64_t v82 = *(void *)(v27 - 8);
  uint64_t v83 = v27;
  MEMORY[0x270FA5388](v27);
  CGFloat v29 = (char *)&v63 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for QuoteViewModel();
  uint64_t v75 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v86 = (uint64_t)&v63 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for QuoteSummaryViewModel();
  MEMORY[0x270FA5388](v74);
  uint64_t v76 = (uint64_t)&v63 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a3 = sub_20A8C3EF0();
  a3[1] = v32;
  a3[2] = sub_20A8C3E60();
  a3[3] = v33;
  uint64_t v81 = a3;
  CGFloat v34 = (int *)type metadata accessor for StockViewModel();
  sub_20A458F00(a1 + v34[7], (uint64_t)v29);
  uint64_t v35 = a1 + v34[8];
  uint64_t v84 = v22;
  uint64_t v69 = *(void (**)(char *))(v22 + 16);
  uint64_t v70 = v35;
  uint64_t v89 = v21;
  v69(v26);
  uint64_t v36 = v34[5];
  uint64_t v80 = a1;
  uint64_t v37 = a1 + v36;
  sub_20A4BECB4(a1 + v36, (uint64_t)v16);
  uint64_t v38 = sub_20A8C3E10();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  if (v40(v16, 1, v38) == 1)
  {
    sub_20A4BEDA0((uint64_t)v16, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    uint64_t v41 = type metadata accessor for QuoteSummaryTimeRange();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v85, 1, 1, v41);
  }
  else
  {
    sub_20A5FCD84(v85);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v38);
  }
  uint64_t v68 = v39;
  uint64_t v42 = v86;
  sub_20A4BEE5C((uint64_t)v29, v86, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  uint64_t v43 = v87;
  uint64_t v44 = v42 + *(int *)(v87 + 20);
  CGFloat v64 = *(void (**)(uint64_t, char *, uint64_t))(v84 + 32);
  v64(v44, v26, v89);
  sub_20A4BED34(v85, v42 + *(int *)(v43 + 24), (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
  uint64_t v45 = v71;
  sub_20A4BECB4(v37, v71);
  if (v40((char *)v45, 1, v38) == 1)
  {
    sub_20A4BEDA0(v45, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v88, 1, 1, v83);
    uint64_t v46 = v80;
  }
  else
  {
    double v47 = v65;
    double v48 = v40;
    uint64_t v49 = v37;
    uint64_t v50 = v80;
    sub_20A8C3E70();
    sub_20A5FCF64(v47, v78 & 1, v88);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v47, v67);
    uint64_t v51 = v45;
    uint64_t v46 = v50;
    uint64_t v37 = v49;
    uint64_t v40 = v48;
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v51, v38);
  }
  uint64_t v52 = v73;
  ((void (*)(char *, uint64_t, uint64_t))v69)(v73, v70, v89);
  uint64_t v53 = v72;
  sub_20A4BECB4(v37, v72);
  if (v40((char *)v53, 1, v38) == 1)
  {
    sub_20A4BEDA0(v53, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    uint64_t v54 = type metadata accessor for QuoteSummaryTimeRange();
    uint64_t v55 = v77;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v77, 1, 1, v54);
  }
  else
  {
    uint64_t v55 = v77;
    sub_20A5FD780(v78 & 1, v77);
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v53, v38);
  }
  uint64_t v56 = (uint64_t)v79;
  uint64_t v57 = v88;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v88, 1, v83) == 1)
  {
    sub_20A4BEDA0(v55, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v52, v89);
    sub_20A4BEDA0(v57, qword_26AC6D6E0, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
    uint64_t v58 = 1;
    uint64_t v59 = v87;
  }
  else
  {
    sub_20A4BEE5C(v57, v56, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
    uint64_t v59 = v87;
    v64(v56 + *(int *)(v87 + 20), v52, v89);
    sub_20A4BED34(v55, v56 + *(int *)(v59 + 24), (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    uint64_t v58 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v56, v58, 1, v59);
  sub_20A4BEDFC(v46, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  uint64_t v60 = v76;
  sub_20A4BEE5C(v86, v76, (uint64_t (*)(void))type metadata accessor for QuoteViewModel);
  sub_20A4BED34(v56, v60 + *(int *)(v74 + 20), (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
  uint64_t v61 = type metadata accessor for StockTitleViewModel();
  return sub_20A4BEE5C(v60, (uint64_t)v81 + *(int *)(v61 + 24), (uint64_t (*)(void))type metadata accessor for QuoteSummaryViewModel);
}

void sub_20A4BEC60(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A4BECB4(uint64_t a1, uint64_t a2)
{
  sub_20A4BEC60(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4BED34(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A4BEC60(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A4BEDA0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A4BEC60(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A4BEDFC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A4BEE5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for StockTitleViewModel()
{
  uint64_t result = qword_26AC67C00;
  if (!qword_26AC67C00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_20A4BEF10(void *a1, void *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v35 = *a2;
    *a1 = *a2;
    uint64_t v36 = (void *)(v35 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    v8[8] = *((unsigned char *)a2 + v7 + 8);
    *(void *)uint64_t v8 = *(void *)((char *)a2 + v7);
    unsigned char v8[24] = *((unsigned char *)a2 + v7 + 24);
    *((void *)v8 + 2) = *(void *)((char *)a2 + v7 + 16);
    v8[40] = *((unsigned char *)a2 + v7 + 40);
    *((void *)v8 + 4) = *(void *)((char *)a2 + v7 + 32);
    uint64_t v10 = *(void *)((char *)a2 + v7 + 56);
    *((void *)v8 + 6) = *(void *)((char *)a2 + v7 + 48);
    *((void *)v8 + 7) = v10;
    uint64_t v11 = *(void *)((char *)a2 + v7 + 72);
    *((void *)v8 + 8) = *(void *)((char *)a2 + v7 + 64);
    *((void *)v8 + 9) = v11;
    uint64_t v12 = (int *)type metadata accessor for PriceViewModel();
    uint64_t v13 = v12[9];
    uint64_t v69 = &v9[v13];
    uint64_t v71 = &v8[v13];
    uint64_t v14 = sub_20A8C2EB0();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v71, v69, v14);
    uint64_t v16 = v12[10];
    uint64_t v17 = &v8[v16];
    uint64_t v18 = &v9[v16];
    uint64_t v19 = sub_20A8C4030();
    uint64_t v66 = *(void (**)(char *, char *))(*(void *)(v19 - 8) + 16);
    uint64_t v67 = v19;
    v66(v17, v18);
    uint64_t v70 = v12;
    uint64_t v20 = v12[11];
    uint64_t v21 = &v8[v20];
    uint64_t v22 = &v9[v20];
    uint64_t v23 = sub_20A8C2990();
    CGFloat v64 = *(void (**)(char *, char *))(*(void *)(v23 - 8) + 16);
    uint64_t v65 = v23;
    v64(v21, v22);
    uint64_t v24 = type metadata accessor for QuoteViewModel();
    uint64_t v25 = *(int *)(v24 + 20);
    double v26 = &v8[v25];
    uint64_t v27 = &v9[v25];
    uint64_t v28 = sub_20A8C3410();
    uint64_t v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
    v63(v26, v27, v28);
    uint64_t v29 = *(int *)(v24 + 24);
    uint64_t v30 = &v8[v29];
    uint64_t v31 = &v9[v29];
    uint64_t v32 = type metadata accessor for QuoteSummaryTimeRange();
    uint64_t v33 = *(void *)(v32 - 8);
    double v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
    if (v62(v31, 1, v32))
    {
      sub_20A4BEC60(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
      memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      uint64_t v60 = v33;
      uint64_t v72 = v32;
      uint64_t v37 = sub_20A8C2BC0();
      uint64_t v38 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v31, 3, v37))
      {
        uint64_t v33 = v60;
        memcpy(v30, v31, *(void *)(v60 + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v30, v31, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v30, 0, 3, v37);
        uint64_t v33 = v60;
      }
      uint64_t v32 = v72;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v72);
    }
    uint64_t v39 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
    uint64_t v40 = &v8[v39];
    uint64_t v41 = &v9[v39];
    uint64_t v42 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v41, 1, v24))
    {
      sub_20A4BEC60(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
      memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
      return a1;
    }
    else
    {
      uint64_t v59 = v42;
      uint64_t v61 = v33;
      *(void *)uint64_t v40 = *(void *)v41;
      v40[8] = v41[8];
      *((void *)v40 + 2) = *((void *)v41 + 2);
      unsigned char v40[24] = v41[24];
      *((void *)v40 + 4) = *((void *)v41 + 4);
      v40[40] = v41[40];
      uint64_t v44 = *((void *)v41 + 7);
      *((void *)v40 + 6) = *((void *)v41 + 6);
      *((void *)v40 + 7) = v44;
      uint64_t v45 = *((void *)v41 + 9);
      *((void *)v40 + 8) = *((void *)v41 + 8);
      *((void *)v40 + 9) = v45;
      uint64_t v46 = v70;
      uint64_t v47 = v70[9];
      uint64_t v73 = v32;
      double v48 = &v40[v47];
      uint64_t v49 = &v41[v47];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15(v48, v49, v14);
      ((void (*)(char *, char *, uint64_t))v66)(&v40[v46[10]], &v41[v46[10]], v67);
      ((void (*)(char *, char *, uint64_t))v64)(&v40[v46[11]], &v41[v46[11]], v65);
      v63(&v40[*(int *)(v24 + 20)], &v41[*(int *)(v24 + 20)], v28);
      uint64_t v50 = *(int *)(v24 + 24);
      uint64_t v51 = &v40[v50];
      uint64_t v52 = &v41[v50];
      if (v62(&v41[v50], 1, v73))
      {
        sub_20A4BEC60(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
        uint64_t v36 = a1;
      }
      else
      {
        uint64_t v54 = sub_20A8C2BC0();
        uint64_t v55 = *(void *)(v54 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v52, 3, v54))
        {
          uint64_t v56 = v61;
          memcpy(v51, v52, *(void *)(v61 + 64));
          uint64_t v57 = v73;
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v51, v52, v54);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v51, 0, 3, v54);
          uint64_t v57 = v73;
          uint64_t v56 = v61;
        }
        uint64_t v36 = a1;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v51, 0, 1, v57);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v40, 0, 1, v24);
    }
  }
  return v36;
}

uint64_t sub_20A4BF66C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v6 = v4 + v5[9];
  uint64_t v7 = sub_20A8C2EB0();
  uint64_t v28 = *(void (**)(uint64_t))(*(void *)(v7 - 8) + 8);
  uint64_t v29 = v7;
  v28(v6);
  uint64_t v8 = v4 + v5[10];
  uint64_t v9 = sub_20A8C4030();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v27(v8, v9);
  uint64_t v10 = v4 + v5[11];
  uint64_t v11 = sub_20A8C2990();
  double v26 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v26(v10, v11);
  uint64_t v12 = type metadata accessor for QuoteViewModel();
  uint64_t v13 = v4 + *(int *)(v12 + 20);
  uint64_t v14 = sub_20A8C3410();
  uint64_t v25 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
  v25(v13, v14);
  uint64_t v15 = v4 + *(int *)(v12 + 24);
  uint64_t v16 = type metadata accessor for QuoteSummaryTimeRange();
  uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  if (!v24(v15, 1, v16))
  {
    uint64_t v17 = sub_20A8C2BC0();
    uint64_t v18 = *(void *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 3, v17)) {
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
    }
  }
  uint64_t v19 = v4 + *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v19, 1, v12);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t))v28)(v19 + v5[9], v29);
    v27(v19 + v5[10], v9);
    v26(v19 + v5[11], v11);
    v25(v19 + *(int *)(v12 + 20), v14);
    uint64_t v21 = v19 + *(int *)(v12 + 24);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v24)(v21, 1, v16);
    if (!result)
    {
      uint64_t v22 = sub_20A8C2BC0();
      uint64_t v30 = *(void *)(v22 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v21, 3, v22);
      if (!result)
      {
        uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8);
        return v23(v21, v22);
      }
    }
  }
  return result;
}

void *sub_20A4BFA98(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  v6[8] = *((unsigned char *)a2 + v5 + 8);
  *(void *)uint64_t v6 = *(void *)((char *)a2 + v5);
  v6[24] = *((unsigned char *)a2 + v5 + 24);
  *((void *)v6 + 2) = *(void *)((char *)a2 + v5 + 16);
  v6[40] = *((unsigned char *)a2 + v5 + 40);
  *((void *)v6 + 4) = *(void *)((char *)a2 + v5 + 32);
  uint64_t v8 = *(void *)((char *)a2 + v5 + 56);
  *((void *)v6 + 6) = *(void *)((char *)a2 + v5 + 48);
  *((void *)v6 + 7) = v8;
  uint64_t v9 = *(void *)((char *)a2 + v5 + 72);
  *((void *)v6 + 8) = *(void *)((char *)a2 + v5 + 64);
  *((void *)v6 + 9) = v9;
  uint64_t v10 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v11 = v10[9];
  uint64_t v63 = &v7[v11];
  uint64_t v65 = &v6[v11];
  uint64_t v12 = sub_20A8C2EB0();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v61 = v12;
  v13(v65, v63, v12);
  uint64_t v14 = v10[10];
  uint64_t v15 = &v6[v14];
  uint64_t v16 = &v7[v14];
  uint64_t v17 = sub_20A8C4030();
  uint64_t v59 = *(void (**)(char *, char *))(*(void *)(v17 - 8) + 16);
  uint64_t v60 = v17;
  v59(v15, v16);
  CGFloat v64 = v10;
  uint64_t v18 = v10[11];
  uint64_t v19 = &v6[v18];
  uint64_t v20 = &v7[v18];
  uint64_t v21 = sub_20A8C2990();
  uint64_t v57 = *(void (**)(char *, char *))(*(void *)(v21 - 8) + 16);
  uint64_t v58 = v21;
  v57(v19, v20);
  uint64_t v22 = type metadata accessor for QuoteViewModel();
  uint64_t v23 = *(int *)(v22 + 20);
  uint64_t v24 = &v6[v23];
  uint64_t v25 = &v7[v23];
  uint64_t v26 = sub_20A8C3410();
  uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
  v56(v24, v25, v26);
  uint64_t v27 = *(int *)(v22 + 24);
  uint64_t v28 = &v6[v27];
  uint64_t v29 = &v7[v27];
  uint64_t v30 = type metadata accessor for QuoteSummaryTimeRange();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  if (v55(v29, 1, v30))
  {
    sub_20A4BEC60(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    uint64_t v66 = v30;
    uint64_t v33 = sub_20A8C2BC0();
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v29, 3, v33))
    {
      memcpy(v28, v29, *(void *)(v31 + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v28, v29, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v28, 0, 3, v33);
    }
    uint64_t v30 = v66;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v66);
  }
  uint64_t v35 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
  uint64_t v36 = &v6[v35];
  uint64_t v37 = &v7[v35];
  uint64_t v38 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v37, 1, v22))
  {
    sub_20A4BEC60(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
    memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    uint64_t v54 = v31;
    *(void *)uint64_t v36 = *(void *)v37;
    v36[8] = v37[8];
    *((void *)v36 + 2) = *((void *)v37 + 2);
    v36[24] = v37[24];
    *((void *)v36 + 4) = *((void *)v37 + 4);
    v36[40] = v37[40];
    uint64_t v40 = *((void *)v37 + 7);
    *((void *)v36 + 6) = *((void *)v37 + 6);
    *((void *)v36 + 7) = v40;
    uint64_t v41 = *((void *)v37 + 9);
    *((void *)v36 + 8) = *((void *)v37 + 8);
    *((void *)v36 + 9) = v41;
    uint64_t v42 = v64;
    uint64_t v43 = v64[9];
    uint64_t v44 = &v36[v43];
    uint64_t v67 = v30;
    uint64_t v45 = &v37[v43];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v44, v45, v61);
    ((void (*)(char *, char *, uint64_t))v59)(&v36[v42[10]], &v37[v42[10]], v60);
    ((void (*)(char *, char *, uint64_t))v57)(&v36[v42[11]], &v37[v42[11]], v58);
    v56(&v36[*(int *)(v22 + 20)], &v37[*(int *)(v22 + 20)], v26);
    uint64_t v46 = *(int *)(v22 + 24);
    uint64_t v47 = &v36[v46];
    double v48 = &v37[v46];
    if (v55(&v37[v46], 1, v67))
    {
      sub_20A4BEC60(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      uint64_t v50 = sub_20A8C2BC0();
      uint64_t v51 = *(void *)(v50 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v48, 3, v50))
      {
        uint64_t v52 = v54;
        memcpy(v47, v48, *(void *)(v54 + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v47, v48, v50);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v47, 0, 3, v50);
        uint64_t v52 = v54;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v47, 0, 1, v67);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v36, 0, 1, v22);
  }
  return a1;
}

void *sub_20A4C0184(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  double v111 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = *(void *)((char *)a2 + v6);
  v7[8] = v8[8];
  *(void *)uint64_t v7 = v9;
  uint64_t v10 = *((void *)v8 + 2);
  unsigned char v7[24] = v8[24];
  *((void *)v7 + 2) = v10;
  uint64_t v11 = *((void *)v8 + 4);
  v7[40] = v8[40];
  *((void *)v7 + 4) = v11;
  *((void *)v7 + 6) = *((void *)v8 + 6);
  *((void *)v7 + 7) = *((void *)v8 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v7 + 8) = *((void *)v8 + 8);
  *((void *)v7 + 9) = *((void *)v8 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v13 = v12[9];
  uint64_t v14 = &v7[v13];
  uint64_t v15 = &v8[v13];
  uint64_t v16 = sub_20A8C2EB0();
  uint64_t v102 = *(void *)(v16 - 8);
  uint64_t v107 = v16;
  double v97 = *(void (**)(char *, char *))(v102 + 24);
  v97(v14, v15);
  uint64_t v17 = v12[10];
  uint64_t v18 = &v7[v17];
  uint64_t v19 = &v8[v17];
  uint64_t v20 = sub_20A8C4030();
  uint64_t v101 = *(void *)(v20 - 8);
  uint64_t v106 = v20;
  double v96 = *(void (**)(char *, char *))(v101 + 24);
  v96(v18, v19);
  double v108 = v12;
  uint64_t v21 = v12[11];
  uint64_t v22 = &v7[v21];
  uint64_t v23 = &v8[v21];
  uint64_t v24 = sub_20A8C2990();
  uint64_t v100 = *(void *)(v24 - 8);
  uint64_t v105 = v24;
  double v95 = *(void (**)(char *, char *))(v100 + 24);
  v95(v22, v23);
  uint64_t v25 = type metadata accessor for QuoteViewModel();
  uint64_t v26 = *(int *)(v25 + 20);
  uint64_t v27 = &v7[v26];
  uint64_t v28 = &v8[v26];
  uint64_t v29 = sub_20A8C3410();
  uint64_t v99 = *(void *)(v29 - 8);
  uint64_t v103 = v29;
  double v94 = *(void (**)(char *, char *))(v99 + 24);
  v94(v27, v28);
  uint64_t v30 = *(int *)(v25 + 24);
  uint64_t v31 = &v7[v30];
  uint64_t v32 = &v8[v30];
  uint64_t v33 = type metadata accessor for QuoteSummaryTimeRange();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  LODWORD(v28) = v35(v31, 1, v33);
  uint64_t v110 = v33;
  double v104 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v35;
  int v36 = v35(v32, 1, v33);
  uint64_t v109 = v34;
  if (!v28)
  {
    if (!v36)
    {
      uint64_t v42 = sub_20A8C2BC0();
      uint64_t v43 = *(void *)(v42 - 8);
      uint64_t v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48);
      int v93 = v44(v31, 3, v42);
      int v45 = v44(v32, 3, v42);
      if (v93)
      {
        if (!v45)
        {
          (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v31, v32, v42);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v31, 0, 3, v42);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v45)
        {
          (*(void (**)(char *, char *, uint64_t))(v43 + 24))(v31, v32, v42);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v42);
      }
      size_t v41 = *(void *)(v34 + 64);
LABEL_8:
      memcpy(v31, v32, v41);
      goto LABEL_14;
    }
    sub_20A4BEDFC((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for QuoteSummaryTimeRange);
LABEL_7:
    sub_20A4BEC60(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    size_t v41 = *(void *)(*(void *)(v40 - 8) + 64);
    goto LABEL_8;
  }
  if (v36) {
    goto LABEL_7;
  }
  uint64_t v37 = sub_20A8C2BC0();
  uint64_t v38 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v32, 3, v37))
  {
    uint64_t v39 = v109;
    memcpy(v31, v32, *(void *)(v109 + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v31, v32, v37);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v31, 0, 3, v37);
    uint64_t v39 = v109;
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v33);
LABEL_14:
  uint64_t v46 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
  uint64_t v47 = (uint64_t)&v7[v46];
  double v48 = &v8[v46];
  uint64_t v49 = *(void *)(v25 - 8);
  uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
  int v51 = v50(v47, 1, v25);
  int v52 = v50((uint64_t)v48, 1, v25);
  if (!v51)
  {
    if (v52)
    {
      sub_20A4BEDFC(v47, (uint64_t (*)(void))type metadata accessor for QuoteViewModel);
      goto LABEL_20;
    }
    uint64_t v71 = *(void *)v48;
    *(unsigned char *)(v47 + 8) = v48[8];
    *(void *)uint64_t v47 = v71;
    uint64_t v72 = *((void *)v48 + 2);
    *(unsigned char *)(v47 + 24) = v48[24];
    *(void *)(v47 + 16) = v72;
    uint64_t v73 = *((void *)v48 + 4);
    *(unsigned char *)(v47 + 40) = v48[40];
    *(void *)(v47 + 32) = v73;
    *(void *)(v47 + 48) = *((void *)v48 + 6);
    *(void *)(v47 + 56) = *((void *)v48 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v47 + 64) = *((void *)v48 + 8);
    *(void *)(v47 + 72) = *((void *)v48 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v74 = v108;
    ((void (*)(uint64_t, char *, uint64_t))v97)(v47 + v108[9], &v48[v108[9]], v107);
    ((void (*)(uint64_t, char *, uint64_t))v96)(v47 + v74[10], &v48[v74[10]], v106);
    ((void (*)(uint64_t, char *, uint64_t))v95)(v47 + v74[11], &v48[v74[11]], v105);
    ((void (*)(uint64_t, char *, uint64_t))v94)(v47 + *(int *)(v25 + 20), &v48[*(int *)(v25 + 20)], v103);
    uint64_t v75 = *(int *)(v25 + 24);
    uint64_t v76 = (void *)(v47 + v75);
    uint64_t v77 = &v48[v75];
    int v78 = v104(v47 + v75, 1, v110);
    int v79 = v104((uint64_t)v77, 1, v110);
    if (v78)
    {
      if (!v79)
      {
        uint64_t v80 = sub_20A8C2BC0();
        uint64_t v81 = *(void *)(v80 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v77, 3, v80))
        {
          uint64_t v82 = v109;
          memcpy(v76, v77, *(void *)(v109 + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v81 + 16))(v76, v77, v80);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v81 + 56))(v76, 0, 3, v80);
          uint64_t v82 = v109;
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v82 + 56))(v76, 0, 1, v110);
        return v111;
      }
    }
    else
    {
      if (!v79)
      {
        uint64_t v88 = sub_20A8C2BC0();
        uint64_t v89 = *(void *)(v88 - 8);
        double v90 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v89 + 48);
        int v91 = v90(v76, 3, v88);
        int v92 = v90(v77, 3, v88);
        if (v91)
        {
          if (!v92)
          {
            (*(void (**)(void *, char *, uint64_t))(v89 + 16))(v76, v77, v88);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v89 + 56))(v76, 0, 3, v88);
            return v111;
          }
        }
        else
        {
          if (!v92)
          {
            (*(void (**)(void *, char *, uint64_t))(v89 + 24))(v76, v77, v88);
            return v111;
          }
          (*(void (**)(void *, uint64_t))(v89 + 8))(v76, v88);
        }
        size_t v68 = *(void *)(v109 + 64);
        goto LABEL_35;
      }
      sub_20A4BEDFC((uint64_t)v76, (uint64_t (*)(void))type metadata accessor for QuoteSummaryTimeRange);
    }
    sub_20A4BEC60(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    size_t v68 = *(void *)(*(void *)(v86 - 8) + 64);
LABEL_35:
    uint64_t v69 = v76;
    uint64_t v70 = v77;
    goto LABEL_21;
  }
  if (v52)
  {
LABEL_20:
    sub_20A4BEC60(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
    size_t v68 = *(void *)(*(void *)(v67 - 8) + 64);
    uint64_t v69 = (void *)v47;
    uint64_t v70 = v48;
LABEL_21:
    memcpy(v69, v70, v68);
    return v111;
  }
  uint64_t v98 = v49;
  uint64_t v53 = *(void *)v48;
  *(unsigned char *)(v47 + 8) = v48[8];
  *(void *)uint64_t v47 = v53;
  uint64_t v54 = *((void *)v48 + 2);
  *(unsigned char *)(v47 + 24) = v48[24];
  *(void *)(v47 + 16) = v54;
  uint64_t v55 = *((void *)v48 + 4);
  *(unsigned char *)(v47 + 40) = v48[40];
  *(void *)(v47 + 32) = v55;
  *(void *)(v47 + 48) = *((void *)v48 + 6);
  *(void *)(v47 + 56) = *((void *)v48 + 7);
  *(void *)(v47 + 64) = *((void *)v48 + 8);
  *(void *)(v47 + 72) = *((void *)v48 + 9);
  uint64_t v56 = v108;
  uint64_t v57 = v108[9];
  uint64_t v58 = v47 + v57;
  uint64_t v59 = &v48[v57];
  uint64_t v60 = *(void (**)(uint64_t, char *, uint64_t))(v102 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v60(v58, v59, v107);
  (*(void (**)(uint64_t, char *, uint64_t))(v101 + 16))(v47 + v56[10], &v48[v56[10]], v106);
  (*(void (**)(uint64_t, char *, uint64_t))(v100 + 16))(v47 + v56[11], &v48[v56[11]], v105);
  (*(void (**)(uint64_t, char *, uint64_t))(v99 + 16))(v47 + *(int *)(v25 + 20), &v48[*(int *)(v25 + 20)], v103);
  uint64_t v61 = *(int *)(v25 + 24);
  double v62 = (void *)(v47 + v61);
  uint64_t v63 = &v48[v61];
  if (v104((uint64_t)&v48[v61], 1, v110))
  {
    sub_20A4BEC60(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
    uint64_t v65 = v111;
    uint64_t v66 = v98;
  }
  else
  {
    uint64_t v83 = sub_20A8C2BC0();
    uint64_t v84 = *(void *)(v83 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v63, 3, v83))
    {
      uint64_t v85 = v109;
      memcpy(v62, v63, *(void *)(v109 + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v84 + 16))(v62, v63, v83);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v84 + 56))(v62, 0, 3, v83);
      uint64_t v85 = v109;
    }
    uint64_t v66 = v98;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v85 + 56))(v62, 0, 1, v110);
    uint64_t v65 = v111;
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v66 + 56))(v47, 0, 1, v25);
  return v65;
}

_OWORD *sub_20A4C0E94(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  v6[8] = *((unsigned char *)a2 + v5 + 8);
  *(void *)uint64_t v6 = *(void *)((char *)a2 + v5);
  v6[24] = *((unsigned char *)a2 + v5 + 24);
  *((void *)v6 + 2) = *(void *)((char *)a2 + v5 + 16);
  *((void *)v6 + 4) = *(void *)((char *)a2 + v5 + 32);
  v6[40] = *((unsigned char *)a2 + v5 + 40);
  long long v8 = *(_OWORD *)((char *)a2 + v5 + 64);
  *((_OWORD *)v6 + 3) = *(_OWORD *)((char *)a2 + v5 + 48);
  *((_OWORD *)v6 + 4) = v8;
  uint64_t v9 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v10 = v9[9];
  uint64_t v11 = &v6[v10];
  uint64_t v12 = &v7[v10];
  uint64_t v59 = sub_20A8C2EB0();
  uint64_t v58 = *(void (**)(char *, char *))(*(void *)(v59 - 8) + 32);
  v58(v11, v12);
  uint64_t v13 = v9[10];
  uint64_t v14 = &v6[v13];
  uint64_t v15 = &v7[v13];
  uint64_t v16 = sub_20A8C4030();
  uint64_t v56 = *(void (**)(char *, char *))(*(void *)(v16 - 8) + 32);
  uint64_t v57 = v16;
  v56(v14, v15);
  uint64_t v17 = v9[11];
  uint64_t v18 = &v6[v17];
  uint64_t v19 = &v7[v17];
  uint64_t v20 = sub_20A8C2990();
  uint64_t v54 = *(void (**)(char *, char *))(*(void *)(v20 - 8) + 32);
  uint64_t v55 = v20;
  v54(v18, v19);
  uint64_t v21 = type metadata accessor for QuoteViewModel();
  uint64_t v22 = *(int *)(v21 + 20);
  uint64_t v23 = &v6[v22];
  uint64_t v24 = &v7[v22];
  uint64_t v25 = sub_20A8C3410();
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32);
  v53(v23, v24, v25);
  uint64_t v26 = *(int *)(v21 + 24);
  uint64_t v27 = &v6[v26];
  uint64_t v28 = &v7[v26];
  uint64_t v29 = type metadata accessor for QuoteSummaryTimeRange();
  uint64_t v60 = *(void *)(v29 - 8);
  int v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
  if (v52(v28, 1, v29))
  {
    sub_20A4BEC60(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    uint64_t v50 = v29;
    int v51 = v3;
    uint64_t v31 = sub_20A8C2BC0();
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v28, 3, v31))
    {
      uint64_t v33 = v60;
      memcpy(v27, v28, *(void *)(v60 + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v27, v28, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v27, 0, 3, v31);
      uint64_t v33 = v60;
    }
    uint64_t v34 = *(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56);
    uint64_t v29 = v50;
    v34(v27, 0, 1, v50);
    uint64_t v3 = v51;
  }
  uint64_t v35 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
  int v36 = &v6[v35];
  uint64_t v37 = &v7[v35];
  uint64_t v38 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(&v7[v35], 1, v21))
  {
    sub_20A4BEC60(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
    memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    *(void *)int v36 = *(void *)v37;
    v36[8] = v37[8];
    *((void *)v36 + 2) = *((void *)v37 + 2);
    v36[24] = v37[24];
    *((void *)v36 + 4) = *((void *)v37 + 4);
    v36[40] = v37[40];
    long long v40 = *((_OWORD *)v37 + 4);
    *((_OWORD *)v36 + 3) = *((_OWORD *)v37 + 3);
    *((_OWORD *)v36 + 4) = v40;
    ((void (*)(char *, char *, uint64_t))v58)(&v36[v9[9]], &v37[v9[9]], v59);
    ((void (*)(char *, char *, uint64_t))v56)(&v36[v9[10]], &v37[v9[10]], v57);
    ((void (*)(char *, char *, uint64_t))v54)(&v36[v9[11]], &v37[v9[11]], v55);
    v53(&v36[*(int *)(v21 + 20)], &v37[*(int *)(v21 + 20)], v25);
    uint64_t v41 = *(int *)(v21 + 24);
    uint64_t v42 = &v36[v41];
    uint64_t v43 = &v37[v41];
    if (v52(&v37[v41], 1, v29))
    {
      sub_20A4BEC60(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      uint64_t v45 = v29;
      uint64_t v46 = sub_20A8C2BC0();
      uint64_t v47 = *(void *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v43, 3, v46))
      {
        uint64_t v48 = v60;
        memcpy(v42, v43, *(void *)(v60 + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v42, v43, v46);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v42, 0, 3, v46);
        uint64_t v48 = v60;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v42, 0, 1, v45);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v36, 0, 1, v21);
  }
  return v3;
}

void *sub_20A4C1530(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v103 = a1;
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  *(void *)uint64_t v9 = *(void *)((char *)a2 + v8);
  v9[8] = *((unsigned char *)a2 + v8 + 8);
  *((void *)v9 + 2) = *(void *)((char *)a2 + v8 + 16);
  unsigned char v9[24] = *((unsigned char *)a2 + v8 + 24);
  *((void *)v9 + 4) = *(void *)((char *)a2 + v8 + 32);
  unsigned char v9[40] = *((unsigned char *)a2 + v8 + 40);
  uint64_t v11 = *(void *)((char *)a2 + v8 + 56);
  *((void *)v9 + 6) = *(void *)((char *)a2 + v8 + 48);
  *((void *)v9 + 7) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *((void *)v10 + 9);
  *((void *)v9 + 8) = *((void *)v10 + 8);
  *((void *)v9 + 9) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v14 = v13[9];
  uint64_t v15 = &v9[v14];
  uint64_t v16 = &v10[v14];
  uint64_t v17 = sub_20A8C2EB0();
  uint64_t v94 = *(void *)(v17 - 8);
  uint64_t v99 = v17;
  double v90 = *(void (**)(char *, char *))(v94 + 40);
  v90(v15, v16);
  uint64_t v18 = v13[10];
  uint64_t v19 = &v9[v18];
  uint64_t v20 = &v10[v18];
  uint64_t v21 = sub_20A8C4030();
  uint64_t v93 = *(void *)(v21 - 8);
  uint64_t v98 = v21;
  uint64_t v89 = *(void (**)(char *, char *))(v93 + 40);
  v89(v19, v20);
  uint64_t v100 = v13;
  uint64_t v22 = v13[11];
  uint64_t v23 = &v9[v22];
  uint64_t v24 = &v10[v22];
  uint64_t v25 = sub_20A8C2990();
  uint64_t v92 = *(void *)(v25 - 8);
  uint64_t v97 = v25;
  uint64_t v88 = *(void (**)(char *, char *))(v92 + 40);
  v88(v23, v24);
  uint64_t v26 = type metadata accessor for QuoteViewModel();
  uint64_t v27 = *(int *)(v26 + 20);
  uint64_t v28 = &v9[v27];
  uint64_t v29 = &v10[v27];
  uint64_t v30 = sub_20A8C3410();
  uint64_t v91 = *(void *)(v30 - 8);
  uint64_t v95 = v30;
  uint64_t v87 = *(void (**)(char *, char *))(v91 + 40);
  v87(v28, v29);
  uint64_t v31 = *(int *)(v26 + 24);
  uint64_t v32 = &v9[v31];
  uint64_t v33 = &v10[v31];
  uint64_t v34 = type metadata accessor for QuoteSummaryTimeRange();
  uint64_t v35 = *(void *)(v34 - 8);
  int v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  LODWORD(v29) = v36(v32, 1, v34);
  uint64_t v102 = v34;
  double v96 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v36;
  int v37 = v36(v33, 1, v34);
  uint64_t v101 = v35;
  if (!v29)
  {
    if (!v37)
    {
      uint64_t v43 = sub_20A8C2BC0();
      uint64_t v44 = *(void *)(v43 - 8);
      uint64_t v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
      int v86 = v45(v32, 3, v43);
      int v46 = v45(v33, 3, v43);
      if (v86)
      {
        if (!v46)
        {
          (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v32, v33, v43);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v32, 0, 3, v43);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(char *, char *, uint64_t))(v44 + 40))(v32, v33, v43);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v43);
      }
      size_t v42 = *(void *)(v35 + 64);
LABEL_8:
      memcpy(v32, v33, v42);
      goto LABEL_14;
    }
    sub_20A4BEDFC((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for QuoteSummaryTimeRange);
LABEL_7:
    sub_20A4BEC60(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    size_t v42 = *(void *)(*(void *)(v41 - 8) + 64);
    goto LABEL_8;
  }
  if (v37) {
    goto LABEL_7;
  }
  uint64_t v38 = sub_20A8C2BC0();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v33, 3, v38))
  {
    uint64_t v40 = v101;
    memcpy(v32, v33, *(void *)(v101 + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v32, v33, v38);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v32, 0, 3, v38);
    uint64_t v40 = v101;
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v34);
LABEL_14:
  uint64_t v47 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
  uint64_t v48 = (uint64_t)&v9[v47];
  uint64_t v49 = &v10[v47];
  uint64_t v50 = *(void *)(v26 - 8);
  int v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 48);
  int v52 = v51(v48, 1, v26);
  int v53 = v51((uint64_t)v49, 1, v26);
  if (!v52)
  {
    if (v53)
    {
      sub_20A4BEDFC(v48, (uint64_t (*)(void))type metadata accessor for QuoteViewModel);
      goto LABEL_20;
    }
    *(void *)uint64_t v48 = *(void *)v49;
    *(unsigned char *)(v48 + 8) = v49[8];
    *(void *)(v48 + 16) = *((void *)v49 + 2);
    *(unsigned char *)(v48 + 24) = v49[24];
    *(void *)(v48 + 32) = *((void *)v49 + 4);
    *(unsigned char *)(v48 + 40) = v49[40];
    uint64_t v65 = *((void *)v49 + 7);
    *(void *)(v48 + 48) = *((void *)v49 + 6);
    *(void *)(v48 + 56) = v65;
    swift_bridgeObjectRelease();
    uint64_t v66 = *((void *)v49 + 9);
    *(void *)(v48 + 64) = *((void *)v49 + 8);
    *(void *)(v48 + 72) = v66;
    swift_bridgeObjectRelease();
    uint64_t v67 = v100;
    ((void (*)(uint64_t, char *, uint64_t))v90)(v48 + v100[9], &v49[v100[9]], v99);
    ((void (*)(uint64_t, char *, uint64_t))v89)(v48 + v67[10], &v49[v67[10]], v98);
    ((void (*)(uint64_t, char *, uint64_t))v88)(v48 + v67[11], &v49[v67[11]], v97);
    ((void (*)(uint64_t, char *, uint64_t))v87)(v48 + *(int *)(v26 + 20), &v49[*(int *)(v26 + 20)], v95);
    uint64_t v68 = *(int *)(v26 + 24);
    uint64_t v69 = (void *)(v48 + v68);
    uint64_t v70 = &v49[v68];
    int v71 = v96(v48 + v68, 1, v102);
    int v72 = v96((uint64_t)v70, 1, v102);
    if (v71)
    {
      if (!v72)
      {
        uint64_t v73 = sub_20A8C2BC0();
        uint64_t v74 = *(void *)(v73 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v70, 3, v73))
        {
          uint64_t v75 = v101;
          memcpy(v69, v70, *(void *)(v101 + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v74 + 32))(v69, v70, v73);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v74 + 56))(v69, 0, 3, v73);
          uint64_t v75 = v101;
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(v69, 0, 1, v102);
        return v103;
      }
    }
    else
    {
      if (!v72)
      {
        uint64_t v81 = sub_20A8C2BC0();
        uint64_t v82 = *(void *)(v81 - 8);
        uint64_t v83 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v82 + 48);
        int v84 = v83(v69, 3, v81);
        int v85 = v83(v70, 3, v81);
        if (v84)
        {
          if (!v85)
          {
            (*(void (**)(void *, char *, uint64_t))(v82 + 32))(v69, v70, v81);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v82 + 56))(v69, 0, 3, v81);
            return v103;
          }
        }
        else
        {
          if (!v85)
          {
            (*(void (**)(void *, char *, uint64_t))(v82 + 40))(v69, v70, v81);
            return v103;
          }
          (*(void (**)(void *, uint64_t))(v82 + 8))(v69, v81);
        }
        size_t v61 = *(void *)(v101 + 64);
        goto LABEL_35;
      }
      sub_20A4BEDFC((uint64_t)v69, (uint64_t (*)(void))type metadata accessor for QuoteSummaryTimeRange);
    }
    sub_20A4BEC60(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    size_t v61 = *(void *)(*(void *)(v79 - 8) + 64);
LABEL_35:
    double v62 = v69;
    uint64_t v63 = v70;
    goto LABEL_21;
  }
  if (v53)
  {
LABEL_20:
    sub_20A4BEC60(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
    size_t v61 = *(void *)(*(void *)(v60 - 8) + 64);
    double v62 = (void *)v48;
    uint64_t v63 = v49;
LABEL_21:
    memcpy(v62, v63, v61);
    return v103;
  }
  *(void *)uint64_t v48 = *(void *)v49;
  *(unsigned char *)(v48 + 8) = v49[8];
  *(void *)(v48 + 16) = *((void *)v49 + 2);
  *(unsigned char *)(v48 + 24) = v49[24];
  *(void *)(v48 + 32) = *((void *)v49 + 4);
  *(unsigned char *)(v48 + 40) = v49[40];
  long long v54 = *((_OWORD *)v49 + 4);
  *(_OWORD *)(v48 + 48) = *((_OWORD *)v49 + 3);
  *(_OWORD *)(v48 + 64) = v54;
  uint64_t v55 = v100;
  (*(void (**)(uint64_t, char *, uint64_t))(v94 + 32))(v48 + v100[9], &v49[v100[9]], v99);
  (*(void (**)(uint64_t, char *, uint64_t))(v93 + 32))(v48 + v55[10], &v49[v55[10]], v98);
  (*(void (**)(uint64_t, char *, uint64_t))(v92 + 32))(v48 + v55[11], &v49[v55[11]], v97);
  (*(void (**)(uint64_t, char *, uint64_t))(v91 + 32))(v48 + *(int *)(v26 + 20), &v49[*(int *)(v26 + 20)], v95);
  uint64_t v56 = *(int *)(v26 + 24);
  uint64_t v57 = (void *)(v48 + v56);
  uint64_t v58 = &v49[v56];
  if (v96((uint64_t)&v49[v56], 1, v102))
  {
    sub_20A4BEC60(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    uint64_t v76 = sub_20A8C2BC0();
    uint64_t v77 = *(void *)(v76 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v58, 3, v76))
    {
      uint64_t v78 = v101;
      memcpy(v57, v58, *(void *)(v101 + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v77 + 32))(v57, v58, v76);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v77 + 56))(v57, 0, 3, v76);
      uint64_t v78 = v101;
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v78 + 56))(v57, 0, 1, v102);
  }
  uint64_t v64 = v103;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v48, 0, 1, v26);
  return v64;
}

uint64_t sub_20A4C21A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A4C21B4);
}

uint64_t sub_20A4C21B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for QuoteSummaryViewModel();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_20A4C2264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A4C2278);
}

uint64_t sub_20A4C2278(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for QuoteSummaryViewModel();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_20A4C2320()
{
  uint64_t result = type metadata accessor for QuoteSummaryViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockSearchRelayoutBlueprintModifier()
{
  return &type metadata for StockSearchRelayoutBlueprintModifier;
}

uint64_t sub_20A4C23C8(uint64_t a1, void (*a2)(char *))
{
  sub_20A4C26C8(0, (unint64_t *)&qword_26AC82498, MEMORY[0x263F7D950]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  sub_20A4A2428();
  uint64_t v10 = &v8[*(int *)(v9 + 48)];
  sub_20A4C26C8(0, (unint64_t *)&qword_26AC6AD38, MEMORY[0x263F7E0A8]);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v8, a1, v11);
  uint64_t v12 = *MEMORY[0x263F7D528];
  uint64_t v13 = sub_20A8C8B80();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v10, v12, v13);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F7D938], v5);
  a2(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20A4C259C()
{
  unint64_t result = qword_26763B558;
  if (!qword_26763B558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B558);
  }
  return result;
}

uint64_t sub_20A4C25F0()
{
  return sub_20A4C2680(&qword_26AC78AC0, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
}

uint64_t sub_20A4C2638()
{
  return sub_20A4C2680(&qword_26AC6F3E0, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
}

uint64_t sub_20A4C2680(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A4C26C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for StockSearchSectionDescriptor();
    v8[1] = type metadata accessor for StockSearchModel();
    long long v8[2] = sub_20A4C2680(&qword_26AC78AC0, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
    void v8[3] = sub_20A4C2680(&qword_26AC6F3E0, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A4C27BC()
{
  sub_20A8CCAC0();
  sub_20A8CCAB0();
  sub_20A44E108();
  sub_20A8CBB00();
  if (v3)
  {
    sub_20A8CC520();
    swift_dynamicCast();
  }
  else
  {
    sub_20A44349C((uint64_t)v2);
  }
  type metadata accessor for ForYouFeedServiceConfig();
  sub_20A4C28CC(&qword_26AC74890, (void (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig);
  uint64_t v0 = sub_20A8CCAA0();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_20A4C28CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t PreBuyFlowRouteModel.identifier.getter()
{
  id v1 = objc_msgSend(*v0, sel_itemID);
  if (!v1) {
    return 0xD000000000000014;
  }
  id v2 = v1;
  uint64_t v3 = sub_20A8CE280();

  return v3;
}

unint64_t sub_20A4C298C()
{
  id v1 = objc_msgSend(*v0, sel_itemID);
  if (!v1) {
    return 0xD000000000000014;
  }
  id v2 = v1;
  uint64_t v3 = sub_20A8CE280();

  return v3;
}

void **initializeBufferWithCopyOfBuffer for PreBuyFlowRouteModel(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C78E0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (char *)v7 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_20A8C79F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v7;
}

uint64_t destroy for PreBuyFlowRouteModel(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_20A8C78E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  unint64_t v6 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_20A8C79F0();
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

void **initializeWithCopy for PreBuyFlowRouteModel(void **a1, void **a2, uint64_t a3)
{
  unint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C78E0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  id v12 = v6;
  v11(v8, v9, v10);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_20A8C79F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

void **assignWithCopy for PreBuyFlowRouteModel(void **a1, void **a2, uint64_t a3)
{
  unint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_20A8C78E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_20A8C79F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

void *initializeWithTake for PreBuyFlowRouteModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C78E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_20A8C79F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

void **assignWithTake for PreBuyFlowRouteModel(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C78E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_20A8C79F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for PreBuyFlowRouteModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A4C2F8C);
}

uint64_t sub_20A4C2F8C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C78E0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_20A8C79F0();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for PreBuyFlowRouteModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A4C30CC);
}

void *sub_20A4C30CC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C78E0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_20A8C79F0();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for PreBuyFlowRouteModel()
{
  uint64_t result = qword_26AC71AE0;
  if (!qword_26AC71AE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A4C3244()
{
  uint64_t result = sub_20A8C78E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20A8C79F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_20A4C331C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v56 = a2;
  uint64_t v57 = a3;
  uint64_t v50 = sub_20A8C59F0();
  uint64_t v60 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v48 = (uint64_t *)((char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for StockFeedPrewarmBlueprintModifier();
  uint64_t v54 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v54 + 64);
  uint64_t v7 = v5 - 8;
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v59 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + *(int *)(v8 + 28)), *(void *)(v3 + *(int *)(v8 + 28) + 24));
  sub_20A4C7300(0, (unint64_t *)&qword_26AC7FEA0, MEMORY[0x263F7AF08], MEMORY[0x263F8E0F8]);
  uint64_t v9 = sub_20A8C3F00();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 16))(v12 + v11, v3, v9);
  sub_20A8C39E0();
  swift_bridgeObjectRelease();
  uint64_t v55 = type metadata accessor for StockFeedPrewarmBlueprintModifier;
  uint64_t v13 = v59;
  sub_20A4C7DF4(v3, v59, (uint64_t (*)(void))type metadata accessor for StockFeedPrewarmBlueprintModifier);
  uint64_t v14 = *(unsigned __int8 *)(v54 + 80);
  uint64_t v51 = ((v14 + 16) & ~v14) + v6;
  uint64_t v15 = (v14 + 16) & ~v14;
  uint64_t v53 = v14 | 7;
  uint64_t v54 = v15;
  uint64_t v16 = swift_allocObject();
  int v52 = type metadata accessor for StockFeedPrewarmBlueprintModifier;
  sub_20A4C7F4C(v13, v16 + v15, (uint64_t (*)(void))type metadata accessor for StockFeedPrewarmBlueprintModifier);
  uint64_t v17 = (void *)sub_20A8C6450();
  sub_20A42C470(0);
  uint64_t v49 = sub_20A8C6500();
  swift_release();
  swift_release();

  uint64_t v58 = v7;
  uint64_t v18 = *(int *)(v7 + 32);
  uint64_t v42 = v3;
  __swift_project_boxed_opaque_existential_1((void *)(v42 + v18), *(void *)(v42 + v18 + 24));
  sub_20A8C3EC0();
  uint64_t v46 = v3 + *(int *)(v7 + 44);
  sub_20A8C3030();
  uint64_t v19 = v48;
  void *v48 = v20;
  unsigned int v45 = *MEMORY[0x263F7CD68];
  uint64_t v21 = v60;
  uint64_t v44 = *(void (**)(void *))(v60 + 104);
  uint64_t v22 = v50;
  v44(v19);
  uint64_t v47 = sub_20A8C37C0();
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void (**)(void *, uint64_t))(v21 + 8);
  uint64_t v60 = v21 + 8;
  uint64_t v43 = v23;
  v23(v19, v22);
  uint64_t v24 = v42;
  uint64_t v41 = *(void *)(v42 + *(int *)(v58 + 64) + 8);
  swift_getObjectType();
  sub_20A8C3EC0();
  sub_20A8C2FD0();
  *uint64_t v19 = v25;
  ((void (*)(void *, void, uint64_t))v44)(v19, v45, v22);
  uint64_t v26 = sub_20A7A9D00();
  swift_bridgeObjectRelease();
  v43(v19, v22);
  __swift_project_boxed_opaque_existential_1((void *)(v24 + *(int *)(v58 + 36)), *(void *)(v24 + *(int *)(v58 + 36) + 24));
  sub_20A8C35F0();
  uint64_t v27 = (void *)sub_20A8C6450();
  sub_20A4C76AC(0);
  sub_20A8C64F0();
  swift_release();

  uint64_t v28 = (void *)sub_20A8C6450();
  uint64_t v29 = sub_20A8C65B0();
  swift_release();

  uint64_t v61 = v49;
  uint64_t v62 = v47;
  uint64_t v63 = v26;
  uint64_t v64 = v29;
  sub_20A4C7710();
  sub_20A8C6670();
  uint64_t v30 = v59;
  sub_20A4C7DF4(v24, v59, (uint64_t (*)(void))v55);
  unint64_t v31 = (v51 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = swift_allocObject();
  sub_20A4C7F4C(v30, v32 + v54, (uint64_t (*)(void))v52);
  uint64_t v33 = (void *)(v32 + v31);
  uint64_t v35 = v56;
  uint64_t v34 = v57;
  *uint64_t v33 = v56;
  v33[1] = v34;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_20A4C7ABC;
  *(void *)(v36 + 24) = v32;
  uint64_t v37 = v34;
  swift_retain();
  uint64_t v38 = (void *)sub_20A8C6450();
  sub_20A8C6500();
  swift_release();
  swift_release();

  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v35;
  *(void *)(v39 + 24) = v37;
  swift_retain();
  uint64_t v40 = (void *)sub_20A8C6450();
  sub_20A8C6550();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_20A4C3A28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_20A8C2EE0();
  uint64_t v3 = sub_20A8C3EC0();
  if (*(void *)(v2 + 16) && (unint64_t v5 = sub_20A4D1B24(v3, v4), (v6 & 1) != 0))
  {
    unint64_t v7 = v5;
    uint64_t v8 = *(void *)(v2 + 56);
    uint64_t v9 = sub_20A8C3E10();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))(a1, v8 + *(void *)(v10 + 72) * v7, v9);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
  }
  else
  {
    uint64_t v11 = sub_20A8C3E10();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A4C3B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *), uint64_t a7)
{
  uint64_t v150 = a7;
  uint64_t v151 = a6;
  uint64_t v172 = a5;
  uint64_t v152 = a4;
  uint64_t v173 = a3;
  uint64_t v157 = a2;
  uint64_t v166 = a1;
  sub_20A4C7CA0(0, &qword_26AC6A420, MEMORY[0x263F7D950]);
  uint64_t v149 = v7;
  uint64_t v148 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unsigned int v147 = (char *)&v130 - v8;
  uint64_t v146 = sub_20A8C2830();
  uint64_t v133 = *(void *)(v146 - 8);
  MEMORY[0x270FA5388](v146);
  uint64_t v132 = (char *)&v130 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4C7C24(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v142 = (uint64_t)&v130 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = type metadata accessor for StockEarningsModel();
  uint64_t v140 = *(void *)(v141 - 8);
  MEMORY[0x270FA5388](v141);
  uint64_t v131 = (uint64_t)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v169);
  uint64_t v145 = (uint64_t)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C4A4();
  uint64_t v168 = v14;
  uint64_t v170 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  long long v154 = (char *)&v130 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C84C();
  MEMORY[0x270FA5388](v16 - 8);
  CGFloat v165 = (char *)&v130 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v167);
  CGFloat v177 = (char *)&v130 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4C7CA0(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  uint64_t v20 = v19;
  uint64_t v160 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  CGFloat v159 = (char *)&v130 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  CGFloat v144 = (char *)&v130 - v23;
  MEMORY[0x270FA5388](v24);
  CGFloat v158 = (char *)&v130 - v25;
  unsigned int v138 = (void *)sub_20A8C3410();
  uint64_t v135 = *(v138 - 1);
  MEMORY[0x270FA5388](v138);
  uint64_t v155 = (uint64_t)&v130 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4C77A4(0);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v29 = (char *)&v130 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C470(0);
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v32 = (char *)&v130 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_20A8C3F00();
  uint64_t v134 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v130 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  uint64_t v38 = (char *)&v130 - v37;
  uint64_t v39 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x270FA5388](v39 - 8);
  uint64_t v156 = (uint64_t)&v130 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A46CC8C();
  MEMORY[0x270FA5388](v41 - 8);
  sub_20A4C7CA0(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  uint64_t v164 = v42;
  uint64_t v143 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v44 = (char *)&v130 - v43;
  uint64_t v45 = sub_20A4C7D94(&qword_26AC69EF8);
  uint64_t v46 = sub_20A4C7D94(&qword_26AC69EF0);
  uint64_t v47 = (void *)MEMORY[0x263F8EE78];
  uint64_t v171 = v20;
  MEMORY[0x21051E240](MEMORY[0x263F8EE78], v20, v45, v46);
  uint64_t v48 = sub_20A4C7C58(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
  uint64_t v49 = sub_20A4C7C58(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
  CGFloat v163 = v44;
  uint64_t v50 = v48;
  uint64_t v51 = v134;
  uint64_t v52 = v152;
  uint64_t v153 = v49;
  sub_20A8CBB20();
  uint64_t v53 = *(void (**)(char *, unint64_t, void (*)(void, void)))(v51 + 16);
  uint64_t v136 = v38;
  uint64_t v54 = v38;
  uint64_t v55 = v172;
  uint64_t v175 = v51 + 16;
  CGFloat v176 = (void (*)(void, void))v33;
  CGFloat v174 = v53;
  v53(v54, v172, (void (*)(void, void))v33);
  uint64_t v137 = v32;
  sub_20A4C7DF4(v166, (uint64_t)v32, (uint64_t (*)(void))sub_20A42C470);
  double v139 = v29;
  sub_20A4C7DF4(v173, (uint64_t)v29, (uint64_t (*)(void))sub_20A4C77A4);
  CGFloat v161 = (int *)type metadata accessor for StockFeedPrewarmBlueprintModifier();
  (*(void (**)(uint64_t, uint64_t, void *))(v135 + 16))(v155, v55 + v161[8], v138);
  int64_t v56 = *(void *)(v52 + 16);
  uint64_t v162 = v50;
  if (v56)
  {
    CGFloat v178 = v47;
    sub_20A68C494(0, v56, 0);
    unint64_t v57 = v52 + ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80));
    uint64_t v173 = *(void *)(v51 + 72);
    uint64_t v58 = (void (**)(char *, void))(v51 + 8);
    do
    {
      uint64_t v59 = v176;
      v174(v35, v57, v176);
      uint64_t v60 = sub_20A8C3EC0();
      uint64_t v62 = v61;
      (*v58)(v35, v59);
      uint64_t v47 = v178;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C494(0, v47[2] + 1, 1);
        uint64_t v47 = v178;
      }
      unint64_t v64 = v47[2];
      unint64_t v63 = v47[3];
      if (v64 >= v63 >> 1)
      {
        sub_20A68C494(v63 > 1, v64 + 1, 1);
        uint64_t v47 = v178;
      }
      _OWORD v47[2] = v64 + 1;
      uint64_t v65 = &v47[2 * v64];
      v65[4] = v60;
      uint64_t v65[5] = v62;
      v57 += v173;
      --v56;
      uint64_t v66 = (uint64_t)v177;
    }
    while (v56);
  }
  else
  {
    uint64_t v66 = (uint64_t)v177;
  }
  uint64_t v67 = v172;
  uint64_t v68 = sub_20A8C3EC0();
  char v70 = sub_20A597330(v68, v69, v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v71 = (void *)(v67 + v161[13]);
  uint64_t v72 = v71[3];
  unsigned int v138 = v71;
  __swift_project_boxed_opaque_existential_1(v71, v72);
  int v73 = sub_20A8C3870() & 1;
  if (v70) {
    int v74 = 0;
  }
  else {
    int v74 = 2;
  }
  uint64_t v75 = v156;
  sub_20A6FC190((uint64_t)v136, (uint64_t)v137, (uint64_t)v139, v155, v74, v73, v156);
  sub_20A4C7DF4(v75, v66, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
  swift_storeEnumTagMultiPayload();
  uint64_t v76 = sub_20A4C7C58(&qword_26AC69D78, (void (*)(uint64_t))sub_20A42C4A4);
  uint64_t v77 = sub_20A4C7C58(&qword_26AC69D70, (void (*)(uint64_t))sub_20A42C4A4);
  uint64_t v78 = v168;
  uint64_t v152 = v76;
  uint64_t v155 = v77;
  MEMORY[0x21051E240](MEMORY[0x263F8EE78], v168, v76);
  sub_20A8C8810();
  uint64_t v79 = v75;
  uint64_t v80 = v145;
  sub_20A4C7DF4(v79, v145, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
  swift_storeEnumTagMultiPayload();
  uint64_t v81 = v154;
  sub_20A8C8320();
  sub_20A8C8880();
  uint64_t v82 = v170 + 8;
  uint64_t v173 = *(void *)(v170 + 8);
  ((void (*)(char *, uint64_t))v173)(v81, v78);
  sub_20A8CBA80();
  uint64_t v83 = v161;
  __swift_project_boxed_opaque_existential_1((void *)(v67 + v161[16]), *(void *)(v67 + v161[16] + 24));
  uint64_t v84 = v142;
  sub_20A444CF0(v67, v166, v157, (unsigned int (*)(char *, uint64_t, uint64_t))(v67 + v83[11]), v67 + v83[12], v142);
  int v85 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v140 + 48))(v84, 1, v141);
  uint64_t v170 = v82;
  if (v85 == 1)
  {
    sub_20A4C7EEC(v84, (uint64_t (*)(void))sub_20A4C7C24);
    uint64_t v86 = v152;
    uint64_t v87 = v155;
  }
  else
  {
    uint64_t v88 = v84;
    uint64_t v89 = v131;
    sub_20A4C7F4C(v88, v131, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
    swift_storeEnumTagMultiPayload();
    uint64_t v90 = v168;
    uint64_t v86 = v152;
    MEMORY[0x21051E240](MEMORY[0x263F8EE78], v168, v152, v155);
    uint64_t v91 = v144;
    sub_20A8C8810();
    sub_20A4C7DF4(v89, v80, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
    swift_storeEnumTagMultiPayload();
    sub_20A8C8320();
    uint64_t v92 = v171;
    sub_20A8C8880();
    ((void (*)(char *, uint64_t))v173)(v81, v90);
    sub_20A8CBA80();
    uint64_t v87 = v155;
    (*(void (**)(char *, uint64_t))(v160 + 8))(v91, v92);
    sub_20A4C7EEC(v89, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v93 = v168;
  MEMORY[0x21051E240](MEMORY[0x263F8EE78], v168, v86, v87);
  sub_20A8C8810();
  uint64_t v94 = v176;
  uint64_t v95 = (void (*)(uint64_t, uint64_t, void (*)(void, void)))v174;
  v174((char *)v80, v172, v176);
  swift_storeEnumTagMultiPayload();
  sub_20A8C8320();
  sub_20A8C8880();
  ((void (*)(char *, uint64_t))v173)(v81, v93);
  sub_20A42C53C();
  uint64_t v97 = v81;
  uint64_t v98 = v80 + *(int *)(v96 + 48);
  uint64_t v99 = v80 + *(int *)(v96 + 64);
  v95(v80, v172, v94);
  sub_20A4C7DF4(v166, v98, (uint64_t (*)(void))sub_20A42C470);
  sub_20A4C7DF4(v157, v99, (uint64_t (*)(void))sub_20A42C43C);
  swift_storeEnumTagMultiPayload();
  sub_20A8C8320();
  sub_20A8C8880();
  uint64_t v100 = v168;
  ((void (*)(char *, uint64_t))v173)(v97, v168);
  uint64_t v102 = v163;
  uint64_t v101 = v164;
  sub_20A8CBA80();
  uint64_t v103 = v172;
  double v104 = (void *)v80;
  __swift_project_boxed_opaque_existential_1(v138, v138[3]);
  if ((sub_20A8C3850() & 1) == 0)
  {
    sub_20A42C980();
    uint64_t v106 = v177;
    uint64_t v107 = &v177[*(int *)(v105 + 64)];
    double v108 = v132;
    sub_20A8C2820();
    uint64_t v109 = sub_20A8C2810();
    uint64_t v111 = v110;
    CGFloat v176 = *(void (**)(void, void))(v133 + 8);
    v176(v108, v146);
    *(void *)uint64_t v106 = v109;
    *((void *)v106 + 1) = v111;
    v106[16] = *(unsigned char *)(v103 + v161[10]);
    uint64_t v112 = sub_20A8CC470();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56))(v107, 1, 1, v112);
    swift_storeEnumTagMultiPayload();
    MEMORY[0x21051E240](MEMORY[0x263F8EE78], v100, v152, v155);
    double v113 = v144;
    sub_20A8C8810();
    sub_20A8C2820();
    uint64_t v114 = sub_20A8C2810();
    uint64_t v116 = v115;
    uint64_t v101 = v164;
    uint64_t v117 = v171;
    v176(v108, v146);
    void *v104 = v114;
    v104[1] = v116;
    v104[2] = 0;
    swift_storeEnumTagMultiPayload();
    uint64_t v118 = v154;
    uint64_t v102 = v163;
    sub_20A8C8320();
    sub_20A8C8880();
    ((void (*)(char *, uint64_t))v173)(v118, v168);
    sub_20A8CBA80();
    (*(void (**)(char *, uint64_t))(v160 + 8))(v113, v117);
  }
  sub_20A4C7E5C();
  uint64_t v120 = v147;
  uint64_t v121 = &v147[*(int *)(v119 + 48)];
  uint64_t v122 = v143;
  (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v147, v102, v101);
  uint64_t v123 = *MEMORY[0x263F7D528];
  uint64_t v124 = sub_20A8C8B80();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v124 - 8) + 104))(v121, v123, v124);
  uint64_t v125 = v148;
  uint64_t v126 = v149;
  (*(void (**)(char *, void, uint64_t))(v148 + 104))(v120, *MEMORY[0x263F7D938], v149);
  v151(v120);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v120, v126);
  uint64_t v127 = *(void (**)(char *, uint64_t))(v160 + 8);
  uint64_t v128 = v171;
  v127(v159, v171);
  v127(v158, v128);
  sub_20A4C7EEC(v156, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
  return (*(uint64_t (**)(char *, uint64_t))(v122 + 8))(v102, v101);
}

uint64_t sub_20A4C4F54(void *a1, void (*a2)(char *))
{
  sub_20A4C7CA0(0, &qword_26AC6A420, MEMORY[0x263F7D950]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  double v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v12 - v8;
  *(uint64_t *)((char *)&v12 - v8) = (uint64_t)a1;
  (*(void (**)(char *, void, uint64_t, double))(v6 + 104))((char *)&v12 - v8, *MEMORY[0x263F7D930], v5, v7);
  id v10 = a1;
  a2(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_20A4C5078()
{
  return sub_20A8C6580();
}

uint64_t sub_20A4C5108()
{
  return sub_20A8C6580();
}

uint64_t sub_20A4C5194()
{
  return 0x286D726177657250;
}

void *sub_20A4C51FC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (void *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20A8C3F00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    long long v9 = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_OWORD *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
    uint64_t v10 = a3[6];
    long long v11 = *(_OWORD *)((char *)a2 + v10 + 24);
    *(_OWORD *)((char *)a1 + v10 + 24) = v11;
    (**(void (***)(void))(v11 - 8))();
    uint64_t v12 = a3[7];
    long long v13 = *(_OWORD *)((char *)a2 + v12 + 24);
    *(_OWORD *)((char *)a1 + v12 + 24) = v13;
    (**(void (***)(void))(v13 - 8))();
    uint64_t v14 = a3[8];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_20A8C3410();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = a3[9];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_20A8C3190();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    uint64_t v22 = a3[11];
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = sub_20A8C2800();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    if (v27(v24, 1, v25))
    {
      sub_20A4C7300(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    uint64_t v30 = a3[12];
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    if (v27((char *)a2 + v30, 1, v25))
    {
      sub_20A4C7300(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v31, v32, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v31, 0, 1, v25);
    }
    uint64_t v34 = a3[13];
    long long v35 = *(_OWORD *)((char *)a2 + v34 + 24);
    *(_OWORD *)((char *)a1 + v34 + 24) = v35;
    (**(void (***)(void))(v35 - 8))();
    uint64_t v36 = a3[15];
    *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    uint64_t v39 = sub_20A8C2BC0();
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
    swift_unknownObjectRetain();
    v40(v37, v38, v39);
    uint64_t v41 = a3[16];
    long long v42 = *(_OWORD *)((char *)a2 + v41 + 24);
    *(_OWORD *)((char *)a1 + v41 + 24) = v42;
    (**(void (***)(void))(v42 - 8))();
  }
  return a1;
}

uint64_t sub_20A4C5734(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[5]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[6]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[7]);
  uint64_t v5 = a1 + a2[8];
  uint64_t v6 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[9];
  uint64_t v8 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[11];
  uint64_t v10 = sub_20A8C2800();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v12(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v13 = a1 + a2[12];
  if (!v12(v13, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
  }
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[13]);
  swift_unknownObjectRelease();
  uint64_t v14 = a1 + a2[15];
  uint64_t v15 = sub_20A8C2BC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = a1 + a2[16];

  return __swift_destroy_boxed_opaque_existential_1(v16);
}

uint64_t sub_20A4C5978(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  long long v8 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  uint64_t v9 = a3[6];
  long long v10 = *(_OWORD *)(a2 + v9 + 24);
  *(_OWORD *)(a1 + v9 + 24) = v10;
  (**(void (***)(void))(v10 - 8))();
  uint64_t v11 = a3[7];
  long long v12 = *(_OWORD *)(a2 + v11 + 24);
  *(_OWORD *)(a1 + v11 + 24) = v12;
  (**(void (***)(void))(v12 - 8))();
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  uint64_t v21 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (const void *)(a2 + v21);
  uint64_t v24 = sub_20A8C2800();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
  if (v26(v23, 1, v24))
  {
    sub_20A4C7300(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  uint64_t v28 = a3[12];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (const void *)(a2 + v28);
  if (v26((const void *)(a2 + v28), 1, v24))
  {
    sub_20A4C7300(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v29, v30, v24);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v29, 0, 1, v24);
  }
  uint64_t v32 = a3[13];
  long long v33 = *(_OWORD *)(a2 + v32 + 24);
  *(_OWORD *)(a1 + v32 + 24) = v33;
  (**(void (***)(void))(v33 - 8))();
  uint64_t v34 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = sub_20A8C2BC0();
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16);
  swift_unknownObjectRetain();
  v38(v35, v36, v37);
  uint64_t v39 = a3[16];
  long long v40 = *(_OWORD *)(a2 + v39 + 24);
  *(_OWORD *)(a1 + v39 + 24) = v40;
  (**(void (***)(void))(v40 - 8))();
  return a1;
}

uint64_t sub_20A4C5E60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[5]), (uint64_t *)(a2 + a3[5]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  uint64_t v7 = a3[8];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[9];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v15 = a3[11];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = sub_20A8C2800();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    sub_20A4C7300(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_7:
  uint64_t v24 = a3[12];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  int v27 = v20((void *)(a1 + v24), 1, v18);
  int v28 = v20(v26, 1, v18);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v25, v26, v18);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v25, v18);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    sub_20A4C7300(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v25, v26, v18);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
LABEL_13:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[13]), (uint64_t *)(a2 + a3[13]));
  uint64_t v30 = a3[14];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  uint64_t v33 = v32[1];
  *uint64_t v31 = *v32;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v31[1] = v33;
  uint64_t v34 = a3[15];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = sub_20A8C2BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 24))(v35, v36, v37);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[16]), (uint64_t *)(a2 + a3[16]));
  return a1;
}

uint64_t sub_20A4C62CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = (long long *)(a2 + v15);
  long long v19 = *v18;
  long long v20 = v18[1];
  *(void *)(v17 + 32) = *((void *)v18 + 4);
  uint64_t v21 = a1 + v16;
  uint64_t v22 = a2 + v16;
  *(_OWORD *)uint64_t v17 = v19;
  *(_OWORD *)(v17 + 16) = v20;
  uint64_t v23 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = a3[9];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  uint64_t v28 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (const void *)(a2 + v28);
  uint64_t v31 = sub_20A8C2800();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48);
  if (v33(v30, 1, v31))
  {
    sub_20A4C7300(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v29, v30, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v32 + 32))(v29, v30, v31);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  uint64_t v35 = a3[12];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (const void *)(a2 + v35);
  if (v33((const void *)(a2 + v35), 1, v31))
  {
    sub_20A4C7300(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v32 + 32))(v36, v37, v31);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v36, 0, 1, v31);
  }
  uint64_t v39 = a3[13];
  uint64_t v40 = a3[14];
  uint64_t v41 = a1 + v39;
  uint64_t v42 = a2 + v39;
  long long v43 = *(_OWORD *)(v42 + 16);
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  *(_OWORD *)(v41 + 16) = v43;
  long long v44 = *(_OWORD *)(a2 + v40);
  *(void *)(v41 + 32) = *(void *)(v42 + 32);
  *(_OWORD *)(a1 + v40) = v44;
  uint64_t v45 = a3[15];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  uint64_t v48 = sub_20A8C2BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
  uint64_t v49 = a3[16];
  uint64_t v50 = a1 + v49;
  uint64_t v51 = a2 + v49;
  long long v52 = *(_OWORD *)(v51 + 16);
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *(_OWORD *)(v50 + 16) = v52;
  *(void *)(v50 + 32) = *(void *)(v51 + 32);
  return a1;
}

uint64_t sub_20A4C668C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  __swift_destroy_boxed_opaque_existential_1(a1 + v7);
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  __swift_destroy_boxed_opaque_existential_1(a1 + v11);
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  __swift_destroy_boxed_opaque_existential_1(a1 + v15);
  long long v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  uint64_t v30 = sub_20A8C2800();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
  int v33 = v32(v28, 1, v30);
  int v34 = v32(v29, 1, v30);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v34)
  {
    (*(void (**)(void *, uint64_t))(v31 + 8))(v28, v30);
LABEL_6:
    sub_20A4C7300(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v31 + 40))(v28, v29, v30);
LABEL_7:
  uint64_t v36 = a3[12];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (void *)(a2 + v36);
  int v39 = v32((void *)(a1 + v36), 1, v30);
  int v40 = v32(v38, 1, v30);
  if (!v39)
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v31 + 40))(v37, v38, v30);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v31 + 8))(v37, v30);
    goto LABEL_12;
  }
  if (v40)
  {
LABEL_12:
    sub_20A4C7300(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v31 + 32))(v37, v38, v30);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v37, 0, 1, v30);
LABEL_13:
  uint64_t v42 = a3[13];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  __swift_destroy_boxed_opaque_existential_1(a1 + v42);
  long long v45 = *(_OWORD *)(v44 + 16);
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
  *(_OWORD *)(v43 + 16) = v45;
  *(void *)(v43 + 32) = *(void *)(v44 + 32);
  uint64_t v46 = a3[14];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (void *)(a2 + v46);
  uint64_t v49 = v48[1];
  *uint64_t v47 = *v48;
  swift_unknownObjectRelease();
  v47[1] = v49;
  uint64_t v50 = a3[15];
  uint64_t v51 = a1 + v50;
  uint64_t v52 = a2 + v50;
  uint64_t v53 = sub_20A8C2BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 40))(v51, v52, v53);
  uint64_t v54 = a3[16];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  __swift_destroy_boxed_opaque_existential_1(a1 + v54);
  long long v57 = *(_OWORD *)(v56 + 16);
  *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
  *(_OWORD *)(v55 + 16) = v57;
  *(void *)(v55 + 32) = *(void *)(v56 + 32);
  return a1;
}

uint64_t sub_20A4C6B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A4C6B64);
}

uint64_t sub_20A4C6B64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3F00();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_14:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5] + 24);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  uint64_t v13 = sub_20A8C3410();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a3[8];
LABEL_13:
    uint64_t v10 = a1 + v15;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_14;
  }
  uint64_t v16 = sub_20A8C3190();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a3[9];
    goto LABEL_13;
  }
  sub_20A4C7300(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a3[11];
    goto LABEL_13;
  }
  uint64_t v18 = sub_20A8C2BC0();
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[15];

  return v19(v21, a2, v20);
}

uint64_t sub_20A4C6DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A4C6DC4);
}

uint64_t sub_20A4C6DC4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_20A8C3F00();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5] + 24) = (a2 - 1);
    return result;
  }
  uint64_t v13 = sub_20A8C3410();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[8];
LABEL_11:
    uint64_t v12 = a1 + v15;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  uint64_t v16 = sub_20A8C3190();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_11;
  }
  sub_20A4C7300(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_11;
  }
  uint64_t v18 = sub_20A8C2BC0();
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[15];

  return v19(v21, a2, a2, v20);
}

uint64_t type metadata accessor for StockFeedPrewarmBlueprintModifier()
{
  uint64_t result = qword_26AC7C0A0;
  if (!qword_26AC7C0A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A4C705C()
{
  sub_20A8C3F00();
  if (v0 <= 0x3F)
  {
    sub_20A8C3410();
    if (v1 <= 0x3F)
    {
      sub_20A8C3190();
      if (v2 <= 0x3F)
      {
        sub_20A4C7300(319, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
        if (v3 <= 0x3F)
        {
          sub_20A8C2BC0();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t sub_20A4C7228()
{
  return sub_20A4C7C58(&qword_26AC7C098, (void (*)(uint64_t))type metadata accessor for StockFeedPrewarmBlueprintModifier);
}

uint64_t sub_20A4C7270()
{
  return sub_20A4C7C58(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
}

uint64_t sub_20A4C72B8()
{
  return sub_20A4C7C58(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
}

void sub_20A4C7300(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A4C7364()
{
  unint64_t v1 = (int *)type metadata accessor for StockFeedPrewarmBlueprintModifier();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[5]);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[6]);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[7]);
  uint64_t v5 = v3 + v1[8];
  uint64_t v6 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v3 + v1[9];
  uint64_t v8 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v3 + v1[11];
  uint64_t v10 = sub_20A8C2800();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v12(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v13 = v3 + v1[12];
  if (!v12(v13, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
  }
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[13]);
  swift_unknownObjectRelease();
  uint64_t v14 = v3 + v1[15];
  uint64_t v15 = sub_20A8C2BC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[16]);

  return swift_deallocObject();
}

uint64_t sub_20A4C7630@<X0>(uint64_t a1@<X8>)
{
  return sub_20A4C3A28(a1);
}

void sub_20A4C76AC(uint64_t a1)
{
}

uint64_t sub_20A4C76E0()
{
  return sub_20A8C6620();
}

void sub_20A4C7710()
{
  if (!qword_26AC68FB8)
  {
    sub_20A42C470(255);
    sub_20A42C43C(255);
    sub_20A4C77A4(255);
    sub_20A4C76AC(255);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_26AC68FB8);
    }
  }
}

void sub_20A4C77A4(uint64_t a1)
{
}

uint64_t sub_20A4C77D8()
{
  uint64_t v1 = (int *)type metadata accessor for StockFeedPrewarmBlueprintModifier();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[5]);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[6]);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[7]);
  uint64_t v5 = v3 + v1[8];
  uint64_t v6 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v3 + v1[9];
  uint64_t v8 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v3 + v1[11];
  uint64_t v10 = sub_20A8C2800();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v12(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v13 = v3 + v1[12];
  if (!v12(v13, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
  }
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[13]);
  swift_unknownObjectRelease();
  uint64_t v14 = v3 + v1[15];
  uint64_t v15 = sub_20A8C2BC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[16]);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A4C7ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for StockFeedPrewarmBlueprintModifier() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = v4 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = *(void (**)(char *))v12;
  uint64_t v14 = *(void *)(v12 + 8);

  return sub_20A4C3B98(a1, a2, a3, a4, v11, v13, v14);
}

uint64_t sub_20A4C7B84()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A4C7BBC(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v1 + 16);
  sub_20A4C7710();
  return v3(a1, a1 + v4[12], a1 + v4[16], *(void *)(a1 + v4[20]));
}

uint64_t sub_20A4C7C1C(void *a1)
{
  return sub_20A4C4F54(a1, *(void (**)(char *))(v1 + 16));
}

void sub_20A4C7C24(uint64_t a1)
{
}

uint64_t sub_20A4C7C58(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A4C7CA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for StockFeedSectionDescriptor();
    v8[1] = type metadata accessor for StockFeedModel();
    long long v8[2] = sub_20A4C7C58(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    void v8[3] = sub_20A4C7C58(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A4C7D94(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A4C7CA0(255, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4C7DF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_20A4C7E5C()
{
  if (!qword_26AC6AC98)
  {
    sub_20A4C7CA0(255, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
    sub_20A8C8B80();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC6AC98);
    }
  }
}

uint64_t sub_20A4C7EEC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A4C7F4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t SubscriptionStatusCheckBlocker.isCheckAllowed.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t SubscriptionStatusCheckBlocker.isCheckAllowed.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SubscriptionStatusCheckBlocker.isCheckAllowed.modify())()
{
  return j__swift_endAccess;
}

uint64_t SubscriptionStatusCheckBlocker.deinit()
{
  return v0;
}

uint64_t SubscriptionStatusCheckBlocker.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_20A4C8098()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 16);
}

uint64_t SubscriptionStatusCheckBlocker.handle(received:)()
{
  sub_20A4C81D8();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  *(unsigned char *)(v0 + 16) = 0;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F7DD40], v2);
  sub_20A4C823C();
  swift_allocObject();
  return sub_20A8C6580();
}

void sub_20A4C81D8()
{
  if (!qword_26763B560)
  {
    type metadata accessor for StocksActivity(255);
    sub_20A46A2C8();
    unint64_t v0 = sub_20A8CA8C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763B560);
    }
  }
}

void sub_20A4C823C()
{
  if (!qword_26763B568)
  {
    sub_20A4C81D8();
    unint64_t v0 = sub_20A8C65F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763B568);
    }
  }
}

uint64_t sub_20A4C8294(uint64_t a1)
{
  return MEMORY[0x270F7BEA0](a1, *v1);
}

uint64_t sub_20A4C82C0(uint64_t a1)
{
  return MEMORY[0x270F7BEA8](a1, *v1);
}

uint64_t sub_20A4C82EC()
{
  sub_20A4C81D8();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  *(unsigned char *)(v0 + 16) = 0;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F7DD40], v2);
  sub_20A4C823C();
  swift_allocObject();
  return sub_20A8C6580();
}

Swift::Void __swiftcall SubscriptionStatusCheckBlocker.sceneDidEnterBackground()()
{
  swift_beginAccess();
  *(unsigned char *)(v0 + 16) = 1;
}

uint64_t sub_20A4C8430()
{
  return MEMORY[0x270F7A270](*v0);
}

uint64_t sub_20A4C845C()
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v0 + 16) = 1;
  return result;
}

uint64_t type metadata accessor for SubscriptionStatusCheckBlocker()
{
  return self;
}

uint64_t method lookup function for SubscriptionStatusCheckBlocker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SubscriptionStatusCheckBlocker);
}

void sub_20A4C84D8()
{
  uint64_t v1 = sub_20A8CA180();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for StockViewModel();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for TickerModel();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_267639B40 != -1) {
    swift_once();
  }
  sub_20A4C882C(&qword_26763B570, v9, (void (*)(uint64_t))type metadata accessor for TickerEventHandler);
  sub_20A8C41C0();
  if (v19[15])
  {
    uint64_t v12 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 48), *(void *)(v0 + 72));
    uint64_t v13 = MEMORY[0x2105289B0](*v12 + OBJC_IVAR____TtC8StocksUI12TickerRouter_controller);
    if (v13)
    {
      uint64_t v14 = (void *)v13;
      uint64_t v15 = (void *)sub_20A8CEB40();

      if (v15)
      {
        unint64_t v16 = sub_20A8C9D20();
        if (v16 >> 62) {
          uint64_t v17 = sub_20A8CF540();
        }
        else {
          uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        if (__OFSUB__(v17, 1))
        {
          __break(1u);
        }
        else
        {
          (*(void (**)(unsigned char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F7DB60], v1);
          sub_20A8C9CB0();

          (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
        }
      }
    }
  }
  else
  {
    sub_20A44DF90(0);
    sub_20A8C8330();
    sub_20A494D04();
    sub_20A4C8874((uint64_t)&v11[*(int *)(v18 + 48)], (uint64_t)v7);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 48), *(void *)(v0 + 72));
    sub_20A630930((uint64_t)v7);
    sub_20A4C88D8((uint64_t)v7);
  }
}

uint64_t type metadata accessor for TickerEventHandler()
{
  return self;
}

uint64_t sub_20A4C882C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4C8874(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4C88D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A4C8934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 <= 1u)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for StockListSectionDescriptor(uint64_t a1)
{
  return sub_20A475B64(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
}

uint64_t initializeWithCopy for StockListSectionDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 40);
  sub_20A4C8934(*(void *)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for StockListSectionDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 40);
  sub_20A4C8934(*(void *)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  unsigned __int8 v14 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_20A475B64(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for StockListSectionDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_20A475B64(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockListSectionDescriptor(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StockListSectionDescriptor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_20A4C8B94(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 1u) {
    return *(unsigned __int8 *)(a1 + 40);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_20A4C8BAC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StockListSectionDescriptor()
{
  return &type metadata for StockListSectionDescriptor;
}

uint64_t sub_20A4C8BE0()
{
  uint64_t v1 = 0x7974706D65;
  if (*(unsigned char *)(v0 + 40) != 1) {
    uint64_t v1 = 0x7961646F74;
  }
  if (*(unsigned char *)(v0 + 40)) {
    return v1;
  }
  else {
    return 0x736B636F7473;
  }
}

uint64_t sub_20A4C8C30@<X0>(uint64_t a1@<X8>)
{
  if (*(unsigned char *)(v1 + 40)) {
    unsigned int v3 = (unsigned int *)MEMORY[0x263F7D2A8];
  }
  else {
    unsigned int v3 = (unsigned int *)MEMORY[0x263F7D2B0];
  }
  uint64_t v4 = *v3;
  uint64_t v5 = sub_20A8C8280();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(a1, v4, v5);
}

uint64_t sub_20A4C8CBC(long long *a1, long long *a2)
{
  sub_20A4C8D08(a1, v4);
  sub_20A4C8D08(a2, v5);
  return sub_20A4C9284(v4, v5) & 1;
}

_OWORD *sub_20A4C8D08(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(long long *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_20A4C8D20(uint64_t a1, uint64_t a2)
{
  return sub_20A4C8D90(a1, a2, MEMORY[0x263F7AFD8], &qword_26AC69038, MEMORY[0x263F7AFD8], MEMORY[0x263F7AFE0]);
}

uint64_t sub_20A4C8D58(uint64_t a1, uint64_t a2)
{
  return sub_20A4C8D90(a1, a2, MEMORY[0x263F7AF50], (unint64_t *)&unk_26AC69010, MEMORY[0x263F7AF50], MEMORY[0x263F7AF58]);
}

uint64_t sub_20A4C8D90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v38 = a6;
  uint64_t v10 = a3(0);
  MEMORY[0x270FA5388](v10);
  v14.n128_f64[0] = MEMORY[0x270FA5388](v11);
  unint64_t v16 = (char *)&v31 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17 == *(void *)(a2 + 16))
  {
    if (!v17 || a1 == a2)
    {
      char v25 = 1;
    }
    else
    {
      unint64_t v18 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
      uint64_t v19 = v12 + 16;
      uint64_t v35 = v20;
      uint64_t v36 = v13;
      uint64_t v31 = *(void *)(v19 + 56);
      uint64_t v32 = a2;
      uint64_t v37 = v19;
      uint64_t v33 = a1;
      int v34 = (void (**)(char *, uint64_t))(v19 - 8);
      uint64_t v21 = v17 - 1;
      do
      {
        uint64_t v22 = v35;
        ((void (*)(char *, unint64_t, uint64_t, __n128))v35)(v16, a1 + v18, v10, v14);
        uint64_t v23 = v16;
        uint64_t v24 = v36;
        v22(v36, a2 + v18, v10);
        sub_20A4C95AC(a4, a5);
        char v25 = sub_20A8CE210();
        uint64_t v26 = *v34;
        uint64_t v27 = v24;
        unint64_t v16 = v23;
        (*v34)(v27, v10);
        v26(v23, v10);
        BOOL v29 = v21-- != 0;
        if ((v25 & 1) == 0) {
          break;
        }
        v18 += v31;
        a2 = v32;
        a1 = v33;
      }
      while (v29);
    }
  }
  else
  {
    char v25 = 0;
  }
  return v25 & 1;
}

uint64_t sub_20A4C8FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockFeedPage();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v37 - v8;
  sub_20A4C9420();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for StockFeedViewerPage() - 8;
  MEMORY[0x270FA5388](v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v37 - v18;
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20 == *(void *)(a2 + 16))
  {
    if (!v20 || a1 == a2)
    {
      char v31 = 1;
    }
    else
    {
      uint64_t v40 = v17;
      uint64_t v41 = v13;
      uint64_t v42 = v6;
      unint64_t v21 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      uint64_t v38 = *(void *)(v16 + 72);
      uint64_t v39 = a1;
      uint64_t v22 = v20 - 1;
      do
      {
        sub_20A4C9484(a1 + v21, (uint64_t)v19);
        uint64_t v23 = (uint64_t)v19;
        uint64_t v24 = v40;
        sub_20A4C9484(a2 + v21, v40);
        uint64_t v25 = v11;
        uint64_t v26 = *(int *)(v11 + 48);
        uint64_t v27 = (uint64_t)v41;
        uint64_t v28 = (uint64_t)&v41[v26];
        sub_20A4C9484(v23, (uint64_t)v41);
        sub_20A4C9484(v24, v28);
        sub_20A4C94E8(v27, (uint64_t)v9);
        uint64_t v29 = (uint64_t)v9;
        uint64_t v30 = (uint64_t)v42;
        sub_20A4C94E8(v28, (uint64_t)v42);
        char v31 = MEMORY[0x21051C160](v29, v30);
        uint64_t v32 = v30;
        uint64_t v9 = (char *)v29;
        sub_20A4C954C(v32, (uint64_t (*)(void))type metadata accessor for StockFeedPage);
        sub_20A4C954C(v29, (uint64_t (*)(void))type metadata accessor for StockFeedPage);
        uint64_t v33 = v24;
        uint64_t v19 = (char *)v23;
        sub_20A4C954C(v33, (uint64_t (*)(void))type metadata accessor for StockFeedViewerPage);
        sub_20A4C954C(v23, (uint64_t (*)(void))type metadata accessor for StockFeedViewerPage);
        BOOL v35 = v22-- != 0;
        if ((v31 & 1) == 0) {
          break;
        }
        v21 += v38;
        a1 = v39;
        uint64_t v11 = v25;
      }
      while (v35);
    }
  }
  else
  {
    char v31 = 0;
  }
  return v31 & 1;
}

uint64_t sub_20A4C9284(long long *a1, long long *a2)
{
  sub_20A4C8D08(a1, &v19);
  if (v23)
  {
    if (v23 != 1)
    {
      sub_20A4C8D08(a2, &v15);
      if (v18 == 2)
      {
        int8x16_t v13 = vorrq_s8(v16, v17);
        if (!(*(void *)&vorr_s8(*(int8x8_t *)v13.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v13, v13, 8uLL)) | v15))
        {
          char v11 = 1;
          return v11 & 1;
        }
      }
      goto LABEL_15;
    }
    uint64_t v4 = *((void *)&v19 + 1);
    uint64_t v3 = v19;
    uint64_t v5 = v20;
    uint64_t v6 = v21;
    uint64_t v7 = v22;
    sub_20A4C8D08(a2, &v15);
    if (v18 != 1)
    {
LABEL_15:
      char v11 = 0;
      return v11 & 1;
    }
  }
  else
  {
    uint64_t v4 = *((void *)&v19 + 1);
    uint64_t v3 = v19;
    uint64_t v5 = v20;
    uint64_t v6 = v21;
    uint64_t v7 = v22;
    sub_20A4C8D08(a2, &v15);
    if (v18) {
      goto LABEL_15;
    }
  }
  uint64_t v8 = v16.i64[1];
  int8x16_t v9 = v17;
  if (v3 == v15 && v4 == v16.i64[0] || (char v10 = sub_20A8CF760(), v11 = 0, (v10 & 1) != 0))
  {
    if (v5 == v8 && v6 == v9.i64[0] || (v12 = sub_20A8CF760(), char v11 = 0, (v12 & 1) != 0)) {
      char v11 = sub_20A4C8D90(v7, v9.i64[1], MEMORY[0x263F7AFD8], &qword_26AC69038, MEMORY[0x263F7AFD8], MEMORY[0x263F7AFE0]);
    }
  }
  return v11 & 1;
}

void sub_20A4C9420()
{
  if (!qword_26AC713D0[0])
  {
    type metadata accessor for StockFeedViewerPage();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, qword_26AC713D0);
    }
  }
}

uint64_t sub_20A4C9484(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockFeedViewerPage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4C94E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockFeedPage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4C954C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A4C95AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A4C95F4(uint64_t a1, double *a2, char *a3)
{
  uint64_t v6 = sub_20A8C3410();
  uint64_t v212 = *(void *)(v6 - 8);
  uint64_t v213 = v6;
  MEMORY[0x270FA5388](v6);
  long long v211 = (char *)&v197 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C72A0();
  uint64_t v216 = *(void *)(v8 - 8);
  uint64_t v217 = v8;
  MEMORY[0x270FA5388](v8);
  CGFloat v214 = (char *)&v197 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  double v215 = (char *)&v197 - v11;
  uint64_t v203 = sub_20A8CDFF0();
  uint64_t v201 = *(void *)(v203 - 8);
  MEMORY[0x270FA5388](v203);
  CGFloat v200 = (char *)&v197 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = sub_20A8CE010();
  uint64_t v202 = *(void *)(v204 - 8);
  MEMORY[0x270FA5388](v204);
  uint64_t v199 = (char *)&v197 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A4CAEF0(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v233 = (uint64_t)&v197 - v16;
  uint64_t v17 = type metadata accessor for StockSparklineViewModel(0);
  uint64_t v231 = *(void *)(v17 - 8);
  uint64_t v232 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v210 = (uint64_t)&v197 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_20A8C4030();
  uint64_t v238 = *(void *)(v19 - 8);
  id v239 = (id)v19;
  MEMORY[0x270FA5388](v19);
  double v241 = (char *)&v197 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v21);
  *(void *)&long long v240 = (char *)&v197 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v197 - v24;
  uint64_t v26 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AEF0];
  sub_20A4CAEF0(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], v14);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v209 = (uint64_t)&v197 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  char v31 = (char *)&v197 - v30;
  double v32 = a2[4];
  double v33 = a2[5];
  double v34 = a2[6];
  double v35 = a2[7];
  CGRect v237 = *(char **)&a3[OBJC_IVAR____TtC8StocksUI10TickerView_symbolLabel];
  objc_msgSend(v237, sel_setFrame_, v32, v33, v34, v35);
  double v36 = a2[8];
  double v37 = a2[9];
  double v38 = a2[10];
  double v39 = a2[11];
  id v230 = *(id *)&a3[OBJC_IVAR____TtC8StocksUI10TickerView_priceLabel];
  objc_msgSend(v230, sel_setFrame_, v36, v37, v38, v39);
  double v243 = a3;
  uint64_t v40 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI10TickerView_priceChangeLabel];
  double v41 = a2[12];
  double v42 = a2[13];
  double v43 = a2[14];
  double v44 = a2[15];
  CGRect v234 = a2;
  id v228 = v40;
  objc_msgSend(v40, sel_setFrame_, v41, v42, v43, v44);
  uint64_t v45 = type metadata accessor for StockViewModel();
  uint64_t v46 = *(int *)(v45 + 20);
  uint64_t v245 = a1;
  uint64_t v207 = a1 + v46;
  sub_20A4CAF9C(a1 + v46, (uint64_t)v31, &qword_26AC68FB0, v26);
  uint64_t v47 = sub_20A8C3E10();
  uint64_t v48 = *(void *)(v47 - 8);
  CGRect v205 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
  uint64_t v206 = v48 + 48;
  if (v205(v31, 1, v47) == 1)
  {
    sub_20A4CB01C((uint64_t)v31, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    double v49 = 0.0;
    int v50 = 1;
  }
  else
  {
    double v49 = COERCE_DOUBLE(sub_20A8C3D10());
    int v50 = v51 & 1;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v31, v47);
  }
  uint64_t v52 = (void *)(v245 + *(int *)(v45 + 28));
  sub_20A8C4250();
  sub_20A8C4230();
  if (qword_26AC69070 != -1) {
    swift_once();
  }
  sub_20A8C4220();
  swift_release();
  char v53 = *((unsigned char *)v52 + 8);
  uint64_t v208 = v47;
  uint64_t v198 = v48;
  id v242 = v52;
  uint64_t v229 = v45;
  if (v53)
  {
    uint64_t v54 = (char *)v52[9];
    uint64_t v238 = v52[8];
    double v241 = v54;
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  char v55 = v248[0];
  double v56 = *(double *)v52;
  sub_20A458F00((uint64_t)v52, (uint64_t)v25);
  if (v55)
  {
    long long v57 = &v25[*(int *)(v21 + 40)];
    uint64_t v59 = v238;
    id v58 = v239;
    uint64_t v60 = v241;
    (*(void (**)(char *, char *, id))(v238 + 16))(v241, v57, v239);
    int v61 = (*(uint64_t (**)(char *, id))(v59 + 88))(v60, v58);
    char v62 = 2;
    if (v61 == *MEMORY[0x263F7AF90]
      || v61 == *MEMORY[0x263F7AF98]
      || v61 == *MEMORY[0x263F7AF68]
      || v61 == *MEMORY[0x263F7AF80]
      || v61 == *MEMORY[0x263F7AF70]
      || v61 == *MEMORY[0x263F7AF88])
    {
      goto LABEL_17;
    }
    if (v61 != *MEMORY[0x263F7AF78])
    {
      if (v61 != *MEMORY[0x263F7AF60]) {
        (*(void (**)(char *, id))(v59 + 8))(v241, v58);
      }
      char v62 = 2;
      goto LABEL_17;
    }
  }
  char v62 = 0;
LABEL_17:
  sub_20A4CB23C((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  if (qword_26AC6D680 != -1) {
    swift_once();
  }
  uint64_t v63 = sub_20A6573EC(v52[6], v52[7], 5, 1, v62, v56);
  uint64_t v65 = v64;
  uint64_t v66 = v240;
  sub_20A458F00((uint64_t)v52, v240);
  if (!v65)
  {
    uint64_t v63 = *(void *)(v66 + 64);
    uint64_t v65 = *(char **)(v66 + 72);
    swift_bridgeObjectRetain();
  }
  double v241 = v65;
  uint64_t v238 = v63;
  sub_20A4CB23C(v66, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
LABEL_22:
  int v67 = v49 < 0.0;
  int v235 = v50;
  if (v50) {
    int v67 = 2;
  }
  int v236 = v67;
  uint64_t v68 = v244 + 16;
  CGRect v227 = v244 + 16;
  swift_beginAccess();
  sub_20A4342F4((uint64_t)v68, (uint64_t)v248);
  uint64_t v69 = __swift_project_boxed_opaque_existential_1(v248, v249);
  sub_20A8C3EF0();
  char v70 = (void *)*v69;
  sub_20A4CAEF0(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
  uint64_t v226 = v71;
  uint64_t inited = swift_initStackObject();
  long long v240 = xmmword_20A8D4540;
  int v73 = (void **)MEMORY[0x263F814F0];
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  int v74 = *v73;
  *(void *)(inited + 32) = *v73;
  uint64_t v75 = self;
  id v225 = v75;
  double v76 = *MEMORY[0x263F81800];
  swift_bridgeObjectRetain();
  id v224 = v74;
  id v77 = objc_msgSend(v75, sel_systemFontOfSize_weight_, 14.0, v76);
  uint64_t v78 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  uint64_t v223 = v78;
  *(void *)(inited + 40) = v77;
  uint64_t v79 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v78;
  *(void *)(inited + 72) = v79;
  uint64_t v80 = v70 + 2;
  uint64_t v82 = v70[5];
  uint64_t v81 = v70[6];
  __swift_project_boxed_opaque_existential_1(v80, v82);
  uint64_t v83 = *(void *)(v81 + 16);
  uint64_t v84 = *(uint64_t (**)(uint64_t, uint64_t))(v83 + 40);
  id v221 = v79;
  uint64_t v85 = v84(v82, v83);
  uint64_t v222 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 104) = v222;
  *(void *)(inited + 80) = v85;
  sub_20A4CF8B0(inited);
  id v86 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v87 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  uint64_t v220 = v88;
  uint64_t v219 = sub_20A4CAF54((unint64_t *)&qword_26AC7F9F8, 255, type metadata accessor for Key);
  uint64_t v218 = MEMORY[0x263F8EE58] + 8;
  uint64_t v89 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v239 = objc_msgSend(v86, sel_initWithString_attributes_, v87, v89);
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v248);
  uint64_t v90 = v227;
  uint64_t v91 = (void *)*__swift_project_boxed_opaque_existential_1(v227, *((void *)v244 + 5));
  uint64_t v92 = swift_initStackObject();
  *(_OWORD *)(v92 + 16) = v240;
  uint64_t v93 = v224;
  *(void *)(v92 + 32) = v224;
  double v94 = *MEMORY[0x263F81810];
  swift_bridgeObjectRetain();
  id v95 = v93;
  *(void *)(v92 + 40) = objc_msgSend(v225, sel_monospacedDigitSystemFontOfSize_weight_, 14.0, v94);
  uint64_t v96 = v221;
  *(void *)(v92 + 64) = v223;
  *(void *)(v92 + 72) = v96;
  uint64_t v97 = v91[5];
  uint64_t v98 = v91[6];
  __swift_project_boxed_opaque_existential_1(v91 + 2, v97);
  uint64_t v99 = *(void *)(v98 + 16);
  uint64_t v100 = *(uint64_t (**)(uint64_t, uint64_t))(v99 + 40);
  id v101 = v96;
  uint64_t v102 = v100(v97, v99);
  *(void *)(v92 + 104) = v222;
  *(void *)(v92 + 80) = v102;
  sub_20A4CF8B0(v92);
  id v103 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v104 = v238;
  uint64_t v105 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  uint64_t v106 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v107 = objc_msgSend(v103, sel_initWithString_attributes_, v105, v106);

  sub_20A4342F4((uint64_t)v90, (uint64_t)v248);
  __swift_project_boxed_opaque_existential_1(v248, v249);
  uint64_t v108 = v229;
  uint64_t v109 = v245;
  uint64_t v110 = v245 + *(int *)(v229 + 32);
  uint64_t v111 = sub_20A5EBCFC(v110, 0);
  id v113 = sub_20A453D28(v111, v112, v236);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v248);
  objc_msgSend(v237, sel_setAttributedText_, v239);
  id v114 = v230;
  id v230 = v107;
  id v115 = v107;
  uint64_t v116 = v113;
  objc_msgSend(v114, sel_setAttributedText_, v115);
  objc_msgSend(v228, sel_setAttributedText_, v113);
  id v117 = v243;
  uint64_t v118 = (uint64_t)v234;
  double v119 = v234[16];
  double v120 = v234[17];
  double v121 = v234[18];
  double v122 = v234[19];
  CGRect v237 = *(char **)&v243[OBJC_IVAR____TtC8StocksUI10TickerView_sparklineView];
  objc_msgSend(v237, sel_setFrame_, v119, v120, v121, v122);
  uint64_t v123 = v233;
  sub_20A4CAF9C(v109 + *(int *)(v108 + 24), v233, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel);
  int v124 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v231 + 48))(v123, 1, v232);
  uint64_t v232 = v110;
  if (v124 == 1)
  {
    sub_20A4CB01C(v123, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel);
  }
  else
  {
    uint64_t v125 = v210;
    sub_20A458E3C(v123, v210);
    sub_20A4CB110(v118 + 160, (uint64_t)v250);
    sub_20A4CB110((uint64_t)v250, (uint64_t)&v251);
    uint64_t v126 = v251;
    if (v251 != (void *)1)
    {
      __swift_project_boxed_opaque_existential_1((void *)v244 + 7, *((void *)v244 + 10));
      (*(void (**)(char *, void, uint64_t))(v201 + 104))(v200, *MEMORY[0x263F7CC40], v203);
      sub_20A4CB1E4(v118);
      uint64_t v127 = (uint64_t)v199;
      sub_20A8CE000();
      sub_20A844AB4(v125, v237, v126, v127);
      uint64_t v128 = v127;
      uint64_t v110 = v232;
      (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v128, v204);
      sub_20A4CB210(v118);
    }
    sub_20A4CB23C(v125, type metadata accessor for StockSparklineViewModel);
    uint64_t v104 = v238;
  }
  sub_20A8C3E60();
  uint64_t v129 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v117, sel_setAccessibilityLabel_, v129);

  uint64_t v130 = sub_20A5EC394(v110);
  uint64_t v132 = v131;
  sub_20A435B64();
  uint64_t v133 = swift_allocObject();
  *(_OWORD *)(v133 + 16) = v240;
  uint64_t v134 = v241;
  *(void *)(v133 + 32) = v104;
  *(void *)(v133 + 40) = v134;
  *(void *)(v133 + 48) = v130;
  *(void *)(v133 + 56) = v132;
  sub_20A8C82C0();
  uint64_t v136 = v135;
  swift_bridgeObjectRelease();
  if (v136)
  {
    uint64_t v137 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v137 = 0;
  }
  objc_msgSend(v117, sel_setAccessibilityValue_, v137);

  sub_20A4CB198(0, (unint64_t *)&qword_26AC80140, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v138 = swift_initStackObject();
  *(_OWORD *)(v138 + 16) = xmmword_20A8D8D40;
  double v139 = v239;
  id v140 = v230;
  *(void *)(v138 + 32) = v239;
  *(void *)(v138 + 40) = v140;
  *(void *)(v138 + 48) = v116;
  v248[0] = v138;
  sub_20A8CE620();
  unint64_t v141 = v248[0];
  v248[0] = MEMORY[0x263F8EE78];
  double v244 = v139;
  id v242 = v140;
  double v241 = v116;
  sub_20A68C494(0, 3, 0);
  uint64_t v142 = v248[0];
  unint64_t v143 = v141 & 0xC000000000000001;
  if ((v141 & 0xC000000000000001) != 0) {
    id v144 = (id)MEMORY[0x210527700](0, v141);
  }
  else {
    id v144 = *(id *)(v141 + 32);
  }
  uint64_t v145 = v144;
  id v146 = objc_msgSend(v144, sel_string);
  uint64_t v147 = sub_20A8CE280();
  uint64_t v149 = v148;

  unint64_t v151 = *(void *)(v142 + 16);
  unint64_t v150 = *(void *)(v142 + 24);
  if (v151 >= v150 >> 1)
  {
    sub_20A68C494(v150 > 1, v151 + 1, 1);
    uint64_t v142 = v248[0];
  }
  *(void *)(v142 + 16) = v151 + 1;
  uint64_t v152 = v142 + 16 * v151;
  *(void *)(v152 + 32) = v147;
  *(void *)(v152 + 40) = v149;
  if (v143) {
    id v153 = (id)MEMORY[0x210527700](1, v141);
  }
  else {
    id v153 = *(id *)(v141 + 40);
  }
  long long v154 = v153;
  id v155 = objc_msgSend(v153, sel_string);
  uint64_t v156 = sub_20A8CE280();
  uint64_t v158 = v157;

  unint64_t v160 = *(void *)(v142 + 16);
  unint64_t v159 = *(void *)(v142 + 24);
  if (v160 >= v159 >> 1)
  {
    sub_20A68C494(v159 > 1, v160 + 1, 1);
    uint64_t v142 = v248[0];
  }
  *(void *)(v142 + 16) = v160 + 1;
  uint64_t v161 = v142 + 16 * v160;
  *(void *)(v161 + 32) = v156;
  *(void *)(v161 + 40) = v158;
  if (v143) {
    id v162 = (id)MEMORY[0x210527700](2, v141);
  }
  else {
    id v162 = *(id *)(v141 + 48);
  }
  CGFloat v163 = v162;
  id v164 = objc_msgSend(v162, sel_string);
  uint64_t v165 = sub_20A8CE280();
  uint64_t v167 = v166;

  unint64_t v169 = *(void *)(v142 + 16);
  unint64_t v168 = *(void *)(v142 + 24);
  if (v169 >= v168 >> 1) {
    sub_20A68C494(v168 > 1, v169 + 1, 1);
  }
  uint64_t v170 = v248[0];
  *(void *)(v248[0] + 16) = v169 + 1;
  uint64_t v171 = v170 + 16 * v169;
  *(void *)(v171 + 32) = v165;
  *(void *)(v171 + 40) = v167;
  swift_bridgeObjectRelease();
  v248[0] = v170;
  sub_20A4CB198(0, (unint64_t *)&qword_26AC7F800, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_20A4CB08C();
  sub_20A8CE1E0();
  swift_release();
  uint64_t v172 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  id v173 = v243;
  objc_msgSend(v243, sel_setLargeContentTitle_, v172);

  id v174 = *(id *)&v237[OBJC_IVAR____TtC8StocksUI18StockSparklineView_sparklineView];
  uint64_t v175 = (void *)sub_20A8CDC10();

  id v176 = objc_msgSend(v175, sel_image);
  objc_msgSend(v173, sel_setLargeContentImage_, v176);

  uint64_t ShouldDifferentiateWithoutColor = UIAccessibilityShouldDifferentiateWithoutColor();
  int v178 = v235;
  if ((ShouldDifferentiateWithoutColor & 1) == 0) {
    goto LABEL_62;
  }
  CGFloat v180 = v211;
  uint64_t v179 = v212;
  uint64_t v181 = v213;
  (*(void (**)(char *, uint64_t, uint64_t))(v212 + 16))(v211, v232, v213);
  int v182 = (*(uint64_t (**)(char *, uint64_t))(v179 + 88))(v180, v181);
  CGFloat v183 = (unsigned int *)MEMORY[0x263F7A218];
  if (v182 == *MEMORY[0x263F7AB90])
  {
    CGFloat v185 = v215;
    uint64_t v184 = v216;
    CGFloat v186 = *(void (**)(char *, uint64_t, uint64_t))(v216 + 104);
    uint64_t v187 = v217;
    v186(v215, *MEMORY[0x263F7A210], v217);
    CGFloat v188 = v214;
LABEL_54:
    v186(v188, *v183, v187);
    sub_20A4CAF54(&qword_26AC676F8, 255, MEMORY[0x263F7A220]);
    sub_20A8CE570();
    sub_20A8CE570();
    if (v248[0] == v246 && v248[1] == v247)
    {
      swift_bridgeObjectRelease_n();
      CGFloat v190 = *(void (**)(char *, uint64_t))(v184 + 8);
      v190(v188, v187);
      v190(v185, v187);
    }
    else
    {
      char v191 = sub_20A8CF760();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      CGFloat v192 = *(void (**)(char *, uint64_t))(v184 + 8);
      v192(v188, v187);
      uint64_t ShouldDifferentiateWithoutColor = ((uint64_t (*)(char *, uint64_t))v192)(v185, v187);
      if ((v191 & 1) == 0)
      {
LABEL_62:
        MEMORY[0x270FA5388](ShouldDifferentiateWithoutColor);
        *(&v197 - 2) = v245;
        sub_20A48C20C();
        sub_20A4CAF54(&qword_26AC6D468, 255, (void (*)(uint64_t))sub_20A48C20C);
        sub_20A8CEEA0();

        return;
      }
    }
    uint64_t v193 = v209;
    sub_20A4CAF9C(v207, v209, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    uint64_t v194 = v208;
    if (v205((char *)v193, 1, v208) == 1)
    {
      uint64_t ShouldDifferentiateWithoutColor = sub_20A4CB01C(v193, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    }
    else
    {
      sub_20A8C3DC0();
      int v196 = v195;
      uint64_t ShouldDifferentiateWithoutColor = (*(uint64_t (**)(uint64_t, uint64_t))(v198 + 8))(v193, v194);
      if (((v196 | v178) & 1) == 0) {
        sub_20A4540EC((uint64_t)v173, v236 & 1);
      }
    }
    goto LABEL_62;
  }
  uint64_t v184 = v216;
  uint64_t v187 = v217;
  CGFloat v188 = v214;
  CGFloat v185 = v215;
  if (v182 == *MEMORY[0x263F7AB78])
  {
    uint64_t v189 = *MEMORY[0x263F7A208];
LABEL_53:
    CGFloat v186 = *(void (**)(char *, uint64_t, uint64_t))(v216 + 104);
    v186(v215, v189, v217);
    goto LABEL_54;
  }
  if (v182 == *MEMORY[0x263F7AB88])
  {
    uint64_t v189 = *MEMORY[0x263F7A218];
    goto LABEL_53;
  }
  sub_20A8CF750();
  __break(1u);
}

uint64_t sub_20A4CAC54@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  uint64_t v9 = sub_20A8C3E20();
  uint64_t v11 = v10;
  uint64_t v12 = sub_20A8C3EC0();
  uint64_t v14 = v13;
  uint64_t v15 = sub_20A8C3EE0();
  uint64_t v17 = v16;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  a2[2] = v9;
  a2[3] = v11;
  a2[4] = v12;
  a2[5] = v14;
  a2[6] = v15;
  a2[7] = v17;
  *a2 = 0x6C6F626D7973;
  a2[1] = 0xE600000000000000;
  return result;
}

uint64_t type metadata accessor for TickerViewRenderer()
{
  return self;
}

uint64_t sub_20A4CADB4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  sub_20A4342F4(v2 + 16, (uint64_t)v12);
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8);
  uint64_t v10 = v4;
  uint64_t v11 = v5;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  v7(a2, v4, v6);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  sub_20A42BEBC(&v9, v2 + 16);
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
}

uint64_t sub_20A4CAE98(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_20A4CAF54(&qword_26AC70AB8, a2, (void (*)(uint64_t))type metadata accessor for TickerViewRenderer);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_20A4CAEF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A4CAF54(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4CAF9C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_20A4CAEF0(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A4CB01C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A4CAEF0(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_20A4CB08C()
{
  unint64_t result = qword_26AC7F808;
  if (!qword_26AC7F808)
  {
    sub_20A4CB198(255, (unint64_t *)&qword_26AC7F800, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7F808);
  }
  return result;
}

uint64_t sub_20A4CB108@<X0>(void *a1@<X8>)
{
  return sub_20A4CAC54(*(void *)(v1 + 16), a1);
}

uint64_t sub_20A4CB110(uint64_t a1, uint64_t a2)
{
  sub_20A4CB198(0, &qword_26AC7CD98, (uint64_t)&type metadata for StockSparklineViewLayoutAttributes, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20A4CB198(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_20A4CB1E4(uint64_t a1)
{
  return a1;
}

uint64_t sub_20A4CB210(uint64_t a1)
{
  return a1;
}

uint64_t sub_20A4CB23C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_20A4CB29C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_20A8CF110();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_20A4CB378(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_20A8CF110();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t sub_20A4CB3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_20A8CF110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_20A4CB46C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_20A8CF110();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t sub_20A4CB508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_20A8CF110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_20A4CB594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_20A8CF110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t sub_20A4CB618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A4CB62C);
}

uint64_t sub_20A4CB62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = sub_20A8CF110();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_20A4CB69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A4CB6B0);
}

uint64_t sub_20A4CB6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = sub_20A8CF110();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t type metadata accessor for CreateWatchlistViewLayoutAttributes()
{
  uint64_t result = qword_26763B578;
  if (!qword_26763B578) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A4CB770()
{
  uint64_t result = sub_20A8CF110();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double sub_20A4CB814()
{
  return *(double *)v0;
}

uint64_t sub_20A4CB81C()
{
  uint64_t v0 = sub_20A8C7350();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C7340();
  sub_20A491DF4();
  uint64_t v4 = sub_20A8C4620();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, void, uint64_t))(v5 + 104))(v7 + v6, *MEMORY[0x263F24D40], v4);
  sub_20A4CBCE4(&qword_26763B588, MEMORY[0x263F7A2B0]);
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_20A4CBA0C()
{
  sub_20A8C7260();
  sub_20A4CBCE4(&qword_26763B590, MEMORY[0x263F7A1E0]);
  memset(v1, 0, sizeof(v1));
  sub_20A8C45D0();
  return sub_20A44349C((uint64_t)v1);
}

uint64_t sub_20A4CBAA4()
{
  uint64_t v0 = sub_20A8C7350();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C7340();
  sub_20A491DF4();
  uint64_t v4 = sub_20A8C4620();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 72);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_20A8D4540;
  unint64_t v9 = v8 + v7;
  uint64_t v10 = *(void (**)(unint64_t, void, uint64_t))(v5 + 104);
  v10(v9, *MEMORY[0x263F24D48], v4);
  v10(v9 + v6, *MEMORY[0x263F24D40], v4);
  sub_20A4CBCE4(&qword_26763B588, MEMORY[0x263F7A2B0]);
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t type metadata accessor for WelcomeTracker()
{
  return self;
}

uint64_t sub_20A4CBCE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4CBD2C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PremiumSealAnimationManager()
{
  return self;
}

uint64_t sub_20A4CBD60@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC760F0);
  uint64_t result = sub_20A8C5BB0();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for SparklineModelProvider();
    uint64_t v5 = swift_allocObject();
    uint64_t result = sub_20A42BEBC(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_26BE68660;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A4CBE14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ChartCategoryProvider();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_26BE63460;
  *a1 = result;
  return result;
}

id sub_20A4CBE5C@<X0>(void *a1@<X8>)
{
  if (qword_26AC71000 != -1) {
    swift_once();
  }
  id v5 = (id)qword_26AC70FF8;
  unint64_t v2 = sub_20A4CC63C();
  uint64_t v3 = MEMORY[0x263F59E50];
  a1[3] = v2;
  a1[4] = v3;
  *a1 = v5;

  return v5;
}

uint64_t sub_20A4CBEEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_20A8CD630();
  swift_allocObject();
  uint64_t result = sub_20A8CD620();
  uint64_t v4 = MEMORY[0x263F59CB8];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = result;
  return result;
}

uint64_t sub_20A4CBF48@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E50);
  uint64_t result = sub_20A8C5BB0();
  if (!v11)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  if (!v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = type metadata accessor for WatchlistSwitcherMenuProvider();
    uint64_t v7 = (void *)swift_allocObject();
    uint64_t result = sub_20A42BEBC(&v10, (uint64_t)(v7 + 2));
    v7[7] = v8;
    v7[8] = v9;
    v7[9] = v5;
    a2[3] = v6;
    a2[4] = &off_26BE676D0;
    *a2 = v7;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A4CC0A4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E50);
  uint64_t result = sub_20A8C5BB0();
  if (!v28)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  if (!v25)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v19 = v25;
  uint64_t v20 = a2;
  uint64_t v18 = v26;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E90);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v5 = v23;
  if (!v23)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v6 = v24;
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(v22, v23);
  v21[3] = v5;
  v21[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v21);
  uint64_t v9 = *(void (**)(char *, uint64_t *, uint64_t, double))(*(void *)(v5 - 8) + 16);
  ((void (*)(uint64_t *, void *, uint64_t))v9)(boxed_opaque_existential_1, v7, v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v11 = type metadata accessor for WatchlistEditMenuProvider();
    double v12 = MEMORY[0x270FA5388](v11);
    uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    v9(v14, boxed_opaque_existential_1, v5, v12);
    uint64_t v15 = sub_20A6A8B84(&v27, v19, v18, (uint64_t)v14, v10, v11, v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    uint64_t v16 = v20;
    void v20[3] = v11;
    v16[4] = &off_26BE6B050;
    *uint64_t v16 = v15;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ProviderAssembly()
{
  return self;
}

uint64_t sub_20A4CC354()
{
  uint64_t v0 = sub_20A8C6690();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC76DF8);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC760F0);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC6B220);
  sub_20A8C62A0();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D040], v0);
  sub_20A8C5980();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7C5C0);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC79940);
  sub_20A8C62A0();
  swift_release();
  return swift_release();
}

unint64_t sub_20A4CC63C()
{
  unint64_t result = qword_26AC7F9F0;
  if (!qword_26AC7F9F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC7F9F0);
  }
  return result;
}

void destroy for StockChartCalloutLayoutAttributes(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 40);
}

uint64_t initializeWithCopy for StockChartCalloutLayoutAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v4;
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  id v6 = v3;
  id v7 = v4;
  return a1;
}

uint64_t assignWithCopy for StockChartCalloutLayoutAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  long long v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  id v7 = *(void **)(a2 + 40);
  uint64_t v8 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v7;
  id v9 = v7;

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for StockChartCalloutLayoutAttributes(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  long long v5 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for StockChartCalloutLayoutAttributes(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockChartCalloutLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockChartCalloutLayoutAttributes()
{
  return &type metadata for StockChartCalloutLayoutAttributes;
}

void sub_20A4CC8CC()
{
  qword_26AC9E918 = 0x4074000000000000;
}

void sub_20A4CC8DC()
{
  qword_26AC9EBC8 = 0x4077700000000000;
}

double static MainMetrics.minimumWindowSize.getter()
{
  id v0 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v0, sel_bounds);
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;

  v10.origin.CGFloat x = v2;
  v10.origin.CGFloat y = v4;
  v10.size.CGFloat width = v6;
  v10.size.CGFloat height = v8;
  CGRectGetHeight(v10);
  return 860.0;
}

void static MainMetrics.defaultWindowWindowSize.getter()
{
  id v0 = self;
  id v1 = objc_msgSend(v0, sel_mainScreen);
  objc_msgSend(v1, sel_bounds);
  CGFloat v3 = v2;
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;

  v19.origin.CGFloat x = v3;
  v19.origin.CGFloat y = v5;
  v19.size.CGFloat width = v7;
  v19.size.CGFloat height = v9;
  CGRectGetWidth(v19);
  id v10 = objc_msgSend(v0, sel_mainScreen);
  objc_msgSend(v10, sel_bounds);
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  CGFloat v18 = v17;

  v20.origin.CGFloat x = v12;
  v20.origin.CGFloat y = v14;
  v20.size.CGFloat width = v16;
  v20.size.CGFloat height = v18;
  CGRectGetHeight(v20);
}

ValueMetadata *type metadata accessor for MainMetrics()
{
  return &type metadata for MainMetrics;
}

void sub_20A4CCBC0(CGFloat *a1@<X1>, CGRect *a2@<X8>)
{
  double v103 = a1[3];
  CGFloat v87 = *a1;
  CGFloat v4 = *a1 - v103 - a1[5];
  uint64_t v99 = (void *)(v2 + 16);
  CGFloat v5 = (void *)*__swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  CGFloat v7 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  uint64_t v8 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  swift_bridgeObjectRetain();
  id v82 = v7;
  *(void *)(inited + 40) = sub_20A8CEE20();
  CGFloat v9 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v8;
  *(void *)(inited + 72) = v9;
  id v10 = v5 + 3;
  uint64_t v12 = v5[6];
  uint64_t v11 = v5[7];
  __swift_project_boxed_opaque_existential_1(v10, v12);
  uint64_t v13 = *(void *)(v11 + 16);
  CGFloat v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 40);
  id v80 = v9;
  uint64_t v15 = v14(v12, v13);
  uint64_t v90 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 104) = v90;
  *(void *)(inited + 80) = v15;
  sub_20A4CF8B0(inited);
  id v16 = objc_allocWithZone(MEMORY[0x263F086A0]);
  double v17 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  CGFloat v18 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18);

  sub_20A8CEC40();
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  CGFloat v25 = v24;
  CGFloat v27 = v26;

  CGFloat v89 = v4 * 0.5;
  v105.origin.CGFloat x = v21;
  v105.origin.CGFloat y = v23;
  v105.size.CGFloat width = v25;
  v105.size.CGFloat height = v27;
  CGFloat v95 = v103 + v4 * 0.5 - CGRectGetWidth(v105) * 0.5;
  double rect = a1[6];
  v106.origin.CGFloat x = v21;
  v106.origin.CGFloat y = v23;
  v106.size.CGFloat width = v25;
  v106.size.CGFloat height = v27;
  CGFloat Width = CGRectGetWidth(v106);
  v107.origin.CGFloat x = v21;
  v107.origin.CGFloat y = v23;
  v107.size.CGFloat width = v25;
  v107.size.CGFloat height = v27;
  CGFloat Height = CGRectGetHeight(v107);
  uint64_t v28 = (void *)*__swift_project_boxed_opaque_existential_1(v99, *(void *)(v101 + 40));
  uint64_t v29 = swift_initStackObject();
  *(_OWORD *)(v29 + 16) = xmmword_20A8D4540;
  *(void *)(v29 + 32) = v82;
  swift_bridgeObjectRetain();
  id v83 = v82;
  *(void *)(v29 + 40) = sub_20A8CEE20();
  *(void *)(v29 + 64) = v8;
  *(void *)(v29 + 72) = v80;
  uint64_t v30 = v28 + 3;
  uint64_t v32 = v28[6];
  uint64_t v31 = v28[7];
  __swift_project_boxed_opaque_existential_1(v30, v32);
  uint64_t v33 = *(void *)(v31 + 16);
  double v34 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 96);
  id v35 = v80;
  uint64_t v36 = v34(v32, v33);
  *(void *)(v29 + 104) = v90;
  *(void *)(v29 + 80) = v36;
  sub_20A4CF8B0(v29);
  id v37 = objc_allocWithZone(MEMORY[0x263F086A0]);
  double v38 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  double v39 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v40 = objc_msgSend(v37, sel_initWithString_attributes_, v38, v39);

  sub_20A8CEC40();
  CGFloat v42 = v41;
  CGFloat v44 = v43;
  CGFloat v46 = v45;
  CGFloat v48 = v47;

  v108.origin.CGFloat x = v42;
  v108.origin.CGFloat y = v44;
  v108.size.CGFloat width = v46;
  v108.size.CGFloat height = v48;
  CGFloat v86 = v103 + v89 - CGRectGetWidth(v108) * 0.5;
  v109.origin.CGFloat x = v95;
  v109.origin.CGFloat y = rect;
  v109.size.CGFloat width = Width;
  v109.size.CGFloat height = Height;
  CGFloat v88 = CGRectGetMaxY(v109) + a1[7];
  v110.origin.CGFloat x = v42;
  v110.origin.CGFloat y = v44;
  v110.size.CGFloat width = v46;
  v110.size.CGFloat height = v48;
  CGFloat v81 = CGRectGetWidth(v110);
  v111.origin.CGFloat x = v42;
  v111.origin.CGFloat y = v44;
  v111.size.CGFloat width = v46;
  v111.size.CGFloat height = v48;
  CGFloat v79 = CGRectGetHeight(v111);
  double v49 = (void *)*__swift_project_boxed_opaque_existential_1(v99, *(void *)(v101 + 40));
  uint64_t v50 = swift_initStackObject();
  *(_OWORD *)(v50 + 16) = xmmword_20A8D4540;
  *(void *)(v50 + 32) = v83;
  swift_bridgeObjectRetain();
  id v51 = v83;
  *(void *)(v50 + 40) = sub_20A8CEE20();
  *(void *)(v50 + 64) = v8;
  *(void *)(v50 + 72) = v35;
  uint64_t v52 = v49 + 3;
  uint64_t v54 = v49[6];
  uint64_t v53 = v49[7];
  __swift_project_boxed_opaque_existential_1(v52, v54);
  uint64_t v55 = *(void *)(v53 + 16);
  double v56 = *(uint64_t (**)(uint64_t, uint64_t))(v55 + 96);
  id v57 = v35;
  uint64_t v58 = v56(v54, v55);
  *(void *)(v50 + 104) = v90;
  *(void *)(v50 + 80) = v58;
  sub_20A4CF8B0(v50);
  id v59 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v60 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  int v61 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v62 = objc_msgSend(v59, sel_initWithString_attributes_, v60, v61);

  sub_20A8CEC40();
  CGFloat v64 = v63;
  CGFloat v66 = v65;
  CGFloat v68 = v67;
  CGFloat v70 = v69;

  v112.origin.CGFloat x = v64;
  v112.origin.CGFloat y = v66;
  v112.size.CGFloat width = v68;
  v112.size.CGFloat height = v70;
  CGFloat v104 = v103 + v89 - CGRectGetWidth(v112) * 0.5;
  v113.origin.CGFloat x = v86;
  v113.origin.CGFloat y = v88;
  v113.size.CGFloat width = v81;
  v113.size.CGFloat height = v79;
  CGFloat v102 = CGRectGetMaxY(v113) + a1[8];
  v114.origin.CGFloat x = v64;
  v114.origin.CGFloat y = v66;
  v114.size.CGFloat width = v68;
  v114.size.CGFloat height = v70;
  CGFloat v71 = CGRectGetWidth(v114);
  v115.origin.CGFloat x = v64;
  v115.origin.CGFloat y = v66;
  v115.size.CGFloat width = v68;
  v115.size.CGFloat height = v70;
  CGFloat v72 = CGRectGetHeight(v115);
  v116.origin.CGFloat x = v104;
  v116.origin.CGFloat y = v102;
  v116.size.CGFloat width = v71;
  v116.size.CGFloat height = v72;
  v117.size.CGFloat height = rect + CGRectGetMaxY(v116);
  v117.origin.CGFloat x = 0.0;
  v117.origin.CGFloat y = 0.0;
  v117.size.CGFloat width = v87;
  CGRect v118 = CGRectIntegral(v117);
  CGFloat y = v118.origin.y;
  CGFloat x = v118.origin.x;
  CGFloat v97 = v118.size.width;
  CGFloat v94 = v118.size.height;
  v118.origin.CGFloat x = v95;
  v118.origin.CGFloat y = rect;
  v118.size.CGFloat height = Height;
  v118.size.CGFloat width = Width;
  CGRect v119 = CGRectIntegral(v118);
  CGFloat v96 = v119.origin.x;
  CGFloat recta = v119.origin.y;
  CGFloat v73 = v119.size.width;
  CGFloat v74 = v119.size.height;
  v119.origin.CGFloat x = v86;
  v119.origin.CGFloat y = v88;
  v119.size.CGFloat width = v81;
  v119.size.CGFloat height = v79;
  CGRect v120 = CGRectIntegral(v119);
  CGFloat v75 = v120.origin.x;
  CGFloat v76 = v120.origin.y;
  CGFloat v77 = v120.size.width;
  CGFloat v78 = v120.size.height;
  v120.origin.CGFloat y = v102;
  v120.origin.CGFloat x = v104;
  v120.size.CGFloat width = v71;
  v120.size.CGFloat height = v72;
  CGRect v121 = CGRectIntegral(v120);
  a2->origin.CGFloat x = x;
  a2->origin.CGFloat y = y;
  a2->size.CGFloat width = v97;
  a2->size.CGFloat height = v94;
  a2[1].origin.CGFloat x = v96;
  a2[1].origin.CGFloat y = recta;
  a2[1].size.CGFloat width = v73;
  a2[1].size.CGFloat height = v74;
  a2[2].origin.CGFloat x = v75;
  a2[2].origin.CGFloat y = v76;
  a2[2].size.CGFloat width = v77;
  a2[2].size.CGFloat height = v78;
  a2[3] = v121;
}

uint64_t type metadata accessor for BilingualFeedPromptViewLayoutAttributesFactory()
{
  return self;
}

uint64_t sub_20A4CD474()
{
  swift_getObjectType();

  return sub_20A8C41C0();
}

uint64_t sub_20A4CD4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7A888](a1, a2, ObjectType, a6);
}

uint64_t sub_20A4CD534()
{
  swift_getObjectType();

  return sub_20A8C41D0();
}

uint64_t sub_20A4CD5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7A880](a1, a2, a3, a4, ObjectType, a8);
}

uint64_t sub_20A4CD624()
{
  return sub_20A8C9000();
}

void sub_20A4CD654()
{
  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, sel_viewDidLoad);
  id v1 = *(void **)&v0[OBJC_IVAR____TtC8StocksUI29StockFeedViewerViewController_blueprintPageViewController];
  objc_msgSend(v0, sel_addChildViewController_, v1);
  id v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    CGFloat v3 = v2;
    id v4 = objc_msgSend(v1, sel_view);
    if (v4)
    {
      CGFloat v5 = v4;
      objc_msgSend(v3, sel_addSubview_, v4);

      objc_msgSend(v1, sel_didMoveToParentViewController_, v0);
      id v6 = objc_msgSend(v0, sel_traitCollection);
      sub_20A4CD754((uint64_t)v6);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_20A4CD754(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = (uint64_t)&v2[OBJC_IVAR____TtC8StocksUI29StockFeedViewerViewController_styler];
  swift_beginAccess();
  sub_20A4342F4(v4, (uint64_t)v27);
  uint64_t v5 = v28;
  uint64_t v6 = v29;
  __swift_project_boxed_opaque_existential_1(v27, v28);
  uint64_t v7 = *(void *)(v6 + 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8);
  uint64_t v25 = v5;
  uint64_t v26 = v6;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v24);
  v8(a1, v5, v7);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v4);
  sub_20A42BEBC(&v24, v4);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  sub_20A4342F4(v4, (uint64_t)v27);
  CGFloat v9 = __swift_project_boxed_opaque_existential_1(v27, v28);
  id result = objc_msgSend(v2, sel_view);
  if (result)
  {
    uint64_t v11 = result;
    uint64_t v12 = *(void *)(*v9 + 40);
    uint64_t v13 = *(void *)(*v9 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(*v9 + 16), v12);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v13 + 72))(&v24, v12, v13);
    uint64_t v14 = v25;
    uint64_t v15 = v26;
    __swift_project_boxed_opaque_existential_1(&v24, v25);
    id v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 64))(v14, v15);
    objc_msgSend(v11, sel_setBackgroundColor_, v16);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    sub_20A4342F4(v4, (uint64_t)v27);
    double v17 = __swift_project_boxed_opaque_existential_1(v27, v28);
    id result = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8StocksUI29StockFeedViewerViewController_blueprintPageViewController], sel_view);
    if (result)
    {
      CGFloat v18 = result;
      uint64_t v19 = *(void *)(*v17 + 40);
      uint64_t v20 = *(void *)(*v17 + 48);
      __swift_project_boxed_opaque_existential_1((void *)(*v17 + 16), v19);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v20 + 72))(&v24, v19, v20);
      uint64_t v21 = v25;
      uint64_t v22 = v26;
      __swift_project_boxed_opaque_existential_1(&v24, v25);
      CGFloat v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 64))(v21, v22);
      objc_msgSend(v18, sel_setBackgroundColor_, v23);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
      return (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A4CDB40(char a1)
{
  id v2 = v1;
  v10.receiver = v2;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_viewWillAppear_, a1 & 1);
  swift_getObjectType();
  sub_20A8C90F0();
  if (sub_20A8C8FF0() && (sub_20A4CF814(), sub_20A43F7E0(0, &qword_26AC77D18), (swift_dynamicCast() & 1) != 0))
  {
    uint64_t v4 = *((void *)&v8 + 1);
    if (*((void *)&v8 + 1))
    {
      uint64_t v5 = v9;
      __swift_project_boxed_opaque_existential_1(&v7, *((uint64_t *)&v8 + 1));
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
    }
  }
  else
  {
    uint64_t v9 = 0;
    long long v7 = 0u;
    long long v8 = 0u;
  }
  return sub_20A49127C((uint64_t)&v7, &qword_26763B5C0, &qword_26AC77D18);
}

uint64_t sub_20A4CDDA8(char a1)
{
  v9.receiver = v1;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, sel_viewWillDisappear_, a1 & 1);
  if (sub_20A8C8FF0() && (sub_20A4CF814(), sub_20A43F7E0(0, &qword_26AC77D18), (swift_dynamicCast() & 1) != 0))
  {
    uint64_t v3 = *((void *)&v7 + 1);
    if (*((void *)&v7 + 1))
    {
      uint64_t v4 = v8;
      __swift_project_boxed_opaque_existential_1(&v6, *((uint64_t *)&v7 + 1));
      (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v6);
    }
  }
  else
  {
    uint64_t v8 = 0;
    long long v6 = 0u;
    long long v7 = 0u;
  }
  return sub_20A49127C((uint64_t)&v6, &qword_26763B5C0, &qword_26AC77D18);
}

void sub_20A4CDFA4(uint64_t a1)
{
  v15.receiver = v1;
  v15.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v15, sel_didMoveToParentViewController_, a1);
  id v3 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8StocksUI29StockFeedViewerViewController_blueprintPageViewController], sel_childViewControllers);
  sub_20A4CF814();
  unint64_t v4 = sub_20A8CE5E0();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_20A8CF540();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_13;
  }
LABEL_3:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x210527700](i, v4);
      }
      else {
        id v7 = *(id *)(v4 + 8 * i + 32);
      }
      uint64_t v8 = v7;
      id v13 = v7;
      sub_20A43F7E0(0, &qword_26AC75278);
      id v9 = v8;
      if (swift_dynamicCast())
      {
        sub_20A42BEBC(v11, (uint64_t)v14);
        id v10 = objc_msgSend((id)*__swift_project_boxed_opaque_existential_1(v14, v14[3]), sel_parentViewController);
        sub_20A8C7F20();

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
      }
      else
      {
        uint64_t v12 = 0;
        memset(v11, 0, sizeof(v11));

        sub_20A49127C((uint64_t)v11, &qword_26AC75280, &qword_26AC75278);
      }
    }
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_20A4CE218(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  swift_getObjectType();
  uint64_t v7 = type metadata accessor for StockFeedPage();
  MEMORY[0x270FA5388](v7 - 8);
  id v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StockFeedViewerPage();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4CF7CC(&qword_26AC79898, v13, (void (*)(uint64_t))type metadata accessor for StockFeedViewerViewController);
  sub_20A8CA160();
  sub_20A4CF7CC(&qword_26AC798A0, v14, (void (*)(uint64_t))type metadata accessor for StockFeedViewerViewController);
  sub_20A8CA500();
  sub_20A4CF7CC(&qword_26AC798B8, v15, (void (*)(uint64_t))type metadata accessor for StockFeedViewerViewController);
  sub_20A8C7EB0();
  sub_20A4CF7CC(&qword_26AC798A8, v16, (void (*)(uint64_t))type metadata accessor for StockFeedViewerViewController);
  sub_20A8CAD10();
  if (a4
    && (uint64_t v25 = a4,
        sub_20A4CF814(),
        sub_20A43F7E0(0, &qword_26AC77D18),
        id v17 = a4,
        (swift_dynamicCast() & 1) != 0))
  {
    uint64_t v18 = *((void *)&v27 + 1);
    if (*((void *)&v27 + 1))
    {
      uint64_t v19 = v28;
      __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
      (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v28 = 0;
    long long v26 = 0u;
    long long v27 = 0u;
  }
  sub_20A49127C((uint64_t)&v26, &qword_26763B5C0, &qword_26AC77D18);
LABEL_7:
  uint64_t v25 = a3;
  sub_20A4CF814();
  sub_20A43F7E0(0, &qword_26AC77D18);
  a3;
  if (swift_dynamicCast())
  {
    uint64_t v20 = *((void *)&v27 + 1);
    uint64_t v21 = v28;
    __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  }
  else
  {
    uint64_t v28 = 0;
    long long v26 = 0u;
    long long v27 = 0u;
    sub_20A49127C((uint64_t)&v26, &qword_26763B5C0, &qword_26AC77D18);
  }
  uint64_t result = sub_20A8CEB70();
  if ((result & 1) == 0)
  {
    sub_20A4C9484(a2, (uint64_t)v12);
    sub_20A4C94E8((uint64_t)v12, (uint64_t)v9);
    CGFloat v23 = (void (*)(uint64_t))off_26BE67F90[0];
    type metadata accessor for StockFeedViewerInteractor();
    v23((uint64_t)v9);
    return sub_20A4CF854((uint64_t)v9);
  }
  return result;
}

uint64_t sub_20A4CE5BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C010](a1, a2, a3, a4, a5, ObjectType, a7);
}

uint64_t sub_20A4CE63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7BFE8](a1, a2, ObjectType, a4);
}

uint64_t sub_20A4CE694(uint64_t a1, uint64_t a2, uint64_t a3, double a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = swift_getObjectType();
  v12.n128_f64[0] = a4;

  return MEMORY[0x270F7BFF8](a1, a2, a3, ObjectType, a6, v12);
}

uint64_t sub_20A4CE70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C018](a1, a2, a3, a4, a5, ObjectType, a7);
}

uint64_t sub_20A4CE78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7BFE8](a1, a2, ObjectType, a4);
}

uint64_t sub_20A4CE7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7BFF0](a1, a2, a3, ObjectType, a5);
}

uint64_t sub_20A4CE854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7BFE8](a1, a2, ObjectType, a4);
}

uint64_t sub_20A4CE8AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_20A8CA180();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C8FF0();
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      id v9 = v8;
    }
    else {
      id v9 = 0;
    }
    if (v9)
    {
      swift_getObjectType();
      sub_20A8CB020();
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (result == *MEMORY[0x263F7DB28] || result == *MEMORY[0x263F7DB50]) {
    return sub_20A8C9010();
  }
  if (result != *MEMORY[0x263F7DB58]
    && result != *MEMORY[0x263F7DB48]
    && result != *MEMORY[0x263F7DB60]
    && result != *MEMORY[0x263F7DB40]
    && result != *MEMORY[0x263F7DB38]
    && result != *MEMORY[0x263F7DB30])
  {
    uint64_t result = sub_20A8CF520();
    __break(1u);
  }
  return result;
}

uint64_t sub_20A4CEAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C3F0](a1, a2, ObjectType, a4);
}

uint64_t sub_20A4CEB50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A4CEB80(a1, a2, a3, a4, MEMORY[0x263F7DF20]);
}

uint64_t sub_20A4CEB68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A4CEB80(a1, a2, a3, a4, MEMORY[0x263F7DF38]);
}

uint64_t sub_20A4CEB80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = sub_20A8C8FF0();
  if (v8)
  {
    id v9 = (void *)v8;
    swift_getObjectType();
    uint64_t v10 = swift_conformsToProtocol2();
    if (v10) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    if (v10) {
      __n128 v12 = v9;
    }
    else {
      __n128 v12 = 0;
    }
    if (v12)
    {
      uint64_t ObjectType = swift_getObjectType();
      a5(a1, a2, ObjectType, v11);
    }
  }
  return sub_20A8C9010();
}

uint64_t sub_20A4CEC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C400](a1, a2, a3, ObjectType, a5);
}

uint64_t sub_20A4CECA4(uint64_t a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  v8.n128_f64[0] = a2;

  return MEMORY[0x270F7C428](a1, ObjectType, a4, v8);
}

void sub_20A4CED04()
{
  swift_getObjectType();

  JUMPOUT(0x2105233C0);
}

void sub_20A4CED5C()
{
  swift_getObjectType();

  JUMPOUT(0x2105233D0);
}

uint64_t sub_20A4CEDC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20A8C8EB0();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  __n128 v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == *MEMORY[0x263F7D5D8])
  {
    uint64_t v10 = *MEMORY[0x263F7DB50];
    uint64_t v11 = sub_20A8CA180();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(a2, v10, v11);
    __n128 v12 = (unsigned int *)MEMORY[0x263F7DB10];
LABEL_5:
    uint64_t v15 = *v12;
    uint64_t v16 = sub_20A8CA140();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(a2, v15, v16);
  }
  if (v9 == *MEMORY[0x263F7D5D0])
  {
    uint64_t v13 = *MEMORY[0x263F7DAE8];
    uint64_t v14 = sub_20A8CA120();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(a2, v13, v14);
    __n128 v12 = (unsigned int *)MEMORY[0x263F7DAF0];
    goto LABEL_5;
  }
  uint64_t result = sub_20A8CF520();
  __break(1u);
  return result;
}

uint64_t sub_20A4CF010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A4CEDC4(a1, a2);
}

uint64_t sub_20A4CF028()
{
  if (sub_20A8C8FF0() && (sub_20A4CF814(), sub_20A43F7E0(0, &qword_26AC6A630), (swift_dynamicCast() & 1) != 0))
  {
    if (*((void *)&v2 + 1))
    {
      sub_20A42BEBC(&v1, (uint64_t)v4);
      __swift_project_boxed_opaque_existential_1(v4, v4[3]);
      sub_20A8CA4F0();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
    }
  }
  else
  {
    uint64_t v3 = 0;
    long long v1 = 0u;
    long long v2 = 0u;
  }
  sub_20A49127C((uint64_t)&v1, &qword_26763B5C8, &qword_26AC6A630);
  return sub_20A8C8ED0();
}

uint64_t sub_20A4CF128()
{
  return sub_20A4CF028();
}

uint64_t sub_20A4CF14C()
{
  if (sub_20A8C8FF0()
    && (sub_20A4CF814(), sub_20A43F7E0(0, (unint64_t *)&unk_26AC6A560), (swift_dynamicCast() & 1) != 0))
  {
    if (*((void *)&v2 + 1))
    {
      sub_20A42BEBC(&v1, (uint64_t)v4);
      __swift_project_boxed_opaque_existential_1(v4, v4[3]);
      sub_20A8CA150();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
    }
  }
  else
  {
    uint64_t v3 = 0;
    long long v1 = 0u;
    long long v2 = 0u;
  }
  sub_20A49127C((uint64_t)&v1, &qword_26AC80B30, (unint64_t *)&unk_26AC6A560);
  return sub_20A8C8970();
}

uint64_t sub_20A4CF24C()
{
  return sub_20A4CF14C();
}

id sub_20A4CF270()
{
  if (!sub_20A8C8FF0() || (sub_20A4CF814(), sub_20A43F7E0(0, &qword_26AC69CF8), (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v4 = 0;
    long long v2 = 0u;
    long long v3 = 0u;
    goto LABEL_6;
  }
  if (!*((void *)&v3 + 1))
  {
LABEL_6:
    sub_20A49127C((uint64_t)&v2, &qword_26763B5D0, &qword_26AC69CF8);
    return objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  }
  sub_20A42BEBC(&v2, (uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  uint64_t v0 = sub_20A8C7EA0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return (id)v0;
}

uint64_t sub_20A4CF394()
{
  uint64_t v0 = sub_20A8C8FF0();
  if (!v0 || (v6[0] = v0, sub_20A4CF814(), sub_20A43F7E0(0, &qword_26AC69CF8), (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v5 = 0;
    long long v3 = 0u;
    long long v4 = 0u;
    goto LABEL_6;
  }
  if (!*((void *)&v4 + 1))
  {
LABEL_6:
    sub_20A49127C((uint64_t)&v3, &qword_26763B5D0, &qword_26AC69CF8);
    char v1 = 0;
    return v1 & 1;
  }
  sub_20A42BEBC(&v3, (uint64_t)v6);
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  char v1 = sub_20A8C7E90();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  return v1 & 1;
}

id sub_20A4CF490()
{
  return sub_20A4CF270();
}

uint64_t sub_20A4CF4B4()
{
  return sub_20A4CF394() & 1;
}

id sub_20A4CF4DC()
{
  id result = (id)sub_20A8C8FF0();
  if (!result)
  {
    return v1;
  }
  return result;
}

void sub_20A4CF53C(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_horizontalSizeClass);

  if (v4 == (id)1)
  {
    char v6 = 0;
    uint64_t v5 = 0x4030000000000000;
  }
  else
  {
    uint64_t v5 = 0;
    char v6 = 1;
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = v6;
}

void sub_20A4CF5C4(uint64_t a1)
{
  uint64_t v3 = *MEMORY[0x263F8EED0] & *v1;
  id v4 = (void *)sub_20A8C9350();
  (*(void (**)(void, uint64_t))(a1 + 8))(*(void *)(v3 + *MEMORY[0x263F7D758]), a1);
}

void sub_20A4CF668(uint64_t a1)
{
  uint64_t v3 = *MEMORY[0x263F8EED0] & *v1;
  id v4 = (void *)sub_20A8C9350();
  (*(void (**)(void, uint64_t))(a1 + 16))(*(void *)(v3 + *MEMORY[0x263F7D758]), a1);
}

void sub_20A4CF70C(uint64_t a1, uint64_t a2)
{
}

void sub_20A4CF734(uint64_t a1, uint64_t a2)
{
}

uint64_t type metadata accessor for StockFeedViewerViewController()
{
  return self;
}

uint64_t sub_20A4CF780()
{
  return sub_20A4CF7CC(&qword_26AC71328, 255, (void (*)(uint64_t))type metadata accessor for StockFeedViewerPage);
}

uint64_t sub_20A4CF7CC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A4CF814()
{
  unint64_t result = qword_26AC7F920;
  if (!qword_26AC7F920)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC7F920);
  }
  return result;
}

uint64_t sub_20A4CF854(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockFeedPage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_20A4CF8B0(uint64_t a1)
{
  return sub_20A4CFA8C(a1, (void (*)(void))sub_20A4D3BB8, (uint64_t)&qword_26AC7FA10, (uint64_t)type metadata accessor for Key, (uint64_t (*)(uint64_t))sub_20A4D1CA0);
}

unint64_t sub_20A4CF8F8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_20A4D4428(0, &qword_26763B640);
  uint64_t v2 = (void *)sub_20A8CF570();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  id v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_20A4D1B24(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    __n128 v12 = (void *)(v2[7] + 16 * result);
    *__n128 v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A4CFA28(uint64_t a1)
{
  return sub_20A4CFD50(a1, (unint64_t *)&qword_26AC7FDA8, (uint64_t)&unk_26AC7F8F0, 0x263F08790);
}

unint64_t sub_20A4CFA44(uint64_t a1)
{
  return sub_20A4CFA8C(a1, (void (*)(void))sub_20A4D39AC, (uint64_t)&unk_26763B638, (uint64_t)type metadata accessor for OpenExternalURLOptionsKey, (uint64_t (*)(uint64_t))sub_20A4D1CA0);
}

unint64_t sub_20A4CFA8C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    char v10 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  a2(0);
  uint64_t v9 = sub_20A8CF570();
  char v10 = (void *)v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v10;
  }
  uint64_t v12 = v9 + 64;
  uint64_t v13 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_20A4D3A4C(v13, (uint64_t)&v20, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))sub_20A4D3CF8);
    uint64_t v14 = v20;
    unint64_t result = a5(v20);
    if (v16) {
      break;
    }
    *(void *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v10[6] + 8 * result) = v14;
    unint64_t result = (unint64_t)sub_20A441D28(&v21, (_OWORD *)(v10[7] + 32 * result));
    uint64_t v17 = v10[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_11;
    }
    long long v10[2] = v19;
    v13 += 40;
    if (!--v11)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A4CFBE4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_20A4D4428(0, (unint64_t *)&unk_26AC7FDC0);
  uint64_t v2 = sub_20A8CF570();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_20A4D3F18(v6, (uint64_t)&v15, (uint64_t (*)(void))sub_20A4D27BC);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_20A4D1B24(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_20A441D28(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A4CFD34(uint64_t a1)
{
  return sub_20A4CFD50(a1, &qword_26763B648, (uint64_t)&unk_26763B650, 0x263F59460);
}

unint64_t sub_20A4CFD50(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v5 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_20A4D4154(0, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_20A42CFF0);
  uint64_t v5 = (void *)sub_20A8CF570();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v8 = (uint64_t)*(v7 - 2);
    uint64_t v9 = (uint64_t)*(v7 - 1);
    char v10 = *v7;
    swift_bridgeObjectRetain();
    id v11 = v10;
    unint64_t result = sub_20A4D1B24(v8, v9);
    if (v13) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v14 = (uint64_t *)(v5[6] + 16 * result);
    uint64_t *v14 = v8;
    v14[1] = v9;
    *(void *)(v5[7] + 8 * result) = v11;
    uint64_t v15 = v5[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    _OWORD v5[2] = v17;
    v7 += 3;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A4CFE7C(uint64_t a1)
{
  sub_20A4D4314(0, (unint64_t *)&unk_26AC7F688, MEMORY[0x263F7AEF0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (void *)((char *)v26 - v5);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_20A4D41C0(0, &qword_26763B660, MEMORY[0x263F7AEF0]);
  uint64_t v7 = sub_20A8CF570();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  char v10 = (char *)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_20A4D3A4C(v13, (uint64_t)v6, (uint64_t)&unk_26AC7F688, MEMORY[0x263F7AEF0], (uint64_t (*)(void, uint64_t, uint64_t))sub_20A4D4314);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_20A4D1B24(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = sub_20A8C3E10();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v10, v22);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    long long v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A4D00D0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_20A4D3D60();
  uint64_t v2 = (void *)sub_20A8CF570();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_20A4D1CA0((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A4D01D8(uint64_t a1)
{
  return sub_20A4CFA8C(a1, (void (*)(void))sub_20A4D3C58, (uint64_t)&unk_26AC7FB08, (uint64_t)type metadata accessor for AttributeName, (uint64_t (*)(uint64_t))sub_20A4D1CA0);
}

unint64_t sub_20A4D0220(uint64_t a1)
{
  return sub_20A4D09F8(a1, (unint64_t *)&unk_26763B668, (uint64_t)&qword_26AC7F990, (uint64_t)&protocolRef_FCHeadlineProviding);
}

unint64_t sub_20A4D023C(uint64_t a1)
{
  sub_20A4D3DFC();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_20A4D3E6C();
  uint64_t v7 = sub_20A8CF570();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_20A4D3F18(v13, (uint64_t)v6, (uint64_t (*)(void))sub_20A4D3DFC);
    unint64_t result = sub_20A4D1B9C((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_20A8C2AF0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    long long v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A4D0434(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_20A4D3ABC();
  uint64_t v2 = (void *)sub_20A8CF570();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_20A4D1B24(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A4D054C(uint64_t a1)
{
  sub_20A4D4314(0, (unint64_t *)&unk_26AC82708, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupKnobs);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (void *)((char *)v26 - v5);
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_20A4D41C0(0, (unint64_t *)&unk_26AC7FD90, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupKnobs);
  uint64_t v7 = sub_20A8CF570();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (uint64_t)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_20A4D3A4C(v13, (uint64_t)v6, (uint64_t)&unk_26AC82708, (uint64_t)type metadata accessor for CuratedForYouFeedGroupKnobs, (uint64_t (*)(void, uint64_t, uint64_t))sub_20A4D4314);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_20A4D1B24(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = type metadata accessor for CuratedForYouFeedGroupKnobs();
    unint64_t result = sub_20A4D4224(v10, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    long long v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A4D0788(uint64_t a1)
{
  sub_20A4D4314(0, (unint64_t *)&qword_26AC7F698, MEMORY[0x263F7AF08]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (void *)((char *)v26 - v5);
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_20A4D41C0(0, (unint64_t *)&qword_26AC7FD80, MEMORY[0x263F7AF08]);
  uint64_t v7 = sub_20A8CF570();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (char *)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_20A4D3A4C(v13, (uint64_t)v6, (uint64_t)&qword_26AC7F698, MEMORY[0x263F7AF08], (uint64_t (*)(void, uint64_t, uint64_t))sub_20A4D4314);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_20A4D1B24(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = sub_20A8C3F00();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v10, v22);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    long long v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A4D09DC(uint64_t a1)
{
  return sub_20A4D09F8(a1, &qword_26AC7FDB8, (uint64_t)&qword_26AC7FBD0, (uint64_t)&protocolRef_CAAction);
}

unint64_t sub_20A4D09F8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v5 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_20A4D4154(0, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_20A4D42C0);
  uint64_t v5 = (void *)sub_20A8CF570();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v8 = *(v7 - 2);
    uint64_t v9 = *(v7 - 1);
    uint64_t v10 = *v7;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    unint64_t result = sub_20A4D1B24(v8, v9);
    if (v12) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (uint64_t *)(v5[6] + 16 * result);
    *uint64_t v13 = v8;
    v13[1] = v9;
    *(void *)(v5[7] + 8 * result) = v10;
    uint64_t v14 = v5[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    _OWORD v5[2] = v16;
    v7 += 3;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20A4D0B24@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

id StocksAudioTrack.duration.getter()
{
  id v1 = *(void **)(v0 + *(int *)(type metadata accessor for StocksAudioTrack() + 24));

  return objc_msgSend(v1, sel_duration);
}

uint64_t type metadata accessor for StocksAudioTrack()
{
  uint64_t result = qword_26AC6B930;
  if (!qword_26AC6B930) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_20A4D0C04@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_20A4D0C10(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_20A4D0C18@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_20A4D0C2C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_20A4D0C40@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_20A4D0C54(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_20A4D0C84@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_20A4D0CB0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}