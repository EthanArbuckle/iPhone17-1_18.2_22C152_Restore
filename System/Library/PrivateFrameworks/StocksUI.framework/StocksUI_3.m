uint64_t sub_20A64D010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t vars8;

  if (a2 == 0x7FFFFFFF)
  {
    v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    v8 = sub_20A8C2E80();
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    v10 = v8;
    v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_20A64D0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A64D0D4);
}

uint64_t sub_20A64D0D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_20A8C2E80();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for StockListWatchlistChangeBlueprintModifier()
{
  uint64_t result = qword_26AC81880;
  if (!qword_26AC81880) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A64D1C8()
{
  uint64_t result = sub_20A8C2E80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_20A64D270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  sub_20A64F168(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v6);
  v11 = (char *)&v24 - v10;
  uint64_t v12 = type metadata accessor for StockListWatchlistChangeBlueprintModifier();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12 - 8);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = v4;
  sub_20A8C2EF0();
  sub_20A8C6670();
  sub_20A64F3D8(v4, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockListWatchlistChangeBlueprintModifier);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v24, v7);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v17 = (v14 + *(unsigned __int8 *)(v8 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v18 = swift_allocObject();
  sub_20A64F440((uint64_t)v15, v18 + v16, (uint64_t (*)(void))type metadata accessor for StockListWatchlistChangeBlueprintModifier);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v18 + v17, v11, v7);
  v19 = (void *)(v18 + ((v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v20 = v25;
  void *v19 = v25;
  v19[1] = a3;
  swift_retain();
  v21 = (void *)sub_20A8C6450();
  sub_20A8C6500();
  swift_release();
  swift_release();

  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v20;
  *(void *)(v22 + 24) = a3;
  swift_retain();
  v23 = (void *)sub_20A8C6450();
  sub_20A8C6550();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_20A64D574(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockListWatchlistChangeBlueprintModifier();
  __swift_project_boxed_opaque_existential_1((void *)(a1 + *(int *)(v2 + 28)), *(void *)(a1 + *(int *)(v2 + 28) + 24));
  sub_20A8C2E10();
  uint64_t v3 = sub_20A8C39E0();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_20A64D600(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5)
{
  uint64_t v100 = a5;
  v101 = a4;
  uint64_t v110 = a3;
  uint64_t v91 = a1;
  sub_20A64F168(0, &qword_26AC6A428, MEMORY[0x263F7D950]);
  uint64_t v99 = v6;
  uint64_t v98 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  v97 = (char *)&v81 - v7;
  uint64_t v104 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v104);
  v83 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D93C();
  uint64_t v94 = v9;
  uint64_t v84 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  v82 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A64F168(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v107 = *(void *)(v11 - 8);
  uint64_t v108 = v11;
  MEMORY[0x270FA5388](v11);
  v111 = (char *)&v81 - v12;
  sub_20A4AE540();
  MEMORY[0x270FA5388](v13 - 8);
  v81 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A47113C();
  MEMORY[0x270FA5388](v15 - 8);
  v93 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  v92 = (char *)&v81 - v18;
  sub_20A64F168(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  uint64_t v96 = v19;
  uint64_t v95 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  v21 = (char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  v109 = (char *)&v81 - v23;
  uint64_t v103 = sub_20A8C40E0();
  uint64_t v89 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  v90 = (char *)&v81 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  v27 = (char *)&v81 - v26;
  uint64_t v28 = type metadata accessor for StockListWatchlistChangeBlueprintModifier();
  MEMORY[0x270FA5388](v28);
  v30 = (char *)&v81 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5726A4(0);
  MEMORY[0x270FA5388](v31 - 8);
  v33 = (char *)&v81 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_20A8C34C0();
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  v37 = (char *)&v81 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4342F4(a2 + *(int *)(v28 + 32), (uint64_t)&v116);
  uint64_t v87 = v118;
  uint64_t v88 = v117;
  v86 = __swift_project_boxed_opaque_existential_1(&v116, v117);
  uint64_t v102 = v28;
  uint64_t v85 = sub_20A8C2E10();
  sub_20A8C2E40();
  v106 = (char *)a2;
  sub_20A64F3D8(a2, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StockListWatchlistChangeBlueprintModifier);
  int v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34);
  v105 = v21;
  if (v38 == 1)
  {
    __swift_project_boxed_opaque_existential_1(&v30[*(int *)(v102 + 24)], *(void *)&v30[*(int *)(v102 + 24) + 24]);
    sub_20A8C3600();
    sub_20A8C40D0();
    uint64_t v39 = v89;
    (*(void (**)(char *, uint64_t))(v89 + 8))(v27, v103);
    sub_20A64F228((uint64_t)v33, (uint64_t (*)(void))sub_20A5726A4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v37, v33, v34);
    uint64_t v39 = v89;
  }
  sub_20A64F228((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StockListWatchlistChangeBlueprintModifier);
  uint64_t v91 = sub_20A8C3B10();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v116);
  v40 = &v106[*(int *)(v102 + 24)];
  __swift_project_boxed_opaque_existential_1(v40, *((void *)v40 + 3));
  sub_20A8C3600();
  uint64_t v89 = sub_20A8C4070();
  uint64_t v102 = v41;
  v42 = *(void (**)(char *, uint64_t))(v39 + 8);
  v43 = v27;
  uint64_t v44 = v103;
  v42(v43, v103);
  __swift_project_boxed_opaque_existential_1(v40, *((void *)v40 + 3));
  v45 = v90;
  sub_20A8C3600();
  uint64_t v88 = sub_20A8C4050();
  uint64_t v47 = v46;
  v42(v45, v44);
  __swift_project_boxed_opaque_existential_1(v40, *((void *)v40 + 3));
  uint64_t v48 = sub_20A8C3690();
  uint64_t v49 = (uint64_t)v92;
  sub_20A8CBB90();
  uint64_t v50 = v95;
  uint64_t v51 = v96;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v49, 1, v96) == 1)
  {
    v112[0] = v89;
    v112[1] = v102;
    v112[2] = v88;
    uint64_t v113 = v47;
    uint64_t v114 = v48;
    char v115 = 0;
    uint64_t v52 = sub_20A64F290(&qword_26AC69D98, (void (*)(uint64_t))sub_20A42D93C);
    uint64_t v53 = sub_20A64F290(&qword_26AC69D90, (void (*)(uint64_t))sub_20A42D93C);
    MEMORY[0x21051E240](MEMORY[0x263F8EE78], v94, v52, v53);
    sub_20A42D40C();
    sub_20A64F290(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    sub_20A8C8810();
    uint64_t v54 = sub_20A64F228(v49, (uint64_t (*)(void))sub_20A47113C);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v54 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 32))(v109, v49, v51);
  }
  v55 = v111;
  MEMORY[0x270FA5388](v54);
  *(&v81 - 2) = v106;
  sub_20A8C3F00();
  sub_20A64F290(&qword_26AC82440, MEMORY[0x263F7AF08]);
  v56 = v105;
  sub_20A8C8840();
  swift_bridgeObjectRelease();
  v57 = v55;
  uint64_t v58 = v108;
  v106 = *(char **)(v107 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v106)(v57, v110, v108);
  sub_20A44D574();
  sub_20A8CE840();
  sub_20A8CE8A0();
  if (v112[0] == v119)
  {
    swift_storeEnumTagMultiPayload();
    sub_20A64F290(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    v59 = v82;
    sub_20A8C8320();
    sub_20A8C8880();
    v60 = v59;
    uint64_t v58 = v108;
    (*(void (**)(char *, uint64_t))(v84 + 8))(v60, v94);
  }
  else
  {
    sub_20A8CBAA0();
  }
  uint64_t v61 = (uint64_t)v93;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v93, v109, v51);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v61, 0, 1, v51);
  sub_20A8CBA30();
  sub_20A64F228(v61, (uint64_t (*)(void))sub_20A47113C);
  sub_20A4FBD1C();
  sub_20A42D40C();
  uint64_t v62 = v50;
  sub_20A64F290(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
  sub_20A8C9300();
  v63 = v56;
  __swift_project_boxed_opaque_existential_1(v112, v113);
  if (sub_20A8C8B90())
  {
    uint64_t v64 = v98;
    v65 = v97;
    uint64_t v66 = v99;
    (*(void (**)(char *, void, uint64_t))(v98 + 104))(v97, *MEMORY[0x263F7D948], v99);
    v101(v65);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v111, v58);
    v67 = *(void (**)(char *, uint64_t))(v62 + 8);
    v67(v63, v51);
    v67(v109, v51);
  }
  else
  {
    sub_20A64F2D8();
    uint64_t v69 = v62;
    uint64_t v70 = v51;
    v71 = v97;
    uint64_t v72 = (uint64_t)&v97[*(int *)(v68 + 48)];
    v73 = &v97[*(int *)(v68 + 64)];
    v74 = v111;
    ((void (*)(char *, char *, uint64_t))v106)(v97, v111, v58);
    sub_20A4342F4((uint64_t)v112, v72);
    uint64_t v75 = *MEMORY[0x263F7D528];
    uint64_t v76 = sub_20A8C8B80();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v76 - 8) + 104))(v73, v75, v76);
    uint64_t v77 = v98;
    uint64_t v78 = v99;
    (*(void (**)(char *, void, uint64_t))(v98 + 104))(v71, *MEMORY[0x263F7D940], v99);
    v101(v71);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v71, v78);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v74, v58);
    v79 = *(void (**)(char *, uint64_t))(v69 + 8);
    v79(v105, v70);
    v79(v109, v70);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v112);
}

uint64_t sub_20A64E538@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v70 = a3;
  uint64_t v4 = sub_20A8C4030();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v69 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v68 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C3410();
  uint64_t v66 = *(void *)(v8 - 8);
  uint64_t v67 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v64 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C40E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v73 = v10;
  uint64_t v74 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A609C6C(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C470(0);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v63 = (uint64_t)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  v21 = (char *)&v57 - v20;
  uint64_t v71 = (uint64_t)&v57 - v20;
  uint64_t v22 = sub_20A8C3F00();
  uint64_t v62 = *(void *)(v22 - 8);
  uint64_t v23 = v62;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v25;
  uint64_t v26 = type metadata accessor for StockViewModel();
  v27 = (int *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v65 = (uint64_t)&v57 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v30 = MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v57 - v31;
  uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t, double))(v23 + 16);
  uint64_t v59 = v22;
  uint64_t v33 = a1;
  uint64_t v34 = v22;
  v58(v25, v33, v22, v30);
  uint64_t v35 = sub_20A8C3E10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v21, 1, 1, v35);
  uint64_t v36 = type metadata accessor for StockSparklineViewModel(0);
  v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56);
  v57 = v16;
  v37(v16, 1, 1, v36);
  int v38 = &v61[*(int *)(type metadata accessor for StockListWatchlistChangeBlueprintModifier() + 24)];
  __swift_project_boxed_opaque_existential_1(v38, *((void *)v38 + 3));
  v60 = v13;
  sub_20A8C3600();
  uint64_t v39 = v64;
  sub_20A8C4060();
  v40 = *(char **)(v74 + 8);
  v74 += 8;
  uint64_t v61 = v40;
  ((void (*)(char *, uint64_t))v40)(v13, v73);
  ((void (*)(char *, char *, uint64_t))v58)(v32, v72, v34);
  uint64_t v41 = v71;
  sub_20A64F3D8(v71, (uint64_t)&v32[v27[7]], (uint64_t (*)(void))sub_20A42C470);
  sub_20A64F3D8((uint64_t)v16, (uint64_t)&v32[v27[8]], (uint64_t (*)(void))sub_20A609C6C);
  uint64_t v43 = v66;
  uint64_t v42 = v67;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(&v32[v27[10]], v39, v67);
  v32[v27[11]] = 0;
  uint64_t v44 = v63;
  sub_20A64F3D8(v41, v63, (uint64_t (*)(void))sub_20A42C470);
  v45 = v69;
  uint64_t v46 = v72;
  sub_20A8C3E70();
  uint64_t v47 = v68;
  sub_20A5EC850(v44, v45, 9666786, 0xA300000000000000, v68);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v39, v42);
  sub_20A64F228((uint64_t)v57, (uint64_t (*)(void))sub_20A609C6C);
  sub_20A64F228(v71, (uint64_t (*)(void))sub_20A42C470);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v46, v59);
  sub_20A64F440(v47, (uint64_t)&v32[v27[9]], (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  uint64_t v48 = v65;
  sub_20A64F3D8((uint64_t)v32, v65, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  __swift_project_boxed_opaque_existential_1(v38, *((void *)v38 + 3));
  LOBYTE(v47) = sub_20A8C36F0();
  __swift_project_boxed_opaque_existential_1(v38, *((void *)v38 + 3));
  uint64_t v49 = v60;
  sub_20A8C3600();
  uint64_t v50 = sub_20A8C4050();
  uint64_t v52 = v51;
  ((void (*)(char *, uint64_t))v61)(v49, v73);
  sub_20A64F228((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  uint64_t v53 = v70;
  sub_20A64F440(v48, v70, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  uint64_t v54 = type metadata accessor for StockListStockModel(0);
  *(unsigned char *)(v53 + *(int *)(v54 + 20)) = v47 & 1;
  v55 = (uint64_t *)(v53 + *(int *)(v54 + 24));
  uint64_t *v55 = v50;
  v55[1] = v52;
  type metadata accessor for StockListModel(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_20A64EC44(void *a1, void (*a2)(char *))
{
  sub_20A64F168(0, &qword_26AC6A428, MEMORY[0x263F7D950]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  double v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v12 - v8;
  *(uint64_t *)((char *)&v12 - v8) = (uint64_t)a1;
  (*(void (**)(char *, void, uint64_t, double))(v6 + 104))((char *)&v12 - v8, *MEMORY[0x263F7D930], v5, v7);
  id v10 = a1;
  a2(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_20A64ED6C()
{
  return sub_20A64F290(&qword_26AC826F0, (void (*)(uint64_t))type metadata accessor for StockListWatchlistChangeBlueprintModifier);
}

uint64_t sub_20A64EDB4()
{
  return sub_20A64F290(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
}

uint64_t sub_20A64EDFC()
{
  return sub_20A64D574(*(void *)(v0 + 16));
}

uint64_t sub_20A64EE18()
{
  unint64_t v1 = (int *)(type metadata accessor for StockListWatchlistChangeBlueprintModifier() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = v2 + *(void *)(*(void *)v1 + 64);
  sub_20A64F168(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  unint64_t v7 = (v3 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v0 + v2;
  swift_bridgeObjectRelease();
  unint64_t v9 = v0 + v2 + v1[7];
  uint64_t v10 = sub_20A8C2E80();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  __swift_destroy_boxed_opaque_existential_1(v8 + v1[8]);
  __swift_destroy_boxed_opaque_existential_1(v8 + v1[9]);
  __swift_destroy_boxed_opaque_existential_1(v8 + v1[10]);
  __swift_destroy_boxed_opaque_existential_1(v8 + v1[11]);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A64EFFC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for StockListWatchlistChangeBlueprintModifier() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  sub_20A64F168(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(*(void *)(v6 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  unint64_t v8 = (*(void *)(*(void *)(v6 - 8) + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_20A64D600(a1, v1 + v4, v1 + v7, *(void (**)(char *))(v1 + v8), *(void *)(v1 + v8 + 8));
}

uint64_t sub_20A64F128()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A64F160(void *a1)
{
  return sub_20A64EC44(a1, *(void (**)(char *))(v1 + 16));
}

void sub_20A64F168(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for StockListSectionDescriptor;
    v8[1] = type metadata accessor for StockListModel(255);
    v8[2] = sub_20A42D40C();
    v8[3] = sub_20A64F290(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A64F228(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A64F288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A64E538(a1, *(char **)(v2 + 16), a2);
}

uint64_t sub_20A64F290(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A64F2D8()
{
  if (!qword_26763CCD0)
  {
    sub_20A64F168(255, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
    sub_20A64F380();
    sub_20A8C8B80();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26763CCD0);
    }
  }
}

unint64_t sub_20A64F380()
{
  unint64_t result = qword_26AC69F88;
  if (!qword_26AC69F88)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC69F88);
  }
  return result;
}

uint64_t sub_20A64F3D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A64F440(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A64F4A8(uint64_t a1, void (*a2)(uint64_t *), void (*a3)(uint64_t *))
{
  uint64_t v67 = a2;
  uint64_t v68 = a3;
  sub_20A65246C(0, &qword_26AC6A430, MEMORY[0x263F7D950]);
  uint64_t v65 = v5;
  uint64_t v6 = *((void *)v5 - 1);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (uint64_t *)((char *)&v52 - v7);
  uint64_t v9 = type metadata accessor for ForYouFeedExpandBlueprintModifier();
  uint64_t v57 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v58 = v10;
  uint64_t v61 = (uint64_t)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A65246C(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v12 = v11;
  uint64_t v59 = *(void *)(v11 - 8);
  uint64_t v56 = *(void *)(v59 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v63 = (char *)&v52 - v13;
  sub_20A652530();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A65246C(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  MEMORY[0x270FA5388](v17);
  uint64_t v62 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v52 - v22;
  uint64_t v60 = v3;
  uint64_t v64 = v12;
  uint64_t v24 = a1;
  sub_20A8CBAC0();
  uint64_t v69 = v19;
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  uint64_t v66 = v18;
  if (v25(v16, 1, v18) == 1)
  {
    sub_20A652AF8((uint64_t)v16, (uint64_t (*)(void))sub_20A652530);
    sub_20A6525A4();
    *unint64_t v8 = swift_allocError();
    uint64_t v26 = v65;
    (*(void (**)(uint64_t *, void, char *))(v6 + 104))(v8, *MEMORY[0x263F7D930], v65);
    v67(v8);
    return (*(uint64_t (**)(uint64_t *, char *))(v6 + 8))(v8, v26);
  }
  else
  {
    uint64_t v28 = v6;
    uint64_t v29 = v65;
    double v30 = v23;
    v55 = *(void (**)(char *, char *, uint64_t))(v69 + 32);
    v55(v23, v16, v66);
    uint64_t v31 = sub_20A63CA8C();
    if (v32)
    {
      sub_20A6525A4();
      *unint64_t v8 = swift_allocError();
      (*(void (**)(uint64_t *, void, char *))(v28 + 104))(v8, *MEMORY[0x263F7D930], v29);
      v67(v8);
      (*(void (**)(uint64_t *, char *))(v28 + 8))(v8, v29);
      return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v23, v66);
    }
    else
    {
      MEMORY[0x270FA5388](v31);
      uint64_t v33 = v60;
      *(&v52 - 2) = v60;
      uint64_t v53 = v34;
      sub_20A60DB38();
      uint64_t v54 = sub_20A8C6670();
      uint64_t v35 = v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v63, v24, v64);
      uint64_t v36 = v61;
      sub_20A652A90(v33, v61, (uint64_t (*)(void))type metadata accessor for ForYouFeedExpandBlueprintModifier);
      uint64_t v37 = v69;
      int v38 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
      uint64_t v39 = v30;
      uint64_t v65 = v30;
      uint64_t v40 = v66;
      v38(v62, v39, v66);
      unint64_t v41 = (*(unsigned __int8 *)(v35 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      unint64_t v42 = (v56 + *(unsigned __int8 *)(v57 + 80) + v41) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
      unint64_t v43 = (v58 + *(unsigned __int8 *)(v37 + 80) + v42) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
      unint64_t v44 = (v20 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v45 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v45 + v41, v63, v64);
      sub_20A652B58(v36, v45 + v42, (uint64_t (*)(void))type metadata accessor for ForYouFeedExpandBlueprintModifier);
      v55((char *)(v45 + v43), v62, v40);
      *(void *)(v45 + v44) = v53;
      uint64_t v46 = (void (**)(uint64_t *))(v45 + ((v44 + 15) & 0xFFFFFFFFFFFFFFF8));
      uint64_t v48 = v67;
      uint64_t v47 = v68;
      *uint64_t v46 = v67;
      v46[1] = v47;
      swift_retain();
      uint64_t v49 = (void *)sub_20A8C6450();
      sub_20A8C6500();
      swift_release();
      swift_release();

      uint64_t v50 = swift_allocObject();
      *(void *)(v50 + 16) = v48;
      *(void *)(v50 + 24) = v47;
      swift_retain();
      uint64_t v51 = (void *)sub_20A8C6450();
      sub_20A8C6550();
      swift_release();
      swift_release();
      swift_release();

      return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v65, v40);
    }
  }
}

uint64_t sub_20A64FBB4()
{
  uint64_t v80 = sub_20A8C3F00();
  uint64_t v84 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  v83 = (char *)&v74 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  v82 = (char *)&v74 - v3;
  MEMORY[0x270FA5388](v4);
  uint64_t v78 = (char *)&v74 - v5;
  MEMORY[0x270FA5388](v6);
  uint64_t v77 = (char *)&v74 - v7;
  uint64_t v8 = type metadata accessor for StockForYouFeedGroup();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v81 = (uint64_t)&v74 - v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v76 = (uint64_t)&v74 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v75 = (uint64_t)&v74 - v16;
  uint64_t v17 = type metadata accessor for ForYouFeedGroup();
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v74 - v21;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v74 - v24;
  MEMORY[0x270FA5388](v26);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v74 - v28;
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v74 - v33;
  uint64_t v79 = v0;
  unint64_t v35 = *(void *)(v0 + 56);
  unint64_t v36 = MEMORY[0x263F8EE78];
  switch(v35 >> 61)
  {
    case 1uLL:
      uint64_t v39 = *(char **)((v35 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v40 = *((void *)v39 + 2);
      if (!v40) {
        goto LABEL_31;
      }
      uint64_t v41 = (uint64_t)&v39[(*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80)];
      uint64_t v42 = *(void *)(v31 + 72);
      unint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v84 + 16);
      v83 = (char *)(v84 + 32);
      uint64_t v78 = v39;
      swift_bridgeObjectRetain();
      uint64_t v44 = v80;
      do
      {
        sub_20A652A90(v41, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
        if (swift_getEnumCaseMultiPayload())
        {
          uint64_t v45 = type metadata accessor for ForYouFeedGroup;
          uint64_t v46 = (uint64_t)v22;
        }
        else
        {
          uint64_t v47 = v81;
          sub_20A652B58((uint64_t)v22, v81, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
          (*v43)(v82, v47, v44);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v36 = sub_20A46DD9C(0, *(void *)(v36 + 16) + 1, 1, v36);
          }
          unint64_t v49 = *(void *)(v36 + 16);
          unint64_t v48 = *(void *)(v36 + 24);
          if (v49 >= v48 >> 1) {
            unint64_t v36 = sub_20A46DD9C(v48 > 1, v49 + 1, 1, v36);
          }
          *(void *)(v36 + 16) = v49 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v84 + 32))(v36+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(void *)(v84 + 72) * v49, v82, v44);
          uint64_t v45 = type metadata accessor for StockForYouFeedGroup;
          uint64_t v46 = v81;
        }
        sub_20A652AF8(v46, (uint64_t (*)(void))v45);
        v41 += v42;
        --v40;
      }
      while (v40);
      goto LABEL_26;
    case 2uLL:
      uint64_t v50 = v32;
      sub_20A60E0F0();
      uint64_t v51 = swift_projectBox();
      sub_20A652A90(v51, v50, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
      sub_20A652A90(v50, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_20A652AF8(v50, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
        uint64_t v38 = (uint64_t)v25;
      }
      else
      {
        uint64_t v68 = (uint64_t)v25;
        uint64_t v69 = v76;
        sub_20A652B58(v68, v76, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
        uint64_t v70 = v78;
        (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v78, v69, v80);
        unint64_t v36 = sub_20A46DD9C(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v72 = *(void *)(v36 + 16);
        unint64_t v71 = *(void *)(v36 + 24);
        if (v72 >= v71 >> 1) {
          unint64_t v36 = sub_20A46DD9C(v71 > 1, v72 + 1, 1, v36);
        }
        *(void *)(v36 + 16) = v72 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v84 + 32))(v36+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(void *)(v84 + 72) * v72, v70, v80);
        sub_20A652AF8(v69, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
        uint64_t v38 = v50;
      }
      goto LABEL_36;
    case 3uLL:
      uint64_t v52 = *(void *)((v35 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v53 = *(void *)(v52 + 16);
      if (!v53) {
        goto LABEL_31;
      }
      uint64_t v54 = v52 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
      uint64_t v55 = *(void *)(v31 + 72);
      uint64_t v56 = (void (**)(char *, char *, uint64_t))(v84 + 16);
      uint64_t v81 = *(void *)((v35 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      v82 = (char *)(v84 + 32);
      swift_bridgeObjectRetain();
      uint64_t v57 = v80;
      do
      {
        sub_20A652A90(v54, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
        if (swift_getEnumCaseMultiPayload())
        {
          uint64_t v58 = type metadata accessor for ForYouFeedGroup;
          uint64_t v59 = (uint64_t)v19;
        }
        else
        {
          sub_20A652B58((uint64_t)v19, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
          (*v56)(v83, v10, v57);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v36 = sub_20A46DD9C(0, *(void *)(v36 + 16) + 1, 1, v36);
          }
          unint64_t v61 = *(void *)(v36 + 16);
          unint64_t v60 = *(void *)(v36 + 24);
          if (v61 >= v60 >> 1) {
            unint64_t v36 = sub_20A46DD9C(v60 > 1, v61 + 1, 1, v36);
          }
          *(void *)(v36 + 16) = v61 + 1;
          uint64_t v57 = v80;
          (*(void (**)(unint64_t, char *, uint64_t))(v84 + 32))(v36+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(void *)(v84 + 72) * v61, v83, v80);
          uint64_t v58 = type metadata accessor for StockForYouFeedGroup;
          uint64_t v59 = (uint64_t)v10;
        }
        sub_20A652AF8(v59, (uint64_t (*)(void))v58);
        v54 += v55;
        --v53;
      }
      while (v53);
LABEL_26:
      swift_bridgeObjectRelease();
      if (!*(void *)(v36 + 16)) {
        goto LABEL_37;
      }
      goto LABEL_32;
    case 4uLL:
      goto LABEL_31;
    default:
      sub_20A60E0F0();
      uint64_t v37 = swift_projectBox();
      sub_20A652A90(v37, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
      sub_20A652A90((uint64_t)v34, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v62 = v75;
        sub_20A652B58((uint64_t)v29, v75, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
        uint64_t v63 = v77;
        (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v77, v62, v80);
        unint64_t v36 = sub_20A46DD9C(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v65 = *(void *)(v36 + 16);
        unint64_t v64 = *(void *)(v36 + 24);
        if (v65 >= v64 >> 1) {
          unint64_t v36 = sub_20A46DD9C(v64 > 1, v65 + 1, 1, v36);
        }
        *(void *)(v36 + 16) = v65 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v84 + 32))(v36+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(void *)(v84 + 72) * v65, v63, v80);
        sub_20A652AF8(v62, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
        sub_20A652AF8((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
LABEL_31:
        if (!*(void *)(v36 + 16)) {
          goto LABEL_37;
        }
LABEL_32:
        __swift_project_boxed_opaque_existential_1((void *)(v79 + 64), *(void *)(v79 + 88));
        sub_20A8C39E0();
        swift_bridgeObjectRelease();
        uint64_t v66 = (void *)sub_20A8C6450();
        sub_20A60DB38();
        uint64_t v67 = sub_20A8C6500();
        swift_release();

        return v67;
      }
      sub_20A652AF8((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
      uint64_t v38 = (uint64_t)v29;
LABEL_36:
      sub_20A652AF8(v38, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
      if (*(void *)(v36 + 16)) {
        goto LABEL_32;
      }
LABEL_37:
      swift_bridgeObjectRelease();
      unint64_t v85 = sub_20A4CFE7C(MEMORY[0x263F8EE78]);
      sub_20A652BC0();
      swift_allocObject();
      return sub_20A8C6580();
  }
}

uint64_t sub_20A650608(uint64_t *a1, uint64_t a2, void *a3, void (**a4)(void, uint64_t), uint64_t a5, void (*a6)(char *), uint64_t a7)
{
  uint64_t v151 = a7;
  v152 = a6;
  uint64_t v137 = a5;
  v160 = a4;
  uint64_t v150 = sub_20A8C8B80();
  uint64_t v149 = *(void *)(v150 - 8);
  MEMORY[0x270FA5388](v150);
  v147 = (char *)&v134 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A65246C(0, &qword_26AC6A430, MEMORY[0x263F7D950]);
  uint64_t v146 = v11;
  uint64_t v145 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  v144 = (char *)&v134 - v12;
  sub_20A60E1A4(0, &qword_26AC69DD0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, sub_20A44D810, MEMORY[0x263F7D2D8]);
  uint64_t v166 = v13;
  uint64_t v164 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v134 - v14;
  sub_20A4F0338();
  MEMORY[0x270FA5388](v16 - 8);
  v162 = (char *)&v134 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x270FA5388](v18);
  v163 = (uint64_t *)((char *)&v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v175 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x270FA5388](v175);
  v161 = (char *)&v134 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = sub_20A8CC310();
  v139 = *(void (***)(char *, uint64_t))(v173 - 8);
  MEMORY[0x270FA5388](v173);
  v172 = (char *)&v134 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v157 = (uint64_t)&v134 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for StockForYouFeedGroup();
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v156 = (uint64_t)&v134 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = sub_20A8CCFE0();
  *(void *)&long long v142 = *(void *)(v180 - 8);
  MEMORY[0x270FA5388](v180);
  v158 = (char *)&v134 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  v155 = (char *)&v134 - v28;
  MEMORY[0x270FA5388](v29);
  v141 = (void (**)(char *, uint64_t, uint64_t))((char *)&v134 - v30);
  sub_20A65246C(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  uint64_t v32 = v31;
  uint64_t v154 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  v168 = (void (**)(char *, uint64_t))((char *)&v134 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v34);
  v167 = (void (**)(char *, uint64_t))((char *)&v134 - v35);
  MEMORY[0x270FA5388](v36);
  uint64_t v153 = (uint64_t)&v134 - v37;
  uint64_t v179 = type metadata accessor for ForYouFeedGroup();
  uint64_t v136 = *(void *)(v179 - 8);
  MEMORY[0x270FA5388](v179);
  uint64_t v178 = (uint64_t)&v134 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  uint64_t v170 = (uint64_t)&v134 - v40;
  MEMORY[0x270FA5388](v41);
  uint64_t v177 = (uint64_t)&v134 - v42;
  MEMORY[0x270FA5388](v43);
  uint64_t v169 = (uint64_t)&v134 - v44;
  MEMORY[0x270FA5388](v45);
  uint64_t v47 = (char *)&v134 - v46;
  MEMORY[0x270FA5388](v48);
  v140 = (void (**)(char *, char *, uint64_t))((char *)&v134 - v49);
  sub_20A65246C(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  double v51 = MEMORY[0x270FA5388](v50);
  uint64_t v53 = (char *)&v134 - v52;
  uint64_t v159 = *a1;
  uint64_t v143 = v54;
  uint64_t v55 = *(void (**)(char *, uint64_t, double))(v54 + 16);
  uint64_t v148 = a2;
  uint64_t v176 = v56;
  v55((char *)&v134 - v52, a2, v51);
  v181 = a3;
  unint64_t v57 = a3[7];
  uint64_t v171 = v18;
  uint64_t v165 = v32;
  v174 = v53;
  switch(v57 >> 61)
  {
    case 1uLL:
      uint64_t v73 = *(void *)((v57 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v178 = *(void *)((v57 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v135 = v178 & 0x7FFFFFFFFFFFFFFFLL;
      swift_retain();
      sub_20A8C8830();
      sub_20A8CBAA0();
      uint64_t v74 = v73;
      swift_bridgeObjectRelease();
      uint64_t v75 = *(void *)(v73 + 16);
      uint64_t v76 = v166;
      if (!v75) {
        goto LABEL_28;
      }
      v138 = v15;
      v158 = (char *)v181 + *(int *)(type metadata accessor for ForYouFeedExpandBlueprintModifier() + 28);
      uint64_t v77 = v74 + ((*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80));
      v141 = (void (**)(char *, uint64_t, uint64_t))(v139 + 4);
      uint64_t v170 = *(void *)(v136 + 72);
      v140 = (void (**)(char *, char *, uint64_t))(v139 + 2);
      ++v139;
      v168 = (void (**)(char *, uint64_t))(v142 + 8);
      v160 = (void (**)(void, uint64_t))(v154 + 8);
      uint64_t v136 = v74;
      swift_bridgeObjectRetain();
      long long v142 = xmmword_20A8D3DC0;
      uint64_t v78 = v155;
      uint64_t v79 = v169;
      while (1)
      {
        sub_20A652A90(v77, v79, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
        v86 = __swift_project_boxed_opaque_existential_1(v181, v181[3]);
        type metadata accessor for ForYouFeedServiceConfig();
        sub_20A4F0534();
        sub_20A8CC780();
        uint64_t v87 = *v86;
        sub_20A652A90(v79, v177, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (!EnumCaseMultiPayload) {
          break;
        }
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v89 = v157;
          sub_20A652B58(v177, v157, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
          unint64_t v85 = v167;
          sub_20A7FE93C(v89, (uint64_t)v78, (uint64_t)v167);
          v90 = type metadata accessor for CuratedForYouFeedGroup;
LABEL_13:
          sub_20A652AF8(v89, (uint64_t (*)(void))v90);
          goto LABEL_8;
        }
        uint64_t v80 = v172;
        uint64_t v81 = v173;
        (*v141)(v172, v177, v173);
        (*v140)(v161, v80, v81);
        swift_storeEnumTagMultiPayload();
        sub_20A60DFF4();
        uint64_t v82 = swift_allocObject();
        *(_OWORD *)(v82 + 16) = v142;
        __swift_project_boxed_opaque_existential_1((void *)(v87 + 16), *(void *)(v87 + 40));
        sub_20A8CCBB0();
        swift_storeEnumTagMultiPayload();
        sub_20A44D810();
        sub_20A8C8320();
        uint64_t v83 = sub_20A60DDB4((unint64_t *)&unk_26AC69DC0);
        uint64_t v84 = sub_20A60DDB4(&qword_26AC69DB8);
        MEMORY[0x21051E240](v82, v166, v83, v84);
        sub_20A652C18(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
        unint64_t v85 = v167;
        uint64_t v32 = v165;
        uint64_t v78 = v155;
        sub_20A8C8810();
        (*v139)(v172, v173);
LABEL_8:
        uint64_t v53 = v174;
        (*v168)(v78, v180);
        sub_20A8CBA80();
        (*v160)(v85, v32);
        uint64_t v79 = v169;
        sub_20A652AF8(v169, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
        v77 += v170;
        if (!--v75)
        {
          uint64_t v74 = v136;
          swift_bridgeObjectRelease();
          uint64_t v15 = v138;
          uint64_t v76 = v166;
LABEL_28:
          uint64_t v118 = v153;
          sub_20A4EFE88(v178, v153);
          if (!__OFADD__(v137, *(void *)(v74 + 16)))
          {
            uint64_t v70 = v176;
            sub_20A8CBA90();
            (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v118, v32);
            sub_20A8CCAC0();
            swift_retain();
            sub_20A8CCAB0();
            type metadata accessor for ForYouFeedServiceConfig();
            sub_20A4F0534();
            uint64_t v119 = sub_20A8CCA90();
            swift_release();
            if (!v119) {
              goto LABEL_30;
            }
LABEL_35:
            *((void *)&v183 + 1) = sub_20A8CC520();
            *(void *)&long long v182 = v119;
            goto LABEL_36;
          }
LABEL_48:
          __break(1u);
          JUMPOUT(0x20A6521E8);
        }
      }
      uint64_t v89 = v156;
      sub_20A652B58(v177, v156, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
      unint64_t v85 = v167;
      sub_20A7FE07C(v89, v159, v158, (uint64_t)v78, (uint64_t)v167);
      v90 = type metadata accessor for StockForYouFeedGroup;
      goto LABEL_13;
    case 2uLL:
      v138 = v15;
      sub_20A60E0F0();
      uint64_t v91 = swift_projectBox();
      sub_20A652A90(v91, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
      v92 = v181;
      __swift_project_boxed_opaque_existential_1(v181, v181[3]);
      v93 = (char *)v92 + *(int *)(type metadata accessor for ForYouFeedExpandBlueprintModifier() + 28);
      type metadata accessor for ForYouFeedServiceConfig();
      sub_20A4F0534();
      swift_retain();
      uint64_t v94 = v47;
      uint64_t v95 = (uint64_t)v141;
      sub_20A8CC780();
      uint64_t v96 = v153;
      v181 = v94;
      sub_20A7FDDBC((uint64_t)v94, v159, v93, v95, v153);
      (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v95, v180);
      uint64_t v70 = v176;
      sub_20A8CBAB0();
      (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v96, v165);
      sub_20A8CCAC0();
      swift_retain();
      sub_20A8CCAB0();
      uint64_t v97 = sub_20A8CCA90();
      swift_release();
      if (v97)
      {
        *((void *)&v183 + 1) = sub_20A8CC520();
        *(void *)&long long v182 = v97;
      }
      else
      {
        long long v182 = 0u;
        long long v183 = 0u;
      }
      uint64_t v76 = v166;
      uint64_t v53 = v174;
      sub_20A8CBB10();
      swift_release_n();
      sub_20A652AF8((uint64_t)v181, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
      uint64_t v15 = v138;
      goto LABEL_42;
    case 3uLL:
      v138 = v15;
      uint64_t v98 = *(void *)((v57 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v177 = *(void *)((v57 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v137 = v177 & 0x7FFFFFFFFFFFFFFFLL;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_20A8C8830();
      sub_20A8CBAA0();
      swift_bridgeObjectRelease();
      uint64_t v99 = *(void *)(v98 + 16);
      if (!v99) {
        goto LABEL_34;
      }
      v155 = (char *)v181 + *(int *)(type metadata accessor for ForYouFeedExpandBlueprintModifier() + 28);
      unint64_t v100 = (*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80);
      uint64_t v135 = v98;
      uint64_t v101 = v98 + v100;
      uint64_t v169 = *(void *)(v136 + 72);
      v141 = (void (**)(char *, uint64_t, uint64_t))(v139 + 4);
      v140 = (void (**)(char *, char *, uint64_t))(v139 + 2);
      ++v139;
      v167 = (void (**)(char *, uint64_t))(v142 + 8);
      v160 = (void (**)(void, uint64_t))(v154 + 8);
      long long v142 = xmmword_20A8D3DC0;
      uint64_t v102 = v158;
      uint64_t v103 = v170;
      break;
    case 4uLL:
      swift_retain();
      sub_20A8C8830();
      uint64_t v70 = v176;
      sub_20A8CBAA0();
      swift_bridgeObjectRelease();
      sub_20A8CCAC0();
      swift_retain();
      sub_20A8CCAB0();
      type metadata accessor for ForYouFeedServiceConfig();
      sub_20A4F0534();
      uint64_t v117 = sub_20A8CCA90();
      swift_release();
      if (v117)
      {
        *((void *)&v183 + 1) = sub_20A8CC520();
        *(void *)&long long v182 = v117;
      }
      else
      {
        long long v182 = 0u;
        long long v183 = 0u;
      }
      uint64_t v76 = v166;
      sub_20A8CBB10();
      goto LABEL_39;
    default:
      v138 = v15;
      sub_20A60E0F0();
      uint64_t v59 = v58;
      uint64_t v60 = swift_projectBox();
      uint64_t v61 = *(void *)(v60 + *(int *)(v59 + 48));
      uint64_t v62 = v140;
      sub_20A652A90(v60, (uint64_t)v140, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
      uint64_t v63 = v181;
      __swift_project_boxed_opaque_existential_1(v181, v181[3]);
      unint64_t v64 = (char *)v63 + *(int *)(type metadata accessor for ForYouFeedExpandBlueprintModifier() + 28);
      unint64_t v65 = (void *)type metadata accessor for ForYouFeedServiceConfig();
      sub_20A4F0534();
      swift_retain();
      uint64_t v66 = (uint64_t)v141;
      v181 = v65;
      sub_20A8CC780();
      uint64_t v67 = v153;
      sub_20A7FDDBC((uint64_t)v62, v159, v64, v66, v153);
      uint64_t v68 = v66;
      uint64_t v69 = v165;
      (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v68, v180);
      uint64_t v70 = v176;
      sub_20A8CBAB0();
      unint64_t v71 = *(void (**)(uint64_t, uint64_t))(v154 + 8);
      v71(v67, v69);
      sub_20A4EFE88(v61, v67);
      if (__OFADD__(v137, 1))
      {
        __break(1u);
        goto LABEL_48;
      }
      sub_20A8CBA90();
      v71(v67, v69);
      sub_20A8CCAC0();
      swift_retain();
      sub_20A8CCAB0();
      uint64_t v72 = sub_20A8CCA90();
      swift_release();
      if (v72)
      {
        *((void *)&v183 + 1) = sub_20A8CC520();
        *(void *)&long long v182 = v72;
      }
      else
      {
        long long v182 = 0u;
        long long v183 = 0u;
      }
      uint64_t v76 = v166;
      uint64_t v15 = v138;
      uint64_t v53 = v174;
      sub_20A8CBB10();
      swift_release_n();
      sub_20A652AF8((uint64_t)v140, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
      goto LABEL_42;
  }
  do
  {
    sub_20A652A90(v101, v103, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
    v112 = __swift_project_boxed_opaque_existential_1(v181, v181[3]);
    type metadata accessor for ForYouFeedServiceConfig();
    sub_20A4F0534();
    sub_20A8CC780();
    uint64_t v113 = *v112;
    sub_20A652A90(v103, v178, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
    int v114 = swift_getEnumCaseMultiPayload();
    if (v114)
    {
      if (v114 != 1)
      {
        uint64_t v104 = v172;
        uint64_t v105 = v173;
        (*v141)(v172, v178, v173);
        (*v140)(v161, v104, v105);
        swift_storeEnumTagMultiPayload();
        sub_20A60DFF4();
        uint64_t v106 = swift_allocObject();
        *(_OWORD *)(v106 + 16) = v142;
        __swift_project_boxed_opaque_existential_1((void *)(v113 + 16), *(void *)(v113 + 40));
        sub_20A8CCBB0();
        swift_storeEnumTagMultiPayload();
        sub_20A44D810();
        sub_20A8C8320();
        uint64_t v107 = sub_20A60DDB4((unint64_t *)&unk_26AC69DC0);
        uint64_t v108 = sub_20A60DDB4(&qword_26AC69DB8);
        uint64_t v109 = v107;
        uint64_t v32 = v165;
        MEMORY[0x21051E240](v106, v166, v109, v108);
        sub_20A652C18(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
        uint64_t v110 = v168;
        uint64_t v53 = v174;
        sub_20A8C8810();
        (*v139)(v172, v173);
        v111 = v158;
        goto LABEL_19;
      }
      uint64_t v115 = v157;
      sub_20A652B58(v178, v157, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
      uint64_t v110 = v168;
      v111 = v158;
      sub_20A7FE93C(v115, (uint64_t)v158, (uint64_t)v168);
      uint64_t v116 = type metadata accessor for CuratedForYouFeedGroup;
    }
    else
    {
      v111 = v102;
      uint64_t v115 = v156;
      sub_20A652B58(v178, v156, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
      uint64_t v110 = v168;
      sub_20A7FE07C(v115, v159, v155, (uint64_t)v111, (uint64_t)v168);
      uint64_t v116 = type metadata accessor for StockForYouFeedGroup;
    }
    sub_20A652AF8(v115, (uint64_t (*)(void))v116);
LABEL_19:
    (*v167)(v111, v180);
    sub_20A8CBA80();
    (*v160)(v110, v32);
    uint64_t v103 = v170;
    sub_20A652AF8(v170, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
    v101 += v169;
    --v99;
    uint64_t v102 = v111;
  }
  while (v99);
LABEL_34:
  swift_bridgeObjectRelease();
  uint64_t v70 = v176;
  sub_20A8CCAC0();
  swift_retain();
  sub_20A8CCAB0();
  type metadata accessor for ForYouFeedServiceConfig();
  sub_20A4F0534();
  uint64_t v119 = sub_20A8CCA90();
  swift_release();
  uint64_t v76 = v166;
  uint64_t v15 = v138;
  if (v119) {
    goto LABEL_35;
  }
LABEL_30:
  long long v182 = 0u;
  long long v183 = 0u;
LABEL_36:
  sub_20A8CBB10();
LABEL_39:
  swift_release_n();
LABEL_42:
  sub_20A44E1C8();
  sub_20A8CE840();
  sub_20A8CE8A0();
  uint64_t v120 = v70;
  v121 = v53;
  if ((void)v182 == v184)
  {
    swift_storeEnumTagMultiPayload();
    uint64_t v122 = sub_20A60DDB4((unint64_t *)&unk_26AC69DC0);
    uint64_t v123 = sub_20A60DDB4(&qword_26AC69DB8);
    MEMORY[0x21051E240](MEMORY[0x263F8EE78], v76, v122, v123);
    sub_20A652C18(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
    sub_20A44D810();
    uint64_t v124 = v76;
    uint64_t v125 = v153;
    sub_20A8C8810();
    if (qword_26AC82DA0 != -1) {
      swift_once();
    }
    uint64_t v126 = *(void *)algn_26AC9ED28;
    v127 = v163;
    void *v163 = qword_26AC9ED20;
    v127[1] = v126;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_20A8C8320();
    uint64_t v128 = v165;
    sub_20A8C8880();
    (*(void (**)(char *, uint64_t))(v164 + 8))(v15, v124);
    uint64_t v120 = v176;
    v121 = v174;
    sub_20A8CBA80();
    (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v125, v128);
  }
  uint64_t v129 = v149;
  v130 = v147;
  uint64_t v131 = v150;
  (*(void (**)(char *, void, uint64_t))(v149 + 104))(v147, *MEMORY[0x263F7D528], v150);
  sub_20A652C18(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
  sub_20A44D810();
  sub_20A652C18(&qword_26AC68150, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
  v132 = v144;
  sub_20A8C9B50();
  (*(void (**)(char *, uint64_t))(v129 + 8))(v130, v131);
  v152(v132);
  (*(void (**)(char *, uint64_t))(v145 + 8))(v132, v146);
  return (*(uint64_t (**)(char *, uint64_t))(v143 + 8))(v121, v120);
}

uint64_t sub_20A6521FC(void *a1, void (*a2)(char *))
{
  sub_20A65246C(0, &qword_26AC6A430, MEMORY[0x263F7D950]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  double v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v12 - v8;
  *(uint64_t *)((char *)&v12 - v8) = (uint64_t)a1;
  (*(void (**)(char *, void, uint64_t, double))(v6 + 104))((char *)&v12 - v8, *MEMORY[0x263F7D930], v5, v7);
  id v10 = a1;
  a2(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_20A652324(uint64_t a1)
{
  uint64_t v2 = sub_20A652C18(&qword_26AC7B7B0, (void (*)(uint64_t))type metadata accessor for ForYouFeedExpandBlueprintModifier);

  return MEMORY[0x270F7B5A8](a1, v2);
}

uint64_t sub_20A652390()
{
  return sub_20A652C18(qword_26AC7B7B8, (void (*)(uint64_t))type metadata accessor for ForYouFeedExpandBlueprintModifier);
}

uint64_t type metadata accessor for ForYouFeedExpandBlueprintModifier()
{
  uint64_t result = qword_26AC68488;
  if (!qword_26AC68488) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A652424()
{
  return sub_20A652C18(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
}

void sub_20A65246C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for ForYouFeedSectionDescriptor();
    v8[1] = type metadata accessor for ForYouFeedModel();
    v8[2] = sub_20A652C18(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
    v8[3] = sub_20A44D810();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_20A652530()
{
  if (!qword_26AC69EC0)
  {
    sub_20A65246C(255, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69EC0);
    }
  }
}

unint64_t sub_20A6525A4()
{
  unint64_t result = qword_26AC7B7A8;
  if (!qword_26AC7B7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7B7A8);
  }
  return result;
}

uint64_t sub_20A6525F8()
{
  return sub_20A64FBB4();
}

uint64_t sub_20A652624()
{
  sub_20A65246C(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  unint64_t v6 = (int *)(type metadata accessor for ForYouFeedExpandBlueprintModifier() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(*(void *)v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = *(void *)(*(void *)v6 + 64);
  sub_20A65246C(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  uint64_t v15 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = (v7 + v8 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + v7);
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + v7 + 64);
  unint64_t v12 = v0 + v7 + v6[9];
  uint64_t v13 = sub_20A8C3410();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v0 + v11, v15);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A6528A0(uint64_t *a1)
{
  sub_20A65246C(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v5 = *(void *)(*(void *)(v3 - 8) + 64);
  uint64_t v6 = *(void *)(type metadata accessor for ForYouFeedExpandBlueprintModifier() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  sub_20A65246C(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  unint64_t v10 = (v7 + v8 + *(unsigned __int8 *)(*(void *)(v9 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80);
  unint64_t v11 = (*(void *)(*(void *)(v9 - 8) + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_20A650608(a1, v1 + v4, (void *)(v1 + v7), (void (**)(void, uint64_t))(v1 + v10), *(void *)(v1 + v11), *(void (**)(char *))(v1 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_20A652A50()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A652A88(void *a1)
{
  return sub_20A6521FC(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_20A652A90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A652AF8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A652B58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_20A652BC0()
{
  if (!qword_26AC698A8)
  {
    sub_20A60DB38();
    unint64_t v0 = sub_20A8C65F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC698A8);
    }
  }
}

uint64_t sub_20A652C18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ForYouFeedExpandBlueprintModifier.ModifierError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A652CFCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedExpandBlueprintModifier.ModifierError()
{
  return &type metadata for ForYouFeedExpandBlueprintModifier.ModifierError;
}

uint64_t sub_20A652D34(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a2[6];
    *(void *)(v4 + 40) = a2[5];
    *(void *)(v4 + 48) = v8;
    *(void *)(v4 + 56) = a2[7];
    long long v9 = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(v4 + 88) = v9;
    uint64_t v10 = v9;
    unint64_t v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
    swift_bridgeObjectRetain();
    swift_retain();
    v11(v4 + 64, (uint64_t)(a2 + 8), v10);
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v13 = v4 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_20A8C3410();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return v4;
}

uint64_t sub_20A652ED0(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_20A8C3410();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_20A652F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  long long v8 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  swift_retain();
  v10(a1 + 64, a2 + 64, v9);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t *sub_20A6530A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 8, a2 + 8);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C3410();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_20A653170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a2 + v6;
  uint64_t v8 = a1 + v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v9 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, v7, v9);
  return a1;
}

uint64_t sub_20A653214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_20A6532E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A6532F4);
}

uint64_t sub_20A6532F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C3410();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_20A6533A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A6533B8);
}

uint64_t sub_20A6533B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_20A8C3410();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_20A653460()
{
  uint64_t result = sub_20A8C3410();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_20A653508()
{
  unint64_t result = qword_26763CCD8;
  if (!qword_26763CCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CCD8);
  }
  return result;
}

void sub_20A65355C(void *a1)
{
  id v3 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(a1, sel_setBackgroundColor_, v3);

  unint64_t v4 = v1 + 2;
  uint64_t v6 = v1[5];
  uint64_t v5 = v1[6];
  __swift_project_boxed_opaque_existential_1(v4, v6);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(v5 + 16) + 32))(&v9, v6);
  if ((v9 & 1) == 0)
  {
    id v7 = objc_msgSend(self, sel_ts_sideBarEffect);
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E50]), sel_initWithEffect_, v7);

    objc_msgSend(a1, sel_setBackgroundView_, v8);
  }
}

uint64_t type metadata accessor for StockSearchStyler()
{
  return self;
}

uint64_t sub_20A6536AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 40);
  uint64_t v8 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  uint64_t v12 = v10(a1, v7, v9);
  double v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A431A50((uint64_t)v15, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

uint64_t sub_20A6537F8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedQuoteViewStyler()
{
  return self;
}

uint64_t sub_20A65385C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 48);
  uint64_t v8 = *(void *)(*(void *)v3 + 56);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 24), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  uint64_t v12 = v10(a1, v7, v9);
  double v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A6539A8((uint64_t)v15, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

uint64_t sub_20A6539A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  uint64_t v7 = swift_allocObject();
  sub_20A431DD0();
  *(void *)(v7 + 16) = sub_20A8CEE20();
  sub_20A42BEBC(&v9, v7 + 24);
  return v7;
}

void *sub_20A653A7C(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for StockViewModel();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    uint64_t v15 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = sub_20A8C3F00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = v6[5];
    long long v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C3E10();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_20A655C5C(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = v6[6];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = (int *)type metadata accessor for StockSparklineViewModel(0);
    uint64_t v20 = *((void *)v19 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
    {
      sub_20A655C5C(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v22 = sub_20A8CDCD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v18, v22);
      uint64_t v23 = v19[5];
      uint64_t v24 = &v17[v23];
      uint64_t v25 = &v18[v23];
      *(void *)uint64_t v24 = *(void *)v25;
      v24[8] = v25[8];
      uint64_t v26 = v19[6];
      uint64_t v27 = &v17[v26];
      uint64_t v28 = &v18[v26];
      *(void *)uint64_t v27 = *(void *)v28;
      v27[8] = v28[8];
      v17[v19[7]] = v18[v19[7]];
      uint64_t v29 = v19[8];
      uint64_t v30 = &v17[v29];
      uint64_t v31 = &v18[v29];
      uint64_t v32 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      (*(void (**)(char *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
    }
    uint64_t v33 = v6[7];
    uint64_t v34 = (char *)a1 + v33;
    uint64_t v35 = (char *)a2 + v33;
    *(void *)uint64_t v34 = *(void *)((char *)a2 + v33);
    v34[8] = *((unsigned char *)a2 + v33 + 8);
    *((void *)v34 + 2) = *(void *)((char *)a2 + v33 + 16);
    v34[24] = *((unsigned char *)a2 + v33 + 24);
    *((void *)v34 + 4) = *(void *)((char *)a2 + v33 + 32);
    v34[40] = *((unsigned char *)a2 + v33 + 40);
    uint64_t v36 = *(void *)((char *)a2 + v33 + 56);
    *((void *)v34 + 6) = *(void *)((char *)a2 + v33 + 48);
    *((void *)v34 + 7) = v36;
    uint64_t v37 = *(void *)((char *)a2 + v33 + 72);
    *((void *)v34 + 8) = *(void *)((char *)a2 + v33 + 64);
    *((void *)v34 + 9) = v37;
    uint64_t v38 = (int *)type metadata accessor for PriceViewModel();
    uint64_t v39 = v38[9];
    uint64_t v56 = &v34[v39];
    uint64_t v40 = &v35[v39];
    unint64_t v57 = a2;
    uint64_t v58 = v6;
    uint64_t v41 = sub_20A8C2EB0();
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
    uint64_t v15 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42(v56, v40, v41);
    uint64_t v43 = v38[10];
    uint64_t v44 = &v34[v43];
    uint64_t v45 = &v35[v43];
    uint64_t v46 = sub_20A8C4030();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
    uint64_t v47 = v38[11];
    uint64_t v48 = &v34[v47];
    uint64_t v49 = &v35[v47];
    uint64_t v50 = sub_20A8C2990();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    uint64_t v51 = v58[8];
    uint64_t v52 = (char *)a1 + v51;
    uint64_t v53 = (char *)v57 + v51;
    uint64_t v54 = sub_20A8C3410();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
    *((unsigned char *)a1 + v58[9]) = *((unsigned char *)v57 + v58[9]);
  }
  return v15;
}

uint64_t sub_20A653FD0(uint64_t a1)
{
  uint64_t v2 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = (int *)type metadata accessor for StockViewModel();
  uint64_t v4 = a1 + v3[5];
  uint64_t v5 = sub_20A8C3E10();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + v3[6];
  uint64_t v8 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    uint64_t v9 = sub_20A8CDCD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
    uint64_t v10 = v7 + *(int *)(v8 + 32);
    uint64_t v11 = sub_20A8C3D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = a1 + v3[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v14 = v12 + v13[9];
  uint64_t v15 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = v12 + v13[10];
  uint64_t v17 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  uint64_t v18 = v12 + v13[11];
  uint64_t v19 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  uint64_t v20 = a1 + v3[8];
  uint64_t v21 = sub_20A8C3410();
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);

  return v22(v20, v21);
}

uint64_t sub_20A6542B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = (int *)type metadata accessor for StockViewModel();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_20A8C3E10();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_20A655C5C(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = v5[6];
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v16 = *((void *)v15 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
  {
    sub_20A655C5C(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = sub_20A8CDCD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v13, v14, v18);
    uint64_t v19 = v15[5];
    uint64_t v20 = &v13[v19];
    uint64_t v21 = &v14[v19];
    *(void *)uint64_t v20 = *(void *)v21;
    v20[8] = v21[8];
    uint64_t v22 = v15[6];
    uint64_t v23 = &v13[v22];
    uint64_t v24 = &v14[v22];
    *(void *)uint64_t v23 = *(void *)v24;
    v23[8] = v24[8];
    v13[v15[7]] = v14[v15[7]];
    uint64_t v25 = v15[8];
    uint64_t v26 = &v13[v25];
    uint64_t v27 = &v14[v25];
    uint64_t v28 = sub_20A8C3D00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    (*(void (**)(char *, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v29 = v5[7];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(void *)uint64_t v30 = *(void *)(a2 + v29);
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(a2 + v29 + 8);
  *(void *)(v30 + 16) = *(void *)(a2 + v29 + 16);
  *(unsigned char *)(v30 + 24) = *(unsigned char *)(a2 + v29 + 24);
  *(void *)(v30 + 32) = *(void *)(a2 + v29 + 32);
  *(unsigned char *)(v30 + 40) = *(unsigned char *)(a2 + v29 + 40);
  uint64_t v32 = *(void *)(a2 + v29 + 56);
  *(void *)(v30 + 48) = *(void *)(a2 + v29 + 48);
  *(void *)(v30 + 56) = v32;
  uint64_t v33 = *(void *)(a2 + v29 + 72);
  *(void *)(v30 + 64) = *(void *)(a2 + v29 + 64);
  *(void *)(v30 + 72) = v33;
  uint64_t v34 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v35 = v34[9];
  uint64_t v36 = v30 + v35;
  uint64_t v37 = v31 + v35;
  uint64_t v53 = a2;
  uint64_t v54 = v5;
  uint64_t v38 = sub_20A8C2EB0();
  uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v39(v36, v37, v38);
  uint64_t v40 = v34[10];
  uint64_t v41 = v30 + v40;
  uint64_t v42 = v31 + v40;
  uint64_t v43 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  uint64_t v44 = v34[11];
  uint64_t v45 = v30 + v44;
  uint64_t v46 = v31 + v44;
  uint64_t v47 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  uint64_t v48 = v54[8];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = v53 + v48;
  uint64_t v51 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
  uint64_t result = a1;
  *(unsigned char *)(a1 + v54[9]) = *(unsigned char *)(v53 + v54[9]);
  return result;
}

uint64_t sub_20A6547B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t v5 = (int *)type metadata accessor for StockViewModel();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_20A8C3E10();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_20A655C5C(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = v5[6];
  uint64_t v16 = (unsigned char *)(a1 + v15);
  uint64_t v17 = (unsigned char *)(a2 + v15);
  uint64_t v18 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v19 = *((void *)v18 - 1);
  uint64_t v20 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      uint64_t v60 = sub_20A8CDCD0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v60 - 8) + 24))(v16, v17, v60);
      uint64_t v61 = v18[5];
      uint64_t v62 = &v16[v61];
      uint64_t v63 = &v17[v61];
      uint64_t v64 = *(void *)v63;
      v62[8] = v63[8];
      *(void *)uint64_t v62 = v64;
      uint64_t v65 = v18[6];
      uint64_t v66 = &v16[v65];
      uint64_t v67 = &v17[v65];
      LOBYTE(v64) = v67[8];
      *(void *)uint64_t v66 = *(void *)v67;
      v66[8] = v64;
      v16[v18[7]] = v17[v18[7]];
      uint64_t v68 = v18[8];
      uint64_t v69 = &v16[v68];
      uint64_t v70 = &v17[v68];
      uint64_t v71 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 24))(v69, v70, v71);
      goto LABEL_13;
    }
    sub_20A6181D0((uint64_t)v16);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    sub_20A655C5C(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
    memcpy(v16, v17, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v23 = sub_20A8CDCD0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 16))(v16, v17, v23);
  uint64_t v24 = v18[5];
  uint64_t v25 = &v16[v24];
  uint64_t v26 = &v17[v24];
  uint64_t v27 = *(void *)v26;
  v25[8] = v26[8];
  *(void *)uint64_t v25 = v27;
  uint64_t v28 = v18[6];
  uint64_t v29 = &v16[v28];
  uint64_t v30 = &v17[v28];
  LOBYTE(v27) = v30[8];
  *(void *)uint64_t v29 = *(void *)v30;
  v29[8] = v27;
  v16[v18[7]] = v17[v18[7]];
  uint64_t v31 = v18[8];
  uint64_t v32 = &v16[v31];
  uint64_t v33 = &v17[v31];
  uint64_t v34 = sub_20A8C3D00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
LABEL_13:
  uint64_t v36 = v5[7];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = *(void *)(a2 + v36);
  *(unsigned char *)(v37 + 8) = *(unsigned char *)(v38 + 8);
  *(void *)uint64_t v37 = v39;
  uint64_t v40 = *(void *)(v38 + 16);
  *(unsigned char *)(v37 + 24) = *(unsigned char *)(v38 + 24);
  *(void *)(v37 + 16) = v40;
  uint64_t v41 = *(void *)(v38 + 32);
  *(unsigned char *)(v37 + 40) = *(unsigned char *)(v38 + 40);
  *(void *)(v37 + 32) = v41;
  *(void *)(v37 + 48) = *(void *)(v38 + 48);
  *(void *)(v37 + 56) = *(void *)(v38 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v37 + 64) = *(void *)(v38 + 64);
  *(void *)(v37 + 72) = *(void *)(v38 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v43 = v42[9];
  uint64_t v44 = v37 + v43;
  uint64_t v45 = v38 + v43;
  uint64_t v46 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = v42[10];
  uint64_t v48 = v37 + v47;
  uint64_t v49 = v38 + v47;
  uint64_t v50 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  uint64_t v51 = v42[11];
  uint64_t v52 = v37 + v51;
  uint64_t v53 = v38 + v51;
  uint64_t v54 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
  uint64_t v55 = v5[8];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  uint64_t v58 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 24))(v56, v57, v58);
  *(unsigned char *)(a1 + v5[9]) = *(unsigned char *)(a2 + v5[9]);
  return a1;
}

uint64_t sub_20A654E14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = (int *)type metadata accessor for StockViewModel();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_20A8C3E10();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_20A655C5C(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = v5[6];
  int v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v16 = *((void *)v15 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
  {
    sub_20A655C5C(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = sub_20A8CDCD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v13, v14, v18);
    uint64_t v19 = v15[5];
    uint64_t v20 = &v13[v19];
    int v21 = &v14[v19];
    *(void *)uint64_t v20 = *(void *)v21;
    v20[8] = v21[8];
    uint64_t v22 = v15[6];
    uint64_t v23 = &v13[v22];
    uint64_t v24 = &v14[v22];
    *(void *)uint64_t v23 = *(void *)v24;
    v23[8] = v24[8];
    v13[v15[7]] = v14[v15[7]];
    uint64_t v25 = v15[8];
    uint64_t v26 = &v13[v25];
    uint64_t v27 = &v14[v25];
    uint64_t v28 = sub_20A8C3D00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    (*(void (**)(char *, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v29 = v5[7];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(void *)uint64_t v30 = *(void *)(a2 + v29);
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(a2 + v29 + 8);
  *(void *)(v30 + 16) = *(void *)(a2 + v29 + 16);
  *(unsigned char *)(v30 + 24) = *(unsigned char *)(a2 + v29 + 24);
  *(void *)(v30 + 32) = *(void *)(a2 + v29 + 32);
  *(unsigned char *)(v30 + 40) = *(unsigned char *)(a2 + v29 + 40);
  long long v32 = *(_OWORD *)(a2 + v29 + 64);
  *(_OWORD *)(v30 + 48) = *(_OWORD *)(a2 + v29 + 48);
  *(_OWORD *)(v30 + 64) = v32;
  uint64_t v33 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v34 = v33[9];
  uint64_t v35 = v30 + v34;
  uint64_t v36 = v31 + v34;
  uint64_t v37 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
  uint64_t v38 = v33[10];
  uint64_t v39 = v30 + v38;
  uint64_t v40 = v31 + v38;
  uint64_t v41 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
  uint64_t v42 = v33[11];
  uint64_t v43 = v30 + v42;
  uint64_t v44 = v31 + v42;
  uint64_t v45 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
  uint64_t v46 = v5[8];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  uint64_t v49 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
  *(unsigned char *)(a1 + v5[9]) = *(unsigned char *)(a2 + v5[9]);
  return a1;
}

uint64_t sub_20A6552DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t v5 = (int *)type metadata accessor for StockViewModel();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_20A8C3E10();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_20A655C5C(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = v5[6];
  uint64_t v16 = (unsigned char *)(a1 + v15);
  uint64_t v17 = (unsigned char *)(a2 + v15);
  uint64_t v18 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v19 = *((void *)v18 - 1);
  uint64_t v20 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      uint64_t v58 = sub_20A8CDCD0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v58 - 8) + 40))(v16, v17, v58);
      uint64_t v59 = v18[5];
      uint64_t v60 = &v16[v59];
      uint64_t v61 = &v17[v59];
      *(void *)uint64_t v60 = *(void *)v61;
      v60[8] = v61[8];
      uint64_t v62 = v18[6];
      uint64_t v63 = &v16[v62];
      uint64_t v64 = &v17[v62];
      *(void *)uint64_t v63 = *(void *)v64;
      v63[8] = v64[8];
      v16[v18[7]] = v17[v18[7]];
      uint64_t v65 = v18[8];
      uint64_t v66 = &v16[v65];
      uint64_t v67 = &v17[v65];
      uint64_t v68 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 40))(v66, v67, v68);
      goto LABEL_13;
    }
    sub_20A6181D0((uint64_t)v16);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    sub_20A655C5C(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
    memcpy(v16, v17, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v23 = sub_20A8CDCD0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32))(v16, v17, v23);
  uint64_t v24 = v18[5];
  uint64_t v25 = &v16[v24];
  uint64_t v26 = &v17[v24];
  *(void *)uint64_t v25 = *(void *)v26;
  v25[8] = v26[8];
  uint64_t v27 = v18[6];
  uint64_t v28 = &v16[v27];
  uint64_t v29 = &v17[v27];
  *(void *)uint64_t v28 = *(void *)v29;
  v28[8] = v29[8];
  v16[v18[7]] = v17[v18[7]];
  uint64_t v30 = v18[8];
  uint64_t v31 = &v16[v30];
  long long v32 = &v17[v30];
  uint64_t v33 = sub_20A8C3D00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
LABEL_13:
  uint64_t v35 = v5[7];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  *(void *)uint64_t v36 = *(void *)(a2 + v35);
  *(unsigned char *)(v36 + 8) = *(unsigned char *)(a2 + v35 + 8);
  *(void *)(v36 + 16) = *(void *)(a2 + v35 + 16);
  *(unsigned char *)(v36 + 24) = *(unsigned char *)(a2 + v35 + 24);
  *(void *)(v36 + 32) = *(void *)(a2 + v35 + 32);
  *(unsigned char *)(v36 + 40) = *(unsigned char *)(a2 + v35 + 40);
  uint64_t v38 = *(void *)(a2 + v35 + 56);
  *(void *)(v36 + 48) = *(void *)(a2 + v35 + 48);
  *(void *)(v36 + 56) = v38;
  swift_bridgeObjectRelease();
  uint64_t v39 = *(void *)(v37 + 72);
  *(void *)(v36 + 64) = *(void *)(v37 + 64);
  *(void *)(v36 + 72) = v39;
  swift_bridgeObjectRelease();
  uint64_t v40 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v41 = v40[9];
  uint64_t v42 = v36 + v41;
  uint64_t v43 = v37 + v41;
  uint64_t v44 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 40))(v42, v43, v44);
  uint64_t v45 = v40[10];
  uint64_t v46 = v36 + v45;
  uint64_t v47 = v37 + v45;
  uint64_t v48 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 40))(v46, v47, v48);
  uint64_t v49 = v40[11];
  uint64_t v50 = v36 + v49;
  uint64_t v51 = v37 + v49;
  uint64_t v52 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 40))(v50, v51, v52);
  uint64_t v53 = v5[8];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  uint64_t v56 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 40))(v54, v55, v56);
  *(unsigned char *)(a1 + v5[9]) = *(unsigned char *)(a2 + v5[9]);
  return a1;
}

uint64_t sub_20A655918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A65592C);
}

uint64_t sub_20A65592C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockViewModel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A655998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A6559AC);
}

uint64_t sub_20A6559AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockViewModel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StockSectionFooterViewModel()
{
  uint64_t result = qword_26AC681F8;
  if (!qword_26AC681F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A655A68()
{
  uint64_t result = type metadata accessor for StockViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A655AF4()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  sub_20A655C5C(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_20A8D3DC0;
  uint64_t v3 = sub_20A8C3E60();
  uint64_t v5 = v4;
  *(void *)(v2 + 56) = MEMORY[0x263F8D310];
  *(void *)(v2 + 64) = sub_20A43F830();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v5;
  uint64_t v6 = sub_20A8CE2B0();
  swift_bridgeObjectRelease();
  return v6;
}

void sub_20A655C5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_20A655CC4()
{
  unint64_t result = qword_26763CCE0;
  if (!qword_26763CCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CCE0);
  }
  return result;
}

unint64_t sub_20A655D1C()
{
  unint64_t result = qword_26763CCE8;
  if (!qword_26763CCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CCE8);
  }
  return result;
}

uint64_t sub_20A655D70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20A655D8C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_20A655DDC()
{
  unint64_t result = qword_26763CCF0;
  if (!qword_26763CCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CCF0);
  }
  return result;
}

uint64_t sub_20A655E30()
{
  return MEMORY[0x270EEF868](0xD000000000000019, 0x800000020A9076F0);
}

uint64_t sub_20A655E4C()
{
  uint64_t v0 = sub_20A8C2420();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C2990();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_20A8CE230();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = sub_20A8C2430();
  __swift_allocate_value_buffer(v6, qword_267652EF0);
  __swift_project_value_buffer(v6, (uint64_t)qword_267652EF0);
  sub_20A8CE220();
  sub_20A8C2940();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F06D18], v0);
  return sub_20A8C2440();
}

uint64_t sub_20A65602C()
{
  sub_20A8CB5E0();
  sub_20A8C1F00();
  swift_getObjectType();
  char v0 = sub_20A8C8D10();
  swift_unknownObjectRelease();
  if (v0)
  {
    sub_20A8C1F00();
    swift_getObjectType();
    sub_20A8C8D50();
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_20A656388();
    swift_allocError();
    swift_willThrow();
    return swift_release();
  }
}

uint64_t sub_20A656124@<X0>(uint64_t a1@<X8>)
{
  if (qword_267639B98 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20A8C2430();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_267652EF0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_20A6561CC(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_20A6561F0, 0, 0);
}

uint64_t sub_20A6561F0()
{
  sub_20A8CE700();
  *(void *)(v0 + 32) = sub_20A8CE6F0();
  uint64_t v2 = sub_20A8CE6E0();
  return MEMORY[0x270FA2498](sub_20A656284, v2, v1);
}

uint64_t sub_20A656284()
{
  swift_release();
  sub_20A65602C();
  return MEMORY[0x270FA2498](sub_20A5C91F4, 0, 0);
}

uint64_t sub_20A65633C(uint64_t a1)
{
  unint64_t v2 = sub_20A655DDC();

  return MEMORY[0x270EE0D28](a1, v2);
}

ValueMetadata *type metadata accessor for IncreaseTextSizeIntent()
{
  return &type metadata for IncreaseTextSizeIntent;
}

unint64_t sub_20A656388()
{
  unint64_t result = qword_26763CD00;
  if (!qword_26763CD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CD00);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for IncreaseTextSizeIntent.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A656478);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for IncreaseTextSizeIntent.Error()
{
  return &type metadata for IncreaseTextSizeIntent.Error;
}

unint64_t sub_20A6564B4()
{
  unint64_t result = qword_26763CD08;
  if (!qword_26763CD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CD08);
  }
  return result;
}

uint64_t sub_20A656508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A65651C);
}

uint64_t sub_20A65651C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A55361C(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_20A6565DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A6565F0);
}

void sub_20A6565F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A55361C(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t type metadata accessor for StockForYouFeedGroupKnobs()
{
  uint64_t result = qword_26AC767A8;
  if (!qword_26AC767A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A6566F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  sub_20A460D90();
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A55361C(0);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A567998(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
  {
    type metadata accessor for ForYouFeedServiceConfig();
    sub_20A567ABC(&qword_26AC74890, (void (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig);
    sub_20A8CC890();
    sub_20A5679FC((uint64_t)v10);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(a4, v15, v12);
  }
  else
  {
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v16(v15, v10, v12);
    v16(a4, v15, v12);
  }
  if (!a2)
  {
    uint64_t v20 = 6;
    sub_20A567920();
    swift_allocObject();
    a2 = sub_20A8CCC00();
  }
  uint64_t v17 = type metadata accessor for StockForYouFeedGroupKnobs();
  *(void *)&a4[*(int *)(v17 + 20)] = a2;
  if (!a3)
  {
    uint64_t v20 = 1000;
    sub_20A567920();
    swift_allocObject();
    a3 = sub_20A8CCC00();
  }
  uint64_t result = sub_20A5679FC(a1);
  *(void *)&a4[*(int *)(v17 + 24)] = a3;
  return result;
}

uint64_t sub_20A6569B0@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  sub_20A460D90();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A657038(0, &qword_26763CD10, MEMORY[0x263F8E040]);
  uint64_t v9 = v8;
  uint64_t v14 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A656FE4();
  sub_20A8CF8E0();
  if (!v2)
  {
    sub_20A55361C(0);
    LOBYTE(v17) = 0;
    sub_20A567ABC(&qword_26AC6B028, sub_20A55361C);
    sub_20A8CF5C0();
    sub_20A567920();
    LOBYTE(v16) = 1;
    sub_20A567ABC(&qword_26AC6B0F8, (void (*)(uint64_t))sub_20A567920);
    sub_20A8CF5C0();
    uint64_t v13 = v17;
    char v15 = 2;
    sub_20A8CF5C0();
    sub_20A6566F8((uint64_t)v7, v13, v16, a2);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v9);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_20A656C4C(void *a1)
{
  uint64_t v3 = v1;
  sub_20A657038(0, &qword_26763CD20, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A656FE4();
  sub_20A8CF8F0();
  LOBYTE(v14) = 0;
  sub_20A55361C(0);
  sub_20A567ABC(&qword_26763BD30, sub_20A55361C);
  sub_20A8CF6E0();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for StockForYouFeedGroupKnobs();
    uint64_t v14 = *(void *)(v3 + *(int *)(v10 + 20));
    char v13 = 1;
    sub_20A567920();
    sub_20A567ABC(&qword_26763BD38, (void (*)(uint64_t))sub_20A567920);
    sub_20A8CF6E0();
    uint64_t v14 = *(void *)(v3 + *(int *)(v10 + 24));
    char v13 = 2;
    sub_20A8CF6E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_20A656EB0()
{
  unint64_t v1 = 0xD000000000000014;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x73656C7572;
  }
}

uint64_t sub_20A656F14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A6572A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A656F3C(uint64_t a1)
{
  unint64_t v2 = sub_20A656FE4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A656F78(uint64_t a1)
{
  unint64_t v2 = sub_20A656FE4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20A656FB4@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return sub_20A6569B0(a1, a2);
}

uint64_t sub_20A656FCC(void *a1)
{
  return sub_20A656C4C(a1);
}

unint64_t sub_20A656FE4()
{
  unint64_t result = qword_26763CD18;
  if (!qword_26763CD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CD18);
  }
  return result;
}

void sub_20A657038(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A656FE4();
    unint64_t v7 = a3(a1, &type metadata for StockForYouFeedGroupKnobs.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for StockForYouFeedGroupKnobs.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A657168);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockForYouFeedGroupKnobs.CodingKeys()
{
  return &type metadata for StockForYouFeedGroupKnobs.CodingKeys;
}

unint64_t sub_20A6571A4()
{
  unint64_t result = qword_26763CD28;
  if (!qword_26763CD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CD28);
  }
  return result;
}

unint64_t sub_20A6571FC()
{
  unint64_t result = qword_26763CD30;
  if (!qword_26763CD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CD30);
  }
  return result;
}

unint64_t sub_20A657254()
{
  unint64_t result = qword_26763CD38;
  if (!qword_26763CD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CD38);
  }
  return result;
}

uint64_t sub_20A6572A8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656C7572 && a2 == 0xE500000000000000;
  if (v2 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000020A907710 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020A907730)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_20A6573EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, double a6)
{
  uint64_t v85 = a2;
  uint64_t v80 = a1;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A658650(0, &qword_26AC68CD8, MEMORY[0x263F07598], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v81 = (char *)&v72 - v12;
  uint64_t v84 = sub_20A8C2970();
  uint64_t v83 = *(void *)(v84 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v84);
  char v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v72 - v16;
  uint64_t v18 = sub_20A8C2990();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v79 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v72 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v72 - v25;
  sub_20A658650(0, &qword_26AC68CD0, MEMORY[0x263F07548], v10);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v29 = (char *)&v72 - v28;
  uint64_t v30 = (void *)sub_20A658280(a5, a3, a4, a6);
  uint64_t v31 = v30;
  if ((a5 & 2) == 0 || !v85)
  {
    id v38 = v30;
    goto LABEL_6;
  }
  uint64_t v78 = v15;
  long long v32 = (char *)v82 + OBJC_IVAR____TtC8StocksUI14PriceFormatter_locale;
  swift_beginAccess();
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  uint64_t v77 = v32;
  uint64_t v76 = v33;
  v33(v26, v32, v18);
  id v75 = v31;
  sub_20A8C2980();
  uint64_t v34 = v19 + 8;
  uint64_t v82 = *(void (**)(char *, uint64_t))(v19 + 8);
  v82(v26, v18);
  sub_20A8C2950();
  uint64_t v83 = *(void *)(v83 + 8);
  ((void (*)(char *, uint64_t))v83)(v17, v84);
  uint64_t v35 = sub_20A8C28C0();
  uint64_t v36 = v18;
  uint64_t v37 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v29, 1, v35) == 1)
  {
    sub_20A65857C((uint64_t)v29, &qword_26AC68CD0, MEMORY[0x263F07548]);
LABEL_6:
    objc_msgSend(v31, sel_setNumberStyle_, 1);
    id v39 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a6);
    id v40 = objc_msgSend(v31, sel_stringFromNumber_, v39);

    if (v40)
    {
      uint64_t v41 = sub_20A8CE280();

      return v41;
    }

    return 0;
  }
  uint64_t v73 = sub_20A8C28A0();
  uint64_t v74 = v43;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v35);
  v76(v24, v77, v36);
  uint64_t v44 = v78;
  sub_20A8C2980();
  v82(v24, v36);
  uint64_t v45 = (uint64_t)v81;
  sub_20A8C2960();
  ((void (*)(char *, uint64_t))v83)(v44, v84);
  uint64_t v46 = sub_20A8C2930();
  uint64_t v47 = *(void *)(v46 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46) == 1)
  {
    swift_bridgeObjectRelease();
    sub_20A65857C(v45, &qword_26AC68CD8, MEMORY[0x263F07598]);
    goto LABEL_6;
  }
  uint64_t v48 = v36;
  uint64_t v84 = v34;
  uint64_t v49 = sub_20A8C28A0();
  uint64_t v51 = v50;
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
  sub_20A658650(0, &qword_26763CD40, (uint64_t (*)(uint64_t))sub_20A6585EC, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D5CB0;
  *(void *)(inited + 32) = sub_20A8CE280();
  *(void *)(inited + 40) = v53;
  uint64_t v54 = v80;
  uint64_t v55 = v85;
  *(void *)(inited + 48) = v80;
  *(void *)(inited + 56) = v55;
  *(void *)(inited + 64) = sub_20A8CE280();
  *(void *)(inited + 72) = v56;
  uint64_t v57 = v74;
  *(void *)(inited + 80) = v73;
  *(void *)(inited + 88) = v57;
  *(void *)(inited + 96) = sub_20A8CE280();
  *(void *)(inited + 104) = v58;
  *(void *)(inited + 112) = v49;
  *(void *)(inited + 120) = v51;
  swift_bridgeObjectRetain();
  sub_20A4CF8F8(inited);
  MEMORY[0x21051AB80]();
  swift_bridgeObjectRelease();
  uint64_t v59 = v79;
  sub_20A8C2870();
  uint64_t v60 = (void *)sub_20A8C2900();
  id v61 = v75;
  objc_msgSend(v75, sel_setLocale_, v60);

  if (v54 == 7356999 && v55 == 0xE300000000000000 || (sub_20A8CF760() & 1) != 0)
  {
    objc_msgSend(v61, sel_setNumberStyle_, 1);
    id v62 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a6);
    id v63 = objc_msgSend(v61, sel_stringFromNumber_, v62);

    if (v63)
    {
      uint64_t v64 = sub_20A8CE280();
      uint64_t v66 = v65;

      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v68 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_20A8C2370();

      sub_20A658650(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
      uint64_t v69 = swift_allocObject();
      *(_OWORD *)(v69 + 16) = xmmword_20A8D3DC0;
      *(void *)(v69 + 56) = MEMORY[0x263F8D310];
      *(void *)(v69 + 64) = sub_20A43F830();
      *(void *)(v69 + 32) = v64;
      *(void *)(v69 + 40) = v66;
      uint64_t v41 = sub_20A8CE2B0();

      swift_bridgeObjectRelease();
      v82(v59, v48);
      return v41;
    }

    v82(v59, v48);
    return 0;
  }
  objc_msgSend(v61, sel_setNumberStyle_, 2);
  id v70 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a6);
  id v71 = objc_msgSend(v61, sel_stringFromNumber_, v70);

  if (v71)
  {
    uint64_t v41 = sub_20A8CE280();
  }
  else
  {

    uint64_t v41 = 0;
  }
  v82(v59, v48);
  return v41;
}

id sub_20A657E0C(uint64_t a1)
{
  return sub_20A657E60(a1, 2, &qword_26AC9E948);
}

id sub_20A657E1C(uint64_t a1)
{
  return sub_20A657E60(a1, 3, &qword_267652F08);
}

id sub_20A657E2C()
{
  id result = sub_20A657F40(3);
  qword_267652F10 = (uint64_t)result;
  return result;
}

id sub_20A657E50(uint64_t a1)
{
  return sub_20A657E60(a1, 0, &qword_26AC9EA60);
}

id sub_20A657E60(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  objc_msgSend(v5, sel_setNumberStyle_, 1);
  objc_msgSend(v5, sel_setMinimumFractionDigits_, a2);
  objc_msgSend(v5, sel_setMaximumFractionDigits_, a2);
  id result = objc_msgSend(v5, sel_setMinimumIntegerDigits_, 1);
  *a3 = v5;
  return result;
}

id sub_20A657EF8()
{
  id result = sub_20A657F40(2);
  qword_26AC9EA58 = (uint64_t)result;
  return result;
}

id sub_20A657F1C()
{
  id result = sub_20A657F40(0);
  qword_26AC9EC08 = (uint64_t)result;
  return result;
}

id sub_20A657F40(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  objc_msgSend(v2, sel_setNumberStyle_, 1);
  objc_msgSend(v2, sel_setMinimumFractionDigits_, a1);
  objc_msgSend(v2, sel_setMaximumFractionDigits_, a1);
  objc_msgSend(v2, sel_setMinimumIntegerDigits_, 1);
  int v3 = (void *)sub_20A8CE240();
  objc_msgSend(v2, sel_setPositivePrefix_, v3);

  unsigned int v4 = (void *)sub_20A8CE240();
  objc_msgSend(v2, sel_setNegativePrefix_, v4);

  return v2;
}

uint64_t sub_20A65801C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI14PriceFormatter_locale;
  uint64_t v2 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_20A6580BC()
{
  return type metadata accessor for PriceFormatter();
}

uint64_t type metadata accessor for PriceFormatter()
{
  uint64_t result = qword_26AC6D5C8;
  if (!qword_26AC6D5C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A658110()
{
  uint64_t result = sub_20A8C2990();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PriceFormatter.Style(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PriceFormatter.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_20A658240(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_20A658258(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PriceFormatter.Style()
{
  return &type metadata for PriceFormatter.Style;
}

uint64_t sub_20A658280(char a1, uint64_t a2, char a3, double a4)
{
  double v5 = fabs(a4);
  if (a4 != 0.0 && v5 < 5.0 && (a1 & 1) == 0)
  {
    if (a3)
    {
      if (qword_267639BA8 != -1) {
        swift_once();
      }
      uint64_t v10 = &qword_267652F08;
    }
    else
    {
      if (qword_267639BB0 != -1) {
        swift_once();
      }
      uint64_t v10 = &qword_267652F10;
    }
  }
  else
  {
    if (a3)
    {
      if (a3 != 1)
      {
        if (!a2) {
          goto LABEL_18;
        }
        goto LABEL_40;
      }
      if ((~*(void *)&v5 & 0x7FF0000000000000) != 0)
      {
        if (v5 > -9.22337204e18)
        {
          if (v5 < 9.22337204e18)
          {
            if ((uint64_t)v5 < 1)
            {
LABEL_18:
              if (qword_26AC6D5C0 != -1) {
                swift_once();
              }
              uint64_t v10 = &qword_26AC9E948;
              return *v10;
            }
            double v9 = log10(v5);
            if ((~*(void *)&v9 & 0x7FF0000000000000) != 0)
            {
              if (v9 > -9.22337204e18)
              {
                if (v9 < 9.22337204e18)
                {
                  if ((uint64_t)v9 < a2) {
                    goto LABEL_18;
                  }
LABEL_40:
                  if (qword_26AC67908 == -1)
                  {
LABEL_41:
                    uint64_t v10 = &qword_26AC9EA60;
                    return *v10;
                  }
LABEL_51:
                  swift_once();
                  goto LABEL_41;
                }
                goto LABEL_54;
              }
            }
            else
            {
              __break(1u);
            }
            __break(1u);
LABEL_54:
            __break(1u);
            goto LABEL_55;
          }
          goto LABEL_47;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    if ((~*(void *)&v5 & 0x7FF0000000000000) == 0)
    {
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    if (v5 <= -9.22337204e18)
    {
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    if (v5 >= 9.22337204e18)
    {
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    if ((uint64_t)v5 >= 1)
    {
      double v11 = log10(v5);
      if ((~*(void *)&v11 & 0x7FF0000000000000) == 0)
      {
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
      if (v11 <= -9.22337204e18)
      {
LABEL_56:
        __break(1u);
        goto LABEL_57;
      }
      if (v11 >= 9.22337204e18)
      {
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
      if ((uint64_t)v11 >= a2)
      {
        if (qword_26AC81138 == -1)
        {
LABEL_43:
          uint64_t v10 = &qword_26AC9EC08;
          return *v10;
        }
LABEL_58:
        swift_once();
        goto LABEL_43;
      }
    }
    if (qword_26AC6D5B0 != -1) {
      swift_once();
    }
    uint64_t v10 = &qword_26AC9EA58;
  }
  return *v10;
}

uint64_t sub_20A65857C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A658650(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_20A6585EC()
{
  if (!qword_26763CD48)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763CD48);
    }
  }
}

void sub_20A658650(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_20A6586B4(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x6F682D7265746661;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A658750(unsigned __int8 *a1, char *a2)
{
  return sub_20A44F860(*a1, *a2);
}

uint64_t sub_20A65875C()
{
  return sub_20A7B5500();
}

uint64_t sub_20A658764()
{
  return sub_20A7B56F0();
}

uint64_t sub_20A65876C()
{
  return sub_20A7B59B8();
}

uint64_t sub_20A658774@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_20A65892C();
  *a1 = result;
  return result;
}

unint64_t sub_20A6587A4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_20A6586B4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unsigned char *storeEnumTagSinglePayload for StockChartZoneType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A65889CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockChartZoneType()
{
  return &type metadata for StockChartZoneType;
}

unint64_t sub_20A6588D8()
{
  unint64_t result = qword_26763CD50;
  if (!qword_26763CD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CD50);
  }
  return result;
}

uint64_t sub_20A65892C()
{
  unint64_t v0 = sub_20A8CF5B0();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

UIImage __swiftcall UIImage.composite(with:)(UIImage with)
{
  objc_msgSend(v1, sel_size);
  double v4 = v3;
  [(objc_class *)with.super.isa size];
  if (v4 <= v5) {
    double v4 = v5;
  }
  objc_msgSend(v1, sel_size);
  double v7 = v6;
  [(objc_class *)with.super.isa size];
  if (v7 <= v8) {
    double v7 = v8;
  }
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827A0]), sel_initWithSize_, v4, v7);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v1;
  *(double *)(v10 + 24) = v4;
  *(double *)(v10 + 32) = v7;
  *(UIImage *)(v10 + 40) = with;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_20A658BAC;
  *(void *)(v11 + 24) = v10;
  v18[4] = sub_20A5DDE60;
  v18[5] = v11;
  v18[0] = MEMORY[0x263EF8330];
  v18[1] = 1107296256;
  v18[2] = sub_20A658C48;
  v18[3] = &block_descriptor_26;
  uint64_t v12 = _Block_copy(v18);
  id v13 = v1;
  uint64_t v14 = with.super.isa;
  swift_retain();
  swift_release();
  id v15 = objc_msgSend(v9, sel_imageWithActions_, v12);

  _Block_release(v12);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result.super.isa = (Class)swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0) {
    return (UIImage)v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A658B6C()
{
  return swift_deallocObject();
}

void sub_20A658BAC(void *a1)
{
  double v3 = *(void **)(v1 + 16);
  double v4 = *(void **)(v1 + 40);
  sub_20A658C94(v3, a1);

  sub_20A658C94(v4, a1);
}

uint64_t sub_20A658C10(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_20A658C38()
{
  return swift_deallocObject();
}

void sub_20A658C48(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

void sub_20A658C94(void *a1, void *a2)
{
  objc_msgSend(a1, sel_size);
  objc_msgSend(a1, sel_size);
  id v4 = objc_msgSend(a2, sel_CGContext);
  id v5 = objc_msgSend(a1, sel_CGImage);
  if (v5)
  {
    objc_msgSend(a1, sel_size);
    objc_msgSend(a1, sel_size);
    sub_20A8CE920();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_20A658DA4(uint64_t a1)
{
  return sub_20A8C3AD0();
}

__n128 sub_20A658DF4@<Q0>(uint64_t a1@<X8>)
{
  sub_20A658E7C((uint64_t)v7);
  long long v2 = v7[9];
  *(_OWORD *)(a1 + 128) = v7[8];
  *(_OWORD *)(a1 + 144) = v2;
  *(void *)(a1 + 160) = v8;
  long long v3 = v7[5];
  *(_OWORD *)(a1 + 64) = v7[4];
  *(_OWORD *)(a1 + 80) = v3;
  long long v4 = v7[7];
  *(_OWORD *)(a1 + 96) = v7[6];
  *(_OWORD *)(a1 + 112) = v4;
  long long v5 = v7[1];
  *(_OWORD *)a1 = v7[0];
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = (__n128)v7[3];
  *(_OWORD *)(a1 + 32) = v7[2];
  *(__n128 *)(a1 + 48) = result;
  return result;
}

void sub_20A658E7C(uint64_t a1@<X8>)
{
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 56), *(void *)(v1 + 80));
  if (sub_20A8C3850())
  {
    char v3 = 2;
  }
  else
  {
    sub_20A4342F4(v1 + 56, (uint64_t)v58);
    __swift_project_boxed_opaque_existential_1(v58, v58[3]);
    char v4 = sub_20A8C3800();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    char v3 = (v4 & 1) == 0;
  }
  char v56 = v3;
  long long v5 = self;
  double v6 = (void *)sub_20A8CE240();
  id v7 = objc_msgSend(v5, sel_linkWithBundleIdentifier_, v6);

  if (!v7) {
    goto LABEL_71;
  }
  objc_msgSend(v7, sel_setDisplayLargeIcon_, 1);
  objc_msgSend(v7, sel_setDisplayCaptionText_, 1);
  uint64_t v8 = (SEL *)&off_263FDE000;
  id v9 = objc_msgSend(v7, sel_view);
  if (!v9)
  {
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    sub_20A8CF520();
    __break(1u);
    return;
  }
  uint64_t v10 = v9;
  uint64_t v11 = (SEL *)&off_263FDE000;
  unint64_t v12 = (unint64_t)objc_msgSend(v9, sel_subviews);

  sub_20A42CFF0(0, &qword_26763CD58);
  unint64_t v13 = sub_20A8CE5E0();

  if (v13 >> 62) {
    goto LABEL_24;
  }
  uint64_t v14 = *(void **)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  for (id i = v7; v14; id i = v7)
  {
    if ((v13 & 0xC000000000000001) != 0)
    {
      id v15 = (id)MEMORY[0x210527700](0, v13);
    }
    else
    {
      if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_65;
      }
      id v15 = *(id *)(v13 + 32);
    }
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    id v17 = [v16 v11[343]];

    unint64_t v13 = sub_20A8CE5E0();
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_20A8CF540();
      if (!v12)
      {
LABEL_28:
        uint64_t v14 = 0;
LABEL_29:
        swift_bridgeObjectRelease();
        break;
      }
    }
    else
    {
      unint64_t v12 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v12) {
        goto LABEL_28;
      }
    }
    uint64_t v18 = 4;
    uint64_t v11 = (SEL *)0x263F82000;
    while (1)
    {
      uint64_t v19 = (v13 & 0xC000000000000001) != 0
          ? (SEL *)MEMORY[0x210527700](v18 - 4, v13)
          : (SEL *)*(id *)(v13 + 8 * v18);
      uint64_t v8 = v19;
      id v7 = (id)(v18 - 3);
      if (__OFADD__(v18 - 4, 1)) {
        break;
      }
      self;
      uint64_t v20 = swift_dynamicCastObjCClass();
      if (v20)
      {
        uint64_t v14 = (void *)v20;
        goto LABEL_22;
      }

      ++v18;
      if (v7 == (id)v12)
      {
        uint64_t v14 = 0;
LABEL_22:
        id v7 = i;
        uint64_t v11 = (SEL *)&off_263FDE000;
        uint64_t v8 = (SEL *)&off_263FDE000;
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v14 = (void *)sub_20A8CF540();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v14, sel_attributedText);
  id v22 = [v7 v8[451]];
  if (!v22) {
    goto LABEL_70;
  }
  uint64_t v23 = v22;
  id v24 = [v22 v11[343]];

  unint64_t v12 = sub_20A8CE5E0();
  if (v12 >> 62) {
    goto LABEL_49;
  }
  uint64_t v54 = v21;
  if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_50:
    uint64_t v33 = 0;
    goto LABEL_51;
  }
  while (1)
  {
    if ((v12 & 0xC000000000000001) != 0)
    {
LABEL_65:
      id v25 = (id)MEMORY[0x210527700](0, v12);
    }
    else
    {
      if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_69;
      }
      id v25 = *(id *)(v12 + 32);
    }
    uint64_t v26 = v25;
    swift_bridgeObjectRelease();
    id v27 = [v26 v11[343]];

    unint64_t v12 = sub_20A8CE5E0();
    if (v12 >> 62) {
      break;
    }
    uint64_t v28 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v28) {
      goto LABEL_45;
    }
LABEL_38:
    id v21 = (id)(v12 & 0xC000000000000001);
    uint64_t v29 = 4;
    while (1)
    {
      uint64_t v30 = v21 ? (SEL *)MEMORY[0x210527700](v29 - 4, v12) : (SEL *)*(id *)(v12 + 8 * v29);
      uint64_t v11 = v30;
      uint64_t v31 = v29 - 3;
      if (__OFADD__(v29 - 4, 1)) {
        break;
      }
      self;
      uint64_t v32 = swift_dynamicCastObjCClass();
      if (v32)
      {
        uint64_t v33 = (void *)v32;
        goto LABEL_47;
      }

      ++v29;
      if (v31 == v28) {
        goto LABEL_45;
      }
    }
    __break(1u);
LABEL_49:
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_20A8CF540();
    swift_bridgeObjectRelease();
    uint64_t v54 = v21;
    if (!v34) {
      goto LABEL_50;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_20A8CF540();
  if (v28) {
    goto LABEL_38;
  }
LABEL_45:
  uint64_t v33 = 0;
LABEL_47:
  swift_bridgeObjectRelease();
LABEL_51:
  swift_bridgeObjectRelease();
  id v35 = objc_msgSend(v33, sel_image);
  BOOL v36 = _s11TeaSettings0B0C8StocksUIE7WelcomeV7VersionV14isBrandNewUserSbvgZ_0();
  id v37 = sub_20A659594();
  sub_20A659884(v56, v36, (uint64_t)v37, (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init), (uint64_t)v57);
  id v38 = v54;
  if (v54)
  {
    id v38 = v54;
    if (objc_msgSend(v38, sel_length) && v35)
    {
      id v35 = v35;
      char v39 = v36;
      id v40 = v58;
      char v41 = v56;
      id v42 = v38;
      goto LABEL_60;
    }

    id v38 = v38;
    if (objc_msgSend(v38, sel_length))
    {
      id v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
      char v39 = v36;
      id v40 = v58;
      char v41 = v56;
      id v42 = v38;
      goto LABEL_61;
    }

    id v38 = v54;
  }
  if (v35)
  {
    id v35 = v35;
    id v42 = sub_20A659594();
    char v39 = v36;
    id v40 = v58;
    char v41 = v56;
LABEL_60:
    id v43 = v35;
LABEL_61:
    sub_20A659884(v41, v39, (uint64_t)v42, (uint64_t)v43, (uint64_t)v58);
    uint64_t v44 = i;
    sub_20A659DB8(v57);
  }
  else
  {
    id v40 = v57;
    uint64_t v44 = i;
  }

  uint64_t v45 = v40[20];
  uint64_t v46 = v40[17];
  long long v47 = *(_OWORD *)(v40 + 9);
  uint64_t v48 = v40[11];
  uint64_t v49 = v40[12];
  long long v50 = *(_OWORD *)(v40 + 5);
  long long v51 = *(_OWORD *)(v40 + 7);
  long long v52 = *(_OWORD *)(v40 + 3);
  long long v53 = *(_OWORD *)(v40 + 1);
  *(unsigned char *)a1 = *(unsigned char *)v40;
  *(_OWORD *)(a1 + 8) = v53;
  *(_OWORD *)(a1 + 24) = v52;
  *(_OWORD *)(a1 + 40) = v50;
  *(_OWORD *)(a1 + 56) = v51;
  *(_OWORD *)(a1 + 72) = v47;
  *(void *)(a1 + 88) = v48;
  *(void *)(a1 + 96) = v49;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(v40 + 13);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(v40 + 15);
  *(void *)(a1 + 136) = v46;
  *(_OWORD *)(a1 + 144) = *((_OWORD *)v40 + 9);
  *(void *)(a1 + 160) = v45;
}

id sub_20A659594()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v2 = objc_allocWithZone(MEMORY[0x263F086A0]);
  char v3 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithString_, v3, 0x800000020A907E50);

  return v4;
}

uint64_t type metadata accessor for WelcomeModelProvider()
{
  return self;
}

uint64_t sub_20A6596BC()
{
  sub_20A8C3190();
  sub_20A8C6670();
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
  uint64_t v0 = (void *)sub_20A8CEBE0();
  swift_retain();
  uint64_t v1 = sub_20A8C6500();
  swift_release();

  swift_release();
  return v1;
}

uint64_t sub_20A659784()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

void sub_20A659884(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v9 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  if (a2) {
    unint64_t v43 = 0x800000020A907C90;
  }
  else {
    unint64_t v43 = 0x800000020A9078B0;
  }
  uint64_t v10 = sub_20A8C2370();
  uint64_t v54 = v11;
  uint64_t v55 = v10;

  unint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata, v43);
  uint64_t v14 = sub_20A8C2370();
  uint64_t v52 = v15;
  uint64_t v53 = v14;

  id v16 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A9078F0);
  uint64_t v17 = sub_20A8C2370();
  uint64_t v50 = v18;
  uint64_t v51 = v17;

  id v19 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A907940);
  uint64_t v20 = sub_20A8C2370();
  uint64_t v48 = v21;
  uint64_t v49 = v20;

  id v22 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A9079D0);
  uint64_t v23 = sub_20A8C2370();
  uint64_t v58 = v24;

  char v47 = a1;
  if (a1 == 2)
  {
    id v25 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A907A40);
    unint64_t v44 = 0x800000020A907AD0;
    uint64_t v26 = sub_20A8C2370();
    uint64_t v28 = v27;

    uint64_t v29 = 0;
    uint64_t v30 = 0;
    uint64_t v45 = 0;
    uint64_t v46 = 0;
  }
  else
  {
    id v31 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A907A40);
    uint64_t v32 = sub_20A8C2370();
    uint64_t v45 = v33;
    uint64_t v46 = v32;

    id v34 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A907BA0);
    unint64_t v44 = 0x800000020A907C10;
    uint64_t v35 = sub_20A8C2370();
    uint64_t v37 = v36;

    uint64_t v26 = sub_20A659784();
    uint64_t v28 = v38;
    uint64_t v29 = v23;
    uint64_t v30 = v58;
    uint64_t v23 = v35;
    uint64_t v58 = v37;
  }
  id v39 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata, v44);
  uint64_t v40 = sub_20A8C2370();
  uint64_t v42 = v41;

  *(unsigned char *)a5 = v47;
  *(void *)(a5 + 8) = v55;
  *(void *)(a5 + 16) = v54;
  *(void *)(a5 + 24) = v53;
  *(void *)(a5 + 32) = v52;
  *(void *)(a5 + 40) = v51;
  *(void *)(a5 + 48) = v50;
  *(void *)(a5 + 56) = v49;
  *(void *)(a5 + 64) = v48;
  *(void *)(a5 + 72) = v23;
  *(void *)(a5 + 80) = v58;
  *(void *)(a5 + 88) = v26;
  *(void *)(a5 + 96) = v28;
  *(void *)(a5 + 104) = v29;
  *(void *)(a5 + 112) = v30;
  *(void *)(a5 + 120) = v46;
  *(void *)(a5 + 128) = v45;
  *(void *)(a5 + 136) = v40;
  *(void *)(a5 + 144) = v42;
  *(void *)(a5 + 152) = a3;
  *(void *)(a5 + 160) = a4;
}

void *sub_20A659DB8(void *a1)
{
  uint64_t v2 = a1[13];
  uint64_t v3 = a1[14];
  double v6 = (void *)a1[19];
  long long v5 = (void *)a1[20];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A659E90(v2, v3);

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A659E90(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

__n128 sub_20A659ED4@<Q0>(uint64_t a1@<X8>)
{
  sub_20A658E7C((uint64_t)v7);
  long long v2 = v7[9];
  *(_OWORD *)(a1 + 128) = v7[8];
  *(_OWORD *)(a1 + 144) = v2;
  *(void *)(a1 + 160) = v8;
  long long v3 = v7[5];
  *(_OWORD *)(a1 + 64) = v7[4];
  *(_OWORD *)(a1 + 80) = v3;
  long long v4 = v7[7];
  *(_OWORD *)(a1 + 96) = v7[6];
  *(_OWORD *)(a1 + 112) = v4;
  long long v5 = v7[1];
  *(_OWORD *)a1 = v7[0];
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = (__n128)v7[3];
  *(_OWORD *)(a1 + 32) = v7[2];
  *(__n128 *)(a1 + 48) = result;
  return result;
}

ValueMetadata *type metadata accessor for WelcomeModel.Bullet()
{
  return &type metadata for WelcomeModel.Bullet;
}

void destroy for WelcomeModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  long long v2 = *(void **)(a1 + 160);
}

uint64_t initializeWithCopy for WelcomeModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  uint64_t v10 = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10)
  {
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v10;
    uint64_t v11 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v12;
  }
  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v13;
  uint64_t v15 = *(void **)(a2 + 152);
  uint64_t v14 = *(void **)(a2 + 160);
  *(void *)(a1 + 152) = v15;
  *(void *)(a1 + 160) = v14;
  swift_bridgeObjectRetain();
  id v16 = v15;
  id v17 = v14;
  return a1;
}

uint64_t assignWithCopy for WelcomeModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 104);
  uint64_t v5 = (_OWORD *)(a2 + 104);
  uint64_t v6 = *(void *)(a2 + 112);
  if (*(void *)(a1 + 112))
  {
    if (v6)
    {
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A65A2D4(a1 + 104);
      long long v7 = *(_OWORD *)(a2 + 120);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 120) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 120);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 120) = v8;
  }
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void **)(a2 + 152);
  uint64_t v10 = *(void **)(a1 + 152);
  *(void *)(a1 + 152) = v9;
  id v11 = v9;

  long long v12 = *(void **)(a2 + 160);
  uint64_t v13 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = v12;
  id v14 = v12;

  return a1;
}

uint64_t sub_20A65A2D4(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for WelcomeModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 112)) {
    goto LABEL_5;
  }
  uint64_t v10 = *(void *)(a2 + 112);
  if (!v10)
  {
    sub_20A65A2D4(a1 + 104);
LABEL_5:
    long long v12 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v12;
    goto LABEL_6;
  }
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v13;
  swift_bridgeObjectRelease();
  id v14 = *(void **)(a1 + 152);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);

  uint64_t v15 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);

  return a1;
}

uint64_t getEnumTagSinglePayload for WelcomeModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 168)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WelcomeModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeModel()
{
  return &type metadata for WelcomeModel;
}

uint64_t sub_20A65A4D8@<X0>(uint64_t a1@<X0>, double a2@<X1>, double *a3@<X2>, uint64_t *a4@<X8>)
{
  v185 = a3;
  double v191 = a2;
  v192 = a4;
  sub_20A65B8E4(0, (unint64_t *)&qword_26AC7F540, MEMORY[0x263F7CB98]);
  double v7 = v6;
  uint64_t v177 = *(void *)(*(void *)&v6 - 8);
  MEMORY[0x270FA5388](*(void *)&v6);
  uint64_t v176 = (char *)&v166 - v8;
  uint64_t v179 = sub_20A8C2800();
  uint64_t v178 = *(void *)(v179 - 8);
  MEMORY[0x270FA5388](v179);
  long long v182 = (char *)&v166 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  v181 = (char *)&v166 - v11;
  sub_20A65B8E4(0, (unint64_t *)&qword_26AC7F5F8, MEMORY[0x263F7CC80]);
  uint64_t v13 = *(void *)(*(void *)&v12 - 8);
  double v193 = v12;
  *(void *)&long long v194 = v13;
  MEMORY[0x270FA5388](*(void *)&v12);
  uint64_t v15 = (char *)&v166 - v14;
  v189 = 0;
  uint64_t v16 = sub_20A8CDDA0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v175 = (char *)&v166 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v171 = (char *)&v166 - v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v173 = (char *)&v166 - v22;
  MEMORY[0x270FA5388](v23);
  v172 = (char *)&v166 - v24;
  MEMORY[0x270FA5388](v25);
  uint64_t v180 = (char *)&v166 - v26;
  MEMORY[0x270FA5388](v27);
  *(void *)&double v183 = (char *)&v166 - v28;
  MEMORY[0x270FA5388](v29);
  id v31 = (char *)&v166 - v30;
  uint64_t v174 = v4;
  uint64_t v32 = *(uint64_t *)(v4 + 16);
  sub_20A8CDDE0();
  sub_20A8CDD90();
  id v34 = *(uint64_t (**)(void, uint64_t))(v17 + 8);
  uint64_t v33 = v17 + 8;
  uint64_t v188 = v16;
  v187 = v34;
  v34(v31, v16);
  double v190 = v7;
  uint64_t v184 = a1;
  sub_20A8CDDF0();
  uint64_t v186 = v32;
  uint64_t v35 = v15;
  *(double *)&uint64_t v36 = COERCE_DOUBLE(sub_20A8CDFC0());
  char v38 = v37;
  swift_bridgeObjectRelease();
  id v39 = *(uint64_t (**)(char *, void))(v194 + 8);
  *(void *)&long long v194 = v194 + 8;
  uint64_t result = v39(v15, *(void *)&v193);
  _Q1 = 0uLL;
  double v42 = 0.0;
  if (v38)
  {
    uint64_t v59 = 0;
    uint64_t v60 = (uint64_t)v189;
    uint64_t v61 = (uint64_t)v189;
    double v62 = 0.0;
    double v63 = 0.0;
    double v64 = 0.0;
    double v65 = 0.0;
    uint64_t v66 = (uint64_t)v189;
LABEL_11:
    double v67 = 0.0;
    double v68 = 0.0;
    double v69 = 0.0;
    double v70 = 0.0;
    goto LABEL_27;
  }
  double v170 = *(double *)&v36;
  sub_20A8CDDE0();
  sub_20A8CDD90();
  uint64_t v169 = v31;
  unint64_t v43 = v31;
  uint64_t v44 = v188;
  uint64_t v45 = v187;
  v187(v43, v188);
  sub_20A8CDDF0();
  *(double *)&uint64_t v186 = COERCE_DOUBLE(sub_20A8CDFC0());
  char v47 = v46;
  swift_bridgeObjectRelease();
  uint64_t result = v39(v35, *(void *)&v193);
  if (v47)
  {
LABEL_26:
    uint64_t v60 = 0;
    uint64_t v61 = 0;
    uint64_t v66 = 0;
    uint64_t v59 = 0;
    double v62 = 0.0;
    double v63 = 0.0;
    double v64 = 0.0;
    double v65 = 0.0;
    double v67 = 0.0;
    double v68 = 0.0;
    double v69 = 0.0;
    double v70 = 0.0;
    double v42 = 0.0;
    _Q1 = 0uLL;
    goto LABEL_27;
  }
  uint64_t v168 = type metadata accessor for StockChartCalloutLayoutOptions();
  uint64_t v48 = v185;
  *(void *)&double v193 = (char *)v185 + *(int *)(v168 + 32);
  double v49 = *(double *)(*(void *)&v193 + 8);
  double v50 = v183;
  sub_20A8CDDE0();
  uint64_t v51 = sub_20A8CDD90();
  uint64_t v53 = v52;
  *(void *)&long long v194 = v33;
  uint64_t v54 = v45(*(void *)&v50, v44);
  uint64_t v200 = 0;
  MEMORY[0x270FA5388](v54);
  *(&v166 - 2) = (uint64_t)&v200;
  if ((v53 & 0x1000000000000000) != 0 || !(v53 & 0x2000000000000000 | v51 & 0x1000000000000000))
  {
    sub_20A8CF3B0();
LABEL_9:
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  MEMORY[0x270FA5388](v55);
  *(&v166 - 2) = (uint64_t)sub_20A65B9C8;
  *(&v166 - 1) = v56;
  if ((v53 & 0x2000000000000000) == 0)
  {
    if ((v51 & 0x1000000000000000) != 0)
    {
      uint64_t v57 = (v53 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v58 = v51 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v57 = sub_20A8CF420();
    }
    char v199 = sub_20A65B7FC(v57, v58, (void (*)(uint64_t *__return_ptr))sub_20A65BA50) & 1;
    goto LABEL_9;
  }
  uint64_t v195 = v51;
  uint64_t v196 = v53 & 0xFFFFFFFFFFFFFFLL;
  BOOL v72 = (v51 > 0x20u || ((0x100003E01uLL >> v51) & 1) == 0)
     && (id v71 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
     && *v71 == 0;
  char v199 = v72;
  uint64_t result = swift_bridgeObjectRelease();
LABEL_18:
  if ((v199 & 1) == 0) {
    goto LABEL_26;
  }
  uint64_t v73 = v180;
  sub_20A8CDDE0();
  uint64_t v74 = sub_20A8CDD90();
  uint64_t v76 = v75;
  uint64_t v77 = v187(v73, v188);
  uint64_t v200 = 0;
  MEMORY[0x270FA5388](v77);
  *(&v166 - 2) = (uint64_t)&v200;
  if ((v76 & 0x1000000000000000) != 0 || !(v76 & 0x2000000000000000 | v74 & 0x1000000000000000))
  {
    sub_20A8CF3B0();
LABEL_25:
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  MEMORY[0x270FA5388](v78);
  *(&v166 - 2) = (uint64_t)sub_20A65B9C8;
  *(&v166 - 1) = v79;
  if ((v76 & 0x2000000000000000) == 0)
  {
    if ((v74 & 0x1000000000000000) != 0)
    {
      uint64_t v80 = (v76 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v81 = v74 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v80 = sub_20A8CF420();
    }
    char v199 = sub_20A65B7FC(v80, v81, (void (*)(uint64_t *__return_ptr))sub_20A65BA50) & 1;
    goto LABEL_25;
  }
  uint64_t v195 = v74;
  uint64_t v196 = v76 & 0xFFFFFFFFFFFFFFLL;
  BOOL v84 = (v74 > 0x20u || ((0x100003E01uLL >> v74) & 1) == 0)
     && (uint64_t v83 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
     && *v83 == 0;
  char v199 = v84;
  uint64_t result = swift_bridgeObjectRelease();
LABEL_34:
  double v42 = 0.0;
  _Q1 = 0uLL;
  if ((v199 & 1) == 0)
  {
    uint64_t v60 = 0;
    uint64_t v61 = 0;
    uint64_t v66 = 0;
    uint64_t v59 = 0;
    double v62 = 0.0;
    double v63 = 0.0;
    double v64 = 0.0;
    double v65 = 0.0;
    goto LABEL_11;
  }
  double v167 = v49;
  uint64_t v86 = *(void *)(v174 + 48);
  uint64_t v85 = *(void *)(v174 + 56);
  __swift_project_boxed_opaque_existential_1((void *)(v174 + 24), v86);
  uint64_t v87 = v168;
  uint64_t v88 = *(void *)((char *)v48 + *(int *)(v168 + 28));
  uint64_t v89 = *(void *)(v85 + 8);
  double v183 = *(double *)(v89 + 8);
  uint64_t v197 = v86;
  uint64_t v198 = v85;
  v189 = __swift_allocate_boxed_opaque_existential_1(&v195);
  (*(void (**)(uint64_t, uint64_t, uint64_t))&v183)(v88, v86, v89);
  uint64_t v90 = (uint64_t)v181;
  sub_20A8C2780();
  uint64_t v91 = (uint64_t)v182;
  sub_20A8C2780();
  uint64_t v92 = sub_20A65B508((uint64_t)v48 + *(int *)(v87 + 24));
  uint64_t v93 = (uint64_t)v48 + *(int *)(v87 + 20);
  uint64_t v166 = v92;
  uint64_t v94 = sub_20A74B0B0(v90, v91, v93);
  uint64_t v95 = *(uint64_t (**)(uint64_t))(v85 + 24);
  uint64_t v180 = (char *)v86;
  uint64_t v174 = v85;
  uint64_t v60 = v95(v94);
  swift_bridgeObjectRelease();
  sub_20A8CEC50();
  double v97 = v96;
  uint64_t v168 = v98;
  double v99 = *v48;
  sub_20A8CE970();
  double v101 = v99 - v100;
  if (v101 >= v97) {
    double v101 = v97;
  }
  double v183 = v101;
  uint64_t v102 = v169;
  double v103 = v190;
  sub_20A8CDDE0();
  sub_20A8CDD70();
  double v105 = v104;
  uint64_t v106 = v188;
  uint64_t v107 = (void (*)(char *, uint64_t))v187;
  v187(v102, v188);
  uint64_t v108 = v172;
  uint64_t v109 = v184;
  sub_20A8CDDE0();
  sub_20A8CDD70();
  double v111 = v110;
  v107(v108, v106);
  double v112 = v105 - v111;
  uint64_t v113 = v173;
  sub_20A8CDDE0();
  sub_20A8CDD70();
  double v115 = v114;
  v107(v113, v106);
  uint64_t v116 = v177;
  uint64_t v117 = v176;
  (*(void (**)(char *, uint64_t, double))(v177 + 16))(v176, v109, COERCE_DOUBLE(*(void *)&v103));
  if (v115 >= 5.0 || v115 == 0.0)
  {
    v121 = v171;
    sub_20A8CDDE0();
    sub_20A8CDD70();
    double v123 = v122;
    uint64_t v119 = v188;
    uint64_t v120 = (void (*)(char *, uint64_t))v187;
    v187(v121, v188);
    (*(void (**)(char *, double))(v116 + 8))(v117, COERCE_DOUBLE(*(void *)&v103));
    char v118 = v123 == 0.0 || v123 >= 5.0;
  }
  else
  {
    (*(void (**)(char *, double))(v116 + 8))(v117, COERCE_DOUBLE(*(void *)&v103));
    char v118 = 0;
    uint64_t v119 = v188;
    uint64_t v120 = (void (*)(char *, uint64_t))v187;
  }
  double v124 = v170;
  double v125 = *(double *)&v186;
  double v126 = v99 - v183;
  uint64_t v127 = 9666786;
  uint64_t v128 = sub_20A8C0DB4(v118, v112);
  if (v129)
  {
    unint64_t v130 = v129;
  }
  else
  {
    uint64_t v128 = 9666786;
    unint64_t v130 = 0xA300000000000000;
  }
  uint64_t v61 = (*(uint64_t (**)(uint64_t, unint64_t, char *, double))(v174 + 32))(v128, v130, v180, v112);
  swift_bridgeObjectRelease();
  sub_20A8CEC50();
  double v64 = v131;
  double v65 = v132;
  v133 = v175;
  sub_20A8CDDE0();
  sub_20A8CDD70();
  double v135 = v134;
  v120(v133, v119);
  if (v135 - v112 <= 0.0) {
    double v137 = 0.0;
  }
  else {
    double v137 = v112 / (v135 - v112);
  }
  if (qword_267639B08 != -1) {
    swift_once();
  }
  double v138 = v167 + v124;
  double v139 = v167 + v125;
  *(double *)&long long v136 = v126 * 0.5;
  long long v194 = v136;
  v140 = (void *)qword_267652E20;
  id v141 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v137);
  id v142 = objc_msgSend(v140, sel_stringFromNumber_, v141);

  double v143 = v193;
  double v191 = v138;
  double v190 = v139;
  if (v142)
  {
    uint64_t v127 = sub_20A8CE280();
    unint64_t v145 = v144;
  }
  else
  {
    unint64_t v145 = 0xA300000000000000;
  }
  uint64_t v66 = (*(uint64_t (**)(uint64_t, unint64_t, char *, double))(v174 + 40))(v127, v145, v180, v112);
  swift_bridgeObjectRelease();
  sub_20A8CEC50();
  double v69 = v146;
  double v70 = v147;
  uint64_t v148 = v185;
  double v149 = *v185;
  double v150 = *v185 - v64 - v146;
  double v151 = *(double *)(*(void *)&v143 + 8);
  double v152 = *(double *)(*(void *)&v143 + 24);
  sub_20A8CE970();
  double v154 = v150 - v153;
  if (v154 > 50.0) {
    double v154 = 50.0;
  }
  double v155 = 0.0;
  if (v154 > 0.0) {
    double v155 = v154;
  }
  double v193 = v155;
  double v156 = v64 + v69 + v155;
  double v157 = v149 - v156 - v152;
  if (v157 <= v151) {
    double v157 = v151;
  }
  double v158 = v191 + (v190 - v191) * 0.5 - v156 * 0.5;
  if (v158 <= v151) {
    double v158 = v151;
  }
  if (v157 >= v158) {
    double v62 = v158;
  }
  else {
    double v62 = v157;
  }
  double v63 = v148[1] - v65 + -4.0;
  v201.origin.x = v62;
  v201.origin.y = v63;
  v201.size.width = v64;
  v201.size.height = v65;
  double MaxX = CGRectGetMaxX(v201);
  swift_release();
  v160 = *(void (**)(char *, uint64_t))(v178 + 8);
  uint64_t v161 = v179;
  v160(v182, v179);
  v160(v181, v161);
  double v67 = MaxX + v193;
  double v68 = v148[1] - v70 + -4.0;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v195);
  __asm { FMOV            V1.2D, #5.0 }
  *(void *)&_Q1 = v194;
  double v42 = v183;
  uint64_t v59 = v168;
LABEL_27:
  uint64_t v82 = v192;
  uint64_t *v192 = v60;
  *(_OWORD *)(v82 + 1) = _Q1;
  *((double *)v82 + 3) = v42;
  v82[4] = v59;
  v82[5] = v61;
  *((double *)v82 + 6) = v62;
  *((double *)v82 + 7) = v63;
  *((double *)v82 + 8) = v64;
  *((double *)v82 + 9) = v65;
  v82[10] = v66;
  *((double *)v82 + 11) = v67;
  *((double *)v82 + 12) = v68;
  *((double *)v82 + 13) = v69;
  *((double *)v82 + 14) = v70;
  return result;
}

uint64_t sub_20A65B508(uint64_t a1)
{
  uint64_t v3 = sub_20A8C2AF0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  double v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = (uint64_t *)(v1 + 64);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v1 + 64);
  if (*(void *)(v8 + 16) && (unint64_t v9 = sub_20A4D1B9C(a1), (v10 & 1) != 0))
  {
    uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
    swift_endAccess();
    swift_retain();
  }
  else
  {
    swift_endAccess();
    double v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v12(v6, a1, v3);
    type metadata accessor for StockChartCalloutDateFormatter();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___dateFormatter) = 0;
    *(void *)(v11 + OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___timeFormatter) = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v11 + OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter_timezone, v6, v3);
    v12(v6, a1, v3);
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v7;
    *double v7 = 0x8000000000000000;
    sub_20A7A3CB4(v11, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
    *double v7 = v15;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_endAccess();
  }
  return v11;
}

uint64_t sub_20A65B724()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockChartRangeCalloutLayoutAttributesFactory()
{
  return self;
}

unsigned char *sub_20A65B790@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  BOOL v7 = v6 && (result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_20A65B7FC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

void *sub_20A65B85C@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X2>, unsigned char *a2@<X8>)
{
  uint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_20A65B8A0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A8CDDA0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A65B8E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = sub_20A8CDDA0();
    v8[1] = sub_20A65B8A0(&qword_26AC7F510);
    v8[2] = sub_20A65B8A0(&qword_26AC7F500);
    v8[3] = sub_20A65B8A0(&qword_26AC7F508);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unsigned char *sub_20A65B9C8@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_20A65B9E0(a1, a2);
}

unsigned char *sub_20A65B9E0@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  BOOL v7 = v6 && (result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_20A65BA50@<X0>(unsigned char *a1@<X8>)
{
  return sub_20A65BA68(a1);
}

void *sub_20A65BA68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

unint64_t sub_20A65BAAC(char a1, char a2)
{
  sub_20A65C824(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
  if (a1)
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
    BOOL v6 = (void *)*MEMORY[0x263F814F0];
    *(void *)(inited + 32) = *MEMORY[0x263F814F0];
    BOOL v7 = (void *)v2[7];
    uint64_t v8 = self;
    double v9 = *MEMORY[0x263F81828];
    id v10 = v6;
    id v11 = objc_msgSend(v8, sel_systemFontOfSize_weight_, 17.0, v9);
    id v12 = objc_msgSend(v7, sel_scaledFontForFont_, v11);

    uint64_t v13 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
    *(void *)(inited + 40) = v12;
    uint64_t v14 = (void *)*MEMORY[0x263F81500];
    *(void *)(inited + 64) = v13;
    *(void *)(inited + 72) = v14;
    if (a2)
    {
      uint64_t v15 = self;
      id v16 = v14;
      id v17 = objc_msgSend(v15, sel_secondaryLabelColor);
    }
    else
    {
      uint64_t v32 = v2[5];
      uint64_t v33 = v2[6];
      __swift_project_boxed_opaque_existential_1(v2 + 2, v32);
      uint64_t v34 = *(void *)(v33 + 16);
      uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 96);
      id v36 = v14;
      id v17 = (id)v35(v32, v34);
    }
  }
  else
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
    uint64_t v18 = (void *)*MEMORY[0x263F814F0];
    *(void *)(inited + 32) = *MEMORY[0x263F814F0];
    uint64_t v19 = (void *)v2[7];
    uint64_t v20 = self;
    double v21 = *MEMORY[0x263F81838];
    id v22 = v18;
    id v23 = objc_msgSend(v20, sel_systemFontOfSize_weight_, 17.0, v21);
    id v24 = objc_msgSend(v19, sel_scaledFontForFont_, v23);

    uint64_t v25 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
    *(void *)(inited + 40) = v24;
    uint64_t v26 = (void *)*MEMORY[0x263F81500];
    *(void *)(inited + 64) = v25;
    *(void *)(inited + 72) = v26;
    uint64_t v27 = v2[5];
    uint64_t v28 = v2[6];
    __swift_project_boxed_opaque_existential_1(v2 + 2, v27);
    uint64_t v29 = *(void *)(v28 + 16);
    uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 224);
    id v31 = v26;
    id v17 = (id)v30(v27, v29);
  }
  id v37 = v17;
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v37;
  return sub_20A4CF8B0(inited);
}

uint64_t sub_20A65BD88()
{
  sub_20A65C824(0, (unint64_t *)&qword_26AC7FC70, MEMORY[0x263F82228], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  unsigned int v3 = (char *)v25 - v2;
  uint64_t v4 = sub_20A8CF110();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x263F83570]);
  uint64_t v9 = sub_20A8CEC80();
  id v10 = self;
  id v11 = objc_msgSend(v10, sel_configurationWithFont_scale_, v8, v9);

  sub_20A45F33C();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_20A8D5CA0;
  uint64_t v13 = v0 + 2;
  uint64_t v15 = v0[5];
  uint64_t v14 = v0[6];
  __swift_project_boxed_opaque_existential_1(v13, v15);
  id v16 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v14 + 16) + 96))(v15);
  id v17 = objc_msgSend(v16, sel_stocksAccessibilityAdjustedForIncreaseContrast);

  *(void *)(v12 + 32) = v17;
  v25[1] = v12;
  sub_20A8CE620();
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  uint64_t v18 = (void *)sub_20A8CE5D0();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v10, sel_configurationWithPaletteColors_, v18);

  id v20 = objc_msgSend(v11, sel_configurationByApplyingConfiguration_, v19);
  sub_20A8CF0F0();
  id v21 = v20;
  id v22 = (void *)sub_20A8CE240();
  id v23 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v22, v21);

  sub_20A8CF0E0();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v7, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  sub_20A8CF130();

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id sub_20A65C108(char a1)
{
  id v3 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x263F83570]);
  uint64_t v4 = sub_20A8CEC80();
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_configurationWithFont_scale_, v3, v4);

  sub_20A45F33C();
  if (a1)
  {
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_20A8D5C90;
    *(void *)(v7 + 32) = objc_msgSend(self, sel_whiteColor);
    id v8 = v1 + 2;
    uint64_t v10 = v1[5];
    uint64_t v9 = v1[6];
    __swift_project_boxed_opaque_existential_1(v8, v10);
    *(void *)(v7 + 40) = (*(uint64_t (**)(uint64_t))(*(void *)(v9 + 16) + 96))(v10);
    sub_20A8CE620();
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
    id v11 = (void *)sub_20A8CE5D0();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v5, sel_configurationWithPaletteColors_, v11);

    id v13 = objc_msgSend(v6, sel_configurationByApplyingConfiguration_, v12);
    uint64_t v14 = (void *)sub_20A8CE240();
    id v15 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v14, v13);

    if (!v15) {
LABEL_6:
    }
      id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
  }
  else
  {
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_20A8D5CA0;
    *(void *)(v16 + 32) = objc_msgSend(self, sel_secondaryLabelColor);
    sub_20A8CE620();
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
    id v17 = (void *)sub_20A8CE5D0();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v5, sel_configurationWithPaletteColors_, v17);

    id v13 = objc_msgSend(v6, sel_configurationByApplyingConfiguration_, v12);
    uint64_t v18 = (void *)sub_20A8CE240();
    id v19 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v18, v13);

    if (!v19) {
      goto LABEL_6;
    }
    id v20 = objc_msgSend(v5, sel_configurationWithWeight_, 2);
    id v15 = objc_msgSend(v19, sel_imageByApplyingSymbolConfiguration_, v20);

    if (!v15) {
      goto LABEL_6;
    }
  }

  return v15;
}

uint64_t type metadata accessor for WatchlistCellViewStyler()
{
  return self;
}

unint64_t sub_20A65C4D0(char a1, char a2)
{
  return sub_20A65BAAC(a1, a2);
}

void sub_20A65C4F4(void *a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  objc_msgSend(a1, sel_setNumberOfLines_, 2);
  swift_bridgeObjectRetain();
  sub_20A65BAAC(a5, a4);
  id v8 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v9 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v10 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v8, sel_initWithString_attributes_, v9, v10);

  objc_msgSend(a1, sel_setAttributedText_, v11);
}

uint64_t sub_20A65C614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 40);
  uint64_t v8 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  uint64_t v12 = v10(a1, v7, v9);
  double v13 = MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A65C760((uint64_t)v15, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

uint64_t sub_20A65C760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, *MEMORY[0x263F835D0]);
  sub_20A42BEBC(&v9, v7 + 16);
  return v7;
}

void sub_20A65C824(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A65C888()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_name_object_, v0, *MEMORY[0x263F831B8], 0);

  return swift_deallocClassInstance();
}

void sub_20A65C910()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_allObjects);
  sub_20A65CB38();
  unint64_t v2 = sub_20A8CE5E0();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_20A8CF540();
    swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      goto LABEL_10;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = (void *)MEMORY[0x210527700](i, v2);
    }
    else
    {
      uint64_t v5 = *(void **)(v2 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    objc_msgSend(v5, sel_invertColorsStatusDidChange);
    swift_unknownObjectRelease();
  }
LABEL_10:

  swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for InvertColorsRefreshManager()
{
  return self;
}

unint64_t sub_20A65CB38()
{
  unint64_t result = qword_26763CD60;
  if (!qword_26763CD60)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26763CD60);
  }
  return result;
}

uint64_t *sub_20A65CB90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    unint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_20A8C2800();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      sub_20A65DF0C(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t sub_20A65CD40(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_20A8C2800();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_20A65CE10(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_20A8C2800();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    sub_20A65DF0C(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *sub_20A65CF60(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2800();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_20A65DF0C(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

void *sub_20A65D11C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_20A8C2800();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_20A65DF0C(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *sub_20A65D25C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2800();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_20A65DF0C(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_20A65D410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A65D424);
}

uint64_t sub_20A65D424(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_20A65DF0C(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_20A65D504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A65D518);
}

void *sub_20A65D518(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_20A65DF0C(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for StockFeedConfig()
{
  uint64_t result = qword_26AC6E440;
  if (!qword_26AC6E440) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A65D63C()
{
  sub_20A65DF0C(319, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_20A65D708()
{
  return sub_20A65E040(&qword_26AC720E8, (void (*)(uint64_t))type metadata accessor for StockFeedGroupConfig);
}

uint64_t sub_20A65D750()
{
  return sub_20A65E040(&qword_26AC75010, (void (*)(uint64_t))type metadata accessor for StockFeedServiceContext);
}

uint64_t sub_20A65D798@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v17 = type metadata accessor for StockFeedConfig();
  MEMORY[0x270FA5388](v17);
  uint64_t v5 = (uint64_t *)((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A65DF0C(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v16 - v7;
  sub_20A65DE5C();
  uint64_t v10 = v9;
  uint64_t v16 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A65DEB8();
  sub_20A8CF8E0();
  if (!v2)
  {
    sub_20A65DF0C(0, &qword_26AC7F7D8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedGroupConfig, MEMORY[0x263F8D488]);
    char v20 = 0;
    sub_20A65DF70();
    sub_20A8CF5C0();
    uint64_t v13 = v21;
    sub_20A8C2800();
    char v19 = 1;
    sub_20A65E040(&qword_26AC68CB0, MEMORY[0x263F07490]);
    sub_20A8CF5C0();
    uint64_t v14 = MEMORY[0x263F8EE78];
    if (v13) {
      uint64_t v14 = v13;
    }
    *uint64_t v5 = v14;
    sub_20A4469A8((uint64_t)v8, (uint64_t)v5 + *(int *)(v17 + 20));
    sub_20A65E088((uint64_t)v5, v18);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_20A65DA8C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20A44FB24(*a1, *a2);
}

uint64_t sub_20A65DA98()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A65DB20()
{
  sub_20A8CE360();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A65DB94()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A65DC18@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_20A8CF5B0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_20A65DC78(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7370756F7267;
  if (*v1) {
    uint64_t v2 = 0x446873696C627570;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xEB00000000657461;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_20A65DCBC()
{
  if (*v0) {
    return 0x446873696C627570;
  }
  else {
    return 0x7370756F7267;
  }
}

uint64_t sub_20A65DCFC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_20A8CF5B0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_20A65DD60(uint64_t a1)
{
  unint64_t v2 = sub_20A65DEB8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A65DD9C(uint64_t a1)
{
  unint64_t v2 = sub_20A65DEB8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20A65DDD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A65D798(a1, a2);
}

uint64_t sub_20A65DDF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A58D478(v2 + *(int *)(a1 + 20), a2);
}

uint64_t sub_20A65DE00()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_20A65DE08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_20A58D478(v3 + *(int *)(a2 + 20), (uint64_t)a3 + *(int *)(a2 + 20));
  *a3 = a1;

  return swift_bridgeObjectRetain();
}

void sub_20A65DE5C()
{
  if (!qword_26AC7FDF0)
  {
    sub_20A65DEB8();
    unint64_t v0 = sub_20A8CF660();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FDF0);
    }
  }
}

unint64_t sub_20A65DEB8()
{
  unint64_t result = qword_26AC6E418;
  if (!qword_26AC6E418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6E418);
  }
  return result;
}

void sub_20A65DF0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_20A65DF70()
{
  unint64_t result = qword_26AC7F7E0;
  if (!qword_26AC7F7E0)
  {
    sub_20A65DF0C(255, &qword_26AC7F7D8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedGroupConfig, MEMORY[0x263F8D488]);
    sub_20A65E040(&qword_26AC72108, (void (*)(uint64_t))type metadata accessor for StockFeedGroupConfig);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7F7E0);
  }
  return result;
}

uint64_t sub_20A65E040(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A65E088(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockFeedConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for StockFeedConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A65E1B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedConfig.CodingKeys()
{
  return &type metadata for StockFeedConfig.CodingKeys;
}

unint64_t sub_20A65E1F4()
{
  unint64_t result = qword_26763CD68;
  if (!qword_26763CD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CD68);
  }
  return result;
}

unint64_t sub_20A65E24C()
{
  unint64_t result = qword_26AC6E428;
  if (!qword_26AC6E428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6E428);
  }
  return result;
}

unint64_t sub_20A65E2A4()
{
  unint64_t result = qword_26AC6E420;
  if (!qword_26AC6E420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6E420);
  }
  return result;
}

id sub_20A65E320()
{
  uint64_t v1 = OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___titleLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___titleLabel);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
    uint64_t v5 = (void *)sub_20A8CE240();
    objc_msgSend(v4, sel_setText_, v5);

    id v6 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x263F835D0]);
    objc_msgSend(v4, sel_setFont_, v6);

    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_20A65E424()
{
  uint64_t v1 = OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___messageLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___messageLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___messageLabel);
  }
  else
  {
    id v4 = sub_20A65E488();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_20A65E488()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  uint64_t v1 = (void *)sub_20A8CE240();
  objc_msgSend(v0, sel_setText_, v1);

  id v2 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x263F83580]);
  objc_msgSend(v0, sel_setFont_, v2);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  objc_msgSend(v0, sel_setTextAlignment_, 1);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v0;
}

id sub_20A65E57C()
{
  uint64_t v1 = OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___textFieldLabel;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___textFieldLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___textFieldLabel);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
    id v5 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x263F83580]);
    objc_msgSend(v4, sel_setFont_, v5);

    id v6 = objc_msgSend(self, sel_secondaryLabelColor);
    objc_msgSend(v4, sel_setTextColor_, v6);

    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_20A65E68C()
{
  uint64_t v1 = OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___textField;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___textField);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___textField);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82CF0]), sel_init);
    objc_msgSend(v4, sel_setBorderStyle_, 3);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setEnabled_, 0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_20A65E73C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *a1;
  id v6 = *(void **)(v4 + *a1);
  if (v6)
  {
    id v7 = *(id *)(v4 + *a1);
  }
  else
  {
    uint64_t v10 = v4;
    sub_20A42CFF0(0, &qword_26763CDE0);
    sub_20A42CFF0(0, &qword_26AC82728);
    uint64_t v11 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_bridgeObjectRetain();
    sub_20A8CEF60();
    int v12 = (void *)sub_20A8CF140();
    objc_msgSend(v12, sel_setRole_, a4, 0, 0, 0, a3, v11);
    id v13 = objc_msgSend(v12, sel_widthAnchor);
    id v14 = objc_msgSend(v13, sel_constraintGreaterThanOrEqualToConstant_, 60.0);

    objc_msgSend(v14, sel_setActive_, 1);
    objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v15 = *(void **)(v10 + v5);
    *(void *)(v10 + v5) = v12;
    id v7 = v12;

    id v6 = 0;
  }
  id v16 = v6;
  return v7;
}

void sub_20A65E8F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x2105289B0](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    uint64_t v5 = *(void (**)(uint64_t))(v3 + OBJC_IVAR____TtC8StocksUI24TextFieldAlertController_onCancel);
    if (v5)
    {
      uint64_t v6 = swift_retain();
      v5(v6);
      sub_20A459CA4((uint64_t)v5);
    }
    objc_msgSend(v4, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

void sub_20A65E998(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x2105289B0](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    uint64_t v5 = *(void (**)(uint64_t, unint64_t))(v3
                                                          + OBJC_IVAR____TtC8StocksUI24TextFieldAlertController_onSubmit);
    if (v5)
    {
      swift_retain();
      id v6 = sub_20A65E68C();
      id v7 = objc_msgSend(v6, sel_text);

      if (v7)
      {
        uint64_t v8 = sub_20A8CE280();
        unint64_t v10 = v9;
      }
      else
      {
        uint64_t v8 = 0;
        unint64_t v10 = 0xE000000000000000;
      }
      v5(v8, v10);
      sub_20A459CA4((uint64_t)v5);
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v4, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

id sub_20A65EB3C()
{
  uint64_t v1 = v0;
  v13.receiver = v0;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, sel_viewDidLoad);
  id v2 = objc_msgSend(self, sel_mainBundle);
  sub_20A8C2370();

  uint64_t v3 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityLabel_, v3, 0x800000020A908140);

  sub_20A65ED00();
  uint64_t v4 = *(void (**)(id, id))&v1[OBJC_IVAR____TtC8StocksUI24TextFieldAlertController_configureTextField];
  if (v4)
  {
    swift_retain();
    id v5 = sub_20A65E68C();
    id v6 = sub_20A65E57C();
    v4(v5, v6);
    sub_20A459CA4((uint64_t)v4);
  }
  id result = objc_msgSend(v1, sel_view);
  if (result)
  {
    uint64_t v8 = result;
    objc_msgSend(result, sel_systemLayoutSizeFittingSize_, *MEMORY[0x263F83810], *(double *)(MEMORY[0x263F83810] + 8));
    double v10 = v9;
    double v12 = v11;

    return objc_msgSend(v1, sel_setPreferredContentSize_, v10, v12);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_20A65ED00()
{
  uint64_t v1 = v0;
  sub_20A45F33C();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_20A8D5C90;
  *(void *)(v2 + 32) = sub_20A65E73C(&OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___cancelButton, (uint64_t)&OBJC_IVAR____TtC8StocksUI24TextFieldAlertController_cancelTitle, (uint64_t)sub_20A65FB80, 2);
  *(void *)(v2 + 40) = sub_20A65E73C(&OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___submitButton, (uint64_t)&OBJC_IVAR____TtC8StocksUI24TextFieldAlertController_submitTitle, (uint64_t)sub_20A65FB78, 1);
  sub_20A8CE620();
  id v3 = objc_allocWithZone(MEMORY[0x263F82BF8]);
  sub_20A42CFF0(0, &qword_26763CD58);
  uint64_t v4 = (void *)sub_20A8CE5D0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithArrangedSubviews_, v4);

  objc_msgSend(v5, sel_setAxis_, 0);
  objc_msgSend(v5, sel_setDistribution_, 1);
  objc_msgSend(v5, sel_setSpacing_, 8.0);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v6 = objc_msgSend(v1, sel_view);
  if (!v6)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v7 = v6;
  objc_msgSend(v6, sel_addSubview_, v5);

  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_20A8D5C90;
  *(void *)(v8 + 32) = sub_20A65E57C();
  *(void *)(v8 + 40) = sub_20A65E68C();
  int v69 = v8;
  sub_20A8CE620();
  id v9 = objc_allocWithZone(MEMORY[0x263F82BF8]);
  double v10 = (void *)sub_20A8CE5D0();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, (SEL)&selRef_widthAnchor + 2, v10);

  objc_msgSend(v11, (SEL)&selRef_navigationBar, 0);
  objc_msgSend(v11, sel_setSpacing_, 8.0);
  objc_msgSend(v11, sel_setAlignment_, 2);
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v12 = sub_20A65E68C();
  type metadata accessor for UILayoutPriority(0);
  sub_20A65FAE8();
  sub_20A8CBCB0();
  LODWORD(v13) = v69;
  objc_msgSend(v12, sel_setContentHuggingPriority_forAxis_, 0, v13);

  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_20A8D8D40;
  *(void *)(v14 + 32) = sub_20A65E320();
  *(void *)(v14 + 40) = sub_20A65E424();
  *(void *)(v14 + 48) = v11;
  sub_20A8CE620();
  id v15 = objc_allocWithZone(MEMORY[0x263F82BF8]);
  id v68 = v11;
  id v16 = (void *)sub_20A8CE5D0();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v15, (SEL)&selRef_widthAnchor + 2, v16);

  objc_msgSend(v17, sel_setAxis_, 1);
  objc_msgSend(v17, sel_setAlignment_, 3);
  objc_msgSend(v17, sel_setSpacing_, 10.0);
  id v18 = sub_20A65E424();
  objc_msgSend(v17, sel_setCustomSpacing_afterView_, v18, 20.0);

  objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v19 = objc_msgSend(v1, sel_view);
  if (!v19)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  char v20 = v19;
  objc_msgSend(v19, sel_addSubview_, v17);

  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_20A8E6000;
  id v22 = objc_msgSend(v17, sel_topAnchor);
  id v23 = objc_msgSend(v1, sel_view);
  if (!v23)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v24 = v23;
  id v25 = objc_msgSend(v23, sel_topAnchor);

  id v26 = objc_msgSend(v22, sel_constraintEqualToSystemSpacingBelowAnchor_multiplier_, v25, 1.0);
  *(void *)(v21 + 32) = v26;
  id v27 = objc_msgSend(v1, sel_view);
  if (!v27)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v28 = v27;
  id v29 = objc_msgSend(v27, sel_trailingAnchor);

  id v30 = objc_msgSend(v17, sel_trailingAnchor);
  id v31 = objc_msgSend(v29, sel_constraintEqualToSystemSpacingAfterAnchor_multiplier_, v30, 1.0);

  *(void *)(v21 + 40) = v31;
  id v32 = objc_msgSend(v17, sel_leadingAnchor);
  id v33 = objc_msgSend(v1, sel_view);
  if (!v33)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v34 = v33;
  id v35 = objc_msgSend(v33, sel_leadingAnchor);

  id v36 = objc_msgSend(v32, sel_constraintEqualToSystemSpacingAfterAnchor_multiplier_, v35, 1.0);
  *(void *)(v21 + 48) = v36;
  id v37 = objc_msgSend(v68, sel_heightAnchor);
  id v38 = sub_20A65E68C();
  id v39 = objc_msgSend(v38, sel_heightAnchor);

  id v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v39);
  *(void *)(v21 + 56) = v40;
  id v41 = objc_msgSend(v68, sel_widthAnchor);
  id v42 = objc_msgSend(v17, (SEL)&selRef__setAccessibilityActivateBlock_);
  id v43 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v42);

  *(void *)(v21 + 64) = v43;
  id v44 = objc_msgSend(v5, sel_topAnchor);
  id v45 = objc_msgSend(v17, sel_bottomAnchor);
  id v46 = objc_msgSend(v44, sel_constraintEqualToAnchor_constant_, v45, 20.0);

  *(void *)(v21 + 72) = v46;
  id v47 = objc_msgSend(v5, sel_leadingAnchor);
  id v48 = objc_msgSend(v1, sel_view);
  if (!v48)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  double v49 = v48;
  id v50 = objc_msgSend(v48, sel_leadingAnchor);

  id v51 = objc_msgSend(v47, sel_constraintGreaterThanOrEqualToSystemSpacingAfterAnchor_multiplier_, v50, 1.0);
  *(void *)(v21 + 80) = v51;
  id v52 = objc_msgSend(v1, sel_view);
  if (!v52)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v53 = v52;
  id v54 = objc_msgSend(v52, sel_trailingAnchor);

  id v55 = objc_msgSend(v5, sel_trailingAnchor);
  id v56 = objc_msgSend(v54, sel_constraintEqualToSystemSpacingAfterAnchor_multiplier_, v55, 1.0);

  *(void *)(v21 + 88) = v56;
  id v57 = objc_msgSend(v1, sel_view);
  if (!v57)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v58 = v57;
  id v59 = objc_msgSend(v57, sel_bottomAnchor);

  id v60 = objc_msgSend(v5, sel_bottomAnchor);
  id v61 = objc_msgSend(v59, sel_constraintEqualToSystemSpacingBelowAnchor_multiplier_, v60, 1.0);

  *(void *)(v21 + 96) = v61;
  id v62 = objc_msgSend(v1, sel_view);
  if (v62)
  {
    double v63 = v62;
    double v64 = self;
    id v65 = objc_msgSend(v63, (SEL)&selRef__setAccessibilityActivateBlock_);

    id v66 = objc_msgSend(v65, sel_constraintEqualToConstant_, 330.0);
    *(void *)(v21 + 104) = v66;
    sub_20A8CE620();
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F960);
    double v67 = (void *)sub_20A8CE5D0();
    swift_bridgeObjectRelease();
    objc_msgSend(v64, sel_activateConstraints_, v67);

    return;
  }
LABEL_19:
  __break(1u);
}

uint64_t type metadata accessor for TextFieldAlertController()
{
  return self;
}

void sub_20A65F940()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC8StocksUI24TextFieldAlertController_configureTextField];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC8StocksUI24TextFieldAlertController_onSubmit];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  id v3 = &v0[OBJC_IVAR____TtC8StocksUI24TextFieldAlertController_onCancel];
  *(void *)id v3 = 0;
  *((void *)v3 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___titleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___messageLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___textFieldLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___textField] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___cancelButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___submitButton] = 0;

  sub_20A8CF520();
  __break(1u);
}

uint64_t sub_20A65FA18()
{
  sub_20A42CFF0(0, &qword_26AC82FE8);
  sub_20A8CE280();
  uint64_t v0 = sub_20A8CE990();
  sub_20A45F33C();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_20A8D5CA0;
  *(void *)(v1 + 32) = v0;
  uint64_t v3 = v1;
  sub_20A8CE620();
  return v3;
}

unint64_t sub_20A65FAE8()
{
  unint64_t result = qword_26763CDD8;
  if (!qword_26763CDD8)
  {
    type metadata accessor for UILayoutPriority(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CDD8);
  }
  return result;
}

uint64_t sub_20A65FB40()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_20A65FB78(uint64_t a1)
{
  sub_20A65E998(a1, v1);
}

void sub_20A65FB80(uint64_t a1)
{
  sub_20A65E8F4(a1, v1);
}

uint64_t sub_20A65FB88(uint64_t a1)
{
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 56), *(void *)(a1 + 80));
  sub_20A8C3800();
  sub_20A66136C(0, &qword_26AC82748, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroupConfig, MEMORY[0x263F8E0F8]);
  uint64_t v1 = *(void *)(type metadata accessor for ForYouFeedGroupConfig() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20A8D3DC0;
  unint64_t v4 = v3 + v2;
  if (qword_26AC824B0 != -1) {
    swift_once();
  }
  sub_20A460F28();
  uint64_t v6 = v5;
  uint64_t v7 = __swift_project_value_buffer(v5, (uint64_t)qword_26AC9ECF0);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v4, v7, v6);
  swift_storeEnumTagMultiPayload();
  return v3;
}

uint64_t sub_20A65FD20(id *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v49 = a2;
  uint64_t v5 = sub_20A8C40E0();
  uint64_t v53 = *(void *)(v5 - 8);
  uint64_t v54 = v5;
  MEMORY[0x270FA5388](v5);
  id v56 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_20A8CC920();
  uint64_t v44 = *(void *)(v50 - 8);
  uint64_t v7 = v44;
  MEMORY[0x270FA5388](v50);
  id v48 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C3190();
  uint64_t v51 = *(void *)(v9 - 8);
  uint64_t v52 = v9;
  MEMORY[0x270FA5388](v9);
  id v46 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A66136C(0, &qword_26AC72AE0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedKnobsConfig, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v44 - v13;
  sub_20A66136C(0, qword_26AC6EDE8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedConfig, v11);
  MEMORY[0x270FA5388](v15 - 8);
  id v17 = (uint64_t *)((char *)&v44 - v16);
  uint64_t v18 = type metadata accessor for ForYouFeedContentConfig();
  MEMORY[0x270FA5388](v18 - 8);
  char v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v55 = v20;
  uint64_t v21 = type metadata accessor for ForYouFeedServiceConfig();
  id v22 = (int *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  id v24 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v47 = (uint64_t)&v44 - v26;
  id v45 = *a1;
  uint64_t v27 = type metadata accessor for ForYouFeedConfig();
  uint64_t v28 = (char *)v17 + *(int *)(v27 + 20);
  sub_20A8C27F0();
  uint64_t v29 = sub_20A8C2800();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 0, 1, v29);
  *id v17 = a3;
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v17, 0, 1, v27);
  uint64_t v30 = type metadata accessor for ForYouFeedKnobsConfig();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v14, 1, 1, v30);
  swift_bridgeObjectRetain();
  sub_20A669548((uint64_t)v17, (uint64_t)v14, (uint64_t)v20);
  uint64_t v31 = v49;
  __swift_project_boxed_opaque_existential_1((void *)(v49 + 16), *(void *)(v49 + 40));
  id v45 = v45;
  id v32 = v46;
  sub_20A8C3AC0();
  id v33 = *(void (**)(char *, void, uint64_t))(v7 + 104);
  uint64_t v34 = v48;
  uint64_t v35 = v50;
  v33(v48, *MEMORY[0x263F59888], v50);
  __swift_project_boxed_opaque_existential_1((void *)(v31 + 152), *(void *)(v31 + 176));
  sub_20A8C3600();
  sub_20A6613D0((uint64_t)v55, (uint64_t)v24);
  *(void *)&v24[v22[8]] = v45;
  uint64_t v36 = v51;
  id v37 = v32;
  id v38 = v32;
  uint64_t v39 = v52;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(&v24[v22[9]], v38, v52);
  uint64_t v40 = v44;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(&v24[v22[10]], v34, v35);
  sub_20A8C3110();
  uint64_t v42 = v41;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v34, v35);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v39);
  sub_20A661434((uint64_t)v55);
  *(void *)&v24[v22[11]] = v42;
  (*(void (**)(char *, char *, uint64_t))(v53 + 32))(&v24[v22[12]], v56, v54);
  sub_20A661590((uint64_t)v24, v47, (uint64_t (*)(void))type metadata accessor for ForYouFeedServiceConfig);
  sub_20A66136C(0, &qword_26AC69898, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, MEMORY[0x263F7D028]);
  swift_allocObject();
  return sub_20A8C6580();
}

uint64_t type metadata accessor for LegacyForYouFeedServiceConfigFetcher()
{
  return self;
}

uint64_t sub_20A660378()
{
  uint64_t v1 = sub_20A65FB88(*v0);
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC686C0);
  sub_20A8C6670();
  *(void *)(swift_allocObject() + 16) = v1;
  unint64_t v2 = (void *)sub_20A8C6450();
  type metadata accessor for ForYouFeedServiceConfig();
  uint64_t v3 = sub_20A8C6510();
  swift_release();
  swift_release();

  return v3;
}

uint64_t sub_20A66046C(uint64_t a1)
{
  id v2 = objc_msgSend(*(id *)(a1 + 96), sel_appConfiguration);
  if (objc_msgSend(v2, sel_respondsToSelector_, sel_paidBundleConfig))
  {
    objc_msgSend(v2, sel_paidBundleConfig);
    swift_unknownObjectRelease();
    sub_20A661490();
    swift_allocObject();
    return sub_20A8C6580();
  }
  else
  {
    swift_unknownObjectRelease();
    __swift_project_boxed_opaque_existential_1((void *)(a1 + 112), *(void *)(a1 + 136));
    return sub_20A8CD970();
  }
}

uint64_t sub_20A660548(void **a1)
{
  uint64_t v1 = *a1;
  sub_20A8C6670();
  id v2 = (void *)sub_20A8C6450();
  type metadata accessor for ForYouFeedContentConfig();
  sub_20A8C6500();
  swift_release();

  *(void *)(swift_allocObject() + 16) = v1;
  id v3 = v1;
  unint64_t v4 = (void *)sub_20A8C6450();
  sub_20A6614F8();
  uint64_t v5 = sub_20A8C6500();
  swift_release();
  swift_release();

  return v5;
}

uint64_t sub_20A66065C(void **a1, uint64_t a2)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_20A8C40E0();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  MEMORY[0x270FA5388](v3);
  id v57 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_20A8CC920();
  uint64_t v43 = *(void *)(v49 - 8);
  uint64_t v5 = v43;
  MEMORY[0x270FA5388](v49);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C3190();
  uint64_t v51 = *(void *)(v8 - 8);
  uint64_t v52 = v8;
  MEMORY[0x270FA5388](v8);
  id v56 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for ForYouFeedServiceConfig() - 8;
  MEMORY[0x270FA5388](v46);
  uint64_t v47 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v53 = (uint64_t)&v43 - v12;
  sub_20A6614F8();
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ForYouFeedContentConfig();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  id v22 = (char *)&v43 - v21;
  uint64_t v23 = *(int *)(v14 + 56);
  uint64_t v24 = (uint64_t)&v16[v23];
  uint64_t v25 = *a1;
  sub_20A6613D0((uint64_t)a1 + v23, (uint64_t)&v16[v23]);
  uint64_t v50 = v22;
  sub_20A661590(v24, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ForYouFeedContentConfig);
  uint64_t v44 = v19;
  sub_20A6613D0((uint64_t)v22, (uint64_t)v19);
  uint64_t v26 = v48;
  __swift_project_boxed_opaque_existential_1((void *)(v48 + 56), *(void *)(v48 + 80));
  id v27 = v25;
  id v45 = v27;
  sub_20A8C3AC0();
  uint64_t v28 = *(void (**)(char *, void, uint64_t))(v5 + 104);
  uint64_t v29 = v49;
  v28(v7, *MEMORY[0x263F59888], v49);
  __swift_project_boxed_opaque_existential_1((void *)(v26 + 152), *(void *)(v26 + 176));
  sub_20A8C3600();
  uint64_t v30 = v47;
  sub_20A6613D0((uint64_t)v19, v47);
  uint64_t v31 = (int *)v46;
  *(void *)(v30 + *(int *)(v46 + 32)) = v27;
  id v32 = v31;
  uint64_t v33 = v30 + v31[9];
  uint64_t v34 = v30;
  uint64_t v35 = v51;
  uint64_t v36 = v52;
  id v37 = v56;
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 16))(v33, v56, v52);
  uint64_t v38 = v43;
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 16))(v34 + v32[10], v7, v29);
  sub_20A8C3110();
  uint64_t v40 = v39;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v29);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v36);
  sub_20A661434((uint64_t)v44);
  *(void *)(v34 + v32[11]) = v40;
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v34 + v32[12], v57, v55);
  sub_20A661590(v34, v53, (uint64_t (*)(void))type metadata accessor for ForYouFeedServiceConfig);
  sub_20A66136C(0, &qword_26AC69898, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, MEMORY[0x263F7D028]);
  swift_allocObject();
  uint64_t v41 = sub_20A8C6580();

  sub_20A661434((uint64_t)v50);
  return v41;
}

uint64_t sub_20A660B84(uint64_t a1)
{
  sub_20A66136C(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v13 - v3;
  uint64_t v5 = sub_20A8C2530();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC69160 != -1) {
    swift_once();
  }
  if (sub_20A8C4200())
  {
    if (qword_267639B48 != -1) {
      swift_once();
    }
    sub_20A6616A4(&qword_26763CDE8, v9, (void (*)(uint64_t))type metadata accessor for NFFForYouFeedServiceConfigFetcher);
    sub_20A8C41C0();
    sub_20A8C2520();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_20A596854((uint64_t)v4);
      sub_20A6616EC();
      swift_allocError();
      *uint64_t v10 = 1;
      sub_20A661740();
      swift_allocObject();
      return sub_20A8C6570();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      uint64_t v11 = sub_20A661798((uint64_t)v8);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    return v11;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), *(void *)(a1 + 40));
    return sub_20A8C3AF0();
  }
}

void sub_20A660EA8()
{
  sub_20A8CC6D0();
  swift_allocObject();
  sub_20A8CC6C0();
  type metadata accessor for ForYouFeedContentConfig();
  sub_20A6616A4(&qword_26AC747E8, 255, (void (*)(uint64_t))type metadata accessor for ForYouFeedContentConfig);
  sub_20A8C5950();
  swift_release();
  if (v0)
  {
    sub_20A8CE9E0();
    sub_20A43F778();
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_20A8D3DC0;
    sub_20A43F7E0(0, (unint64_t *)&qword_26AC80150);
    sub_20A8CF4E0();
    *(void *)(v1 + 56) = MEMORY[0x263F8D310];
    *(void *)(v1 + 64) = sub_20A43F830();
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0xE000000000000000;
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
    uint64_t v2 = (void *)sub_20A8CF180();
    sub_20A8C7D90();
    swift_bridgeObjectRelease();

    swift_willThrow();
  }
  else
  {
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
    uint64_t v3 = (void *)sub_20A8CF180();
    sub_20A8CEA00();
    sub_20A8C7D90();
  }
}

uint64_t sub_20A6610CC()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NFFForYouFeedServiceConfigFetcher()
{
  return self;
}

uint64_t sub_20A661148()
{
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC686C0);
  sub_20A8C6670();
  uint64_t v0 = (void *)sub_20A8C6450();
  sub_20A6614F8();
  sub_20A8C6510();
  swift_release();

  uint64_t v1 = (void *)sub_20A8C6450();
  type metadata accessor for ForYouFeedServiceConfig();
  uint64_t v2 = sub_20A8C6510();
  swift_release();

  return v2;
}

uint64_t sub_20A661258()
{
  return sub_20A6616A4(&qword_26AC74890, 255, (void (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig);
}

unint64_t sub_20A6612A8()
{
  unint64_t result = qword_26AC75A38;
  if (!qword_26AC75A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC75A38);
  }
  return result;
}

uint64_t sub_20A6612FC()
{
  return sub_20A66046C(v0);
}

uint64_t sub_20A661318()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A661350(id *a1, uint64_t a2)
{
  return sub_20A65FD20(a1, a2, *(void *)(v2 + 16));
}

void sub_20A66136C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A6613D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ForYouFeedContentConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A661434(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ForYouFeedContentConfig();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_20A661490()
{
  if (!qword_26AC698D0)
  {
    sub_20A42CFF0(255, (unint64_t *)&qword_26AC686C0);
    unint64_t v0 = sub_20A8C65F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC698D0);
    }
  }
}

void sub_20A6614F8()
{
  if (!qword_26AC7FAB0)
  {
    sub_20A42CFF0(255, (unint64_t *)&qword_26AC686C0);
    type metadata accessor for ForYouFeedContentConfig();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC7FAB0);
    }
  }
}

uint64_t sub_20A661578(void **a1, uint64_t a2)
{
  return sub_20A66065C(a1, a2);
}

uint64_t sub_20A661590(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A6615F8()
{
  return sub_20A660B84(v0);
}

uint64_t sub_20A661614()
{
  return swift_deallocObject();
}

id sub_20A66164C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void **)(v2 + 16);
  sub_20A6614F8();
  uint64_t v7 = (uint64_t)a2 + *(int *)(v6 + 48);
  *a2 = v5;
  sub_20A6613D0(a1, v7);
  return v5;
}

uint64_t sub_20A6616A4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A6616EC()
{
  unint64_t result = qword_26763CDF0;
  if (!qword_26763CDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CDF0);
  }
  return result;
}

void sub_20A661740()
{
  if (!qword_26763CDF8)
  {
    unint64_t v0 = sub_20A8C65F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763CDF8);
    }
  }
}

uint64_t sub_20A661798(uint64_t a1)
{
  uint64_t v2 = sub_20A8C2530();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_20A8C2030();
  uint64_t v6 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  unint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC6D3D0 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_26AC6D3C8;
  sub_20A43F778();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_20A8D3DC0;
  id v11 = v9;
  uint64_t v12 = sub_20A8C24C0();
  uint64_t v14 = v13;
  *(void *)(v10 + 56) = MEMORY[0x263F8D310];
  *(void *)(v10 + 64) = sub_20A43F830();
  *(void *)(v10 + 32) = v12;
  *(void *)(v10 + 40) = v14;
  sub_20A8CEA00();
  sub_20A8C7D90();

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_20A8C2020();
  id v15 = objc_msgSend(self, sel_sharedSession);
  uint64_t v16 = sub_20A8C6430();

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  return v16;
}

unsigned char *storeEnumTagSinglePayload for NFFForYouFeedServiceConfigFetcher.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A661AE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NFFForYouFeedServiceConfigFetcher.Errors()
{
  return &type metadata for NFFForYouFeedServiceConfigFetcher.Errors;
}

unint64_t sub_20A661B1C()
{
  unint64_t result = qword_26763CE00;
  if (!qword_26763CE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CE00);
  }
  return result;
}

uint64_t sub_20A661B70(void *a1)
{
  swift_getObjectType();
  id v3 = objc_msgSend(a1, sel_identifier);
  uint64_t v4 = sub_20A8CE280();
  uint64_t v6 = v5;

  id v7 = objc_msgSend(a1, sel_language);
  if (v7)
  {
    unint64_t v8 = v7;
    uint64_t v9 = sub_20A8CE280();
    unint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    unint64_t v11 = 0xE000000000000000;
  }
  id v12 = objc_msgSend(*(id *)(v1 + 16), sel_cachedSubscription);
  id v13 = objc_msgSend(a1, sel_identifier);
  if (!v13)
  {
    sub_20A8CE280();
    id v13 = (id)sub_20A8CE240();
    swift_bridgeObjectRelease();
  }
  id v14 = objc_msgSend(v12, sel_containsTagID_, v13);

  uint64_t v15 = sub_20A8CEC20() & 1;

  return MEMORY[0x270F77608](v4, v6, v9, v11, v14, v15);
}

uint64_t sub_20A661CCC()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AnalyticsChannelDataFactory()
{
  return self;
}

void sub_20A661D28()
{
  uint64_t v0 = sub_20A8C2990();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  sub_20A8C2940();
  uint64_t v5 = (void *)sub_20A8C2900();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_setLocale_, v5);

  uint64_t v6 = (void *)sub_20A8CE240();
  objc_msgSend(v4, sel_setLocalizedDateFormatFromTemplate_, v6);

  qword_26AC7B020 = (uint64_t)v4;
}

uint64_t sub_20A661E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_20A8C22A0();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v54 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_20A8C2800();
  uint64_t v53 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v52 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v3[5];
  uint64_t v10 = v3[6];
  uint64_t v50 = v3;
  __swift_project_boxed_opaque_existential_1(v3 + 2, v11);
  v49[1] = a3;
  id v12 = (void *)sub_20A8CDF60();
  uint64_t v13 = *(void *)(v10 + 8);
  id v14 = *(void (**)(void *, uint64_t, uint64_t))(v13 + 8);
  v64[3] = v11;
  v64[4] = v10;
  uint64_t v51 = v10;
  __swift_allocate_boxed_opaque_existential_1(v64);
  v49[0] = v11;
  v14(v12, v11, v13);

  uint64_t v63 = 0;
  id v59 = &v63;
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    swift_bridgeObjectRetain();
    sub_20A8CF3B0();
    swift_bridgeObjectRelease();
    if ((v62 & 1) == 0) {
      goto LABEL_12;
    }
  }
  else
  {
    MEMORY[0x270FA5388](v15);
    v49[-2] = sub_20A662D70;
    v49[-1] = &v58;
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v16 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v17 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v16 = sub_20A8CF420();
        uint64_t v17 = v48;
      }
      swift_bridgeObjectRetain();
      char v18 = sub_20A65B7FC(v16, v17, (void (*)(uint64_t *__return_ptr))sub_20A662DE4);
      swift_bridgeObjectRelease();
      if (v18) {
        goto LABEL_7;
      }
LABEL_12:
      uint64_t v44 = 0;
      goto LABEL_13;
    }
    uint64_t v60 = a1;
    uint64_t v61 = a2 & 0xFFFFFFFFFFFFFFLL;
    if (a1 <= 0x20u && ((1 << a1) & 0x100003E01) != 0)
    {
      swift_bridgeObjectRetain();
LABEL_11:
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    swift_bridgeObjectRetain();
    uint64_t v46 = (unsigned __int8 *)_swift_stdlib_strtod_clocale();
    if (!v46) {
      goto LABEL_11;
    }
    int v47 = *v46;
    swift_bridgeObjectRelease();
    if (v47) {
      goto LABEL_12;
    }
  }
LABEL_7:
  uint64_t v19 = v52;
  sub_20A8C2780();
  uint64_t v20 = (uint64_t)v50;
  sub_20A662D8C();
  uint64_t v21 = sub_20A8C2A60();
  uint64_t v22 = *(void *)(v21 - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, void, uint64_t))(v22 + 104))(v24 + v23, *MEMORY[0x263F078A8], v21);
  sub_20A7BA4B0(v24);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v25 = v54;
  sub_20A8C29D0();
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_20A662448(0, v20);
  sub_20A662840(v26, v27, v20);
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_20A662448(1, v20);
  sub_20A662840(v30, v31, v20);
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = (void *)sub_20A8C2730();
  id v35 = objc_msgSend(v29, sel_stringFromDate_, v34);

  uint64_t v36 = sub_20A8CE280();
  uint64_t v38 = v37;

  uint64_t v39 = (void *)sub_20A8C2730();
  id v40 = objc_msgSend(v33, sel_stringFromDate_, v39);

  uint64_t v41 = sub_20A8CE280();
  uint64_t v43 = v42;

  uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v51 + 144))(v36, v38, v41, v43, v49[0]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v56 + 8))(v25, v57);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v19, v55);
LABEL_13:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
  return v44;
}

uint64_t sub_20A662448(char a1, uint64_t a2)
{
  sub_20A662E00();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + OBJC_IVAR____TtC8StocksUI32StockChartCategoryLabelFormatter_chartRange;
  uint64_t v9 = (void *)sub_20A8CDF60();
  id v10 = objc_msgSend(v9, sel_horizontalSizeClass);

  uint64_t v11 = *(int *)(v5 + 48);
  uint64_t v12 = sub_20A8C2BC0();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v7, v8, v12);
  *(void *)&v7[v11] = v10;
  LODWORD(v14) = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v7, v12);
  if (v14 == *MEMORY[0x263F7A838])
  {
    if (qword_26AC7B030 != -1) {
      swift_once();
    }
    id v15 = (id)qword_26AC7B020;
    id v16 = objc_msgSend(v15, sel_dateFormat);
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v18 = sub_20A8CE280();
      uint64_t v20 = v19;

      v31[2] = v18;
      v31[3] = v20;
      v31[0] = 97;
      v31[1] = 0xE100000000000000;
      sub_20A48C5C0();
      LOBYTE(v18) = sub_20A8CF250();

      swift_bridgeObjectRelease();
      if (v18) {
        return 104;
      }
      else {
        return 72;
      }
    }
    else
    {

      return 72;
    }
  }
  if (v14 == *MEMORY[0x263F7A840] || v14 == *MEMORY[0x263F7A850]) {
    return 100;
  }
  if (v14 == *MEMORY[0x263F7A828] || v14 == *MEMORY[0x263F7A870] || v14 == *MEMORY[0x263F7A818]) {
    goto LABEL_22;
  }
  if (v14 != *MEMORY[0x263F7A848] && v14 != *MEMORY[0x263F7A860]) {
    goto LABEL_37;
  }
  if (v10 == (id)1)
  {
    uint64_t v25 = sub_20A8C2270();
    if ((v26 & 1) == 0 && v25 == 1)
    {
      id v14 = objc_msgSend(self, sel_su_localizedYearFormat);
      if (v14)
      {
LABEL_41:
        uint64_t v29 = v14;
        uint64_t v21 = sub_20A8CE280();

        return v21;
      }
      __break(1u);
      goto LABEL_33;
    }
LABEL_22:
    if (a1) {
      return 1280068684;
    }
    else {
      return 5000268;
    }
  }
LABEL_33:
  uint64_t v21 = 1280068684;
  uint64_t v27 = sub_20A8C2270();
  if ((v28 & 1) != 0 || v27 != 1) {
    return v21;
  }
  id v14 = objc_msgSend(self, sel_su_localizedYearFormat);
  if (v14) {
    goto LABEL_41;
  }
  __break(1u);
LABEL_37:
  if (v14 == *MEMORY[0x263F7A868] || v14 == *MEMORY[0x263F7A858] || v14 == *MEMORY[0x263F7A830])
  {
    id v14 = objc_msgSend(self, sel_su_localizedYearFormat);
    if (v14) {
      goto LABEL_41;
    }
    __break(1u);
  }
  uint64_t result = sub_20A8CF750();
  __break(1u);
  return result;
}

void sub_20A662840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C2990();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = (uint64_t *)(a3 + OBJC_IVAR____TtC8StocksUI32StockChartCategoryLabelFormatter_dateFormatters);
  swift_beginAccess();
  uint64_t v11 = *v10;
  if (*(void *)(*v10 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_20A4D1B24(a1, a2);
    if (v13)
    {
      id v14 = *(void **)(*(void *)(v11 + 56) + 8 * v12);
      swift_endAccess();
      v14;
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  sub_20A8C2940();
  sub_20A8C2880();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  id v15 = objc_allocWithZone(MEMORY[0x263F08790]);
  swift_bridgeObjectRetain();
  id v16 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  uint64_t v17 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v15, sel_initWithFormat_localeIdentifier_, v16, v17);

  if (v18)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    id v19 = v18;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v10;
    *id v10 = 0x8000000000000000;
    sub_20A7A46F4((uint64_t)v19, a1, a2, isUniquelyReferenced_nonNull_native);
    *id v10 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_20A662A9C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI32StockChartCategoryLabelFormatter_chart;
  uint64_t v2 = sub_20A8C3D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC8StocksUI32StockChartCategoryLabelFormatter_chartRange;
  uint64_t v4 = sub_20A8C2BC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC8StocksUI32StockChartCategoryLabelFormatter_calendar;
  uint64_t v6 = sub_20A8C2A80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_20A662BDC()
{
  return type metadata accessor for StockChartCategoryLabelFormatter();
}

uint64_t type metadata accessor for StockChartCategoryLabelFormatter()
{
  uint64_t result = qword_26AC7B060;
  if (!qword_26AC7B060) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A662C30()
{
  uint64_t result = sub_20A8C3D00();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20A8C2BC0();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_20A8C2A80();
      if (v3 <= 0x3F) {
        return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t sub_20A662D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A661E5C(a1, a2, a3);
}

unsigned char *sub_20A662D70@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_20A65B790(a1, a2);
}

void sub_20A662D8C()
{
  if (!qword_26AC7FE70)
  {
    sub_20A8C2A60();
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FE70);
    }
  }
}

void *sub_20A662DE4@<X0>(unsigned char *a1@<X8>)
{
  return sub_20A65B85C(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

void sub_20A662E00()
{
  if (!qword_26AC67640)
  {
    sub_20A8C2BC0();
    type metadata accessor for UIUserInterfaceSizeClass(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC67640);
    }
  }
}

uint64_t type metadata accessor for PostPurchaseOnboardingViewControllerFactory()
{
  return self;
}

uint64_t type metadata accessor for EarningsShownCommandHandler()
{
  return self;
}

void sub_20A662EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

BOOL sub_20A662EE0()
{
  return sub_20A662F3C();
}

uint64_t sub_20A662F08()
{
  return sub_20A663458(&qword_26AC77620);
}

BOOL sub_20A662F3C()
{
  uint64_t v26 = *v0;
  uint64_t v1 = sub_20A8C2800();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v22 - v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = sub_20A8C3190();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  char v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC69110 != -1) {
    swift_once();
  }
  if (sub_20A8C4200())
  {
    if (qword_267639AF8 != -1) {
      swift_once();
    }
    sub_20A663458(&qword_26AC77620);
    sub_20A8C41C0();
    if (qword_267639AF0 != -1) {
      swift_once();
    }
    sub_20A8C41C0();
    uint64_t v14 = v27;
  }
  else
  {
    uint64_t v22 = v9;
    uint64_t v23 = v2;
    uint64_t v24 = v1;
    id v15 = (char *)(v0 + 2);
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    sub_20A8C3AC0();
    sub_20A8C3050();
    uint64_t v17 = *(void (**)(char *, uint64_t))(v11 + 8);
    id v16 = (void *)(v11 + 8);
    uint64_t v1 = (uint64_t)v17;
    v17(v13, v10);
    id v18 = (void (*)(char *, uint64_t))v0[5];
    __swift_project_boxed_opaque_existential_1(v0 + 2, (uint64_t)v18);
    sub_20A8C3AC0();
    uint64_t v14 = sub_20A8C3020();
    v17(v13, v10);
    if (v14 < 0)
    {
      __break(1u);
      goto LABEL_20;
    }
    uint64_t v2 = v23;
    uint64_t v1 = v24;
    uint64_t v9 = v22;
  }
  uint64_t v26 = v14;
  if (qword_26AC690B0 != -1) {
    swift_once();
  }
  sub_20A663458(&qword_26AC77620);
  sub_20A8C41C0();
  id v15 = v9;
  sub_20A8C2720();
  id v19 = v25;
  sub_20A8C27C0();
  char v20 = sub_20A8C2750();
  id v18 = *(void (**)(char *, uint64_t))(v2 + 8);
  v18(v19, v1);
  v18(v6, v1);
  id v16 = &unk_26AC69000;
  if (v20)
  {
    if (qword_26AC690C8 == -1)
    {
LABEL_15:
      uint64_t v27 = 0;
      sub_20A663458(&qword_26AC77628);
      sub_20A8C42F0();
      goto LABEL_16;
    }
LABEL_20:
    swift_once();
    goto LABEL_15;
  }
LABEL_16:
  if (v16[25] != -1) {
    swift_once();
  }
  sub_20A8C41C0();
  v18(v15, v1);
  return v27 < v26;
}

uint64_t sub_20A663458(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for EarningsShownCommandHandler();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A663498(uint64_t a1)
{
  uint64_t v2 = sub_20A8C2800();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A556CDC(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (unint64_t *)((char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    uint64_t v15 = v3;
    uint64_t v16 = v2;
    unint64_t *v11 = a1 | 0x8000000000000000;
    swift_storeEnumTagMultiPayload();
    swift_retain_n();
    swift_retain();
    sub_20A8C99A0();
    sub_20A43F7E0(0, (unint64_t *)&qword_26AC69E00);
    sub_20A8C4990();
    if (swift_dynamicCast()) {
      uint64_t v12 = *(void *)&v17[0];
    }
    else {
      uint64_t v12 = 0;
    }
    uint64_t v13 = sub_20A8C6D60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 1, 1, v13);
    uint64_t v20 = 0;
    memset(v19, 0, sizeof(v19));
    uint64_t v18 = 0;
    memset(v17, 0, sizeof(v17));
    sub_20A5BFAAC((uint64_t)v11, v12, (uint64_t)v8, (uint64_t)v19, 0, 0, (uint64_t)v17);
    swift_release();
    swift_release();
    sub_20A49127C((uint64_t)v17, &qword_26AC69600, (unint64_t *)&unk_26AC695F0);
    sub_20A49127C((uint64_t)v19, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
    sub_20A592D44((uint64_t)v8, (uint64_t (*)(void))sub_20A556CDC);
    sub_20A592D44((uint64_t)v11, type metadata accessor for StocksActivity);
    swift_release();
    if (qword_26AC690C8 != -1) {
      swift_once();
    }
    sub_20A663458(&qword_26AC77620);
    sub_20A8C41C0();
    if (__OFADD__(*(void *)&v19[0], 1))
    {
      __break(1u);
    }
    else
    {
      ++*(void *)&v19[0];
      sub_20A663458(&qword_26AC77628);
      sub_20A8C42F0();
      if (qword_26AC690B0 == -1)
      {
LABEL_9:
        sub_20A8C27C0();
        sub_20A8C42F0();
        swift_release();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v16);
        return;
      }
    }
    swift_once();
    goto LABEL_9;
  }
}

void sub_20A6638F4()
{
  qword_26AC9E920 = 0x404C000000000000;
}

double sub_20A663904()
{
  qword_26AC9E928 = 0;
  unk_26AC9E930 = 0;
  double result = 20.0;
  xmmword_26AC9E938 = xmmword_20A8E64D0;
  return result;
}

void sub_20A663920(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v65 = a1;
  uint64_t v3 = sub_20A8CE060();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  uint64_t v64 = v4;
  MEMORY[0x270FA5388](v3);
  char v62 = (uint64_t *)&v49[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_20A8CE0E0();
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v57 = &v49[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_20A8CDBA0();
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = &v49[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_20A8CE0D0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v56 = &v49[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A665728();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = &v49[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = &v49[-v17];
  uint64_t v19 = *(void *)(v1 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 24);
  uint64_t v20 = *(void *)(v1 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler), v19);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v20 + 72))(&v67, v19, v20);
  uint64_t v21 = v70;
  uint64_t v22 = v71;
  __swift_project_boxed_opaque_existential_1(&v67, v70);
  (*(void (**)(unsigned __int8 *__return_ptr, uint64_t, uint64_t))(v22 + 24))(&v66, v21, v22);
  int v23 = v66;
  uint64_t v24 = self;
  id v25 = objc_msgSend(v24, sel_currentTraitCollection);
  id v26 = objc_msgSend(v25, sel_userInterfaceStyle);

  id v27 = objc_msgSend(v24, sel_currentTraitCollection);
  id v28 = objc_msgSend(v27, sel_accessibilityContrast);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v67);
  uint64_t v29 = *(void *)(v2 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_sparklineStyleCache);
  LOBYTE(v67) = 0;
  BYTE1(v67) = v23;
  id v68 = v26;
  id v69 = v28;
  sub_20A8C63F0();
  uint64_t v30 = sub_20A8CDCF0();
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v31 + 48))(v18, 1, v30) == 1)
  {
    uint64_t v51 = v29;
    id v52 = v28;
    uint64_t v53 = v10;
    id v54 = v26;
    uint64_t v33 = v57;
    uint64_t v32 = v58;
    uint64_t v55 = v15;
    sub_20A665780((uint64_t)v18);
    char v34 = sub_20A8C2850();
    int v50 = v23;
    uint64_t v35 = v59;
    if (v34) {
      uint64_t v36 = sub_20A664B74();
    }
    else {
      uint64_t v36 = sub_20A664C70();
    }
    uint64_t v37 = (void *)v36;
    char v38 = sub_20A8C2850();
    uint64_t v39 = v33;
    id v40 = v53;
    if (v38) {
      uint64_t v41 = sub_20A664B74();
    }
    else {
      uint64_t v41 = sub_20A664C70();
    }
    uint64_t v42 = (void *)v41;
    (*(void (**)(unsigned char *, void, uint64_t))(v60 + 104))(v40, *MEMORY[0x263F7CAE8], v61);
    (*(void (**)(unsigned char *, void, uint64_t))(v32 + 104))(v39, *MEMORY[0x263F7CC88], v35);
    id v43 = v42;
    sub_20A8CE0C0();
    sub_20A45F33C();
    uint64_t v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_20A8D5C90;
    *(void *)(v44 + 32) = objc_msgSend(v37, sel_colorWithAlphaComponent_, 0.5);
    *(void *)(v44 + 40) = objc_msgSend(v37, sel_colorWithAlphaComponent_, 0.0);
    uint64_t v67 = v44;
    sub_20A8CE620();
    uint64_t v46 = v62;
    uint64_t v45 = v63;
    *char v62 = v67;
    (*(void (**)(uint64_t *, void, uint64_t))(v64 + 104))(v46, *MEMORY[0x263F7CC70], v45);
    sub_20A8CE120();
    swift_allocObject();
    sub_20A8CE110();
    uint64_t v47 = v65;
    sub_20A8CDCE0();
    uint64_t v48 = v55;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v31 + 16))(v55, v47, v30);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v31 + 56))(v48, 0, 1, v30);
    LOBYTE(v67) = 0;
    BYTE1(v67) = v50;
    id v68 = v54;
    id v69 = v52;
    sub_20A8C6400();
  }
  else
  {
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v31 + 32))(v65, v18, v30);
  }
}

void sub_20A663F34(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v65 = a1;
  uint64_t v3 = sub_20A8CE060();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  uint64_t v64 = v4;
  MEMORY[0x270FA5388](v3);
  char v62 = (uint64_t *)&v49[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_20A8CE0E0();
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v57 = &v49[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_20A8CDBA0();
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = &v49[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_20A8CE0D0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v56 = &v49[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A665728();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = &v49[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = &v49[-v17];
  uint64_t v19 = *(void *)(v1 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 24);
  uint64_t v20 = *(void *)(v1 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler), v19);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v20 + 72))(&v67, v19, v20);
  uint64_t v21 = v70;
  uint64_t v22 = v71;
  __swift_project_boxed_opaque_existential_1(&v67, v70);
  (*(void (**)(unsigned __int8 *__return_ptr, uint64_t, uint64_t))(v22 + 24))(&v66, v21, v22);
  int v23 = v66;
  uint64_t v24 = self;
  id v25 = objc_msgSend(v24, sel_currentTraitCollection);
  id v26 = objc_msgSend(v25, sel_userInterfaceStyle);

  id v27 = objc_msgSend(v24, sel_currentTraitCollection);
  id v28 = objc_msgSend(v27, sel_accessibilityContrast);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v67);
  uint64_t v29 = *(void *)(v2 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_sparklineStyleCache);
  LOBYTE(v67) = 1;
  BYTE1(v67) = v23;
  id v68 = v26;
  id v69 = v28;
  sub_20A8C63F0();
  uint64_t v30 = sub_20A8CDCF0();
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v31 + 48))(v18, 1, v30) == 1)
  {
    uint64_t v51 = v29;
    id v52 = v28;
    uint64_t v53 = v10;
    id v54 = v26;
    uint64_t v33 = v57;
    uint64_t v32 = v58;
    uint64_t v55 = v15;
    sub_20A665780((uint64_t)v18);
    char v34 = sub_20A8C2850();
    int v50 = v23;
    uint64_t v35 = v59;
    if (v34) {
      uint64_t v36 = sub_20A664C70();
    }
    else {
      uint64_t v36 = sub_20A664B74();
    }
    uint64_t v37 = (void *)v36;
    char v38 = sub_20A8C2850();
    uint64_t v39 = v33;
    id v40 = v53;
    if (v38) {
      uint64_t v41 = sub_20A664C70();
    }
    else {
      uint64_t v41 = sub_20A664B74();
    }
    uint64_t v42 = (void *)v41;
    (*(void (**)(unsigned char *, void, uint64_t))(v60 + 104))(v40, *MEMORY[0x263F7CAE8], v61);
    (*(void (**)(unsigned char *, void, uint64_t))(v32 + 104))(v39, *MEMORY[0x263F7CC88], v35);
    id v43 = v42;
    sub_20A8CE0C0();
    sub_20A45F33C();
    uint64_t v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_20A8D5C90;
    *(void *)(v44 + 32) = objc_msgSend(v37, sel_colorWithAlphaComponent_, 0.5);
    *(void *)(v44 + 40) = objc_msgSend(v37, sel_colorWithAlphaComponent_, 0.0);
    uint64_t v67 = v44;
    sub_20A8CE620();
    uint64_t v46 = v62;
    uint64_t v45 = v63;
    *char v62 = v67;
    (*(void (**)(uint64_t *, void, uint64_t))(v64 + 104))(v46, *MEMORY[0x263F7CC70], v45);
    sub_20A8CE120();
    swift_allocObject();
    sub_20A8CE110();
    uint64_t v47 = v65;
    sub_20A8CDCE0();
    uint64_t v48 = v55;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v31 + 16))(v55, v47, v30);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v31 + 56))(v48, 0, 1, v30);
    LOBYTE(v67) = 1;
    BYTE1(v67) = v50;
    id v68 = v54;
    id v69 = v52;
    sub_20A8C6400();
  }
  else
  {
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v31 + 32))(v65, v18, v30);
  }
}

void sub_20A664550(uint64_t a1@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v2 = sub_20A8CE060();
  uint64_t v51 = *(void *)(v2 - 8);
  uint64_t v52 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v53 = (uint64_t *)((char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_20A8CE0E0();
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v47 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8CDBA0();
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v44 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8CE0D0();
  MEMORY[0x270FA5388](v10 - 8);
  int v50 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A665728();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v48 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v42 - v15;
  uint64_t v17 = (void *)(v1 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler);
  uint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 24);
  uint64_t v19 = *(void *)(v1 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler), v18);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v19 + 72))(&v56, v18, v19);
  uint64_t v20 = v59;
  uint64_t v21 = v60;
  __swift_project_boxed_opaque_existential_1(&v56, v59);
  (*(void (**)(unsigned __int8 *__return_ptr, uint64_t, uint64_t))(v21 + 24))(&v55, v20, v21);
  int v22 = v55;
  int v23 = self;
  id v24 = objc_msgSend(v23, sel_currentTraitCollection);
  id v25 = objc_msgSend(v24, sel_userInterfaceStyle);

  id v26 = objc_msgSend(v23, sel_currentTraitCollection);
  id v27 = objc_msgSend(v26, sel_accessibilityContrast);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
  LOBYTE(v56) = 2;
  int v49 = v22;
  BYTE1(v56) = v22;
  id v45 = v25;
  id v57 = v25;
  id v58 = v27;
  sub_20A8C63F0();
  uint64_t v28 = sub_20A8CDCF0();
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v16, 1, v28) == 1)
  {
    sub_20A665780((uint64_t)v16);
    id v42 = v27;
    uint64_t v31 = v17[3];
    uint64_t v30 = v17[4];
    __swift_project_boxed_opaque_existential_1(v17, v31);
    uint64_t v32 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v30 + 16) + 408))(v31);
    uint64_t v33 = v17[3];
    uint64_t v34 = v17[4];
    __swift_project_boxed_opaque_existential_1(v17, v33);
    uint64_t v35 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v34 + 16) + 408))(v33);
    (*(void (**)(char *, void, uint64_t))(v43 + 104))(v9, *MEMORY[0x263F7CAE8], v44);
    (*(void (**)(char *, void, uint64_t))(v46 + 104))(v6, *MEMORY[0x263F7CC88], v47);
    id v36 = v35;
    sub_20A8CE0C0();
    sub_20A45F33C();
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_20A8D5C90;
    *(void *)(v37 + 32) = objc_msgSend(v32, sel_colorWithAlphaComponent_, 0.5);
    *(void *)(v37 + 40) = objc_msgSend(v32, sel_colorWithAlphaComponent_, 0.0);
    uint64_t v56 = v37;
    sub_20A8CE620();
    uint64_t v38 = v52;
    uint64_t v39 = v53;
    *uint64_t v53 = v56;
    (*(void (**)(uint64_t *, void, uint64_t))(v51 + 104))(v39, *MEMORY[0x263F7CC70], v38);
    sub_20A8CE120();
    swift_allocObject();
    sub_20A8CE110();
    uint64_t v40 = v54;
    sub_20A8CDCE0();
    uint64_t v41 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v48, v40, v28);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v41, 0, 1, v28);
    LOBYTE(v56) = 2;
    BYTE1(v56) = v49;
    id v57 = v45;
    id v58 = v42;
    sub_20A8C6400();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v54, v16, v28);
  }
}

uint64_t sub_20A664B74()
{
  id v1 = objc_msgSend(self, sel_currentDevice);
  id v2 = objc_msgSend(v1, sel_userInterfaceIdiom);

  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_currentTraitCollection);
  if (v3)
  {
    if (!v2 || objc_msgSend(v3, sel_userInterfaceStyle) == (id)2) {
      goto LABEL_4;
    }
  }
  else if (!v2)
  {
LABEL_4:
    uint64_t v4 = (void *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler);
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 24);
    uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 32);
    __swift_project_boxed_opaque_existential_1(v4, v5);
    return (*(uint64_t (**)(uint64_t))(*(void *)(v6 + 16) + 216))(v5);
  }
  uint64_t v8 = (void *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler);
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 24);
  uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 32);
  __swift_project_boxed_opaque_existential_1(v8, v9);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v10 + 16) + 200))(v9);
}

uint64_t sub_20A664C70()
{
  id v1 = objc_msgSend(self, sel_currentDevice);
  id v2 = objc_msgSend(v1, sel_userInterfaceIdiom);

  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_currentTraitCollection);
  if (v3)
  {
    if (!v2 || objc_msgSend(v3, sel_userInterfaceStyle) == (id)2) {
      goto LABEL_4;
    }
  }
  else if (!v2)
  {
LABEL_4:
    uint64_t v4 = (void *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler);
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 24);
    uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 32);
    __swift_project_boxed_opaque_existential_1(v4, v5);
    return (*(uint64_t (**)(uint64_t))(*(void *)(v6 + 16) + 208))(v5);
  }
  uint64_t v8 = (void *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler);
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 24);
  uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 32);
  __swift_project_boxed_opaque_existential_1(v8, v9);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v10 + 16) + 192))(v9);
}

uint64_t sub_20A664D6C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_locale;
  uint64_t v2 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_20A664E3C()
{
  return type metadata accessor for StockSparklineViewStyler();
}

uint64_t type metadata accessor for StockSparklineViewStyler()
{
  uint64_t result = qword_26AC75E10;
  if (!qword_26AC75E10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A664E90()
{
  uint64_t result = sub_20A8C2990();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StockSparklineStyleCacheKey(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 1);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StockSparklineStyleCacheKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 1) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockSparklineStyleCacheKey()
{
  return &type metadata for StockSparklineStyleCacheKey;
}

void sub_20A664FE8(void *a1, char a2, char a3)
{
  int v5 = (void *)sub_20A665124(a3, v3, a2);
  id v6 = objc_msgSend(v5, sel_CGColor);
  objc_msgSend(a1, sel_setStrokeColor_, v6);

  objc_msgSend(a1, sel_setLineWidth_, *(double *)(v3 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baselineIndicatorWidth));
  sub_20A45F33C();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_20A8D5C90;
  sub_20A4434F8();
  *(void *)(v7 + 32) = sub_20A8CEF10();
  *(void *)(v7 + 40) = sub_20A8CEF10();
  sub_20A8CE620();
  id v8 = (id)sub_20A8CE5D0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setLineDashPattern_, v8);
}

uint64_t sub_20A665124(char a1, uint64_t a2, char a3)
{
  if (a1)
  {
    uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 24);
    uint64_t v4 = *(void *)(a2 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 32);
    __swift_project_boxed_opaque_existential_1((void *)(a2 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler), v3);
    return (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 16) + 408))(v3);
  }
  char v7 = sub_20A8C2850();
  if (a3)
  {
    if ((v7 & 1) == 0) {
      return sub_20A664B74();
    }
  }
  else if (v7)
  {
    return sub_20A664B74();
  }
  return sub_20A664C70();
}

uint64_t sub_20A6651C0(uint64_t a1)
{
  *(void *)(*v1 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_currentTraitCollection) = a1;
  return MEMORY[0x270F9A758]();
}

uint64_t sub_20A6651D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  int v22 = a3;
  uint64_t v6 = sub_20A8C2990();
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)&v23[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)(*v3 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler);
  uint64_t v10 = v9[3];
  uint64_t v11 = v9[4];
  __swift_project_boxed_opaque_existential_1(v9, v10);
  uint64_t v12 = *(void *)(v11 + 8);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 8);
  v23[3] = v10;
  v23[4] = v11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v23);
  v13(a1, v10, v12);
  uint64_t v15 = sub_20A8C2940();
  double v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v23[-1] - v17;
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v19 + 16))((char *)&v23[-1] - v17, boxed_opaque_existential_1, v10, v16);
  uint64_t v20 = sub_20A665538((uint64_t)v18, (uint64_t)v8, a2, v10, v11);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  *int v22 = v20;
  return result;
}

uint64_t sub_20A66537C()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A665400()
{
  return sub_20A8CF890();
}

uint64_t sub_20A66545C()
{
  return sub_20A8CF8C0();
}

unint64_t sub_20A6654E4()
{
  unint64_t result = qword_26AC78038;
  if (!qword_26AC78038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC78038);
  }
  return result;
}

uint64_t sub_20A665538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a4;
  uint64_t v16 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a1, a4);
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_sparklineStyleCache;
  sub_20A665668();
  swift_allocObject();
  *(void *)(v9 + v10) = sub_20A8C63C0();
  *(void *)(v9 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baselineIndicatorWidth) = 0x3FF0000000000000;
  *(void *)(v9 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_currentTraitCollection) = 0;
  sub_20A42BEBC(&v14, v9 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler);
  uint64_t v11 = v9 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_locale;
  uint64_t v12 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a2, v12);
  return v9;
}

void sub_20A665668()
{
  if (!qword_26AC697D0)
  {
    sub_20A8CDCF0();
    sub_20A6656D4();
    unint64_t v0 = sub_20A8C63D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC697D0);
    }
  }
}

unint64_t sub_20A6656D4()
{
  unint64_t result = qword_26AC78030;
  if (!qword_26AC78030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC78030);
  }
  return result;
}

void sub_20A665728()
{
  if (!qword_26AC7F4E8)
  {
    sub_20A8CDCF0();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7F4E8);
    }
  }
}

uint64_t sub_20A665780(uint64_t a1)
{
  sub_20A665728();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_20A6657DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  BOOL result = 0;
  if (*a1 == *a2 && ((a1[1] ^ a2[1]) & 1) == 0) {
    return *((void *)a1 + 1) == *((void *)a2 + 1) && *((void *)a1 + 2) == *((void *)a2 + 2);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ValueChangeTrendLineType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *BOOL result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A6658E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *BOOL result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ValueChangeTrendLineType()
{
  return &type metadata for ValueChangeTrendLineType;
}

unint64_t sub_20A665924()
{
  unint64_t result = qword_26763CE08;
  if (!qword_26763CE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CE08);
  }
  return result;
}

uint64_t sub_20A665978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x2105289B0](v3);
  if (result)
  {
    swift_getObjectType();
    sub_20A8CB6A0();
    sub_20A8CD0F0();
    sub_20A8C8C80();
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A665A10@<X0>(void *a1@<X8>)
{
  sub_20A447F18();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A66608C(0, &qword_26763AC68, (void (*)(uint64_t))sub_20A447E1C);
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)&v22 - v7;
  uint64_t v9 = *(void **)(v1 + 24);
  id v10 = objc_msgSend((id)sub_20A8CD0D0(), sel_identifier);
  swift_unknownObjectRelease();
  if (!v10)
  {
    sub_20A8CE280();
    id v10 = (id)sub_20A8CE240();
    swift_bridgeObjectRelease();
  }
  unsigned int v11 = objc_msgSend(v9, sel_hasArticleCompletedListening_, v10);

  if (v11)
  {
    uint64_t v12 = *MEMORY[0x263F598D8];
    uint64_t v13 = sub_20A8CC9C0();
    long long v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);
    return v14(a1, v12, v13);
  }
  else
  {
    sub_20A8C52B0();
    sub_20A8C5D50();
    swift_release();
    sub_20A771714((uint64_t)v8);
    sub_20A66602C((uint64_t)v5, (uint64_t (*)(void))sub_20A447F18);
    sub_20A447E1C();
    uint64_t v17 = v16;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v8, 1, v16) == 1)
    {
      sub_20A665FD0((uint64_t)v8, &qword_26763AC68, (void (*)(uint64_t))sub_20A447E1C);
      uint64_t v18 = (unsigned int *)MEMORY[0x263F598D8];
    }
    else
    {
      uint64_t v19 = *(void *)&v8[*(int *)(v17 + 48)];
      sub_20A66602C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
      *a1 = v19;
      uint64_t v18 = (unsigned int *)MEMORY[0x263F598D0];
    }
    uint64_t v20 = *v18;
    uint64_t v21 = sub_20A8CC9C0();
    return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(a1, v20, v21);
  }
}

uint64_t sub_20A665D08()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FeedAudioTrackProgressCommandHandler()
{
  return self;
}

uint64_t sub_20A665D6C()
{
  return sub_20A665F88(&qword_26763CE10, MEMORY[0x263F598E0]);
}

uint64_t sub_20A665DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_20A66608C(0, &qword_26AC82FF0, MEMORY[0x263F59B00]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v11 - v6;
  swift_getObjectType();
  sub_20A8CB6A0();
  uint64_t v8 = sub_20A8CD0F0();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a4, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  sub_20A8C8D40();
  sub_20A665FD0((uint64_t)v7, &qword_26AC82FF0, MEMORY[0x263F59B00]);
  return swift_release();
}

uint64_t sub_20A665F64@<X0>(void *a1@<X8>)
{
  return sub_20A665A10(a1);
}

uint64_t sub_20A665F88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A665FD0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A66608C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A66602C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A66608C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A6660E0(uint64_t a1)
{
  uint64_t v13 = a1;
  uint64_t v14 = sub_20A8C6B30();
  uint64_t v1 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C6B20();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C6C10();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C5160();
  sub_20A8C6C00();
  sub_20A666A50(&qword_26AC699C0, MEMORY[0x263F79D58]);
  sub_20A8C45B0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F79CD8], v14);
  sub_20A8C6B10();
  sub_20A666A50(&qword_26AC699A8, MEMORY[0x263F79CC8]);
  sub_20A8C45B0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_20A6663CC()
{
  uint64_t v0 = sub_20A8C2800();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v9 - v5;
  sub_20A8C7570();
  sub_20A8C8770();
  sub_20A666A50(&qword_26763CE18, MEMORY[0x263F7A4D8]);
  sub_20A8C4570();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v6, v0);
  sub_20A8C8770();
  sub_20A8C8780();
  sub_20A8C2720();
  v7(v3, v0);
  sub_20A8C4580();
  return ((uint64_t (*)(char *, uint64_t))v7)(v6, v0);
}

uint64_t type metadata accessor for InterstitialAdTracker()
{
  return self;
}

uint64_t sub_20A6665B4(uint64_t a1)
{
  uint64_t v3 = sub_20A8C5170();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v1 + 24), *(void *)(*(void *)v1 + 48));
  uint64_t result = sub_20A8C7410();
  if (result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
    unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v8 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
    sub_20A8C48E0();
    return swift_release();
  }
  return result;
}

uint64_t sub_20A666720()
{
  uint64_t v0 = sub_20A8C8790();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v10 - v5;
  sub_20A8C5150();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
  unint64_t v7 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v8 + v7, v3, v0);
  sub_20A8C48E0();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
}

uint64_t sub_20A6668A8()
{
  return objectdestroyTm_6(MEMORY[0x263F7D430]);
}

uint64_t sub_20A6668C0(uint64_t a1)
{
  return sub_20A6669C8(a1, MEMORY[0x263F7D430], (uint64_t (*)(uint64_t, uint64_t))sub_20A6663CC);
}

uint64_t sub_20A6668EC()
{
  return objectdestroyTm_6(MEMORY[0x263F58C40]);
}

uint64_t objectdestroyTm_6(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)), v2);

  return swift_deallocObject();
}

uint64_t sub_20A66699C(uint64_t a1)
{
  return sub_20A6669C8(a1, MEMORY[0x263F58C40], (uint64_t (*)(uint64_t, uint64_t))sub_20A6660E0);
}

uint64_t sub_20A6669C8(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a3(a1, v6);
}

uint64_t sub_20A666A50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_20A666A98(uint64_t a1, double *a2, char *a3)
{
  uint64_t v4 = v3;
  objc_msgSend(a3, sel_setFrame_, *a2, a2[1], a2[2], a2[3]);
  uint64_t v8 = (void *)(v3 + 16);
  swift_beginAccess();
  uint64_t v9 = __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
  uint64_t v10 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_separatorView];
  uint64_t v12 = *(void *)(*v9 + 40);
  uint64_t v11 = *(void *)(*v9 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v9 + 16), v12);
  uint64_t v13 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v11 + 16) + 136))(v12);
  objc_msgSend(v10, sel_setBackgroundColor_, v13);

  objc_msgSend(v10, sel_setFrame_, a2[4], a2[5], a2[6], a2[7]);
  __swift_project_boxed_opaque_existential_1(v8, *(void *)(v4 + 40));
  uint64_t v61 = a3;
  uint64_t v14 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_addCalendarButton];
  uint64_t v15 = (int *)type metadata accessor for StockFeedEarningsViewModel();
  uint64_t v16 = (uint64_t *)(a1 + v15[8]);
  uint64_t v17 = v16[1];
  uint64_t v62 = a1;
  int v18 = *(unsigned __int8 *)(a1 + v15[9]);
  sub_20A438414(v14, *v16, v17, v18);
  uint64_t v19 = (void *)*__swift_project_boxed_opaque_existential_1(v8, *(void *)(v4 + 40));
  if (v17)
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v21 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    if (v18)
    {
      unint64_t v59 = 0x800000020A8F8D30;
      sub_20A8C2370();

      sub_20A42CF04();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
      int v23 = (void *)*MEMORY[0x263F814F0];
      *(void *)(inited + 32) = *MEMORY[0x263F814F0];
      uint64_t v24 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
      id v60 = v23;
      *(void *)(inited + 40) = sub_20A8CEE20();
      id v25 = (void *)*MEMORY[0x263F81500];
      *(void *)(inited + 64) = v24;
      *(void *)(inited + 72) = v25;
      id v26 = v19 + 2;
      uint64_t v28 = v19[5];
      uint64_t v27 = v19[6];
      __swift_project_boxed_opaque_existential_1(v26, v28);
      uint64_t v29 = *(void *)(v27 + 16);
      uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 96);
      id v31 = v25;
      uint64_t v32 = v30(v28, v29);
    }
    else
    {
      unint64_t v59 = 0x800000020A9017C0;
      sub_20A8C2370();

      sub_20A42CF04();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
      id v36 = (void *)*MEMORY[0x263F814F0];
      *(void *)(inited + 32) = *MEMORY[0x263F814F0];
      uint64_t v37 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
      id v60 = v36;
      *(void *)(inited + 40) = sub_20A8CEE20();
      uint64_t v38 = (void *)*MEMORY[0x263F81500];
      *(void *)(inited + 64) = v37;
      *(void *)(inited + 72) = v38;
      uint64_t v40 = v19[5];
      uint64_t v39 = v19[6];
      __swift_project_boxed_opaque_existential_1(v19 + 2, v40);
      uint64_t v41 = *(void *)(v39 + 16);
      id v42 = *(uint64_t (**)(uint64_t, uint64_t))(v41 + 96);
      id v43 = v38;
      uint64_t v32 = v42(v40, v41);
    }
    uint64_t v44 = v32;
    *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
    *(void *)(inited + 80) = v44;
    sub_20A4CF8B0(inited);
    id v45 = objc_allocWithZone(MEMORY[0x263F086A0]);
    uint64_t v46 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_20A667254((unint64_t *)&qword_26AC7F9F8, 255, type metadata accessor for Key);
    uint64_t v47 = (void *)sub_20A8CE170();
    swift_bridgeObjectRelease();
    id v48 = objc_msgSend(v45, sel_initWithString_attributes_, v46, v47, v59);

    uint64_t v34 = v60;
    unint64_t v35 = 0x263F08000uLL;
    objc_msgSend(v14, sel_setAttributedTitle_forState_, v48, 0);
  }
  else
  {
    id v33 = sub_20A4380EC();
    objc_msgSend(v14, sel_setAttributedTitle_forState_, v33, 0);

    uint64_t v34 = (void *)*MEMORY[0x263F814F0];
    unint64_t v35 = 0x263F08000;
  }
  objc_msgSend(v14, sel_setFrame_, a2[12], a2[13], a2[14], a2[15]);
  objc_msgSend(v14, sel_setHidden_, *(unsigned __int8 *)(v62 + v15[11]));
  int v49 = *(void **)&v61[OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_earningsLabel];
  objc_msgSend(v49, sel_setLineBreakMode_, 0);
  objc_msgSend(v49, sel_setNumberOfLines_, 0);
  sub_20A42CF04();
  uint64_t v50 = swift_initStackObject();
  *(_OWORD *)(v50 + 16) = xmmword_20A8D3DC0;
  *(void *)(v50 + 32) = v34;
  uint64_t v51 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  swift_bridgeObjectRetain();
  id v52 = v34;
  uint64_t v53 = sub_20A8CEE20();
  *(void *)(v50 + 64) = v51;
  *(void *)(v50 + 40) = v53;
  sub_20A4CF8B0(v50);
  id v54 = objc_allocWithZone(*(Class *)(v35 + 1696));
  unsigned __int8 v55 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A667254((unint64_t *)&qword_26AC7F9F8, 255, type metadata accessor for Key);
  uint64_t v56 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v57 = objc_msgSend(v54, sel_initWithString_attributes_, v55, v56);

  objc_msgSend(v49, sel_setAttributedText_, v57);
  return objc_msgSend(v49, sel_setFrame_, a2[8], a2[9], a2[10], a2[11]);
}

uint64_t type metadata accessor for StockFeedEarningsViewRenderer()
{
  return self;
}

uint64_t sub_20A6671FC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_20A667254(&qword_26AC79720, a2, (void (*)(uint64_t))type metadata accessor for StockFeedEarningsViewRenderer);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_20A667254(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A66729C(uint64_t *a1, double *a2, char *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI14StockTitleView_titleLabel];
  objc_msgSend(v8, sel_setFrame_, a2[4], a2[5], a2[6], a2[7]);
  uint64_t v9 = (void *)(v3 + 16);
  swift_beginAccess();
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
  uint64_t v75 = a1;
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  char v12 = *((unsigned char *)a2 + *(int *)(type metadata accessor for StockTitleViewLayoutAttributes() + 40));
  id v13 = sub_20A5D2F5C(v10, v11);
  id v73 = v8;
  objc_msgSend(v8, sel_setAttributedText_, v13);

  uint64_t v74 = a3;
  uint64_t v14 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI14StockTitleView_nameLabel];
  objc_msgSend(v14, sel_setFrame_, a2[8], a2[9], a2[10], a2[11]);
  uint64_t v15 = __swift_project_boxed_opaque_existential_1(v9, *(void *)(v4 + 40));
  if ((v12 - 1) <= 1u)
  {
    uint64_t v16 = (void *)*v15;
    uint64_t v70 = v75[3];
    uint64_t v71 = v75[2];
    BOOL v72 = v14;
    sub_20A6679E0(0, (unint64_t *)&qword_26AC80108, (void (*)(uint64_t))sub_20A431D64);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
    int v18 = (void *)*MEMORY[0x263F814F0];
    *(void *)(inited + 32) = *MEMORY[0x263F814F0];
    uint64_t v19 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
    swift_bridgeObjectRetain();
    id v20 = v18;
    *(void *)(inited + 40) = sub_20A8CEE20();
    id v21 = (void *)*MEMORY[0x263F81500];
    *(void *)(inited + 64) = v19;
    *(void *)(inited + 72) = v21;
    uint64_t v22 = v16 + 2;
    uint64_t v24 = v16[5];
    uint64_t v23 = v16[6];
    __swift_project_boxed_opaque_existential_1(v22, v24);
    uint64_t v25 = *(void *)(v23 + 16);
    id v26 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 184);
    id v27 = v21;
    uint64_t v28 = v26(v24, v25);
    *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
    *(void *)(inited + 80) = v28;
    sub_20A4CF8B0(inited);
    id v29 = objc_allocWithZone(MEMORY[0x263F086A0]);
    uint64_t v30 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_20A667A34((unint64_t *)&qword_26AC7F9F8, 255, type metadata accessor for Key);
    id v31 = (void *)sub_20A8CE170();
    swift_bridgeObjectRelease();
    id v32 = objc_msgSend(v29, sel_initWithString_attributes_, v30, v31);

    if (v32)
    {
      objc_msgSend(v72, sel_setAttributedText_, v32);
    }
  }
  id v33 = __swift_project_boxed_opaque_existential_1(v9, *(void *)(v4 + 40));
  uint64_t v35 = *(void *)(*v33 + 40);
  uint64_t v34 = *(void *)(*v33 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v33 + 16), v35);
  id v36 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v34 + 16) + 64))(v35);
  objc_msgSend(v74, sel_setBackgroundColor_, v36);

  objc_msgSend(v73, sel_setNumberOfLines_, 0);
  uint64_t v37 = *(char **)&v74[OBJC_IVAR____TtC8StocksUI14StockTitleView_quoteSummaryView];
  objc_msgSend(v37, sel_setFrame_, a2[12], a2[13], a2[14], a2[15]);
  uint64_t v38 = (uint64_t)v75 + *(int *)(type metadata accessor for StockTitleViewModel() + 24);
  memcpy(__dst, a2 + 16, 0x1A1uLL);
  sub_20A6BDA14(v38, (uint64_t)__dst, (uint64_t)v37);
  objc_msgSend(v74, sel_setIsAccessibilityElement_, 1);
  unint64_t v39 = (unint64_t)objc_msgSend(v74, sel_accessibilityTraits);
  unint64_t v40 = v39;
  uint64_t v41 = *MEMORY[0x263F83268];
  if (!v39)
  {
    if (!v41)
    {
      unint64_t v40 = 0;
      goto LABEL_10;
    }
LABEL_8:
    unint64_t v40 = v41 | v39;
    goto LABEL_10;
  }
  if ((v41 & ~v39) != 0) {
    goto LABEL_8;
  }
LABEL_10:
  objc_msgSend(v74, sel_setAccessibilityTraits_, v40, v70, v71);
  sub_20A6679E0(0, (unint64_t *)&qword_26AC800C0, (void (*)(uint64_t))sub_20A667988);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_20A8D7080;
  uint64_t v43 = v75[3];
  *(void *)(v42 + 32) = v75[2];
  *(void *)(v42 + 40) = v43;
  uint64_t v44 = OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_mainQuoteView;
  id v45 = *(void **)(*(void *)&v37[OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_mainQuoteView]
                 + OBJC_IVAR____TtC8StocksUI9QuoteView_priceLabel);
  swift_bridgeObjectRetain();
  id v46 = objc_msgSend(v45, sel_accessibilityLabel);
  if (v46)
  {
    uint64_t v47 = v46;
    uint64_t v48 = sub_20A8CE280();
    uint64_t v50 = v49;
  }
  else
  {
    uint64_t v48 = 0;
    uint64_t v50 = 0;
  }
  *(void *)(v42 + 48) = v48;
  *(void *)(v42 + 56) = v50;
  id v51 = objc_msgSend(*(id *)(*(void *)&v37[v44] + OBJC_IVAR____TtC8StocksUI9QuoteView_priceLabel), sel_accessibilityValue);
  if (v51)
  {
    id v52 = v51;
    uint64_t v53 = sub_20A8CE280();
    uint64_t v55 = v54;
  }
  else
  {
    uint64_t v53 = 0;
    uint64_t v55 = 0;
  }
  *(void *)(v42 + 64) = v53;
  *(void *)(v42 + 72) = v55;
  uint64_t v56 = OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_offHoursQuoteView;
  id v57 = objc_msgSend(*(id *)(*(void *)&v37[OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_offHoursQuoteView]+ OBJC_IVAR____TtC8StocksUI9QuoteView_priceLabel), sel_accessibilityLabel);
  if (v57)
  {
    id v58 = v57;
    uint64_t v59 = sub_20A8CE280();
    uint64_t v61 = v60;
  }
  else
  {
    uint64_t v59 = 0;
    uint64_t v61 = 0;
  }
  *(void *)(v42 + 80) = v59;
  *(void *)(v42 + 88) = v61;
  id v62 = objc_msgSend(*(id *)(*(void *)&v37[v56] + OBJC_IVAR____TtC8StocksUI9QuoteView_priceLabel), sel_accessibilityValue);
  if (v62)
  {
    uint64_t v63 = v62;
    uint64_t v64 = sub_20A8CE280();
    uint64_t v66 = v65;
  }
  else
  {
    uint64_t v64 = 0;
    uint64_t v66 = 0;
  }
  *(void *)(v42 + 96) = v64;
  *(void *)(v42 + 104) = v66;
  sub_20A8C82C0();
  uint64_t v68 = v67;
  swift_bridgeObjectRelease();
  if (v68)
  {
    id v69 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v69 = 0;
  }
  objc_msgSend(v74, sel_setAccessibilityLabel_, v69);
}

uint64_t type metadata accessor for StockTitleViewRenderer()
{
  return self;
}

uint64_t sub_20A667930(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_20A667A34(&qword_26AC742B0, a2, (void (*)(uint64_t))type metadata accessor for StockTitleViewRenderer);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_20A667988()
{
  if (!qword_26AC686A0)
  {
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC686A0);
    }
  }
}

void sub_20A6679E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF730();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A667A34(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A667A7C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v3 = type metadata accessor for WebViewControllerFactory();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    a2[3] = v3;
    a2[4] = (uint64_t)&off_26BE66290;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A667AF0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A491334();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v3 = result;
    sub_20A4342F4((uint64_t)a1, (uint64_t)v10);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, (unint64_t *)&unk_26AC697A0);
    uint64_t result = sub_20A8C5BB0();
    if (v9)
    {
      unint64_t v4 = (objc_class *)type metadata accessor for WebViewControllerFactory();
      uint64_t v5 = (char *)objc_allocWithZone(v4);
      *(void *)&v5[OBJC_IVAR____TtC8StocksUI24WebViewControllerFactory_navigator] = v3;
      sub_20A4342F4((uint64_t)v10, (uint64_t)&v5[OBJC_IVAR____TtC8StocksUI24WebViewControllerFactory_resolver]);
      sub_20A4342F4((uint64_t)v8, (uint64_t)&v5[OBJC_IVAR____TtC8StocksUI24WebViewControllerFactory_sceneStateManager]);
      v7.receiver = v5;
      v7.super_class = v4;
      id v6 = objc_msgSendSuper2(&v7, sel_init);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
      return (uint64_t)v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A667C2C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for OfflineAlertControllerFactory();
    uint64_t v5 = swift_allocObject();
    sub_20A42BEBC(&v6, v5 + 16);
    a2[3] = v4;
    uint64_t result = sub_20A668320(&qword_26AC79290, (void (*)(uint64_t))type metadata accessor for OfflineAlertControllerFactory);
    a2[4] = result;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A667D10@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A6682C8();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for AnalyticsChannelDataFactory();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    a2[3] = v5;
    a2[4] = (uint64_t)&off_26BE69918;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A667D98@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC68F58);
  uint64_t result = sub_20A8C5BB0();
  if (v5)
  {
    uint64_t v4 = type metadata accessor for StockFeedEarningsViewModelFactory();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v5;
    *(void *)(result + 24) = v6;
    a2[3] = v4;
    a2[4] = (uint64_t)&off_26BE6E890;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A667E44@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A491334();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E50);
  uint64_t result = sub_20A8C5BB0();
  if (!v11)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  if (!v9)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A668320((unint64_t *)&qword_26AC69370, MEMORY[0x263F24E68]);
    sub_20A8C8A10();
    swift_allocObject();
    uint64_t v6 = sub_20A8C89F0();
    uint64_t v7 = type metadata accessor for WatchlistCreationAlertFactory();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 56) = v5;
    uint64_t result = sub_20A42BEBC(&v10, v8 + 16);
    *(void *)(v8 + 64) = v6;
    a2[3] = v7;
    a2[4] = (uint64_t)&off_26BE63848;
    *a2 = v8;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FactoryAssembly()
{
  return self;
}

uint64_t sub_20A668088()
{
  sub_20A8C5CC0();
  sub_20A4301D4(0, (unint64_t *)&unk_26AC78CA0);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  type metadata accessor for WebViewControllerFactory();
  sub_20A8C6290();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC6B310);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7A3C0);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7D860);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7C468);
  sub_20A8C62A0();
  swift_release();

  return swift_release();
}

unint64_t sub_20A6682C8()
{
  unint64_t result = qword_26AC7FB20;
  if (!qword_26AC7FB20)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC7FB20);
  }
  return result;
}

uint64_t sub_20A668320(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for LinkedStockProviderFactory()
{
  return self;
}

void sub_20A6684E4()
{
  if (!qword_26AC697E0)
  {
    sub_20A8C3F00();
    unint64_t v0 = sub_20A8C63D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC697E0);
    }
  }
}

uint64_t *sub_20A66854C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(type metadata accessor for ForYouFeedConfig() + 20);
    uint64_t v9 = (char *)v7 + v8;
    long long v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C2800();
    uint64_t v12 = *(void *)(v11 - 8);
    id v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_20A66A2F4(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = *(int *)(a3 + 20);
    uint64_t v16 = (char *)v7 + v15;
    uint64_t v17 = (char *)a2 + v15;
    sub_20A55361C(0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = type metadata accessor for StockForYouFeedGroupKnobs();
    *(void *)&v16[*(int *)(v19 + 20)] = *(void *)&v17[*(int *)(v19 + 20)];
    *(void *)&v16[*(int *)(v19 + 24)] = *(void *)&v17[*(int *)(v19 + 24)];
    uint64_t v20 = type metadata accessor for ForYouFeedGroupKnobs();
    *(void *)&v16[*(int *)(v20 + 20)] = *(void *)&v17[*(int *)(v20 + 20)];
    uint64_t v21 = type metadata accessor for ForYouFeedKnobsConfig();
    *(void *)&v16[*(int *)(v21 + 20)] = *(void *)&v17[*(int *)(v21 + 20)];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_20A668794(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for ForYouFeedConfig() + 20);
  uint64_t v5 = sub_20A8C2800();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  sub_20A55361C(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  type metadata accessor for StockForYouFeedGroupKnobs();
  swift_release();
  swift_release();
  type metadata accessor for ForYouFeedGroupKnobs();

  return swift_bridgeObjectRelease();
}

void *sub_20A6688D8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for ForYouFeedConfig() + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2800();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    sub_20A66A2F4(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  sub_20A55361C(0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = type metadata accessor for StockForYouFeedGroupKnobs();
  *(void *)&v14[*(int *)(v17 + 20)] = *(void *)&v15[*(int *)(v17 + 20)];
  *(void *)&v14[*(int *)(v17 + 24)] = *(void *)&v15[*(int *)(v17 + 24)];
  uint64_t v18 = type metadata accessor for ForYouFeedGroupKnobs();
  *(void *)&v14[*(int *)(v18 + 20)] = *(void *)&v15[*(int *)(v18 + 20)];
  uint64_t v19 = type metadata accessor for ForYouFeedKnobsConfig();
  *(void *)&v14[*(int *)(v19 + 20)] = *(void *)&v15[*(int *)(v19 + 20)];
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_20A668AD4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(type metadata accessor for ForYouFeedConfig() + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2800();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_20A66A2F4(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  sub_20A55361C(0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = type metadata accessor for StockForYouFeedGroupKnobs();
  *(void *)&v16[*(int *)(v19 + 20)] = *(void *)&v17[*(int *)(v19 + 20)];
  swift_retain();
  swift_release();
  *(void *)&v16[*(int *)(v19 + 24)] = *(void *)&v17[*(int *)(v19 + 24)];
  swift_retain();
  swift_release();
  uint64_t v20 = type metadata accessor for ForYouFeedGroupKnobs();
  *(void *)&v16[*(int *)(v20 + 20)] = *(void *)&v17[*(int *)(v20 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = type metadata accessor for ForYouFeedKnobsConfig();
  *(void *)&v16[*(int *)(v21 + 20)] = *(void *)&v17[*(int *)(v21 + 20)];
  return a1;
}

void *sub_20A668D50(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for ForYouFeedConfig() + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2800();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_20A66A2F4(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = *(int *)(a3 + 20);
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  sub_20A55361C(0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = type metadata accessor for StockForYouFeedGroupKnobs();
  *(void *)&v13[*(int *)(v16 + 20)] = *(void *)&v14[*(int *)(v16 + 20)];
  *(void *)&v13[*(int *)(v16 + 24)] = *(void *)&v14[*(int *)(v16 + 24)];
  uint64_t v17 = type metadata accessor for ForYouFeedGroupKnobs();
  *(void *)&v13[*(int *)(v17 + 20)] = *(void *)&v14[*(int *)(v17 + 20)];
  uint64_t v18 = type metadata accessor for ForYouFeedKnobsConfig();
  *(void *)&v13[*(int *)(v18 + 20)] = *(void *)&v14[*(int *)(v18 + 20)];
  return a1;
}

void *sub_20A668F24(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(type metadata accessor for ForYouFeedConfig() + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2800();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_20A66A2F4(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  sub_20A55361C(0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = type metadata accessor for StockForYouFeedGroupKnobs();
  *(void *)&v16[*(int *)(v19 + 20)] = *(void *)&v17[*(int *)(v19 + 20)];
  swift_release();
  *(void *)&v16[*(int *)(v19 + 24)] = *(void *)&v17[*(int *)(v19 + 24)];
  swift_release();
  uint64_t v20 = type metadata accessor for ForYouFeedGroupKnobs();
  *(void *)&v16[*(int *)(v20 + 20)] = *(void *)&v17[*(int *)(v20 + 20)];
  swift_bridgeObjectRelease();
  uint64_t v21 = type metadata accessor for ForYouFeedKnobsConfig();
  *(void *)&v16[*(int *)(v21 + 20)] = *(void *)&v17[*(int *)(v21 + 20)];
  return a1;
}

uint64_t sub_20A669180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A669194);
}

uint64_t sub_20A669194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ForYouFeedConfig();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for ForYouFeedKnobsConfig();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_20A66928C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A6692A0);
}

uint64_t sub_20A6692A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for ForYouFeedConfig();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for ForYouFeedKnobsConfig();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for ForYouFeedContentConfig()
{
  uint64_t result = qword_26AC747F0;
  if (!qword_26AC747F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A6693F0()
{
  uint64_t result = type metadata accessor for ForYouFeedConfig();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ForYouFeedKnobsConfig();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_20A6694B8()
{
  return sub_20A66A528(&qword_26AC6EDA0, (void (*)(uint64_t))type metadata accessor for ForYouFeedConfig);
}

uint64_t sub_20A669500()
{
  return sub_20A66A528(&qword_26AC72A98, (void (*)(uint64_t))type metadata accessor for ForYouFeedKnobsConfig);
}

uint64_t sub_20A669548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v33 = a3;
  sub_20A66A2F4(0, qword_26AC71808, (void (*)(uint64_t))type metadata accessor for ForYouFeedGroupKnobs);
  MEMORY[0x270FA5388](v4 - 8);
  id v29 = (char *)&v28 - v5;
  sub_20A66A2F4(0, &qword_26AC72AE0, (void (*)(uint64_t))type metadata accessor for ForYouFeedKnobsConfig);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = type metadata accessor for ForYouFeedKnobsConfig();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v30 = (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A66A2F4(0, qword_26AC6EDE8, (void (*)(uint64_t))type metadata accessor for ForYouFeedConfig);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v28 - v13;
  uint64_t v15 = type metadata accessor for ForYouFeedConfig();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (uint64_t *)((char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = a1;
  sub_20A66A348(a1, (uint64_t)v14, qword_26AC6EDE8, (void (*)(uint64_t))type metadata accessor for ForYouFeedConfig);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    uint64_t v19 = (char *)v18 + *(int *)(v15 + 20);
    sub_20A8C27F0();
    uint64_t v20 = sub_20A8C2800();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
    *uint64_t v18 = MEMORY[0x263F8EE78];
    sub_20A66A3B4((uint64_t)v14, qword_26AC6EDE8, (void (*)(uint64_t))type metadata accessor for ForYouFeedConfig);
  }
  else
  {
    sub_20A66A410((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ForYouFeedConfig);
  }
  uint64_t v21 = v33;
  sub_20A66A410((uint64_t)v18, v33, (uint64_t (*)(void))type metadata accessor for ForYouFeedConfig);
  uint64_t v22 = v31;
  sub_20A66A348(v31, (uint64_t)v8, &qword_26AC72AE0, (void (*)(uint64_t))type metadata accessor for ForYouFeedKnobsConfig);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    uint64_t v23 = type metadata accessor for ForYouFeedGroupKnobs();
    uint64_t v24 = (uint64_t)v29;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v29, 1, 1, v23);
    uint64_t v25 = v30;
    sub_20A7DAB1C(v24, 0, 1, v30);
    sub_20A66A3B4(v22, &qword_26AC72AE0, (void (*)(uint64_t))type metadata accessor for ForYouFeedKnobsConfig);
    sub_20A66A3B4(v32, qword_26AC6EDE8, (void (*)(uint64_t))type metadata accessor for ForYouFeedConfig);
    sub_20A66A3B4((uint64_t)v8, &qword_26AC72AE0, (void (*)(uint64_t))type metadata accessor for ForYouFeedKnobsConfig);
  }
  else
  {
    sub_20A66A3B4(v22, &qword_26AC72AE0, (void (*)(uint64_t))type metadata accessor for ForYouFeedKnobsConfig);
    sub_20A66A3B4(v32, qword_26AC6EDE8, (void (*)(uint64_t))type metadata accessor for ForYouFeedConfig);
    uint64_t v25 = v30;
    sub_20A66A410((uint64_t)v8, v30, (uint64_t (*)(void))type metadata accessor for ForYouFeedKnobsConfig);
  }
  uint64_t v26 = type metadata accessor for ForYouFeedContentConfig();
  return sub_20A66A410(v25, v21 + *(int *)(v26 + 20), (uint64_t (*)(void))type metadata accessor for ForYouFeedKnobsConfig);
}

uint64_t sub_20A669A58@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  sub_20A66A2F4(0, &qword_26AC72AE0, (void (*)(uint64_t))type metadata accessor for ForYouFeedKnobsConfig);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v15 - v5;
  sub_20A66A2F4(0, qword_26AC6EDE8, (void (*)(uint64_t))type metadata accessor for ForYouFeedConfig);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v15 - v8;
  sub_20A66A478();
  uint64_t v11 = v10;
  uint64_t v15 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A66A4D4();
  sub_20A8CF8E0();
  if (!v2)
  {
    type metadata accessor for ForYouFeedConfig();
    char v18 = 0;
    sub_20A66A528(&qword_26AC6EDA8, (void (*)(uint64_t))type metadata accessor for ForYouFeedConfig);
    sub_20A8CF5C0();
    type metadata accessor for ForYouFeedKnobsConfig();
    char v17 = 1;
    sub_20A66A528(&qword_26AC72AA0, (void (*)(uint64_t))type metadata accessor for ForYouFeedKnobsConfig);
    sub_20A8CF5C0();
    sub_20A669548((uint64_t)v9, (uint64_t)v6, v16);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v11);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_20A669D20(char *a1, char *a2)
{
  return sub_20A44F0B4(*a1, *a2);
}

uint64_t sub_20A669D2C()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A669DC0()
{
  sub_20A8CE360();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A669E40()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A669ED0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_20A8CF5B0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_20A669F30(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x6565467961646F74;
  if (*v1) {
    unint64_t v2 = 0xD000000000000010;
  }
  unint64_t v3 = 0x800000020A8F8090;
  if (!*v1) {
    unint64_t v3 = 0xEF6769666E6F4364;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_20A669F80()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x6565467961646F74;
  }
}

uint64_t sub_20A669FCC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_20A8CF5B0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_20A66A030(uint64_t a1)
{
  unint64_t v2 = sub_20A66A4D4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A66A06C(uint64_t a1)
{
  unint64_t v2 = sub_20A66A4D4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20A66A0A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A669A58(a1, a2);
}

uint64_t sub_20A66A0C0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A66A570(v1, a1, (uint64_t (*)(void))type metadata accessor for ForYouFeedConfig);
}

uint64_t sub_20A66A0F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A66A570(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(void))type metadata accessor for ForYouFeedKnobsConfig);
}

uint64_t sub_20A66A12C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_20A66A2F4(0, &qword_26AC72AE0, (void (*)(uint64_t))type metadata accessor for ForYouFeedKnobsConfig);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v16 - v8;
  sub_20A66A2F4(0, qword_26AC6EDE8, (void (*)(uint64_t))type metadata accessor for ForYouFeedConfig);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v16 - v11;
  sub_20A66A570(a1, (uint64_t)&v16 - v11, (uint64_t (*)(void))type metadata accessor for ForYouFeedConfig);
  uint64_t v13 = type metadata accessor for ForYouFeedConfig();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 0, 1, v13);
  sub_20A66A570(v3 + *(int *)(a2 + 20), (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ForYouFeedKnobsConfig);
  uint64_t v14 = type metadata accessor for ForYouFeedKnobsConfig();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  return sub_20A669548((uint64_t)v12, (uint64_t)v9, a3);
}

void sub_20A66A2F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A66A348(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A66A2F4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A66A3B4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A66A2F4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A66A410(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_20A66A478()
{
  if (!qword_26AC7FE28)
  {
    sub_20A66A4D4();
    unint64_t v0 = sub_20A8CF660();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FE28);
    }
  }
}

unint64_t sub_20A66A4D4()
{
  unint64_t result = qword_26AC747C8;
  if (!qword_26AC747C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC747C8);
  }
  return result;
}

uint64_t sub_20A66A528(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A66A570(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for ForYouFeedContentConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A66A6A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedContentConfig.CodingKeys()
{
  return &type metadata for ForYouFeedContentConfig.CodingKeys;
}

unint64_t sub_20A66A6E0()
{
  unint64_t result = qword_26763CE90;
  if (!qword_26763CE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CE90);
  }
  return result;
}

unint64_t sub_20A66A738()
{
  unint64_t result = qword_26AC747D8;
  if (!qword_26AC747D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC747D8);
  }
  return result;
}

unint64_t sub_20A66A790()
{
  unint64_t result = qword_26AC747D0;
  if (!qword_26AC747D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC747D0);
  }
  return result;
}

uint64_t type metadata accessor for TickerCardContainerController()
{
  uint64_t result = qword_26AC79910;
  if (!qword_26AC79910) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A66A830()
{
  return swift_initClassMetadata2();
}

uint64_t sub_20A66A8B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void sub_20A66A8BC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_20A66DB4C();
}

void sub_20A66A8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_20A8CA180();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v108 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v109 = (char *)&v101 - v10;
  MEMORY[0x270FA5388](v11);
  unint64_t v110 = (unint64_t)&v101 - v12;
  MEMORY[0x270FA5388](v13);
  double v111 = (char *)&v101 - v14;
  MEMORY[0x270FA5388](v15);
  double v112 = (char *)&v101 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v113 = (char *)&v101 - v18;
  MEMORY[0x270FA5388](v19);
  unint64_t v114 = (unint64_t)&v101 - v20;
  MEMORY[0x270FA5388](v21);
  double v115 = (char *)&v101 - v22;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v101 - v24;
  sub_20A8C9D60();
  uint64_t v26 = (void (*)(uint64_t, uint64_t))sub_20A8C9D70();
  v26(a1, a2);
  uint64_t v27 = sub_20A8C9D40();
  uint64_t v28 = sub_20A66B510(1, v27);
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  unint64_t v34 = v33;
  if (v33)
  {
    uint64_t v116 = (void (*)(char *, uint64_t, uint64_t))v6;
    sub_20A8CF790();
    swift_unknownObjectRetain_n();
    uint64_t v36 = swift_dynamicCastClass();
    if (!v36)
    {
      swift_unknownObjectRelease();
      uint64_t v36 = MEMORY[0x263F8EE78];
    }
    uint64_t v37 = *(void *)(v36 + 16);
    swift_release();
    if (__OFSUB__(v34 >> 1, v32))
    {
      __break(1u);
    }
    else if (v37 == (v34 >> 1) - v32)
    {
      uint64_t v35 = swift_dynamicCastClass();
      uint64_t v6 = (uint64_t)v116;
      if (!v35)
      {
        swift_unknownObjectRelease();
        uint64_t v35 = MEMORY[0x263F8EE78];
      }
      goto LABEL_9;
    }
    swift_unknownObjectRelease();
    uint64_t v6 = (uint64_t)v116;
  }
  uint64_t v35 = sub_20A75CBE4(v28, v30, v32, v34);
LABEL_9:
  swift_unknownObjectRelease();
  uint64_t v116 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v116(v25, a2, v6);
  int v38 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v25, v6);
  uint64_t v39 = *MEMORY[0x263F7DB28];
  if (v38 == v39 || (uint64_t v40 = *MEMORY[0x263F7DB50], v38 == v40))
  {
    swift_release();
    char v41 = 1;
LABEL_12:
    sub_20A66B5B4(v41);
    return;
  }
  if (v38 != *MEMORY[0x263F7DB58] && v38 != *MEMORY[0x263F7DB48])
  {
    if (v38 == *MEMORY[0x263F7DB60])
    {
      uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
      uint64_t v43 = v111;
      uint64_t v44 = *MEMORY[0x263F7DB50];
      double v112 = (char *)(v7 + 104);
      uint64_t v107 = v42;
      v42(v111, v44, v6);
      uint64_t v45 = *(void *)(v35 + 16);
      if (!v45)
      {
        id v52 = *(char **)(v7 + 8);
        uint64_t v73 = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        ((void (*)(char *, uint64_t))v52)(v43, v6);
LABEL_61:
        uint64_t v87 = v109;
        v107(v109, v39, v6);
        uint64_t v88 = (char *)v73;
        uint64_t v89 = v108;
        if (!*(void *)(v35 + 16))
        {
LABEL_72:
          ((void (*)(char *, uint64_t))v52)(v87, v6);
          swift_release();
LABEL_73:
          char v41 = 0;
          goto LABEL_12;
        }
        double v112 = *(char **)(v35 + 16);
        unint64_t v110 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
        v116(v108, v35 + v110, v6);
        unint64_t v90 = sub_20A66DDD0();
        swift_bridgeObjectRetain();
        double v115 = v52;
        uint64_t v91 = v89;
        double v111 = (char *)v90;
        char v92 = sub_20A8CE210();
        uint64_t v93 = v91;
        id v52 = v115;
        uint64_t v113 = v88;
        ((void (*)(char *, uint64_t))v115)(v93, v6);
        if (v92)
        {
          swift_release();
LABEL_77:
          ((void (*)(char *, uint64_t))v52)(v87, v6);
          goto LABEL_78;
        }
        uint64_t v94 = v112;
        if (v112 == (char *)1)
        {
          swift_release();
          goto LABEL_72;
        }
        uint64_t v95 = *(char **)(v7 + 72);
        uint64_t v104 = v35;
        unint64_t v114 = (unint64_t)v95;
        double v96 = &v95[v35 + v110];
        uint64_t v97 = 1;
        uint64_t v98 = v108;
        while (1)
        {
          v116(v98, (uint64_t)v96, v6);
          uint64_t v99 = v97 + 1;
          if (__OFADD__(v97, 1)) {
            break;
          }
          char v100 = sub_20A8CE210();
          ((void (*)(char *, uint64_t))v115)(v98, v6);
          if (v100)
          {
            swift_release();
            uint64_t v87 = v109;
            id v52 = v115;
            goto LABEL_77;
          }
          ++v97;
          v96 += v114;
          if ((char *)v99 == v94)
          {
            swift_release();
            uint64_t v87 = v109;
            id v52 = v115;
            goto LABEL_72;
          }
        }
LABEL_84:
        __break(1u);
        return;
      }
      unsigned int v105 = v39;
      uint64_t v106 = (char *)((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      id v46 = (char *)v110;
      v116((char *)v110, (uint64_t)&v106[v35], v6);
      unint64_t v47 = sub_20A66DDD0();
      swift_bridgeObjectRetain();
      unint64_t v114 = v47;
      char v48 = sub_20A8CE210();
      uint64_t v103 = v7;
      uint64_t v50 = *(char **)(v7 + 8);
      uint64_t v49 = v7 + 8;
      id v51 = v46;
      id v52 = v50;
      ((void (*)(char *, uint64_t))v50)(v51, v6);
      if (v48)
      {
        swift_release();
LABEL_75:
        ((void (*)(char *, uint64_t))v52)(v43, v6);
        goto LABEL_78;
      }
      uint64_t v73 = v49 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      if (v45 == 1)
      {
        swift_release();
        uint64_t v7 = v103;
        uint64_t v39 = v105;
LABEL_60:
        ((void (*)(char *, uint64_t))v52)(v43, v6);
        goto LABEL_61;
      }
      uint64_t v113 = (char *)(v49 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
      double v115 = v52;
      uint64_t v101 = v3;
      uint64_t v81 = *(void *)(v103 + 72);
      uint64_t v104 = v35;
      uint64_t v82 = &v106[v35 + v81];
      uint64_t v83 = 1;
      BOOL v84 = (char *)v110;
      while (1)
      {
        v116(v84, (uint64_t)v82, v6);
        uint64_t v85 = v83 + 1;
        if (__OFADD__(v83, 1)) {
          break;
        }
        char v86 = sub_20A8CE210();
        ((void (*)(char *, uint64_t))v115)(v84, v6);
        if (v86)
        {
          swift_release();
          uint64_t v43 = v111;
          id v52 = v115;
          goto LABEL_75;
        }
        ++v83;
        v82 += v81;
        if (v85 == v45)
        {
          uint64_t v35 = v104;
          swift_release();
          uint64_t v7 = v103;
          uint64_t v43 = v111;
          uint64_t v39 = v105;
          id v52 = v115;
          uint64_t v73 = (uint64_t)v113;
          goto LABEL_60;
        }
      }
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v38 != *MEMORY[0x263F7DB40] && v38 != *MEMORY[0x263F7DB38])
    {
      if (v38 == *MEMORY[0x263F7DB30])
      {
LABEL_78:
        swift_release();
        return;
      }
      sub_20A8CF520();
      __break(1u);
    }
  }
  id v53 = objc_msgSend(self, sel_sharedApplication);
  uint64_t v106 = (char *)objc_msgSend(v53, sel_applicationState);

  uint64_t v54 = v115;
  uint64_t v107 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  uint64_t v108 = (char *)(v7 + 104);
  v107(v115, v40, v6);
  uint64_t v55 = *(void *)(v35 + 16);
  if (v55)
  {
    unsigned int v105 = v39;
    unint64_t v102 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v56 = (char *)v114;
    v116((char *)v114, v35 + v102, v6);
    unint64_t v57 = sub_20A66DDD0();
    swift_bridgeObjectRetain();
    unint64_t v110 = v57;
    char v58 = sub_20A8CE210();
    double v111 = *(char **)(v7 + 8);
    ((void (*)(char *, uint64_t))v111)(v56, v6);
    if (v58)
    {
      swift_release();
LABEL_54:
      ((void (*)(char *, uint64_t))v111)(v54, v6);
      goto LABEL_78;
    }
    uint64_t v103 = v7;
    uint64_t v104 = v35;
    uint64_t v109 = (char *)((v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
    if (v55 != 1)
    {
      uint64_t v101 = v3;
      uint64_t v61 = *(void *)(v103 + 72);
      unint64_t v62 = v104 + v61 + v102;
      uint64_t v63 = 1;
      uint64_t v64 = (char *)v114;
      while (1)
      {
        v116(v64, v62, v6);
        uint64_t v65 = v63 + 1;
        if (__OFADD__(v63, 1)) {
          break;
        }
        char v66 = sub_20A8CE210();
        ((void (*)(char *, uint64_t))v111)(v64, v6);
        if (v66)
        {
          swift_release();
          uint64_t v54 = v115;
          goto LABEL_54;
        }
        ++v63;
        v62 += v61;
        if (v65 == v55)
        {
          uint64_t v35 = v104;
          swift_release();
          uint64_t v3 = v101;
          uint64_t v7 = v103;
          uint64_t v54 = v115;
          goto LABEL_35;
        }
      }
      __break(1u);
      goto LABEL_82;
    }
    uint64_t v35 = v104;
    swift_release();
    uint64_t v7 = v103;
LABEL_35:
    uint64_t v39 = v105;
    uint64_t v59 = (void (*)(char *, uint64_t))v111;
    uint64_t v60 = (uint64_t)v109;
    ((void (*)(char *, uint64_t))v111)(v54, v6);
  }
  else
  {
    uint64_t v59 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v60 = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v59(v54, v6);
  }
  uint64_t v67 = v113;
  v107(v113, v39, v6);
  if (!*(void *)(v35 + 16))
  {
LABEL_48:
    v59(v67, v6);
    goto LABEL_49;
  }
  unint64_t v114 = *(void *)(v35 + 16);
  unint64_t v110 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v68 = v112;
  v116(v112, v35 + v110, v6);
  unint64_t v69 = sub_20A66DDD0();
  double v111 = (char *)v59;
  uint64_t v70 = (char *)v69;
  swift_bridgeObjectRetain();
  double v115 = v70;
  char v71 = sub_20A8CE210();
  ((void (*)(char *, uint64_t))v111)(v68, v6);
  uint64_t v109 = (char *)v60;
  if (v71)
  {
LABEL_66:
    swift_release();
    ((void (*)(char *, uint64_t))v111)(v113, v6);
    goto LABEL_78;
  }
  BOOL v72 = (char *)v114;
  if (v114 != 1)
  {
    uint64_t v74 = *(void *)(v7 + 72);
    uint64_t v104 = v35;
    uint64_t v75 = v74;
    uint64_t v76 = (char *)(v35 + v74 + v110);
    uint64_t v77 = 1;
    uint64_t v78 = v112;
    while (1)
    {
      v116(v78, (uint64_t)v76, v6);
      uint64_t v79 = v77 + 1;
      if (__OFADD__(v77, 1)) {
        break;
      }
      char v80 = sub_20A8CE210();
      ((void (*)(char *, uint64_t))v111)(v78, v6);
      if (v80) {
        goto LABEL_66;
      }
      ++v77;
      v76 += v75;
      if ((char *)v79 == v72)
      {
        swift_release();
        uint64_t v67 = v113;
        uint64_t v59 = (void (*)(char *, uint64_t))v111;
        goto LABEL_48;
      }
    }
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  swift_release();
  ((void (*)(char *, uint64_t))v111)(v113, v6);
LABEL_49:
  swift_release();
  if ((objc_msgSend(self, sel_areAnimationsEnabled) & 1) != 0
    || v106 == (char *)2
    || *(unsigned char *)(v3 + qword_26AC798D8) == 1)
  {
    goto LABEL_73;
  }
}

uint64_t sub_20A66B510(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_20A8CA180();
    return a2;
  }
  return result;
}

void sub_20A66B5B4(char a1)
{
  char v2 = a1 & 1;
  if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v1 + qword_26AC79900)) & 1) == 0)
  {
    *(unsigned char *)(v1 + qword_26AC79900) = v2;
    uint64_t v3 = *(void **)(v1 + qword_26AC798F8);
    objc_msgSend(v3, sel_cancel);
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v4;
    *(unsigned char *)(v5 + 24) = v2;
    v7[4] = sub_20A66DAF8;
    v7[5] = v5;
    v7[0] = MEMORY[0x263EF8330];
    v7[1] = 1107296256;
    v7[2] = sub_20A66D9B8;
    v7[3] = &block_descriptor_27;
    uint64_t v6 = _Block_copy(v7);
    swift_release();
    objc_msgSend(v3, sel_addAnimation_, v6);
    _Block_release(v6);
  }
}

void sub_20A66B6E8(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_20A8CA180();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v5 - 8);
  uint64_t v66 = v5;
  uint64_t v67 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v68 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unint64_t v69 = (char *)&v58 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v70 = (char *)&v58 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v58 - v13;
  uint64_t v15 = sub_20A8C9F10();
  uint64_t v16 = *(void **)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C9D60();
  uint64_t v19 = (void (*)(uint64_t, unint64_t))sub_20A8C9D70();
  v19(a1, a2);
  uint64_t v20 = sub_20A8C9D40();
  uint64_t v21 = sub_20A66B510(1, v20);
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  unint64_t v27 = v26;
  if (v26)
  {
    unint64_t v65 = a2;
    char v71 = v14;
    sub_20A8CF790();
    swift_unknownObjectRetain_n();
    uint64_t v28 = swift_dynamicCastClass();
    if (!v28)
    {
      swift_unknownObjectRelease();
      uint64_t v28 = MEMORY[0x263F8EE78];
    }
    uint64_t v29 = *(void *)(v28 + 16);
    swift_release();
    if (!__OFSUB__(v27 >> 1, v25))
    {
      if (v29 == (v27 >> 1) - v25)
      {
        uint64_t v23 = swift_dynamicCastClass();
        uint64_t v14 = v71;
        a2 = v65;
        if (!v23)
        {
          swift_unknownObjectRelease();
          uint64_t v23 = MEMORY[0x263F8EE78];
        }
        goto LABEL_9;
      }
      goto LABEL_51;
    }
    goto LABEL_50;
  }
  while (1)
  {
    uint64_t v23 = sub_20A75CBE4(v21, v23, v25, v27);
LABEL_9:
    swift_unknownObjectRelease();
    ((void (*)(char *, unint64_t, uint64_t))v16[2])(v18, a2, v15);
    int v30 = ((uint64_t (*)(char *, uint64_t))v16[11])(v18, v15);
    if (v30 == *MEMORY[0x263F7D9F8] || v30 == *MEMORY[0x263F7DA10])
    {
      swift_release();
      char v32 = 1;
LABEL_15:
      sub_20A66B5B4(v32);
      return;
    }
    if (v30 != *MEMORY[0x263F7DA18] && v30 != *MEMORY[0x263F7DA08])
    {
      if (v30 == *MEMORY[0x263F7DA00]) {
        goto LABEL_25;
      }
      goto LABEL_53;
    }
    uint64_t v60 = v2;
    uint64_t v21 = v66;
    unint64_t v34 = v67;
    uint64_t v36 = (char *)v67 + 104;
    uint64_t v35 = (void (*)(char *, void, uint64_t))*((void *)v67 + 13);
    v35(v14, *MEMORY[0x263F7DB50], v66);
    unint64_t v65 = *(void *)(v23 + 16);
    if (!v65)
    {
      char v41 = (void (*)(char *, uint64_t))*((void *)v34 + 1);
      uint64_t v42 = ((unint64_t)v34 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v41(v14, v21);
      goto LABEL_36;
    }
    uint64_t v59 = v35;
    unint64_t v37 = (*((unsigned __int8 *)v34 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v34 + 80);
    uint64_t v16 = (void *)((char *)v34 + 16);
    unint64_t v27 = (unint64_t)v70;
    uint64_t v64 = (void (*)(char *, unint64_t, uint64_t))*((void *)v34 + 2);
    v64(v70, v23 + v37, v21);
    unint64_t v38 = sub_20A66DDD0();
    swift_bridgeObjectRetain();
    char v71 = v14;
    unint64_t v63 = v38;
    char v39 = sub_20A8CE210();
    uint64_t v40 = (uint64_t)v34 + 8;
    char v41 = (void (*)(char *, uint64_t))*((void *)v34 + 1);
    v41((char *)v27, v21);
    if (v39)
    {
LABEL_23:
      swift_release();
      v41(v71, v21);
      goto LABEL_25;
    }
    uint64_t v42 = v40 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    if (v65 == 1) {
      break;
    }
    char v58 = v36;
    uint64_t v61 = *((void *)v34 + 9);
    uint64_t v62 = v40 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v25 = v23 + v61 + v37;
    uint64_t v15 = 1;
    while (1)
    {
      char v2 = v70;
      v64(v70, v25, v21);
      uint64_t v18 = (char *)(v15 + 1);
      if (__OFADD__(v15, 1)) {
        break;
      }
      unint64_t v27 = (unint64_t)v41;
      uint64_t v44 = v2;
      char v45 = sub_20A8CE210();
      id v46 = v44;
      char v41 = (void (*)(char *, uint64_t))v27;
      ((void (*)(char *, uint64_t))v27)(v46, v21);
      if (v45) {
        goto LABEL_23;
      }
      ++v15;
      v25 += v61;
      if (v18 == (char *)v65)
      {
        swift_release();
        unint64_t v34 = v67;
        uint64_t v43 = v71;
        uint64_t v42 = v62;
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    swift_unknownObjectRelease();
    uint64_t v14 = v71;
    a2 = v65;
  }
  swift_release();
  uint64_t v43 = v71;
LABEL_35:
  uint64_t v35 = v59;
  v41(v43, v21);
LABEL_36:
  unint64_t v47 = v69;
  v35(v69, *MEMORY[0x263F7DB28], v21);
  uint64_t v48 = *(void *)(v23 + 16);
  uint64_t v49 = v68;
  if (!v48)
  {
LABEL_46:
    v41(v47, v21);
    swift_release();
    char v32 = 0;
    goto LABEL_15;
  }
  uint64_t v62 = v42;
  uint64_t v50 = (char *)*((void *)v34 + 2);
  unint64_t v65 = (*((unsigned __int8 *)v34 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v34 + 80);
  char v71 = v50;
  ((void (*)(char *, unint64_t, uint64_t))v50)(v68, v23 + v65, v21);
  unint64_t v51 = sub_20A66DDD0();
  swift_bridgeObjectRetain();
  uint64_t v70 = (char *)v51;
  char v52 = sub_20A8CE210();
  v41(v49, v21);
  if ((v52 & 1) == 0)
  {
    if (v48 != 1)
    {
      uint64_t v67 = v41;
      uint64_t v53 = *((void *)v34 + 9);
      unint64_t v54 = v23 + v53 + v65;
      uint64_t v55 = 1;
      while (1)
      {
        ((void (*)(char *, unint64_t, uint64_t))v71)(v49, v54, v21);
        uint64_t v56 = v55 + 1;
        if (__OFADD__(v55, 1)) {
          break;
        }
        char v57 = sub_20A8CE210();
        v67(v49, v21);
        if (v57)
        {
          swift_release();
          unint64_t v47 = v69;
          char v41 = v67;
          goto LABEL_48;
        }
        ++v55;
        v54 += v53;
        uint64_t v49 = v68;
        if (v56 == v48)
        {
          swift_release();
          unint64_t v47 = v69;
          char v41 = v67;
          goto LABEL_46;
        }
      }
      __break(1u);
LABEL_53:
      sub_20A8CF520();
      __break(1u);
      return;
    }
    swift_release();
    goto LABEL_46;
  }
  swift_release();
LABEL_48:
  v41(v47, v21);
LABEL_25:
  swift_release();
}

void sub_20A66BE2C()
{
  uint64_t v1 = v0;
  v6.receiver = v0;
  v6.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  char v2 = *(void **)&v0[qword_26AC798E8];
  objc_msgSend(v2, sel_setAlpha_, 0.0);
  id v3 = objc_msgSend(v1, sel_view);
  if (v3)
  {
    uint64_t v4 = v3;
    objc_msgSend(v3, sel_addSubview_, v2);

    swift_allocObject();
    swift_unknownObjectUnownedInit();
    sub_20A8C6380();
    swift_release();
    swift_release();
    id v5 = objc_msgSend(v1, sel_traitCollection);
    sub_20A66C0F8((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
}

void sub_20A66BF50(void **a1)
{
  uint64_t v1 = *a1;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  objc_msgSend(Strong, sel_addChildViewController_, v1);

  id v3 = objc_msgSend(v1, sel_view);
  if (!v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = v3;
  objc_msgSend(v3, sel_setAlpha_, 0.0);

  id v5 = (void *)swift_unknownObjectUnownedLoadStrong();
  id v6 = objc_msgSend(v5, sel_view);

  if (!v6)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v7 = objc_msgSend(v1, sel_view);
  if (!v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v8 = v7;
  uint64_t v9 = (char *)swift_unknownObjectUnownedLoadStrong();
  id v10 = *(id *)&v9[qword_26AC798E8];

  objc_msgSend(v6, sel_insertSubview_belowSubview_, v8, v10);
  uint64_t v11 = (void *)swift_unknownObjectUnownedLoadStrong();
  objc_msgSend(v1, sel_didMoveToParentViewController_, v11);

  uint64_t v12 = (void *)swift_unknownObjectUnownedLoadStrong();
  id v13 = objc_msgSend(v12, sel_view);

  if (!v13)
  {
LABEL_11:
    __break(1u);
    return;
  }
  objc_msgSend(v13, sel_setNeedsLayout);
}

id sub_20A66C0F8(uint64_t a1)
{
  char v2 = v1;
  uint64_t v4 = &v2[qword_26AC79908];
  swift_beginAccess();
  sub_20A4342F4((uint64_t)v4, (uint64_t)v23);
  uint64_t v5 = v24;
  uint64_t v6 = v25;
  __swift_project_boxed_opaque_existential_1(v23, v24);
  uint64_t v7 = *(void *)(v6 + 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8);
  uint64_t v21 = v5;
  uint64_t v22 = v6;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v20);
  v8(a1, v5, v7);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  sub_20A42BEBC(&v20, (uint64_t)v4);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  uint64_t v9 = __swift_project_boxed_opaque_existential_1(v4, *((void *)v4 + 3));
  id v10 = *(void **)&v2[qword_26AC798E8];
  uint64_t v12 = *(void *)(*v9 + 40);
  uint64_t v11 = *(void *)(*v9 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v9 + 16), v12);
  id v13 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v11 + 16) + 56))(v12);
  objc_msgSend(v10, sel_setBackgroundColor_, v13);

  sub_20A4342F4((uint64_t)v4, (uint64_t)v23);
  uint64_t v14 = __swift_project_boxed_opaque_existential_1(v23, v24);
  id result = objc_msgSend(v2, sel_view);
  if (result)
  {
    uint64_t v16 = result;
    uint64_t v17 = (void *)(*v14 + 16);
    uint64_t v19 = *(void *)(*v14 + 40);
    uint64_t v18 = *(void *)(*v14 + 48);
    __swift_project_boxed_opaque_existential_1(v17, v19);
    (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)(v18 + 16) + 24))(&v20, v19);
    objc_msgSend(v16, sel_setAccessibilityIgnoresInvertColors_, v20);

    return (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_20A66C2F4(void *a1)
{
  id v1 = a1;
  sub_20A66BE2C();
}

void sub_20A66C33C(char a1)
{
  char v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = sub_20A8CAA60();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16.receiver = v2;
  v16.super_class = ObjectType;
  objc_msgSendSuper2(&v16, sel_viewWillAppear_, a1 & 1, v7);
  sub_20A8C6350();
  id v10 = v15;
  if (v15)
  {
    uint64_t v11 = OBJC_IVAR____TtC8StocksUI20TickerViewController_autoScrolling;
    if (*((unsigned char *)v2 + qword_26AC79900))
    {
      v15[OBJC_IVAR____TtC8StocksUI20TickerViewController_autoScrolling] = 1;
      sub_20A8C9BF0();
      uint64_t v12 = (void *)sub_20A8C94C0();
      swift_release();
      type metadata accessor for TickerCollectionView();
      *(unsigned char *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8StocksUI20TickerCollectionView_autoScrolling) = v10[v11];
      sub_20A762830();

      sub_20A8C9D10();
      (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, *MEMORY[0x263F7DD98], v5);
      sub_20A8CAA50();

      swift_release();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    else
    {
      v15[OBJC_IVAR____TtC8StocksUI20TickerViewController_autoScrolling] = 0;
      sub_20A8C9BF0();
      id v13 = (void *)sub_20A8C94C0();
      swift_release();
      type metadata accessor for TickerCollectionView();
      *(unsigned char *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8StocksUI20TickerCollectionView_autoScrolling) = v10[v11];
      sub_20A762830();
    }
  }
}

void sub_20A66C5A0(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_20A66C33C(a3);
}

void sub_20A66C5F4(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_20A66C820(a3, (SEL *)&selRef_viewDidAppear_);
}

void sub_20A66C650(char a1)
{
  char v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = sub_20A8CAA60();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13.receiver = v2;
  v13.super_class = ObjectType;
  objc_msgSendSuper2(&v13, sel_viewWillDisappear_, a1 & 1, v7);
  sub_20A8C6350();
  id v10 = v12;
  if (v12)
  {
    if (*((unsigned char *)v2 + qword_26AC79900))
    {
      sub_20A8C9D10();
      (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, *MEMORY[0x263F7DD90], v5);
      sub_20A8CAA50();

      swift_release();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    else
    {
    }
  }
}

void sub_20A66C7CC(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_20A66C650(a3);
}

void sub_20A66C820(char a1, SEL *a2)
{
  id v4 = v2;
  v7.receiver = v4;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, *a2, a1 & 1);
  sub_20A8C6350();
  if (v6)
  {
    if (*((unsigned char *)v4 + qword_26AC79900))
    {
      sub_20A8C9D10();
      sub_20A8CAA40();
      swift_release();
    }
  }
}

void sub_20A66C8C0(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_20A66C820(a3, (SEL *)&selRef_viewDidDisappear_);
}

void sub_20A66C91C()
{
  id v1 = v0;
  v41.receiver = v0;
  v41.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v41, sel_viewDidLayoutSubviews);
  sub_20A8C6350();
  if (!v40) {
    return;
  }
  char v2 = *(void **)&v0[qword_26AC798E8];
  id v3 = objc_msgSend(v1, sel_view);
  if (!v3)
  {
    __break(1u);
    goto LABEL_16;
  }
  id v4 = v3;
  objc_msgSend(v3, sel_bounds);
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;

  v42.origin.x = v6;
  v42.origin.y = v8;
  v42.size.width = v10;
  v42.size.height = v12;
  double Width = CGRectGetWidth(v42);
  id v14 = objc_msgSend(v1, sel_view);
  if (!v14)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v15 = v14;
  objc_msgSend(v14, sel_safeAreaInsets);
  double v17 = v16;

  objc_msgSend(v2, sel_setFrame_, 0.0, 0.0, Width, v17);
  sub_20A8C9BF0();
  uint64_t v18 = (void *)sub_20A8C94C0();
  swift_release();
  objc_msgSend(v18, sel_contentSize);
  double v20 = v19;

  id v21 = objc_msgSend(v40, sel_view);
  if (!v21)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v22 = v21;
  id v23 = objc_msgSend(v1, sel_view);
  if (!v23)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v24 = v23;
  objc_msgSend(v23, sel_safeAreaInsets);
  double v26 = v25;

  id v27 = objc_msgSend(v1, sel_view);
  if (!v27)
  {
LABEL_19:
    __break(1u);
    return;
  }
  uint64_t v28 = v27;
  objc_msgSend(v27, sel_bounds);
  CGFloat v30 = v29;
  CGFloat v32 = v31;
  CGFloat v34 = v33;
  CGFloat v36 = v35;

  v43.origin.x = v30;
  v43.origin.y = v32;
  v43.size.width = v34;
  v43.size.height = v36;
  double v37 = CGRectGetWidth(v43);
  if (v20 <= 0.0)
  {
    if (qword_26AC67888 != -1) {
      swift_once();
    }
    double v38 = *(double *)&qword_26AC9E920;
    if (qword_26AC6CDC0 != -1) {
      swift_once();
    }
    sub_20A8CE980();
    double v20 = v38 + v39;
  }
  objc_msgSend(v22, sel_setFrame_, 0.0, v26, v37, v20);
}

void sub_20A66CBF4(void *a1)
{
  id v1 = a1;
  sub_20A66C91C();
}

void sub_20A66CC3C(void *a1, uint64_t a2, void *a3)
{
  v7.receiver = a1;
  v7.super_class = (Class)swift_getObjectType();
  id v4 = a3;
  id v5 = v7.receiver;
  objc_msgSendSuper2(&v7, sel_traitCollectionDidChange_, v4);
  id v6 = objc_msgSend(v5, sel_traitCollection, v7.receiver, v7.super_class);
  sub_20A66C0F8((uint64_t)v6);
}

void sub_20A66CCCC()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = sub_20A8C9500();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  CGFloat v8 = (char *)&v37 - v7;
  MEMORY[0x270FA5388](v9);
  double v11 = (double *)((char *)&v37 - v10);
  MEMORY[0x270FA5388](v12);
  id v14 = (char *)&v37 - v13;
  MEMORY[0x270FA5388](v15);
  double v17 = (char *)&v37 - v16;
  uint64_t v18 = sub_20A8C9510();
  double v19 = MEMORY[0x270FA5388](v18 - 8);
  id v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41.receiver = v0;
  v41.super_class = ObjectType;
  objc_msgSendSuper2(&v41, sel_viewSafeAreaInsetsDidChange, v19);
  id v22 = objc_msgSend(v0, sel_navigationController);
  if (v22)
  {
    id v23 = v22;
    if ((objc_msgSend(v22, sel_isToolbarHidden) & 1) == 0)
    {
      double v39 = v5;
      uint64_t v40 = v21;
      double v38 = v8;
      *(void *)double v17 = 0;
      v17[8] = 1;
      uint64_t v24 = *MEMORY[0x263F7D798];
      double v25 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
      v25(v17, v24, v2);
      if (qword_26AC67888 != -1) {
        swift_once();
      }
      *(void *)id v14 = qword_26AC9E920;
      v14[8] = 1;
      v25(v14, v24, v2);
      id v26 = objc_msgSend(v0, sel_view);
      if (!v26)
      {
        __break(1u);
        return;
      }
      id v27 = v26;
      objc_msgSend(v26, sel_safeAreaInsets);
      double v29 = v28;

      double *v11 = v29 + 88.0;
      *((unsigned char *)v11 + 8) = 0;
      uint64_t v30 = *MEMORY[0x263F7D7A8];
      double v31 = v11;
      uint64_t v32 = v2;
      double v37 = v11;
      uint64_t v33 = v2;
      CGFloat v34 = v25;
      v25((char *)v31, v30, v32);
      double v35 = v38;
      *(void *)double v38 = 0x3FD999999999999ALL;
      v25(v35, *MEMORY[0x263F7D7A0], v33);
      CGFloat v36 = v39;
      *double v39 = 0;
      *((unsigned char *)v36 + 8) = 0;
      v34((char *)v36, v30, v33);
      sub_20A8C94F0();
      sub_20A8C9D30();
    }
  }
}

void sub_20A66D03C(void *a1)
{
  id v1 = a1;
  sub_20A66CCCC();
}

void sub_20A66D084()
{
}

uint64_t sub_20A66D0B4()
{
  swift_release();
  sub_20A4380C4(v0 + qword_26AC798F0);

  uint64_t v1 = v0 + qword_26AC79908;

  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t sub_20A66D124(uint64_t a1)
{
  swift_release();
  sub_20A4380C4(a1 + qword_26AC798F0);

  uint64_t v2 = a1 + qword_26AC79908;

  return __swift_destroy_boxed_opaque_existential_1(v2);
}

uint64_t sub_20A66D1A0()
{
  return type metadata accessor for TickerCardContainerController();
}

void sub_20A66D1A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = sub_20A8CAA60();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  double v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x2105289B0](a3 + 16);
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    uint64_t v37 = a1;
    uint64_t v38 = a2;
    char v14 = a4 & 1;
    sub_20A8C6370();
    uint64_t v15 = v39;
    unsigned __int8 v16 = objc_msgSend(self, sel_areAnimationsEnabled);
    if (a4)
    {
      uint64_t v18 = OBJC_IVAR____TtC8StocksUI20TickerViewController_autoScrolling;
      v15[OBJC_IVAR____TtC8StocksUI20TickerViewController_autoScrolling] = 1;
      sub_20A8C9BF0();
      double v19 = (void *)sub_20A8C94C0();
      swift_release();
      type metadata accessor for TickerCollectionView();
      *(unsigned char *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8StocksUI20TickerCollectionView_autoScrolling) = v15[v18];
      sub_20A762830();

      double v17 = (unsigned int *)MEMORY[0x263F7DD98];
    }
    else
    {
      double v17 = (unsigned int *)MEMORY[0x263F7DD90];
    }
    uint64_t v20 = v13;
    sub_20A8C9D10();

    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *v17, v8);
    sub_20A8CAA50();
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (!MEMORY[0x2105289B0](&v20[qword_26AC798F0]) || (uint64_t v21 = sub_20A71C084(v14), swift_unknownObjectRelease(), !v21))
    {
      type metadata accessor for TickerCardContainerControllerAnimationCoordinator();
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = MEMORY[0x263F8EE80];
    }
    uint64_t v22 = swift_allocObject();
    *(unsigned char *)(v22 + 16) = v14;
    *(void *)(v22 + 24) = v15;
    *(void *)(v22 + 32) = v20;
    uint64_t v23 = swift_allocObject();
    *(unsigned char *)(v23 + 16) = v14;
    *(void *)(v23 + 24) = v15;
    *(void *)(v23 + 32) = v20;
    type metadata accessor for TickerAnimation();
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = sub_20A66DC38;
    v24[3] = v22;
    v24[4] = sub_20A66DC84;
    v24[5] = v23;
    MEMORY[0x270FA5388](v24);
    *(&v37 - 2) = v21;
    *((unsigned char *)&v37 - 8) = v16;
    double v25 = v20;
    id v26 = v15;
    id v27 = v25;
    double v28 = v26;
    sub_20A8C6670();
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v24;
    *(unsigned char *)(v29 + 24) = v16;
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = sub_20A66DD04;
    *(void *)(v30 + 24) = v29;
    swift_retain();
    double v31 = (void *)sub_20A8C6450();
    sub_20A8C64F0();
    swift_release();
    swift_release();

    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v21;
    *(unsigned char *)(v32 + 24) = v16;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = sub_20A66DD48;
    *(void *)(v33 + 24) = v32;
    swift_retain();
    CGFloat v34 = (void *)sub_20A8C6450();
    sub_20A8C64F0();
    swift_release();
    swift_release();

    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v37;
    *(void *)(v35 + 24) = v38;
    swift_retain();
    CGFloat v36 = (void *)sub_20A8C6450();
    sub_20A8C6590();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
}

id sub_20A66D6D8(char a1, id a2, uint64_t a3)
{
  id result = objc_msgSend(a2, sel_view);
  id v6 = result;
  if ((a1 & 1) == 0)
  {
    double v7 = 0.0;
    if (result) {
      goto LABEL_5;
    }
    __break(1u);
  }
  double v7 = 1.0;
  if (!result)
  {
    __break(1u);
    return result;
  }
LABEL_5:
  objc_msgSend(result, sel_setAlpha_, v7);

  uint64_t v8 = *(void **)(a3 + qword_26AC798E8);

  return objc_msgSend(v8, sel_setAlpha_, v7);
}

id sub_20A66D784(int a1, char a2, id a3, uint64_t a4)
{
  id result = objc_msgSend(a3, sel_view);
  id v8 = result;
  if (a2)
  {
    if (result)
    {
      objc_msgSend(result, sel_setAlpha_, 1.0);

      objc_msgSend(*(id *)(a4 + qword_26AC798E8), sel_setAlpha_, 1.0);
      goto LABEL_6;
    }
LABEL_10:
    __break(1u);
    return result;
  }
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  objc_msgSend(result, sel_setAlpha_, 0.0);

  objc_msgSend(*(id *)(a4 + qword_26AC798E8), sel_setAlpha_, 0.0);
  uint64_t v9 = OBJC_IVAR____TtC8StocksUI20TickerViewController_autoScrolling;
  *((unsigned char *)a3 + OBJC_IVAR____TtC8StocksUI20TickerViewController_autoScrolling) = 0;
  sub_20A8C9BF0();
  uint64_t v10 = (void *)sub_20A8C94C0();
  swift_release();
  type metadata accessor for TickerCollectionView();
  *(unsigned char *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8StocksUI20TickerCollectionView_autoScrolling) = *((unsigned char *)a3 + v9);
  sub_20A762830();

LABEL_6:
  sub_20A8C9D10();
  sub_20A8CAA40();

  return (id)swift_release();
}

uint64_t sub_20A66D8EC(uint64_t a1, char a2)
{
  if (a2) {
    MEMORY[0x270FA5388](a1);
  }
  sub_20A5FC0C8();
  swift_allocObject();
  return sub_20A8C65E0();
}

uint64_t sub_20A66D9B8(uint64_t a1, void *aBlock)
{
  uint64_t v2 = *(void (**)(uint64_t (*)(), uint64_t))(a1 + 32);
  uint64_t v3 = _Block_copy(aBlock);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  swift_retain();
  v2(sub_20A66DB3C, v4);
  swift_release();

  return swift_release();
}

void sub_20A66DA4C(uint64_t a1, void *a2)
{
  id v4 = objc_msgSend(*v2, sel_traitCollection);
  sub_20A66C0F8((uint64_t)v4);

  if (objc_msgSend(a2, sel_horizontalSizeClass) == (id)2) {
    sub_20A66B5B4(0);
  }
}

uint64_t sub_20A66DAC0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_20A66DAF8(uint64_t a1, uint64_t a2)
{
  sub_20A66D1A8(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_20A66DB04()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_20A66DB3C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

void sub_20A66DB4C()
{
  *(void *)&v0[qword_26AC798F0 + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[qword_26AC79900] = 0;
  uint64_t v1 = qword_26AC798F8;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F5A3A8]), sel_init);
  uint64_t v2 = qword_26AC798E8;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)sub_20A8C8480()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v0[qword_26AC798D8] = 0;

  sub_20A8CF520();
  __break(1u);
}

id sub_20A66DC38()
{
  return sub_20A66D6D8(*(unsigned char *)(v0 + 16), *(id *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_20A66DC44()
{
  return swift_deallocObject();
}

id sub_20A66DC84(int a1)
{
  return sub_20A66D784(a1, *(unsigned char *)(v1 + 16), *(id *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_20A66DC90()
{
  return sub_20A7FD140(0, *(unsigned char *)(v0 + 24));
}

uint64_t sub_20A66DCCC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A66DD04()
{
  return sub_20A66D8EC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_20A66DD10()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A66DD48()
{
  return sub_20A7FD140(1, *(unsigned char *)(v0 + 24));
}

uint64_t sub_20A66DD7C(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A7FD2DC(a1, a2, a3, a4, v4);
}

void sub_20A66DD84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_20A7FD334(a1, a2, *(double *)(v4 + 16), a3, a4, *(void **)(v4 + 24));
}

uint64_t sub_20A66DD90()
{
  swift_unknownObjectUnownedDestroy();

  return swift_deallocObject();
}

void sub_20A66DDC8(void **a1)
{
}

unint64_t sub_20A66DDD0()
{
  unint64_t result = qword_26AC6A580;
  if (!qword_26AC6A580)
  {
    sub_20A8CA180();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6A580);
  }
  return result;
}

uint64_t sub_20A66DE3C()
{
  uint64_t v0 = sub_20A8C8560();
  __swift_allocate_value_buffer(v0, qword_26AC69E30);
  __swift_project_value_buffer(v0, (uint64_t)qword_26AC69E30);
  return sub_20A8C8550();
}

uint64_t static RadarComponent.stocks.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26AC69E48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20A8C8560();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26AC69E30);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_20A66DF5C(void *a1)
{
  return sub_20A8C5A70();
}

uint64_t type metadata accessor for TickerModule()
{
  return self;
}

void *sub_20A66E020(_OWORD *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    a1[2] = *((_OWORD *)a2 + 2);
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_20A8CADF0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[8];
    *(void *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    uint64_t v13 = *(void **)((char *)a2 + v12);
    *(void *)((char *)v4 + v12) = v13;
    uint64_t v14 = a3[9];
    uint64_t v15 = a3[10];
    unsigned __int8 v16 = *(void **)((char *)a2 + v14);
    *(void *)((char *)v4 + v14) = v16;
    *((unsigned char *)v4 + v15) = *((unsigned char *)a2 + v15);
    uint64_t v17 = a3[12];
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *(void *)((char *)v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    *(void *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    id v18 = v13;
    id v19 = v16;
  }
  return v4;
}

void sub_20A66E154(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_20A8CADF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  id v6 = *(void **)(a1 + a2[9]);
}

_OWORD *sub_20A66E1E4(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8CADF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v12 = *(void **)((char *)a2 + v11);
  *(void *)((char *)a1 + v11) = v12;
  uint64_t v13 = a3[9];
  uint64_t v14 = a3[10];
  uint64_t v15 = *(void **)((char *)a2 + v13);
  *(void *)((char *)a1 + v13) = v15;
  *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
  uint64_t v16 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  id v17 = v12;
  id v18 = v15;
  return a1;
}

void *sub_20A66E2C8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8CADF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v10 = a3[8];
  uint64_t v11 = *(void **)((char *)a2 + v10);
  uint64_t v12 = *(void **)((char *)a1 + v10);
  *(void *)((char *)a1 + v10) = v11;
  id v13 = v11;

  uint64_t v14 = a3[9];
  uint64_t v15 = *(void **)((char *)a2 + v14);
  uint64_t v16 = *(void **)((char *)a1 + v14);
  *(void *)((char *)a1 + v14) = v15;
  id v17 = v15;

  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  return a1;
}

_OWORD *sub_20A66E3E8(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8CADF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  uint64_t v12 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  uint64_t v13 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  return a1;
}

_OWORD *sub_20A66E4C4(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8CADF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v12 = *(void **)((char *)a1 + v11);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);

  uint64_t v13 = a3[9];
  uint64_t v14 = *(void **)((char *)a1 + v13);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);

  uint64_t v15 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  uint64_t v16 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  return a1;
}

uint64_t sub_20A66E5B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A66E5C4);
}

uint64_t sub_20A66E5C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8CADF0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_20A66E688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A66E69C);
}

uint64_t sub_20A66E69C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20A8CADF0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ForYouTitleViewLayoutOptions()
{
  uint64_t result = qword_26AC78590;
  if (!qword_26AC78590) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A66E7A8()
{
  uint64_t result = sub_20A8CADF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_20A66E87C(void *a1@<X0>, double *a2@<X8>, double a3@<D0>, double a4@<D3>, double a5@<D5>)
{
  uint64_t v10 = sub_20A8CF0D0();
  if (!v10)
  {
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v11 = (void *)v10;
  uint64_t v12 = sub_20A8CEF70();
  if (!v12)
  {
LABEL_33:
    __break(1u);
    return;
  }
  uint64_t v13 = (void *)v12;
  id v14 = objc_msgSend(v11, sel_imageWithConfiguration_, v12);

  objc_msgSend(v14, sel_size);
  double v16 = v15;

  sub_20A8CEFD0();
  double v18 = v17;
  sub_20A7A8E40(a1);
  double v21 = v19;
  double v23 = v22;
  double v66 = v24;
  double v67 = v19;
  double v68 = v22;
  double v69 = v20;
  if (v19 < a4) {
    double v25 = a4;
  }
  else {
    double v25 = v19;
  }
  if (v20 < a5) {
    double v26 = a5;
  }
  else {
    double v26 = v20;
  }
  double v27 = a3 - (v26 + v16 + v18 + v25);
  double v28 = *(void **)(v5 + *(int *)(type metadata accessor for ButtonLayoutCalculator() + 20));
  sub_20A8CEC70();
  objc_msgSend(v28, sel_boundingRectWithSize_options_context_, 33, 0, v27, v29);
  CGFloat v64 = v30;
  double v32 = v31;
  double v34 = v33;
  double v36 = v35;
  objc_msgSend(a1, sel_displayScale);
  double v38 = v37;
  CGFloat v63 = v32;
  if (objc_msgSend(v28, sel_su_containsExcessiveLineHeightCharacter))
  {
    objc_msgSend(a1, sel_displayScale);
    objc_msgSend(v28, sel_su_languageAwareOutsetsAtScale_);
    double v60 = v34;
    double v61 = v36;
    double v40 = -v39;
    double v41 = v18;
    double v42 = v16;
    double v44 = -v43;
    double v46 = -v45;
    double v48 = -v47;
    id v49 = objc_msgSend(a1, sel_layoutDirection);
    if (v49 == (id)1) {
      double v50 = v44;
    }
    else {
      double v50 = v48;
    }
    if (v49 == (id)1) {
      double v51 = v48;
    }
    else {
      double v51 = v44;
    }
    double v16 = v42;
    if (v41 > v50) {
      double v18 = v41;
    }
    else {
      double v18 = v50;
    }
    if (v21 > v51) {
      double v52 = v21;
    }
    else {
      double v52 = v51;
    }
    swift_beginAccess();
    double v53 = v66;
    if (v66 <= v40) {
      double v53 = v40;
    }
    double v66 = v53;
    double v67 = v52;
    double v54 = v46;
    double v34 = v60;
    double v36 = v61;
    if (v68 > v54) {
      double v54 = v68;
    }
    double v62 = v54;
  }
  else
  {
    double v62 = v23;
  }
  double v55 = ceil(v36 * v38) / v38;
  double v56 = ceil(v34 * v38) / v38;
  swift_beginAccess();
  v70.origin.x = v64;
  v70.origin.y = v63;
  v70.size.width = v56;
  v70.size.height = v55;
  double v57 = v69 + v16 + v18 + v67 + CGRectGetWidth(v70);
  if (v57 >= a3) {
    double v58 = a3;
  }
  else {
    double v58 = v57;
  }
  v71.origin.x = v64;
  v71.origin.y = v63;
  v71.size.width = v56;
  v71.size.height = v55;
  CGFloat Height = CGRectGetHeight(v71);
  *a2 = v58;
  a2[1] = v62 + v66 + Height;
  a2[2] = v66;
  a2[3] = v67;
  a2[4] = v62;
  a2[5] = v69;
}

uint64_t type metadata accessor for WatchlistSwitcherLayoutAttributesFactory()
{
  return self;
}

__n128 sub_20A66EB78@<Q0>(uint64_t a1@<X0>, unint64_t a2@<X1>, double *a3@<X2>, void *a4@<X8>)
{
  uint64_t v35 = a1;
  v36.n128_u64[0] = a2;
  double v38 = a4;
  *(void *)&long long v37 = type metadata accessor for ButtonLayoutCalculator() - 8;
  MEMORY[0x270FA5388](v37);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_20A8CF110();
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  double v31 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)*((void *)a3 + 6);
  uint64_t v10 = v4[5];
  uint64_t v11 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v10);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 + 8) + 8);
  v42[3] = v10;
  v42[4] = v11;
  __swift_allocate_boxed_opaque_existential_1(v42);
  id v32 = v9;
  v12();
  uint64_t v13 = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(v11 + 24))(*((void *)a3 + 7), 0, v10, v11);
  id v14 = v31;
  uint64_t v16 = v35;
  unint64_t v15 = v36.n128_u64[0];
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v11 + 40))(v35, v36.n128_u64[0], v13, v10, v11);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v11 + 48))(v16, v15, v13, v10, v11);
  uint64_t v18 = v33;
  double v19 = v14;
  double v20 = v14;
  uint64_t v21 = v34;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v7, v19, v34);
  *(void *)&v7[*(int *)(v37 + 28)] = v17;
  double v22 = *a3;
  double v23 = a3[3];
  double v24 = a3[5];
  double v25 = v32;
  sub_20A66E87C(v32, (double *)v39, v22, v23, v24);
  __n128 v36 = (__n128)v39[1];
  long long v37 = v39[0];
  uint64_t v26 = v40;
  uint64_t v27 = v41;

  sub_20A66EE88((uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  double v28 = v38;
  *double v38 = 0;
  v28[1] = 0;
  __n128 result = v36;
  *((_OWORD *)v28 + 1) = v37;
  *((__n128 *)v28 + 2) = result;
  v28[6] = v26;
  v28[7] = v27;
  return result;
}

uint64_t type metadata accessor for ButtonLayoutCalculator()
{
  uint64_t result = qword_26AC736D8;
  if (!qword_26AC736D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A66EE88(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ButtonLayoutCalculator();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_20A66EEE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20A8CF110();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    id v10 = v9;
  }
  return a1;
}

void sub_20A66EFB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8CF110();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t sub_20A66F028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8CF110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  id v9 = v8;
  return a1;
}

uint64_t sub_20A66F0A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8CF110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  id v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  return a1;
}

uint64_t sub_20A66F130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8CF110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_20A66F1AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8CF110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  return a1;
}

uint64_t sub_20A66F230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A66F244);
}

uint64_t sub_20A66F244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8CF110();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_20A66F304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A66F318);
}

uint64_t sub_20A66F318(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20A8CF110();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20A66F3D4()
{
  uint64_t result = sub_20A8CF110();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_20A66F46C(void *a1)
{
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC8StocksUI11WelcomeView_errorView];
  if (v3)
  {
    id v4 = v3;
    objc_msgSend(v1, sel_addSubview_, v4);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8StocksUI11WelcomeView_footer], sel_setHidden_, 1);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet1], sel_setHidden_, 1);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet2], sel_setHidden_, 1);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3], sel_setHidden_, 1);

    if (!a1) {
      return;
    }
  }
  else
  {
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8StocksUI11WelcomeView_footer], sel_setHidden_, 0);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet1], sel_setHidden_, 0);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet2], sel_setHidden_, 0);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3], sel_setHidden_, 0);
    if (!a1) {
      return;
    }
  }

  objc_msgSend(a1, sel_removeFromSuperview);
}

char *sub_20A66F5C0(double a1, double a2, double a3, double a4)
{
  int v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = MEMORY[0x263F8EE60] + 8;
  sub_20A67084C(0, &qword_26AC6AAE0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F7E040]);
  uint64_t v76 = *(void *)(v12 - 8);
  uint64_t v77 = v12;
  MEMORY[0x270FA5388](v12);
  id v14 = (uint64_t *)((char *)&v74 - v13);
  uint64_t v15 = OBJC_IVAR____TtC8StocksUI11WelcomeView_scrollView;
  id v16 = objc_allocWithZone(MEMORY[0x263F82B88]);
  uint64_t v17 = v5;
  *(void *)&v5[v15] = objc_msgSend(v16, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v18 = OBJC_IVAR____TtC8StocksUI11WelcomeView_footer;
  *(void *)&v17[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E50]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v19 = OBJC_IVAR____TtC8StocksUI11WelcomeView_titleGroup;
  *(void *)&v17[v19] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WelcomeView.TitleGroup()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v20 = OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet1;
  uint64_t v21 = (objc_class *)type metadata accessor for WelcomeView.BulletView();
  *(void *)&v17[v20] = objc_msgSend(objc_allocWithZone(v21), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v22 = OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet2;
  *(void *)&v17[v22] = objc_msgSend(objc_allocWithZone(v21), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v23 = OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3;
  *(void *)&v17[v23] = objc_msgSend(objc_allocWithZone(v21), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v24 = OBJC_IVAR____TtC8StocksUI11WelcomeView_continueButton;
  *(void *)&v17[v24] = objc_msgSend(self, sel_largeButton);
  uint64_t v25 = OBJC_IVAR____TtC8StocksUI11WelcomeView_activityIndicator;
  *(void *)&v17[v25] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F823E8]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v26 = OBJC_IVAR____TtC8StocksUI11WelcomeView_privacyIcon;
  *(void *)&v17[v26] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v27 = OBJC_IVAR____TtC8StocksUI11WelcomeView_privacyLink;
  type metadata accessor for TapDimmingTextView();
  *(void *)&v17[v27] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v28 = OBJC_IVAR____TtC8StocksUI11WelcomeView_onPrivacyTap;
  sub_20A67084C(0, (unint64_t *)&qword_26AC6AAE8, v11, MEMORY[0x263F7E048]);
  *(void *)&v17[v28] = objc_msgSend(objc_allocWithZone(v29), sel_init);
  *(void *)&v17[OBJC_IVAR____TtC8StocksUI11WelcomeView_errorView] = 0;

  v79.receiver = v17;
  v79.super_class = ObjectType;
  uint64_t v30 = (char *)objc_msgSendSuper2(&v79, sel_initWithFrame_, a1, a2, a3, a4);
  double v31 = *(void **)&v30[OBJC_IVAR____TtC8StocksUI11WelcomeView_scrollView];
  id v32 = v30;
  objc_msgSend(v32, sel_addSubview_, v31);
  uint64_t v33 = OBJC_IVAR____TtC8StocksUI11WelcomeView_footer;
  uint64_t v34 = *(void **)&v32[OBJC_IVAR____TtC8StocksUI11WelcomeView_footer];
  objc_msgSend(v32, sel_addSubview_, v34);
  objc_msgSend(v31, sel_addSubview_, *(void *)&v32[OBJC_IVAR____TtC8StocksUI11WelcomeView_titleGroup]);
  uint64_t v35 = OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet1;
  objc_msgSend(v31, sel_addSubview_, *(void *)&v32[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet1]);
  uint64_t v36 = OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet2;
  objc_msgSend(v31, sel_addSubview_, *(void *)&v32[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet2]);
  uint64_t v37 = OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3;
  objc_msgSend(v31, sel_addSubview_, *(void *)&v32[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3]);
  uint64_t v75 = OBJC_IVAR____TtC8StocksUI11WelcomeView_activityIndicator;
  objc_msgSend(v31, sel_addSubview_, *(void *)&v32[OBJC_IVAR____TtC8StocksUI11WelcomeView_activityIndicator]);
  id v38 = objc_msgSend(v34, sel_contentView);
  objc_msgSend(v38, sel_addSubview_, *(void *)&v32[OBJC_IVAR____TtC8StocksUI11WelcomeView_continueButton]);

  id v39 = objc_msgSend(*(id *)&v32[v33], sel_contentView);
  objc_msgSend(v39, sel_addSubview_, *(void *)&v32[OBJC_IVAR____TtC8StocksUI11WelcomeView_privacyIcon]);

  id v40 = objc_msgSend(*(id *)&v32[v33], sel_contentView);
  objc_msgSend(v40, sel_addSubview_, *(void *)&v32[OBJC_IVAR____TtC8StocksUI11WelcomeView_privacyLink]);

  *id v14 = 1;
  uint64_t v42 = v76;
  uint64_t v41 = v77;
  (*(void (**)(void *, void, uint64_t))(v76 + 104))(v14, *MEMORY[0x263F7E038], v77);

  (*(void (**)(void *, uint64_t))(v42 + 8))(v14, v41);
  sub_20A67084C(0, (unint64_t *)&qword_26AC80140, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D8D40;
  double v44 = *(void **)&v32[v35];
  *(void *)(inited + 32) = v44;
  double v45 = *(void **)&v32[v36];
  *(void *)(inited + 40) = v45;
  double v46 = *(void **)&v32[v37];
  *(void *)(inited + 48) = v46;
  uint64_t v78 = inited;
  sub_20A8CE620();
  uint64_t v47 = v78;
  unint64_t v48 = v78 & 0xC000000000000001;
  if ((v78 & 0xC000000000000001) != 0)
  {
    id v71 = v44;
    id v72 = v45;
    id v73 = v46;
    double v53 = (char *)MEMORY[0x210527700](0, v47);
  }
  else
  {
    id v49 = *(void **)(v78 + 32);
    id v50 = v44;
    id v51 = v45;
    id v52 = v46;
    double v53 = v49;
  }
  double v54 = v53;
  double v55 = *(void **)&v53[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title];
  unint64_t v56 = (unint64_t)objc_msgSend(v55, sel_accessibilityTraits);
  unint64_t v57 = v56;
  uint64_t v58 = *MEMORY[0x263F83268];
  if (!v56)
  {
    if (!v58)
    {
      unint64_t v57 = 0;
      goto LABEL_9;
    }
LABEL_7:
    unint64_t v57 = v58 | v56;
    goto LABEL_9;
  }
  if ((v58 & ~v56) != 0) {
    goto LABEL_7;
  }
LABEL_9:
  objc_msgSend(v55, sel_setAccessibilityTraits_, v57);

  if (v48) {
    uint64_t v59 = (char *)MEMORY[0x210527700](1, v47);
  }
  else {
    uint64_t v59 = (char *)*(id *)(v47 + 40);
  }
  double v60 = v59;
  double v61 = *(void **)&v59[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title];
  unint64_t v62 = (unint64_t)objc_msgSend(v61, sel_accessibilityTraits);
  unint64_t v63 = v62;
  if (!v62)
  {
    if (!v58)
    {
      unint64_t v63 = 0;
      goto LABEL_18;
    }
LABEL_16:
    unint64_t v63 = v62 | v58;
    goto LABEL_18;
  }
  if ((v58 & ~v62) != 0) {
    goto LABEL_16;
  }
LABEL_18:
  objc_msgSend(v61, sel_setAccessibilityTraits_, v63);

  if (v48) {
    CGFloat v64 = (char *)MEMORY[0x210527700](2, v47);
  }
  else {
    CGFloat v64 = (char *)*(id *)(v47 + 48);
  }
  unint64_t v65 = v64;
  double v66 = *(void **)&v64[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title];
  unint64_t v67 = (unint64_t)objc_msgSend(v66, sel_accessibilityTraits);
  unint64_t v68 = v67;
  if (v67)
  {
    if ((v58 & ~v67) == 0) {
      goto LABEL_27;
    }
  }
  else if (!v58)
  {
    unint64_t v68 = 0;
    goto LABEL_27;
  }
  unint64_t v68 = v67 | v58;
LABEL_27:
  objc_msgSend(v66, sel_setAccessibilityTraits_, v68);
  swift_bridgeObjectRelease();

  id v69 = *(id *)&v32[v75];
  objc_msgSend(v69, sel_startAnimating);

  return v32;
}

char *sub_20A66FD0C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10TitleGroup_appIcon;
  id v10 = objc_allocWithZone(MEMORY[0x263F82828]);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v12 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10TitleGroup_welcomeLabel;
  *(void *)&v11[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v21.receiver = v11;
  v21.super_class = (Class)type metadata accessor for WelcomeView.TitleGroup();
  uint64_t v13 = (char *)objc_msgSendSuper2(&v21, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v14 = *(void *)&v13[OBJC_IVAR____TtCC8StocksUI11WelcomeView10TitleGroup_appIcon];
  uint64_t v15 = v13;
  objc_msgSend(v15, sel_addSubview_, v14);
  objc_msgSend(v15, sel_addSubview_, *(void *)&v15[OBJC_IVAR____TtCC8StocksUI11WelcomeView10TitleGroup_welcomeLabel]);
  objc_msgSend(v15, sel_setIsAccessibilityElement_, 1);
  id v16 = v15;
  unint64_t v17 = (unint64_t)objc_msgSend(v16, sel_accessibilityTraits);
  unint64_t v18 = v17;
  uint64_t v19 = *MEMORY[0x263F83268];
  if (v17)
  {
    if ((v19 & ~v17) == 0) {
      goto LABEL_7;
    }
  }
  else if (!v19)
  {
    unint64_t v18 = 0;
    goto LABEL_7;
  }
  unint64_t v18 = v19 | v17;
LABEL_7:
  objc_msgSend(v16, sel_setAccessibilityTraits_, v18);

  return v16;
}

id sub_20A67006C()
{
  return sub_20A6702A8(type metadata accessor for WelcomeView.TitleGroup);
}

char *sub_20A6700D0(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_image;
  id v10 = objc_allocWithZone(MEMORY[0x263F82828]);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v12 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title;
  *(void *)&v11[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v13 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb;
  *(void *)&v11[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v18.receiver = v11;
  v18.super_class = (Class)type metadata accessor for WelcomeView.BulletView();
  uint64_t v14 = (char *)objc_msgSendSuper2(&v18, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v15 = *(void *)&v14[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_image];
  id v16 = v14;
  objc_msgSend(v16, sel_addSubview_, v15);
  objc_msgSend(v16, sel_addSubview_, *(void *)&v16[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title]);
  objc_msgSend(v16, sel_addSubview_, *(void *)&v16[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb]);

  return v16;
}

id sub_20A670290()
{
  return sub_20A6702A8(type metadata accessor for WelcomeView.BulletView);
}

id sub_20A6702A8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for WelcomeView()
{
  return self;
}

uint64_t type metadata accessor for WelcomeView.TitleGroup()
{
  return self;
}

uint64_t type metadata accessor for WelcomeView.BulletView()
{
  return self;
}

void sub_20A6704BC()
{
  uint64_t v1 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_image;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_20A8CF520();
  __break(1u);
}

void sub_20A6705B4()
{
  uint64_t v1 = OBJC_IVAR____TtC8StocksUI11WelcomeView_scrollView;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82B88]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = OBJC_IVAR____TtC8StocksUI11WelcomeView_footer;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E50]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = OBJC_IVAR____TtC8StocksUI11WelcomeView_titleGroup;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WelcomeView.TitleGroup()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v4 = OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet1;
  int v5 = (objc_class *)type metadata accessor for WelcomeView.BulletView();
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(v5), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v6 = OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet2;
  *(void *)&v0[v6] = objc_msgSend(objc_allocWithZone(v5), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v7 = OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3;
  *(void *)&v0[v7] = objc_msgSend(objc_allocWithZone(v5), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v8 = OBJC_IVAR____TtC8StocksUI11WelcomeView_continueButton;
  *(void *)&v0[v8] = objc_msgSend(self, sel_largeButton);
  uint64_t v9 = OBJC_IVAR____TtC8StocksUI11WelcomeView_activityIndicator;
  *(void *)&v0[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F823E8]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v10 = OBJC_IVAR____TtC8StocksUI11WelcomeView_privacyIcon;
  *(void *)&v0[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v11 = OBJC_IVAR____TtC8StocksUI11WelcomeView_privacyLink;
  type metadata accessor for TapDimmingTextView();
  *(void *)&v0[v11] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v12 = OBJC_IVAR____TtC8StocksUI11WelcomeView_onPrivacyTap;
  sub_20A67084C(0, (unint64_t *)&qword_26AC6AAE8, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F7E048]);
  *(void *)&v0[v12] = objc_msgSend(objc_allocWithZone(v13), sel_init);
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI11WelcomeView_errorView] = 0;

  sub_20A8CF520();
  __break(1u);
}

void sub_20A67084C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_20A670898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v73 = a1;
  sub_20A671C5C(0, (unint64_t *)&unk_26AC67700, MEMORY[0x263F7A5D0]);
  MEMORY[0x270FA5388](v3 - 8);
  id v71 = (char *)&v61 - v4;
  uint64_t v5 = sub_20A8C7650();
  uint64_t v69 = *(void *)(v5 - 8);
  uint64_t v70 = v5;
  MEMORY[0x270FA5388](v5);
  id v72 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_20A8C2530();
  uint64_t v7 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  unint64_t v62 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A671C5C(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v61 - v10;
  uint64_t v64 = sub_20A8C6870();
  uint64_t v12 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v74 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A671C5C(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v14 - 8);
  id v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v61 - v18;
  uint64_t v20 = sub_20A8C6ED0();
  uint64_t v21 = *(void *)(v20 - 8);
  double v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v25 = objc_msgSend(v2, sel_articleID, v22);
  uint64_t v26 = sub_20A8CE280();
  uint64_t v67 = v27;
  uint64_t v68 = v26;

  id v28 = objc_msgSend(v2, sel_sourceName);
  if (v28)
  {
    Class v29 = v28;
    uint64_t v30 = sub_20A8CE280();
    unint64_t v65 = v31;
    uint64_t v66 = v30;
  }
  else
  {
    unint64_t v65 = 0xE000000000000000;
    uint64_t v66 = 0;
  }
  unsigned int v32 = objc_msgSend(v2, sel_isPaid);
  uint64_t v33 = (unsigned int *)MEMORY[0x263F79F48];
  if (!v32) {
    uint64_t v33 = (unsigned int *)MEMORY[0x263F79F40];
  }
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v24, *v33, v20);
  id v34 = objc_msgSend(v2, sel_publishDate);
  if (v34)
  {
    uint64_t v35 = v34;
    sub_20A8C27B0();

    uint64_t v36 = sub_20A8C2800();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v16, 0, 1, v36);
  }
  else
  {
    uint64_t v36 = sub_20A8C2800();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v16, 1, 1, v36);
  }
  sub_20A67199C((uint64_t)v16, (uint64_t)v19, &qword_26AC68CC0, MEMORY[0x263F07490]);
  sub_20A8C2800();
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v19, 1, v36) != 1)
  {
    sub_20A8C2790();
    double v40 = v39;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v19, v36);
    double v42 = v40 * 1000.0;
    id v38 = v74;
    if ((~*(void *)&v42 & 0x7FF0000000000000) != 0)
    {
      if (v42 <= -9.22337204e18)
      {
        __break(1u);
      }
      else if (v42 < 9.22337204e18)
      {
        goto LABEL_14;
      }
      __break(1u);
    }
    __break(1u);
    return result;
  }
  sub_20A671940((uint64_t)v19, &qword_26AC68CC0, MEMORY[0x263F07490]);
  id v38 = v74;
LABEL_14:
  objc_msgSend(v2, sel_publisherArticleVersion);
  unsigned int v43 = objc_msgSend(v2, sel_isPressRelease);
  double v44 = (unsigned int *)MEMORY[0x263F79A90];
  if (!v43) {
    double v44 = (unsigned int *)MEMORY[0x263F79A88];
  }
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v38, *v44, v64);
  id v45 = objc_msgSend(v2, sel_videoURL);
  if (v45)
  {
    double v46 = v45;
    uint64_t v47 = v62;
    sub_20A8C24E0();

    unint64_t v48 = v47;
    uint64_t v49 = v63;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v48, v63);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v49);
    (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v49);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v11, 1, 1, v63);
  }
  sub_20A671940((uint64_t)v11, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
  unsigned __int8 v50 = objc_msgSend(v2, sel_respondsToSelector_, sel_role);
  id v51 = v72;
  if (v50)
  {
    id v52 = objc_msgSend(v2, sel_role);
    double v53 = (unsigned int *)MEMORY[0x263F7A5C0];
    double v54 = (unsigned int *)MEMORY[0x263F7A5B8];
    if (v52 != (id)3) {
      double v54 = (unsigned int *)MEMORY[0x263F7A5C8];
    }
    if (v52 != (id)1) {
      double v53 = v54;
    }
    uint64_t v55 = v69;
    uint64_t v56 = v70;
    unint64_t v57 = v71;
    (*(void (**)(char *, void, uint64_t))(v69 + 104))(v71, *v53, v70);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v57, 0, 1, v56);
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v51, v57, v56);
  }
  else
  {
    uint64_t v58 = v69;
    uint64_t v59 = v70;
    uint64_t v60 = (uint64_t)v71;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56))(v71, 1, 1, v70);
    (*(void (**)(char *, void, uint64_t))(v58 + 104))(v51, *MEMORY[0x263F7A5C8], v59);
    sub_20A671940(v60, (unint64_t *)&unk_26AC67700, MEMORY[0x263F7A5D0]);
  }
  if (objc_msgSend(v2, sel_respondsToSelector_, sel_hasAudioTrack)) {
    objc_msgSend(v2, sel_hasAudioTrack);
  }
  return sub_20A8C6C90();
}

void sub_20A67115C(void *a1)
{
  uint64_t v2 = v1;
  sub_20A671C5C(0, (unint64_t *)&qword_26AC69B20, MEMORY[0x263F7A5B0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v19 - v5;
  uint64_t v7 = sub_20A8C7610();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(v2, sel_sourceChannel, v9);
  uint64_t v13 = v12;
  if (v12)
  {
    id v14 = objc_msgSend(v12, sel_identifier);
    swift_unknownObjectRelease();
    sub_20A8CE280();

    uint64_t v13 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
  }
  id v20 = objc_msgSend(a1, sel_purchaseLookUpEntryForTagID_, v13);

  if (v20)
  {
    sub_20A48CBF0();
    uint64_t v15 = v20;
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, *MEMORY[0x263F7A560], v7);
    uint64_t v16 = *MEMORY[0x263F7A5A0];
    uint64_t v17 = sub_20A8C7640();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v6, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v6, 0, 1, v17);
    sub_20A8C72E0();
  }
}

uint64_t sub_20A671414()
{
  uint64_t v1 = v0;
  sub_20A671C5C(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - v7;
  id v9 = objc_msgSend(v1, sel_sourceName, v6);
  if (v9)
  {
    uint64_t v10 = v9;
    sub_20A8CE280();
  }
  id v11 = objc_msgSend(v1, sel_contentURL);
  if (v11)
  {
    id v12 = v11;
    sub_20A8C24E0();

    uint64_t v13 = sub_20A8C2530();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 0, 1, v13);
  }
  else
  {
    uint64_t v13 = sub_20A8C2530();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
  }
  sub_20A67199C((uint64_t)v4, (uint64_t)v8, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
  sub_20A8C2530();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13) == 1)
  {
    sub_20A671940((uint64_t)v8, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
  }
  else
  {
    sub_20A8C24C0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v13);
  }
  return sub_20A8C7010();
}

uint64_t FCHeadlineProviding.referringArticleData2()()
{
  uint64_t v1 = v0;
  sub_20A671C5C(0, (unint64_t *)&unk_26AC67700, MEMORY[0x263F7A5D0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v15 - v3;
  uint64_t v5 = sub_20A8C7650();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(v1, sel_articleID, v7);
  sub_20A8CE280();

  objc_msgSend(v1, sel_publisherArticleVersion);
  if (objc_msgSend(v1, sel_respondsToSelector_, sel_role))
  {
    id v11 = objc_msgSend(v1, sel_role);
    id v12 = (unsigned int *)MEMORY[0x263F7A5C0];
    uint64_t v13 = (unsigned int *)MEMORY[0x263F7A5B8];
    if (v11 != (id)3) {
      uint64_t v13 = (unsigned int *)MEMORY[0x263F7A5C8];
    }
    if (v11 != (id)1) {
      id v12 = v13;
    }
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v4, *v12, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, *MEMORY[0x263F7A5C8], v5);
    sub_20A671940((uint64_t)v4, (unint64_t *)&unk_26AC67700, MEMORY[0x263F7A5D0]);
  }
  return sub_20A8C71A0();
}

uint64_t sub_20A671940(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A671C5C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A67199C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A671C5C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A671A08()
{
  uint64_t v1 = sub_20A8C7750();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  double v7 = (char *)&v19 - v6;
  uint64_t v8 = (void (*)(uint64_t))MEMORY[0x263F7A7B8];
  sub_20A671C5C(0, (unint64_t *)&qword_26AC69B80, MEMORY[0x263F7A7B8]);
  MEMORY[0x270FA5388](v9 - 8);
  id v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v19 - v13;
  sub_20A671CB0(v0, (uint64_t)&v19 - v13);
  uint64_t v15 = sub_20A8C7850();
  int v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15);
  uint64_t v17 = (unsigned int *)MEMORY[0x263F7A670];
  if (v16 != 1) {
    uint64_t v17 = (unsigned int *)MEMORY[0x263F7A678];
  }
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v7, *v17, v1);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
  sub_20A671E24((uint64_t)v14, (uint64_t)v11);
  sub_20A8C7730();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  return sub_20A671940((uint64_t)v14, (unint64_t *)&qword_26AC69B80, v8);
}

void sub_20A671C5C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A671CB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  switch((unint64_t)objc_msgSend(a1, sel_storyType))
  {
    case 2uLL:
      uint64_t v8 = (unsigned int *)MEMORY[0x263F7A7B0];
      goto LABEL_6;
    case 3uLL:
      uint64_t v8 = (unsigned int *)MEMORY[0x263F7A7A0];
      goto LABEL_6;
    case 4uLL:
      uint64_t v8 = (unsigned int *)MEMORY[0x263F7A7A8];
LABEL_6:
      uint64_t v9 = *v8;
      uint64_t v10 = sub_20A8C7850();
      uint64_t v12 = *(void *)(v10 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 104))(a2, v9, v10);
      unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
      uint64_t v6 = a2;
      uint64_t v7 = 0;
      uint64_t v5 = v10;
      break;
    default:
      uint64_t v3 = sub_20A8C7850();
      unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
      uint64_t v5 = v3;
      uint64_t v6 = a2;
      uint64_t v7 = 1;
      break;
  }

  return v4(v6, v7, 1, v5);
}

uint64_t sub_20A671E24(uint64_t a1, uint64_t a2)
{
  sub_20A671C5C(0, (unint64_t *)&qword_26AC69B80, MEMORY[0x263F7A7B8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A671EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v189 = a2;
  uint64_t v179 = sub_20A8C2830();
  uint64_t v178 = *(void *)(v179 - 8);
  MEMORY[0x270FA5388](v179);
  uint64_t v177 = (char *)&v160 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = type metadata accessor for PreBuyFlowRouteModel();
  MEMORY[0x270FA5388](v175);
  uint64_t v180 = (void **)((char *)&v160 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A6743B4(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v181 = (uint64_t)&v160 - v6;
  uint64_t v7 = type metadata accessor for WatchlistCreationRouteModel();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v176 = (uint64_t)&v160 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CampaignRouteModel();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v173 = (uint64_t)&v160 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8CA180();
  uint64_t v184 = *(void *)(v11 - 8);
  uint64_t v185 = v11;
  MEMORY[0x270FA5388](v11);
  double v183 = (char *)&v160 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x270FA5388](v169);
  uint64_t v170 = (uint64_t)&v160 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v174 = (uint64_t)&v160 - v15;
  sub_20A6743B4(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v161 = (uint64_t)&v160 - v17;
  sub_20A6743B4(0, &qword_26AC812F0, MEMORY[0x263F7DD08]);
  MEMORY[0x270FA5388](v18 - 8);
  v162 = (char *)&v160 - v19;
  uint64_t v172 = sub_20A8CD2C0();
  uint64_t v171 = *(void *)(v172 - 8);
  MEMORY[0x270FA5388](v172);
  uint64_t v166 = (char *)&v160 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A430224();
  MEMORY[0x270FA5388](v21 - 8);
  double v167 = (char *)&v160 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = sub_20A8C2530();
  uint64_t v182 = *(void *)(v186 - 8);
  MEMORY[0x270FA5388](v186);
  uint64_t v24 = (char *)&v160 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  v160 = (char *)&v160 - v26;
  MEMORY[0x270FA5388](v27);
  uint64_t v164 = (char *)&v160 - v28;
  MEMORY[0x270FA5388](v29);
  uint64_t v165 = (char *)&v160 - v30;
  uint64_t v31 = sub_20A8C4DA0();
  MEMORY[0x270FA5388](v31 - 8);
  uint64_t v168 = (uint64_t)&v160 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6743B4(0, &qword_26AC694D0, MEMORY[0x263F58D70]);
  MEMORY[0x270FA5388](v33 - 8);
  uint64_t v35 = (char *)&v160 - v34;
  uint64_t v36 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x270FA5388](v36);
  uint64_t v163 = (uint64_t)&v160 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  double v40 = (char *)&v160 - v39;
  MEMORY[0x270FA5388](v41);
  unsigned int v43 = (char *)&v160 - v42;
  MEMORY[0x270FA5388](v44);
  double v46 = (unint64_t *)((char *)&v160 - v45);
  uint64_t v47 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v47);
  uint64_t v49 = (unint64_t *)((char *)&v160 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A42F250();
  uint64_t v187 = a1;
  sub_20A8CB4B0();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A600FA0();
      uint64_t v66 = (uint64_t)v183;
      uint64_t v65 = v184;
      uint64_t v67 = v185;
      (*(void (**)(char *, char *, uint64_t))(v184 + 32))(v183, (char *)v49 + *(int *)(v64 + 48), v185);
      sub_20A5C7550(v66);
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v66, v67);
      uint64_t v68 = (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor;
      goto LABEL_74;
    case 2u:
      uint64_t v69 = v174;
      sub_20A67445C((uint64_t)v49, v174, type metadata accessor for StocksActivity.StockFeed);
      uint64_t v70 = v188;
      uint64_t v71 = sub_20A5C79EC(v69, v187);
      if (v71)
      {
        id v72 = (void *)v71;
        uint64_t v73 = v170;
        sub_20A674574(v69, v170, type metadata accessor for StocksActivity.StockFeed);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_20A5A89F0(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
          uint64_t v75 = *(void *)(v73 + *(int *)(v74 + 48));
          sub_20A6745DC(v73, type metadata accessor for StocksActivity.StockFeed.Series);
        }
        else
        {
          sub_20A5A89F0(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
          uint64_t v75 = *(void *)(v73 + *(int *)(v134 + 48));
          uint64_t v135 = sub_20A8C3F00();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v135 - 8) + 8))(v73, v135);
        }
        if (v75) {
          objc_msgSend(*(id *)(v70 + 56), sel_setPreferredDisplayMode_, 1);
        }
        objc_msgSend(*(id *)(v70 + 56), sel_showViewController_sender_, v72, 0);
      }
      char v92 = type metadata accessor for StocksActivity.StockFeed;
      uint64_t v93 = v69;
      goto LABEL_75;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v76 = *MEMORY[0x263F7DBB8];
      uint64_t v77 = sub_20A8CA260();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 104))(v189, v76, v77);
    case 4u:
      uint64_t v79 = (uint64_t)v49;
      uint64_t v49 = v46;
      sub_20A67445C(v79, (uint64_t)v46, type metadata accessor for StocksActivity.Article);
      sub_20A674574((uint64_t)v46, (uint64_t)v43, type metadata accessor for StocksActivity.Article);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_20A6745DC((uint64_t)v43, type metadata accessor for StocksActivity.Article);
        uint64_t v80 = sub_20A8C54E0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v35, 1, 1, v80);
      }
      else
      {
        sub_20A42FC8C();
        uint64_t v117 = (uint64_t)&v43[*(int *)(v116 + 64)];
        uint64_t v118 = v168;
        sub_20A67445C((uint64_t)v43, v168, MEMORY[0x263F58AA8]);
        sub_20A8C4D80();
        sub_20A6745DC(v118, MEMORY[0x263F58AA8]);
        sub_20A6745DC(v117, (uint64_t (*)(void))sub_20A481954);
      }
      uint64_t v119 = v188;
      uint64_t v120 = sub_20A8C54E0();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v120 - 8) + 48))(v35, 1, v120) != 1)
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v127 = v182;
        uint64_t v128 = *(void (**)(char *, char *, uint64_t))(v182 + 32);
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v129 = (uint64_t)v164;
          unint64_t v130 = v35;
          uint64_t v131 = v186;
          v128(v164, v130, v186);
          uint64_t v132 = sub_20A54A5B8(v129);
          if (v132)
          {
            v133 = (void *)v132;
            objc_msgSend(*(id *)(v119 + 56), sel_showViewController_sender_, v132, 0);
          }
          (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v129, v131);
LABEL_73:
          uint64_t v68 = type metadata accessor for StocksActivity.Article;
LABEL_74:
          char v92 = v68;
          uint64_t v93 = (uint64_t)v49;
LABEL_75:
          sub_20A6745DC(v93, v92);
          goto LABEL_76;
        }
        double v139 = v165;
        uint64_t v140 = v186;
        v128(v165, v35, v186);
        __swift_project_boxed_opaque_existential_1((void *)(v119 + 16), *(void *)(v119 + 40));
        sub_20A43F7E0(0, &qword_26AC69F80);
        sub_20A8C5BB0();
        if (v194)
        {
          sub_20A42BEBC(&v193, (uint64_t)&v190);
          __swift_project_boxed_opaque_existential_1(&v190, v191);
          sub_20A8C8B60();
          (*(void (**)(char *, uint64_t))(v127 + 8))(v139, v140);
          sub_20A6745DC((uint64_t)v49, type metadata accessor for StocksActivity.Article);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v190);
          goto LABEL_76;
        }
LABEL_84:
        __break(1u);
        JUMPOUT(0x20A6738F8);
      }
      v121 = v167;
      sub_20A8CD380();
      uint64_t v122 = v171;
      uint64_t v123 = v172;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v171 + 48))(v121, 1, v172) != 1)
      {
        double v137 = v166;
        (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v166, v121, v123);
        __swift_project_boxed_opaque_existential_1((void *)(v119 + 16), *(void *)(v119 + 40));
        sub_20A43F7E0(0, &qword_26AC6B310);
        sub_20A8C5BB0();
        if (v191)
        {
          sub_20A42BEBC(&v190, (uint64_t)&v193);
          __swift_project_boxed_opaque_existential_1(&v193, v194);
          *(void *)&long long v190 = sub_20A8CDA80();
          char v192 = 0;
          swift_retain();
          double v138 = (void *)sub_20A820008(v187, (uint64_t)&v190);
          sub_20A674408((uint64_t)&v190);
          if (v138)
          {
            objc_msgSend(*(id *)(v119 + 56), sel_showViewController_sender_, v138, 0);
            swift_release();
          }
          else
          {
            swift_release();
          }
          uint64_t v144 = v189;
          (*(void (**)(char *, uint64_t))(v171 + 8))(v137, v172);
          sub_20A6745DC((uint64_t)v49, type metadata accessor for StocksActivity.Article);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v193);
          goto LABEL_77;
        }
LABEL_83:
        __break(1u);
        goto LABEL_84;
      }
      uint64_t v124 = sub_20A42E22C(v187, (uint64_t)v46);
      if (v124)
      {
        double v125 = (void *)v124;
        sub_20A674574((uint64_t)v46, (uint64_t)v40, type metadata accessor for StocksActivity.Article);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          sub_20A42FC8C();
          uint64_t v146 = *(void *)&v40[*(int *)(v145 + 48)];
          sub_20A6745DC((uint64_t)&v40[*(int *)(v145 + 64)], (uint64_t (*)(void))sub_20A481954);
          sub_20A6745DC((uint64_t)v40, MEMORY[0x263F58AA8]);
          if (v146) {
            objc_msgSend(*(id *)(v119 + 56), sel_setPreferredDisplayMode_, 1);
          }
        }
        uint64_t v147 = v163;
        sub_20A674574((uint64_t)v46, v163, type metadata accessor for StocksActivity.Article);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_20A6745DC(v147, type metadata accessor for StocksActivity.Article);
          uint64_t v148 = sub_20A8CA750();
          uint64_t v149 = (uint64_t)v162;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v148 - 8) + 56))(v162, 1, 1, v148);
        }
        else
        {
          sub_20A42FC8C();
          uint64_t v151 = v147 + *(int *)(v150 + 64);
          uint64_t v152 = v147;
          uint64_t v153 = v168;
          sub_20A67445C(v152, v168, MEMORY[0x263F58AA8]);
          uint64_t v149 = (uint64_t)v162;
          sub_20A8C4D40();
          sub_20A6745DC(v153, MEMORY[0x263F58AA8]);
          sub_20A6745DC(v151, (uint64_t (*)(void))sub_20A481954);
        }
        sub_20A8C9D90();

        sub_20A674684(v149, &qword_26AC812F0, MEMORY[0x263F7DD08]);
        goto LABEL_73;
      }
      uint64_t v141 = v161;
      sub_20A42DAE0((uint64_t)v46, v161);
      uint64_t v142 = v182;
      uint64_t v143 = v186;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v182 + 48))(v141, 1, v186) != 1)
      {
        double v156 = v160;
        (*(void (**)(char *, uint64_t, uint64_t))(v142 + 32))(v160, v141, v143);
        id v157 = objc_msgSend(self, sel_sharedApplication);
        double v158 = (void *)sub_20A8C24D0();
        sub_20A4CFA44(MEMORY[0x263F8EE78]);
        type metadata accessor for OpenExternalURLOptionsKey(0);
        sub_20A67463C(&qword_26763B630, 255, type metadata accessor for OpenExternalURLOptionsKey);
        uint64_t v159 = (void *)sub_20A8CE170();
        swift_bridgeObjectRelease();
        objc_msgSend(v157, sel_openURL_options_completionHandler_, v158, v159, 0);

        (*(void (**)(char *, uint64_t))(v142 + 8))(v156, v143);
        goto LABEL_73;
      }
      sub_20A6745DC((uint64_t)v49, type metadata accessor for StocksActivity.Article);
      sub_20A674684(v141, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
LABEL_76:
      uint64_t v144 = v189;
LABEL_77:
      uint64_t v154 = *MEMORY[0x263F7DBA8];
      uint64_t v155 = sub_20A8CA260();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 104))(v144, v154, v155);
    case 5u:
      uint64_t v81 = v182;
      uint64_t v82 = v186;
      (*(void (**)(char *, unint64_t *, uint64_t))(v182 + 32))(v24, v49, v186);
      uint64_t v83 = v188;
      uint64_t v84 = sub_20A54A5B8((uint64_t)v24);
      if (v84)
      {
        uint64_t v85 = (void *)v84;
        objc_msgSend(*(id *)(v83 + 56), sel_showViewController_sender_, v84, 0);
      }
      (*(void (**)(char *, uint64_t))(v81 + 8))(v24, v82);
      goto LABEL_76;
    case 6u:
      sub_20A6744C4((uint64_t)v49, (uint64_t)&v190);
      uint64_t v86 = v188;
      uint64_t v87 = sub_20A820008(v187, (uint64_t)&v190);
      if (v87)
      {
        uint64_t v88 = (void *)v87;
        objc_msgSend(*(id *)(v86 + 56), sel_showViewController_sender_, v87, 0);
      }
      sub_20A674408((uint64_t)&v190);
      goto LABEL_76;
    case 7u:
      uint64_t v89 = v173;
      sub_20A67445C((uint64_t)v49, v173, (uint64_t (*)(void))type metadata accessor for CampaignRouteModel);
      uint64_t v90 = v188;
      uint64_t v91 = sub_20A6DB280(v187, v89);
      objc_msgSend(*(id *)(v90 + 56), sel_showViewController_sender_, v91, 0);

      char v92 = (uint64_t (*)(void))type metadata accessor for CampaignRouteModel;
      uint64_t v93 = v89;
      goto LABEL_75;
    case 8u:
      unint64_t v94 = *v49;
      *(void *)&long long v190 = *v49;
      uint64_t v95 = v188;
      uint64_t v96 = sub_20A8878EC(v187, (unint64_t *)&v190);
      if (v96)
      {
        uint64_t v97 = (void *)v96;
        objc_msgSend(*(id *)(v95 + 56), sel_showViewController_sender_, v96, 0);
        sub_20A485620(v94);
      }
      else
      {
        sub_20A485620(v94);
      }
      goto LABEL_76;
    case 9u:
      uint64_t v98 = (void (*)(void))*v49;
      uint64_t v99 = v188;
      __swift_project_boxed_opaque_existential_1((void *)(v188 + 16), *(void *)(v188 + 40));
      sub_20A43F7E0(0, &qword_26AC71AD8);
      sub_20A8C5BB0();
      if (v194)
      {
        sub_20A42BEBC(&v193, (uint64_t)&v190);
        __swift_project_boxed_opaque_existential_1(&v190, v191);
        uint64_t v100 = sub_20A53175C(v98);
        if (v100)
        {
          uint64_t v101 = (void *)v100;
          unint64_t v102 = (void (*)(void *))sub_20A8CB490();
          v102(v101);
          swift_release();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v190);
          sub_20A8CA020();
          if (sub_20A8CA010())
          {
            sub_20A459CA4((uint64_t)v98);
          }
          else
          {
            id v136 = v101;
            sub_20A8C9FD0();
            objc_msgSend(*(id *)(v99 + 56), sel_showViewController_sender_, v136, 0);
            sub_20A459CA4((uint64_t)v98);
          }
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v190);
          sub_20A459CA4((uint64_t)v98);
        }
        goto LABEL_76;
      }
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
      goto LABEL_83;
    case 0xAu:
      uint64_t v103 = v176;
      sub_20A67445C((uint64_t)v49, v176, (uint64_t (*)(void))type metadata accessor for WatchlistCreationRouteModel);
      uint64_t v104 = v188;
      __swift_project_boxed_opaque_existential_1((void *)(v188 + 16), *(void *)(v188 + 40));
      sub_20A43F7E0(0, &qword_26AC7C468);
      sub_20A8C5BB0();
      if (!v191) {
        goto LABEL_81;
      }
      sub_20A42BEBC(&v190, (uint64_t)&v193);
      __swift_project_boxed_opaque_existential_1(&v193, v194);
      *(void *)&long long v190 = sub_20A51C87C(v103);
      char v192 = 3;
      unsigned int v105 = (void *)sub_20A820008(v187, (uint64_t)&v190);
      sub_20A674408((uint64_t)&v190);
      if (v105)
      {
        objc_msgSend(*(id *)(v104 + 56), sel_showViewController_sender_, v105, 0);
      }
      sub_20A6745DC(v103, (uint64_t (*)(void))type metadata accessor for WatchlistCreationRouteModel);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v193);
      goto LABEL_76;
    case 0xBu:
      sub_20A4B2908();
      uint64_t v57 = *(unint64_t *)((char *)v49 + *(int *)(v56 + 48));
      uint64_t v58 = (uint64_t)v49;
      uint64_t v59 = v181;
      sub_20A453688(v58, v181);
      uint64_t v60 = *(void **)(v188 + 56);
      id v61 = objc_msgSend(v60, sel_presentedViewController);
      if (!v61) {
        goto LABEL_61;
      }
      unint64_t v62 = v61;
      id v63 = objc_msgSend(v61, sel_popoverPresentationController);

      if (v63)
      {
        objc_msgSend(v62, sel_dismissViewControllerAnimated_completion_, 1, 0);
      }
      else
      {

LABEL_61:
        unint64_t v62 = (void *)sub_20A72F128(v187, v59, v57);
        objc_msgSend(v60, sel_showViewController_sender_, v62, 0);
      }

      swift_release();
      sub_20A674684(v59, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
      goto LABEL_76;
    case 0xCu:
      uint64_t v106 = v180;
      sub_20A67445C((uint64_t)v49, (uint64_t)v180, (uint64_t (*)(void))type metadata accessor for PreBuyFlowRouteModel);
      uint64_t v107 = *v106;
      uint64_t v108 = v188;
      uint64_t v109 = *(void *)(v188 + 152);
      uint64_t v187 = *(void *)(v188 + 160);
      __swift_project_boxed_opaque_existential_1((void *)(v188 + 128), v109);
      id v110 = v107;
      double v111 = v177;
      sub_20A8C2820();
      sub_20A8C2810();
      (*(void (**)(char *, uint64_t))(v178 + 8))(v111, v179);
      double v112 = (void *)sub_20A8C7C80();

      swift_bridgeObjectRelease();
      objc_msgSend(*(id *)(v108 + 56), sel_showViewController_sender_, v112, 0);

      char v92 = (uint64_t (*)(void))type metadata accessor for PreBuyFlowRouteModel;
      uint64_t v93 = (uint64_t)v106;
      goto LABEL_75;
    case 0xDu:
      if (qword_267639C08 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v186, (uint64_t)qword_267652FA8);
      id v113 = objc_allocWithZone(MEMORY[0x263F16980]);
      unint64_t v114 = (void *)sub_20A8C24D0();
      id v115 = objc_msgSend(v113, sel_initWithURL_, v114);

      objc_msgSend(v115, sel_setModalPresentationStyle_, 1);
      objc_msgSend(*(id *)(v188 + 56), sel_presentViewController_animated_completion_, v115, 1, 0);

      goto LABEL_76;
    default:
      unint64_t v50 = v49[5];
      swift_bridgeObjectRelease();
      if (!v50) {
        goto LABEL_5;
      }
      __swift_project_boxed_opaque_existential_1((void *)(v188 + 16), *(void *)(v188 + 40));
      sub_20A43F7E0(0, (unint64_t *)&unk_26AC68E50);
      sub_20A8C5BB0();
      if (!v194) {
        goto LABEL_82;
      }
      sub_20A42BEBC(&v193, (uint64_t)&v190);
      __swift_project_boxed_opaque_existential_1(&v190, v191);
      sub_20A8C35E0();
      swift_bridgeObjectRelease();
      sub_20A4342F4((uint64_t)&v190, (uint64_t)&v193);
      uint64_t v51 = swift_allocObject();
      sub_20A42BEBC(&v193, v51 + 16);
      id v52 = (void *)sub_20A8C6450();
      sub_20A8C6500();
      swift_release();
      swift_release();
      swift_release();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v190);
LABEL_5:
      uint64_t v54 = (uint64_t)v183;
      uint64_t v53 = v184;
      uint64_t v55 = v185;
      (*(void (**)(char *, void, uint64_t))(v184 + 104))(v183, *MEMORY[0x263F7DB48], v185);
      sub_20A5C7550(v54);
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v54, v55);
      goto LABEL_76;
  }
}

uint64_t sub_20A673930(uint64_t a1, void *a2)
{
  sub_20A6743B4(0, &qword_26AC69040, MEMORY[0x263F7AFD8]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v12 - v5;
  uint64_t v7 = sub_20A8C40E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4AF8DC(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_20A674684((uint64_t)v6, &qword_26AC69040, MEMORY[0x263F7AFD8]);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A8C3610();
  sub_20A8CBE60();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_20A673B14@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v3 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C2530();
  uint64_t v46 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C4DA0();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6743B4(0, &qword_26AC694D0, MEMORY[0x263F58D70]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v45 = (char *)&v44 - v13;
  uint64_t v14 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v44 - v18;
  uint64_t v20 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (unint64_t *)((char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A42F250();
  uint64_t v47 = a1;
  sub_20A8CB4B0();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A600FA0();
      uint64_t v25 = (char *)v22 + *(int *)(v24 + 48);
      uint64_t v26 = sub_20A8CA180();
      (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
      uint64_t v23 = (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor;
      goto LABEL_5;
    case 2u:
      sub_20A67445C((uint64_t)v22, (uint64_t)v5, type metadata accessor for StocksActivity.StockFeed);
      uint64_t v31 = sub_20A5C79EC((uint64_t)v5, v47);
      sub_20A6745DC((uint64_t)v5, type metadata accessor for StocksActivity.StockFeed);
      goto LABEL_16;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v27 = (unsigned int *)MEMORY[0x263F7D8E8];
      goto LABEL_7;
    case 4u:
      sub_20A67445C((uint64_t)v22, (uint64_t)v19, type metadata accessor for StocksActivity.Article);
      sub_20A674574((uint64_t)v19, (uint64_t)v16, type metadata accessor for StocksActivity.Article);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_20A6745DC((uint64_t)v16, type metadata accessor for StocksActivity.Article);
        uint64_t v32 = sub_20A8C54E0();
        uint64_t v33 = (uint64_t)v45;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v45, 1, 1, v32);
      }
      else
      {
        sub_20A42FC8C();
        uint64_t v38 = (uint64_t)&v16[*(int *)(v37 + 64)];
        sub_20A67445C((uint64_t)v16, (uint64_t)v11, MEMORY[0x263F58AA8]);
        uint64_t v33 = (uint64_t)v45;
        sub_20A8C4D80();
        sub_20A6745DC((uint64_t)v11, MEMORY[0x263F58AA8]);
        sub_20A6745DC(v38, (uint64_t (*)(void))sub_20A481954);
      }
      uint64_t v35 = v48;
      uint64_t v39 = sub_20A8C54E0();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v33, 1, v39) == 1)
      {
        uint64_t v31 = sub_20A42E22C(v47, (uint64_t)v19);
        sub_20A6745DC((uint64_t)v19, type metadata accessor for StocksActivity.Article);
        if (v31)
        {
LABEL_17:
          *uint64_t v35 = v31;
          uint64_t v36 = (unsigned int *)MEMORY[0x263F7D8F0];
        }
        else
        {
LABEL_22:
          uint64_t v36 = (unsigned int *)MEMORY[0x263F7D8E8];
        }
        uint64_t v40 = *v36;
        uint64_t v41 = sub_20A8C9AB0();
        uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 104))(v35, v40, v41);
      }
      else
      {
        sub_20A6745DC((uint64_t)v19, type metadata accessor for StocksActivity.Article);
        uint64_t v42 = *MEMORY[0x263F7D8E0];
        uint64_t v43 = sub_20A8C9AB0();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 104))(v35, v42, v43);
        uint64_t result = sub_20A6745DC(v33, MEMORY[0x263F58D70]);
      }
      break;
    case 5u:
      uint64_t v34 = v46;
      (*(void (**)(char *, unint64_t *, uint64_t))(v46 + 32))(v8, v22, v6);
      uint64_t v31 = sub_20A54A5B8((uint64_t)v8);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v6);
LABEL_16:
      uint64_t v35 = v48;
      if (v31) {
        goto LABEL_17;
      }
      goto LABEL_22;
    case 6u:
    case 7u:
    case 0xAu:
    case 0xCu:
      uint64_t v23 = type metadata accessor for StocksActivity;
LABEL_5:
      sub_20A6745DC((uint64_t)v22, v23);
      goto LABEL_6;
    case 8u:
      sub_20A485620(*v22);
      goto LABEL_6;
    case 9u:
      sub_20A459CA4(*v22);
      goto LABEL_6;
    case 0xBu:
      sub_20A4B2908();
      swift_release();
      sub_20A674684((uint64_t)v22, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
      goto LABEL_6;
    case 0xDu:
      goto LABEL_6;
    default:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      uint64_t v27 = (unsigned int *)MEMORY[0x263F7D8E0];
LABEL_7:
      uint64_t v28 = *v27;
      uint64_t v29 = sub_20A8C9AB0();
      uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v48, v28, v29);
      break;
  }
  return result;
}

id *sub_20A674250()
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 10));
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 21));
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_20A6742B0()
{
  sub_20A674250();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Router()
{
  return self;
}

uint64_t sub_20A674308(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_20A67463C(&qword_26AC7F250, a2, (void (*)(uint64_t))type metadata accessor for Router);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_20A674360()
{
  return sub_20A67463C((unint64_t *)&unk_26AC6C730, 255, (void (*)(uint64_t))type metadata accessor for StocksActivity);
}

void sub_20A6743B4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A674408(uint64_t a1)
{
  return a1;
}

uint64_t sub_20A67445C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A6744C4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_20A674520()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_20A674558(uint64_t a1)
{
  return sub_20A673930(a1, (void *)(v1 + 16));
}

uint64_t sub_20A674574(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A6745DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A67463C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A674684(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A6743B4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void destroy for MastheadViewLayoutAttributes(uint64_t a1)
{
}

uint64_t initializeWithCopy for MastheadViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v5 = *(void **)(a2 + 80);
  *(void *)(a1 + 80) = v5;
  id v6 = v5;
  return a1;
}

void *assignWithCopy for MastheadViewLayoutAttributes(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  long long v3 = (void *)a2[10];
  long long v4 = (void *)a1[10];
  a1[10] = v3;
  id v5 = v3;

  return a1;
}

uint64_t assignWithTake for MastheadViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  id v5 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);

  return a1;
}

uint64_t getEnumTagSinglePayload for MastheadViewLayoutAttributes(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 80);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MastheadViewLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 80) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MastheadViewLayoutAttributes()
{
  return &type metadata for MastheadViewLayoutAttributes;
}

uint64_t OfflineAlertable.acceptButton.getter()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t OfflineAlertable.neutralButton.getter()
{
  uint64_t v0 = sub_20A8CD2A0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  long long v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  id v6 = (char *)&v19 - v5;
  uint64_t v7 = sub_20A8CD2B0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v6, *MEMORY[0x263F59BA8], v0);
  uint64_t v24 = *(void *)(v7 + 16);
  if (!v24)
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  unint64_t v8 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v20 = v7;
  uint64_t v23 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
  v23(v3, v7 + v8, v0);
  unint64_t v22 = sub_20A674CA4();
  char v9 = sub_20A8CE210();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  if (v9)
  {
LABEL_3:
    v10(v6, v0);
    swift_bridgeObjectRelease();
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v12 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v13 = sub_20A8C2370();

    return v13;
  }
  if (v24 == 1)
  {
LABEL_10:
    v10(v6, v0);
    goto LABEL_11;
  }
  uint64_t v19 = (v1 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v21 = *(void *)(v1 + 72);
  unint64_t v14 = v20 + v21 + v8;
  uint64_t v15 = 1;
  while (1)
  {
    uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v23)(v3, v14, v0);
    uint64_t v17 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    char v18 = sub_20A8CE210();
    v10(v3, v0);
    if (v18) {
      goto LABEL_3;
    }
    ++v15;
    v14 += v21;
    if (v17 == v24) {
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_20A674CA4()
{
  unint64_t result = qword_26763B910;
  if (!qword_26763B910)
  {
    sub_20A8CD2A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B910);
  }
  return result;
}

uint64_t sub_20A674D08()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t sub_20A674DC4()
{
  return OfflineAlertable.neutralButton.getter();
}

uint64_t initializeBufferWithCopyOfBuffer for OfflineAlertable(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8CD2C0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for OfflineAlertable(uint64_t a1)
{
  uint64_t v2 = sub_20A8CD2C0();
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for OfflineAlertable(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8CD2C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for OfflineAlertable(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8CD2C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for OfflineAlertable(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8CD2C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for OfflineAlertable(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8CD2C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for OfflineAlertable(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A675054);
}

uint64_t sub_20A675054(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8CD2C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for OfflineAlertable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A6750D4);
}

uint64_t sub_20A6750D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8CD2C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for OfflineAlertable()
{
  uint64_t result = qword_26763CF20;
  if (!qword_26763CF20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A675190()
{
  uint64_t result = sub_20A8CD2C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

Swift::Void __swiftcall IdentificationResetManager.resetIdentifierIfNeeded()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8C7DF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A8C4100();
  sub_20A675748(&qword_26AC76BC0, v6, (void (*)(uint64_t))type metadata accessor for IdentificationResetManager);
  sub_20A8C41C0();
  swift_release();
  if (v11[15] == 1)
  {
    sub_20A8C7DC0();
    uint64_t v7 = sub_20A8C7DD0();
    os_log_type_t v8 = sub_20A8CEA00();
    if (os_log_type_enabled(v7, v8))
    {
      char v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v9 = 0;
      _os_log_impl(&dword_20A414000, v7, v8, "Resetting user id & ads id", v9, 2u);
      MEMORY[0x210528850](v9, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
    __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
    sub_20A8C3980();
    __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
    sub_20A8C3970();
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_20A8C4460();
    swift_release_n();
    sub_20A8C48F0();
    sub_20A8C4100();
    v11[14] = 0;
    sub_20A675748(&qword_26763CF30, v10, (void (*)(uint64_t))type metadata accessor for IdentificationResetManager);
    sub_20A8C42F0();
    swift_release();
  }
}

uint64_t type metadata accessor for IdentificationResetManager()
{
  return self;
}

uint64_t sub_20A675530()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A675568()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_20A8C4470();
    return swift_release();
  }
  return result;
}

uint64_t sub_20A6755D4()
{
  sub_20A8C6E00();
  sub_20A675748(&qword_26763CF38, 255, MEMORY[0x263F79E98]);
  memset(v1, 0, sizeof(v1));
  sub_20A8C45D0();
  return sub_20A44349C((uint64_t)v1);
}

uint64_t IdentificationResetManager.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  return v0;
}

uint64_t IdentificationResetManager.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_20A6756E8(uint64_t a1, uint64_t a2)
{
  return sub_20A675748(&qword_26AC76BC0, a2, (void (*)(uint64_t))type metadata accessor for IdentificationResetManager);
}

uint64_t method lookup function for IdentificationResetManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for IdentificationResetManager);
}

uint64_t sub_20A675748(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistSwitcherModel()
{
  return &type metadata for WatchlistSwitcherModel;
}

uint64_t type metadata accessor for LaunchPresentationConfigurationProvider()
{
  return self;
}

uint64_t sub_20A6757C8()
{
  uint64_t v0 = sub_20A8CAA30();
  uint64_t v25 = *(void *)(v0 - 8);
  uint64_t v26 = v0;
  MEMORY[0x270FA5388](v0);
  uint64_t v24 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v23 - v3;
  uint64_t v5 = sub_20A8C95A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  id v12 = (char *)&v23 - v11;
  sub_20A8C9590();
  sub_20A8C9590();
  sub_20A675B94(0, &qword_26AC7FF98, MEMORY[0x263F7D7F0], MEMORY[0x263F8E0F8]);
  uint64_t v13 = *(void *)(v6 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_20A8D4540;
  unint64_t v16 = v15 + v14;
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v6 + 16);
  v17(v15 + v14, v12, v5);
  v17(v16 + v13, v9, v5);
  sub_20A8CAA20();
  uint64_t v18 = v25;
  uint64_t v19 = v26;
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v24, v4, v26);
  sub_20A675B94(0, &qword_26AC69830, MEMORY[0x263F7DD88], MEMORY[0x263F7D028]);
  swift_allocObject();
  uint64_t v20 = sub_20A8C6580();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v19);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v7 + 8);
  v21(v9, v5);
  v21(v12, v5);
  return v20;
}

void sub_20A675B94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

ValueMetadata *type metadata accessor for SectionHeaderViewModel()
{
  return &type metadata for SectionHeaderViewModel;
}

void sub_20A675C08()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();
  uint64_t v4 = v3;

  qword_26AC9EBE0 = v2;
  *(void *)algn_26AC9EBE8 = v4;
}

uint64_t sub_20A675CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  sub_20A6242A0((uint64_t)sub_20A441D78, v4);

  return swift_release();
}

uint64_t type metadata accessor for TickerTestSuite()
{
  return self;
}

uint64_t sub_20A675E58()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_20A675E90(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = sub_20A8CC280();
  uint64_t v4 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8CA180();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)sub_20A8CE240();
  id v12 = objc_msgSend(a1, sel_objectForKey_, v11);

  if (v12)
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
    sub_20A441D28(v23, v24);
    sub_20A8C9D60();
    swift_dynamicCast();
    uint64_t v13 = v22;
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7DB50], v7);
    sub_20A8C9CB0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    unint64_t v14 = (void *)sub_20A8CE240();
    id v15 = objc_msgSend(a1, sel_objectForKey_, v14);

    if (v15)
    {
      sub_20A8CF270();
      swift_unknownObjectRelease();
      sub_20A441D28(v23, v24);
      type metadata accessor for TickerViewController();
      swift_dynamicCast();
      unint64_t v16 = v22;
      sub_20A8C9BF0();
      uint64_t v17 = (void *)sub_20A8C94C0();
      swift_release();
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v19;
      *(void *)(v18 + 24) = v20;
      swift_retain();
      sub_20A8CC260();
      sub_20A623AD4(0x3FF0000000000000, 1, v17, (uint64_t)v6, (uint64_t)sub_20A676240, v18, 1.0);

      swift_release();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v21);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_20A676208()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A676240()
{
  return sub_20A675CD4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t BilingualFeedAlert.title.getter()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v2 = sub_20A8CE2B0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t BilingualFeedAlert.message.getter()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v2 = sub_20A8CE2B0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t BilingualFeedAlert.preferredActionButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F7D7E8];
  uint64_t v3 = sub_20A8C9580();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t BilingualFeedAlert.rejectButton.getter()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t BilingualFeedAlert.acceptButton.getter()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t sub_20A676614()
{
  return BilingualFeedAlert.title.getter();
}

uint64_t sub_20A67662C()
{
  return BilingualFeedAlert.message.getter();
}

uint64_t sub_20A676644()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t sub_20A6766FC()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

ValueMetadata *type metadata accessor for BilingualFeedAlert()
{
  return &type metadata for BilingualFeedAlert;
}

uint64_t sub_20A6767D0(uint64_t a1, uint64_t a2)
{
  return sub_20A676800(a1, a2, MEMORY[0x263F59D00]);
}

uint64_t sub_20A6767E8(uint64_t a1, uint64_t a2)
{
  return sub_20A676800(a1, a2, MEMORY[0x263F59CF8]);
}

uint64_t sub_20A676800(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = v3[3];
  uint64_t v6 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v5);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 72))(v13, v5, v6);
  sub_20A43F7E0(0, &qword_26AC7F338);
  sub_20A43F7E0(0, &qword_26AC6B280);
  swift_dynamicCast();
  uint64_t v7 = v11;
  uint64_t v8 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  a3(v7, v8);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_20A676908()
{
  id v1 = v0;
  uint64_t v2 = (void *)v0[5];
  if (v2 && (id v3 = objc_msgSend(v2, sel_horizontalSizeClass), (unint64_t)v3 >= 2))
  {
    if (v3 != (id)2)
    {
      uint64_t result = sub_20A8CF520();
      __break(1u);
      return result;
    }
    sub_20A53D49C();
    sub_20A8CEEE0();
  }
  else
  {
    id v4 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
  }
  uint64_t v5 = (void *)v0[8];
  id v6 = objc_allocWithZone(MEMORY[0x263F825C8]);
  v5;
  objc_msgSend(v6, sel_initWithRed_green_blue_alpha_, 0.431372549, 0.431372549, 0.431372549, 1.0);
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v7, v8);
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
  uint64_t v11 = (void *)v1[10];
  uint64_t v13 = v1[3];
  uint64_t v12 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v13);
  unint64_t v14 = *(void (**)(uint64_t, uint64_t))(v12 + 24);
  id v15 = v11;
  v14(v13, v12);
  unint64_t v16 = self;
  id v17 = objc_msgSend(v16, sel_systemRedColor);
  objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.882352941, 0.647058824, 0.0, 1.0);
  objc_msgSend(v16, sel_systemBlueColor);
  objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.960784314, 0.62745098, 0.0901960784, 1.0);
  return sub_20A8CD690();
}

uint64_t sub_20A676BB0()
{
  id v1 = *(void **)(v0 + 88);
  id v2 = *(id *)(v0 + 64);
  id v3 = v1;

  return MEMORY[0x270F4FBC8](v2, v3);
}

ValueMetadata *type metadata accessor for FeedColorPalette()
{
  return &type metadata for FeedColorPalette;
}

uint64_t type metadata accessor for StubForYouFeedGroupEmitterFactory()
{
  return self;
}

uint64_t sub_20A676C40(uint64_t a1)
{
  sub_20A460F28();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v17 - v8;
  uint64_t v10 = type metadata accessor for ForYouFeedGroupConfig();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A676EC4(a1, (uint64_t)v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t result = sub_20A8CF520();
    __break(1u);
  }
  else
  {
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v13(v9, v12, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
    type metadata accessor for StubStockForYouFeedGroupEmitter();
    uint64_t v14 = swift_allocObject();
    v13((char *)(v14 + OBJC_IVAR____TtC8StocksUI31StubStockForYouFeedGroupEmitter_config), v6, v3);
    v17[1] = v14;
    sub_20A676F28();
    swift_allocObject();
    sub_20A676FBC(&qword_26763CF40, (void (*)(uint64_t))type metadata accessor for StubStockForYouFeedGroupEmitter);
    uint64_t v15 = sub_20A8CC5F0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    return v15;
  }
  return result;
}

uint64_t sub_20A676EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ForYouFeedGroupConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_20A676F28()
{
  if (!qword_26AC6AFA8)
  {
    type metadata accessor for ForYouFeedServiceConfig();
    sub_20A676FBC(&qword_26AC74890, (void (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig);
    unint64_t v0 = sub_20A8CC600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6AFA8);
    }
  }
}

uint64_t sub_20A676FBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A677004()
{
  uint64_t result = sub_20A677024();
  qword_26AC9EC98 = result;
  return result;
}

uint64_t sub_20A677024()
{
  uint64_t v0 = sub_20A8C2990();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v44[-2] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C2940();
  uint64_t v4 = sub_20A8C28E0();
  uint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (!v6) {
    return 0;
  }
  id v7 = objc_msgSend(self, sel_preferredFontDescriptorWithTextStyle_, *MEMORY[0x263F83570]);
  sub_20A677608(0, &qword_26AC80110, (unint64_t *)&unk_26AC7FB08, type metadata accessor for AttributeName);
  uint64_t inited = swift_initStackObject();
  long long v43 = xmmword_20A8D3DC0;
  *(_OWORD *)(inited + 16) = xmmword_20A8D3DC0;
  uint64_t v9 = (void *)*MEMORY[0x263F817A0];
  *(void *)(inited + 32) = *MEMORY[0x263F817A0];
  sub_20A677608(0, qword_26AC82750, &qword_26AC82720, type metadata accessor for TraitKey);
  uint64_t v10 = swift_initStackObject();
  *(_OWORD *)(v10 + 16) = v43;
  uint64_t v11 = (void *)*MEMORY[0x263F81850];
  *(void *)(v10 + 32) = *MEMORY[0x263F81850];
  *(void *)(v10 + 40) = *MEMORY[0x263F81840];
  id v12 = v9;
  id v13 = v11;
  unint64_t v14 = sub_20A4D00D0(v10);
  sub_20A677664();
  *(void *)(inited + 64) = v15;
  *(void *)(inited + 40) = v14;
  sub_20A4D01D8(inited);
  type metadata accessor for AttributeName(0);
  sub_20A67776C((unint64_t *)&unk_26AC7FAE0, type metadata accessor for AttributeName);
  unint64_t v16 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v7, sel_fontDescriptorByAddingAttributes_, v16);

  id v18 = objc_msgSend(self, sel_fontWithDescriptor_size_, v17, 0.0);
  sub_20A677608(0, (unint64_t *)&qword_26AC80108, (unint64_t *)&qword_26AC7FA10, type metadata accessor for Key);
  uint64_t v19 = swift_initStackObject();
  uint64_t v20 = (void **)MEMORY[0x263F81500];
  *(_OWORD *)(v19 + 16) = xmmword_20A8D4540;
  uint64_t v21 = *v20;
  *(void *)(v19 + 32) = *v20;
  unint64_t v22 = self;
  id v23 = v21;
  id v24 = objc_msgSend(v22, sel_blackColor);
  uint64_t v25 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(v19 + 40) = v24;
  uint64_t v26 = (void *)*MEMORY[0x263F814F0];
  *(void *)(v19 + 64) = v25;
  *(void *)(v19 + 72) = v26;
  *(void *)(v19 + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(v19 + 80) = v18;
  id v27 = v26;
  id v28 = v18;
  unint64_t v29 = sub_20A4CF8B0(v19);
  uint64_t v30 = (void *)sub_20A8CE240();
  type metadata accessor for Key(0);
  sub_20A67776C((unint64_t *)&qword_26AC7F9F8, type metadata accessor for Key);
  uint64_t v31 = (void *)sub_20A8CE170();
  objc_msgSend(v30, sel_sizeWithAttributes_, v31);
  double v33 = v32;
  double v35 = v34;

  id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827A0]), sel_initWithSize_, v33, v35);
  uint64_t v37 = (double *)swift_allocObject();
  v37[2] = v33;
  v37[3] = v35;
  *((void *)v37 + 4) = v4;
  *((void *)v37 + 5) = v6;
  *((void *)v37 + 6) = v29;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = sub_20A677948;
  *(void *)(v38 + 24) = v37;
  v44[4] = sub_20A677968;
  v44[5] = v38;
  v44[0] = MEMORY[0x263EF8330];
  v44[1] = 1107296256;
  v44[2] = sub_20A658C48;
  v44[3] = &block_descriptor_28;
  uint64_t v39 = _Block_copy(v44);
  swift_retain();
  swift_release();
  id v40 = objc_msgSend(v36, sel_imageWithActions_, v39);
  _Block_release(v39);
  LOBYTE(v39) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v39 & 1) == 0)
  {
    id v42 = objc_msgSend(v40, sel_imageWithRenderingMode_, 2);
    swift_release();

    return (uint64_t)v42;
  }
  __break(1u);
  return result;
}

void sub_20A677608(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_20A677700(255, a3, a4);
    unint64_t v5 = sub_20A8CF730();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_20A677664()
{
  if (!qword_26AC82700)
  {
    type metadata accessor for TraitKey(255);
    sub_20A67776C((unint64_t *)&unk_26AC7FA78, type metadata accessor for TraitKey);
    unint64_t v0 = sub_20A8CE1A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC82700);
    }
  }
}

void sub_20A677700(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_20A67776C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A6777B4(void *a1, double a2, double a3)
{
  uint64_t v6 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  CGContextSetShouldAntialias(v6, 1);

  id v7 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  CGContextSetAllowsAntialiasing(v7, 1);

  uint64_t v8 = (void *)sub_20A8CE240();
  type metadata accessor for Key(0);
  sub_20A67776C((unint64_t *)&qword_26AC7F9F8, type metadata accessor for Key);
  id v9 = (id)sub_20A8CE170();
  objc_msgSend(v8, sel_drawAtPoint_withAttributes_, v9, (a2 - a2) * 0.5, (a3 - a3) * 0.5);
}

uint64_t sub_20A677908()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_20A677948(void *a1)
{
  sub_20A6777B4(a1, *(double *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_20A677958()
{
  return swift_deallocObject();
}

uint64_t sub_20A677968(uint64_t a1)
{
  return sub_20A658C10(a1, *(uint64_t (**)(void))(v1 + 16));
}

void destroy for ForYouFeedFailedBlueprintModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = *(void **)(a1 + 40);
}

void *initializeWithCopy for ForYouFeedFailedBlueprintModifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v6 = v5;
  return a1;
}

void *assignWithCopy for ForYouFeedFailedBlueprintModifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[5];
  uint64_t v5 = (void *)a1[5];
  a1[5] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for ForYouFeedFailedBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  uint64_t v5 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for ForYouFeedFailedBlueprintModifier()
{
  return &type metadata for ForYouFeedFailedBlueprintModifier;
}

uint64_t sub_20A677B2C(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v80 = a3;
  uint64_t v81 = a2;
  uint64_t v5 = sub_20A8C8B80();
  uint64_t v69 = *(void *)(v5 - 8);
  uint64_t v70 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v68 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A678874(0, &qword_26AC6A430, MEMORY[0x263F7D950]);
  uint64_t v79 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v60 - v9);
  sub_20A4F0338();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v66 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x270FA5388](v67);
  uint64_t v65 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x270FA5388](v76);
  id v72 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_20A8CD2C0();
  uint64_t v77 = *(void *)(v15 - 8);
  uint64_t v78 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v75 = (uint64_t)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A678874(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v18 = v17;
  uint64_t v74 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v73 = (char *)&v60 - v19;
  sub_20A652530();
  MEMORY[0x270FA5388](v20 - 8);
  unint64_t v22 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A678874(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  id v24 = v23;
  uint64_t v25 = *((void *)v23 - 1);
  MEMORY[0x270FA5388](v23);
  uint64_t v71 = (char *)&v60 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  unint64_t v29 = (char *)&v60 - v28;
  long long v82 = *(_OWORD *)(v3 + 16);
  uint64_t v64 = v3;
  uint64_t v83 = *(void *)(v3 + 32);
  sub_20A8CBAC0();
  uint64_t v30 = v24;
  if ((*(unsigned int (**)(char *, uint64_t, char *))(v25 + 48))(v22, 1, v24) == 1)
  {
    sub_20A678968((uint64_t)v22);
    sub_20A6789C4();
    *uint64_t v10 = swift_allocError();
    uint64_t v31 = v79;
    (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7D930], v79);
    v81(v10);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v31);
  }
  else
  {
    unint64_t v62 = v10;
    uint64_t v63 = v8;
    uint64_t v33 = v25;
    double v34 = v30;
    (*(void (**)(char *, char *, char *))(v25 + 32))(v29, v22, v30);
    uint64_t v35 = sub_20A63CA8C();
    if (v36)
    {
      sub_20A6789C4();
      uint64_t v56 = swift_allocError();
      uint64_t v57 = v62;
      *unint64_t v62 = v56;
      uint64_t v58 = v63;
      uint64_t v59 = v79;
      (*(void (**)(uint64_t *, void, uint64_t))(v63 + 104))(v57, *MEMORY[0x263F7D930], v79);
      v81(v57);
      (*(void (**)(uint64_t *, uint64_t))(v58 + 8))(v57, v59);
      return (*(uint64_t (**)(char *, char *))(v33 + 8))(v29, v30);
    }
    else
    {
      uint64_t v37 = v35;
      uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 16);
      uint64_t v60 = a1;
      uint64_t v61 = v18;
      v38(v73, a1, v18);
      uint64_t v39 = v75;
      sub_20A678530(v37, v75);
      swift_storeEnumTagMultiPayload();
      sub_20A60DFF4();
      sub_20A44D7C8(0);
      uint64_t v64 = v40;
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_20A8D3DC0;
      sub_20A61E890();
      uint64_t v43 = (uint64_t)v65;
      uint64_t v44 = &v65[*(int *)(v42 + 48)];
      sub_20A678A18((uint64_t)&v83, (uint64_t)v84);
      sub_20A678A18((uint64_t)v84, v43);
      (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v44, v39, v78);
      swift_storeEnumTagMultiPayload();
      sub_20A678A74((uint64_t)v84);
      sub_20A61E718((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
      sub_20A8C8320();
      uint64_t v45 = sub_20A61E718((unint64_t *)&unk_26AC69DC0, sub_20A44D7C8);
      uint64_t v46 = sub_20A61E718(&qword_26AC69DB8, sub_20A44D7C8);
      MEMORY[0x21051E240](v41, v64, v45, v46);
      sub_20A61E718(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
      sub_20A8C8810();
      uint64_t v47 = v73;
      sub_20A8CBAB0();
      uint64_t v48 = *MEMORY[0x263F7D528];
      id v72 = v29;
      uint64_t v49 = v68;
      uint64_t v50 = v69;
      uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 104);
      uint64_t v66 = v34;
      uint64_t v52 = v70;
      v51(v68, v48, v70);
      sub_20A61E718(&qword_26AC68150, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
      uint64_t v53 = v62;
      sub_20A8C9B50();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v52);
      v81(v53);
      (*(void (**)(uint64_t *, uint64_t))(v63 + 8))(v53, v79);
      uint64_t v54 = *(void (**)(char *, char *))(v33 + 8);
      uint64_t v55 = v66;
      v54(v71, v66);
      (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v75, v78);
      (*(void (**)(char *, uint64_t))(v74 + 8))(v47, v61);
      return ((uint64_t (*)(char *, char *))v54)(v72, v55);
    }
  }
}

uint64_t sub_20A678530@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20A8CD2C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v24 - v9;
  sub_20A678AA0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A698E18((uint64_t)v13);
  sub_20A50C150();
  uint64_t v15 = v14;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14) == 1)
  {
    if (a1)
    {
      if (qword_26AC81A28 != -1) {
        swift_once();
      }
      uint64_t v16 = qword_26AC9ECD8;
    }
    else
    {
      if (qword_267639B68 != -1) {
        swift_once();
      }
      uint64_t v16 = qword_267652E78;
    }
    uint64_t v22 = __swift_project_value_buffer(v4, (uint64_t)v16);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, v22, v4);
  }
  else
  {
    uint64_t v17 = &v13[*(int *)(v15 + 48)];
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v18(v10, v13, v4);
    v18(v7, v17, v4);
    uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
    if (a1)
    {
      v19(v10, v4);
      uint64_t v20 = a2;
      uint64_t v21 = v7;
    }
    else
    {
      v19(v7, v4);
      uint64_t v20 = a2;
      uint64_t v21 = v10;
    }
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v18)(v20, v21, v4);
  }
}

uint64_t sub_20A6787E0(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  return sub_20A677B2C(a1, a2, a3);
}

unint64_t sub_20A678820()
{
  unint64_t result = qword_26AC81C80;
  if (!qword_26AC81C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC81C80);
  }
  return result;
}

void sub_20A678874(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for ForYouFeedSectionDescriptor();
    v8[1] = type metadata accessor for ForYouFeedModel();
    v8[2] = sub_20A61E718(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
    v8[3] = sub_20A61E718((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A678968(uint64_t a1)
{
  sub_20A652530();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_20A6789C4()
{
  unint64_t result = qword_26AC81C70;
  if (!qword_26AC81C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC81C70);
  }
  return result;
}

uint64_t sub_20A678A18(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_20A678A74(uint64_t a1)
{
  return a1;
}

void sub_20A678AA0()
{
  if (!qword_26AC819B8)
  {
    sub_20A678B1C();
    sub_20A678B70();
    unint64_t v0 = type metadata accessor for DualOfflineManager.State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC819B8);
    }
  }
}

unint64_t sub_20A678B1C()
{
  unint64_t result = qword_26AC73950;
  if (!qword_26AC73950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC73950);
  }
  return result;
}

unint64_t sub_20A678B70()
{
  unint64_t result = qword_26AC73960;
  if (!qword_26AC73960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC73960);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ForYouFeedFailedBlueprintModifier.ModifierError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A678C60);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedFailedBlueprintModifier.ModifierError()
{
  return &type metadata for ForYouFeedFailedBlueprintModifier.ModifierError;
}

unint64_t sub_20A678C9C()
{
  unint64_t result = qword_26763CF48;
  if (!qword_26763CF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CF48);
  }
  return result;
}

uint64_t sub_20A678CF0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20A4342F4(a1, (uint64_t)v6);
  uint64_t v3 = type metadata accessor for OnboardingModule();
  uint64_t v4 = swift_allocObject();
  uint64_t result = sub_20A42BEBC(v6, v4 + 16);
  a2[3] = v3;
  a2[4] = (uint64_t)&off_26BE63E68;
  *a2 = v4;
  return result;
}

uint64_t sub_20A678D60()
{
  uint64_t v0 = sub_20A8C6410();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8CA020();
  sub_20A8C6290();
  swift_release();
  sub_20A4301D4(0, &qword_26AC82FF8);
  sub_20A8C62A0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D000], v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_20A4301D4(0, &qword_26AC83000);
  sub_20A8C62A0();
  return swift_release();
}

uint64_t sub_20A678F2C(void *a1)
{
  uint64_t v2 = sub_20A8C9DD0();
  MEMORY[0x270FA5388](v2 - 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7C748);
  uint64_t result = sub_20A8C5BB0();
  if (v7)
  {
    sub_20A42BEBC(&v6, (uint64_t)v8);
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_20A70CD94();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC82FF8);
    uint64_t result = sub_20A8C5BB0();
    if ((void)v6)
    {
      id v4 = objc_allocWithZone((Class)sub_20A8CA020());
      uint64_t v5 = sub_20A8C9FF0();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
      return v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_20A6790A8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC83000);
  unint64_t result = sub_20A8C5BB0();
  if (v20)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (void *)((char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for OnboardingTracker();
    v18[3] = v10;
    v18[4] = &off_26BE70958;
    v18[0] = v9;
    type metadata accessor for OnboardingInteractor();
    uint64_t v11 = (void *)swift_allocObject();
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v10);
    double v13 = MEMORY[0x270FA5388](v12);
    uint64_t v15 = (void *)((char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
    uint64_t v17 = *v15;
    v11[5] = v10;
    v11[6] = &off_26BE70958;
    v11[2] = v17;
    sub_20A8C27F0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    unint64_t result = sub_20A67943C();
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A6792D8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for OnboardingTracker();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    a2[3] = v5;
    a2[4] = (uint64_t)&off_26BE70958;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for OnboardingAssembly()
{
  return self;
}

uint64_t sub_20A679384()
{
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC71AD8);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A8C6280();

  return swift_release();
}

unint64_t sub_20A67943C()
{
  unint64_t result = qword_26AC83008;
  if (!qword_26AC83008)
  {
    type metadata accessor for OnboardingInteractor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC83008);
  }
  return result;
}

void *sub_20A679494(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_10;
      }
      sub_20A8C4DA0();
      int v9 = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (v9 == 1)
      {
        swift_retain();
      }
      else
      {
        sub_20A42FEC8();
        uint64_t v22 = *(int *)(v21 + 48);
        uint64_t v41 = (char *)a1 + v22;
        id v23 = (char *)a2 + v22;
        uint64_t v24 = sub_20A8C5390();
        uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
        swift_retain();
        v25(v41, v23, v24);
      }
      swift_storeEnumTagMultiPayload();
      sub_20A42FC8C();
      *(void *)((char *)a1 + *(int *)(v26 + 48)) = *(void *)((char *)a2 + *(int *)(v26 + 48));
      uint64_t v27 = *(int *)(v26 + 64);
      uint64_t v18 = (char *)a1 + v27;
      uint64_t v19 = (char *)a2 + v27;
      uint64_t v20 = *(void *)((char *)a2 + v27 + 24);
      if (!v20)
      {
        long long v37 = *((_OWORD *)v19 + 1);
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        *((_OWORD *)v18 + 1) = v37;
        *((void *)v18 + 4) = *((void *)v19 + 4);
        goto LABEL_29;
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_10;
      }
      sub_20A8C4DA0();
      int v8 = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (v8 == 1)
      {
        swift_retain();
      }
      else
      {
        sub_20A42FEC8();
        uint64_t v12 = *(int *)(v11 + 48);
        uint64_t v40 = (char *)a1 + v12;
        double v13 = (char *)a2 + v12;
        uint64_t v14 = sub_20A8C5390();
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
        swift_retain();
        v15(v40, v13, v14);
      }
      swift_storeEnumTagMultiPayload();
      sub_20A42FC8C();
      *(void *)((char *)a1 + *(int *)(v16 + 48)) = *(void *)((char *)a2 + *(int *)(v16 + 48));
      uint64_t v17 = *(int *)(v16 + 64);
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = *(void *)((char *)a2 + v17 + 24);
      if (!v20)
      {
        long long v36 = *((_OWORD *)v19 + 1);
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        *((_OWORD *)v18 + 1) = v36;
        *((void *)v18 + 4) = *((void *)v19 + 4);
        goto LABEL_29;
      }
    }
    else
    {
      type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_10:
        *a1 = *a2;
        swift_unknownObjectRetain();
LABEL_29:
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      sub_20A8C4DA0();
      int v10 = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (v10 == 1)
      {
        swift_retain();
      }
      else
      {
        sub_20A42FEC8();
        uint64_t v30 = *(int *)(v29 + 48);
        uint64_t v42 = (char *)a1 + v30;
        uint64_t v31 = (char *)a2 + v30;
        uint64_t v32 = sub_20A8C5390();
        uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
        swift_retain();
        v33(v42, v31, v32);
      }
      swift_storeEnumTagMultiPayload();
      sub_20A42FC8C();
      *(void *)((char *)a1 + *(int *)(v34 + 48)) = *(void *)((char *)a2 + *(int *)(v34 + 48));
      uint64_t v35 = *(int *)(v34 + 64);
      uint64_t v18 = (char *)a1 + v35;
      uint64_t v19 = (char *)a2 + v35;
      uint64_t v20 = *(void *)((char *)a2 + v35 + 24);
      if (!v20)
      {
        long long v38 = *((_OWORD *)v19 + 1);
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        *((_OWORD *)v18 + 1) = v38;
        *((void *)v18 + 4) = *((void *)v19 + 4);
        goto LABEL_29;
      }
    }
    uint64_t v28 = *((void *)v19 + 4);
    *((void *)v18 + 3) = v20;
    *((void *)v18 + 4) = v28;
    (**(void (***)(void))(v20 - 8))();
    goto LABEL_29;
  }
  uint64_t v7 = *a2;
  *a1 = *a2;
  a1 = (void *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_20A679994(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 2)
  {
    type metadata accessor for StocksActivity.Article(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      return swift_unknownObjectRelease();
    }
    else
    {
      sub_20A8C4DA0();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      swift_release();
      if (EnumCaseMultiPayload != 1)
      {
        sub_20A42FEC8();
        uint64_t v5 = a1 + *(int *)(v4 + 48);
        uint64_t v6 = sub_20A8C5390();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      }
      sub_20A42FC8C();
      uint64_t result = a1 + *(int *)(v7 + 64);
      if (*(void *)(result + 24))
      {
        return __swift_destroy_boxed_opaque_existential_1(result);
      }
    }
  }
  return result;
}

void *sub_20A679AAC(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    type metadata accessor for StocksActivity.Article(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_20A8C4DA0();
      int v5 = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (v5 == 1) {
        goto LABEL_10;
      }
      goto LABEL_11;
    }
LABEL_7:
    *a1 = *a2;
    swift_unknownObjectRetain();
    goto LABEL_15;
  }
  type metadata accessor for StocksActivity.Article(0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    goto LABEL_7;
  }
  sub_20A8C4DA0();
  int v6 = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (v6 == 1)
  {
LABEL_10:
    swift_retain();
    goto LABEL_12;
  }
LABEL_11:
  sub_20A42FEC8();
  uint64_t v8 = *(int *)(v7 + 48);
  uint64_t v19 = (char *)a2 + v8;
  uint64_t v20 = (char *)a1 + v8;
  uint64_t v9 = sub_20A8C5390();
  int v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_retain();
  v10(v20, v19, v9);
LABEL_12:
  swift_storeEnumTagMultiPayload();
  sub_20A42FC8C();
  *(void *)((char *)a1 + *(int *)(v11 + 48)) = *(void *)((char *)a2 + *(int *)(v11 + 48));
  uint64_t v12 = *(int *)(v11 + 64);
  double v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *(void *)((char *)a2 + v12 + 24);
  if (v15)
  {
    uint64_t v16 = *((void *)v14 + 4);
    *((void *)v13 + 3) = v15;
    *((void *)v13 + 4) = v16;
    (**(void (***)(void))(v15 - 8))();
  }
  else
  {
    long long v17 = *((_OWORD *)v14 + 1);
    *(_OWORD *)double v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v17;
    *((void *)v13 + 4) = *((void *)v14 + 4);
  }
LABEL_15:
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_20A679D50(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_20A67A09C((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_5:
        *a1 = *a2;
        swift_unknownObjectRetain();
LABEL_19:
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      sub_20A8C4DA0();
      int v5 = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (v5 == 1)
      {
        swift_retain();
      }
      else
      {
        sub_20A42FEC8();
        uint64_t v8 = *(int *)(v7 + 48);
        uint64_t v27 = (char *)a2 + v8;
        uint64_t v29 = (char *)a1 + v8;
        uint64_t v9 = sub_20A8C5390();
        int v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
        swift_retain();
        v10(v29, v27, v9);
      }
      swift_storeEnumTagMultiPayload();
      sub_20A42FC8C();
      *(void *)((char *)a1 + *(int *)(v11 + 48)) = *(void *)((char *)a2 + *(int *)(v11 + 48));
      uint64_t v12 = *(int *)(v11 + 64);
      double v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = *(void *)((char *)a2 + v12 + 24);
      if (!v15)
      {
        long long v16 = *(_OWORD *)v14;
        long long v17 = *((_OWORD *)v14 + 1);
        *((void *)v13 + 4) = *((void *)v14 + 4);
        *(_OWORD *)double v13 = v16;
        *((_OWORD *)v13 + 1) = v17;
        goto LABEL_19;
      }
    }
    else
    {
      type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_5;
      }
      sub_20A8C4DA0();
      int v6 = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (v6 == 1)
      {
        swift_retain();
      }
      else
      {
        sub_20A42FEC8();
        uint64_t v19 = *(int *)(v18 + 48);
        uint64_t v28 = (char *)a2 + v19;
        uint64_t v30 = (char *)a1 + v19;
        uint64_t v20 = sub_20A8C5390();
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        swift_retain();
        v21(v30, v28, v20);
      }
      swift_storeEnumTagMultiPayload();
      sub_20A42FC8C();
      *(void *)((char *)a1 + *(int *)(v22 + 48)) = *(void *)((char *)a2 + *(int *)(v22 + 48));
      uint64_t v23 = *(int *)(v22 + 64);
      double v13 = (char *)a1 + v23;
      uint64_t v14 = (char *)a2 + v23;
      uint64_t v15 = *(void *)((char *)a2 + v23 + 24);
      if (!v15)
      {
        long long v24 = *(_OWORD *)v14;
        long long v25 = *((_OWORD *)v14 + 1);
        *((void *)v13 + 4) = *((void *)v14 + 4);
        *(_OWORD *)double v13 = v24;
        *((_OWORD *)v13 + 1) = v25;
        goto LABEL_19;
      }
    }
    *((void *)v13 + 3) = v15;
    *((void *)v13 + 4) = *((void *)v14 + 4);
    (**(void (***)(void))(v15 - 8))();
    goto LABEL_19;
  }
  return a1;
}

uint64_t sub_20A67A09C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ForYouFeedRouteModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ForYouFeedRouteModel()
{
  uint64_t result = qword_26AC83080;
  if (!qword_26AC83080) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_20A67A144(void *a1, void *a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = type metadata accessor for StocksActivity.Article(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    uint64_t v5 = sub_20A8C4DA0();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      sub_20A42FEC8();
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_20A8C5390();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    sub_20A42FC8C();
    *(void *)((char *)a1 + *(int *)(v11 + 48)) = *(void *)((char *)a2 + *(int *)(v11 + 48));
    uint64_t v12 = *(int *)(v11 + 64);
    double v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    *((void *)v13 + 4) = *((void *)v14 + 4);
    long long v15 = *((_OWORD *)v14 + 1);
    *(_OWORD *)double v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v15;
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_20A67A2DC(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_20A67A09C((uint64_t)a1);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = type metadata accessor for StocksActivity.Article(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      uint64_t v5 = sub_20A8C4DA0();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        sub_20A42FEC8();
        uint64_t v7 = *(int *)(v6 + 48);
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_20A8C5390();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
        swift_storeEnumTagMultiPayload();
      }
      sub_20A42FC8C();
      *(void *)((char *)a1 + *(int *)(v11 + 48)) = *(void *)((char *)a2 + *(int *)(v11 + 48));
      uint64_t v12 = *(int *)(v11 + 64);
      double v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      *((void *)v13 + 4) = *((void *)v14 + 4);
      long long v15 = *((_OWORD *)v14 + 1);
      *(_OWORD *)double v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v15;
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20A67A484()
{
  uint64_t result = type metadata accessor for StocksActivity.Article(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_20A67A510(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C3D00();
    uint64_t v12 = *(void *)(v11 - 8);
    double v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_20A67CE1C(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    long long v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_20A8C3410();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[7];
    long long v21 = *(_OWORD *)((char *)a2 + v20 + 24);
    *(_OWORD *)((char *)v4 + v20 + 24) = v21;
    (**(void (***)(void))(v21 - 8))();
  }
  return v4;
}

uint64_t sub_20A67A748(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_20A8C3D00();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];

  return __swift_destroy_boxed_opaque_existential_1(v9);
}

void *sub_20A67A858(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C3D00();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_20A67CE1C(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_20A8C3410();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = a3[7];
  long long v19 = *(_OWORD *)((char *)a2 + v18 + 24);
  *(_OWORD *)((char *)a1 + v18 + 24) = v19;
  (**(void (***)(void))(v19 - 8))();
  return a1;
}

void *sub_20A67AA40(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C3D00();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_20A67CE1C(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_20A8C3410();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + a3[7]), (void *)((char *)a2 + a3[7]));
  return a1;
}

_OWORD *sub_20A67AC50(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C3D00();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_20A67CE1C(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_20A8C3410();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *((void *)v17 + 4) = *((void *)v18 + 4);
  return a1;
}

void *sub_20A67ADF0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C3D00();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_20A67CE1C(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_20A8C3410();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = a3[7];
  long long v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v20);
  long long v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)long long v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  *((void *)v21 + 4) = *((void *)v22 + 4);
  return a1;
}

uint64_t sub_20A67B004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A67B018);
}

uint64_t sub_20A67B018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_20A67CE1C(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_20A8C3410();
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_20A67B160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A67B174);
}

uint64_t sub_20A67B174(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_20A67CE1C(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_20A8C3410();
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for StockFeedChartUpdateBlueprintModifier()
{
  uint64_t result = qword_26AC7D7C0;
  if (!qword_26AC7D7C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A67B308()
{
  sub_20A67CE1C(319, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
  if (v0 <= 0x3F)
  {
    sub_20A8C3410();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_20A67B400(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v4 = sub_20A8C8B80();
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v34 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A67CB54(0, &qword_26AC6A420, MEMORY[0x263F7D950]);
  uint64_t v37 = *(void *)(v6 - 8);
  uint64_t v38 = v6;
  MEMORY[0x270FA5388](v6);
  long long v36 = (char *)&v31 - v7;
  sub_20A46CC8C();
  MEMORY[0x270FA5388](v8 - 8);
  sub_20A67CB54(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  uint64_t v35 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v42 = v12;
  sub_20A8CBA50();
  uint64_t v41 = v3;
  uint64_t v44 = v3;
  uint64_t v13 = sub_20A4499C0((void (*)(char *))sub_20A67CC48, (uint64_t)v43, (uint64_t)v47);
  sub_20A67CB54(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  uint64_t v15 = v14;
  uint64_t v16 = sub_20A67CAF4(&qword_26AC69EF8);
  uint64_t v17 = sub_20A67CAF4(&qword_26AC69EF0);
  MEMORY[0x21051E250](v13, v15, v16, v17);
  type metadata accessor for StockFeedSectionDescriptor();
  type metadata accessor for StockFeedModel();
  sub_20A67CA64(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
  sub_20A67CA64(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
  sub_20A8CBA40();
  uint64_t v18 = sub_20A44E664();
  sub_20A8CCAC0();
  sub_20A8CCAB0();
  type metadata accessor for StockFeedServiceConfig();
  sub_20A67CA64(&qword_26AC73FD0, (void (*)(uint64_t))type metadata accessor for StockFeedServiceConfig);
  uint64_t v19 = sub_20A8CCA90();
  swift_release();
  if (v19)
  {
    *((void *)&v46 + 1) = sub_20A8CC520();
    *(void *)&long long v45 = v19;
  }
  else
  {
    long long v45 = 0u;
    long long v46 = 0u;
  }
  uint64_t v20 = v42;
  sub_20A8CBB10();
  sub_20A55E55C(v18);
  uint64_t updated = type metadata accessor for StockFeedChartUpdateBlueprintModifier();
  __swift_project_boxed_opaque_existential_1((void *)(v41 + *(int *)(updated + 28)), *(void *)(v41 + *(int *)(updated + 28) + 24));
  if (sub_20A8C3850())
  {
    uint64_t v22 = v36;
    sub_20A8C9B40();
  }
  else
  {
    uint64_t v24 = v33;
    uint64_t v23 = v34;
    long long v25 = v32;
    (*(void (**)(char *, void, uint64_t))(v33 + 104))(v32, *MEMORY[0x263F7D528], v34);
    sub_20A67CA64(&qword_26AC76FA0, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    uint64_t v22 = v36;
    sub_20A8C9B50();
    uint64_t v26 = v25;
    uint64_t v20 = v42;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  }
  uint64_t v28 = v37;
  uint64_t v27 = v38;
  uint64_t v29 = v35;
  v40(v22);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v11, v20);
}

uint64_t sub_20A67B9D0(uint64_t a1, uint64_t a2)
{
  sub_20A42C84C();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v4);
  sub_20A67BC18(a2, (uint64_t)&v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  uint64_t v13 = a2;
  uint64_t v6 = sub_20A449958((void (*)(char *))sub_20A67CC68, (uint64_t)v12, (uint64_t)v14);
  sub_20A42C4A4();
  uint64_t v8 = v7;
  uint64_t v9 = sub_20A67CA64(&qword_26AC69D78, (void (*)(uint64_t))sub_20A42C4A4);
  uint64_t v10 = sub_20A67CA64(&qword_26AC69D70, (void (*)(uint64_t))sub_20A42C4A4);
  MEMORY[0x21051E250](v6, v8, v9, v10);
  type metadata accessor for StockFeedModel();
  sub_20A67CA64(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
  sub_20A67CA64(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
  return sub_20A8C8810();
}

uint64_t sub_20A67BC18@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v2 = sub_20A8C3410();
  uint64_t v34 = *(void *)(v2 - 8);
  uint64_t v35 = v2;
  MEMORY[0x270FA5388](v2);
  long long v36 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A67CE1C(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v33 = (uint64_t)&v31 - v5;
  sub_20A67CE1C(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v31 - v7;
  uint64_t v9 = sub_20A8C3F00();
  uint64_t v32 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v18 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A67CB54(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  sub_20A8C8820();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_bridgeObjectRelease();
      sub_20A42C980();
      sub_20A67CDC0((uint64_t)&v20[*(int *)(v30 + 64)], &qword_26AC6AF30, MEMORY[0x263F59740]);
      goto LABEL_2;
    case 2u:
      sub_20A67CC88((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
      goto LABEL_2;
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
LABEL_2:
      uint64_t result = sub_20A8C8820();
      break;
    default:
      sub_20A546830((uint64_t)v20, (uint64_t)v17);
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v11, v17, v9);
      sub_20A67CD54((uint64_t)&v17[*(int *)(v12 + 20)], (uint64_t)v8, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      uint64_t updated = (int *)type metadata accessor for StockFeedChartUpdateBlueprintModifier();
      uint64_t v23 = v37;
      uint64_t v24 = v33;
      sub_20A67CD54(v37 + updated[5], v33, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
      uint64_t v25 = (uint64_t)v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v36, v23 + updated[6], v35);
      uint64_t v26 = *(int *)(v12 + 32);
      uint64_t v27 = (void *)(v23 + updated[7]);
      uint64_t v28 = v27[3];
      LODWORD(v37) = v17[v26];
      __swift_project_boxed_opaque_existential_1(v27, v28);
      char v29 = sub_20A8C3870();
      sub_20A6FC190((uint64_t)v11, (uint64_t)v8, v24, v25, v37, v29 & 1, (uint64_t)v14);
      sub_20A67CC88((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      sub_20A546830((uint64_t)v14, v38);
      uint64_t result = swift_storeEnumTagMultiPayload();
      break;
  }
  return result;
}

uint64_t sub_20A67C0FC@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v59 = a3;
  sub_20A67CE1C(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v51 = (uint64_t)&v50 - v5;
  uint64_t v6 = sub_20A8C3410();
  uint64_t v52 = *(void *)(v6 - 8);
  uint64_t v53 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v55 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A67CE1C(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v54 = (uint64_t)&v50 - v9;
  sub_20A67CE1C(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v58 = (uint64_t)&v50 - v11;
  uint64_t v12 = sub_20A8C3F00();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v19);
  uint64_t v57 = (uint64_t)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v50 - v22;
  sub_20A42C4A4();
  uint64_t v25 = v24;
  sub_20A8C8330();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      (*(void (**)(char *, uint64_t))(v13 + 8))(v23, v12);
      goto LABEL_11;
    case 3u:
      sub_20A42C53C();
      uint64_t v37 = v36;
      uint64_t v38 = &v23[*(int *)(v36 + 48)];
      uint64_t v39 = (uint64_t)&v23[*(int *)(v36 + 64)];
      uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
      uint64_t v50 = v15;
      v40(v15, v23, v12);
      uint64_t v41 = (uint64_t)v38;
      uint64_t v42 = v58;
      uint64_t v43 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
      sub_20A67CCE8(v41, v58, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      uint64_t v56 = (void (*)(uint64_t))MEMORY[0x263F7A890];
      uint64_t v44 = v51;
      sub_20A67CCE8(v39, v51, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      uint64_t v45 = v57 + *(int *)(v37 + 48);
      uint64_t v46 = v57 + *(int *)(v37 + 64);
      (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v57, v50, v12);
      sub_20A67CD54(v42, v45, &qword_26AC68FB0, v43);
      uint64_t v47 = v46;
      uint64_t v48 = v56;
      sub_20A67CD54(v44, v47, &qword_26AC68DA0, v56);
      swift_storeEnumTagMultiPayload();
      sub_20A67CA64(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
      sub_20A8C8320();
      sub_20A67CDC0(v44, &qword_26AC68DA0, v48);
      sub_20A67CDC0(v42, &qword_26AC68FB0, v43);
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v50, v12);
    case 4u:
      uint64_t v26 = type metadata accessor for StockEarningsModel;
      goto LABEL_7;
    case 5u:
      swift_bridgeObjectRelease();
      goto LABEL_11;
    case 6u:
    case 9u:
      uint64_t v26 = type metadata accessor for StockFeedModel;
LABEL_7:
      sub_20A67CC88((uint64_t)v23, (uint64_t (*)(void))v26);
      goto LABEL_11;
    case 7u:
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_11;
    case 8u:
      sub_20A46CF6C();
      swift_release();
      uint64_t v49 = sub_20A8CD2C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v49 - 8) + 8))(v23, v49);
      goto LABEL_11;
    case 0xAu:
LABEL_11:
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v59, a1, v25);
      break;
    default:
      sub_20A546830((uint64_t)v23, (uint64_t)v18);
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
      uint64_t v50 = v15;
      v27(v15, v18, v12);
      uint64_t v28 = v58;
      sub_20A67CD54((uint64_t)&v18[*(int *)(v16 + 20)], v58, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      uint64_t updated = (int *)type metadata accessor for StockFeedChartUpdateBlueprintModifier();
      uint64_t v30 = v56;
      uint64_t v31 = v54;
      sub_20A67CD54((uint64_t)v56 + updated[5], v54, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
      uint64_t v32 = (uint64_t)v55;
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v55, (char *)v30 + updated[6], v53);
      int v33 = v18[*(int *)(v16 + 32)];
      __swift_project_boxed_opaque_existential_1((void (*)(uint64_t))((char *)v30 + updated[7]), *(void *)((char *)v30 + updated[7] + 24));
      char v34 = sub_20A8C3870();
      sub_20A6FC190((uint64_t)v50, v28, v31, v32, v33, v34 & 1, v57);
      swift_storeEnumTagMultiPayload();
      sub_20A67CA64(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
      sub_20A8C8320();
      uint64_t result = sub_20A67CC88((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      break;
  }
  return result;
}

uint64_t sub_20A67C9D4()
{
  return sub_20A67CA64(&qword_26AC7D7B8, (void (*)(uint64_t))type metadata accessor for StockFeedChartUpdateBlueprintModifier);
}

uint64_t sub_20A67CA1C()
{
  return sub_20A67CA64(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
}

uint64_t sub_20A67CA64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A67CAAC()
{
  return sub_20A67CA64(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
}

uint64_t sub_20A67CAF4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A67CB54(255, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A67CB54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for StockFeedSectionDescriptor();
    v8[1] = type metadata accessor for StockFeedModel();
    v8[2] = sub_20A67CA64(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    v8[3] = sub_20A67CA64(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A67CC48(uint64_t a1)
{
  return sub_20A67B9D0(a1, *(void *)(v1 + 16));
}

uint64_t sub_20A67CC68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A67C0FC(a1, *(void (**)(uint64_t))(v2 + 16), a2);
}

uint64_t sub_20A67CC88(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A67CCE8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A67CE1C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A67CD54(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A67CE1C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A67CDC0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A67CE1C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_20A67CE1C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A67CE70(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v80 = a1;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A682724(0, &qword_26763CF58, MEMORY[0x263F79AA0], MEMORY[0x263F8D8F0]);
  uint64_t v73 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v85 = (void (*)(char *, uint64_t, uint64_t))((char *)v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v74 = v5;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v68 - v7;
  sub_20A682724(0, &qword_26AC699E0, MEMORY[0x263F79DF8], v3);
  uint64_t v71 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v84 = (uint64_t)v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v86 = (void (*)(char *, uint64_t (*)(uint64_t), uint64_t))((char *)v68 - v12);
  uint64_t v13 = sub_20A8C78F0();
  uint64_t v14 = *(uint64_t (**)(uint64_t))(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v77 = v15;
  uint64_t v16 = (char *)v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8C79F0();
  uint64_t v79 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v76 = v18;
  uint64_t v87 = (char *)v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_20A8C7900();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (void *)((char *)v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = sub_20A8C79E0();
  uint64_t v24 = *(void *)(v23 + 16);
  uint64_t v81 = v16;
  uint64_t v82 = v13;
  uint64_t v78 = v8;
  if (v24)
  {
    uint64_t v75 = v17;
    uint64_t v69 = v14;
    uint64_t v70 = a2;
    v68[0] = v20;
    v68[1] = v23;
    uint64_t v27 = *(void (**)(uint64_t *, unint64_t, uint64_t))(v20 + 16);
    uint64_t v25 = v20 + 16;
    uint64_t v26 = v27;
    unint64_t v28 = v23 + ((*(unsigned __int8 *)(v25 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 64));
    int v29 = *MEMORY[0x263F59FF0];
    uint64_t v30 = *(void *)(v25 + 56);
    while (1)
    {
      v26(v22, v28, v19);
      if ((*(unsigned int (**)(uint64_t *, uint64_t))(v25 + 72))(v22, v19) == v29) {
        break;
      }
      (*(void (**)(uint64_t *, uint64_t))(v25 - 8))(v22, v19);
      v28 += v30;
      if (!--v24)
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = v82;
        uint64_t v31 = v83;
        uint64_t v14 = v69;
        a2 = v70;
        uint64_t v32 = v80;
        uint64_t v16 = v81;
        uint64_t v17 = v75;
        uint64_t v8 = v78;
        goto LABEL_7;
      }
    }
    (*(void (**)(uint64_t *, uint64_t))(v68[0] + 96))(v22, v19);
    uint64_t v49 = *v22;
    uint64_t v50 = v22[1];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v51 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v51);
    uint64_t v52 = v83;
    v68[-4] = v83;
    v68[-3] = v49;
    v68[-2] = v50;
    sub_20A4549BC();
    uint64_t v84 = sub_20A8C6670();
    swift_bridgeObjectRelease();
    uint64_t v53 = v79;
    uint64_t v86 = *(void (**)(char *, uint64_t (*)(uint64_t), uint64_t))(v79 + 16);
    v86(v87, v70, v75);
    uint64_t v54 = v69;
    uint64_t v85 = (void (*)(char *, uint64_t, uint64_t))*((void *)v69 + 2);
    uint64_t v55 = v81;
    uint64_t v56 = v82;
    v85(v81, v80, v82);
    uint64_t v57 = *(unsigned __int8 *)(v53 + 80);
    uint64_t v58 = (v57 + 24) & ~v57;
    uint64_t v59 = *((unsigned __int8 *)v54 + 80);
    uint64_t v60 = (v76 + v59 + v58) & ~v59;
    v77 += v60;
    uint64_t v78 = (char *)v58;
    uint64_t v74 = v60;
    uint64_t v76 = v57 | v59 | 7;
    uint64_t v61 = swift_allocObject();
    *(void *)(v61 + 16) = v52;
    uint64_t v62 = v61 + v58;
    uint64_t v79 = *(void *)(v53 + 32);
    uint64_t v63 = v87;
    ((void (*)(uint64_t, char *, uint64_t))v79)(v62, v87, v75);
    uint64_t v73 = *((void *)v54 + 4);
    ((void (*)(uint64_t, char *, uint64_t))v73)(v61 + v60, v55, v56);
    swift_retain();
    uint64_t v64 = (void *)sub_20A8C6450();
    uint64_t v72 = sub_20A8C6500();
    swift_release();
    swift_release();

    uint64_t v65 = v75;
    v86(v63, v70, v75);
    v85(v55, v80, v56);
    uint64_t v66 = swift_allocObject();
    *(void *)(v66 + 16) = v83;
    ((void (*)(char *, char *, uint64_t))v79)(&v78[v66], v63, v65);
    ((void (*)(uint64_t, char *, uint64_t))v73)(v66 + v74, v55, v56);
    swift_retain();
    uint64_t v67 = (void *)sub_20A8C6450();
    sub_20A8C6550();
    swift_release();

    swift_release();
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v31 = v83;
    uint64_t v32 = v80;
LABEL_7:
    uint64_t v33 = sub_20A8C6CB0();
    char v34 = v86;
    (*(void (**)(void (*)(char *, uint64_t (*)(uint64_t), uint64_t), uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v86, 1, 1, v33);
    uint64_t v35 = sub_20A8C6890();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v8, 1, 1, v35);
    uint64_t v80 = *(void *)(v31 + 16);
    uint64_t v70 = (uint64_t (*)(uint64_t))MEMORY[0x263F79DF8];
    sub_20A680C2C((uint64_t)v34, v84, &qword_26AC699E0, MEMORY[0x263F79DF8]);
    uint64_t v69 = (uint64_t (*)(uint64_t))MEMORY[0x263F79AA0];
    sub_20A680C2C((uint64_t)v8, (uint64_t)v85, &qword_26763CF58, MEMORY[0x263F79AA0]);
    uint64_t v36 = v79;
    (*(void (**)(char *, uint64_t (*)(uint64_t), uint64_t))(v79 + 16))(v87, a2, v17);
    (*((void (**)(char *, uint64_t, uint64_t))v14 + 2))(v16, v32, v13);
    unint64_t v37 = (*(unsigned __int8 *)(v71 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
    unint64_t v38 = (v72 + *(unsigned __int8 *)(v73 + 80) + v37) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
    uint64_t v39 = v31;
    unint64_t v40 = (v74 + *(unsigned __int8 *)(v36 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    unint64_t v41 = (v76 + *((unsigned __int8 *)v14 + 80) + v40) & ~(unint64_t)*((unsigned __int8 *)v14 + 80);
    unint64_t v42 = (v77 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v43 = swift_allocObject();
    uint64_t v44 = v43 + v37;
    uint64_t v45 = v70;
    sub_20A680CB0(v84, v44, &qword_26AC699E0, v70);
    uint64_t v46 = v43 + v38;
    uint64_t v47 = v69;
    sub_20A680CB0((uint64_t)v85, v46, &qword_26763CF58, v69);
    (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v43 + v40, v87, v17);
    (*((void (**)(unint64_t, char *, uint64_t))v14 + 4))(v43 + v41, v81, v82);
    *(void *)(v43 + v42) = v39;
    swift_retain();
    sub_20A8C48E0();
    swift_release();
    sub_20A680D34((uint64_t)v78, &qword_26763CF58, v47);
    return sub_20A680D34((uint64_t)v86, &qword_26AC699E0, v45);
  }
}

uint64_t sub_20A67D7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v165 = a5;
  uint64_t v200 = a4;
  uint64_t v175 = a3;
  uint64_t v174 = a2;
  uint64_t v201 = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A682724(0, (unint64_t *)&unk_26763CF60, MEMORY[0x263F5A110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v150 = (char *)&v144 - v7;
  uint64_t v153 = sub_20A8C7BD0();
  uint64_t v152 = *(void *)(v153 - 8);
  MEMORY[0x270FA5388](v153);
  uint64_t v151 = (char *)&v144 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_20A8C72D0();
  uint64_t v155 = *(void *)(v154 - 8);
  MEMORY[0x270FA5388](v154);
  double v156 = (char *)&v144 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_20A8C72C0();
  uint64_t v159 = *(void *)(v158 - 8);
  MEMORY[0x270FA5388](v158);
  id v157 = (char *)&v144 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8C78F0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v186 = v11;
  uint64_t v187 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v188 = (char *)&v144 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A682724(0, &qword_26AC676E0, MEMORY[0x263F79D08], v5);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v163 = (char *)&v144 - v15;
  uint64_t v164 = sub_20A8C6B80();
  uint64_t v191 = *(void *)(v164 - 8);
  MEMORY[0x270FA5388](v164);
  uint64_t v148 = (char *)&v144 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8C7900();
  uint64_t v192 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v149 = (char *)&v144 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v144 - v20;
  sub_20A682724(0, &qword_26AC69960, MEMORY[0x263F79B40], v5);
  MEMORY[0x270FA5388](v22 - 8);
  v160 = (char *)&v144 - v23;
  uint64_t v162 = sub_20A8C69D0();
  uint64_t v161 = *(void *)(v162 - 8);
  MEMORY[0x270FA5388](v162);
  uint64_t v147 = (char *)&v144 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = sub_20A8C6A40();
  uint64_t v184 = *(void *)(v185 - 8);
  MEMORY[0x270FA5388](v185);
  double v183 = (char *)&v144 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = sub_20A8C6A30();
  uint64_t v166 = *(void *)(v198 - 8);
  MEMORY[0x270FA5388](v198);
  uint64_t v197 = (char *)&v144 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = sub_20A8C70D0();
  uint64_t v181 = *(void *)(v182 - 8);
  MEMORY[0x270FA5388](v182);
  uint64_t v180 = (char *)&v144 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_20A8C68E0();
  uint64_t v178 = *(void *)(v179 - 8);
  MEMORY[0x270FA5388](v179);
  uint64_t v177 = (char *)&v144 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v199 = (char *)sub_20A8C7C40();
  uint64_t v190 = *((void *)v199 - 1);
  MEMORY[0x270FA5388](v199);
  uint64_t v189 = (char *)&v144 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  long long v193 = (char *)&v144 - v31;
  uint64_t v32 = sub_20A8C68F0();
  uint64_t v195 = *(void *)(v32 - 8);
  uint64_t v196 = v32;
  MEMORY[0x270FA5388](v32);
  uint64_t v176 = (char *)&v144 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  uint64_t v194 = (char *)&v144 - v35;
  sub_20A682724(0, &qword_26AC69B68, MEMORY[0x263F7A700], v5);
  MEMORY[0x270FA5388](v36 - 8);
  uint64_t v171 = (uint64_t)&v144 - v37;
  uint64_t v173 = sub_20A8C77D0();
  uint64_t v172 = *(void *)(v173 - 8);
  MEMORY[0x270FA5388](v173);
  uint64_t v146 = (char *)&v144 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A682724(0, &qword_26AC69B40, MEMORY[0x263F7A600], v5);
  MEMORY[0x270FA5388](v39 - 8);
  uint64_t v169 = (uint64_t)&v144 - v40;
  uint64_t v170 = sub_20A8C76E0();
  uint64_t v168 = *(void *)(v170 - 8);
  MEMORY[0x270FA5388](v170);
  uint64_t v145 = (char *)&v144 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A682724(0, &qword_26763CF58, MEMORY[0x263F79AA0], v5);
  MEMORY[0x270FA5388](v42 - 8);
  uint64_t v44 = (char *)&v144 - v43;
  uint64_t v167 = sub_20A8C6890();
  uint64_t v45 = *(void *)(v167 - 8);
  MEMORY[0x270FA5388](v167);
  uint64_t v144 = (char *)&v144 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = (uint64_t (*)(uint64_t))MEMORY[0x263F79DF8];
  sub_20A682724(0, &qword_26AC699E0, MEMORY[0x263F79DF8], v5);
  MEMORY[0x270FA5388](v48 - 8);
  uint64_t v50 = (char *)&v144 - v49;
  uint64_t v51 = sub_20A8C6CB0();
  uint64_t v52 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v54 = (char *)&v144 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A680C2C(v174, (uint64_t)v50, &qword_26AC699E0, v47);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51) == 1)
  {
    uint64_t v55 = v201;
    sub_20A680D34((uint64_t)v50, &qword_26AC699E0, MEMORY[0x263F79DF8]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v54, v50, v51);
    sub_20A682788((unint64_t *)&unk_26AC699D0, 255, MEMORY[0x263F79DF8]);
    uint64_t v55 = v201;
    sub_20A8C45B0();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v51);
  }
  sub_20A680C2C(v175, (uint64_t)v44, &qword_26763CF58, MEMORY[0x263F79AA0]);
  uint64_t v56 = v45;
  uint64_t v57 = v167;
  int v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48))(v44, 1, v167);
  uint64_t v59 = v190;
  uint64_t v60 = v168;
  if (v58 == 1)
  {
    sub_20A680D34((uint64_t)v44, &qword_26763CF58, MEMORY[0x263F79AA0]);
    uint64_t v61 = v55;
  }
  else
  {
    uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    uint64_t v63 = v144;
    v62(v144, v44, v57);
    sub_20A682788((unint64_t *)&unk_26AC69930, 255, MEMORY[0x263F79AA0]);
    uint64_t v61 = v55;
    sub_20A8C45B0();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v63, v57);
  }
  uint64_t v64 = sub_20A8C79E0();
  uint64_t v65 = v169;
  sub_20A74D728(v64, v169);
  swift_bridgeObjectRelease();
  uint64_t v66 = v170;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v65, 1, v170) == 1)
  {
    sub_20A680D34(v65, &qword_26AC69B40, MEMORY[0x263F7A600]);
  }
  else
  {
    uint64_t v67 = v145;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v145, v65, v66);
    sub_20A682788((unint64_t *)&qword_26AC69B30, 255, MEMORY[0x263F7A600]);
    sub_20A8C45B0();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v67, v66);
  }
  uint64_t v68 = sub_20A8C79E0();
  uint64_t v69 = v171;
  sub_20A74DA94(v68, v171);
  swift_bridgeObjectRelease();
  uint64_t v70 = v172;
  uint64_t v71 = v173;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v172 + 48))(v69, 1, v173) == 1)
  {
    sub_20A680D34(v69, &qword_26AC69B68, MEMORY[0x263F7A700]);
  }
  else
  {
    uint64_t v72 = v146;
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v146, v69, v71);
    sub_20A682724(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
    uint64_t v73 = sub_20A8C4620();
    uint64_t v74 = *(void *)(v73 - 8);
    unint64_t v75 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
    uint64_t v76 = swift_allocObject();
    *(_OWORD *)(v76 + 16) = xmmword_20A8D3DC0;
    (*(void (**)(unint64_t, void, uint64_t))(v74 + 104))(v76 + v75, *MEMORY[0x263F24D48], v73);
    uint64_t v77 = v201;
    sub_20A682788(&qword_26AC67710, 255, MEMORY[0x263F7A700]);
    uint64_t v61 = v77;
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v72, v71);
    uint64_t v59 = v190;
  }
  uint64_t v78 = v196;
  uint64_t v80 = v193;
  uint64_t v79 = v194;
  sub_20A8C79D0();
  uint64_t v81 = v189;
  uint64_t v82 = v80;
  uint64_t v83 = v199;
  (*(void (**)(char *, char *, char *))(v59 + 16))(v189, v82, v199);
  int v84 = (*(uint64_t (**)(char *, char *))(v59 + 88))(v81, v83);
  if (v84 == *MEMORY[0x263F5A1C0])
  {
    uint64_t v85 = v195;
    (*(void (**)(char *, void, uint64_t))(v195 + 104))(v79, *MEMORY[0x263F79AF0], v78);
    uint64_t v86 = v61;
    goto LABEL_22;
  }
  uint64_t v85 = v195;
  if (v84 == *MEMORY[0x263F5A190])
  {
    (*(void (**)(char *, void, uint64_t))(v195 + 104))(v79, *MEMORY[0x263F79AE8], v78);
    uint64_t v86 = v61;
    goto LABEL_22;
  }
  uint64_t v86 = v61;
  if (v84 == *MEMORY[0x263F5A198]) {
    goto LABEL_18;
  }
  if (v84 == *MEMORY[0x263F5A170])
  {
    uint64_t v87 = (unsigned int *)MEMORY[0x263F79AE0];
    goto LABEL_21;
  }
  if (v84 == *MEMORY[0x263F5A1A0]
    || v84 == *MEMORY[0x263F5A178]
    || v84 == *MEMORY[0x263F5A1C8]
    || v84 == *MEMORY[0x263F5A1B8]
    || v84 == *MEMORY[0x263F5A1B0]
    || v84 == *MEMORY[0x263F5A180]
    || v84 == *MEMORY[0x263F5A188]
    || v84 == *MEMORY[0x263F5A1A8]
    || v84 == *MEMORY[0x263F5A1D8]
    || v84 == *MEMORY[0x263F5A1D0])
  {
LABEL_18:
    uint64_t v87 = (unsigned int *)MEMORY[0x263F79AF0];
LABEL_21:
    (*(void (**)(char *, void, uint64_t))(v195 + 104))(v79, *v87, v78);
    goto LABEL_22;
  }
  (*(void (**)(char *, void, uint64_t))(v195 + 104))(v79, *MEMORY[0x263F79AF0], v78);
  (*(void (**)(char *, char *))(v59 + 8))(v189, v199);
LABEL_22:
  (*(void (**)(char *, char *))(v59 + 8))(v193, v199);
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v176, v79, v78);
  uint64_t v88 = v177;
  sub_20A8C68D0();
  sub_20A682788(&qword_26AC676D8, 255, MEMORY[0x263F79AD8]);
  uint64_t v89 = v179;
  sub_20A8C45B0();
  (*(void (**)(char *, uint64_t))(v178 + 8))(v88, v89);
  sub_20A8C79C0();
  uint64_t v90 = v180;
  sub_20A8C70C0();
  sub_20A682788(&qword_26AC69A70, 255, MEMORY[0x263F7A090]);
  uint64_t v91 = v182;
  sub_20A8C45B0();
  (*(void (**)(char *, uint64_t))(v181 + 8))(v90, v91);
  sub_20A8C7980();
  unint64_t v92 = sub_20A8C79A0();
  if (v92 >= 5) {
    uint64_t v93 = (unsigned int *)MEMORY[0x263F79B90];
  }
  else {
    uint64_t v93 = (unsigned int *)qword_263FDD378[v92];
  }
  (*(void (**)(char *, void, uint64_t))(v184 + 104))(v183, *v93, v185);
  sub_20A8C6A20();
  sub_20A682788(&qword_26AC69970, 255, MEMORY[0x263F79B70]);
  sub_20A8C45B0();
  uint64_t v94 = sub_20A8C79E0();
  uint64_t v95 = *(void *)(v94 + 16);
  char v199 = "eTransactionTracker.swift";
  long long v193 = (char *)v94;
  if (v95)
  {
    uint64_t v96 = *(void (**)(char *, unint64_t, uint64_t))(v192 + 16);
    unint64_t v97 = v94 + ((*(unsigned __int8 *)(v192 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v192 + 80));
    uint64_t v98 = (unsigned int (**)(char *, uint64_t))(v192 + 88);
    int v99 = *MEMORY[0x263F59FF8];
    uint64_t v100 = (void (**)(char *, uint64_t))(v192 + 8);
    uint64_t v101 = *(void *)(v192 + 72);
    while (1)
    {
      v96(v21, v97, v17);
      if ((*v98)(v21, v17) == v99) {
        break;
      }
      (*v100)(v21, v17);
      v97 += v101;
      if (!--v95)
      {
        uint64_t v102 = 1;
        uint64_t v86 = v201;
        uint64_t v103 = v191;
        uint64_t v104 = v162;
        uint64_t v105 = v161;
        uint64_t v106 = (uint64_t)v160;
        goto LABEL_32;
      }
    }
    (*(void (**)(char *, uint64_t))(v192 + 96))(v21, v17);
    uint64_t v106 = (uint64_t)v160;
    sub_20A8C6990();
    uint64_t v102 = 0;
    uint64_t v86 = v201;
    uint64_t v103 = v191;
    uint64_t v104 = v162;
    uint64_t v105 = v161;
  }
  else
  {
    uint64_t v102 = 1;
    uint64_t v103 = v191;
    uint64_t v104 = v162;
    uint64_t v105 = v161;
    uint64_t v106 = (uint64_t)v160;
  }
LABEL_32:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56))(v106, v102, 1, v104);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v106, 1, v104) == 1)
  {
    sub_20A680D34(v106, &qword_26AC69960, MEMORY[0x263F79B40]);
  }
  else
  {
    uint64_t v107 = v147;
    (*(void (**)(char *, uint64_t, uint64_t))(v105 + 32))(v147, v106, v104);
    sub_20A682788((unint64_t *)&unk_26AC69950, 255, MEMORY[0x263F79B40]);
    sub_20A8C45B0();
    (*(void (**)(char *, uint64_t))(v105 + 8))(v107, v104);
  }
  uint64_t v108 = sub_20A8C79E0();
  uint64_t v109 = *(void *)(v108 + 16);
  if (v109)
  {
    id v110 = *(void (**)(char *, uint64_t, uint64_t))(v192 + 16);
    uint64_t v111 = *(unsigned __int8 *)(v192 + 80);
    uint64_t v200 = v108;
    uint64_t v112 = v108 + ((v111 + 32) & ~v111);
    id v113 = (unsigned int (**)(char *, uint64_t))(v192 + 88);
    int v114 = *MEMORY[0x263F59FD8];
    id v115 = (void (**)(char *, uint64_t))(v192 + 8);
    uint64_t v116 = *(void *)(v192 + 72);
    uint64_t v117 = v149;
    while (1)
    {
      v110(v117, v112, v17);
      if ((*v113)(v117, v17) == v114) {
        break;
      }
      (*v115)(v117, v17);
      v112 += v116;
      if (!--v109)
      {
        uint64_t v118 = 1;
        uint64_t v86 = v201;
        uint64_t v119 = v166;
        uint64_t v120 = v165;
        uint64_t v121 = v164;
        uint64_t v103 = v191;
        uint64_t v122 = (uint64_t)v163;
        goto LABEL_42;
      }
    }
    (*(void (**)(char *, uint64_t))(v192 + 96))(v117, v17);
    uint64_t v122 = (uint64_t)v163;
    sub_20A8C6B60();
    uint64_t v118 = 0;
    uint64_t v86 = v201;
    uint64_t v119 = v166;
    uint64_t v120 = v165;
    uint64_t v121 = v164;
    uint64_t v103 = v191;
  }
  else
  {
    uint64_t v118 = 1;
    uint64_t v119 = v166;
    uint64_t v120 = v165;
    uint64_t v121 = v164;
    uint64_t v122 = (uint64_t)v163;
  }
LABEL_42:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56))(v122, v118, 1, v121);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v122, 1, v121) == 1)
  {
    sub_20A680D34(v122, &qword_26AC676E0, MEMORY[0x263F79D08]);
  }
  else
  {
    uint64_t v123 = v122;
    uint64_t v124 = v148;
    (*(void (**)(char *, uint64_t, uint64_t))(v103 + 32))(v148, v123, v121);
    sub_20A682788(&qword_26AC699B0, 255, MEMORY[0x263F79D08]);
    sub_20A8C45B0();
    (*(void (**)(char *, uint64_t))(v103 + 8))(v124, v121);
  }
  uint64_t v126 = v187;
  double v125 = v188;
  uint64_t v127 = v120;
  uint64_t v128 = v186;
  (*(void (**)(char *, uint64_t, uint64_t))(v187 + 16))(v188, v127, v186);
  int v129 = (*(uint64_t (**)(char *, uint64_t))(v126 + 88))(v125, v128);
  if (v129 == *MEMORY[0x263F59FC8])
  {
    (*(void (**)(char *, uint64_t))(v126 + 96))(v125, v128);
    uint64_t v130 = v152;
    uint64_t v131 = v151;
    uint64_t v132 = v125;
    uint64_t v133 = v153;
    (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v151, v132, v153);
    (*(void (**)(char *, void, uint64_t))(v155 + 104))(v156, *MEMORY[0x263F7A260], v154);
    uint64_t v134 = v157;
    sub_20A8C72B0();
    sub_20A682788((unint64_t *)&unk_26763CF80, 255, MEMORY[0x263F7A238]);
LABEL_53:
    uint64_t v138 = v158;
    sub_20A8C45B0();
    (*(void (**)(char *, uint64_t))(v159 + 8))(v134, v138);
    uint64_t v139 = (uint64_t)v150;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v150, v131, v133);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v130 + 56))(v139, 0, 1, v133);
    sub_20A681588(v86, v139);
    sub_20A680D34(v139, (unint64_t *)&unk_26763CF60, MEMORY[0x263F5A110]);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v131, v133);
    goto LABEL_54;
  }
  if (v129 == *MEMORY[0x263F59FB0])
  {
    (*(void (**)(char *, uint64_t))(v126 + 96))(v125, v128);
    uint64_t v130 = v152;
    uint64_t v131 = v151;
    uint64_t v135 = v125;
    uint64_t v133 = v153;
    (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v151, v135, v153);
    (*(void (**)(char *, void, uint64_t))(v155 + 104))(v156, *MEMORY[0x263F7A248], v154);
    uint64_t v134 = v157;
    sub_20A8C72B0();
    sub_20A682788((unint64_t *)&unk_26763CF80, 255, MEMORY[0x263F7A238]);
    goto LABEL_53;
  }
  if (v129 == *MEMORY[0x263F59FB8])
  {
    (*(void (**)(char *, uint64_t))(v126 + 96))(v125, v128);
    uint64_t v130 = v152;
    uint64_t v131 = v151;
    id v136 = v125;
    uint64_t v133 = v153;
    (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v151, v136, v153);
    (*(void (**)(char *, void, uint64_t))(v155 + 104))(v156, *MEMORY[0x263F7A250], v154);
    uint64_t v134 = v157;
    sub_20A8C72B0();
    sub_20A682788((unint64_t *)&unk_26763CF80, 255, MEMORY[0x263F7A238]);
    goto LABEL_53;
  }
  if (v129 == *MEMORY[0x263F59FD0])
  {
    (*(void (**)(char *, uint64_t))(v126 + 96))(v125, v128);
    uint64_t v130 = v152;
    uint64_t v131 = v151;
    double v137 = v125;
    uint64_t v133 = v153;
    (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v151, v137, v153);
    (*(void (**)(char *, void, uint64_t))(v155 + 104))(v156, *MEMORY[0x263F7A240], v154);
    uint64_t v134 = v157;
    sub_20A8C72B0();
    sub_20A682788((unint64_t *)&unk_26763CF80, 255, MEMORY[0x263F7A238]);
    goto LABEL_53;
  }
  if (v129 == *MEMORY[0x263F59FC0])
  {
    (*(void (**)(char *, void, uint64_t))(v155 + 104))(v156, *MEMORY[0x263F7A258], v154);
    uint64_t v142 = v157;
    sub_20A8C72B0();
    sub_20A682788((unint64_t *)&unk_26763CF80, 255, MEMORY[0x263F7A238]);
    uint64_t v143 = v158;
    sub_20A8C45B0();
    (*(void (**)(char *, uint64_t))(v159 + 8))(v142, v143);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v126 + 8))(v125, v128);
  }
LABEL_54:
  uint64_t v140 = v194;
  sub_20A8C73D0();
  sub_20A682788((unint64_t *)&unk_26763CF70, 255, MEMORY[0x263F7A338]);
  memset(v202, 0, sizeof(v202));
  sub_20A8C45D0();
  sub_20A44349C((uint64_t)v202);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v197, v198);
  return (*(uint64_t (**)(char *, uint64_t))(v195 + 8))(v140, v196);
}

uint64_t sub_20A67FAA8(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v51 = a2;
  uint64_t v47 = a3;
  uint64_t v48 = a4;
  uint64_t v53 = sub_20A8C78F0();
  uint64_t v45 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v49 = v5;
  int v58 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_20A8C79F0();
  uint64_t v50 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v46 = v6;
  uint64_t v56 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A682724(0, &qword_26AC699E0, MEMORY[0x263F79DF8], MEMORY[0x263F8D8F0]);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v54 = (uint64_t)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v55 = (uint64_t)&v39 - v12;
  sub_20A682724(0, &qword_26763CF58, MEMORY[0x263F79AA0], v7);
  uint64_t v44 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v44 + 64);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v52 = (uint64_t)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v39 - v16;
  uint64_t v18 = *a1;
  swift_getObjectType();
  id v19 = objc_msgSend(v18, sel_sourceChannel);
  if (v19)
  {
    uint64_t v20 = v19;
    __swift_project_boxed_opaque_existential_1(v51 + 3, v51[6]);
    sub_20A661B70(v20);
    swift_unknownObjectRelease();
    uint64_t v21 = sub_20A8C6890();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v17, 0, 1, v21);
  }
  else
  {
    uint64_t v22 = sub_20A8C6890();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v17, 1, 1, v22);
  }
  uint64_t v23 = v55;
  sub_20A670898(v55);
  uint64_t v24 = sub_20A8C6CB0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 0, 1, v24);
  uint64_t v25 = v51;
  uint64_t v43 = v51[2];
  uint64_t v41 = (uint64_t (*)(uint64_t))MEMORY[0x263F79DF8];
  sub_20A680C2C(v23, v54, &qword_26AC699E0, MEMORY[0x263F79DF8]);
  uint64_t v40 = (uint64_t (*)(uint64_t))MEMORY[0x263F79AA0];
  uint64_t v42 = v17;
  sub_20A680C2C((uint64_t)v17, v52, &qword_26763CF58, MEMORY[0x263F79AA0]);
  uint64_t v26 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v56, v47, v57);
  uint64_t v27 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v58, v48, v53);
  unint64_t v28 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v29 = (v10 + *(unsigned __int8 *)(v44 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  unint64_t v30 = (v14 + *(unsigned __int8 *)(v26 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v31 = (v46 + *(unsigned __int8 *)(v27 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v32 = (v49 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = swift_allocObject();
  uint64_t v34 = v33 + v28;
  uint64_t v35 = v41;
  sub_20A680CB0(v54, v34, &qword_26AC699E0, v41);
  uint64_t v36 = v33 + v29;
  uint64_t v37 = v40;
  sub_20A680CB0(v52, v36, &qword_26763CF58, v40);
  (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v33 + v30, v56, v57);
  (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v33 + v31, v58, v53);
  *(void *)(v33 + v32) = v25;
  swift_retain();
  sub_20A8C48E0();
  swift_release();
  sub_20A680D34(v55, &qword_26AC699E0, v35);
  return sub_20A680D34((uint64_t)v42, &qword_26763CF58, v37);
}

uint64_t sub_20A68008C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v52 = a3;
  uint64_t v53 = a4;
  uint64_t v43 = a2;
  uint64_t v56 = sub_20A8C78F0();
  uint64_t v51 = *(void *)(v56 - 8);
  uint64_t v54 = *(void *)(v51 + 64);
  MEMORY[0x270FA5388](v56);
  uint64_t v55 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C79F0();
  uint64_t v40 = v6;
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v50 = *(void *)(v49 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = v8;
  uint64_t v44 = (uint64_t (*)(uint64_t))MEMORY[0x263F79AA0];
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A682724(0, &qword_26763CF58, MEMORY[0x263F79AA0], MEMORY[0x263F8D8F0]);
  uint64_t v48 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v48 + 64);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v39 = (uint64_t)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v38 - v13;
  uint64_t v15 = (uint64_t (*)(uint64_t))MEMORY[0x263F79DF8];
  uint64_t v38 = (uint64_t (*)(uint64_t))MEMORY[0x263F79DF8];
  sub_20A682724(0, &qword_26AC699E0, MEMORY[0x263F79DF8], v9);
  uint64_t v42 = *(void *)(v16 - 8);
  uint64_t v17 = *(void *)(v42 + 64);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v38 - v20;
  uint64_t v22 = sub_20A8C6CB0();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  uint64_t v47 = v21;
  v23(v21, 1, 1, v22);
  uint64_t v24 = sub_20A8C6890();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  uint64_t v45 = v14;
  v25(v14, 1, 1, v24);
  uint64_t v46 = *(void *)(a2 + 16);
  sub_20A680C2C((uint64_t)v21, (uint64_t)v18, &qword_26AC699E0, v15);
  uint64_t v26 = v44;
  sub_20A680C2C((uint64_t)v14, (uint64_t)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26763CF58, v44);
  uint64_t v27 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v8, v52, v6);
  uint64_t v28 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v55, v53, v56);
  unint64_t v29 = (*(unsigned __int8 *)(v42 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  unint64_t v30 = (v17 + *(unsigned __int8 *)(v48 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  unint64_t v31 = (v11 + *(unsigned __int8 *)(v27 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v32 = (v50 + *(unsigned __int8 *)(v28 + 80) + v31) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v33 = (v54 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v34 = swift_allocObject();
  uint64_t v35 = v34 + v29;
  uint64_t v36 = v38;
  sub_20A680CB0((uint64_t)v18, v35, &qword_26AC699E0, v38);
  sub_20A680CB0(v39, v34 + v30, &qword_26763CF58, v26);
  (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v34 + v31, v41, v40);
  (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v34 + v32, v55, v56);
  *(void *)(v34 + v33) = v43;
  swift_retain();
  sub_20A8C48E0();
  swift_release();
  sub_20A680D34((uint64_t)v45, &qword_26763CF58, v26);
  return sub_20A680D34((uint64_t)v47, &qword_26AC699E0, v36);
}

void *sub_20A6805A8(void *a1)
{
  id v1 = a1;
  sub_20A4756FC();
  type metadata accessor for SKError(0);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  sub_20A682788((unint64_t *)&unk_26763CFA0, 255, type metadata accessor for SKError);
  sub_20A8C23C0();

  return a1;
}

uint64_t sub_20A680674@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v42 = a2;
  uint64_t v41 = *v3;
  uint64_t v5 = sub_20A8C7C90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C7770();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v38 - v15;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v8, a1, v5, v14);
  if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v8, v5) == *MEMORY[0x263F5A230])
  {
    uint64_t v17 = *MEMORY[0x263F7A6C0];
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
    v39(v16, v17, v9);
    sub_20A8C4890();
    sub_20A4342F4((uint64_t)(v3 + 3), (uint64_t)v48);
    sub_20A4342F4((uint64_t)(v3 + 8), (uint64_t)v47);
    uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v48, v49);
    uint64_t v40 = &v38;
    double v19 = MEMORY[0x270FA5388](v18);
    uint64_t v21 = (uint64_t *)((char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v22 + 16))(v21, v19);
    uint64_t v23 = *v21;
    uint64_t v24 = type metadata accessor for AnalyticsChannelDataFactory();
    v46[3] = v24;
    v46[4] = &off_26BE69918;
    v46[0] = v23;
    uint64_t v38 = v16;
    uint64_t v25 = v41;
    uint64_t v26 = swift_allocObject();
    uint64_t v27 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v46, v24);
    double v28 = MEMORY[0x270FA5388](v27);
    unint64_t v30 = (uint64_t *)((char *)&v38 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v31 + 16))(v30, v28);
    uint64_t v32 = *v30;
    uint64_t v44 = v24;
    uint64_t v45 = &off_26BE69918;
    *(void *)&long long v43 = v32;
    v39(v12, *MEMORY[0x263F7A6C8], v9);
    uint64_t v33 = sub_20A8C4890();
    swift_release();
    uint64_t v34 = *(void (**)(char *, uint64_t))(v10 + 8);
    v34(v12, v9);
    *(void *)(v26 + 16) = v33;
    sub_20A42BEBC(&v43, v26 + 24);
    sub_20A42BEBC(v47, v26 + 64);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
    uint64_t v35 = v42;
    v42[3] = v25;
    v35[4] = sub_20A682788((unint64_t *)&unk_26AC76D30, v36, (void (*)(uint64_t))type metadata accessor for PurchaseTransactionTracker);
    *uint64_t v35 = v26;
    return ((uint64_t (*)(char *, uint64_t))v34)(v38, v9);
  }
  else
  {
    uint64_t result = sub_20A8CF520();
    __break(1u);
  }
  return result;
}

uint64_t sub_20A680B78()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PurchaseTransactionTracker()
{
  return self;
}

uint64_t sub_20A680BE4(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  return sub_20A67CE70(a1, a2);
}

uint64_t sub_20A680C08@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A680674(a1, a2);
}

uint64_t sub_20A680C2C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_20A682724(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A680CB0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_20A682724(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A680D34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A682724(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A680DA4()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 16) + 64), *(void *)(*(void *)(v0 + 16) + 88));
  return sub_20A8CD610();
}

uint64_t sub_20A680E10(void **a1)
{
  uint64_t v3 = *(void *)(sub_20A8C79F0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_20A8C78F0() - 8);
  return sub_20A67FAA8(a1, *(void **)(v1 + 16), v1 + v4, v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));
}

uint64_t sub_20A680EF8(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_20A8C79F0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_20A8C78F0() - 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_20A68008C(a1, v7, v1 + v4, v8);
}

uint64_t objectdestroyTm_7()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A682724(0, &qword_26AC699E0, MEMORY[0x263F79DF8], MEMORY[0x263F8D8F0]);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(*(void *)(v2 - 8) + 64);
  sub_20A682724(0, &qword_26763CF58, MEMORY[0x263F79AA0], v1);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v24 = (v4 + v5 + v7) & ~v7;
  uint64_t v21 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v23 = sub_20A8C79F0();
  uint64_t v8 = *(void *)(v23 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v20 = *(void *)(v8 + 64);
  uint64_t v22 = sub_20A8C78F0();
  uint64_t v10 = *(void *)(v22 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = v0 + v4;
  uint64_t v13 = sub_20A8C6CB0();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v15 = sub_20A8C6890();
  uint64_t v16 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v0 + v24, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v0 + v24, v15);
  }
  uint64_t v17 = (v24 + v21 + v9) & ~v9;
  uint64_t v18 = (v17 + v20 + v11) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v17, v23);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v18, v22);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A681370(uint64_t a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A682724(0, &qword_26AC699E0, MEMORY[0x263F79DF8], MEMORY[0x263F8D8F0]);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  sub_20A682724(0, &qword_26763CF58, MEMORY[0x263F79AA0], v3);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(*(void *)(v7 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v10 = *(void *)(sub_20A8C79F0() - 8);
  unint64_t v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v10 + 64);
  uint64_t v13 = *(void *)(sub_20A8C78F0() - 8);
  uint64_t v14 = v1 + ((v11 + v12 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));

  return sub_20A67D7E0(a1, v1 + v5, v1 + v8, v1 + v11, v14);
}

void sub_20A681588(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a1;
  uint64_t v3 = sub_20A8C6AD0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C6F10();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v32 = v7;
  uint64_t v33 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v31 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x263F5A110];
  sub_20A682724(0, (unint64_t *)&unk_26763CF60, MEMORY[0x263F5A110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v30 - v12;
  uint64_t v14 = sub_20A8C7BD0();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (id *)((char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v17);
  double v19 = (char *)&v30 - v18;
  uint64_t v20 = v10;
  uint64_t v22 = v21;
  sub_20A680C2C(a2, (uint64_t)v13, (unint64_t *)&unk_26763CF60, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v13, 1, v14) == 1)
  {
    sub_20A680D34((uint64_t)v13, (unint64_t *)&unk_26763CF60, MEMORY[0x263F5A110]);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v13, v14);
  (*(void (**)(id *, char *, uint64_t))(v22 + 16))(v16, v19, v14);
  int v23 = (*(uint64_t (**)(id *, uint64_t))(v22 + 88))(v16, v14);
  if (v23 == *MEMORY[0x263F5A100])
  {
    (*(void (**)(id *, uint64_t))(v22 + 96))(v16, v14);
    id v24 = *v16;
    switch((unint64_t)sub_20A6805A8(v24))
    {
      case 0uLL:
        (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79C98], v3);
        uint64_t v25 = v31;
        sub_20A8C6F00();
        sub_20A682788((unint64_t *)&unk_26763CF90, 255, MEMORY[0x263F79F68]);
        goto LABEL_31;
      case 1uLL:
        (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79BF8], v3);
        uint64_t v25 = v31;
        sub_20A8C6F00();
        sub_20A682788((unint64_t *)&unk_26763CF90, 255, MEMORY[0x263F79F68]);
        goto LABEL_31;
      case 2uLL:
        (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79C28], v3);
        uint64_t v25 = v31;
        sub_20A8C6F00();
        sub_20A682788((unint64_t *)&unk_26763CF90, 255, MEMORY[0x263F79F68]);
        goto LABEL_31;
      case 3uLL:
        (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79C10], v3);
        uint64_t v25 = v31;
        sub_20A8C6F00();
        sub_20A682788((unint64_t *)&unk_26763CF90, 255, MEMORY[0x263F79F68]);
        goto LABEL_31;
      case 4uLL:
        (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79C38], v3);
        uint64_t v25 = v31;
        sub_20A8C6F00();
        sub_20A682788((unint64_t *)&unk_26763CF90, 255, MEMORY[0x263F79F68]);
        goto LABEL_31;
      case 5uLL:
        (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79C70], v3);
        uint64_t v25 = v31;
        sub_20A8C6F00();
        sub_20A682788((unint64_t *)&unk_26763CF90, 255, MEMORY[0x263F79F68]);
        goto LABEL_31;
      case 6uLL:
        (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79C80], v3);
        uint64_t v25 = v31;
        sub_20A8C6F00();
        sub_20A682788((unint64_t *)&unk_26763CF90, 255, MEMORY[0x263F79F68]);
        goto LABEL_31;
      case 7uLL:
        (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79C90], v3);
        uint64_t v25 = v31;
        sub_20A8C6F00();
        sub_20A682788((unint64_t *)&unk_26763CF90, 255, MEMORY[0x263F79F68]);
        goto LABEL_31;
      case 8uLL:
        (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79C50], v3);
        uint64_t v25 = v31;
        sub_20A8C6F00();
        sub_20A682788((unint64_t *)&unk_26763CF90, 255, MEMORY[0x263F79F68]);
        goto LABEL_31;
      case 9uLL:
        (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79C88], v3);
        uint64_t v25 = v31;
        sub_20A8C6F00();
        sub_20A682788((unint64_t *)&unk_26763CF90, 255, MEMORY[0x263F79F68]);
        goto LABEL_31;
      case 0xAuLL:
        (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79C68], v3);
        uint64_t v25 = v31;
        sub_20A8C6F00();
        sub_20A682788((unint64_t *)&unk_26763CF90, 255, MEMORY[0x263F79F68]);
        goto LABEL_31;
      case 0xBuLL:
        (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79C60], v3);
        uint64_t v25 = v31;
        sub_20A8C6F00();
        sub_20A682788((unint64_t *)&unk_26763CF90, 255, MEMORY[0x263F79F68]);
        goto LABEL_31;
      case 0xCuLL:
        (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79C18], v3);
        uint64_t v25 = v31;
        sub_20A8C6F00();
        sub_20A682788((unint64_t *)&unk_26763CF90, 255, MEMORY[0x263F79F68]);
        goto LABEL_31;
      case 0xDuLL:
        (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79C48], v3);
        uint64_t v25 = v31;
        sub_20A8C6F00();
        sub_20A682788((unint64_t *)&unk_26763CF90, 255, MEMORY[0x263F79F68]);
        goto LABEL_31;
      case 0xEuLL:
        (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79C30], v3);
        uint64_t v25 = v31;
        sub_20A8C6F00();
        sub_20A682788((unint64_t *)&unk_26763CF90, 255, MEMORY[0x263F79F68]);
        goto LABEL_31;
      case 0xFuLL:
        (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79C20], v3);
        uint64_t v25 = v31;
        sub_20A8C6F00();
        sub_20A682788((unint64_t *)&unk_26763CF90, 255, MEMORY[0x263F79F68]);
        goto LABEL_31;
      case 0x10uLL:
        (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79C78], v3);
        uint64_t v25 = v31;
        sub_20A8C6F00();
        sub_20A682788((unint64_t *)&unk_26763CF90, 255, MEMORY[0x263F79F68]);
        goto LABEL_31;
      case 0x11uLL:
        (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79C08], v3);
        uint64_t v25 = v31;
        sub_20A8C6F00();
        sub_20A682788((unint64_t *)&unk_26763CF90, 255, MEMORY[0x263F79F68]);
        goto LABEL_31;
      case 0x12uLL:
        (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79C40], v3);
        uint64_t v25 = v31;
        sub_20A8C6F00();
        sub_20A682788((unint64_t *)&unk_26763CF90, 255, MEMORY[0x263F79F68]);
        goto LABEL_31;
      case 0x13uLL:
        (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79C58], v3);
        uint64_t v25 = v31;
        sub_20A8C6F00();
        sub_20A682788((unint64_t *)&unk_26763CF90, 255, MEMORY[0x263F79F68]);
LABEL_31:
        uint64_t v29 = v32;
        sub_20A8C45B0();

        (*(void (**)(char *, uint64_t))(v33 + 8))(v25, v29);
        break;
      default:

        break;
    }
  }
  else
  {
    if (v23 == *MEMORY[0x263F5A0F8])
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v14);
      (*(void (**)(id *, uint64_t))(v22 + 96))(v16, v14);

      return;
    }
    if (v23 != *MEMORY[0x263F5A108])
    {
      double v28 = *(void (**)(char *, uint64_t))(v22 + 8);
      v28(v19, v14);
      v28((char *)v16, v14);
      return;
    }
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79C00], v3);
    uint64_t v26 = v31;
    sub_20A8C6F00();
    sub_20A682788((unint64_t *)&unk_26763CF90, 255, MEMORY[0x263F79F68]);
    uint64_t v27 = v32;
    sub_20A8C45B0();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v26, v27);
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v14);
}

void sub_20A682724(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A682788(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for StockChartRangeCalloutRenderer()
{
  return self;
}

id sub_20A6827F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void **)(a1 + OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_dateLabel);
  objc_msgSend(v6, sel_setFrame_, *(double *)(a4 + 8), *(double *)(a4 + 16), *(double *)(a4 + 24), *(double *)(a4 + 32));
  objc_msgSend(v6, sel_setAdjustsFontSizeToFitWidth_, 1);
  objc_msgSend(v6, sel_setAttributedText_, *(void *)a4);
  uint64_t v7 = *(void **)(a1 + OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_priceChangeLabel);
  objc_msgSend(v7, sel_setFrame_, *(double *)(a4 + 48), *(double *)(a4 + 56), *(double *)(a4 + 64), *(double *)(a4 + 72));
  objc_msgSend(v7, sel_setAttributedText_, *(void *)(a4 + 40));
  unint64_t v8 = *(void **)(a1 + OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_percentageChangeLabel);
  objc_msgSend(v8, sel_setFrame_, *(double *)(a4 + 88), *(double *)(a4 + 96), *(double *)(a4 + 104), *(double *)(a4 + 112));
  uint64_t v9 = *(void *)(a4 + 80);

  return objc_msgSend(v8, sel_setAttributedText_, v9);
}

uint64_t type metadata accessor for ForYouFeedMastheadView()
{
  uint64_t result = qword_26AC80C60;
  if (!qword_26AC80C60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A682938()
{
  return swift_initClassMetadata2();
}

char *sub_20A682990(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = qword_26AC80C50;
  id v12 = objc_allocWithZone(MEMORY[0x263F828E0]);
  uint64_t v13 = v4;
  *(void *)&v5[v11] = objc_msgSend(v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v14 = qword_26AC80C58;
  *(void *)&v13[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v15 = qword_26AC80C40;
  *(void *)&v13[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v16 = qword_26AC80C48;
  *(void *)&v13[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v17 = qword_26763CFB0;
  *(void *)&v13[v17] = objc_msgSend(objc_allocWithZone((Class)sub_20A8C7960()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v25.receiver = v13;
  v25.super_class = ObjectType;
  uint64_t v18 = (char *)objc_msgSendSuper2(&v25, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v19 = *(void *)&v18[qword_26AC80C48];
  uint64_t v20 = v18;
  objc_msgSend(v20, sel_addSubview_, v19);
  uint64_t v21 = *(void **)&v20[qword_26AC80C50];
  objc_msgSend(v20, sel_addSubview_, v21);
  objc_msgSend(v20, sel_addSubview_, *(void *)&v20[qword_26AC80C58]);
  objc_msgSend(v20, sel_addSubview_, *(void *)&v20[qword_26AC80C40]);
  objc_msgSend(v20, sel_addSubview_, *(void *)&v20[qword_26763CFB0]);
  uint64_t v22 = *MEMORY[0x263F83268];
  id v23 = v21;
  objc_msgSend(v23, sel_setAccessibilityTraits_, v22);

  return v20;
}

char *sub_20A682BCC(double a1, double a2, double a3, double a4)
{
  return sub_20A682990(a1, a2, a3, a4);
}

void sub_20A682BF0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_20A682DBC();
}

void sub_20A682C18(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  id v1 = v2.receiver;
  objc_msgSendSuper2(&v2, sel_layoutSubviews);
  sub_20A8CEE90();
}

void sub_20A682C78()
{
  id v1 = *(void **)(v0 + qword_26763CFB0);
}

void sub_20A682CE8(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + qword_26763CFB0);
}

uint64_t sub_20A682D64()
{
  return type metadata accessor for ForYouFeedMastheadView();
}

void sub_20A682D6C(void *a1)
{
  id v1 = a1;
  sub_20A8CEE90();
}

void sub_20A682DBC()
{
  uint64_t v1 = qword_26AC80C50;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = qword_26AC80C58;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = qword_26AC80C40;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v4 = qword_26AC80C48;
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v5 = qword_26763CFB0;
  *(void *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)sub_20A8C7960()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_20A8CF520();
  __break(1u);
}

ValueMetadata *type metadata accessor for AlertWatchlistRemoval()
{
  return &type metadata for AlertWatchlistRemoval;
}

uint64_t sub_20A682F24(uint64_t a1, uint64_t a2)
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v5 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  sub_20A43F778();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_20A8D3DC0;
  *(void *)(v6 + 56) = MEMORY[0x263F8D310];
  *(void *)(v6 + 64) = sub_20A43F830();
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_20A8CE2B0();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_20A683060(uint64_t a1, uint64_t a2)
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v5 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  sub_20A43F778();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_20A8D3DC0;
  *(void *)(v6 + 56) = MEMORY[0x263F8D310];
  *(void *)(v6 + 64) = sub_20A43F830();
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_20A8CE2B0();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_20A68319C()
{
  return sub_20A682F24(*v0, v0[1]);
}

uint64_t sub_20A6831A4()
{
  return sub_20A683060(*v0, v0[1]);
}

uint64_t sub_20A6831AC()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t sub_20A68326C()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t type metadata accessor for PlacardViewStyler()
{
  return self;
}

uint64_t sub_20A683350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 40);
  uint64_t v8 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  uint64_t v12 = v10(a1, v7, v9);
  double v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A431A50((uint64_t)v15, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

uint64_t type metadata accessor for ForYouFeedBlueprintCellPrefetcher()
{
  return self;
}

uint64_t sub_20A6834C4()
{
  return MEMORY[0x263F7E138];
}

uint64_t sub_20A6834D0()
{
  uint64_t v0 = sub_20A8CCE00();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ForYouFeedLayoutModel();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A683664();
  sub_20A8C9150();
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_20A6836C8((uint64_t)v6);
  }
  (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v6, v0);
  sub_20A8CC750();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_20A683664()
{
  if (!qword_26AC6A180)
  {
    type metadata accessor for ForYouFeedLayoutModel();
    sub_20A44DBB0();
    unint64_t v0 = sub_20A8C9160();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A180);
    }
  }
}

uint64_t sub_20A6836C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ForYouFeedLayoutModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_20A683724(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v17 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = *(uint64_t *)((char *)a2 + v6 + 8);
    *uint64_t v7 = *(uint64_t *)((char *)a2 + v6);
    v7[1] = v9;
    uint64_t v10 = type metadata accessor for AttributionSource();
    uint64_t v11 = *(int *)(v10 + 20);
    __dst = (char *)v7 + v11;
    uint64_t v23 = v10;
    uint64_t v12 = &v8[v11];
    uint64_t v13 = sub_20A8C2530();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      sub_20A4845D0(0);
      memcpy(__dst, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    uint64_t v18 = *(int *)(v23 + 24);
    uint64_t v19 = *(void **)&v8[v18];
    *(void *)((char *)v7 + v18) = v19;
    id v20 = v19;
  }
  return v3;
}

void sub_20A6838E4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for AttributionSource();
  uint64_t v6 = v4 + *(int *)(v5 + 20);
  uint64_t v7 = sub_20A8C2530();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = *(void **)(v4 + *(int *)(v5 + 24));
}

void *sub_20A6839D0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = *(void *)((char *)a2 + v5 + 8);
  *uint64_t v6 = *(void *)((char *)a2 + v5);
  v6[1] = v8;
  uint64_t v9 = type metadata accessor for AttributionSource();
  uint64_t v10 = *(int *)(v9 + 20);
  __dst = (char *)v6 + v10;
  uint64_t v21 = v9;
  uint64_t v11 = &v7[v10];
  uint64_t v12 = sub_20A8C2530();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
  {
    sub_20A4845D0(0);
    memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
  }
  uint64_t v16 = *(int *)(v21 + 24);
  uint64_t v17 = *(void **)&v7[v16];
  *(void *)((char *)v6 + v16) = v17;
  id v18 = v17;
  return a1;
}

void *sub_20A683B40(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  *uint64_t v7 = *(void *)((char *)a2 + v6);
  v7[1] = *(void *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = type metadata accessor for AttributionSource();
  uint64_t v9 = *(int *)(v23 + 20);
  uint64_t v10 = (char *)v7 + v9;
  uint64_t v11 = &v8[v9];
  uint64_t v12 = sub_20A8C2530();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_20A4845D0(0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v18 = *(int *)(v23 + 24);
  uint64_t v19 = *(void **)((char *)v7 + v18);
  id v20 = *(void **)&v8[v18];
  *(void *)((char *)v7 + v18) = v20;
  id v21 = v20;

  return a1;
}

_OWORD *sub_20A683D38(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  *(_OWORD *)((char *)a1 + v4) = *(_OWORD *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for AttributionSource();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = &v5[v8];
  uint64_t v10 = &v6[v8];
  uint64_t v11 = sub_20A8C2530();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_20A4845D0(0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(void *)&v5[*(int *)(v7 + 24)] = *(void *)&v6[*(int *)(v7 + 24)];
  return a1;
}

void *sub_20A683E7C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)((char *)a2 + v7 + 8);
  *uint64_t v8 = *(void *)((char *)a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v23 = type metadata accessor for AttributionSource();
  uint64_t v11 = *(int *)(v23 + 20);
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = &v9[v11];
  uint64_t v14 = sub_20A8C2530();
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_20A4845D0(0);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  uint64_t v20 = *(int *)(v23 + 24);
  id v21 = *(void **)((char *)v8 + v20);
  *(void *)((char *)v8 + v20) = *(void *)&v9[v20];

  return a1;
}

uint64_t sub_20A684050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A684064);
}

uint64_t sub_20A684064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for AttributionSource();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_20A684114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A684128);
}

uint64_t sub_20A684128(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for AttributionSource();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for StockListNewsAttributionBlueprintModifier()
{
  uint64_t result = qword_26763CFB8;
  if (!qword_26763CFB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A68421C()
{
  uint64_t result = type metadata accessor for AttributionSource();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A6842B4(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v27 = a3;
  double v28 = a2;
  v22[1] = a1;
  uint64_t v24 = sub_20A8C8B80();
  uint64_t v4 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A684B6C(0, &qword_26AC6A428, MEMORY[0x263F7D950]);
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v22 - v8;
  sub_20A4B9B70();
  MEMORY[0x270FA5388](v10 - 8);
  sub_20A684B6C(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v23 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v22 - v13;
  uint64_t v30 = v3;
  uint64_t v15 = sub_20A44A87C((void (*)(char *))sub_20A684C8C, (uint64_t)v29, (uint64_t)v31);
  sub_20A684B6C(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  uint64_t v17 = v16;
  uint64_t v18 = sub_20A684C2C((unint64_t *)&unk_26AC69F20);
  uint64_t v19 = sub_20A684C2C(&qword_26AC69F18);
  MEMORY[0x21051E250](v15, v17, v18, v19);
  type metadata accessor for StockListModel(0);
  sub_20A42D40C();
  sub_20A684CAC(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
  sub_20A8CBB20();
  uint64_t v20 = v24;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F7D528], v24);
  sub_20A4FBD1C();
  sub_20A8C9B50();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v20);
  v28(v9);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v23);
}

uint64_t sub_20A6846C0(uint64_t a1, uint64_t a2)
{
  sub_20A4AE540();
  MEMORY[0x270FA5388](v3 - 8);
  sub_20A684B6C(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  sub_20A8C8820();
  long long v12 = v16;
  long long v13 = v17;
  uint64_t v14 = v18;
  char v15 = v19;
  uint64_t v11 = a2;
  uint64_t v4 = sub_20A44A8E4((void (*)(char *))sub_20A684CF4, (uint64_t)v10, (uint64_t)v20);
  sub_20A42D93C();
  uint64_t v6 = v5;
  uint64_t v7 = sub_20A684CAC(&qword_26AC69D98, (void (*)(uint64_t))sub_20A42D93C);
  uint64_t v8 = sub_20A684CAC(&qword_26AC69D90, (void (*)(uint64_t))sub_20A42D93C);
  MEMORY[0x21051E250](v4, v6, v7, v8);
  type metadata accessor for StockListModel(0);
  sub_20A42D40C();
  sub_20A684CAC(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
  return sub_20A8C8810();
}

uint64_t sub_20A6848B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for AttributionSource();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (void *)((char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (void *)((char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v23 - v13;
  sub_20A42D93C();
  uint64_t v16 = v15;
  sub_20A8C8330();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_20A684D14((uint64_t)v14, type metadata accessor for StockListModel);
      uint64_t v18 = type metadata accessor for StockListNewsAttributionBlueprintModifier();
      sub_20A632BD4(a2 + *(int *)(v18 + 20), (uint64_t)v8);
      uint64_t *v11 = sub_20A6868E8(v8);
      v11[1] = v19;
      v11[2] = v20;
      v11[3] = v21;
      swift_storeEnumTagMultiPayload();
      sub_20A684CAC(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
      return sub_20A8C8320();
    }
  }
  else
  {
    sub_20A684D14((uint64_t)v14, type metadata accessor for StockListStockModel);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(a3, a1, v16);
}

uint64_t sub_20A684ADC()
{
  return sub_20A684CAC(&qword_26763CFC8, (void (*)(uint64_t))type metadata accessor for StockListNewsAttributionBlueprintModifier);
}

uint64_t sub_20A684B24()
{
  return sub_20A684CAC(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
}

void sub_20A684B6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for StockListSectionDescriptor;
    v8[1] = type metadata accessor for StockListModel(255);
    v8[2] = sub_20A42D40C();
    v8[3] = sub_20A684CAC(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A684C2C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A684B6C(255, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A684C8C(uint64_t a1)
{
  return sub_20A6846C0(a1, *(void *)(v1 + 16));
}

uint64_t sub_20A684CAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A684CF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A6848B8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_20A684D14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A684D74@<X0>(uint64_t a1@<X8>)
{
  sub_20A685D78(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  sub_20A44E1C8();
  sub_20A8CE840();
  sub_20A8CE8A0();
  if (v10[4] == v10[0])
  {
    sub_20A685D78(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    uint64_t v4 = (void (*)(void *, void))sub_20A8CE8C0();
    uint64_t v6 = v5;
    sub_20A685D78(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v7 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a1, v6, v7);
    v4(v10, 0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
  }
}

uint64_t sub_20A684F34@<X0>(uint64_t a1@<X8>)
{
  sub_20A8C2E00();
  sub_20A685D30(&qword_26AC68DC8, MEMORY[0x263F7A980]);
  sub_20A8CE840();
  sub_20A8CE8A0();
  if (v9[4] == v9[0])
  {
    uint64_t v2 = sub_20A8C4020();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    uint64_t v4 = (void (*)(void *, void))sub_20A8CE8C0();
    uint64_t v6 = v5;
    uint64_t v7 = sub_20A8C4020();
    uint64_t v8 = *(void *)(v7 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, v6, v7);
    v4(v9, 0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
}

uint64_t sub_20A6850D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
  sub_20A685B18(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  sub_20A685BD8((unint64_t *)&unk_26AC6ACE0, (unint64_t *)&qword_26AC6ACF0, v2);
  sub_20A8CE840();
  sub_20A8CE8A0();
  if (v11[4] == v11[0])
  {
    sub_20A685B18(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a1, 1, 1, v3);
  }
  else
  {
    uint64_t v5 = (void (*)(void *, void))sub_20A8CE8C0();
    uint64_t v7 = v6;
    sub_20A685B18(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, v7, v8);
    v5(v11, 0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
  }
}

uint64_t sub_20A6852BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
  sub_20A685B18(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  sub_20A685BD8(&qword_26AC69F40, (unint64_t *)&qword_26AC69F48, v2);
  sub_20A8CE840();
  sub_20A8CE8A0();
  if (v11[4] == v11[0])
  {
    sub_20A42D93C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a1, 1, 1, v3);
  }
  else
  {
    uint64_t v5 = (void (*)(void *, void))sub_20A8CE8C0();
    uint64_t v7 = v6;
    sub_20A42D93C();
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, v7, v8);
    v5(v11, 0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
  }
}

uint64_t sub_20A685470(uint64_t a1)
{
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = sub_20A8CF2B0();
    uint64_t v5 = v4;
    uint64_t v6 = sub_20A8CF330();
    char v8 = MEMORY[0x2105275F0](v3, v5, v6, v7);
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_3:
      sub_20A6860C4(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_20A685E6C(v3, v5, v2 != 0, a1);
    uint64_t v9 = v13;
    sub_20A6860C4(v3, v5, v2 != 0);
    return v9;
  }
  uint64_t result = sub_20A6860D0(a1);
  if ((v12 & 1) == 0)
  {
    uint64_t v5 = v11;
    if (*(_DWORD *)(a1 + 36) == v11)
    {
      uint64_t v3 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t StockListCompositionalLayoutOptionsProvider.layoutOptions(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v37 = a1;
  uint64_t v3 = sub_20A8CADF0();
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v35 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A685B18(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v32 - v9;
  sub_20A47113C();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_20A8CB370();
  uint64_t v14 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v33 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (uint64_t *)((char *)&v32 - v17);
  uint64_t v39 = *(void *)(v2 + 16);
  uint64_t v19 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
  sub_20A685B18(0, &qword_26AC6A048, MEMORY[0x263F7D550]);
  sub_20A685BD8((unint64_t *)&qword_26AC6A040, &qword_26AC6A048, v19);
  sub_20A8C9490();
  sub_20A6850D0((uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_20A685B18(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  uint64_t v21 = v20;
  uint64_t v22 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v13, 1, v20) == 1)
  {
    sub_20A685C1C((uint64_t)v13);
    uint64_t v23 = (unsigned int *)MEMORY[0x263F7DFD8];
    uint64_t v24 = v38;
    goto LABEL_9;
  }
  uint64_t v25 = sub_20A8C8830();
  uint64_t v27 = v26;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v21);
  if (v25 == 0x7961646F74 && v27 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = v38;
LABEL_7:
    *uint64_t v18 = &unk_26BE5EF40;
    uint64_t v23 = (unsigned int *)MEMORY[0x263F7DFE0];
    goto LABEL_9;
  }
  char v28 = sub_20A8CF760();
  swift_bridgeObjectRelease();
  uint64_t v24 = v38;
  if (v28) {
    goto LABEL_7;
  }
  uint64_t v23 = (unsigned int *)MEMORY[0x263F7DFD8];
LABEL_9:
  uint64_t v29 = v37;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v18, *v23, v24);
  id v30 = objc_msgSend(v29, sel_horizontalSizeClass);
  if ((unint64_t)v30 < 2)
  {
    sub_20A8CADD0();
    sub_20A8CADC0();
    sub_20A8CAD90();
    sub_20A8CADA0();
    (*(void (**)(char *, void *, uint64_t))(v14 + 16))(v33, v18, v24);
LABEL_14:
    sub_20A8CADB0();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v35);
    return (*(uint64_t (**)(void *, uint64_t))(v14 + 8))(v18, v24);
  }
  if (v30 == (id)2)
  {
    sub_20A8CADE0();
    sub_20A8CADC0();
    sub_20A8CAD90();
    (*(void (**)(char *, void *, uint64_t))(v14 + 16))(v33, v18, v24);
    goto LABEL_14;
  }
  sub_20A8CADD0();
  return (*(uint64_t (**)(void *, uint64_t))(v14 + 8))(v18, v24);
}

void sub_20A685B18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for StockListSectionDescriptor;
    v8[1] = type metadata accessor for StockListModel(255);
    v8[2] = sub_20A42D40C();
    v8[3] = sub_20A685D30(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A685BD8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A685B18(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A685C1C(uint64_t a1)
{
  sub_20A47113C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t StockListCompositionalLayoutOptionsProvider.deinit()
{
  swift_release();
  return v0;
}

uint64_t StockListCompositionalLayoutOptionsProvider.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_20A685CD0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StockListCompositionalLayoutOptionsProvider.layoutOptions(for:)(a1, a2);
}

uint64_t type metadata accessor for StockListCompositionalLayoutOptionsProvider()
{
  return self;
}

uint64_t method lookup function for StockListCompositionalLayoutOptionsProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StockListCompositionalLayoutOptionsProvider);
}

uint64_t sub_20A685D30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A685D78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for ForYouFeedSectionDescriptor();
    v8[1] = type metadata accessor for ForYouFeedModel();
    v8[2] = sub_20A685D30(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
    v8[3] = sub_20A685D30((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_20A685E6C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      if (a4 < 0) {
        uint64_t v7 = a4;
      }
      else {
        uint64_t v7 = a4 & 0xFFFFFFFFFFFFFF8;
      }
      MEMORY[0x210527620](a1, a2, v7);
      sub_20A686158();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (a3) {
    goto LABEL_13;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_13:
  if (sub_20A8CF2E0() != *(_DWORD *)(a4 + 36))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_20A8CF2F0();
  sub_20A686158();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v4 = v17;
  swift_unknownObjectRelease();
  uint64_t v8 = sub_20A8CEF20();
  uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v8 & ~v9;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_26:

    __break(1u);
    goto LABEL_27;
  }
  id v10 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v11 = sub_20A8CEF30();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v6 = (v6 + 1) & v12;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_26;
      }
      id v13 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v14 = sub_20A8CEF30();
    }
    while ((v14 & 1) == 0);
  }

LABEL_20:
  uint64_t v15 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v16 = v15;
}

uint64_t sub_20A6860C4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A6860D0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

unint64_t sub_20A686158()
{
  unint64_t result = qword_26763CFD0;
  if (!qword_26763CFD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26763CFD0);
  }
  return result;
}

uint64_t *sub_20A686198(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    uint64_t v6 = sub_20A8C9A00();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20A686288(uint64_t a1)
{
  uint64_t v2 = sub_20A8C9A00();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_20A6862EC(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = sub_20A8C9A00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_20A686380(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_20A686424(a1);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = sub_20A8C9A00();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20A686424(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ManageWatchlistsLayoutSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ManageWatchlistsLayoutSectionDescriptor()
{
  uint64_t result = qword_26763CFD8;
  if (!qword_26763CFD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A6864CC(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = sub_20A8C9A00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_20A686560(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_20A686424(a1);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = sub_20A8C9A00();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20A686604()
{
  uint64_t result = sub_20A8C9A00();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

double sub_20A68668C()
{
  uint64_t v1 = sub_20A8C9A00();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6867D0(v0, (uint64_t)v7);
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_20A8C99E0();
  double v9 = v8;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v9;
}

uint64_t sub_20A6867D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ManageWatchlistsLayoutSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for TodayModel()
{
  return &type metadata for TodayModel;
}

uint64_t sub_20A686844(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_20A8CF760(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_20A8CF760();
    }
  }
  return result;
}

uint64_t sub_20A6868E8(uint64_t *a1)
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v3 = self;
  id v4 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v5 = sub_20A8CE2B0();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A909410);
  sub_20A8C2370();

  sub_20A43F778();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_20A8D3DC0;
  uint64_t v9 = *a1;
  uint64_t v8 = a1[1];
  *(void *)(v7 + 56) = MEMORY[0x263F8D310];
  *(void *)(v7 + 64) = sub_20A43F830();
  *(void *)(v7 + 32) = v9;
  *(void *)(v7 + 40) = v8;
  swift_bridgeObjectRetain();
  sub_20A8CE250();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A686AD8((uint64_t)a1);
  return v5;
}

uint64_t sub_20A686AD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AttributionSource();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A686B34(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_20A8CF8D0();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v3, v3[3]);
    sub_20A8CF770();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    return sub_20A8C2780();
  }
  return result;
}

uint64_t StocksEngagementEventProcessor.process<A>(processEvent:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v48 = a1;
  sub_20A687228();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for EngagementEvent();
  uint64_t v45 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v42 = (void (*)(char *, uint64_t))((char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v46 = a2;
  uint64_t v11 = sub_20A8C4530();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  char v14 = (char *)&v40 - v13;
  __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR____TtC8StocksUI30StocksEngagementEventProcessor_featureAvailability), *(void *)(v3 + OBJC_IVAR____TtC8StocksUI30StocksEngagementEventProcessor_featureAvailability + 24));
  uint64_t result = sub_20A8C3830();
  if (result)
  {
    if (qword_26AC67738 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_20A8C7DF0();
    uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)qword_26AC67718);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v48, v11);
    uint64_t v49 = v17;
    uint64_t v18 = sub_20A8C7DD0();
    os_log_type_t v19 = sub_20A8CEA00();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v21 = MEMORY[0x263F8EE58];
    if (v20)
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v50 = v4;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v24 = swift_slowAlloc();
      *(void *)&long long v44 = v18;
      uint64_t v25 = v24;
      v52[0] = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      long long v43 = v23 + 4;
      uint64_t v26 = sub_20A8C4520();
      uint64_t v51 = sub_20A687610(v26, v27, v52);
      sub_20A8CF1C0();
      uint64_t v21 = MEMORY[0x263F8EE58];
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      char v28 = (void *)v44;
      _os_log_impl(&dword_20A414000, (os_log_t)v44, v19, "received event: %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x210528850](v25, -1, -1);
      uint64_t v29 = v23;
      uint64_t v4 = v50;
      MEMORY[0x210528850](v29, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
    uint64_t result = *(void *)(v4 + OBJC_IVAR____TtC8StocksUI30StocksEngagementEventProcessor_eventTranslators);
    uint64_t v30 = *(void *)(result + 16);
    if (v30)
    {
      uint64_t v41 = (void *)(v4 + OBJC_IVAR____TtC8StocksUI30StocksEngagementEventProcessor_appReviewRequestManager);
      uint64_t v50 = *(void *)(v4 + OBJC_IVAR____TtC8StocksUI30StocksEngagementEventProcessor_jsonDecoder);
      uint64_t v31 = result + 32;
      v45 += 6;
      uint64_t v40 = result;
      swift_bridgeObjectRetain();
      *(void *)&long long v32 = 136315138;
      long long v44 = v32;
      long long v43 = (uint8_t *)(v21 + 8);
      uint64_t v33 = v46;
      uint64_t v34 = v48;
      do
      {
        sub_20A4342F4(v31, (uint64_t)v52);
        uint64_t v35 = v53;
        uint64_t v36 = v54;
        __swift_project_boxed_opaque_existential_1(v52, v53);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8))(v34, v50, v33, a3, v35, v36);
        if ((*v45)(v9, 1, v47) == 1)
        {
          uint64_t v37 = (uint64_t (*)(void))sub_20A687228;
          uint64_t v38 = (uint64_t)v9;
        }
        else
        {
          uint64_t v39 = v42;
          sub_20A6876E4((uint64_t)v9, (uint64_t)v42);
          __swift_project_boxed_opaque_existential_1(v41, v41[3]);
          sub_20A8ADC64(v39);
          uint64_t v37 = (uint64_t (*)(void))type metadata accessor for EngagementEvent;
          uint64_t v38 = (uint64_t)v39;
        }
        sub_20A687748(v38, v37);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
        v31 += 40;
        --v30;
      }
      while (v30);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_20A687228()
{
  if (!qword_26AC679E8)
  {
    type metadata accessor for EngagementEvent();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC679E8);
    }
  }
}

id StocksEngagementEventProcessor.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void StocksEngagementEventProcessor.init()()
{
}

id StocksEngagementEventProcessor.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_20A6873B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F0C4A8](a1, ObjectType, a3);
}

uint64_t sub_20A687400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F0C4B0](a1, ObjectType, a3);
}

uint64_t sub_20A687450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F0C4B8](a1, ObjectType, a3);
}

uint64_t sub_20A6874A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F0C4C8](a1, ObjectType, a3);
}

uint64_t sub_20A6874F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F0C4C0](a1, a2, ObjectType, a4);
}

uint64_t sub_20A687548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F0C4A0](a1, a2, ObjectType, a4);
}

uint64_t sub_20A6875A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F0C4D0](a1, a2, a3, a4, ObjectType, a6);
}

uint64_t sub_20A687610(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_20A68783C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_20A4ED764((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_20A4ED764((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_20A6876E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EngagementEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A687748(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_20A6877AC()
{
  unint64_t result = qword_26AC6C290;
  if (!qword_26AC6C290)
  {
    type metadata accessor for StocksEngagementEventProcessor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6C290);
  }
  return result;
}

uint64_t type metadata accessor for StocksEngagementEventProcessor()
{
  return self;
}

uint64_t method lookup function for StocksEngagementEventProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StocksEngagementEventProcessor);
}

uint64_t sub_20A68783C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_20A8CF1D0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_20A6879F8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_20A8CF420();
  if (!v8)
  {
    sub_20A8CF510();
    __break(1u);
LABEL_17:
    uint64_t result = sub_20A8CF590();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_20A6879F8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_20A687A90(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_20A687C08(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_20A687C08(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_20A687A90(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_20A803788(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_20A8CF3D0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_20A8CF510();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_20A8CE400();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_20A8CF590();
    __break(1u);
LABEL_14:
    uint64_t result = sub_20A8CF510();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_20A687C08(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_20A687D54();
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

void sub_20A687D54()
{
  if (!qword_26AC80128)
  {
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC80128);
    }
  }
}

uint64_t SidebarConfiguration.shouldCollapseSidebar.getter()
{
  return *v0;
}

uint64_t SidebarConfiguration.shouldCollapseSidebar.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*SidebarConfiguration.shouldCollapseSidebar.modify())()
{
  return nullsub_1;
}

uint64_t SidebarConfiguration.init(_:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_20A8C2120();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v52 = v4;
  uint64_t v53 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v51 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C2170();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v45 - v12;
  sub_20A68865C(0, &qword_26AC68C50, MEMORY[0x263F06370]);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  os_log_type_t v19 = (char *)v45 - v18;
  sub_20A8C2190();
  sub_20A688424((uint64_t)v19, (uint64_t)v16);
  uint64_t v20 = sub_20A8C2220();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v16, 1, v20) == 1)
  {
    uint64_t v22 = sub_20A8C2530();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(a1, v22);
    sub_20A6886B0((uint64_t)v19, &qword_26AC68C50, MEMORY[0x263F06370]);
    char v23 = 0;
    uint64_t v24 = (uint64_t)v16;
    goto LABEL_25;
  }
  uint64_t v48 = v19;
  uint64_t v25 = sub_20A8C2180();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v20);
  if (!v25)
  {
    uint64_t v41 = sub_20A8C2530();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(a1, v41);
    char v23 = 0;
    goto LABEL_24;
  }
  uint64_t v26 = *(void *)(v25 + 16);
  if (!v26)
  {
    char v23 = 0;
    goto LABEL_23;
  }
  uint64_t v46 = a1;
  uint64_t v47 = a2;
  unint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  unint64_t v28 = v25 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v50 = (void (**)(char *, uint64_t))(v53 + 8);
  uint64_t v29 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v53 = *(void *)(v8 + 72);
  v45[1] = v25;
  swift_bridgeObjectRetain();
  uint64_t v49 = v8 + 16;
  while (1)
  {
    v27(v13, v28, v7);
    if (sub_20A8C2150() == 0x657370616C6C6F63 && v31 == 0xEF72616265646953)
    {
      swift_bridgeObjectRelease();
      v27(v10, (unint64_t)v13, v7);
    }
    else
    {
      char v32 = sub_20A8CF760();
      swift_bridgeObjectRelease();
      v27(v10, (unint64_t)v13, v7);
      if ((v32 & 1) == 0) {
        goto LABEL_6;
      }
    }
    uint64_t v33 = sub_20A8C2160();
    if (!v34)
    {
LABEL_6:
      uint64_t v30 = *v29;
      (*v29)(v10, v7);
      v30(v13, v7);
      goto LABEL_7;
    }
    uint64_t v54 = v33;
    uint64_t v55 = v34;
    uint64_t v35 = v51;
    sub_20A8C2100();
    sub_20A48C5C0();
    sub_20A8CF210();
    (*v50)(v35, v52);
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_20A8CE300();
    uint64_t v38 = v37;
    swift_bridgeObjectRelease();
    if (v36 == 1702195828 && v38 == 0xE400000000000000) {
      break;
    }
    char v39 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    uint64_t v40 = *v29;
    (*v29)(v10, v7);
    v40(v13, v7);
    if (v39) {
      goto LABEL_21;
    }
LABEL_7:
    v28 += v53;
    if (!--v26)
    {
      char v23 = 0;
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v42 = *v29;
  (*v29)(v10, v7);
  v42(v13, v7);
LABEL_21:
  char v23 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  a1 = v46;
  a2 = v47;
LABEL_23:
  uint64_t v43 = sub_20A8C2530();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(a1, v43);
  swift_bridgeObjectRelease();
LABEL_24:
  uint64_t v24 = (uint64_t)v48;
LABEL_25:
  uint64_t result = sub_20A6886B0(v24, &qword_26AC68C50, MEMORY[0x263F06370]);
  *a2 = v23;
  return result;
}

uint64_t sub_20A688424(uint64_t a1, uint64_t a2)
{
  sub_20A68865C(0, &qword_26AC68C50, MEMORY[0x263F06370]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SidebarConfiguration.init(_:userActivity:)@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  sub_20A68865C(0, (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v13 - v5);
  uint64_t v7 = type metadata accessor for StocksActivity(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  StocksV2UserActivityDeserializer.deserialize(userActivity:)(a1, v6);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    swift_release();

    uint64_t result = sub_20A6886B0((uint64_t)v6, (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
    char v12 = 0;
  }
  else
  {
    sub_20A491064((uint64_t)v6, (uint64_t)v10);
    char v12 = StocksActivity.collapseSidebar.getter();
    swift_release();

    uint64_t result = sub_20A4EF9E0((uint64_t)v10);
  }
  *a2 = v12 & 1;
  return result;
}

void sub_20A68865C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A6886B0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A68865C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SidebarConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SidebarConfiguration(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A688878);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SidebarConfiguration()
{
  return &type metadata for SidebarConfiguration;
}

id sub_20A6888B0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, unsigned __int8 a10)
{
  if (a10 <= 1u) {
    return a9;
  }
  return result;
}

void destroy for StockListLayoutSectionDescriptor(uint64_t a1)
{
}

uint64_t initializeWithCopy for StockListLayoutSectionDescriptor(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = (void *)a2[8];
  sub_20A6888B0(*a2, v4, v5, v6, v7, v8, v9, v10, v11, *((unsigned char *)a2 + 72));
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 72) = v13;
  return a1;
}

uint64_t *assignWithCopy for StockListLayoutSectionDescriptor(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = (void *)a2[8];
  sub_20A6888B0(*a2, v4, v5, v6, v7, v8, v9, v10, v11, *((unsigned char *)a2 + 72));
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  uint64_t v17 = a1[5];
  uint64_t v18 = a1[6];
  uint64_t v19 = a1[7];
  uint64_t v20 = (void *)a1[8];
  unsigned __int8 v21 = *((unsigned char *)a1 + 72);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = (uint64_t)v11;
  *((unsigned char *)a1 + 72) = v23;
  sub_20A455AD4(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t *assignWithTake for StockListLayoutSectionDescriptor(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 64);
  char v4 = *(unsigned char *)(a2 + 72);
  uint64_t v5 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  uint64_t v10 = a1[5];
  uint64_t v11 = a1[6];
  uint64_t v12 = a1[7];
  uint64_t v13 = (void *)a1[8];
  unsigned __int8 v14 = *((unsigned char *)a1 + 72);
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v15;
  long long v16 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)a1 + 3) = v16;
  a1[8] = v3;
  *((unsigned char *)a1 + 72) = v4;
  sub_20A455AD4(v5, v7, v6, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockListLayoutSectionDescriptor(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 73)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 72);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StockListLayoutSectionDescriptor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 72) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_20A688BC8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 72) <= 1u) {
    return *(unsigned __int8 *)(a1 + 72);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_20A688BE0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 72) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StockListLayoutSectionDescriptor()
{
  return &type metadata for StockListLayoutSectionDescriptor;
}

uint64_t sub_20A688C1C()
{
  sub_20A688E18(v0, &v12);
  if (v20 && v20 != 1)
  {
    uint64_t v9 = 0;
  }
  else
  {
    long long v1 = v12;
    uint64_t v2 = v13;
    uint64_t v3 = v14;
    uint64_t v4 = v15;
    uint64_t v5 = v16;
    uint64_t v6 = v17;
    uint64_t v7 = v18;
    uint64_t v8 = v19;
    sub_20A5A34EC();
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_20A8D3DC0;
    *(void *)(v9 + 56) = &type metadata for StockListSectionHeaderViewLayoutAttributes;
    *(void *)(v9 + 64) = sub_20A512300();
    uint64_t v10 = swift_allocObject();
    *(void *)(v9 + 32) = v10;
    *(_OWORD *)(v10 + 16) = v1;
    *(void *)(v10 + 32) = v2;
    *(void *)(v10 + 40) = v3;
    *(void *)(v10 + 48) = v4;
    *(void *)(v10 + 56) = v5;
    *(void *)(v10 + 64) = v6;
    *(void *)(v10 + 72) = v7;
    *(void *)(v10 + 80) = v8;
  }
  sub_20A688E78((uint64_t)v0);
  return v9;
}

uint64_t sub_20A688D10()
{
  sub_20A688E18(v0, v2);
  return sub_20A688C1C();
}

uint64_t sub_20A688D48(uint64_t a1)
{
  unint64_t v2 = sub_20A688EC8();

  return MEMORY[0x270F7C578](a1, v2);
}

uint64_t sub_20A688D84()
{
  sub_20A688DC4();

  return sub_20A8CACE0();
}

unint64_t sub_20A688DC4()
{
  unint64_t result = qword_26AC7B478;
  if (!qword_26AC7B478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7B478);
  }
  return result;
}

_OWORD *sub_20A688E18(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  long long v2 = a1[1];
  long long v3 = a1[2];
  long long v4 = a1[3];
  *(_OWORD *)((char *)a2 + 57) = *(_OWORD *)((char *)a1 + 57);
  a2[2] = v3;
  a2[3] = v4;
  a2[1] = v2;
  return a2;
}

uint64_t sub_20A688E40()
{
  return swift_deallocObject();
}

uint64_t sub_20A688E78(uint64_t a1)
{
  return a1;
}

unint64_t sub_20A688EC8()
{
  unint64_t result = qword_26763D008;
  if (!qword_26763D008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D008);
  }
  return result;
}

uint64_t type metadata accessor for StockFeedScrollTestCase()
{
  return self;
}

uint64_t type metadata accessor for TickerBlueprintViewSupplementaryViewProvider()
{
  return self;
}

uint64_t sub_20A689128()
{
  return sub_20A6891B8(&qword_26AC6FF50, (void (*)(uint64_t))type metadata accessor for TickerLayoutModel);
}

uint64_t sub_20A689170()
{
  return sub_20A6891B8(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
}

uint64_t sub_20A6891B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A689200()
{
}

uint64_t sub_20A68925C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_20A8C3400();
    swift_retain();
    sub_20A6893D0(v2, v1);
    swift_bridgeObjectRelease();
    swift_release();
    swift_retain();
    sub_20A8C5D30();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for ChangeWatchlistDisplayMenuGroupOptionProvider()
{
  return self;
}

uint64_t sub_20A689340()
{
  uint64_t v1 = sub_20A8C3400();
  swift_retain();
  sub_20A6893D0(v1, v0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  sub_20A8C5D30();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_20A6893D0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for ChangeWatchlistDisplayContext(0);
  uint64_t v23 = *(void *)(v5 - 8);
  uint64_t v24 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (v8)
  {
    uint64_t v19 = v2;
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_20A68C7FC(0, v8, 0);
    uint64_t v9 = v25;
    uint64_t v10 = sub_20A8C3410();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    unsigned __int8 v21 = (void *)(a2 + 40);
    uint64_t v22 = v10;
    uint64_t v20 = *(void *)(v11 + 72);
    uint64_t v13 = (void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    do
    {
      uint64_t v14 = a2;
      __swift_project_boxed_opaque_existential_1(v21, *(void *)(a2 + 64));
      sub_20A8C3600();
      (*v13)(&v7[*(int *)(v24 + 20)], v12, v22);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v25 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_20A68C7FC(0, *(void *)(v9 + 16) + 1, 1);
        uint64_t v9 = v25;
      }
      unint64_t v17 = *(void *)(v9 + 16);
      unint64_t v16 = *(void *)(v9 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_20A68C7FC(v16 > 1, v17 + 1, 1);
        uint64_t v9 = v25;
      }
      *(void *)(v9 + 16) = v17 + 1;
      sub_20A689ADC((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v17);
      v12 += v20;
      --v8;
      a2 = v14;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_20A689624(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (uint64_t)v3;
  v12[0] = MEMORY[0x263F8EE78];
  sub_20A6899C8(0, &qword_26AC82C20, (uint64_t (*)(uint64_t))sub_20A689994, MEMORY[0x263F7CE10]);
  swift_allocObject();
  v3[2] = sub_20A8C5D40();
  v3[3] = a1;
  void v3[4] = a2;
  sub_20A4342F4((uint64_t)a3, (uint64_t)(v3 + 5));
  swift_getObjectType();
  uint64_t v8 = qword_26AC6AC30;
  swift_unknownObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_weakInit();
  sub_20A8C40E0();
  sub_20A8C8CA0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  if (qword_26AC6AC00 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_weakInit();
  sub_20A8C8CA0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  if (qword_26AC6AC58 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_weakInit();
  sub_20A8C8CA0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  sub_20A689A88();
  swift_retain();
  sub_20A8C3670();
  swift_release();
  uint64_t v9 = sub_20A8C3400();
  swift_retain();
  uint64_t v10 = sub_20A6893D0(v9, v4);
  swift_bridgeObjectRelease();
  swift_release();
  v12[0] = v10;
  swift_retain();
  sub_20A8C5D30();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  return v4;
}

void sub_20A689994(uint64_t a1)
{
}

void sub_20A6899C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A689A2C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A689A64()
{
  return sub_20A68925C();
}

uint64_t sub_20A689A6C()
{
  return sub_20A68925C();
}

unint64_t sub_20A689A88()
{
  unint64_t result = qword_26AC82CB8;
  if (!qword_26AC82CB8)
  {
    type metadata accessor for ChangeWatchlistDisplayMenuGroupOptionProvider();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC82CB8);
  }
  return result;
}

uint64_t sub_20A689ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChangeWatchlistDisplayContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_20A689B40(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    long long v8 = *((_OWORD *)a2 + 3);
    a1[2] = *((_OWORD *)a2 + 2);
    a1[3] = v8;
    long long v9 = *((_OWORD *)a2 + 5);
    a1[4] = *((_OWORD *)a2 + 4);
    a1[5] = v9;
    long long v10 = *((_OWORD *)a2 + 7);
    uint64_t v11 = *(int *)(a3 + 32);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    a1[6] = *((_OWORD *)a2 + 6);
    a1[7] = v10;
    uint64_t v14 = sub_20A8CAC10();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = *(int *)(a3 + 36);
    unint64_t v16 = (_OWORD *)((char *)v4 + v15);
    unint64_t v17 = (_OWORD *)((char *)a2 + v15);
    long long v18 = v17[1];
    *unint64_t v16 = *v17;
    v16[1] = v18;
  }
  return v4;
}

uint64_t sub_20A689C48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 32);
  uint64_t v3 = sub_20A8CAC10();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

_OWORD *sub_20A689CB0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  long long v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  long long v9 = a2[7];
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  a1[6] = a2[6];
  a1[7] = v9;
  uint64_t v13 = sub_20A8CAC10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 36);
  uint64_t v15 = (_OWORD *)((char *)a1 + v14);
  unint64_t v16 = (_OWORD *)((char *)a2 + v14);
  long long v17 = v16[1];
  _OWORD *v15 = *v16;
  v15[1] = v17;
  return a1;
}

void *sub_20A689D68(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  uint64_t v6 = *(int *)(a3 + 32);
  long long v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8CAC10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  v11[2] = v12[2];
  v11[3] = v12[3];
  return a1;
}

_OWORD *sub_20A689E98(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  long long v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  long long v9 = a2[7];
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  a1[6] = a2[6];
  a1[7] = v9;
  uint64_t v13 = sub_20A8CAC10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 36);
  uint64_t v15 = (_OWORD *)((char *)a1 + v14);
  unint64_t v16 = (_OWORD *)((char *)a2 + v14);
  long long v17 = v16[1];
  _OWORD *v15 = *v16;
  v15[1] = v17;
  return a1;
}

_OWORD *sub_20A689F50(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  long long v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  long long v9 = a2[7];
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  a1[6] = a2[6];
  a1[7] = v9;
  uint64_t v13 = sub_20A8CAC10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 36);
  uint64_t v15 = (_OWORD *)((char *)a1 + v14);
  unint64_t v16 = (_OWORD *)((char *)a2 + v14);
  long long v17 = v16[1];
  _OWORD *v15 = *v16;
  v15[1] = v17;
  return a1;
}

uint64_t sub_20A68A008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A68A01C);
}

uint64_t sub_20A68A01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 32);
  uint64_t v5 = sub_20A8CAC10();
  long long v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_20A68A08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A68A0A0);
}

uint64_t sub_20A68A0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 32);
  uint64_t v6 = sub_20A8CAC10();
  long long v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t type metadata accessor for ForYouTitleViewLayoutAttributes()
{
  uint64_t result = qword_26AC7A5E0;
  if (!qword_26AC7A5E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A68A160()
{
  uint64_t result = sub_20A8CAC10();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A68A1FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  uint64_t v5 = sub_20A8CAC10();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_20A68A270()
{
  sub_20A68A330(&qword_26AC7A5D0);

  return sub_20A8CACE0();
}

uint64_t sub_20A68A2C8()
{
  return sub_20A68A330(&qword_26AC7A5D8);
}

uint64_t sub_20A68A2FC()
{
  return sub_20A68A330(&qword_26AC7A5D0);
}

uint64_t sub_20A68A330(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ForYouTitleViewLayoutAttributes();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

StocksUI::ArticleUserInfoModel::UserInfoType_optional __swiftcall ArticleUserInfoModel.UserInfoType.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *unint64_t v1 = v2;
  return (StocksUI::ArticleUserInfoModel::UserInfoType_optional)rawValue;
}

uint64_t ArticleUserInfoModel.UserInfoType.rawValue.getter()
{
  return *v0;
}

void *sub_20A68A398@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_20A68A3B8(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_20A68A3C4()
{
  return sub_20A8CE5B0();
}

uint64_t sub_20A68A424()
{
  return sub_20A8CE590();
}

uint64_t sub_20A68A474(unsigned __int8 *a1, char *a2)
{
  return sub_20A44F428(*a1, *a2);
}

uint64_t sub_20A68A480()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A68A570()
{
  sub_20A8CE360();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A68A648()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A68A734@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_20A68FD5C();
  *a1 = result;
  return result;
}

void sub_20A68A764(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEA00000000007265;
  uint64_t v3 = 0x696669746E656469;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000074;
      uint64_t v3 = 0x6E69727065756C62;
      goto LABEL_3;
    case 2:
      *a1 = 1701869940;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 7107189;
      a1[1] = 0xE300000000000000;
      break;
    case 4:
      *a1 = 0x6B72616D6B6F6F62;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_20A68A818()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E69727065756C62;
      break;
    case 2:
      uint64_t result = 1701869940;
      break;
    case 3:
      uint64_t result = 7107189;
      break;
    case 4:
      uint64_t result = 0x6B72616D6B6F6F62;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A68A8BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_20A68FD5C();
  *a1 = result;
  return result;
}

void sub_20A68A8E4(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_20A68A8F0(uint64_t a1)
{
  unint64_t v2 = sub_20A68B434();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A68A92C(uint64_t a1)
{
  unint64_t v2 = sub_20A68B434();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ArticleUserInfoModel.init(identifier:type:url:blueprintProvider:bookmark:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  char v13 = *a3;
  *a8 = a1;
  a8[1] = a2;
  uint64_t v14 = (int *)type metadata accessor for ArticleUserInfoModel();
  *((unsigned char *)a8 + v14[6]) = v13;
  sub_20A5A0EE4(a4, (uint64_t)a8 + v14[5]);
  uint64_t result = sub_20A68AA44(a5, (uint64_t)a8 + v14[7]);
  unint64_t v16 = (void *)((char *)a8 + v14[8]);
  *unint64_t v16 = a6;
  v16[1] = a7;
  return result;
}

uint64_t type metadata accessor for ArticleUserInfoModel()
{
  uint64_t result = qword_26AC67C40;
  if (!qword_26AC67C40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A68AA44(uint64_t a1, uint64_t a2)
{
  sub_20A68AAD4(0, (unint64_t *)&unk_26AC69578, &qword_26AC69570, MEMORY[0x263F58EA0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20A68AAD4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_20A43F7E0(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t ArticleUserInfoModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v74 = sub_20A8C5220();
  uint64_t v68 = *(char **)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  uint64_t v73 = (char *)v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_20A8C5240();
  uint64_t v75 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v65 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C5280();
  uint64_t v66 = *(void *)(v5 - 8);
  uint64_t v67 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v69 = (char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A68F1A4(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v71 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v55 - v10;
  sub_20A68CD5C(0, &qword_26763D040, MEMORY[0x263F8E040]);
  uint64_t v13 = v12;
  uint64_t v76 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v55 - v14;
  uint64_t v16 = type metadata accessor for ArticleUserInfoModel();
  MEMORY[0x270FA5388](v16);
  long long v18 = (void *)((char *)v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A68B434();
  uint64_t v19 = v77;
  sub_20A8CF8E0();
  if (v19) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v20 = v11;
  uint64_t v77 = (int *)v16;
  uint64_t v21 = v76;
  uint64_t v64 = v18;
  LOBYTE(v78[0]) = 0;
  uint64_t v22 = sub_20A8CF620();
  uint64_t v24 = v64;
  *uint64_t v64 = v22;
  v24[1] = v25;
  char v80 = 2;
  sub_20A68B488();
  sub_20A8CF640();
  *((unsigned char *)v24 + v77[6]) = v78[0];
  uint64_t v26 = sub_20A8C2530();
  LOBYTE(v78[0]) = 3;
  sub_20A6900F4(&qword_26AC83090, MEMORY[0x263F06EA8]);
  uint64_t v27 = (uint64_t)v20;
  sub_20A8CF610();
  uint64_t v60 = a1;
  uint64_t v58 = v26;
  unint64_t v28 = v68;
  uint64_t v29 = v69;
  uint64_t v30 = v21;
  uint64_t v31 = v27;
  char v32 = v77;
  uint64_t v33 = (uint64_t)v64;
  sub_20A5A0EE4(v31, (uint64_t)v64 + v77[5]);
  LOBYTE(v78[0]) = 4;
  uint64_t v34 = sub_20A8CF5E0();
  uint64_t v35 = (uint64_t *)(v33 + v32[8]);
  *uint64_t v35 = v34;
  v35[1] = v36;
  sub_20A68FF80(0, (unint64_t *)&qword_26AC7F800, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  char v80 = 1;
  sub_20A68CF2C(&qword_26763D050);
  sub_20A8CF610();
  uint64_t v59 = 0;
  uint64_t v38 = v78[0];
  uint64_t v39 = v70;
  if (v78[0])
  {
    uint64_t v56 = v15;
    uint64_t v57 = v13;
    int64_t v40 = *(void *)(v78[0] + 16);
    if (v40)
    {
      v78[0] = MEMORY[0x263F8EE78];
      sub_20A68CD0C(0, v40, 0);
      uint64_t v41 = v78[0];
      uint64_t v42 = v58;
      uint64_t v43 = (char **)(*(void *)(v58 - 8) + 56);
      uint64_t v68 = *v43;
      unsigned int v79 = *MEMORY[0x263F58C60];
      uint64_t v62 = (void (**)(char *, void, uint64_t))(v28 + 104);
      uint64_t v63 = v43;
      uint64_t v61 = v75 + 32;
      v55[1] = v38;
      uint64_t v44 = v38 + 40;
      uint64_t v45 = v65;
      uint64_t v46 = v71;
      do
      {
        uint64_t v47 = v42;
        ((void (*)(char *, uint64_t, uint64_t))v68)(v46, 1, 1);
        swift_bridgeObjectRetain_n();
        uint64_t v48 = v73;
        sub_20A8C4B80();
        (*v62)(v48, v79, v74);
        sub_20A8C5230();
        swift_bridgeObjectRelease();
        v78[0] = v41;
        unint64_t v50 = *(void *)(v41 + 16);
        unint64_t v49 = *(void *)(v41 + 24);
        if (v50 >= v49 >> 1)
        {
          sub_20A68CD0C(v49 > 1, v50 + 1, 1);
          uint64_t v45 = v65;
          uint64_t v41 = v78[0];
        }
        v44 += 16;
        *(void *)(v41 + 16) = v50 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v75 + 32))(v41+ ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))+ *(void *)(v75 + 72) * v50, v45, v72);
        --v40;
        uint64_t v42 = v47;
      }
      while (v40);
      swift_bridgeObjectRelease();
      uint64_t v33 = (uint64_t)v64;
      uint64_t v29 = v69;
      uint64_t v30 = v76;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v41 = MEMORY[0x263F8EE78];
    }
    uint64_t v52 = v66;
    uint64_t v51 = v67;
    *uint64_t v29 = v41;
    (*(void (**)(void *, void, uint64_t))(v52 + 104))(v29, *MEMORY[0x263F58C98], v51);
    uint64_t v53 = sub_20A8C56C0();
    swift_allocObject();
    uint64_t v54 = sub_20A8C56B0();
    v78[3] = v53;
    v78[4] = MEMORY[0x263F58E60];
    v78[0] = v54;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v56, v57);
    sub_20A68AA44((uint64_t)v78, v33 + v77[7]);
    uint64_t v39 = v70;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v13);
    uint64_t v37 = v33 + v32[7];
    *(void *)(v37 + 32) = 0;
    *(_OWORD *)uint64_t v37 = 0u;
    *(_OWORD *)(v37 + 16) = 0u;
  }
  sub_20A68B4DC(v33, v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  return sub_20A68B540(v33);
}

unint64_t sub_20A68B434()
{
  unint64_t result = qword_26AC71708;
  if (!qword_26AC71708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC71708);
  }
  return result;
}

unint64_t sub_20A68B488()
{
  unint64_t result = qword_26763D048;
  if (!qword_26763D048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D048);
  }
  return result;
}

uint64_t sub_20A68B4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArticleUserInfoModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A68B540(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ArticleUserInfoModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ArticleUserInfoModel.encode(to:)(void *a1)
{
  uint64_t v2 = sub_20A8C5280();
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v31 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A68F1A4(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v29 - v5;
  uint64_t v7 = sub_20A8C2530();
  uint64_t v34 = *(int **)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A68CD5C(0, &qword_26AC7FE60, MEMORY[0x263F8E0C0]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v29 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A68B434();
  uint64_t v15 = v35;
  sub_20A8CF8F0();
  LOBYTE(v39[0]) = 0;
  uint64_t v16 = v36;
  sub_20A8CF6B0();
  if (v16) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v30 = v9;
  uint64_t v36 = v12;
  long long v18 = (int *)type metadata accessor for ArticleUserInfoModel();
  LOBYTE(v39[0]) = *(unsigned char *)(v15 + v18[6]);
  LOBYTE(v37) = 2;
  sub_20A68CDC0();
  sub_20A8CF6E0();
  uint64_t v19 = v14;
  sub_20A4E9450(v15 + v18[5], (uint64_t)v6);
  uint64_t v20 = v34;
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v34 + 6))(v6, 1, v7) == 1)
  {
    uint64_t v21 = v11;
    sub_20A596854((uint64_t)v6);
  }
  else
  {
    uint64_t v22 = v30;
    (*((void (**)(char *, char *, uint64_t))v20 + 4))(v30, v6, v7);
    LOBYTE(v39[0]) = 3;
    sub_20A6900F4(&qword_26AC68C68, MEMORY[0x263F06EA8]);
    sub_20A8CF6E0();
    uint64_t v23 = v7;
    uint64_t v21 = v11;
    (*((void (**)(char *, uint64_t))v20 + 1))(v22, v23);
  }
  uint64_t v24 = v33;
  sub_20A68CE14(v15 + v18[7], (uint64_t)&v37);
  if (v38)
  {
    uint64_t v34 = v18;
    sub_20A42BEBC(&v37, (uint64_t)v39);
    __swift_project_boxed_opaque_existential_1(v39, v39[3]);
    sub_20A8C5810();
    uint64_t v25 = v31;
    sub_20A8C5D50();
    swift_release();
    uint64_t v26 = sub_20A68BB98();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v24);
    *(void *)&long long v37 = v26;
    char v40 = 1;
    sub_20A68FF80(0, (unint64_t *)&qword_26AC7F800, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    sub_20A68CF2C(&qword_26AC81808);
    sub_20A8CF6E0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
    long long v18 = v34;
  }
  else
  {
    sub_20A68CEA4((uint64_t)&v37);
  }
  uint64_t v27 = v15 + v18[8];
  uint64_t v28 = v36;
  if (*(void *)(v27 + 8))
  {
    LOBYTE(v39[0]) = 4;
    sub_20A8CF6B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v19, v21);
}

uint64_t sub_20A68BB98()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8C5250();
  uint64_t v40 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (uint64_t *)((char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_20A8C5270();
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C5240();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8C5280();
  uint64_t v13 = *(void *)(v12 - 8);
  double v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v16, v1, v12, v14);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v16, v12);
  if (v17 == *MEMORY[0x263F58C88])
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v16, v12);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v16, v8);
    sub_20A68FF80(0, (unint64_t *)&qword_26AC800B8, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_20A8D3DC0;
    *(void *)(v18 + 32) = sub_20A8C5210();
    *(void *)(v18 + 40) = v19;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v18;
  }
  if (v17 == *MEMORY[0x263F58C98])
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v16, v12);
    uint64_t v20 = *(void *)v16;
    int64_t v21 = *(void *)(*(void *)v16 + 16);
    if (v21)
    {
      uint64_t v43 = MEMORY[0x263F8EE78];
      sub_20A68C494(0, v21, 0);
      uint64_t v23 = *(void *)(v9 + 16);
      uint64_t v22 = v9 + 16;
      uint64_t v24 = *(unsigned __int8 *)(v22 + 64);
      uint64_t v38 = v20;
      uint64_t v25 = v20 + ((v24 + 32) & ~v24);
      uint64_t v39 = *(void *)(v22 + 56);
      uint64_t v40 = v23;
      uint64_t v41 = v22;
      uint64_t v42 = v8;
      do
      {
        ((void (*)(char *, uint64_t, uint64_t))v40)(v11, v25, v8);
        uint64_t v26 = sub_20A8C5210();
        uint64_t v28 = v27;
        (*(void (**)(char *, uint64_t))(v22 - 8))(v11, v8);
        uint64_t v18 = v43;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_20A68C494(0, *(void *)(v18 + 16) + 1, 1);
          uint64_t v18 = v43;
        }
        unint64_t v30 = *(void *)(v18 + 16);
        unint64_t v29 = *(void *)(v18 + 24);
        if (v30 >= v29 >> 1)
        {
          sub_20A68C494(v29 > 1, v30 + 1, 1);
          uint64_t v18 = v43;
        }
        *(void *)(v18 + 16) = v30 + 1;
        uint64_t v31 = v18 + 16 * v30;
        *(void *)(v31 + 32) = v26;
        *(void *)(v31 + 40) = v28;
        v25 += v39;
        --v21;
        uint64_t v8 = v42;
      }
      while (v21);
      swift_bridgeObjectRelease();
      return v18;
    }
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  if (v17 == *MEMORY[0x263F58C80])
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    return MEMORY[0x263F8EE78];
  }
  if (v17 == *MEMORY[0x263F58C90])
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v16, v12);
    uint64_t v33 = v41;
    uint64_t v32 = v42;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v7, v16, v42);
    sub_20A8C5260();
    uint64_t v34 = v40;
    if ((*(unsigned int (**)(uint64_t *, uint64_t))(v40 + 88))(v4, v2) == *MEMORY[0x263F58C70])
    {
      (*(void (**)(uint64_t *, uint64_t))(v34 + 96))(v4, v2);
      uint64_t v35 = *v4;
      uint64_t v36 = v4[1];
      swift_bridgeObjectRelease();
      sub_20A68FF80(0, (unint64_t *)&qword_26AC800B8, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_20A8D3DC0;
      *(void *)(v18 + 32) = v35;
      *(void *)(v18 + 40) = v36;
      (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v32);
      return v18;
    }
  }
  else if (v17 == *MEMORY[0x263F58C78])
  {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_20A8CF520();
  __break(1u);
  return result;
}

uint64_t sub_20A68C214@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleUserInfoModel.init(from:)(a1, a2);
}

uint64_t sub_20A68C22C(void *a1)
{
  return ArticleUserInfoModel.encode(to:)(a1);
}

uint64_t sub_20A68C244(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC7FF78, (uint64_t (*)(uint64_t))sub_20A42C698, (uint64_t (*)(void))sub_20A42C698);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C294(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68E534(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_20A68C2B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, (unint64_t *)&qword_26AC7FF20, (uint64_t (*)(uint64_t))sub_20A42C4A4, (uint64_t (*)(void))sub_20A42C4A4);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C304(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68E6B4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C324(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC80068, type metadata accessor for StockFeedLayoutSectionDescriptor.Decoration, type metadata accessor for StockFeedLayoutSectionDescriptor.Decoration);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C374(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26763D070, type metadata accessor for StockFeedLayoutSectionDescriptor.Footer, type metadata accessor for StockFeedLayoutSectionDescriptor.Footer);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C3C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26763D078, type metadata accessor for StockFeedLayoutSectionDescriptor.Header, type metadata accessor for StockFeedLayoutSectionDescriptor.Header);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C414(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68E868(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_20A68C434(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68E9F4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_20A68C454(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68EB80(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C474(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68ED28(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_20A68C494(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68EEA8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_20A68C4B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68F034(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_20A68C4D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC80050, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerPage, (uint64_t (*)(void))type metadata accessor for StockFeedViewerPage);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C524(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC82CF8, type metadata accessor for WatchlistMembershipCommandContext, type metadata accessor for WatchlistMembershipCommandContext);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C574(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC7FF10, MEMORY[0x263F7A558], MEMORY[0x263F7A558]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C5C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68F208(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C5E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC7FEA8, MEMORY[0x263F7AF50], MEMORY[0x263F7AF50]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C634(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC7FF50, (uint64_t (*)(uint64_t))sub_20A44D40C, (uint64_t (*)(void))sub_20A44D40C);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C684(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC7FF48, (uint64_t (*)(uint64_t))sub_20A44DCA8, (uint64_t (*)(void))sub_20A44DCA8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C6D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC7FF18, (uint64_t (*)(uint64_t))sub_20A44DF90, (uint64_t (*)(void))sub_20A44DF90);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C724(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, (unint64_t *)&unk_26763BC20, (uint64_t (*)(uint64_t))sub_20A44DB30, (uint64_t (*)(void))sub_20A44DB30);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C774(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68F79C(a1, a2, a3, (void *)*v3, &qword_26AC82D88, &qword_26AC82D50, MEMORY[0x263F7D308]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C7AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC82CE8, type metadata accessor for SortWatchlistCommandContext, type metadata accessor for SortWatchlistCommandContext);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C7FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC82CF0, type metadata accessor for ChangeWatchlistDisplayContext, type metadata accessor for ChangeWatchlistDisplayContext);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C84C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC7FF28, (uint64_t (*)(uint64_t))sub_20A42D93C, (uint64_t (*)(void))sub_20A42D93C);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C89C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, (unint64_t *)&qword_26AC7FEA0, MEMORY[0x263F7AF08], MEMORY[0x263F7AF08]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C8EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC7FF80, (uint64_t (*)(uint64_t))sub_20A512168, (uint64_t (*)(void))sub_20A512168);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C93C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68F404(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_20A68C95C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26763D090, (uint64_t (*)(uint64_t))sub_20A44D5E4, (uint64_t (*)(void))sub_20A44D5E4);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C9AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, (unint64_t *)&unk_26AC80010, MEMORY[0x263F59AB8], MEMORY[0x263F59AB8]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68C9FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26763AE40, (uint64_t (*)(uint64_t))sub_20A44D848, (uint64_t (*)(void))sub_20A44D848);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68CA4C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68F79C(a1, a2, a3, (void *)*v3, &qword_26AC7FF88, (unint64_t *)&qword_26AC6A1F0, MEMORY[0x263F7D750]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68CA84(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26763C840, MEMORY[0x263F7AFD8], MEMORY[0x263F7AFD8]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68CAD4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68F5CC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68CAF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC80090, MEMORY[0x263F7CB58], MEMORY[0x263F7CB58]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68CB44(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, (unint64_t *)&qword_26AC7FF30, (uint64_t (*)(uint64_t))sub_20A44D7C8, (uint64_t (*)(void))sub_20A44D7C8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68CB94(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC7FF40, (uint64_t (*)(uint64_t))sub_20A44DBE8, (uint64_t (*)(void))sub_20A44DBE8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68CBE4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68F79C(a1, a2, a3, (void *)*v3, &qword_26AC7FFF0, (unint64_t *)&unk_26AC6A978, MEMORY[0x263F7DF70]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68CC1C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC80028, MEMORY[0x263F59DB0], MEMORY[0x263F59DB0]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68CC6C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC7FE80, MEMORY[0x263F7AA88], MEMORY[0x263F7AA88]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68CCBC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, (unint64_t *)&qword_26AC7FF58, (uint64_t (*)(uint64_t))sub_20A42D350, (uint64_t (*)(void))sub_20A42D350);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20A68CD0C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, (unint64_t *)&unk_26AC7FEE0, MEMORY[0x263F58C68], MEMORY[0x263F58C68]);
  *uint64_t v3 = result;
  return result;
}

void sub_20A68CD5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A68B434();
    unint64_t v7 = a3(a1, &type metadata for ArticleUserInfoModel.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20A68CDC0()
{
  unint64_t result = qword_26AC716F8;
  if (!qword_26AC716F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC716F8);
  }
  return result;
}

uint64_t sub_20A68CE14(uint64_t a1, uint64_t a2)
{
  sub_20A68AAD4(0, (unint64_t *)&unk_26AC69578, &qword_26AC69570, MEMORY[0x263F58EA0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A68CEA4(uint64_t a1)
{
  sub_20A68AAD4(0, (unint64_t *)&unk_26AC69578, &qword_26AC69570, MEMORY[0x263F58EA0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A68CF2C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A68FF80(255, (unint64_t *)&qword_26AC7F800, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A68CFB4()
{
  unint64_t result = qword_26763D058;
  if (!qword_26763D058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D058);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ArticleUserInfoModel(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C2530();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_20A68F1A4(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    int v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = *(void *)((char *)a2 + v16 + 24);
    if (v19)
    {
      uint64_t v20 = *((void *)v18 + 4);
      *((void *)v17 + 3) = v19;
      *((void *)v17 + 4) = v20;
      (**(void (***)(void))(v19 - 8))();
    }
    else
    {
      long long v21 = *((_OWORD *)v18 + 1);
      *(_OWORD *)int v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v21;
      *((void *)v17 + 4) = *((void *)v18 + 4);
    }
    uint64_t v22 = a3[8];
    uint64_t v23 = (void *)((char *)v4 + v22);
    uint64_t v24 = (void *)((char *)a2 + v22);
    uint64_t v25 = v24[1];
    void *v23 = *v24;
    v23[1] = v25;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ArticleUserInfoModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_20A8C2530();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  if (*(void *)(v7 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v7);
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ArticleUserInfoModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C2530();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_20A68F1A4(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)((char *)a2 + v14 + 24);
  if (v17)
  {
    uint64_t v18 = *((void *)v16 + 4);
    *((void *)v15 + 3) = v17;
    *((void *)v15 + 4) = v18;
    (**(void (***)(void))(v17 - 8))();
  }
  else
  {
    long long v19 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v19;
    *((void *)v15 + 4) = *((void *)v16 + 4);
  }
  uint64_t v20 = a3[8];
  long long v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v23 = v22[1];
  void *v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ArticleUserInfoModel(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2530();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_20A68F1A4(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v15 = a3[7];
  uint64_t v16 = (uint64_t)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)((char *)a2 + v15 + 24);
  if (!*(void *)((char *)a1 + v15 + 24))
  {
    if (v18)
    {
      *(void *)(v16 + 24) = v18;
      *(void *)(v16 + 32) = *((void *)v17 + 4);
      (**(void (***)(uint64_t, char *))(v18 - 8))(v16, v17);
      goto LABEL_14;
    }
LABEL_13:
    long long v19 = *(_OWORD *)v17;
    long long v20 = *((_OWORD *)v17 + 1);
    *(void *)(v16 + 32) = *((void *)v17 + 4);
    *(_OWORD *)uint64_t v16 = v19;
    *(_OWORD *)(v16 + 16) = v20;
    goto LABEL_14;
  }
  if (!v18)
  {
    __swift_destroy_boxed_opaque_existential_1(v16);
    goto LABEL_13;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v16, (uint64_t *)v17);
LABEL_14:
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ArticleUserInfoModel(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2530();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_20A68F1A4(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)int v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((void *)v13 + 4) = *((void *)v14 + 4);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

void *assignWithTake for ArticleUserInfoModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C2530();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_20A68F1A4(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v17 = (char *)a1 + v16;
  if (*(void *)((char *)a1 + v16 + 24)) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v16);
  }
  long long v18 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v18;
  *((void *)v17 + 4) = *(void *)((char *)a2 + v16 + 32);
  uint64_t v19 = a3[8];
  long long v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *long long v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleUserInfoModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A68DB1C);
}

uint64_t sub_20A68DB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_20A68F1A4(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ArticleUserInfoModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A68DC10);
}

uint64_t sub_20A68DC10(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_20A68F1A4(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_20A68DCE8()
{
  sub_20A68F1A4(319, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for ArticleUserInfoModel.UserInfoType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A68DE98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleUserInfoModel.UserInfoType()
{
  return &type metadata for ArticleUserInfoModel.UserInfoType;
}

uint64_t getEnumTagSinglePayload for ArticleUserInfoModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ArticleUserInfoModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A68E02CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleUserInfoModel.CodingKeys()
{
  return &type metadata for ArticleUserInfoModel.CodingKeys;
}

unint64_t sub_20A68E068()
{
  unint64_t result = qword_26763D060;
  if (!qword_26763D060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D060);
  }
  return result;
}

unint64_t sub_20A68E0C0()
{
  unint64_t result = qword_26AC71718;
  if (!qword_26AC71718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC71718);
  }
  return result;
}

unint64_t sub_20A68E118()
{
  unint64_t result = qword_26AC71710;
  if (!qword_26AC71710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC71710);
  }
  return result;
}

uint64_t sub_20A68E16C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC800C8, (uint64_t (*)(uint64_t))sub_20A69008C, (uint64_t (*)(void))sub_20A69008C);
  *int v3 = result;
  return result;
}

uint64_t sub_20A68E1BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26763D0A0, (uint64_t (*)(uint64_t))sub_20A44D940, (uint64_t (*)(void))sub_20A44D940);
  *int v3 = result;
  return result;
}

uint64_t sub_20A68E20C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26763D0A8, (uint64_t (*)(uint64_t))sub_20A68FE58, (uint64_t (*)(void))sub_20A68FE58);
  *int v3 = result;
  return result;
}

uint64_t sub_20A68E25C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC7FF68, (uint64_t (*)(uint64_t))sub_20A683664, (uint64_t (*)(void))sub_20A683664);
  *int v3 = result;
  return result;
}

uint64_t sub_20A68E2AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC80070, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Decoration, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Decoration);
  *int v3 = result;
  return result;
}

uint64_t sub_20A68E2FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC68718, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer);
  *int v3 = result;
  return result;
}

uint64_t sub_20A68E34C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC80080, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Header, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Header);
  *int v3 = result;
  return result;
}

uint64_t sub_20A68E39C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC7FFB0, (uint64_t (*)(uint64_t))sub_20A44DDBC, (uint64_t (*)(void))sub_20A44DDBC);
  *int v3 = result;
  return result;
}

uint64_t sub_20A68E3EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26AC7FF70, (uint64_t (*)(uint64_t))sub_20A68FEEC, (uint64_t (*)(void))sub_20A68FEEC);
  *int v3 = result;
  return result;
}

uint64_t sub_20A68E43C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68F79C(a1, a2, a3, (void *)*v3, (unint64_t *)&qword_26AC7FFF8, (unint64_t *)&qword_26AC6AA00, MEMORY[0x263F7DF98]);
  *int v3 = result;
  return result;
}

uint64_t sub_20A68E474(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, &qword_26763D098, (uint64_t (*)(uint64_t))type metadata accessor for StockViewModel, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  *int v3 = result;
  return result;
}

uint64_t sub_20A68E4C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68F970(a1, a2, a3, *v3);
  *int v3 = (char *)result;
  return result;
}

uint64_t sub_20A68E4E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20A68FAF8(a1, a2, a3, (void *)*v3, (unint64_t *)&unk_26763D0B0, (uint64_t (*)(uint64_t))sub_20A42D680, (uint64_t (*)(void))sub_20A42D680);
  *int v3 = result;
  return result;
}

uint64_t sub_20A68E534(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_20A68FF80(0, &qword_26AC83098, MEMORY[0x263F8EF38], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int v13 = v10 + 32;
  int v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A68E6B4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_20A68F1A4(0, &qword_26763D080, (uint64_t (*)(uint64_t))sub_20A68FE24, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    void v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_20A68FE24(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A68E868(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_20A68F1A4(0, &qword_26AC80118, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A68E9F4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_20A68F1A4(0, &qword_26AC80120, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A68EB80(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_20A68FDA8();
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    void v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_20A68FF80(0, &qword_26AC7F7E8, (uint64_t)&type metadata for QuoteDetailViewComponent, MEMORY[0x263F8D488]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A68ED28(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_20A68FF80(0, &qword_26AC800F0, MEMORY[0x263F8D538], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A68EEA8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_20A68FF80(0, (unint64_t *)&qword_26AC800B8, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A68F034(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_20A68FF80(0, &qword_26AC80048, (uint64_t)&type metadata for StockChartZoneType, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

void sub_20A68F1A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A68F208(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_20A46F480();
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    void v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_20A68AAD4(0, &qword_26AC6A1F8, (unint64_t *)&qword_26AC6A1F0, MEMORY[0x263F7D750], MEMORY[0x263F8D8F0]);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A68F3D0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_20A68FAF8(a1, a2, a3, a4, &qword_26763D068, MEMORY[0x263F067B0], MEMORY[0x263F067B0]);
}

uint64_t sub_20A68F404(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_20A68FF80(0, &qword_26AC68728, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A68F598(char a1, int64_t a2, char a3, void *a4)
{
  return sub_20A68FAF8(a1, a2, a3, a4, &qword_26763AE40, (uint64_t (*)(uint64_t))sub_20A44D848, (uint64_t (*)(void))sub_20A44D848);
}

uint64_t sub_20A68F5CC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_20A68F1A4(0, &qword_26AC800F8, (uint64_t (*)(uint64_t))sub_20A690020, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    void v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_20A690020();
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A68F79C(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (v13)
  {
    sub_20A68AAD4(0, a5, a6, a7, MEMORY[0x263F8E0F8]);
    unint64_t v14 = (void *)swift_allocObject();
    size_t v15 = _swift_stdlib_malloc_size(v14);
    v14[2] = v12;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
  }
  else
  {
    unint64_t v14 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v16 = (unint64_t)(v14 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v14 != a4 || v16 >= v17 + 40 * v12) {
      memmove(v14 + 4, a4 + 4, 40 * v12);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v17 >= v16 + 40 * v12 || v16 >= v17 + 40 * v12)
  {
    sub_20A43F7E0(0, a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_30:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A68F970(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_20A68FF80(0, &qword_26AC80058, (uint64_t)&type metadata for ForYouFeedGroupKnobs.CodingKeys, MEMORY[0x263F8E0F8]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  size_t v15 = 32 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A68FAF8(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (!v13)
  {
    unint64_t v17 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_20A68F1A4(0, a5, a6, MEMORY[0x263F8E0F8]);
  uint64_t v14 = *(void *)(a7(0) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v17 = (void *)swift_allocObject();
  size_t v18 = _swift_stdlib_malloc_size(v17);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v18 - v16 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_34;
  }
  void v17[2] = v12;
  v17[3] = 2 * ((uint64_t)(v18 - v16) / v15);
LABEL_19:
  uint64_t v20 = *(void *)(a7(0) - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = (char *)v17 + v21;
  uint64_t v23 = (char *)a4 + v21;
  if (a1)
  {
    if (v17 < a4 || v22 >= &v23[*(void *)(v20 + 72) * v12])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v17 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v24 = *(void *)(v20 + 72) * v12;
  uint64_t v25 = &v22[v24];
  unint64_t v26 = (unint64_t)&v23[v24];
  if (v23 >= v25 || (unint64_t)v22 >= v26)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v17;
  }
LABEL_36:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A68FD5C()
{
  unint64_t v0 = sub_20A8CF5B0();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

void sub_20A68FDA8()
{
  if (!qword_26AC68720)
  {
    sub_20A68FF80(255, &qword_26AC7F7E8, (uint64_t)&type metadata for QuoteDetailViewComponent, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC68720);
    }
  }
}

void sub_20A68FE24(uint64_t a1)
{
}

void sub_20A68FE58()
{
  if (!qword_26763AC98)
  {
    type metadata accessor for StockSearchLayoutModel();
    sub_20A6900F4(&qword_26AC74170, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutModel);
    unint64_t v0 = sub_20A8C9160();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763AC98);
    }
  }
}

void sub_20A68FEEC()
{
  if (!qword_26AC6A188)
  {
    type metadata accessor for TickerLayoutModel();
    sub_20A6900F4(&qword_26AC6FF50, (void (*)(uint64_t))type metadata accessor for TickerLayoutModel);
    unint64_t v0 = sub_20A8C9160();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A188);
    }
  }
}

void sub_20A68FF80(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_20A68FFCC()
{
  unint64_t result = qword_26AC71700;
  if (!qword_26AC71700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC71700);
  }
  return result;
}

void sub_20A690020()
{
  if (!qword_26AC7F878)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC7F878);
    }
  }
}

void sub_20A69008C()
{
  if (!qword_26AC7F698)
  {
    sub_20A8C3F00();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC7F698);
    }
  }
}

uint64_t sub_20A6900F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A69013C()
{
  uint64_t v18 = sub_20A8C76F0();
  uint64_t v1 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  int v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C76E0();
  uint64_t v19 = *(void *)(v4 - 8);
  uint64_t v20 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C7770();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x270FA5388](v7);
  int64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v8 + 104))(v11, *MEMORY[0x263F7A6B0], v7, v9);
  uint64_t v12 = sub_20A8C4890();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  type metadata accessor for StockListViewController();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v0;
  *(void *)(v13 + 24) = v12;
  swift_retain();
  uint64_t v14 = sub_20A8C5B80();
  swift_unownedRelease();
  uint64_t result = swift_release();
  if (v14)
  {
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7A620], v18);
    sub_20A8C76C0();
    sub_20A690610();
    uint64_t v16 = v20;
    sub_20A8C4940();
    swift_release();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v16);
    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A690488(void *a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_unownedRetainStrong();
  sub_20A4342F4(a2 + 64, (uint64_t)v6);
  swift_release();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_20A8CC050();
  sub_20A443124();
  sub_20A8C5A50();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  return sub_20A8C5A40();
}

uint64_t type metadata accessor for StockListModule()
{
  return self;
}

uint64_t sub_20A6905C8()
{
  swift_unownedRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A690608(void *a1)
{
  return sub_20A690488(a1, *(void *)(v1 + 16));
}

unint64_t sub_20A690610()
{
  unint64_t result = qword_26AC69B30;
  if (!qword_26AC69B30)
  {
    sub_20A8C76E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC69B30);
  }
  return result;
}

uint64_t sub_20A690668()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockSearchModalRouter()
{
  return self;
}

uint64_t sub_20A6906C4()
{
  return sub_20A69088C((unint64_t *)&unk_26AC6C730, 255, (void (*)(uint64_t))type metadata accessor for StocksActivity);
}

uint64_t sub_20A690710@<X0>(uint64_t a1@<X8>)
{
  int v3 = (void *)MEMORY[0x2105289B0](v1 + 16);
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = objc_msgSend(v3, sel_presentingViewController);

    if (v5)
    {
      objc_msgSend(v5, sel_dismissViewControllerAnimated_completion_, 0, 0);
    }
  }
  uint64_t v6 = *MEMORY[0x263F7DBB0];
  uint64_t v7 = sub_20A8CA260();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(a1, v6, v7);
}

void sub_20A6907D8()
{
}

uint64_t sub_20A690834(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_20A69088C((unint64_t *)&unk_26763AE00, a2, (void (*)(uint64_t))type metadata accessor for StockSearchModalRouter);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_20A69088C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t StockFeedServiceProxy.deinit()
{
  swift_release();
  return v0;
}

uint64_t StockFeedServiceProxy.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedServiceProxy()
{
  return self;
}

uint64_t method lookup function for StockFeedServiceProxy(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StockFeedServiceProxy);
}

uint64_t sub_20A690AEC()
{
  return type metadata accessor for ManageWatchlistsViewController();
}

uint64_t type metadata accessor for ManageWatchlistsViewController()
{
  uint64_t result = qword_26763D0F8;
  if (!qword_26763D0F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A690B40()
{
  uint64_t result = type metadata accessor for ManageWatchlistsContentMode(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_20A690C00()
{
  unint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_20A8C3F00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v56 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ManageWatchlistsContentMode(0);
  double v7 = MEMORY[0x270FA5388](v6 - 8);
  double v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58.receiver = v1;
  v58.super_class = ObjectType;
  objc_msgSendSuper2(&v58, sel_viewDidLoad, v7);
  id v10 = objc_msgSend(v1, sel_navigationController);
  if (v10)
  {
    int64_t v11 = v10;
    id v12 = objc_msgSend(v10, sel_presentationController);

    if (v12)
    {
      objc_msgSend(v12, sel_setDelegate_, v1);
    }
  }
  id v13 = objc_msgSend(v1, sel_navigationController);
  if (v13)
  {
    uint64_t v14 = v13;
    id v15 = objc_msgSend(v13, sel_sheetPresentationController);

    if (v15)
    {
      sub_20A45F33C();
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_20A8D5C90;
      uint64_t v17 = self;
      id v18 = objc_msgSend(v17, sel_mediumDetent);
      uint64_t v19 = sub_20A69155C();

      *(void *)(v16 + 32) = v19;
      *(void *)(v16 + 40) = objc_msgSend(v17, sel_largeDetent);
      uint64_t v57 = v16;
      sub_20A8CE620();
      sub_20A692FD0();
      uint64_t v20 = (void *)sub_20A8CE5D0();
      swift_bridgeObjectRelease();
      objc_msgSend(v15, sel_setDetents_, v20);

      objc_msgSend(v15, sel_setPrefersScrollingExpandsWhenScrolledToEdge_, 1);
      objc_msgSend(v15, sel_setPrefersEdgeAttachedInCompactHeight_, 1);
      objc_msgSend(v15, sel_setWidthFollowsPreferredContentSizeWhenEdgeAttached_, 1);
    }
  }
  unint64_t v21 = *(void **)&v1[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_blueprintViewController];
  objc_msgSend(v1, sel_addChildViewController_, v21);
  id v22 = objc_msgSend(v1, sel_view);
  if (!v22)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v23 = v22;
  id v24 = objc_msgSend(v21, sel_view);
  if (!v24)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v25 = v24;
  objc_msgSend(v23, sel_addSubview_, v24);

  objc_msgSend(v21, sel_didMoveToParentViewController_, v1);
  sub_20A8C9BF0();
  unint64_t v26 = (void *)sub_20A8C94C0();
  swift_release();
  id v27 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v26, sel_setBackgroundColor_, v27);

  objc_msgSend(v26, sel_setSeparatorStyle_, 0);
  sub_20A8C9BF0();
  uint64_t v28 = (void *)sub_20A8C94C0();
  swift_release();
  objc_msgSend(v28, sel_setAllowsMultipleSelection_, objc_msgSend(v1, sel_isEditing) ^ 1);

  id v29 = objc_msgSend(v1, sel_view);
  if (!v29)
  {
LABEL_16:
    __break(1u);
    return;
  }
  unint64_t v30 = v29;
  uint64_t v31 = *(void **)&v1[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_descriptionLabel];
  objc_msgSend(v29, sel_addSubview_, v31);

  sub_20A6933FC((uint64_t)&v1[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_contentMode], (uint64_t)v9, type metadata accessor for ManageWatchlistsContentMode);
  sub_20A453638();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v9, 1, v32) == 1)
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v34 = self;
    id v35 = objc_msgSend(v34, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_20A8C2370();

    uint64_t v36 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setTitle_, v36);

    id v37 = objc_msgSend(v34, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_20A8C2370();

    uint64_t v38 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    objc_msgSend(v31, sel_setText_, v38);
  }
  else
  {
    uint64_t v39 = v56;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v56, v9, v3);
    type metadata accessor for Localized();
    uint64_t v40 = swift_getObjCClassFromMetadata();
    uint64_t v41 = self;
    id v42 = objc_msgSend(v41, sel_bundleForClass_, v40);
    uint64_t v55 = v3;
    sub_20A8C2370();

    uint64_t v43 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setTitle_, v43);

    id v44 = objc_msgSend(v41, sel_bundleForClass_, v40);
    sub_20A8C2370();

    sub_20A693464(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_20A8D3DC0;
    uint64_t v46 = sub_20A8C3EF0();
    uint64_t v48 = v47;
    *(void *)(v45 + 56) = MEMORY[0x263F8D310];
    *(void *)(v45 + 64) = sub_20A43F830();
    *(void *)(v45 + 32) = v46;
    *(void *)(v45 + 40) = v48;
    sub_20A8CE2B0();
    swift_bridgeObjectRelease();
    unint64_t v49 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    objc_msgSend(v31, sel_setText_, v49);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v39, v55);
  }
  id v50 = objc_msgSend(v1, sel_navigationItem);
  id v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v1, sel_handleDone);
  objc_msgSend(v50, sel_setRightBarButtonItem_, v51);

  id v52 = objc_msgSend(v1, sel_traitCollection);
  sub_20A693010();

  objc_msgSend(v31, sel_setUserInteractionEnabled_, 1);
  objc_msgSend(v31, sel_setShowsLargeContentViewer_, 1);
  id v53 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828F8]), sel_init);
  objc_msgSend(v31, sel_addInteraction_, v53);
}

uint64_t sub_20A69155C()
{
  sub_20A8CF3C0();
  id v1 = objc_msgSend(v0, sel_identifier, 0, 0xE000000000000000);
  sub_20A8CE280();
  swift_bridgeObjectRelease();

  sub_20A8CE3D0();
  uint64_t v2 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  sub_20A692FD0();
  *(void *)(swift_allocObject() + 16) = v0;
  id v3 = v2;
  id v4 = v0;
  uint64_t v5 = sub_20A8CED30();

  swift_release();
  return v5;
}

void sub_20A6916D0()
{
  v41.receiver = v0;
  v41.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v41, sel_viewWillLayoutSubviews);
  id v1 = *(void **)&v0[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_descriptionLabel];
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  id v3 = v2;
  objc_msgSend(v2, sel_frame);
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;

  v42.origin.x = v5;
  v42.origin.y = v7;
  v42.size.width = v9;
  v42.size.height = v11;
  CGRect v43 = CGRectInset(v42, 32.0, 32.0);
  objc_msgSend(v1, sel_sizeThatFits_, v43.size.width, v43.size.height);
  double v13 = v12;
  id v14 = objc_msgSend(v0, sel_view);
  if (!v14)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v15 = v14;
  objc_msgSend(v14, sel_safeAreaInsets);
  double v17 = v16;

  id v18 = objc_msgSend(v0, sel_view);
  if (!v18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v19 = v18;
  objc_msgSend(v18, sel_frame);
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  CGFloat v25 = v24;
  CGFloat v27 = v26;

  v44.origin.x = v21;
  v44.origin.y = v23;
  v44.size.width = v25;
  v44.size.height = v27;
  objc_msgSend(v1, sel_setFrame_, 32.0, v17 + 8.0, CGRectGetWidth(v44) + -64.0, v13);
  id v28 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_blueprintViewController], sel_view);
  if (!v28)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v29 = v28;
  id v30 = objc_msgSend(v0, sel_view);
  if (v30)
  {
    uint64_t v31 = v30;
    objc_msgSend(v30, sel_bounds);
    double v33 = v32;
    double v35 = v34;
    double v37 = v36;
    double v39 = v38;

    objc_msgSend(v1, sel_frame);
    CGFloat MaxY = CGRectGetMaxY(v45);
    objc_msgSend(v29, sel_setFrame_, UIEdgeInsetsInsetRect(v33, v35, v37, v39, MaxY + 16.0, 0.0));

    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_20A691B78(void *a1)
{
  id v1 = objc_msgSend(a1, sel_containerTraitCollection);
  id v2 = objc_msgSend(v1, sel_horizontalSizeClass);

  if (v2 == (id)1) {
    return sub_20A8CED20();
  }
  else {
    return 0;
  }
}

uint64_t sub_20A691BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x2105289B0](v3);
  if (result)
  {
    CGFloat v5 = (void *)result;
    uint64_t v6 = *(void *)(result + OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_eventHandler);
    swift_unknownObjectRetain();

    uint64_t v7 = *(void *)(v6 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 48))(a2, 1, ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A691C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a3 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x2105289B0](v7);
  if (result)
  {
    CGFloat v9 = (void *)result;
    uint64_t v10 = *(void *)(result + OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_eventHandler);
    swift_unknownObjectRetain();

    uint64_t v11 = *(void *)(v10 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 80))(a4, a1, a2, ObjectType, v11);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A691D58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D680();
  sub_20A8C8330();
  if (swift_getEnumCaseMultiPayload() <= 1)
  {
    uint64_t v8 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_eventHandler) + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 72))(a2, ObjectType, v8);
  }
  return sub_20A692DE8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
}

uint64_t sub_20A691E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_20A8CAE00();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x270FA5388](v5);
  CGFloat v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v9, a3, v5, v7);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
  if (result == *MEMORY[0x263F7DEA0])
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    if (result == *MEMORY[0x263F7DE88])
    {
      uint64_t v11 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_eventHandler) + 40);
      uint64_t ObjectType = swift_getObjectType();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(ObjectType, v11);
    }
    if (result != *MEMORY[0x263F7DE98] && result != *MEMORY[0x263F7DE90])
    {
      if (result == *MEMORY[0x263F7DEA8]) {
        return result;
      }
      if (result != *MEMORY[0x263F7DEB0]) {
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      }
    }
  }
  uint64_t v14 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_eventHandler) + 40);
  uint64_t v15 = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 40))(v15, v14);
}

uint64_t sub_20A69204C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A693464(0, &qword_26AC68D50, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = sub_20A8C2B70();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  double v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D680();
  sub_20A8C82F0();
  sub_20A44D6D8();
  sub_20A8CBB30();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_20A45A238((uint64_t)v8);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  uint64_t v14 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_eventHandler) + 40);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(a2, v12, a3, ObjectType, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_20A692270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C340](a1, a2, a3, ObjectType, a5);
}

uint64_t sub_20A6922D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(v2 + OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_eventHandler) + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 64))(a2, ObjectType, v4);
}

uint64_t sub_20A69233C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(v2 + OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_eventHandler) + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 48))(a2, 0, ObjectType, v4);
}

uint64_t sub_20A6923A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C338](a1, a2, ObjectType, a4);
}

uint64_t sub_20A692400()
{
  return sub_20A8C9C80();
}

uint64_t sub_20A69242C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F7DB00];
  uint64_t v3 = sub_20A8CA130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = *MEMORY[0x263F7DB18];
  uint64_t v5 = sub_20A8CA140();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(a1, v4, v5);
}

uint64_t sub_20A6924E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v16 = sub_20A8C8940();
  uint64_t v1 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_20A8C8950();
  uint64_t v4 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A693464(0, (unint64_t *)&qword_26AC7FF60, MEMORY[0x263F7D4B0], MEMORY[0x263F8E0F8]);
  uint64_t v7 = sub_20A8C8960();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_20A8D4540;
  unint64_t v12 = v11 + v10;
  double v13 = *(void (**)(unint64_t, void, uint64_t))(v8 + 104);
  v13(v12, *MEMORY[0x263F7D4A0], v7);
  v13(v12 + v9, *MEMORY[0x263F7D498], v7);
  sub_20A7BABC8(v11);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F7D490], v15);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D478], v16);
  return sub_20A8C8980();
}

uint64_t sub_20A6927DC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A6924E8(a1);
}

void sub_20A6929BC(uint64_t a1)
{
  sub_20A42D680();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v2);
  sub_20A693464(0, &qword_26AC69040, MEMORY[0x263F7AFD8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v25 - v7;
  uint64_t v9 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for WatchlistRenameAlert();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C8330();
  sub_20A6A2EB8((uint64_t)v8);
  sub_20A692DE8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
  sub_20A692D54((uint64_t)v8, (uint64_t)v14);
  type metadata accessor for TextInputAlert();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 40) = v12;
  *(void *)(v15 + 48) = &off_26BE620E0;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v15 + 16));
  sub_20A6933FC((uint64_t)v14, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for WatchlistRenameAlert);
  *(_OWORD *)(v15 + 56) = 0u;
  *(_OWORD *)(v15 + 72) = 0u;
  *(void *)(v15 + 96) = 0;
  *(void *)(v15 + 104) = 0;
  *(void *)(v15 + 88) = sub_20A432B48;
  sub_20A692DE8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for WatchlistRenameAlert);
  uint64_t v17 = swift_allocObject();
  id v18 = (void *)v25[1];
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  unint64_t v19 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v20 + v19, (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  uint64_t v21 = *(void *)(v15 + 56);
  *(void *)(v15 + 56) = sub_20A692F4C;
  *(void *)(v15 + 64) = v20;
  sub_20A459CA4(v21);
  *(void *)(v15 + 88) = sub_20A51CD0C;
  *(void *)(v15 + 96) = 0;
  swift_release();
  id v22 = sub_20A471760();
  CGFloat v23 = *(void **)(v15 + 104);
  *(void *)(v15 + 104) = v22;
  id v24 = v22;

  objc_msgSend(v18, sel_presentViewController_animated_completion_, v24, 1, 0);
  swift_release();
}

uint64_t sub_20A692D54(uint64_t a1, uint64_t a2)
{
  sub_20A693464(0, &qword_26AC69040, MEMORY[0x263F7AFD8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A692DE8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A692E48()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A692E80()
{
  sub_20A42D680();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);

  return swift_deallocObject();
}

uint64_t sub_20A692F4C(uint64_t a1, uint64_t a2)
{
  sub_20A42D680();
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2
     + ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80));

  return sub_20A691C98(a1, a2, v6, v7);
}

unint64_t sub_20A692FD0()
{
  unint64_t result = qword_26763D188;
  if (!qword_26763D188)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26763D188);
  }
  return result;
}

void sub_20A693010()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    uint64_t v3 = v2;
    unint64_t v4 = &v1[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_styler];
    uint64_t v5 = self;
    id v6 = objc_msgSend(v5, sel_systemBackgroundColor);
    objc_msgSend(v3, sel_setBackgroundColor_, v6);

    sub_20A8C9BF0();
    uint64_t v7 = (void *)sub_20A8C94C0();
    swift_release();
    id v8 = objc_msgSend(v5, sel_clearColor);
    objc_msgSend(v7, sel_setBackgroundColor_, v8);

    objc_msgSend(v7, sel_setSeparatorStyle_, 0);
    uint64_t v9 = __swift_project_boxed_opaque_existential_1(v4, *((void *)v4 + 3));
    uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_descriptionLabel];
    uint64_t v11 = (void *)*v9;
    objc_msgSend(v10, sel_setNumberOfLines_, 0);
    objc_msgSend(v10, sel_setTextAlignment_, 1);
    uint64_t v12 = v11 + 2;
    uint64_t v14 = v11[5];
    uint64_t v13 = v11[6];
    __swift_project_boxed_opaque_existential_1(v12, v14);
    uint64_t v15 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v13 + 16) + 232))(v14);
    objc_msgSend(v10, sel_setTextColor_, v15);

    id v16 = objc_msgSend(self, sel_systemFontOfSize_, 14.0);
    objc_msgSend(v10, sel_setFont_, v16);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_20A693208(void *a1, id a2)
{
  id v3 = objc_msgSend(a2, sel_horizontalSizeClass);
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  uint64_t v5 = (void *)v4;
  if (v3 == (id)1)
  {
    if (!v4) {
      return 1;
    }
    sub_20A45F33C();
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_20A8D5C90;
    uint64_t v7 = self;
    id v8 = a1;
    *(void *)(v6 + 32) = objc_msgSend(v7, sel_mediumDetent);
    *(void *)(v6 + 40) = objc_msgSend(v7, sel_largeDetent);
    sub_20A8CE620();
    uint64_t v9 = 1;
  }
  else
  {
    if (!v4) {
      return 2;
    }
    sub_20A45F33C();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_20A8D5CA0;
    uint64_t v11 = self;
    id v12 = a1;
    *(void *)(v10 + 32) = objc_msgSend(v11, sel_largeDetent);
    sub_20A8CE620();
    uint64_t v9 = 2;
  }
  sub_20A692FD0();
  uint64_t v13 = (void *)sub_20A8CE5D0();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setDetents_, v13);

  objc_msgSend(v5, sel_setPrefersEdgeAttachedInCompactHeight_, v3 == (id)1);
  return v9;
}

double UIEdgeInsetsInsetRect(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

uint64_t sub_20A6933FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_20A693464(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A6934C8()
{
  return swift_deallocObject();
}

uint64_t sub_20A693500(void *a1)
{
  return sub_20A691B78(a1);
}

uint64_t *sub_20A693508(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C3410();
    id v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    long long v14 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)v4 + v13 + 24) = v14;
    (**(void (***)(void))(v14 - 8))();
  }
  return v4;
}

uint64_t sub_20A693654(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);

  return __swift_destroy_boxed_opaque_existential_1(v6);
}

void *sub_20A6936E0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C3410();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  long long v13 = *(_OWORD *)((char *)a2 + v12 + 24);
  *(_OWORD *)((char *)a1 + v12 + 24) = v13;
  (**(void (***)(void))(v13 - 8))();
  return a1;
}

void *sub_20A6937DC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C3410();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + *(int *)(a3 + 24)), (void *)((char *)a2 + *(int *)(a3 + 24)));
  return a1;
}

_OWORD *sub_20A693890(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C3410();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((void *)v11 + 4) = *((void *)v12 + 4);
  return a1;
}

void *sub_20A693938(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C3410();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  long long v13 = (char *)a2 + v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v11);
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((void *)v12 + 4) = *((void *)v13 + 4);
  return a1;
}

uint64_t sub_20A6939F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A693A04);
}

uint64_t sub_20A693A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C3410();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_20A693AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A693AC8);
}

uint64_t sub_20A693AC8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_20A8C3410();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for StockFeedPriceChangeDisplayBlueprintModifier()
{
  uint64_t result = qword_26AC82068;
  if (!qword_26AC82068) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A693BBC()
{
  uint64_t result = sub_20A8C3410();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A693C5C(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v4 = sub_20A8C8B80();
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v34 = v4;
  MEMORY[0x270FA5388](v4);
  double v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6953A0(0, &qword_26AC6A420, MEMORY[0x263F7D950]);
  uint64_t v37 = *(void *)(v6 - 8);
  uint64_t v38 = v6;
  MEMORY[0x270FA5388](v6);
  double v36 = (char *)&v31 - v7;
  sub_20A46CC8C();
  MEMORY[0x270FA5388](v8 - 8);
  sub_20A6953A0(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  uint64_t v35 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v42 = v12;
  sub_20A8CBA50();
  uint64_t v41 = v3;
  uint64_t v44 = v3;
  uint64_t v13 = sub_20A4499C0((void (*)(char *))sub_20A695494, (uint64_t)v43, (uint64_t)v47);
  sub_20A6953A0(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  uint64_t v15 = v14;
  uint64_t v16 = sub_20A695340(&qword_26AC69EF8);
  uint64_t v17 = sub_20A695340(&qword_26AC69EF0);
  MEMORY[0x21051E250](v13, v15, v16, v17);
  type metadata accessor for StockFeedSectionDescriptor();
  type metadata accessor for StockFeedModel();
  sub_20A6952B0(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
  sub_20A6952B0(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
  sub_20A8CBA40();
  uint64_t v18 = sub_20A44E664();
  sub_20A8CCAC0();
  sub_20A8CCAB0();
  type metadata accessor for StockFeedServiceConfig();
  sub_20A6952B0(&qword_26AC73FD0, (void (*)(uint64_t))type metadata accessor for StockFeedServiceConfig);
  uint64_t v19 = sub_20A8CCA90();
  swift_release();
  if (v19)
  {
    *((void *)&v46 + 1) = sub_20A8CC520();
    *(void *)&long long v45 = v19;
  }
  else
  {
    long long v45 = 0u;
    long long v46 = 0u;
  }
  uint64_t v20 = v42;
  sub_20A8CBB10();
  sub_20A55E55C(v18);
  uint64_t v21 = type metadata accessor for StockFeedPriceChangeDisplayBlueprintModifier();
  __swift_project_boxed_opaque_existential_1((void *)(v41 + *(int *)(v21 + 24)), *(void *)(v41 + *(int *)(v21 + 24) + 24));
  if (sub_20A8C3850())
  {
    id v22 = v36;
    sub_20A8C9B40();
  }
  else
  {
    uint64_t v24 = v33;
    uint64_t v23 = v34;
    CGFloat v25 = v32;
    (*(void (**)(char *, void, uint64_t))(v33 + 104))(v32, *MEMORY[0x263F7D528], v34);
    sub_20A6952B0(&qword_26AC76FA0, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    id v22 = v36;
    sub_20A8C9B50();
    double v26 = v25;
    uint64_t v20 = v42;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  }
  uint64_t v28 = v37;
  uint64_t v27 = v38;
  uint64_t v29 = v35;
  v40(v22);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v11, v20);
}

uint64_t sub_20A69422C(uint64_t a1, uint64_t a2)
{
  sub_20A42C84C();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v4);
  sub_20A694474(a2, (uint64_t)&v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  uint64_t v13 = a2;
  uint64_t v6 = sub_20A449958((void (*)(char *))sub_20A6954B4, (uint64_t)v12, (uint64_t)v14);
  sub_20A42C4A4();
  uint64_t v8 = v7;
  uint64_t v9 = sub_20A6952B0(&qword_26AC69D78, (void (*)(uint64_t))sub_20A42C4A4);
  uint64_t v10 = sub_20A6952B0(&qword_26AC69D70, (void (*)(uint64_t))sub_20A42C4A4);
  MEMORY[0x21051E250](v6, v8, v9, v10);
  type metadata accessor for StockFeedModel();
  sub_20A6952B0(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
  sub_20A6952B0(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
  return sub_20A8C8810();
}

uint64_t sub_20A694474@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v35 = a2;
  uint64_t v2 = sub_20A8C3410();
  uint64_t v30 = *(void *)(v2 - 8);
  uint64_t v31 = v2;
  MEMORY[0x270FA5388](v2);
  double v32 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A695608(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v34 = (uint64_t)&v28 - v5;
  sub_20A695608(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = sub_20A8C3F00();
  uint64_t v29 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v28 - v16;
  uint64_t v18 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6953A0(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  sub_20A8C8820();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_bridgeObjectRelease();
      sub_20A42C980();
      sub_20A6955AC((uint64_t)&v20[*(int *)(v27 + 64)], &qword_26AC6AF30, MEMORY[0x263F59740]);
      goto LABEL_2;
    case 2u:
      sub_20A67CC88((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
      goto LABEL_2;
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
LABEL_2:
      uint64_t result = sub_20A8C8820();
      break;
    default:
      sub_20A546830((uint64_t)v20, (uint64_t)v17);
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v11, v17, v9);
      sub_20A695540((uint64_t)&v17[v12[5]], (uint64_t)v8, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      sub_20A695540((uint64_t)&v17[v12[6]], v34, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
      uint64_t v22 = type metadata accessor for StockFeedPriceChangeDisplayBlueprintModifier();
      uint64_t v24 = (uint64_t)v32;
      uint64_t v23 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v32, v33 + *(int *)(v22 + 20), v31);
      int v25 = v17[v12[8]];
      __swift_project_boxed_opaque_existential_1((void *)(v23 + *(int *)(v22 + 24)), *(void *)(v23 + *(int *)(v22 + 24) + 24));
      char v26 = sub_20A8C3870();
      sub_20A6FC190((uint64_t)v11, (uint64_t)v8, v34, v24, v25, v26 & 1, (uint64_t)v14);
      sub_20A67CC88((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      sub_20A546830((uint64_t)v14, v35);
      uint64_t result = swift_storeEnumTagMultiPayload();
      break;
  }
  return result;
}

uint64_t sub_20A694950@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v59 = a3;
  sub_20A695608(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v51 = (uint64_t)&v50 - v5;
  uint64_t v6 = sub_20A8C3410();
  uint64_t v52 = *(void *)(v6 - 8);
  uint64_t v53 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v55 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A695608(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v54 = (uint64_t)&v50 - v9;
  sub_20A695608(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v58 = (uint64_t)&v50 - v11;
  uint64_t v12 = sub_20A8C3F00();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (int *)type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v19);
  uint64_t v57 = (uint64_t)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v50 - v22;
  sub_20A42C4A4();
  uint64_t v25 = v24;
  sub_20A8C8330();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      (*(void (**)(char *, uint64_t))(v13 + 8))(v23, v12);
      goto LABEL_11;
    case 3u:
      sub_20A42C53C();
      uint64_t v37 = v36;
      uint64_t v38 = &v23[*(int *)(v36 + 48)];
      uint64_t v39 = (uint64_t)&v23[*(int *)(v36 + 64)];
      uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
      id v50 = v15;
      v40(v15, v23, v12);
      uint64_t v41 = (uint64_t)v38;
      uint64_t v42 = v58;
      CGRect v43 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
      sub_20A6954D4(v41, v58, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      uint64_t v56 = (void (*)(uint64_t))MEMORY[0x263F7A890];
      uint64_t v44 = v51;
      sub_20A6954D4(v39, v51, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      uint64_t v45 = v57 + *(int *)(v37 + 48);
      uint64_t v46 = v57 + *(int *)(v37 + 64);
      (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v57, v50, v12);
      sub_20A695540(v42, v45, &qword_26AC68FB0, v43);
      uint64_t v47 = v46;
      uint64_t v48 = v56;
      sub_20A695540(v44, v47, &qword_26AC68DA0, v56);
      swift_storeEnumTagMultiPayload();
      sub_20A6952B0(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
      sub_20A8C8320();
      sub_20A6955AC(v44, &qword_26AC68DA0, v48);
      sub_20A6955AC(v42, &qword_26AC68FB0, v43);
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v50, v12);
    case 4u:
      char v26 = type metadata accessor for StockEarningsModel;
      goto LABEL_7;
    case 5u:
      swift_bridgeObjectRelease();
      goto LABEL_11;
    case 6u:
    case 9u:
      char v26 = type metadata accessor for StockFeedModel;
LABEL_7:
      sub_20A67CC88((uint64_t)v23, (uint64_t (*)(void))v26);
      goto LABEL_11;
    case 7u:
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_11;
    case 8u:
      sub_20A46CF6C();
      swift_release();
      uint64_t v49 = sub_20A8CD2C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v49 - 8) + 8))(v23, v49);
      goto LABEL_11;
    case 0xAu:
LABEL_11:
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v59, a1, v25);
      break;
    default:
      sub_20A546830((uint64_t)v23, (uint64_t)v18);
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
      id v50 = v15;
      v27(v15, v18, v12);
      uint64_t v28 = v58;
      sub_20A695540((uint64_t)&v18[v16[5]], v58, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      uint64_t v29 = v54;
      sub_20A695540((uint64_t)&v18[v16[6]], v54, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
      uint64_t v30 = type metadata accessor for StockFeedPriceChangeDisplayBlueprintModifier();
      uint64_t v32 = (uint64_t)v55;
      uint64_t v31 = v56;
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v55, (char *)v56 + *(int *)(v30 + 20), v53);
      int v33 = v18[v16[8]];
      __swift_project_boxed_opaque_existential_1((void (*)(uint64_t))((char *)v31 + *(int *)(v30 + 24)), *(void *)((char *)v31 + *(int *)(v30 + 24) + 24));
      char v34 = sub_20A8C3870();
      sub_20A6FC190((uint64_t)v50, v28, v29, v32, v33, v34 & 1, v57);
      swift_storeEnumTagMultiPayload();
      sub_20A6952B0(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
      sub_20A8C8320();
      uint64_t result = sub_20A67CC88((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      break;
  }
  return result;
}

uint64_t sub_20A695220()
{
  return sub_20A6952B0(&qword_26AC82060, (void (*)(uint64_t))type metadata accessor for StockFeedPriceChangeDisplayBlueprintModifier);
}

uint64_t sub_20A695268()
{
  return sub_20A6952B0(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
}

uint64_t sub_20A6952B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6952F8()
{
  return sub_20A6952B0(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
}

uint64_t sub_20A695340(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A6953A0(255, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A6953A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for StockFeedSectionDescriptor();
    v8[1] = type metadata accessor for StockFeedModel();
    v8[2] = sub_20A6952B0(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    v8[3] = sub_20A6952B0(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A695494(uint64_t a1)
{
  return sub_20A69422C(a1, *(void *)(v1 + 16));
}

uint64_t sub_20A6954B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A694950(a1, *(void (**)(uint64_t))(v2 + 16), a2);
}

uint64_t sub_20A6954D4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A695608(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A695540(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A695608(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A6955AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A695608(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_20A695608(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_20A69565C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_20A8C3F00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = (int *)type metadata accessor for StockViewModel();
    uint64_t v8 = v7[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C3E10();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_20A695D68(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = v7[6];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = (int *)type metadata accessor for StockSparklineViewModel(0);
    uint64_t v19 = *((void *)v18 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
    {
      sub_20A695D68(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v21 = sub_20A8CDCD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v16, v17, v21);
      uint64_t v22 = v18[5];
      uint64_t v23 = &v16[v22];
      uint64_t v24 = &v17[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      uint64_t v25 = v18[6];
      char v26 = &v16[v25];
      uint64_t v27 = &v17[v25];
      *(void *)char v26 = *(void *)v27;
      v26[8] = v27[8];
      v16[v18[7]] = v17[v18[7]];
      uint64_t v28 = v18[8];
      uint64_t v29 = &v16[v28];
      uint64_t v30 = &v17[v28];
      uint64_t v31 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      (*(void (**)(char *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
    }
    uint64_t v32 = v7[7];
    int v33 = (char *)a1 + v32;
    char v34 = (char *)a2 + v32;
    *(void *)int v33 = *(void *)((char *)a2 + v32);
    v33[8] = *((unsigned char *)a2 + v32 + 8);
    *((void *)v33 + 2) = *(void *)((char *)a2 + v32 + 16);
    v33[24] = *((unsigned char *)a2 + v32 + 24);
    *((void *)v33 + 4) = *(void *)((char *)a2 + v32 + 32);
    v33[40] = *((unsigned char *)a2 + v32 + 40);
    uint64_t v35 = *(void *)((char *)a2 + v32 + 56);
    *((void *)v33 + 6) = *(void *)((char *)a2 + v32 + 48);
    *((void *)v33 + 7) = v35;
    uint64_t v36 = *(void *)((char *)a2 + v32 + 72);
    *((void *)v33 + 8) = *(void *)((char *)a2 + v32 + 64);
    *((void *)v33 + 9) = v36;
    uint64_t v37 = (int *)type metadata accessor for PriceViewModel();
    uint64_t v38 = v37[9];
    uint64_t v73 = &v34[v38];
    uint64_t v74 = &v33[v38];
    uint64_t v75 = v7;
    uint64_t v39 = sub_20A8C2EB0();
    uint64_t v40 = a2;
    uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41(v74, v73, v39);
    uint64_t v42 = v37[10];
    CGRect v43 = &v33[v42];
    uint64_t v44 = &v34[v42];
    uint64_t v45 = sub_20A8C4030();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
    uint64_t v46 = v37[11];
    uint64_t v47 = &v33[v46];
    uint64_t v48 = &v34[v46];
    uint64_t v49 = sub_20A8C2990();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
    uint64_t v50 = v75[8];
    uint64_t v51 = (char *)a1 + v50;
    uint64_t v52 = (char *)v40 + v50;
    uint64_t v53 = sub_20A8C3410();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
    *((unsigned char *)a1 + v75[9]) = *((unsigned char *)v40 + v75[9]);
    sub_20A695CD0();
    uint64_t v55 = v54;
    uint64_t v56 = *(int *)(v54 + 48);
    uint64_t v57 = (char *)a1 + v56;
    uint64_t v58 = (char *)v40 + v56;
    uint64_t v59 = sub_20A8C40E0();
    uint64_t v60 = *(void *)(v59 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
    {
      sub_20A695D68(0, &qword_26AC69040, MEMORY[0x263F7AFD8]);
      memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
    }
    uint64_t v62 = *(int *)(v55 + 64);
    uint64_t v63 = (char *)a1 + v62;
    uint64_t v64 = (char *)v40 + v62;
    long long v65 = *((_OWORD *)v64 + 13);
    *((_OWORD *)v63 + 12) = *((_OWORD *)v64 + 12);
    *((_OWORD *)v63 + 13) = v65;
    *((void *)v63 + 28) = *((void *)v64 + 28);
    long long v66 = *((_OWORD *)v64 + 9);
    *((_OWORD *)v63 + 8) = *((_OWORD *)v64 + 8);
    *((_OWORD *)v63 + 9) = v66;
    long long v67 = *((_OWORD *)v64 + 11);
    *((_OWORD *)v63 + 10) = *((_OWORD *)v64 + 10);
    *((_OWORD *)v63 + 11) = v67;
    long long v68 = *((_OWORD *)v64 + 5);
    *((_OWORD *)v63 + 4) = *((_OWORD *)v64 + 4);
    *((_OWORD *)v63 + 5) = v68;
    long long v69 = *((_OWORD *)v64 + 7);
    *((_OWORD *)v63 + 6) = *((_OWORD *)v64 + 6);
    *((_OWORD *)v63 + 7) = v69;
    long long v70 = *((_OWORD *)v64 + 1);
    *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
    *((_OWORD *)v63 + 1) = v70;
    long long v71 = *((_OWORD *)v64 + 3);
    *((_OWORD *)v63 + 2) = *((_OWORD *)v64 + 2);
    *((_OWORD *)v63 + 3) = v71;
  }
  return a1;
}

void sub_20A695CD0()
{
  if (!qword_26763D198)
  {
    type metadata accessor for StockViewModel();
    sub_20A695D68(255, &qword_26AC69040, MEMORY[0x263F7AFD8]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26763D198);
    }
  }
}

void sub_20A695D68(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A695DBC(uint64_t a1)
{
  uint64_t v2 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = (int *)type metadata accessor for StockViewModel();
  uint64_t v4 = a1 + v3[5];
  uint64_t v5 = sub_20A8C3E10();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + v3[6];
  uint64_t v8 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    uint64_t v9 = sub_20A8CDCD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
    uint64_t v10 = v7 + *(int *)(v8 + 32);
    uint64_t v11 = sub_20A8C3D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = a1 + v3[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v14 = v12 + v13[9];
  uint64_t v15 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = v12 + v13[10];
  uint64_t v17 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  uint64_t v18 = v12 + v13[11];
  uint64_t v19 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  uint64_t v20 = a1 + v3[8];
  uint64_t v21 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  sub_20A695CD0();
  uint64_t v23 = a1 + *(int *)(v22 + 48);
  uint64_t v24 = sub_20A8C40E0();
  uint64_t v27 = *(void *)(v24 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v23, 1, v24);
  if (!result)
  {
    char v26 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8);
    return v26(v23, v24);
  }
  return result;
}

uint64_t sub_20A696148(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = (int *)type metadata accessor for StockViewModel();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_20A8C3E10();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_20A695D68(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = v5[6];
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v16 = *((void *)v15 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
  {
    sub_20A695D68(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = sub_20A8CDCD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v13, v14, v18);
    uint64_t v19 = v15[5];
    uint64_t v20 = &v13[v19];
    uint64_t v21 = &v14[v19];
    *(void *)uint64_t v20 = *(void *)v21;
    unsigned char v20[8] = v21[8];
    uint64_t v22 = v15[6];
    uint64_t v23 = &v13[v22];
    uint64_t v24 = &v14[v22];
    *(void *)uint64_t v23 = *(void *)v24;
    v23[8] = v24[8];
    v13[v15[7]] = v14[v15[7]];
    uint64_t v25 = v15[8];
    char v26 = &v13[v25];
    uint64_t v27 = &v14[v25];
    uint64_t v28 = sub_20A8C3D00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    (*(void (**)(char *, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v29 = v5[7];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(void *)uint64_t v30 = *(void *)(a2 + v29);
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(a2 + v29 + 8);
  *(void *)(v30 + 16) = *(void *)(a2 + v29 + 16);
  *(unsigned char *)(v30 + 24) = *(unsigned char *)(a2 + v29 + 24);
  *(void *)(v30 + 32) = *(void *)(a2 + v29 + 32);
  *(unsigned char *)(v30 + 40) = *(unsigned char *)(a2 + v29 + 40);
  uint64_t v32 = *(void *)(a2 + v29 + 56);
  *(void *)(v30 + 48) = *(void *)(a2 + v29 + 48);
  *(void *)(v30 + 56) = v32;
  uint64_t v33 = *(void *)(a2 + v29 + 72);
  *(void *)(v30 + 64) = *(void *)(a2 + v29 + 64);
  *(void *)(v30 + 72) = v33;
  char v34 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v35 = v34[9];
  uint64_t v70 = v31 + v35;
  uint64_t v71 = v30 + v35;
  uint64_t v72 = v5;
  uint64_t v36 = sub_20A8C2EB0();
  uint64_t v37 = a2;
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v38(v71, v70, v36);
  uint64_t v39 = v34[10];
  uint64_t v40 = v30 + v39;
  uint64_t v41 = v31 + v39;
  uint64_t v42 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = v34[11];
  uint64_t v44 = v30 + v43;
  uint64_t v45 = v31 + v43;
  uint64_t v46 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  uint64_t v47 = v72[8];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = v37 + v47;
  uint64_t v50 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  *(unsigned char *)(a1 + v72[9]) = *(unsigned char *)(v37 + v72[9]);
  sub_20A695CD0();
  uint64_t v52 = v51;
  uint64_t v53 = *(int *)(v51 + 48);
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (const void *)(v37 + v53);
  uint64_t v56 = sub_20A8C40E0();
  uint64_t v57 = *(void *)(v56 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
  {
    sub_20A695D68(0, &qword_26AC69040, MEMORY[0x263F7AFD8]);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v57 + 16))(v54, v55, v56);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
  }
  uint64_t v59 = *(int *)(v52 + 64);
  uint64_t v60 = a1 + v59;
  uint64_t v61 = v37 + v59;
  long long v62 = *(_OWORD *)(v61 + 208);
  *(_OWORD *)(v60 + 192) = *(_OWORD *)(v61 + 192);
  *(_OWORD *)(v60 + 208) = v62;
  *(void *)(v60 + 224) = *(void *)(v61 + 224);
  long long v63 = *(_OWORD *)(v61 + 144);
  *(_OWORD *)(v60 + 128) = *(_OWORD *)(v61 + 128);
  *(_OWORD *)(v60 + 144) = v63;
  long long v64 = *(_OWORD *)(v61 + 176);
  *(_OWORD *)(v60 + 160) = *(_OWORD *)(v61 + 160);
  *(_OWORD *)(v60 + 176) = v64;
  long long v65 = *(_OWORD *)(v61 + 80);
  *(_OWORD *)(v60 + 64) = *(_OWORD *)(v61 + 64);
  *(_OWORD *)(v60 + 80) = v65;
  long long v66 = *(_OWORD *)(v61 + 112);
  *(_OWORD *)(v60 + 96) = *(_OWORD *)(v61 + 96);
  *(_OWORD *)(v60 + 112) = v66;
  long long v67 = *(_OWORD *)(v61 + 16);
  *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
  *(_OWORD *)(v60 + 16) = v67;
  long long v68 = *(_OWORD *)(v61 + 48);
  *(_OWORD *)(v60 + 32) = *(_OWORD *)(v61 + 32);
  *(_OWORD *)(v60 + 48) = v68;
  return a1;
}

uint64_t sub_20A696770(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t v5 = (int *)type metadata accessor for StockViewModel();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_20A8C3E10();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_20A695D68(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = v5[6];
  uint64_t v16 = (unsigned char *)(a1 + v15);
  uint64_t v17 = (unsigned char *)(a2 + v15);
  uint64_t v18 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v19 = *((void *)v18 - 1);
  uint64_t v20 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      uint64_t v23 = sub_20A8CDCD0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 16))(v16, v17, v23);
      uint64_t v24 = v18[5];
      uint64_t v25 = &v16[v24];
      char v26 = &v17[v24];
      uint64_t v27 = *(void *)v26;
      v25[8] = v26[8];
      *(void *)uint64_t v25 = v27;
      uint64_t v28 = v18[6];
      uint64_t v29 = &v16[v28];
      uint64_t v30 = &v17[v28];
      LOBYTE(v27) = v30[8];
      *(void *)uint64_t v29 = *(void *)v30;
      v29[8] = v27;
      v16[v18[7]] = v17[v18[7]];
      uint64_t v31 = v18[8];
      uint64_t v32 = &v16[v31];
      uint64_t v33 = &v17[v31];
      uint64_t v34 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    sub_20A6981E8((uint64_t)v16, type metadata accessor for StockSparklineViewModel);
LABEL_12:
    sub_20A695D68(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    memcpy(v16, v17, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v73 = sub_20A8CDCD0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v73 - 8) + 24))(v16, v17, v73);
  uint64_t v74 = v18[5];
  uint64_t v75 = &v16[v74];
  uint64_t v76 = &v17[v74];
  uint64_t v77 = *(void *)v76;
  v75[8] = v76[8];
  *(void *)uint64_t v75 = v77;
  uint64_t v78 = v18[6];
  unsigned int v79 = &v16[v78];
  char v80 = &v17[v78];
  LOBYTE(v77) = v80[8];
  *(void *)unsigned int v79 = *(void *)v80;
  v79[8] = v77;
  v16[v18[7]] = v17[v18[7]];
  uint64_t v81 = v18[8];
  uint64_t v82 = &v16[v81];
  uint64_t v83 = &v17[v81];
  uint64_t v84 = sub_20A8C3D00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 24))(v82, v83, v84);
LABEL_13:
  uint64_t v36 = v5[7];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = *(void *)(a2 + v36);
  *(unsigned char *)(v37 + 8) = *(unsigned char *)(v38 + 8);
  *(void *)uint64_t v37 = v39;
  uint64_t v40 = *(void *)(v38 + 16);
  *(unsigned char *)(v37 + 24) = *(unsigned char *)(v38 + 24);
  *(void *)(v37 + 16) = v40;
  uint64_t v41 = *(void *)(v38 + 32);
  *(unsigned char *)(v37 + 40) = *(unsigned char *)(v38 + 40);
  *(void *)(v37 + 32) = v41;
  *(void *)(v37 + 48) = *(void *)(v38 + 48);
  *(void *)(v37 + 56) = *(void *)(v38 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v37 + 64) = *(void *)(v38 + 64);
  *(void *)(v37 + 72) = *(void *)(v38 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v43 = v42[9];
  uint64_t v44 = v37 + v43;
  uint64_t v45 = v38 + v43;
  uint64_t v46 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = v42[10];
  uint64_t v48 = v37 + v47;
  uint64_t v49 = v38 + v47;
  uint64_t v50 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  uint64_t v51 = v42[11];
  uint64_t v52 = v37 + v51;
  uint64_t v53 = v38 + v51;
  uint64_t v54 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
  uint64_t v55 = v5[8];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  uint64_t v58 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 24))(v56, v57, v58);
  *(unsigned char *)(a1 + v5[9]) = *(unsigned char *)(a2 + v5[9]);
  sub_20A695CD0();
  uint64_t v60 = v59;
  uint64_t v61 = *(int *)(v59 + 48);
  long long v62 = (void *)(a1 + v61);
  long long v63 = (void *)(a2 + v61);
  uint64_t v64 = sub_20A8C40E0();
  uint64_t v65 = *(void *)(v64 - 8);
  long long v66 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v65 + 48);
  LODWORD(v37) = v66(v62, 1, v64);
  int v67 = v66(v63, 1, v64);
  if (!v37)
  {
    if (!v67)
    {
      (*(void (**)(void *, void *, uint64_t))(v65 + 24))(v62, v63, v64);
      goto LABEL_19;
    }
    (*(void (**)(void *, uint64_t))(v65 + 8))(v62, v64);
    goto LABEL_18;
  }
  if (v67)
  {
LABEL_18:
    sub_20A695D68(0, &qword_26AC69040, MEMORY[0x263F7AFD8]);
    memcpy(v62, v63, *(void *)(*(void *)(v68 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v65 + 16))(v62, v63, v64);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
LABEL_19:
  uint64_t v69 = *(int *)(v60 + 64);
  uint64_t v70 = (void *)(a1 + v69);
  uint64_t v71 = (void *)(a2 + v69);
  *uint64_t v70 = *v71;
  v70[1] = v71[1];
  v70[2] = v71[2];
  v70[3] = v71[3];
  v70[4] = v71[4];
  v70[5] = v71[5];
  v70[6] = v71[6];
  v70[7] = v71[7];
  v70[8] = v71[8];
  v70[9] = v71[9];
  v70[10] = v71[10];
  v70[11] = v71[11];
  v70[12] = v71[12];
  v70[13] = v71[13];
  v70[14] = v71[14];
  v70[15] = v71[15];
  v70[16] = v71[16];
  v70[17] = v71[17];
  v70[18] = v71[18];
  v70[19] = v71[19];
  v70[20] = v71[20];
  v70[21] = v71[21];
  v70[22] = v71[22];
  v70[23] = v71[23];
  v70[24] = v71[24];
  v70[25] = v71[25];
  v70[26] = v71[26];
  v70[27] = v71[27];
  v70[28] = v71[28];
  return a1;
}

uint64_t sub_20A697004(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = (int *)type metadata accessor for StockViewModel();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_20A8C3E10();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_20A695D68(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = v5[6];
  int v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v16 = *((void *)v15 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
  {
    sub_20A695D68(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = sub_20A8CDCD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v13, v14, v18);
    uint64_t v19 = v15[5];
    uint64_t v20 = &v13[v19];
    int v21 = &v14[v19];
    *(void *)uint64_t v20 = *(void *)v21;
    unsigned char v20[8] = v21[8];
    uint64_t v22 = v15[6];
    uint64_t v23 = &v13[v22];
    uint64_t v24 = &v14[v22];
    *(void *)uint64_t v23 = *(void *)v24;
    v23[8] = v24[8];
    v13[v15[7]] = v14[v15[7]];
    uint64_t v25 = v15[8];
    char v26 = &v13[v25];
    uint64_t v27 = &v14[v25];
    uint64_t v28 = sub_20A8C3D00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    (*(void (**)(char *, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v29 = v5[7];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(void *)uint64_t v30 = *(void *)(a2 + v29);
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(a2 + v29 + 8);
  *(void *)(v30 + 16) = *(void *)(a2 + v29 + 16);
  *(unsigned char *)(v30 + 24) = *(unsigned char *)(a2 + v29 + 24);
  *(void *)(v30 + 32) = *(void *)(a2 + v29 + 32);
  *(unsigned char *)(v30 + 40) = *(unsigned char *)(a2 + v29 + 40);
  long long v32 = *(_OWORD *)(a2 + v29 + 64);
  *(_OWORD *)(v30 + 48) = *(_OWORD *)(a2 + v29 + 48);
  *(_OWORD *)(v30 + 64) = v32;
  uint64_t v33 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v34 = v33[9];
  uint64_t v35 = v30 + v34;
  uint64_t v36 = v31 + v34;
  uint64_t v37 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
  uint64_t v38 = v33[10];
  uint64_t v39 = v30 + v38;
  uint64_t v40 = v31 + v38;
  uint64_t v41 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
  uint64_t v42 = v33[11];
  uint64_t v43 = v30 + v42;
  uint64_t v44 = v31 + v42;
  uint64_t v45 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
  uint64_t v46 = v5[8];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  uint64_t v49 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
  *(unsigned char *)(a1 + v5[9]) = *(unsigned char *)(a2 + v5[9]);
  sub_20A695CD0();
  uint64_t v51 = v50;
  uint64_t v52 = *(int *)(v50 + 48);
  uint64_t v53 = (void *)(a1 + v52);
  uint64_t v54 = (const void *)(a2 + v52);
  uint64_t v55 = sub_20A8C40E0();
  uint64_t v56 = *(void *)(v55 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
  {
    sub_20A695D68(0, &qword_26AC69040, MEMORY[0x263F7AFD8]);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v56 + 32))(v53, v54, v55);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
  }
  uint64_t v58 = *(int *)(v51 + 64);
  uint64_t v59 = a1 + v58;
  uint64_t v60 = a2 + v58;
  long long v61 = *(_OWORD *)(v60 + 208);
  *(_OWORD *)(v59 + 192) = *(_OWORD *)(v60 + 192);
  *(_OWORD *)(v59 + 208) = v61;
  *(void *)(v59 + 224) = *(void *)(v60 + 224);
  long long v62 = *(_OWORD *)(v60 + 144);
  *(_OWORD *)(v59 + 128) = *(_OWORD *)(v60 + 128);
  *(_OWORD *)(v59 + 144) = v62;
  long long v63 = *(_OWORD *)(v60 + 176);
  *(_OWORD *)(v59 + 160) = *(_OWORD *)(v60 + 160);
  *(_OWORD *)(v59 + 176) = v63;
  long long v64 = *(_OWORD *)(v60 + 80);
  *(_OWORD *)(v59 + 64) = *(_OWORD *)(v60 + 64);
  *(_OWORD *)(v59 + 80) = v64;
  long long v65 = *(_OWORD *)(v60 + 112);
  *(_OWORD *)(v59 + 96) = *(_OWORD *)(v60 + 96);
  *(_OWORD *)(v59 + 112) = v65;
  long long v66 = *(_OWORD *)(v60 + 16);
  *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
  *(_OWORD *)(v59 + 16) = v66;
  long long v67 = *(_OWORD *)(v60 + 48);
  *(_OWORD *)(v59 + 32) = *(_OWORD *)(v60 + 32);
  *(_OWORD *)(v59 + 48) = v67;
  return a1;
}

uint64_t sub_20A6975EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t v5 = (int *)type metadata accessor for StockViewModel();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_20A8C3E10();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_20A695D68(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = v5[6];
  uint64_t v16 = (unsigned char *)(a1 + v15);
  uint64_t v17 = (unsigned char *)(a2 + v15);
  uint64_t v18 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v19 = *((void *)v18 - 1);
  uint64_t v20 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      uint64_t v23 = sub_20A8CDCD0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32))(v16, v17, v23);
      uint64_t v24 = v18[5];
      uint64_t v25 = &v16[v24];
      char v26 = &v17[v24];
      *(void *)uint64_t v25 = *(void *)v26;
      v25[8] = v26[8];
      uint64_t v27 = v18[6];
      uint64_t v28 = &v16[v27];
      uint64_t v29 = &v17[v27];
      *(void *)uint64_t v28 = *(void *)v29;
      v28[8] = v29[8];
      v16[v18[7]] = v17[v18[7]];
      uint64_t v30 = v18[8];
      uint64_t v31 = &v16[v30];
      long long v32 = &v17[v30];
      uint64_t v33 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    sub_20A6981E8((uint64_t)v16, type metadata accessor for StockSparklineViewModel);
LABEL_12:
    sub_20A695D68(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    memcpy(v16, v17, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v78 = sub_20A8CDCD0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v78 - 8) + 40))(v16, v17, v78);
  uint64_t v79 = v18[5];
  char v80 = &v16[v79];
  uint64_t v81 = &v17[v79];
  *(void *)char v80 = *(void *)v81;
  v80[8] = v81[8];
  uint64_t v82 = v18[6];
  uint64_t v83 = &v16[v82];
  uint64_t v84 = &v17[v82];
  *(void *)uint64_t v83 = *(void *)v84;
  v83[8] = v84[8];
  v16[v18[7]] = v17[v18[7]];
  uint64_t v85 = v18[8];
  uint64_t v86 = &v16[v85];
  uint64_t v87 = &v17[v85];
  uint64_t v88 = sub_20A8C3D00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 40))(v86, v87, v88);
LABEL_13:
  uint64_t v35 = v5[7];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  *(void *)uint64_t v36 = *(void *)(a2 + v35);
  *(unsigned char *)(v36 + 8) = *(unsigned char *)(a2 + v35 + 8);
  *(void *)(v36 + 16) = *(void *)(a2 + v35 + 16);
  *(unsigned char *)(v36 + 24) = *(unsigned char *)(a2 + v35 + 24);
  *(void *)(v36 + 32) = *(void *)(a2 + v35 + 32);
  *(unsigned char *)(v36 + 40) = *(unsigned char *)(a2 + v35 + 40);
  uint64_t v38 = *(void *)(a2 + v35 + 56);
  *(void *)(v36 + 48) = *(void *)(a2 + v35 + 48);
  *(void *)(v36 + 56) = v38;
  swift_bridgeObjectRelease();
  uint64_t v39 = *(void *)(v37 + 72);
  *(void *)(v36 + 64) = *(void *)(v37 + 64);
  *(void *)(v36 + 72) = v39;
  swift_bridgeObjectRelease();
  uint64_t v40 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v41 = v40[9];
  uint64_t v42 = v36 + v41;
  uint64_t v43 = v37 + v41;
  uint64_t v44 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 40))(v42, v43, v44);
  uint64_t v45 = v40[10];
  uint64_t v46 = v36 + v45;
  uint64_t v47 = v37 + v45;
  uint64_t v48 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 40))(v46, v47, v48);
  uint64_t v49 = v40[11];
  uint64_t v50 = v36 + v49;
  uint64_t v51 = v37 + v49;
  uint64_t v52 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 40))(v50, v51, v52);
  uint64_t v53 = v5[8];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  uint64_t v56 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 40))(v54, v55, v56);
  *(unsigned char *)(a1 + v5[9]) = *(unsigned char *)(a2 + v5[9]);
  sub_20A695CD0();
  uint64_t v58 = v57;
  uint64_t v59 = *(int *)(v57 + 48);
  uint64_t v60 = (void *)(a1 + v59);
  long long v61 = (void *)(a2 + v59);
  uint64_t v62 = sub_20A8C40E0();
  uint64_t v63 = *(void *)(v62 - 8);
  long long v64 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v63 + 48);
  LODWORD(v36) = v64(v60, 1, v62);
  int v65 = v64(v61, 1, v62);
  if (!v36)
  {
    if (!v65)
    {
      (*(void (**)(void *, void *, uint64_t))(v63 + 40))(v60, v61, v62);
      goto LABEL_19;
    }
    (*(void (**)(void *, uint64_t))(v63 + 8))(v60, v62);
    goto LABEL_18;
  }
  if (v65)
  {
LABEL_18:
    sub_20A695D68(0, &qword_26AC69040, MEMORY[0x263F7AFD8]);
    memcpy(v60, v61, *(void *)(*(void *)(v66 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v63 + 32))(v60, v61, v62);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
LABEL_19:
  uint64_t v67 = *(int *)(v58 + 64);
  uint64_t v68 = a1 + v67;
  uint64_t v69 = a2 + v67;
  long long v70 = *(_OWORD *)(v69 + 16);
  *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
  *(_OWORD *)(v68 + 16) = v70;
  long long v71 = *(_OWORD *)(v69 + 48);
  *(_OWORD *)(v68 + 32) = *(_OWORD *)(v69 + 32);
  *(_OWORD *)(v68 + 48) = v71;
  long long v72 = *(_OWORD *)(v69 + 80);
  *(_OWORD *)(v68 + 64) = *(_OWORD *)(v69 + 64);
  *(_OWORD *)(v68 + 80) = v72;
  long long v73 = *(_OWORD *)(v69 + 112);
  *(_OWORD *)(v68 + 96) = *(_OWORD *)(v69 + 96);
  *(_OWORD *)(v68 + 112) = v73;
  long long v74 = *(_OWORD *)(v69 + 144);
  *(_OWORD *)(v68 + 128) = *(_OWORD *)(v69 + 128);
  *(_OWORD *)(v68 + 144) = v74;
  long long v75 = *(_OWORD *)(v69 + 176);
  *(_OWORD *)(v68 + 160) = *(_OWORD *)(v69 + 160);
  *(_OWORD *)(v68 + 176) = v75;
  long long v76 = *(_OWORD *)(v69 + 208);
  *(_OWORD *)(v68 + 192) = *(_OWORD *)(v69 + 192);
  *(_OWORD *)(v68 + 208) = v76;
  *(void *)(v68 + 224) = *(void *)(v69 + 224);
  return a1;
}

uint64_t sub_20A697DB8(uint64_t a1, uint64_t a2)
{
  sub_20A695CD0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A697E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A695CD0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, a2, a3, v6);
}

uint64_t type metadata accessor for StockSearchLayoutModel()
{
  uint64_t result = qword_26AC74180;
  if (!qword_26AC74180) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A697EEC(uint64_t a1)
{
  type metadata accessor for StockViewModel();
  if (v2 <= 0x3F)
  {
    sub_20A695D68(319, &qword_26AC69040, MEMORY[0x263F7AFD8]);
    if (v3 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      swift_initEnumMetadataSingleCase();
      *(_DWORD *)(*(void *)(a1 - 8) + 84) = v4;
    }
  }
}

double sub_20A698000(uint64_t a1)
{
  MEMORY[0x270FA5388](a1 - 8);
  unint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A698184(v1, (uint64_t)v3);
  sub_20A695CD0();
  double v5 = *(double *)&v3[*(int *)(v4 + 64)];
  sub_20A4AF940((uint64_t)&v3[*(int *)(v4 + 48)]);
  sub_20A6981E8((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  return v5;
}

double sub_20A6980CC(uint64_t a1)
{
  MEMORY[0x270FA5388](a1 - 8);
  unint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A698184(v1, (uint64_t)v3);
  sub_20A695CD0();
  double v5 = *(double *)&v3[*(int *)(v4 + 64) + 32];
  sub_20A4AF940((uint64_t)&v3[*(int *)(v4 + 48)]);
  sub_20A6981E8((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  return v5;
}

uint64_t sub_20A698184(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockSearchLayoutModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A6981E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A698248()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8C77E0();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v6, v1, v2, v4);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  uint64_t v8 = 0;
  if (v7 != *MEMORY[0x263F7A730])
  {
    if (v7 == *MEMORY[0x263F7A720])
    {
      return 23;
    }
    else if (v7 == *MEMORY[0x263F7A708])
    {
      return 26;
    }
    else
    {
      if (v7 != *MEMORY[0x263F7A718])
      {
        if (v7 == *MEMORY[0x263F7A738]) {
          return 18;
        }
        if (v7 == *MEMORY[0x263F7A728]) {
          return 19;
        }
        if (v7 != *MEMORY[0x263F7A710]) {
          (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
        }
      }
      return 0;
    }
  }
  return v8;
}

unsigned char *storeEnumTagSinglePayload for TickerVisibilityState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A6984C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TickerVisibilityState()
{
  return &type metadata for TickerVisibilityState;
}

unint64_t sub_20A698504()
{
  unint64_t result = qword_26763D1A0;
  if (!qword_26763D1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D1A0);
  }
  return result;
}

unint64_t sub_20A69855C()
{
  unint64_t result = qword_26AC7E900;
  if (!qword_26AC7E900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7E900);
  }
  return result;
}

uint64_t sub_20A6985B0(CGRect *a1, CGRect *a2)
{
  CGFloat x = a1[1].origin.x;
  CGFloat y = a1[1].origin.y;
  CGFloat width = a1[1].size.width;
  CGFloat height = a1[1].size.height;
  CGFloat v6 = a2[1].origin.x;
  CGFloat v7 = a2[1].origin.y;
  CGFloat v8 = a2[1].size.width;
  CGFloat v9 = a2[1].size.height;
  if (!CGRectEqualToRect(*a1, *a2)) {
    return 0;
  }
  v11.origin.CGFloat x = x;
  v11.origin.CGFloat y = y;
  v11.size.CGFloat width = width;
  v11.size.CGFloat height = height;
  v12.origin.CGFloat x = v6;
  v12.origin.CGFloat y = v7;
  v12.size.CGFloat width = v8;
  v12.size.CGFloat height = v9;
  if (!CGRectEqualToRect(v11, v12)) {
    return 0;
  }
  sub_20A4911E4();
  return sub_20A8CEF30() & 1;
}

uint64_t sub_20A69866C()
{
  sub_20A69855C();

  return sub_20A8CACE0();
}

unint64_t sub_20A6986AC()
{
  unint64_t result = qword_26AC7E908;
  if (!qword_26AC7E908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7E908);
  }
  return result;
}

void destroy for StockListSectionHeaderViewLayoutAttributes(uint64_t a1)
{
}

uint64_t initializeWithCopy for StockListSectionHeaderViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  uint64_t v5 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v5;
  id v6 = v5;
  return a1;
}

void *assignWithCopy for StockListSectionHeaderViewLayoutAttributes(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  long long v3 = (void *)a2[8];
  long long v4 = (void *)a1[8];
  a1[8] = v3;
  id v5 = v3;

  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for StockListSectionHeaderViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  id v5 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  return a1;
}

uint64_t getEnumTagSinglePayload for StockListSectionHeaderViewLayoutAttributes(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockListSectionHeaderViewLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockListSectionHeaderViewLayoutAttributes()
{
  return &type metadata for StockListSectionHeaderViewLayoutAttributes;
}

uint64_t sub_20A6988D0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F) {
    return swift_initClassMetadata2();
  }
  return result;
}

uint64_t sub_20A6989CC@<X0>(uint64_t a1@<X8>)
{
  __swift_project_boxed_opaque_existential_1((void *)(v1 + qword_26763B928), *(void *)(v1 + qword_26763B928 + 24));
  switch(sub_20A8CC9A0())
  {
    case 0:
      sub_20A50C150();
      uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
      uint64_t v19 = v21;
      uint64_t v17 = a1;
      uint64_t v18 = 1;
      goto LABEL_19;
    case 1:
      sub_20A50C150();
      uint64_t v4 = v13;
      uint64_t v5 = a1 + *(int *)(v13 + 48);
      if (qword_26AC819F0 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_20A8CD2C0();
      uint64_t v14 = __swift_project_value_buffer(v6, (uint64_t)qword_26AC9EC48);
      CGFloat v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
      v8(a1, v14, v6);
      if (qword_26AC81A00 != -1) {
        swift_once();
      }
      CGFloat v9 = qword_26AC9ECA8;
      goto LABEL_18;
    case 3:
      sub_20A8CE9E0();
      sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
      uint64_t v10 = (void *)sub_20A8CF180();
      sub_20A8C7D90();

      goto LABEL_8;
    case 4:
    case 5:
      sub_20A50C150();
      uint64_t v4 = v3;
      uint64_t v5 = a1 + *(int *)(v3 + 48);
      if (qword_267639BC0 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_20A8CD2C0();
      uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)qword_267652F30);
      CGFloat v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
      v8(a1, v7, v6);
      if (qword_267639BE0 != -1) {
        swift_once();
      }
      CGFloat v9 = qword_267652F78;
      goto LABEL_18;
    case 6:
LABEL_8:
      sub_20A50C150();
      uint64_t v4 = v11;
      uint64_t v5 = a1 + *(int *)(v11 + 48);
      if (qword_267639BC8 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_20A8CD2C0();
      uint64_t v12 = __swift_project_value_buffer(v6, (uint64_t)qword_267652F48);
      CGFloat v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
      v8(a1, v12, v6);
      if (qword_267639BE8 != -1) {
        swift_once();
      }
      CGFloat v9 = qword_267652F90;
LABEL_18:
      uint64_t v15 = __swift_project_value_buffer(v6, (uint64_t)v9);
      v8(v5, v15, v6);
      uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
      uint64_t v17 = a1;
      uint64_t v18 = 0;
      uint64_t v19 = v4;
LABEL_19:
      return v16(v17, v18, 1, v19);
    default:
      sub_20A8CF520();
      __break(1u);
      JUMPOUT(0x20A698DFCLL);
  }
}

uint64_t sub_20A698E18@<X0>(uint64_t a1@<X8>)
{
  __swift_project_boxed_opaque_existential_1((void *)(v1 + qword_26763B928), *(void *)(v1 + qword_26763B928 + 24));
  switch(sub_20A8CC9A0())
  {
    case 0:
      sub_20A50C150();
      uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
      uint64_t v19 = v21;
      uint64_t v17 = a1;
      uint64_t v18 = 1;
      goto LABEL_19;
    case 1:
      sub_20A50C150();
      uint64_t v4 = v13;
      uint64_t v5 = a1 + *(int *)(v13 + 48);
      if (qword_26AC81A10 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_20A8CD2C0();
      uint64_t v14 = __swift_project_value_buffer(v6, (uint64_t)qword_26AC9EC60);
      CGFloat v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
      v8(a1, v14, v6);
      if (qword_26AC81A20 != -1) {
        swift_once();
      }
      CGFloat v9 = qword_26AC9ECC0;
      goto LABEL_18;
    case 3:
      sub_20A8CE9E0();
      sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
      uint64_t v10 = (void *)sub_20A8CF180();
      sub_20A8C7D90();

      goto LABEL_8;
    case 4:
    case 5:
      sub_20A50C150();
      uint64_t v4 = v3;
      uint64_t v5 = a1 + *(int *)(v3 + 48);
      if (qword_267639B70 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_20A8CD2C0();
      uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)qword_267652E90);
      CGFloat v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
      v8(a1, v7, v6);
      if (qword_267639B80 != -1) {
        swift_once();
      }
      CGFloat v9 = qword_267652EC0;
      goto LABEL_18;
    case 6:
LABEL_8:
      sub_20A50C150();
      uint64_t v4 = v11;
      uint64_t v5 = a1 + *(int *)(v11 + 48);
      if (qword_267639B78 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_20A8CD2C0();
      uint64_t v12 = __swift_project_value_buffer(v6, (uint64_t)qword_267652EA8);
      CGFloat v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
      v8(a1, v12, v6);
      if (qword_267639B88 != -1) {
        swift_once();
      }
      CGFloat v9 = qword_267652ED8;
LABEL_18:
      uint64_t v15 = __swift_project_value_buffer(v6, (uint64_t)v9);
      v8(v5, v15, v6);
      uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
      uint64_t v17 = a1;
      uint64_t v18 = 0;
      uint64_t v19 = v4;
LABEL_19:
      return v16(v17, v18, 1, v19);
    default:
      sub_20A8CF520();
      __break(1u);
      JUMPOUT(0x20A699248);
  }
}

uint64_t sub_20A699264(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v6 = *a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, void, char *, uint64_t))(a5 + 72))(a1, a2, 0, &v6, a4);
}

uint64_t *sub_20A6992AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = (uint64_t *)((char *)v0 + *(void *)(*v0 + 136));
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t *, _UNKNOWN **, uint64_t, uint64_t))(v5 + 24))(v0, &off_26BE6A9F8, v4, v5);
  sub_20A4380C4((uint64_t)(v0 + 2));
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v2 + 80) - 8) + 8))((uint64_t)v1 + *(void *)(*v1 + 112));
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  swift_release();
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v1 + *(void *)(*v1 + 200));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_20A699510()
{
  sub_20A6992AC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ForYouFeedInteractor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_20A699580()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v27 = sub_20A8C40E0();
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_20A8C3410();
  uint64_t v24 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  char v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C9430();
  uint64_t v7 = *(void *)((char *)v1 + *(void *)(*v1 + 128));
  sub_20A7B1D8C(v28);
  __swift_project_boxed_opaque_existential_1(v28, v28[3]);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  CGFloat v9 = (void *)swift_allocObject();
  uint64_t v23 = *(void *)(v2 + 80);
  v9[2] = v23;
  uint64_t v10 = *(void *)(v2 + 88);
  v9[3] = v10;
  v9[4] = v8;
  sub_20A8CBEC0();
  swift_release();
  swift_beginAccess();
  sub_20A8CBE50();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  __swift_project_boxed_opaque_existential_1((void *)(v7 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_watchlistManager), *(void *)(v7 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_watchlistManager + 24));
  sub_20A8C3600();
  sub_20A8C4060();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v27);
  uint64_t v11 = v23;
  uint64_t v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 40))(v6, v23, v10);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v26);
  v28[0] = v12;
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v11;
  v14[3] = v10;
  v14[4] = v13;
  uint64_t v15 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A6A022C(0, (unint64_t *)&qword_26AC69FD0, MEMORY[0x263F7D538]);
  sub_20A69FD9C(&qword_26AC69FC8, (unint64_t *)&qword_26AC69FD0, v15);
  swift_retain();
  sub_20A8C8C00();
  swift_release();
  swift_release();
  uint64_t v16 = *(void *)((char *)v1 + *(void *)(*v1 + 160));
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (uint64_t (*)(uint64_t))swift_allocObject();
  *((void *)v18 + 2) = v11;
  *((void *)v18 + 3) = v10;
  *((void *)v18 + 4) = v17;
  uint64_t v19 = (uint64_t (**)(uint64_t))(v16 + qword_26763B920);
  uint64_t v20 = *(void *)(v16 + qword_26763B920);
  void *v19 = sub_20A6A04A8;
  v19[1] = v18;
  sub_20A459CA4(v20);
  return swift_release();
}

uint64_t sub_20A699A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 64))(a1, a3, a4);
    uint64_t v8 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
    sub_20A6A022C(0, (unint64_t *)&qword_26AC69FD0, MEMORY[0x263F7D538]);
    sub_20A69FD9C(&qword_26AC69FC8, (unint64_t *)&qword_26AC69FD0, v8);
    sub_20A8C8C00();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_20A699B58()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_20A7B25B0();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A699BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_20A678AA0();
  MEMORY[0x270FA5388](v7 - 8);
  CGFloat v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_20A6A04B4(a1, (uint64_t)v9, (uint64_t (*)(void))sub_20A678AA0);
    sub_20A50C150();
    uint64_t v12 = v11;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11) == 1)
    {
      v19[4] = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 80))(a3, a4);
      uint64_t v13 = swift_allocObject();
      swift_beginAccess();
      swift_weakLoadStrong();
      swift_weakInit();
      swift_release();
      uint64_t v14 = (void *)swift_allocObject();
      v14[2] = a3;
      v14[3] = a4;
      v14[4] = v13;
      uint64_t v15 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
      sub_20A6A022C(0, (unint64_t *)&qword_26AC69FD0, MEMORY[0x263F7D538]);
      sub_20A69FD9C(&qword_26AC69FC8, (unint64_t *)&qword_26AC69FD0, v15);
      swift_retain();
      sub_20A8C8C00();
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
    else
    {
      swift_release();
      uint64_t v16 = &v9[*(int *)(v12 + 48)];
      uint64_t v17 = sub_20A8CD2C0();
      uint64_t v18 = *(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8);
      v18(v16, v17);
      return ((uint64_t (*)(char *, uint64_t))v18)(v9, v17);
    }
  }
  return result;
}

uint64_t sub_20A699EB8(uint64_t a1)
{
  uint64_t v2 = sub_20A8C9B80();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == *MEMORY[0x263F7D968])
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      uint64_t v8 = MEMORY[0x2105289B0](v7 + 16);
      if (v8)
      {
        uint64_t v9 = MEMORY[0x2105289B0](v8 + 16);
        if (v9)
        {
          *(void *)(swift_allocObject() + 16) = v9;
          swift_retain();
          swift_unknownObjectRetain();
          sub_20A8C66A0();
          swift_release_n();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          return swift_release();
        }
        else
        {
          swift_release();
          return swift_unknownObjectRelease();
        }
      }
      else
      {
        return swift_release();
      }
    }
    else
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  return result;
}

uint64_t sub_20A69A0CC()
{
  (*(void (**)(void))(*(void *)(*(void *)v0 + 88) + 48))(*(void *)(*(void *)v0 + 80));
  uint64_t v1 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A6A022C(0, (unint64_t *)&qword_26AC69FD0, MEMORY[0x263F7D538]);
  sub_20A69FD9C(&qword_26AC69FC8, (unint64_t *)&qword_26AC69FD0, v1);
  sub_20A8C8C00();
  return swift_release();
}

uint64_t sub_20A69A1E0(void *a1)
{
  uint64_t v73 = *v1;
  uint64_t v70 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x270FA5388](v70);
  long long v71 = (char *)v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A69FD68(0);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44D7C8(0);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v66 = v10;
  uint64_t v67 = (char *)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  long long v74 = (char *)v58 - v12;
  sub_20A6A022C(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v14 = v13;
  uint64_t v75 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v68 = v15;
  uint64_t v69 = (char *)v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v58 - v17;
  long long v72 = v1;
  sub_20A8C8BE0();
  uint64_t v77 = *(void *)&v76[0];
  uint64_t v19 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
  sub_20A6A022C(0, (unint64_t *)&qword_26AC6A060, MEMORY[0x263F7D550]);
  uint64_t v20 = v19;
  uint64_t v21 = v8;
  uint64_t v22 = v9;
  sub_20A69FD9C((unint64_t *)&qword_26AC6A050, (unint64_t *)&qword_26AC6A060, v20);
  sub_20A8C9490();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C5B30();
  sub_20A8CBA60();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v21) == 1)
  {
    sub_20A6A0604((uint64_t)v6, (uint64_t (*)(void))sub_20A69FD68);
    uint64_t v23 = a1[3];
    uint64_t v24 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v23);
    MEMORY[0x210522FB0](0, v23, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v18, v14);
  }
  else
  {
    int v65 = v18;
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v27 = v74;
    v26(v74, v6, v21);
    uint64_t v28 = (uint64_t)v71;
    sub_20A8C8330();
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v29 = *(void *)(v28 + 16);
      swift_bridgeObjectRelease();
      uint64_t v30 = swift_allocObject();
      uint64_t v62 = v26;
      uint64_t v31 = v72;
      swift_weakInit();
      sub_20A4342F4((uint64_t)a1, (uint64_t)v76);
      long long v32 = (uint64_t (*)(void *))swift_allocObject();
      uint64_t v33 = v73;
      long long v71 = *(char **)(v73 + 80);
      *((void *)v32 + 2) = v71;
      uint64_t v70 = *(void *)(v33 + 88);
      *((void *)v32 + 3) = v70;
      *((void *)v32 + 4) = v29;
      *((void *)v32 + 5) = v30;
      uint64_t v34 = sub_20A42BEBC(v76, (uint64_t)v32 + 48);
      MEMORY[0x270FA5388](v34);
      v58[-4] = v31;
      v58[-3] = v27;
      uint64_t v63 = v29;
      v58[-2] = v29;
      swift_retain();
      sub_20A8C6670();
      uint64_t v64 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
      uint64_t v35 = (void *)sub_20A8CEBE0();
      uint64_t v36 = swift_allocObject();
      uint64_t v59 = sub_20A69FE60;
      *(void *)(v36 + 16) = sub_20A69FE60;
      *(void *)(v36 + 24) = v32;
      swift_retain();
      uint64_t v37 = sub_20A8C6520();
      uint64_t v60 = v14;
      v58[1] = v37;
      swift_release();

      swift_release();
      v58[0] = sub_20A8CEBE0();
      uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
      uint64_t v39 = v67;
      uint64_t v40 = v21;
      uint64_t v61 = v21;
      v38(v67, v74, v21);
      unint64_t v41 = (*(unsigned __int8 *)(v22 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      unint64_t v42 = (v66 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v43 = (char *)swift_allocObject();
      uint64_t v44 = v70;
      *((void *)v43 + 2) = v71;
      *((void *)v43 + 3) = v44;
      uint64_t v45 = v62;
      *((void *)v43 + 4) = v63;
      v45(&v43[v41], v39, v40);
      uint64_t v46 = (uint64_t (**)(void *))&v43[v42];
      *uint64_t v46 = v59;
      v46[1] = v32;
      swift_retain();
      swift_retain();
      uint64_t v47 = (void *)v58[0];
      uint64_t v67 = (char *)sub_20A8C6560();
      swift_release();

      swift_release();
      uint64_t v48 = (void *)sub_20A8CEBE0();
      uint64_t v49 = v75;
      uint64_t v50 = v69;
      uint64_t v51 = v65;
      uint64_t v52 = v60;
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v69, v65, v60);
      unint64_t v53 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
      uint64_t v54 = swift_allocObject();
      uint64_t v55 = v70;
      *(void *)(v54 + 16) = v71;
      *(void *)(v54 + 24) = v55;
      (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v54 + v53, v50, v52);
      sub_20A8C65A0();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      swift_release();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v51, v52);
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v74, v61);
    }
    else
    {
      sub_20A6A0604(v28, (uint64_t (*)(void))type metadata accessor for ForYouFeedModel);
      uint64_t v56 = a1[3];
      uint64_t v57 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v56);
      MEMORY[0x210522FB0](0, v56, v57);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v65, v14);
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v27, v21);
    }
  }
}

uint64_t sub_20A69AA38(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_20A6A022C(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v22 - v10;
  if (!a2)
  {
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v13 = Strong;
      if (a1)
      {
        id v14 = a1;
        swift_retain();
      }
      else
      {
        swift_retain();
        sub_20A8C8BE0();
        aBlock[6] = aBlock[0];
        uint64_t v15 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
        sub_20A6A022C(0, (unint64_t *)&qword_26AC6A060, MEMORY[0x263F7D550]);
        v22[1] = v16;
        sub_20A69FD9C((unint64_t *)&qword_26AC6A050, (unint64_t *)&qword_26AC6A060, v15);
        sub_20A8C9490();
        swift_release();
        type metadata accessor for ForYouFeedSectionDescriptor();
        type metadata accessor for ForYouFeedModel();
        sub_20A69F9F4(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
        sub_20A69F9F4((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
        sub_20A8C9400();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      }
      sub_20A8C9430();
      swift_release();
      id v17 = objc_msgSend(self, sel_sharedApplication);
      aBlock[4] = sub_20A6A0450;
      aBlock[5] = v13;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_20A4713FC;
      aBlock[3] = &block_descriptor_29;
      uint64_t v18 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v17, sel_su_performBlockAfterCATransactionCommits_, v18);
      _Block_release(v18);
      swift_release();
    }
  }
  uint64_t v19 = a4[3];
  uint64_t v20 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v19);
  return MEMORY[0x210522FB0](a1 == 0, v19, v20);
}

uint64_t sub_20A69ADDC()
{
  if (qword_26AC69360 != -1) {
    swift_once();
  }
  swift_retain();
  sub_20A8C5AD0();
  return swift_release();
}

uint64_t sub_20A69AE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A44D7C8(0);
  uint64_t v4 = sub_20A8C82F0();
  uint64_t v6 = sub_20A7B32EC(v4, v5, a3);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_20A69AED8(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a4;
  uint64_t v31 = a3;
  uint64_t v6 = (void *)*a2;
  uint64_t v29 = sub_20A8C40E0();
  uint64_t v7 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_20A8C3410();
  uint64_t v10 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[1];
  uint64_t v27 = *a1;
  uint64_t v28 = v13;
  uint64_t v26 = a1[2];
  uint64_t v14 = *(void *)((char *)a2 + v6[16]);
  v25[1] = (char *)a2 + v6[14];
  __swift_project_boxed_opaque_existential_1((void *)(v14 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_watchlistManager), *(void *)(v14 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_watchlistManager + 24));
  sub_20A8C3600();
  sub_20A8C4060();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v29);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t))(v6[11] + 56);
  uint64_t v16 = v6[10];
  uint64_t v18 = v27;
  uint64_t v17 = v28;
  uint64_t v19 = v26;
  uint64_t v20 = v15(v27, v28, v26, v12, v16);
  uint64_t v29 = v20;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v30);
  uint64_t v33 = v20;
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = v18;
  v21[3] = v17;
  v21[4] = v19;
  v21[5] = a2;
  uint64_t v22 = v32;
  v21[6] = v31;
  v21[7] = v22;
  uint64_t v23 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A6A022C(0, (unint64_t *)&qword_26AC69FD0, MEMORY[0x263F7D538]);
  sub_20A69FD9C(&qword_26AC69FC8, (unint64_t *)&qword_26AC69FD0, v23);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_20A8C8C00();
  swift_release();
  return swift_release();
}

void sub_20A69B21C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  uint64_t v9 = sub_20A8C9B80();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (id *)((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, uint64_t, uint64_t, double))(v10 + 16))(v13, a1, v9, v11);
  int v14 = (*(uint64_t (**)(id *, uint64_t))(v10 + 88))(v13, v9);
  if (v14 == *MEMORY[0x263F7D960])
  {
    (*(void (**)(id *, uint64_t))(v10 + 96))(v13, v9);
    uint64_t v15 = *v13;
    id v16 = *v13;
    ((void (*)(void *))a6)(v15);

LABEL_5:
    return;
  }
  if (v14 == *MEMORY[0x263F7D958])
  {
    type metadata accessor for ForYouFeedInteractor.Errors();
    swift_getWitnessTable();
    uint64_t v15 = (void *)swift_allocError();
    a6();
    goto LABEL_5;
  }
  if (v14 == *MEMORY[0x263F7D968])
  {
    type metadata accessor for ForYouFeedServiceConfig();
    sub_20A69F9F4(&qword_26AC74890, (void (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig);
    if ((sub_20A8CCB80() & 1) != 0 && (sub_20A69B534() & 1) == 0)
    {
      uint64_t v17 = MEMORY[0x2105289B0](a5 + 16);
      if (v17)
      {
        __swift_project_boxed_opaque_existential_1((void *)(v17 + 88), *(void *)(v17 + 112));
        uint64_t v18 = (void (__cdecl *)())off_26BE6B868;
        type metadata accessor for ForYouFeedTracker();
        v18();
        swift_unknownObjectRelease();
      }
    }
    ((void (*)(void))a6)(0);
  }
  else
  {
    sub_20A8CF520();
    __break(1u);
  }
}

uint64_t sub_20A69B534()
{
  uint64_t v52 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x270FA5388](v52);
  uint64_t v47 = (char *)&v40 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6A022C(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  uint64_t v2 = v1;
  uint64_t v45 = *(void (***)(char *, uint64_t))(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v51 = (char *)&v40 - v6;
  sub_20A6A039C();
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
  sub_20A6A022C(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v12 = v11;
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  int v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v40 - v16;
  sub_20A8C8BE0();
  v53[0] = v53[4];
  uint64_t v18 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
  sub_20A6A022C(0, (unint64_t *)&qword_26AC6A060, MEMORY[0x263F7D550]);
  uint64_t v50 = v19;
  sub_20A69FD9C((unint64_t *)&qword_26AC6A050, (unint64_t *)&qword_26AC6A060, v18);
  sub_20A8C9490();
  swift_release();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
  uint64_t v40 = v17;
  uint64_t v48 = v20;
  uint64_t v49 = v41 + 16;
  v20(v14, v17, v12);
  uint64_t v21 = v46;
  sub_20A69FD9C((unint64_t *)&unk_26AC6AD10, (unint64_t *)&qword_26AC6AD30, v46);
  uint64_t v50 = v14;
  sub_20A8CE4B0();
  uint64_t v22 = &v10[*(int *)(v8 + 44)];
  sub_20A69FD9C((unint64_t *)&unk_26AC6AD20, (unint64_t *)&qword_26AC6AD30, v21);
  uint64_t v23 = *(void *)v22;
  sub_20A8CE8A0();
  if (v23 == v53[0])
  {
LABEL_2:
    sub_20A6A0604((uint64_t)v10, (uint64_t (*)(void))sub_20A6A039C);
    uint64_t v24 = 0;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v40, v12);
    return v24;
  }
  unint64_t v42 = (void (**)(char *, char *, uint64_t))(v45 + 4);
  uint64_t v43 = (void (**)(char *))(v45 + 2);
  ++v45;
  uint64_t v46 = (uint64_t (*)(uint64_t, void *))(v41 + 8);
  uint64_t v44 = v10;
  uint64_t v25 = v51;
  while (1)
  {
    uint64_t v26 = (void (*)(void *, void))sub_20A8CE8C0();
    (*v43)(v25);
    v26(v53, 0);
    uint64_t v27 = v50;
    v48(v50, v10, v12);
    uint64_t v28 = v22;
    sub_20A8CE8B0();
    uint64_t v29 = *(void (**)(char *, uint64_t))v46;
    uint64_t v30 = v12;
    (*(void (**)(char *, uint64_t))v46)(v27, v12);
    (*v42)(v4, v25, v2);
    uint64_t v31 = (uint64_t)v47;
    uint64_t v32 = v2;
    sub_20A8C8820();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v34 = v31;
    if (EnumCaseMultiPayload == 2)
    {
      sub_20A6A0604(v31, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
LABEL_11:
      uint64_t v12 = v30;
      goto LABEL_13;
    }
    if (EnumCaseMultiPayload == 1)
    {
      sub_20A61E760();
      uint64_t v37 = v31 + *(int *)(v36 + 48);
      sub_20A6A0604(v31 + *(int *)(v36 + 64), (uint64_t (*)(void))sub_20A42C764);
      sub_20A6A0604(v37, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      uint64_t v38 = sub_20A8C3F00();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v31, v38);
      goto LABEL_11;
    }
    uint64_t v12 = v30;
    if (!EnumCaseMultiPayload) {
      break;
    }
    sub_20A6A0604(v34, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
    uint64_t v2 = v32;
    (*v45)(v4, v32);
    uint64_t v22 = v28;
    uint64_t v35 = *(void *)v28;
    uint64_t v10 = v44;
    sub_20A8CE8A0();
    if (v35 == v53[0]) {
      goto LABEL_2;
    }
  }
  sub_20A6A0604(v34, (uint64_t (*)(void))sub_20A42C764);
LABEL_13:
  (*v45)(v4, v32);
  sub_20A6A0604((uint64_t)v44, (uint64_t (*)(void))sub_20A6A039C);
  uint64_t v24 = 1;
  v29(v40, v12);
  return v24;
}

uint64_t sub_20A69BBBC(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v47 = a5;
  uint64_t v11 = *a2;
  uint64_t v12 = sub_20A8CD2C0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A678AA0();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3) {
    goto LABEL_11;
  }
  uint64_t v43 = a4;
  uint64_t v44 = 0;
  uint64_t v45 = a1;
  uint64_t v46 = a6;
  sub_20A698E18((uint64_t)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A50C150();
  uint64_t v20 = v19;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v18, 1, v19) == 1)
  {
    uint64_t v21 = MEMORY[0x2105289B0](a2 + 2);
    a1 = v45;
    a6 = v46;
    a3 = v44;
    if (!v21) {
      goto LABEL_11;
    }
    uint64_t v22 = v21;
    if (qword_267639B68 != -1) {
      swift_once();
    }
    uint64_t v23 = __swift_project_value_buffer(v12, (uint64_t)qword_267652E78);
    type metadata accessor for ForYouFeedInteractor();
    sub_20A818868(v23, v22);
    swift_unknownObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v18, v12);
    uint64_t v24 = MEMORY[0x2105289B0](a2 + 2);
    if (v24)
    {
      uint64_t v25 = v24;
      type metadata accessor for ForYouFeedInteractor();
      sub_20A818868((uint64_t)v15, v25);
      swift_unknownObjectRelease();
    }
    uint64_t v26 = &v18[*(int *)(v20 + 48)];
    uint64_t v27 = *(void (**)(char *, uint64_t))(v13 + 8);
    v27(v15, v12);
    v27(v26, v12);
  }
  a1 = v45;
  a6 = v46;
  a3 = v44;
LABEL_11:
  uint64_t v46 = (uint64_t)a2 + *(void *)(*a2 + 112);
  sub_20A44D7C8(0);
  uint64_t v28 = sub_20A8C82F0();
  uint64_t v30 = v29;
  uint64_t v31 = a2;
  uint64_t v32 = a6;
  uint64_t v33 = *(void *)(v11 + 80);
  uint64_t v34 = *(void **)(v11 + 88);
  uint64_t v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void *))v34[12];
  swift_retain();
  uint64_t v45 = v34;
  uint64_t v46 = v33;
  uint64_t v36 = v35(v28, v30, a3, v33, v34);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v48 = v36;
  uint64_t v37 = (void *)swift_allocObject();
  v37[2] = v47;
  v37[3] = v32;
  v37[4] = a1;
  swift_retain();
  id v38 = a1;
  uint64_t v39 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A6A022C(0, (unint64_t *)&qword_26AC69FD0, MEMORY[0x263F7D538]);
  sub_20A69FD9C(&qword_26AC69FC8, (unint64_t *)&qword_26AC69FD0, v39);
  sub_20A8C8C00();
  swift_release();
  uint64_t v40 = MEMORY[0x2105289B0](v31 + 2);
  if (!v40) {
    return swift_release();
  }
  uint64_t v41 = v40;
  type metadata accessor for ForYouFeedInteractor();
  sub_20A8189C8(v41);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_20A69C01C(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
  sub_20A6A022C(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  sub_20A69FD9C((unint64_t *)&unk_26AC6AD20, (unint64_t *)&qword_26AC6AD30, v2);
  sub_20A8CE840();
  sub_20A8CE8A0();
  uint64_t result = sub_20A8CE890();
  if (result == 1)
  {
    uint64_t result = MEMORY[0x2105289B0](a1 + 16);
    if (result)
    {
      uint64_t v4 = result;
      type metadata accessor for ForYouFeedInteractor();
      sub_20A818A58(v4);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_20A69C150()
{
  unint64_t v0 = sub_20A8C9420();
  if (v0 >> 62)
  {
    if (v0 >> 62 != 1) {
      return;
    }
  }
  else
  {
    sub_20A6A0568((id)v0);
  }
  sub_20A8C6670();
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
  id v1 = (id)sub_20A8CEBE0();
  sub_20A8C6520();
  swift_release();
  swift_release();
}

uint64_t sub_20A69C290(uint64_t *a1, void *a2)
{
  uint64_t v4 = (void *)*a2;
  uint64_t v17 = sub_20A8C40E0();
  uint64_t v5 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_20A8C3410();
  uint64_t v8 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  uint64_t v11 = *(void *)((char *)a2 + v4[16]);
  v15[1] = (char *)a2 + v4[14];
  __swift_project_boxed_opaque_existential_1((void *)(v11 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_watchlistManager), *(void *)(v11 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_watchlistManager + 24));
  sub_20A8C3600();
  sub_20A8C4060();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v17);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, char *, void))(v4[11] + 72))(v16, v10, v4[10]);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v18);
  uint64_t v19 = v12;
  uint64_t v13 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A6A022C(0, (unint64_t *)&qword_26AC69FD0, MEMORY[0x263F7D538]);
  sub_20A69FD9C(&qword_26AC69FC8, (unint64_t *)&qword_26AC69FD0, v13);
  sub_20A8C8C00();
  return swift_release();
}

uint64_t sub_20A69C544(unint64_t a1, uint64_t a2, int a3, unsigned __int8 *a4)
{
  int v28 = a3;
  v26[1] = *v4;
  unint64_t v27 = a1;
  sub_20A652530();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A69FCCC(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (void *)((char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for ForYouFeedRouteModel();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v17 = *a4;
  sub_20A6A022C(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v9, a2, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v9, 0, 1, v19);
  uint64_t v21 = v27;
  unsigned __int8 v30 = v17;
  sub_20A69C848(v27, (uint64_t)v9, v28, &v30, v12);
  sub_20A6A0604((uint64_t)v9, (uint64_t (*)(void))sub_20A652530);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    uint64_t v22 = (uint64_t (*)(void))sub_20A69FCCC;
    uint64_t v23 = (uint64_t)v12;
  }
  else
  {
    sub_20A69FD00((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ForYouFeedRouteModel);
    uint64_t v24 = (void *)MEMORY[0x2105289B0](v4 + 2);
    if (v24)
    {
      unsigned __int8 v29 = v17;
      sub_20A818AB4((uint64_t)v16, v21, &v29, v24);
      swift_unknownObjectRelease();
    }
    uint64_t v22 = (uint64_t (*)(void))type metadata accessor for ForYouFeedRouteModel;
    uint64_t v23 = (uint64_t)v16;
  }
  return sub_20A6A0604(v23, v22);
}

uint64_t sub_20A69C848@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, unsigned __int8 *a4@<X3>, void *a5@<X8>)
{
  int v123 = a3;
  uint64_t v118 = a2;
  uint64_t v143 = a5;
  uint64_t v136 = *v5;
  uint64_t v8 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x270FA5388](v8 - 8);
  id v113 = (char *)&v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A652530();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v129 = (uint64_t)&v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6A022C(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  uint64_t v120 = v12;
  uint64_t v119 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  int v114 = (char *)&v111 - v13;
  uint64_t v133 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x270FA5388](v133);
  uint64_t v131 = (char *)&v111 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_20A8C5390();
  uint64_t v127 = *(void *)(v128 - 8);
  MEMORY[0x270FA5388](v128);
  uint64_t v122 = (char *)&v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  id v115 = (char *)&v111 - v17;
  uint64_t v117 = sub_20A8C5920();
  uint64_t v116 = *(void *)(v117 - 8);
  MEMORY[0x270FA5388](v117);
  uint64_t v126 = (char *)&v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_20A8C2530();
  uint64_t v124 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v111 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v24 = (char *)&v111 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  unint64_t v27 = (char *)&v111 - v26;
  uint64_t v28 = sub_20A8C4DA0();
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v130 = (char *)&v111 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_20A8C4020();
  uint64_t v135 = *(void *)(v138 - 8);
  MEMORY[0x270FA5388](v138);
  uint64_t v121 = (char *)&v111 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v140 = (char *)&v111 - v32;
  MEMORY[0x270FA5388](v33);
  double v137 = (char *)&v111 - v34;
  sub_20A430224();
  MEMORY[0x270FA5388](v35 - 8);
  uint64_t v37 = (char *)&v111 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A456468();
  uint64_t v134 = v38;
  uint64_t v139 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v142 = (char *)&v111 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x270FA5388](v40);
  unint64_t v42 = (char *)&v111 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v125 = *a4;
  sub_20A44D7C8(0);
  unint64_t v132 = a1;
  sub_20A8C8330();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 5u:
      sub_20A6A0604((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for ForYouFeedModel);
      goto LABEL_6;
    case 2u:
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_6;
    case 3u:
      swift_release();
      sub_20A61E890();
      uint64_t v44 = &v42[*(int *)(v43 + 48)];
      uint64_t v45 = sub_20A8CD2C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
      goto LABEL_6;
    case 4u:
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 6u:
LABEL_6:
      uint64_t v46 = type metadata accessor for ForYouFeedRouteModel();
      return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v143, 1, 1, v46);
    default:
      uint64_t v48 = v42;
      uint64_t v49 = v134;
      (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v142, v48, v134);
      uint64_t v112 = v141 + 16;
      uint64_t v50 = MEMORY[0x2105289B0]();
      if (v50)
      {
        sub_20A8185DC(v50);
        swift_unknownObjectRelease();
      }
      sub_20A8CD380();
      uint64_t v51 = sub_20A8CD2C0();
      int v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 48))(v37, 1, v51);
      sub_20A6A0604((uint64_t)v37, (uint64_t (*)(void))sub_20A430224);
      if (v52 != 1)
      {
        uint64_t v53 = MEMORY[0x2105289B0](v112);
        if (v53)
        {
          sub_20A818830(v132, v53);
          swift_unknownObjectRelease();
        }
      }
      uint64_t v54 = v137;
      sub_20A8CCF50();
      uint64_t v55 = v135;
      uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v135 + 16);
      uint64_t v57 = v140;
      uint64_t v58 = v138;
      uint64_t v112 = v135 + 16;
      uint64_t v111 = v56;
      v56(v140, v54, v138);
      int v59 = (*(uint64_t (**)(char *, uint64_t))(v55 + 88))(v57, v58);
      if (v59 != *MEMORY[0x263F7AF48])
      {
        if (v59 == *MEMORY[0x263F7AF38])
        {
          (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v58);
          (*(void (**)(char *, uint64_t))(v139 + 8))(v142, v49);
          long long v74 = v140;
          (*(void (**)(char *, uint64_t))(v55 + 96))(v140, v58);
          uint64_t v75 = v143;
          *uint64_t v143 = *(void *)v74;
          swift_storeEnumTagMultiPayload();
          uint64_t v76 = type metadata accessor for ForYouFeedRouteModel();
          swift_storeEnumTagMultiPayload();
          return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v75, 0, 1, v76);
        }
LABEL_51:
        sub_20A8CF750();
        __break(1u);
        JUMPOUT(0x20A69DDDCLL);
      }
      (*(void (**)(char *, uint64_t))(v55 + 96))(v57, v58);
      swift_unknownObjectRelease();
      id v60 = objc_msgSend((id)sub_20A8C3F80(), sel_routeURL);
      swift_unknownObjectRelease();
      if (v60)
      {
        sub_20A8C24E0();

        uint64_t v61 = v124;
        (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v27, v21, v19);
        uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56);
        v62(v27, 0, 1, v19);
        int v63 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48))(v27, 1, v19);
        uint64_t v64 = v136;
        if (v63 != 1)
        {
          sub_20A6A0604((uint64_t)v27, (uint64_t (*)(void))sub_20A4845D0);
          int v65 = v137;
          sub_20A8C3F80();
          uint64_t v66 = v126;
          sub_20A8C58F0();
          v62(v24, 1, 1, v19);
          uint64_t v67 = v127;
          uint64_t v68 = v115;
          uint64_t v69 = v128;
          (*(void (**)(char *, void, uint64_t))(v127 + 104))(v115, *MEMORY[0x263F58CD8], v128);
          uint64_t v70 = v64;
          uint64_t v71 = (uint64_t)v130;
          sub_20A8C4D60();
          (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v69);
          sub_20A6A0604((uint64_t)v24, (uint64_t (*)(void))sub_20A4845D0);
          (*(void (**)(char *, uint64_t))(v116 + 8))(v66, v117);
          uint64_t v72 = (uint64_t)v131;
          uint64_t v73 = v141;
          goto LABEL_23;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v124 + 56))(v27, 1, 1, v19);
        uint64_t v64 = v136;
      }
      sub_20A6A0604((uint64_t)v27, (uint64_t (*)(void))sub_20A4845D0);
      sub_20A8C55D0();
      swift_allocObject();
      uint64_t v77 = sub_20A8C55C0();
      uint64_t v73 = v141;
      uint64_t v78 = *(void *)(*(void *)v141 + 192);
      *(void *)(v141 + v78) = v77;
      swift_release();
      uint64_t v79 = *(void *)(v73 + *(void *)(*(void *)v73 + 120));
      swift_retain();
      sub_20A8C82F0();
      if (!*(void *)(v73 + v78))
      {
        __break(1u);
        goto LABEL_51;
      }
      uint64_t v147 = v79;
      sub_20A69FAA0();
      uint64_t v81 = v80;
      swift_allocObject();
      swift_retain();
      uint64_t v82 = sub_20A8C4A40();
      sub_20A8C82F0();
      int v65 = v137;
      sub_20A8C3F80();
      v111(v121, v65, v138);
      sub_20A8CF7B0();
      sub_20A8C58D0();
      uint64_t v148 = v81;
      uint64_t v149 = sub_20A69F9F4((unint64_t *)&unk_26AC830C0, (void (*)(uint64_t))sub_20A69FAA0);
      uint64_t v147 = v82;
      swift_getWitnessTable();
      sub_20A8C5590();
      swift_allocObject();
      swift_retain();
      swift_retain();
      sub_20A8C5580();
      uint64_t v83 = v127;
      uint64_t v84 = (unsigned int *)MEMORY[0x263F58CD0];
      if ((v123 & 1) == 0) {
        uint64_t v84 = (unsigned int *)MEMORY[0x263F58CD8];
      }
      uint64_t v85 = v122;
      uint64_t v86 = v128;
      (*(void (**)(char *, void, uint64_t))(v127 + 104))(v122, *v84, v128);
      uint64_t v70 = v64;
      uint64_t v71 = (uint64_t)v130;
      sub_20A8C4D90();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v85, v86);
      uint64_t v72 = (uint64_t)v131;
LABEL_23:
      sub_20A6A04B4(v71, v72, MEMORY[0x263F58AA8]);
      uint64_t v87 = 2 * (v125 != 0);
      sub_20A45494C();
      uint64_t v89 = &v140[*(int *)(v88 + 48)];
      sub_20A42FC8C();
      uint64_t v91 = *(int *)(v90 + 64);
      *(void *)(v72 + *(int *)(v90 + 48)) = v87;
      unint64_t v92 = (void *)(v72 + v91);
      v92[3] = v70;
      v92[4] = &off_26BE6AA28;
      void *v92 = v73;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      char v93 = sub_20A8C3FF0();
      uint64_t v94 = v129;
      if ((v93 & 1) == 0) {
        goto LABEL_33;
      }
      sub_20A6A04B4(v118, v129, (uint64_t (*)(void))sub_20A652530);
      uint64_t v95 = v119;
      uint64_t v96 = v120;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v119 + 48))(v94, 1, v120) != 1)
      {
        unint64_t v97 = v114;
        (*(void (**)(char *, uint64_t, uint64_t))(v95 + 32))(v114, v94, v96);
        uint64_t v98 = (uint64_t)v113;
        uint64_t v99 = v95;
        sub_20A8C8820();
        uint64_t v100 = v96;
        char v101 = sub_20A6EE148();
        sub_20A6A0604(v98, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
        if (v101)
        {
          uint64_t v102 = sub_20A63CD00();
          if ((v103 & 1) == 0 && !v102)
          {
            uint64_t v104 = (char *)objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v73
                                                                                 + *(void *)(*(void *)v73 + 152)), sel_cachedSubscription));
            if (objc_getAssociatedObject(v104, v104 + 1))
            {
              sub_20A8CF270();
              swift_unknownObjectRelease();
            }
            else
            {
              long long v145 = 0u;
              long long v146 = 0u;
            }
            sub_20A69FD00((uint64_t)&v145, (uint64_t)&v147, (uint64_t (*)(void))sub_20A42F348);
            if (v148)
            {
              sub_20A42CFF0(0, (unint64_t *)&qword_26AC686D0);
              if (swift_dynamicCast())
              {
                id v108 = v144;
                unint64_t v109 = (unint64_t)objc_msgSend(v144, sel_integerValue);
                if (v109 == -1) {
                  goto LABEL_49;
                }
                goto LABEL_42;
              }
            }
            else
            {
              sub_20A6A0604((uint64_t)&v147, (uint64_t (*)(void))sub_20A42F348);
            }
            id v108 = 0;
            unint64_t v109 = 0;
LABEL_42:
            if (objc_getAssociatedObject(v104, (const void *)~v109))
            {
              sub_20A8CF270();
              swift_unknownObjectRelease();
            }
            else
            {
              long long v145 = 0u;
              long long v146 = 0u;
            }
            sub_20A69FD00((uint64_t)&v145, (uint64_t)&v147, (uint64_t (*)(void))sub_20A42F348);
            if (v148)
            {
              sub_20A42CFF0(0, (unint64_t *)&qword_26AC686D0);
              if (swift_dynamicCast())
              {
                id v110 = v144;
                objc_msgSend(v110, sel_integerValue);

                (*(void (**)(char *, uint64_t))(v119 + 8))(v114, v120);
                sub_20A6A0604(v71, MEMORY[0x263F58AA8]);
                (*(void (**)(char *, uint64_t))(v135 + 8))(v137, v138);
                (*(void (**)(char *, uint64_t))(v139 + 8))(v142, v134);
                goto LABEL_34;
              }
            }
            else
            {
              sub_20A6A0604((uint64_t)&v147, (uint64_t (*)(void))sub_20A42F348);
            }
LABEL_49:

            (*(void (**)(char *, uint64_t))(v119 + 8))(v114, v120);
            sub_20A6A0604(v71, MEMORY[0x263F58AA8]);
            (*(void (**)(char *, uint64_t))(v135 + 8))(v137, v138);
            (*(void (**)(char *, uint64_t))(v139 + 8))(v142, v134);
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v119 + 8))(v97, v120);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v99 + 8))(v97, v100);
        }
LABEL_33:
        sub_20A6A0604(v71, MEMORY[0x263F58AA8]);
        (*(void (**)(char *, uint64_t))(v135 + 8))(v65, v138);
        (*(void (**)(char *, uint64_t))(v139 + 8))(v142, v134);
        goto LABEL_34;
      }
      sub_20A6A0604(v71, MEMORY[0x263F58AA8]);
      (*(void (**)(char *, uint64_t))(v135 + 8))(v65, v138);
      (*(void (**)(char *, uint64_t))(v139 + 8))(v142, v134);
      sub_20A6A0604(v94, (uint64_t (*)(void))sub_20A652530);
LABEL_34:
      uint64_t v105 = v143;
      sub_20A6A04B4(v72, (uint64_t)v143, type metadata accessor for StocksActivity.Article);
      uint64_t v106 = type metadata accessor for ForYouFeedRouteModel();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v105, 0, 1, v106);
      sub_20A6A0604(v72, type metadata accessor for StocksActivity.Article);
      uint64_t v107 = sub_20A8C33A0();
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v107 - 8) + 8))(v89, v107);
  }
}

uint64_t sub_20A69DDF8(void (*a1)(char *))
{
  uint64_t v2 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A600FA0();
  uint64_t v6 = &v4[*(int *)(v5 + 48)];
  type metadata accessor for ForYouSectionDescriptor();
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *MEMORY[0x263F7DB50];
  uint64_t v8 = sub_20A8CA180();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  a1(v4);
  return sub_20A6A0604((uint64_t)v4, type metadata accessor for StocksActivity);
}

uint64_t sub_20A69DF38()
{
  return sub_20A8C5D80();
}

uint64_t sub_20A69DFB4()
{
  id v1 = (void *)(v0 + *(void *)(*(void *)v0 + 136));
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v3 + 16))(v0, &off_26BE6A9F8, v2, v3);
}

uint64_t sub_20A69E02C()
{
  id v1 = (void *)(v0 + *(void *)(*(void *)v0 + 136));
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v3 + 24))(v0, &off_26BE6A9F8, v2, v3);
}

void sub_20A69E0A4()
{
  char v1 = sub_20A7B3E94();
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
  id v2 = (id)sub_20A8CF180();
  sub_20A8CEA00();
  if (v1)
  {
    sub_20A8C7D90();

    *(void *)(v0 + *(void *)(*(void *)v0 + 192)) = 0;
    swift_release();
    sub_20A69C150();
  }
  else
  {
    sub_20A8C7D90();
  }
}

uint64_t sub_20A69E1E8()
{
  return sub_20A69DDF8(MEMORY[0x263F7D738]);
}

uint64_t sub_20A69E214()
{
  return sub_20A69DDF8(MEMORY[0x263F7D730]);
}

uint64_t sub_20A69E254(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v94 = a3;
  uint64_t v120 = a2;
  int v123 = a1;
  uint64_t v95 = *v3;
  sub_20A50C544(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v100 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_20A8CBFB0();
  uint64_t v101 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  char v93 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_20A8C7090();
  uint64_t v98 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  unint64_t v97 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_20A8C6DE0();
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  char v103 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_20A8C6840();
  uint64_t v109 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  id v108 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A652530();
  MEMORY[0x270FA5388](v10 - 8);
  *(void *)&long long v113 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6A022C(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  uint64_t v114 = v12;
  uint64_t v112 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v106 = (char *)&v87 - v13;
  sub_20A6A05D0(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v111 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_20A8C77D0();
  uint64_t v116 = *(void *)(v16 - 8);
  uint64_t v117 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v107 = (char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  id v115 = (char *)&v87 - v19;
  sub_20A469FF4(0);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v119 = (char *)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_20A8C2B70();
  uint64_t v121 = *(void *)(v22 - 8);
  uint64_t v122 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v118 = (char *)&v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A69FD68(0);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v26 = (char *)&v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44D7C8(0);
  uint64_t v28 = v27;
  uint64_t v124 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v87 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6A022C(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v32 = v31;
  uint64_t v33 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v87 - v34;
  uint64_t v96 = v3;
  sub_20A8C8BE0();
  uint64_t v127 = v125;
  uint64_t v36 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
  sub_20A6A022C(0, (unint64_t *)&qword_26AC6A060, MEMORY[0x263F7D550]);
  sub_20A69FD9C((unint64_t *)&qword_26AC6A050, (unint64_t *)&qword_26AC6A060, v36);
  sub_20A8C9490();
  swift_release();
  sub_20A8C58E0();
  sub_20A8CBA60();
  uint64_t v37 = v124;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v26, 1, v28) == 1)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
    uint64_t v38 = sub_20A69FD68;
    uint64_t v39 = (uint64_t)v26;
    return sub_20A6A0604(v39, (uint64_t (*)(void))v38);
  }
  uint64_t v92 = v33;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v30, v26, v28);
  uint64_t v40 = v119;
  sub_20A8CBB40();
  uint64_t v42 = v121;
  uint64_t v41 = v122;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v40, 1, v122) == 1)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v28);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v35, v32);
    uint64_t v38 = sub_20A469FF4;
    uint64_t v39 = (uint64_t)v40;
    return sub_20A6A0604(v39, (uint64_t (*)(void))v38);
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v118, v40, v41);
  uint64_t v44 = sub_20A8CA990();
  uint64_t v45 = (uint64_t)v111;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v111, 1, 1, v44);
  uint64_t v87 = v28;
  sub_20A8C82F0();
  uint64_t v46 = v113;
  sub_20A8CBAC0();
  swift_bridgeObjectRelease();
  uint64_t v47 = v112;
  uint64_t v48 = v114;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v46, 1, v114);
  uint64_t v119 = v30;
  uint64_t v90 = v32;
  if (result == 1) {
    goto LABEL_25;
  }
  uint64_t v49 = (uint64_t)v106;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v106, v46, v48);
  uint64_t v50 = v115;
  sub_20A6C8DD0(v49, v45);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v49, v48);
  sub_20A6A0604(v45, (uint64_t (*)(void))sub_20A6A05D0);
  sub_20A69FA3C(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v114 = v51;
  uint64_t v52 = sub_20A8C4620();
  uint64_t v88 = v52;
  uint64_t v53 = *(void *)(v52 - 8);
  int v123 = v35;
  uint64_t v54 = v53;
  uint64_t v55 = *(unsigned __int8 *)(v53 + 80);
  uint64_t v56 = (v55 + 32) & ~v55;
  uint64_t v57 = v56 + *(void *)(v53 + 72);
  uint64_t v58 = v55 | 7;
  uint64_t v59 = swift_allocObject();
  long long v113 = xmmword_20A8D3DC0;
  *(_OWORD *)(v59 + 16) = xmmword_20A8D3DC0;
  uint64_t v60 = *MEMORY[0x263F24D40];
  uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 104);
  v61(v59 + v56, v60, v52);
  sub_20A69F9F4(&qword_26AC67710, MEMORY[0x263F7A700]);
  uint64_t v91 = "ForYouFeed will auto-refresh";
  unint64_t v89 = 0x800000020A909CB0;
  uint64_t v62 = v50;
  uint64_t v63 = v117;
  sub_20A8C4940();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v107, v62, v63);
  uint64_t v64 = v108;
  sub_20A8C6830();
  uint64_t v112 = v57;
  uint64_t v65 = v88;
  uint64_t v111 = (char *)v58;
  uint64_t v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = v113;
  LODWORD(v107) = v60;
  uint64_t v106 = (char *)v61;
  v61(v66 + v56, v60, v65);
  sub_20A69F9F4(qword_26763D1B0, MEMORY[0x263F79A70]);
  uint64_t v67 = v110;
  sub_20A8C4940();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v64, v67);
  sub_20A69F9F4(&qword_26AC6E148, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
  uint64_t v68 = v90;
  uint64_t result = sub_20A8CBB50();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v69 = v103;
  sub_20A8C6DD0();
  uint64_t v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = v113;
  ((void (*)(uint64_t, void, uint64_t))v106)(v70 + v56, v107, v65);
  sub_20A69F9F4(&qword_26AC69A00, MEMORY[0x263F79E78]);
  uint64_t v71 = v105;
  sub_20A8C4940();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v69, v71);
  uint64_t result = sub_20A8CBB60();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v72 = v97;
  sub_20A8C7080();
  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = v113;
  ((void (*)(uint64_t, void, uint64_t))v106)(v73 + v56, v107, v65);
  sub_20A69F9F4((unint64_t *)&unk_26AC69A60, MEMORY[0x263F7A070]);
  uint64_t v74 = v99;
  sub_20A8C4940();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v72, v74);
  sub_20A69F9F4(&qword_26AC830E0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
  uint64_t v75 = (uint64_t)v100;
  uint64_t v76 = v119;
  sub_20A8CBAE0();
  uint64_t v77 = v101;
  uint64_t v78 = v102;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v75, 1, v102) == 1)
  {
    sub_20A6A0604(v75, (uint64_t (*)(void))sub_20A50C544);
    uint64_t v79 = v96;
    uint64_t v80 = (uint64_t)v118;
    uint64_t v81 = v92;
  }
  else
  {
    uint64_t v82 = v93;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))(v93, v75, v78);
    sub_20A4B2A1C(v94, (uint64_t)&v125);
    uint64_t v79 = v96;
    uint64_t v80 = (uint64_t)v118;
    uint64_t v81 = v92;
    if (v126)
    {
      __swift_project_boxed_opaque_existential_1(&v125, v126);
      sub_20A69F9F4(&qword_26AC82E50, MEMORY[0x263F587E8]);
      sub_20A8CC060();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v82, v78);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v125);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v77 + 8))(v82, v78);
      sub_20A50C564((uint64_t)&v125);
    }
    uint64_t v76 = v119;
  }
  uint64_t v83 = MEMORY[0x2105289B0](v79 + 2);
  uint64_t v84 = v87;
  uint64_t v86 = v123;
  uint64_t v85 = v124;
  if (v83)
  {
    sub_20A819700(v80, v83);
    swift_unknownObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v116 + 8))(v115, v117);
  (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v80, v122);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v76, v84);
  return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v86, v68);
}

uint64_t sub_20A69F3A8()
{
  return sub_20A8CCA60();
}

uint64_t sub_20A69F3E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v2 = sub_20A8C4020();
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v34 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A456468();
  uint64_t v35 = v4;
  uint64_t v33 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x270FA5388](v38);
  uint64_t v39 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A69FD68(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44D7C8(0);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v40 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6A022C(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  sub_20A8C8BE0();
  uint64_t v43 = v44;
  uint64_t v19 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
  sub_20A6A022C(0, (unint64_t *)&qword_26AC6A060, MEMORY[0x263F7D550]);
  sub_20A69FD9C((unint64_t *)&qword_26AC6A050, (unint64_t *)&qword_26AC6A060, v19);
  sub_20A8C9490();
  swift_release();
  sub_20A8C58E0();
  sub_20A8CBA60();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    sub_20A6A0604((uint64_t)v9, (uint64_t (*)(void))sub_20A69FD68);
    uint64_t v20 = sub_20A8C6FA0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v42, 1, 1, v20);
  }
  else
  {
    uint64_t v22 = v40;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v40, v9, v11);
    uint64_t v23 = (uint64_t)v39;
    sub_20A8C8330();
    if (swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v22, v11);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      uint64_t v24 = sub_20A8C6FA0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v42, 1, 1, v24);
      return sub_20A6A0604(v23, (uint64_t (*)(void))type metadata accessor for ForYouFeedModel);
    }
    else
    {
      uint64_t v25 = v32;
      uint64_t v26 = v33;
      uint64_t v27 = v23;
      uint64_t v28 = v35;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v32, v27, v35);
      uint64_t v29 = v34;
      sub_20A8CCF50();
      sub_20A454470();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v29, v37);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v28);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v40, v11);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      uint64_t v30 = sub_20A8C6FA0();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v42, 0, 1, v30);
    }
  }
}

uint64_t sub_20A69F9B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A69F3E4(a1, a2);
}

uint64_t sub_20A69F9DC()
{
  return sub_20A6A0664();
}

uint64_t sub_20A69F9F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A69FA3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A69FAA0()
{
  if (!qword_26AC830A0)
  {
    sub_20A69FBE0();
    sub_20A69F9F4(&qword_26AC6A3A0, (void (*)(uint64_t))sub_20A69FBE0);
    sub_20A69F9F4((unint64_t *)&unk_26AC830A8, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
    sub_20A69F9F4(&qword_26AC72B70, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
    sub_20A69F9F4(&qword_26AC830B8, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
    unint64_t v0 = sub_20A8C4A50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC830A0);
    }
  }
}

void sub_20A69FBE0()
{
  if (!qword_26AC6A3A8)
  {
    type metadata accessor for ForYouFeedLayoutSectionDescriptor(255);
    type metadata accessor for ForYouFeedLayoutModel();
    sub_20A69F9F4(&qword_26AC7BBA0, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutSectionDescriptor);
    sub_20A69F9F4((unint64_t *)&unk_26AC72B40, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
    unint64_t v0 = sub_20A8C9B10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A3A8);
    }
  }
}

void sub_20A69FCCC(uint64_t a1)
{
}

uint64_t sub_20A69FD00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_20A69FD68(uint64_t a1)
{
}

uint64_t sub_20A69FD9C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A6A022C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A69FDE0()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A69FE18()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);

  return swift_deallocObject();
}

uint64_t sub_20A69FE60(void *a1)
{
  return sub_20A69AA38(a1, v1[4], v1[5], v1 + 6);
}

uint64_t sub_20A69FE70()
{
  return sub_20A69AE58(v0[2], v0[3], v0[4]);
}

uint64_t sub_20A69FE90()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A69FEC8(uint64_t *a1, void *a2)
{
  return sub_20A69AED8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_20A69FEE4()
{
  sub_20A44D7C8(0);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A69FFD0(void *a1, uint64_t *a2)
{
  sub_20A44D7C8(0);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v2 + 32);
  uint64_t v9 = v2 + v7;
  uint64_t v10 = (uint64_t *)(v2 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];

  return sub_20A69BBBC(a1, a2, v8, v9, v11, v12);
}

uint64_t sub_20A6A0084()
{
  sub_20A6A022C(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_20A6A0130(uint64_t a1)
{
  sub_20A6A022C(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);

  return sub_20A69C01C(a1);
}

uint64_t sub_20A6A01BC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A6A01FC()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

void sub_20A6A022C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for ForYouFeedSectionDescriptor();
    v8[1] = type metadata accessor for ForYouFeedModel();
    v8[2] = sub_20A69F9F4(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
    v8[3] = sub_20A69F9F4((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A6A0320()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_20A6A0374(uint64_t a1)
{
  sub_20A69B21C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void (**)(void))(v1 + 48));
}

uint64_t type metadata accessor for ForYouFeedInteractor.Errors()
{
  return __swift_instantiateGenericMetadata();
}

void sub_20A6A039C()
{
  if (!qword_26AC7FD10)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
    sub_20A6A022C(255, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
    sub_20A69FD9C((unint64_t *)&unk_26AC6AD20, (unint64_t *)&qword_26AC6AD30, v0);
    unint64_t v1 = sub_20A8CF4F0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AC7FD10);
    }
  }
}

uint64_t sub_20A6A0450()
{
  return sub_20A69ADDC();
}

uint64_t sub_20A6A0458()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A6A0490(uint64_t a1)
{
  return sub_20A699A2C(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_20A6A049C()
{
  return sub_20A699B58();
}

uint64_t sub_20A6A04A8(uint64_t a1)
{
  return sub_20A699BD8(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_20A6A04B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A6A051C(uint64_t a1)
{
  return sub_20A699EB8(a1);
}

uint64_t sub_20A6A0528()
{
  return swift_deallocObject();
}

uint64_t sub_20A6A0560()
{
  return sub_20A7E24AC();
}

void sub_20A6A0568(id a1)
{
  if (!((unint64_t)a1 >> 62)) {
}
  }

uint64_t sub_20A6A0578()
{
  return sub_20A7B2ABC();
}

uint64_t sub_20A6A05B8(uint64_t *a1, void *a2)
{
  return sub_20A69C290(a1, a2);
}

void sub_20A6A05D0(uint64_t a1)
{
}

uint64_t sub_20A6A0604(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A6A0664()
{
  uint64_t v1 = *v0;
  sub_20A8C2EE0();
  (*(void (**)(void))(*(void *)(v1 + 88) + 88))();
  swift_bridgeObjectRelease();
  uint64_t v2 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A6A022C(0, (unint64_t *)&qword_26AC69FD0, MEMORY[0x263F7D538]);
  sub_20A69FD9C(&qword_26AC69FC8, (unint64_t *)&qword_26AC69FD0, v2);
  sub_20A8C8C00();
  return swift_release();
}

void sub_20A6A0790()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = sub_20A69F9F4(&qword_26AC75A80, (void (*)(uint64_t))type metadata accessor for ForYouFeedViewController);
  uint64_t v2 = MEMORY[0x2105205C0](ObjectType, v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    self;
    unint64_t v4 = (void *)swift_dynamicCastObjCClass();
    if (v4)
    {
      id v5 = objc_msgSend(v4, sel_view);
      if (!v5)
      {
        __break(1u);
        return;
      }
      id v6 = v5;
      objc_msgSend(v5, sel_setNeedsLayout);

      uint64_t v3 = v6;
    }
  }
  id v7 = sub_20A472E68();
  objc_msgSend(v7, sel_setNeedsLayout);
}

uint64_t sub_20A6A0894()
{
  uint64_t result = MEMORY[0x2105289B0](v0 + 16);
  if (result)
  {
    if (MEMORY[0x2105289B0](result + 16))
    {
      sub_20A6A0790();
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_20A6A0900()
{
  uint64_t v0 = (void *)sub_20A8C9420();
  type metadata accessor for ForYouFeedSectionDescriptor();
  type metadata accessor for ForYouFeedModel();
  sub_20A69F9F4(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
  sub_20A69F9F4((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
  char v1 = sub_20A8C93F0();
  sub_20A6A0568(v0);
  if (v1)
  {
    sub_20A69C150();
  }
}

uint64_t sub_20A6A0A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

unsigned char *sub_20A6A0A28(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A6A0AC4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A6A0AEC()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for StockFeedOfflineModel.Expanding()
{
  return &type metadata for StockFeedOfflineModel.Expanding;
}

ValueMetadata *type metadata accessor for StockFeedOfflineModel()
{
  return &type metadata for StockFeedOfflineModel;
}

ValueMetadata *type metadata accessor for StockFeedOfflineModel.Loading()
{
  return &type metadata for StockFeedOfflineModel.Loading;
}

uint64_t sub_20A6A0B44()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_26AC9EC48);
  __swift_project_value_buffer(v0, (uint64_t)qword_26AC9EC48);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A906680);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A6A0CE8()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_267652F18);
  __swift_project_value_buffer(v0, (uint64_t)qword_267652F18);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A906440);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A6A0E88()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_267652F30);
  __swift_project_value_buffer(v0, (uint64_t)qword_267652F30);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A906830);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A6A102C()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_267652F48);
  __swift_project_value_buffer(v0, (uint64_t)qword_267652F48);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A9069B0);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A6A11CC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_26AC819F0, (uint64_t)qword_26AC9EC48, a1);
}

uint64_t sub_20A6A11F0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639BB8, (uint64_t)qword_267652F18, a1);
}

uint64_t sub_20A6A1214@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639BC0, (uint64_t)qword_267652F30, a1);
}

uint64_t sub_20A6A1238@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639BC8, (uint64_t)qword_267652F48, a1);
}

uint64_t sub_20A6A125C()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_26AC9ECA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26AC9ECA8);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A906550);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A6A1410()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_267652F60);
  __swift_project_value_buffer(v0, (uint64_t)qword_267652F60);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A906A30);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A6A15B4()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_267652F78);
  __swift_project_value_buffer(v0, (uint64_t)qword_267652F78);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A906730);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A6A1758()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_267652F90);
  __swift_project_value_buffer(v0, (uint64_t)qword_267652F90);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A9068C0);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A6A18FC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_26AC81A00, (uint64_t)qword_26AC9ECA8, a1);
}

uint64_t sub_20A6A1920@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639BD8, (uint64_t)qword_267652F60, a1);
}

uint64_t sub_20A6A1944@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639BE0, (uint64_t)qword_267652F78, a1);
}

uint64_t sub_20A6A1968@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639BE8, (uint64_t)qword_267652F90, a1);
}

void sub_20A6A198C()
{
  char v1 = (void *)MEMORY[0x2105289B0](v0 + 16);
  if (!v1) {
    goto LABEL_8;
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_view);

  if (!v3)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v4 = objc_msgSend(v3, sel_window);

  if (!v4)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 24), *(void *)(v0 + 48));
  sub_20A8C8220();
  uint64_t v5 = sub_20A8C5BA0();
  if (!v5)
  {
LABEL_10:
    __break(1u);
    return;
  }
  id v6 = (id)v5;
  sub_20A8C81F0();
}

uint64_t sub_20A6A1A74()
{
  swift_unknownObjectWeakDestroy();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WelcomeRouter()
{
  return self;
}

uint64_t sub_20A6A1AD8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v21 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v21;
      uint64_t v22 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v22;
      uint64_t v23 = *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
      uint64_t v24 = (void *)(a1 + v23);
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = sub_20A8C3F00();
      uint64_t v27 = *(void *)(v26 - 8);
      uint64_t v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v28(v25, 1, v26))
      {
        sub_20A6A4554(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
        memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      goto LABEL_14;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v7;
      uint64_t v8 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v8;
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v9 = type metadata accessor for WatchlistCellViewModel(0);
      uint64_t v10 = *(int *)(v9 + 28);
      uint64_t v42 = a1 + v10;
      uint64_t v11 = (uint64_t)a2 + v10;
      uint64_t v12 = sub_20A8C40E0();
      uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13(v42, v11, v12);
      uint64_t v14 = *(int *)(v9 + 32);
      uint64_t v15 = (void *)(a1 + v14);
      uint64_t v16 = (char *)a2 + v14;
      sub_20A453638();
      uint64_t v18 = v17;
      uint64_t v19 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v17)) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v30 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v30;
      uint64_t v31 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v31;
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v32 = type metadata accessor for WatchlistCellViewModel(0);
      uint64_t v33 = *(int *)(v32 + 28);
      uint64_t v43 = a1 + v33;
      uint64_t v34 = (uint64_t)a2 + v33;
      uint64_t v35 = sub_20A8C40E0();
      uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36(v43, v34, v35);
      uint64_t v37 = *(int *)(v32 + 32);
      uint64_t v15 = (void *)(a1 + v37);
      uint64_t v16 = (char *)a2 + v37;
      sub_20A453638();
      uint64_t v18 = v38;
      uint64_t v19 = *(void *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v38))
      {
LABEL_10:
        uint64_t v39 = type metadata accessor for ManageWatchlistsContentMode(0);
        memcpy(v15, v16, *(void *)(*(void *)(v39 - 8) + 64));
LABEL_14:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    uint64_t v40 = sub_20A8C3F00();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v15, v16, v40);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
    goto LABEL_14;
  }
  uint64_t v20 = *a2;
  *(void *)a1 = *a2;
  a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t sub_20A6A1FDC(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = a1 + *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
    uint64_t v13 = sub_20A8C3F00();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    if (result) {
      return result;
    }
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
    uint64_t v11 = v12;
    uint64_t v10 = v13;
  }
  else
  {
    if (result > 1) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = type metadata accessor for WatchlistCellViewModel(0);
    uint64_t v4 = a1 + *(int *)(v3 + 28);
    uint64_t v5 = sub_20A8C40E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    uint64_t v6 = a1 + *(int *)(v3 + 32);
    sub_20A453638();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
    if (result) {
      return result;
    }
    uint64_t v8 = sub_20A8C3F00();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    uint64_t v10 = v8;
    uint64_t v11 = v6;
  }

  return v9(v11, v10);
}

uint64_t sub_20A6A21B0(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v19 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v19;
    uint64_t v20 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v20;
    uint64_t v21 = *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
    uint64_t v22 = (void *)(a1 + v21);
    uint64_t v23 = (const void *)(a2 + v21);
    uint64_t v24 = sub_20A8C3F00();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26(v23, 1, v24))
    {
      sub_20A6A4554(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
      memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
  }
  else
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v5;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    uint64_t v6 = type metadata accessor for WatchlistCellViewModel(0);
    uint64_t v7 = *(int *)(v6 + 28);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = a2 + v7;
    uint64_t v10 = sub_20A8C40E0();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    uint64_t v12 = *(int *)(v6 + 32);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (const void *)(a2 + v12);
    sub_20A453638();
    uint64_t v16 = v15;
    uint64_t v17 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15))
    {
      uint64_t v18 = type metadata accessor for ManageWatchlistsContentMode(0);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v28 = sub_20A8C3F00();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v28 - 8) + 16))(v13, v14, v28);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_20A6A24DC(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_20A6A448C(a1, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      uint64_t v17 = *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
      uint64_t v18 = (void *)(a1 + v17);
      uint64_t v19 = (const void *)(a2 + v17);
      uint64_t v20 = sub_20A8C3F00();
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v22(v19, 1, v20))
      {
        sub_20A6A4554(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
        memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v4 = type metadata accessor for WatchlistCellViewModel(0);
      uint64_t v5 = *(int *)(v4 + 28);
      uint64_t v6 = a1 + v5;
      uint64_t v7 = a2 + v5;
      uint64_t v8 = sub_20A8C40E0();
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v9(v6, v7, v8);
      uint64_t v10 = *(int *)(v4 + 32);
      uint64_t v11 = (void *)(a1 + v10);
      uint64_t v12 = (const void *)(a2 + v10);
      sub_20A453638();
      uint64_t v14 = v13;
      uint64_t v15 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
      {
        uint64_t v16 = type metadata accessor for ManageWatchlistsContentMode(0);
        memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        uint64_t v24 = sub_20A8C3F00();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 16))(v11, v12, v24);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for ManageWatchlistsModel()
{
  uint64_t result = qword_26763D240;
  if (!qword_26763D240) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A6A2898(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    long long v17 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v17;
    uint64_t v18 = *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
    uint64_t v11 = (void *)(a1 + v18);
    uint64_t v12 = (const void *)(a2 + v18);
    uint64_t v14 = sub_20A8C3F00();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
    {
      sub_20A6A4554(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
      goto LABEL_6;
    }
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v11, v12, v14);
LABEL_9:
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    goto LABEL_10;
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = type metadata accessor for WatchlistCellViewModel(0);
  uint64_t v6 = *(int *)(v5 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(v5 + 32);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  sub_20A453638();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
  {
    uint64_t v19 = sub_20A8C3F00();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(v11, v12, v19);
    goto LABEL_9;
  }
  uint64_t v16 = type metadata accessor for ManageWatchlistsContentMode(0);
LABEL_6:
  memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
LABEL_10:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_20A6A2B34(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_20A6A448C(a1, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      long long v17 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v17;
      uint64_t v18 = *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
      uint64_t v11 = (void *)(a1 + v18);
      uint64_t v12 = (const void *)(a2 + v18);
      uint64_t v14 = sub_20A8C3F00();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      {
        sub_20A6A4554(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
        goto LABEL_7;
      }
      (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v11, v12, v14);
    }
    else
    {
      long long v4 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v4;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v5 = type metadata accessor for WatchlistCellViewModel(0);
      uint64_t v6 = *(int *)(v5 + 28);
      uint64_t v7 = a1 + v6;
      uint64_t v8 = a2 + v6;
      uint64_t v9 = sub_20A8C40E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      uint64_t v10 = *(int *)(v5 + 32);
      uint64_t v11 = (void *)(a1 + v10);
      uint64_t v12 = (const void *)(a2 + v10);
      sub_20A453638();
      uint64_t v14 = v13;
      uint64_t v15 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
      {
        uint64_t v16 = type metadata accessor for ManageWatchlistsContentMode(0);
LABEL_7:
        memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
LABEL_11:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v19 = sub_20A8C3F00();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(v11, v12, v19);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    goto LABEL_11;
  }
  return a1;
}

uint64_t sub_20A6A2DF4()
{
  uint64_t result = type metadata accessor for WatchlistCellViewModel(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for CreateWatchlistViewModel();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_20A6A2EB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for WatchlistCellViewModel(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6A44EC(v2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    uint64_t v14 = sub_20A8C40E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a1, 1, 1, v14);
    return sub_20A6A448C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
  }
  else
  {
    sub_20A549390((uint64_t)v9, (uint64_t)v6, type metadata accessor for WatchlistCellViewModel);
    uint64_t v10 = &v6[*(int *)(v4 + 28)];
    uint64_t v11 = sub_20A8C40E0();
    uint64_t v12 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(a1, v10, v11);
    sub_20A6A448C((uint64_t)v6, type metadata accessor for WatchlistCellViewModel);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
}

uint64_t sub_20A6A30E0()
{
  uint64_t v1 = v0;
  uint64_t WatchlistViewModel = type metadata accessor for CreateWatchlistViewModel();
  MEMORY[0x270FA5388](WatchlistViewModel - 8);
  uint64_t v4 = (uint64_t *)((char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for WatchlistCellViewModel(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6A44EC(v1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_20A549390((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CreateWatchlistViewModel);
    uint64_t v11 = *v4;
    swift_bridgeObjectRetain();
    uint64_t v12 = (uint64_t (*)(void))type metadata accessor for CreateWatchlistViewModel;
    uint64_t v13 = (uint64_t)v4;
  }
  else
  {
    sub_20A549390((uint64_t)v10, (uint64_t)v7, type metadata accessor for WatchlistCellViewModel);
    uint64_t v11 = *v7;
    swift_bridgeObjectRetain();
    uint64_t v12 = type metadata accessor for WatchlistCellViewModel;
    uint64_t v13 = (uint64_t)v7;
  }
  sub_20A6A448C(v13, v12);
  return v11;
}

uint64_t sub_20A6A32B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A6A3428(&qword_26763D268);

  return MEMORY[0x270F7A6F8](a1, a2, v4);
}

uint64_t sub_20A6A3324()
{
  return sub_20A6A3428(&qword_26763D250);
}

uint64_t sub_20A6A3358()
{
  return sub_20A6A3428(&qword_26763D258);
}

uint64_t sub_20A6A338C()
{
  return sub_20A6A3428(&qword_26763D260);
}

uint64_t sub_20A6A33C0()
{
  return sub_20A6A3428(&qword_26763D268);
}

uint64_t sub_20A6A33F4()
{
  return sub_20A6A3428(&qword_26763D270);
}

uint64_t sub_20A6A3428(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ManageWatchlistsModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6A346C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  sub_20A6A4554(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - v3;
  uint64_t v5 = sub_20A8C2530();
  uint64_t v26 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C2220();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for WatchlistCellViewModel(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x270FA5388](v15);
  long long v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6A44EC(v1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_20A6A448C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
    goto LABEL_5;
  }
  sub_20A549390((uint64_t)v17, (uint64_t)v14, type metadata accessor for WatchlistCellViewModel);
  sub_20A8C2210();
  sub_20A8C21F0();
  uint64_t v18 = sub_20A8C2490();
  MEMORY[0x21051A4D0](v18);
  uint64_t v28 = 0x696C68637461772FLL;
  unint64_t v29 = 0xEB000000002F7473;
  sub_20A8CE3D0();
  sub_20A8C21D0();
  sub_20A8C21A0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v4, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_20A6A448C((uint64_t)v14, type metadata accessor for WatchlistCellViewModel);
    sub_20A596854((uint64_t)v4);
LABEL_5:
    uint64_t v19 = sub_20A8CB860();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v27, 1, 1, v19);
  }
  uint64_t v25 = v8;
  uint64_t v21 = v26;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v7, v4, v5);
  sub_20A8C24D0();
  swift_bridgeObjectRetain();
  uint64_t v22 = v27;
  sub_20A8CB850();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v25);
  sub_20A6A448C((uint64_t)v14, type metadata accessor for WatchlistCellViewModel);
  uint64_t v23 = sub_20A8CB860();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 0, 1, v23);
}

uint64_t sub_20A6A3904()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ManageWatchlistsContentMode(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v17 - v6;
  uint64_t v8 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WatchlistCellViewModel(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6A44EC(v1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_20A6A448C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
    char v15 = 0;
  }
  else
  {
    sub_20A549390((uint64_t)v10, (uint64_t)v13, type metadata accessor for WatchlistCellViewModel);
    sub_20A6A44EC((uint64_t)&v13[*(int *)(v11 + 32)], (uint64_t)v7, type metadata accessor for ManageWatchlistsContentMode);
    sub_20A6A448C((uint64_t)v13, type metadata accessor for WatchlistCellViewModel);
    sub_20A453638();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
    char v15 = sub_20A4DA2D4((uint64_t)v7, (uint64_t)v4);
    sub_20A6A448C((uint64_t)v4, type metadata accessor for ManageWatchlistsContentMode);
    sub_20A6A448C((uint64_t)v7, type metadata accessor for ManageWatchlistsContentMode);
  }
  return v15 & 1;
}

uint64_t sub_20A6A3B74()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ManageWatchlistsContentMode(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for WatchlistCellViewModel(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6A44EC(v1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v35 = (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel;
    uint64_t v36 = (uint64_t)v10;
LABEL_6:
    sub_20A6A448C(v36, v35);
    return MEMORY[0x263F8EE78];
  }
  sub_20A549390((uint64_t)v10, (uint64_t)v7, type metadata accessor for WatchlistCellViewModel);
  uint64_t v11 = (uint64_t)&v7[*(int *)(v5 + 32)];
  sub_20A453638();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 1, 1, v12);
  LOBYTE(v11) = sub_20A4DA2D4(v11, (uint64_t)v4);
  sub_20A6A448C((uint64_t)v4, type metadata accessor for ManageWatchlistsContentMode);
  if ((v11 & 1) == 0)
  {
    uint64_t v35 = type metadata accessor for WatchlistCellViewModel;
    uint64_t v36 = (uint64_t)v7;
    goto LABEL_6;
  }
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_20A6A4554(0, &qword_26AC82DC0, MEMORY[0x263F7D6E0], MEMORY[0x263F8E0F8]);
  uint64_t v39 = sub_20A8C91E0();
  uint64_t v14 = *(void *)(v39 - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_20A8D3DC0;
  uint64_t v17 = (uint64_t *)(v16 + v15);
  sub_20A5CF1D8();
  uint64_t v19 = (char *)v17 + *(int *)(v18 + 48);
  uint64_t v38 = *(int *)(v18 + 64);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v21 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v22 = sub_20A8C2370();
  uint64_t v24 = v23;

  *uint64_t v17 = v22;
  v17[1] = v24;
  uint64_t v25 = *MEMORY[0x263F7D668];
  uint64_t v26 = sub_20A8C91A0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v19, v25, v26);
  sub_20A6A4554(0, qword_26AC82F58, MEMORY[0x263F7D6D8], v13);
  uint64_t v27 = sub_20A8C91D0();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void *)(v28 + 72);
  unint64_t v30 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_20A8D4540;
  uint64_t v32 = *(void (**)(unint64_t, void, uint64_t))(v28 + 104);
  v32(v31 + v30, *MEMORY[0x263F7D6B8], v27);
  uint64_t v33 = (uint64_t *)(v31 + v30 + v29);
  sub_20A8CB580();
  uint64_t *v33 = sub_20A8CB550();
  v32((unint64_t)v33, *MEMORY[0x263F7D6D0], v27);
  uint64_t v34 = v39;
  *(uint64_t *)((char *)v17 + v38) = v31;
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v17, *MEMORY[0x263F7D688], v34);
  sub_20A6A448C((uint64_t)v7, type metadata accessor for WatchlistCellViewModel);
  return v16;
}

uint64_t sub_20A6A40CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ManageWatchlistsContentMode(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for WatchlistCellViewModel(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6A44EC(v1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_20A549390((uint64_t)v10, (uint64_t)v7, type metadata accessor for WatchlistCellViewModel);
    uint64_t v11 = (uint64_t)&v7[*(int *)(v5 + 32)];
    sub_20A453638();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 1, 1, v12);
    char v13 = sub_20A4DA2D4(v11, (uint64_t)v4);
    sub_20A6A448C((uint64_t)v4, type metadata accessor for ManageWatchlistsContentMode);
    sub_20A6A448C((uint64_t)v7, type metadata accessor for WatchlistCellViewModel);
  }
  else
  {
    sub_20A6A448C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
    char v13 = 0;
  }
  return v13 & 1;
}

BOOL sub_20A6A42F0()
{
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6A44EC(v3, (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
  BOOL v4 = swift_getEnumCaseMultiPayload() == 1;
  sub_20A6A448C((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
  return v4;
}

uint64_t sub_20A6A43A8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A6A43E8(MEMORY[0x263F7D3D8], MEMORY[0x263F7D3E0], a1);
}

uint64_t sub_20A6A43C8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A6A43E8(MEMORY[0x263F7D3B0], MEMORY[0x263F7D3B8], a1);
}

uint64_t sub_20A6A43E8@<X0>(unsigned int *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a2(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(a3, v4, v5);
}

uint64_t sub_20A6A445C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return MEMORY[0x270F7B558](a1, a10, a2, a3, a4, a5, a11, a6, a7, a8, a9);
}

uint64_t sub_20A6A448C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A6A44EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_20A6A4554(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A6A45B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WatchlistCellViewModel(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6A493C();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (uint64_t)&v15[*(int *)(v16 + 56)];
  sub_20A6A44EC(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
  sub_20A6A44EC(a2, v17, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    if (!swift_getEnumCaseMultiPayload())
    {
LABEL_20:
      uint64_t v22 = (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel;
      sub_20A6A448C(v17, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
      char v20 = 1;
      goto LABEL_25;
    }
LABEL_18:
    uint64_t v22 = (uint64_t (*)(void))sub_20A6A493C;
    char v20 = 0;
    goto LABEL_25;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 2) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  sub_20A6A44EC((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_20A549390((uint64_t)v12, (uint64_t)v9, type metadata accessor for WatchlistCellViewModel);
    sub_20A549390(v17, (uint64_t)v6, type metadata accessor for WatchlistCellViewModel);
    BOOL v19 = *(void *)v9 == *(void *)v6 && *((void *)v9 + 1) == *((void *)v6 + 1);
    if (v19 || (char v20 = 0, (sub_20A8CF760() & 1) != 0))
    {
      BOOL v21 = *((void *)v9 + 2) == *((void *)v6 + 2) && *((void *)v9 + 3) == *((void *)v6 + 3);
      if (v21 || (char v20 = 0, (sub_20A8CF760() & 1) != 0))
      {
        if (v9[32] == v6[32] && (MEMORY[0x21051C3A0](&v9[*(int *)(v4 + 28)], &v6[*(int *)(v4 + 28)]) & 1) != 0) {
          char v20 = sub_20A4DA2D4((uint64_t)&v9[*(int *)(v4 + 32)], (uint64_t)&v6[*(int *)(v4 + 32)]);
        }
        else {
          char v20 = 0;
        }
      }
    }
    sub_20A6A448C((uint64_t)v6, type metadata accessor for WatchlistCellViewModel);
    sub_20A6A448C((uint64_t)v9, type metadata accessor for WatchlistCellViewModel);
    uint64_t v23 = (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel;
  }
  else
  {
    sub_20A6A448C((uint64_t)v12, type metadata accessor for WatchlistCellViewModel);
    char v20 = 0;
    uint64_t v23 = (uint64_t (*)(void))sub_20A6A493C;
  }
  uint64_t v22 = v23;
LABEL_25:
  sub_20A6A448C((uint64_t)v15, v22);
  return v20 & 1;
}

void sub_20A6A493C()
{
  if (!qword_26763D278)
  {
    type metadata accessor for ManageWatchlistsModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763D278);
    }
  }
}

uint64_t destroy for TodayViewLayout()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *_s8StocksUI15TodayViewLayoutVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for TodayViewLayout(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TodayViewLayout(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TodayViewLayout()
{
  return &type metadata for TodayViewLayout;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t getEnumTagSinglePayload for QuoteDetailViewLayoutAttributes.AttributionLayoutAttributes(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 96)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for QuoteDetailViewLayoutAttributes.AttributionLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 96) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TodayViewLayoutAttributes()
{
  return &type metadata for TodayViewLayoutAttributes;
}

uint64_t sub_20A6A4BA0()
{
  return swift_retain();
}

uint64_t sub_20A6A4BA8@<X0>(uint64_t *a1@<X8>)
{
  sub_20A6A5320();
  swift_allocObject();
  uint64_t v2 = sub_20A8C4340();
  swift_allocObject();
  uint64_t v3 = sub_20A8C4340();
  swift_allocObject();
  uint64_t result = sub_20A8C4340();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = result;
  return result;
}

uint64_t sub_20A6A4C74(void *a1)
{
  uint64_t v3 = v1;
  sub_20A6A5854(0, &qword_26763D290, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A6A5800();
  sub_20A8CF8F0();
  long long v10 = v3[1];
  long long v16 = *v3;
  long long v17 = v10;
  char v15 = 0;
  type metadata accessor for CGRect(0);
  sub_20A6A58B8(&qword_26763D298);
  sub_20A8CF6E0();
  if (!v2)
  {
    long long v11 = v3[3];
    long long v16 = v3[2];
    long long v17 = v11;
    char v15 = 1;
    sub_20A8CF6E0();
    long long v12 = v3[5];
    long long v16 = v3[4];
    long long v17 = v12;
    char v15 = 2;
    sub_20A8CF6E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_20A6A4E70()
{
  unint64_t v1 = 0x62614C656C746974;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656D617266;
  }
}

uint64_t sub_20A6A4ED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A6A53F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A6A4F00(uint64_t a1)
{
  unint64_t v2 = sub_20A6A5800();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A6A4F3C(uint64_t a1)
{
  unint64_t v2 = sub_20A6A5800();

  return MEMORY[0x270FA00B8](a1, v2);
}

BOOL sub_20A6A4F78(CGRect *a1, CGRect *a2)
{
  CGFloat rect2_24 = a1[1].origin.y;
  CGFloat x = a1[1].origin.x;
  CGFloat rect2_8 = a1[1].size.height;
  CGFloat rect2_16 = a1[1].size.width;
  CGFloat y = a1[2].origin.y;
  CGFloat v13 = a1[2].origin.x;
  CGFloat height = a1[2].size.height;
  CGFloat width = a1[2].size.width;
  CGFloat v3 = a2[1].origin.y;
  CGFloat rect2 = a2[1].origin.x;
  CGFloat v4 = a2[1].size.width;
  CGFloat v5 = a2[1].size.height;
  CGFloat v6 = a2[2].origin.x;
  CGFloat v7 = a2[2].origin.y;
  CGFloat v8 = a2[2].size.width;
  CGFloat v9 = a2[2].size.height;
  BOOL result = CGRectEqualToRect(*a1, *a2);
  if (result)
  {
    v19.origin.CGFloat y = rect2_24;
    v19.origin.CGFloat x = x;
    v19.size.CGFloat height = rect2_8;
    v19.size.CGFloat width = rect2_16;
    v21.origin.CGFloat x = rect2;
    v21.origin.CGFloat y = v3;
    v21.size.CGFloat width = v4;
    v21.size.CGFloat height = v5;
    BOOL result = CGRectEqualToRect(v19, v21);
    if (result)
    {
      v20.origin.CGFloat y = y;
      v20.origin.CGFloat x = v13;
      v20.size.CGFloat height = height;
      v20.size.CGFloat width = width;
      v22.origin.CGFloat y = v7;
      v22.origin.CGFloat x = v6;
      v22.size.CGFloat height = v9;
      v22.size.CGFloat width = v8;
      return CGRectEqualToRect(v20, v22);
    }
  }
  return result;
}

uint64_t sub_20A6A504C()
{
  sub_20A6A53A0();

  return sub_20A8CACE0();
}

double sub_20A6A5088@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_20A6A5564(a1, (uint64_t)v8);
  if (!v2)
  {
    long long v5 = v8[3];
    a2[2] = v8[2];
    a2[3] = v5;
    long long v6 = v8[5];
    a2[4] = v8[4];
    a2[5] = v6;
    double result = *(double *)v8;
    long long v7 = v8[1];
    *a2 = v8[0];
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_20A6A50D4(void *a1)
{
  return sub_20A6A4C74(a1);
}

uint64_t sub_20A6A50EC(uint64_t a1, double a2, double a3, double a4, double a5)
{
  unint64_t v10 = sub_20A6A58FC();
  v11.n128_f64[0] = a2;
  v12.n128_f64[0] = a3;
  v13.n128_f64[0] = a4;
  v14.n128_f64[0] = a5;

  return MEMORY[0x270F7AA38](a1, v10, v11, v12, v13, v14);
}

unint64_t sub_20A6A516C()
{
  unint64_t result = qword_26AC80D98;
  if (!qword_26AC80D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC80D98);
  }
  return result;
}

unint64_t sub_20A6A51C4()
{
  unint64_t result = qword_26AC80D90;
  if (!qword_26AC80D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC80D90);
  }
  return result;
}

unint64_t sub_20A6A521C()
{
  unint64_t result = qword_26AC80D78;
  if (!qword_26AC80D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC80D78);
  }
  return result;
}

unint64_t sub_20A6A5274()
{
  unint64_t result = qword_26763D280;
  if (!qword_26763D280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D280);
  }
  return result;
}

unint64_t sub_20A6A52CC()
{
  unint64_t result = qword_26AC80D80;
  if (!qword_26AC80D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC80D80);
  }
  return result;
}

void sub_20A6A5320()
{
  if (!qword_26AC80AF8)
  {
    type metadata accessor for CGRect(255);
    sub_20A6A58B8(&qword_26AC81038);
    unint64_t v0 = sub_20A8C4330();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC80AF8);
    }
  }
}

unint64_t sub_20A6A53A0()
{
  unint64_t result = qword_26763D288;
  if (!qword_26763D288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D288);
  }
  return result;
}

uint64_t sub_20A6A53F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x62614C656C746974 && a2 == 0xEF656D6172466C65 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020A909F00)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_20A6A5564@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20A6A5854(0, &qword_26AC81048, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  CGFloat v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A6A5800();
  sub_20A8CF8E0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  type metadata accessor for CGRect(0);
  char v24 = 0;
  sub_20A6A58B8(&qword_26AC81040);
  sub_20A8CF640();
  long long v10 = v21;
  uint64_t v11 = v22;
  uint64_t v12 = v23;
  char v24 = 1;
  sub_20A8CF640();
  long long v13 = v21;
  uint64_t v14 = v22;
  uint64_t v15 = v23;
  char v24 = 2;
  sub_20A8CF640();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  long long v20 = v21;
  uint64_t v18 = v23;
  uint64_t v19 = v22;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(_OWORD *)a2 = v10;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v12;
  *(_OWORD *)(a2 + 32) = v13;
  *(void *)(a2 + 48) = v14;
  *(void *)(a2 + 56) = v15;
  *(_OWORD *)(a2 + 64) = v20;
  uint64_t v17 = v18;
  *(void *)(a2 + 80) = v19;
  *(void *)(a2 + 88) = v17;
  return result;
}

unint64_t sub_20A6A5800()
{
  unint64_t result = qword_26AC80D60;
  if (!qword_26AC80D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC80D60);
  }
  return result;
}

void sub_20A6A5854(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A6A5800();
    unint64_t v7 = a3(a1, &type metadata for TodayViewLayoutAttributes.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A6A58B8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CGRect(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A6A58FC()
{
  unint64_t result = qword_26AC80D88;
  if (!qword_26AC80D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC80D88);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TodayViewLayoutAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A6A5A1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayViewLayoutAttributes.CodingKeys()
{
  return &type metadata for TodayViewLayoutAttributes.CodingKeys;
}

unint64_t sub_20A6A5A58()
{
  unint64_t result = qword_26763D2A0;
  if (!qword_26763D2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D2A0);
  }
  return result;
}

unint64_t sub_20A6A5AB0()
{
  unint64_t result = qword_26AC80D70;
  if (!qword_26AC80D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC80D70);
  }
  return result;
}

unint64_t sub_20A6A5B08()
{
  unint64_t result = qword_26AC80D68;
  if (!qword_26AC80D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC80D68);
  }
  return result;
}

uint64_t sub_20A6A5B60@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20A4342F4(a1, (uint64_t)v6);
  uint64_t v3 = type metadata accessor for TipsModule();
  uint64_t v4 = swift_allocObject();
  uint64_t result = sub_20A42BEBC(v6, v4 + 16);
  a2[3] = v3;
  a2[4] = (uint64_t)&off_26BE62110;
  *a2 = v4;
  return result;
}

uint64_t sub_20A6A5BD0()
{
  sub_20A43F7E0(0, (unint64_t *)&unk_26AC69538);
  sub_20A8C62A0();
  swift_release();
  sub_20A43F7E0(0, &qword_26AC69448);
  sub_20A8C62A0();
  swift_release();
  sub_20A43F7E0(0, &qword_26AC69410);
  sub_20A8C62A0();
  swift_release();
  sub_20A43F7E0(0, &qword_26AC693D0);
  sub_20A8C62A0();
  swift_release();
  sub_20A8C4E90();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();

  return swift_release();
}

uint64_t sub_20A6A5D68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_20A8C53C0();
  swift_allocObject();
  uint64_t result = sub_20A8C53B0();
  uint64_t v4 = MEMORY[0x263F58CF8];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = result;
  return result;
}

uint64_t sub_20A6A5DC0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A43F7E0(0, &qword_26AC69410);
  uint64_t result = sub_20A8C5BB0();
  if (v6)
  {
    uint64_t v4 = sub_20A8C4D00();
    swift_allocObject();
    uint64_t result = sub_20A8C4CF0();
    uint64_t v5 = MEMORY[0x263F58A80];
    a2[3] = v4;
    a2[4] = v5;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A6A5E6C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4B00C0();
  uint64_t v4 = sub_20A8C5BA0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A43F7E0(0, &qword_26AC69F80);
  uint64_t result = sub_20A8C5BB0();
  if (!v11)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_20A8C5BB0();
  if ((~v9 & 0xF000000000000007) == 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = type metadata accessor for TipInteractor();
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = v4;
    sub_20A42BEBC(&v10, (uint64_t)(v8 + 3));
    v8[8] = v9;
    v8[9] = v6;
    a2[3] = v7;
    uint64_t result = sub_20A6A6684(&qword_26AC6D2F8, (void (*)(uint64_t))type metadata accessor for TipInteractor);
    a2[4] = result;
    *a2 = v8;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A6A6014@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A43F7E0(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v4 = v15;
  if (v15)
  {
    uint64_t v5 = type metadata accessor for TipStyler();
    uint64_t v6 = v16;
    uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
    double v8 = MEMORY[0x270FA5388](v7);
    long long v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *, double))(v11 + 16))(v10, v8);
    uint64_t v12 = sub_20A431A50((uint64_t)v10, v5, v4, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    a2[3] = v5;
    uint64_t result = sub_20A6A6684(&qword_26AC7F3F8, (void (*)(uint64_t))type metadata accessor for TipStyler);
    a2[4] = result;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A6A61A0(void *a1)
{
  sub_20A6A662C();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v5 = sub_20A8C4C10();
  sub_20A8C5BB0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A43F7E0(0, &qword_26AC69448);
  uint64_t result = sub_20A8C5BB0();
  if (!v14[18])
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A43F7E0(0, &qword_26AC693D0);
  uint64_t result = sub_20A8C5BB0();
  if (!v14[13])
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A43F7E0(0, (unint64_t *)&unk_26AC69538);
  uint64_t result = sub_20A8C5BB0();
  if (!v14[8])
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A43F7E0(0, (unint64_t *)&qword_26AC69510);
  uint64_t result = sub_20A8C5BB0();
  if (!v13)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_20A42BEBC(&v12, (uint64_t)v14);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A43F7E0(0, &qword_26AC6AAF0);
  uint64_t result = sub_20A8C5BB0();
  if (v10)
  {
    sub_20A42BEBC(&v9, (uint64_t)&v11);
    id v7 = objc_allocWithZone((Class)sub_20A8C4E90());
    return sub_20A8C4E80();
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_20A6A645C(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A43F7E0(0, (unint64_t *)&unk_26AC697A0);
  uint64_t result = sub_20A8C5BB0();
  if (v4)
  {
    sub_20A42BEBC(&v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_20A6A6684(&qword_26AC69418, MEMORY[0x263F58B28]);
    sub_20A8C62B0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for TipsAssembly()
{
  return self;
}

uint64_t sub_20A6A6578()
{
  sub_20A8C5CC0();
  sub_20A43F7E0(0, (unint64_t *)&qword_26AC6DC30);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A8C6280();

  return swift_release();
}

void sub_20A6A662C()
{
  if (!qword_26AC693C8)
  {
    sub_20A8C4C10();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC693C8);
    }
  }
}

uint64_t sub_20A6A6684(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6A66CC(uint64_t a1, uint64_t a2)
{
  uint64_t v61 = a2;
  sub_20A44DB30(0);
  uint64_t v3 = v2;
  uint64_t v67 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StockViewModel();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v66 = (uint64_t)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v65 = (uint64_t)&v55 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v63 = (uint64_t)&v55 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v55 - v13;
  uint64_t v15 = type metadata accessor for StockSearchModel();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  long long v20 = (char *)&v55 - v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v55 - v22;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v55 - v25;
  uint64_t v69 = sub_20A8C3F00();
  uint64_t v27 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v68 = (char *)&v55 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v56 = (char *)&v55 - v30;
  sub_20A8C8330();
  sub_20A6A700C((uint64_t)v26, (uint64_t)v23);
  uint64_t v64 = v15;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_20A5159EC();
    uint64_t v32 = &v23[*(int *)(v31 + 48)];
    uint64_t v33 = v63;
    sub_20A4C8874((uint64_t)v23, v63);
    uint64_t v34 = sub_20A8C40E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(v32, v34);
  }
  else
  {
    uint64_t v33 = v63;
    sub_20A4C8874((uint64_t)v23, v63);
  }
  sub_20A4C8874(v33, (uint64_t)v14);
  sub_20A6A7070((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for StockSearchModel);
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  uint64_t v63 = v27 + 16;
  v62(v56, v14, v69);
  sub_20A6A7070((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  uint64_t v35 = v61;
  int64_t v36 = *(void *)(v61 + 16);
  uint64_t v37 = MEMORY[0x263F8EE78];
  if (v36)
  {
    uint64_t v70 = MEMORY[0x263F8EE78];
    sub_20A68C89C(0, v36, 0);
    uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
    uint64_t v39 = v35 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
    uint64_t v58 = *(void *)(v67 + 72);
    uint64_t v59 = v38;
    v67 += 16;
    uint64_t v40 = (void (**)(char *, uint64_t))(v67 - 8);
    uint64_t v57 = v27 + 32;
    uint64_t v60 = v5;
    uint64_t v61 = v3;
    do
    {
      v59(v5, v39, v3);
      sub_20A8C8330();
      sub_20A6A700C((uint64_t)v20, (uint64_t)v17);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_20A5159EC();
        uint64_t v42 = &v17[*(int *)(v41 + 48)];
        uint64_t v43 = v66;
        sub_20A4C8874((uint64_t)v17, v66);
        uint64_t v44 = sub_20A8C40E0();
        (*(void (**)(char *, uint64_t))(*(void *)(v44 - 8) + 8))(v42, v44);
      }
      else
      {
        uint64_t v43 = v66;
        sub_20A4C8874((uint64_t)v17, v66);
      }
      uint64_t v45 = v65;
      sub_20A4C8874(v43, v65);
      sub_20A6A7070((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StockSearchModel);
      v62(v68, (char *)v45, v69);
      sub_20A6A7070(v45, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      (*v40)(v5, v3);
      uint64_t v37 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C89C(0, *(void *)(v37 + 16) + 1, 1);
        uint64_t v37 = v70;
      }
      unint64_t v47 = *(void *)(v37 + 16);
      unint64_t v46 = *(void *)(v37 + 24);
      if (v47 >= v46 >> 1)
      {
        sub_20A68C89C(v46 > 1, v47 + 1, 1);
        uint64_t v37 = v70;
      }
      *(void *)(v37 + 16) = v47 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v37+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v47, v68, v69);
      uint64_t v70 = v37;
      v39 += v58;
      --v36;
      uint64_t v5 = v60;
      uint64_t v3 = v61;
    }
    while (v36);
  }
  uint64_t v48 = v55;
  uint64_t v49 = v55[9];
  uint64_t v50 = v55[10];
  __swift_project_boxed_opaque_existential_1(v55 + 6, v49);
  uint64_t v51 = v56;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 8))(v56, v37, v49, v50);
  swift_bridgeObjectRelease();
  uint64_t v52 = v48[5];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 64))(v51, ObjectType, v52);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v51, v69);
}

uint64_t sub_20A6A6D60()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8C3F00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StockSearchModel();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StockViewModel();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44DB30(0);
  sub_20A8C8330();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_20A5159EC();
    uint64_t v13 = &v8[*(int *)(v12 + 48)];
    sub_20A4C8874((uint64_t)v8, (uint64_t)v11);
    uint64_t v14 = sub_20A8C40E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  else
  {
    sub_20A4C8874((uint64_t)v8, (uint64_t)v11);
  }
  uint64_t v15 = v1 + 6;
  uint64_t v17 = v1[9];
  uint64_t v16 = v1[10];
  __swift_project_boxed_opaque_existential_1(v15, v17);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v11, v2);
  sub_20A6A7070((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  uint64_t v18 = sub_20A514B34();
  uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 16))(v5, v18, v17, v16);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v19;
}

uint64_t type metadata accessor for StockSearchEventHandler()
{
  return self;
}

uint64_t sub_20A6A700C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockSearchModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A6A7070(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A6A70D0(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x2105289B0](a2 + 16);
  if (result)
  {
    uint64_t v5 = (void (*)(uint64_t, uint64_t, uint64_t))off_26BE64A40;
    type metadata accessor for StockSearchViewController(0);
    v5(a2, (uint64_t)&off_26BE6AF70, a1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A6A7178(uint64_t a1)
{
  uint64_t result = MEMORY[0x2105289B0](a1 + 16);
  if (result)
  {
    uint64_t v2 = (void *)result;
    *(void *)(swift_allocObject() + 16) = result;
    id v3 = v2;
    sub_20A8C66A0();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_20A6A720C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C7FE0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  double v7 = MEMORY[0x270FA5388](v4);
  uint64_t result = MEMORY[0x2105289B0](a2 + 16, v7);
  if (result)
  {
    uint64_t v9 = (void *)result;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v9;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    id v12 = v9;
    sub_20A8C66A0();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_20A6A736C()
{
  uint64_t v1 = sub_20A8C7FE0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_20A6A7438()
{
  uint64_t v1 = *(void *)(sub_20A8C7FE0() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_20A55FB64(v2, v3);
}

uint64_t sub_20A6A749C()
{
  return swift_deallocObject();
}

uint64_t sub_20A6A74D4()
{
  return sub_20A55FE4C(*(void *)(v0 + 16));
}

uint64_t sub_20A6A74DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = v2 != 0;
  uint64_t v4 = 0;
  uint64_t v5 = *(void *)(sub_20A8C3F00() - 8);
  if (v2 != v3)
  {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
    sub_20A8CF790();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    uint64_t v7 = swift_dynamicCastClass();
    if (!v7)
    {
      swift_bridgeObjectRelease();
      uint64_t v7 = MEMORY[0x263F8EE78];
    }
    uint64_t v8 = *(void *)(v7 + 16);
    swift_release();
    if (v8 == v2 - v3)
    {
      uint64_t v4 = swift_dynamicCastClass();
      if (!v4)
      {
        swift_bridgeObjectRelease();
        uint64_t v4 = MEMORY[0x263F8EE78];
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = sub_20A75C918(a1, a1 + ((v6 + 32) & ~v6), v2 != 0, (2 * v2) | 1);
    }
    swift_bridgeObjectRelease();
  }
  return v4;
}

ValueMetadata *type metadata accessor for YahooStockForYouFeedGroupEmitterCursor()
{
  return &type metadata for YahooStockForYouFeedGroupEmitterCursor;
}

uint64_t sub_20A6A761C(uint64_t a1, void *aBlock)
{
  uint64_t v2 = *(void (**)(void (*)(uint64_t), uint64_t))(a1 + 32);
  uint64_t v3 = _Block_copy(aBlock);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  swift_retain();
  v2(sub_20A6A8CD0, v4);
  swift_release();

  return swift_release();
}

void sub_20A6A76B0(uint64_t a1, uint64_t a2)
{
  sub_20A42CFF0(0, &qword_26AC7F8C8);
  id v3 = (id)sub_20A8CE5D0();
  (*(void (**)(uint64_t, id))(a2 + 16))(a2, v3);
}

uint64_t sub_20A6A772C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_20A8C9F40();
  double v5 = MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, void, double))(v7 + 104))((char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F7DA50], v5);
  uint64_t v8 = *(void *)(v1 + 112);
  uint64_t v24 = (void *)sub_20A8C4990();
  unint64_t v25 = sub_20A564C14();
  aBlock[0] = v8;
  swift_retain();
  objc_msgSend(a1, sel_frame);
  uint64_t v27 = v9;
  uint64_t v28 = v10;
  uint64_t v29 = v11;
  uint64_t v30 = v12;
  char v31 = 0;
  sub_20A8C99D0();
  swift_allocObject();
  id v13 = a1;
  uint64_t v14 = sub_20A8C99B0();
  sub_20A45F33C();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_20A8D5CA0;
  uint64_t v16 = self;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v2;
  *(void *)(v17 + 24) = v14;
  unint64_t v25 = (unint64_t)sub_20A6A8C90;
  uint64_t v26 = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A6A761C;
  uint64_t v24 = &block_descriptor_30;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id v19 = objc_msgSend(v16, sel_elementWithUncachedProvider_, v18);
  _Block_release(v18);
  *(void *)(v15 + 32) = v19;
  aBlock[0] = v15;
  sub_20A8CE620();
  if (aBlock[0] >> 62)
  {
    sub_20A42CFF0(0, &qword_26AC7F8C8);
    swift_bridgeObjectRetain();
    sub_20A8CF530();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_20A8CF780();
    sub_20A42CFF0(0, &qword_26AC7F8C8);
  }
  swift_bridgeObjectRelease();
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB90);
  uint64_t v20 = sub_20A8CEE50();
  swift_release();
  return v20;
}

uint64_t sub_20A6A7A4C(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a4;
  uint64_t v44 = a2;
  uint64_t v45 = a1;
  uint64_t v5 = sub_20A8C40E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C8A80();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_20A6A8CD8(0, &qword_26AC7FF88, (uint64_t (*)(uint64_t))sub_20A564D04, MEMORY[0x263F8E0F8]);
  uint64_t v14 = swift_allocObject();
  long long v40 = xmmword_20A8D3DC0;
  *(_OWORD *)(v14 + 16) = xmmword_20A8D3DC0;
  uint64_t v15 = *(void (**)(void))(v10 + 104);
  unsigned int v39 = *MEMORY[0x263F7D4E8];
  uint64_t v41 = v10 + 104;
  uint64_t v42 = v9;
  uint64_t v38 = (void (*)(char *, void, uint64_t))v15;
  v15(v12);
  sub_20A6A8CD8(0, (unint64_t *)&qword_26AC7FF90, (uint64_t (*)(uint64_t))sub_20A564C6C, v13);
  v37[1] = v16;
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_20A8D4540;
  __swift_project_boxed_opaque_existential_1((void *)(a3 + 16), *(void *)(a3 + 40));
  sub_20A8C3600();
  uint64_t v18 = sub_20A7C7B44();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v19 = sub_20A8C8720();
  uint64_t v20 = MEMORY[0x263F7D410];
  *(void *)(v17 + 56) = v19;
  *(void *)(v17 + 64) = v20;
  *(void *)(v17 + 32) = v18;
  uint64_t v21 = sub_20A574A3C();
  *(void *)(v17 + 96) = v19;
  *(void *)(v17 + 104) = v20;
  *(void *)(v17 + 72) = v21;
  uint64_t v22 = sub_20A8C8A70();
  swift_allocObject();
  uint64_t v23 = sub_20A8C8A40();
  uint64_t v24 = MEMORY[0x263F7D4D0];
  *(void *)(v14 + 56) = v22;
  *(void *)(v14 + 64) = v24;
  *(void *)(v14 + 32) = v23;
  uint64_t v25 = sub_20A6A7EF4();
  unint64_t v27 = *(void *)(v14 + 16);
  unint64_t v26 = *(void *)(v14 + 24);
  if (v27 >= v26 >> 1) {
    uint64_t v14 = (uint64_t)sub_20A46E1B0((void *)(v26 > 1), v27 + 1, 1, (void *)v14);
  }
  uint64_t v47 = v22;
  uint64_t v48 = v24;
  *(void *)&long long v46 = v25;
  *(void *)(v14 + 16) = v27 + 1;
  sub_20A42BEBC(&v46, v14 + 40 * v27 + 32);
  uint64_t v28 = sub_20A6A8690();
  unint64_t v30 = *(void *)(v14 + 16);
  unint64_t v29 = *(void *)(v14 + 24);
  if (v30 >= v29 >> 1) {
    uint64_t v14 = (uint64_t)sub_20A46E1B0((void *)(v29 > 1), v30 + 1, 1, (void *)v14);
  }
  uint64_t v47 = v22;
  uint64_t v48 = v24;
  *(void *)&long long v46 = v28;
  *(void *)(v14 + 16) = v30 + 1;
  sub_20A42BEBC(&v46, v14 + 40 * v30 + 32);
  v38(v12, v39, v42);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = v40;
  uint64_t v32 = _s5TeaUI15ContextMenuItemC06StocksB0E15provideFeedbackACyFZ_0();
  *(void *)(v31 + 56) = v19;
  *(void *)(v31 + 64) = v20;
  *(void *)(v31 + 32) = v32;
  swift_allocObject();
  uint64_t v33 = sub_20A8C8A40();
  unint64_t v34 = *(void *)(v14 + 16);
  unint64_t v35 = *(void *)(v14 + 24);
  swift_retain();
  if (v34 >= v35 >> 1) {
    uint64_t v14 = (uint64_t)sub_20A46E1B0((void *)(v35 > 1), v34 + 1, 1, (void *)v14);
  }
  uint64_t v47 = v22;
  uint64_t v48 = v24;
  *(void *)&long long v46 = v33;
  *(void *)(v14 + 16) = v34 + 1;
  sub_20A42BEBC(&v46, v14 + 40 * v34 + 32);
  sub_20A8C80C0();
  sub_20A8C8070();
  sub_20A8C8030();
  v45();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A6A7EF4()
{
  uint64_t v1 = v0;
  uint64_t v55 = sub_20A8C34C0();
  uint64_t v51 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v50 = &v42[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v3);
  uint64_t v44 = &v42[-v4];
  uint64_t v5 = sub_20A8C40E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v46 = &v42[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = &v42[-v9];
  uint64_t v11 = sub_20A8C8A80();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v42[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_20A8C34A0();
  swift_retain();
  unint64_t v16 = sub_20A6A8D3C(v15, v0);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v17 = *(void (**)(void))(v12 + 104);
  unsigned int v43 = *MEMORY[0x263F7D4E0];
  uint64_t v53 = v12 + 104;
  uint64_t v54 = v11;
  uint64_t v52 = (void (*)(unsigned char *, void, uint64_t))v17;
  v17(v14);
  sub_20A4A62F4(v16);
  swift_bridgeObjectRelease();
  sub_20A8C8A70();
  swift_allocObject();
  uint64_t v48 = v14;
  uint64_t v18 = sub_20A8C8A40();
  sub_20A45F33C();
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_20A8D5CA0;
  *(void *)(v19 + 32) = v18;
  unint64_t v61 = v19;
  sub_20A8CE620();
  uint64_t v20 = *(void *)(v1 + 40);
  uint64_t v45 = (void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), v20);
  swift_retain();
  sub_20A8C3600();
  uint64_t v21 = v44;
  sub_20A8C40D0();
  uint64_t v22 = *(unsigned char **)(v6 + 8);
  uint64_t v49 = v5;
  uint64_t v23 = v5;
  uint64_t v24 = v21;
  uint64_t v47 = v6 + 8;
  ((void (*)(unsigned char *, uint64_t))v22)(v10, v23);
  uint64_t v25 = v51;
  int v26 = (*(uint64_t (**)(unsigned char *, uint64_t))(v51 + 88))(v24, v55);
  if (v26 == *MEMORY[0x263F7ABB8])
  {
    uint64_t v27 = sub_20A8C3460();
    swift_retain();
    unint64_t v28 = sub_20A6A8F0C(v27, v1, (uint64_t)v56, MEMORY[0x263F7ABB8]);
    unint64_t v29 = v48;
LABEL_12:
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v25 + 8))(v24, v55);
    goto LABEL_13;
  }
  unint64_t v29 = v48;
  if (v26 == *MEMORY[0x263F7ABC8])
  {
    uint64_t v30 = sub_20A8C3460();
    swift_retain();
    uint64_t v31 = (unsigned int *)MEMORY[0x263F7ABC8];
    uint64_t v32 = &v57;
LABEL_11:
    unint64_t v28 = sub_20A6A8F0C(v30, v1, (uint64_t)v32, v31);
    goto LABEL_12;
  }
  if (v26 == *MEMORY[0x263F7AC00])
  {
    uint64_t v30 = sub_20A8C3460();
    swift_retain();
    uint64_t v31 = (unsigned int *)MEMORY[0x263F7AC00];
    uint64_t v32 = &v58;
    goto LABEL_11;
  }
  if (v26 == *MEMORY[0x263F7ABF8])
  {
    uint64_t v30 = sub_20A8C3460();
    swift_retain();
    uint64_t v31 = (unsigned int *)MEMORY[0x263F7ABF8];
    uint64_t v32 = &v59;
    goto LABEL_11;
  }
  if (v26 == *MEMORY[0x263F7ABD0])
  {
    uint64_t v30 = sub_20A8C3460();
    swift_retain();
    uint64_t v31 = (unsigned int *)MEMORY[0x263F7ABD0];
    uint64_t v32 = &v60;
    goto LABEL_11;
  }
  if (v26 != *MEMORY[0x263F7ABF0])
  {
    uint64_t result = sub_20A8CF750();
    __break(1u);
    return result;
  }
  unint64_t v28 = MEMORY[0x263F8EE78];
LABEL_13:
  uint64_t v44 = v22;
  uint64_t v48 = (unsigned char *)v18;
  v52(v29, v43, v54);
  sub_20A4A62F4(v28);
  swift_bridgeObjectRelease();
  swift_allocObject();
  sub_20A8C8A40();
  uint64_t v33 = swift_retain();
  MEMORY[0x2105268E0](v33);
  if (*(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_20A8CE690();
  }
  sub_20A8CE6B0();
  sub_20A8CE620();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v35 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  __swift_project_boxed_opaque_existential_1(v45, *(void *)(v1 + 40));
  int64_t v36 = v46;
  sub_20A8C3600();
  uint64_t v37 = v50;
  sub_20A8C40D0();
  ((void (*)(unsigned char *, uint64_t))v44)(v36, v49);
  sub_20A8C3430();
  (*(void (**)(unsigned char *, uint64_t))(v51 + 8))(v37, v55);
  uint64_t v38 = (void *)sub_20A8CE240();
  id v39 = objc_msgSend(self, sel_systemImageNamed_, v38);

  sub_20A4A6A84(v61);
  swift_bridgeObjectRelease();
  v52(v29, *MEMORY[0x263F7D4F0], v54);
  swift_allocObject();
  uint64_t v40 = sub_20A8C8A40();
  swift_release();
  swift_release();
  return v40;
}

uint64_t sub_20A6A8690()
{
  uint64_t v1 = v0;
  uint64_t v30 = sub_20A8C3410();
  uint64_t v2 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_20A8C40E0();
  uint64_t v5 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C8A80();
  uint64_t v28 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8C3400();
  swift_retain();
  unint64_t v13 = sub_20A6A912C(v12, v1);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v14 = *MEMORY[0x263F7D4E0];
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v27(v11, v14, v8);
  sub_20A4A62F4(v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_20A8C8A70();
  swift_allocObject();
  uint64_t v26 = sub_20A8C8A40();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v17 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v18 = sub_20A8C2370();
  v25[1] = v19;
  void v25[2] = v18;

  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  sub_20A8C3600();
  sub_20A8C4060();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v29);
  sub_20A8C33F0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v30);
  uint64_t v20 = (void *)sub_20A8CE240();
  id v21 = objc_msgSend(self, sel_systemImageNamed_, v20);

  v27(v11, *MEMORY[0x263F7D4F0], v28);
  sub_20A6A8CD8(0, (unint64_t *)&qword_26AC7FF90, (uint64_t (*)(uint64_t))sub_20A564C6C, MEMORY[0x263F8E0F8]);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = MEMORY[0x263F7D4D0];
  *(_OWORD *)(v22 + 16) = xmmword_20A8D3DC0;
  *(void *)(v22 + 56) = v15;
  *(void *)(v22 + 64) = v23;
  *(void *)(v22 + 32) = v26;
  swift_allocObject();
  return sub_20A8C8A40();
}

uint64_t sub_20A6A8B10()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WatchlistEditMenuProvider()
{
  return self;
}

void *sub_20A6A8B84(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v18 = a7;
  uint64_t v19 = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(boxed_opaque_existential_1, a4, a7);
  uint64_t v15 = (void *)swift_allocObject();
  sub_20A42BEBC(a1, (uint64_t)(v15 + 2));
  v15[7] = a2;
  v15[8] = a3;
  sub_20A42BEBC(&v17, (uint64_t)(v15 + 9));
  v15[14] = a5;
  return v15;
}

uint64_t sub_20A6A8C50()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A6A8C90(void (*a1)(void), uint64_t a2)
{
  return sub_20A6A7A4C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_20A6A8C98()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_20A6A8CD0(uint64_t a1)
{
  sub_20A6A76B0(a1, *(void *)(v1 + 16));
}

void sub_20A6A8CD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A6A8D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for SortWatchlistCommandContext(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v8)
  {
    uint64_t v14 = v2;
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_20A8CF470();
    uint64_t v10 = sub_20A8C34C0();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    unint64_t v16 = (void *)(a2 + 16);
    uint64_t v17 = v10;
    uint64_t v15 = *(void *)(v11 + 72);
    unint64_t v13 = (void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    do
    {
      __swift_project_boxed_opaque_existential_1(v16, *(void *)(a2 + 40));
      sub_20A8C3600();
      (*v13)(&v7[*(int *)(v5 + 20)], v12, v17);
      v7[*(int *)(v5 + 24)] = 0;
      sub_20A7C6488((uint64_t)v7);
      sub_20A6A9308((uint64_t)v7);
      sub_20A8CF450();
      sub_20A8CF480();
      sub_20A8CF490();
      sub_20A8CF460();
      v12 += v15;
      --v8;
    }
    while (v8);
    return v18;
  }
  return result;
}

uint64_t sub_20A6A8F0C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4)
{
  uint64_t v8 = type metadata accessor for SortWatchlistCommandContext(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v11)
  {
    v19[1] = v4;
    uint64_t v24 = MEMORY[0x263F8EE78];
    sub_20A8CF470();
    uint64_t v13 = sub_20A8C3480();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v22 = (void *)(a2 + 16);
    uint64_t v23 = v13;
    uint64_t v21 = *(void *)(v14 + 72);
    unint64_t v16 = (void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    unsigned int v20 = *a4;
    do
    {
      __swift_project_boxed_opaque_existential_1(v22, *(void *)(a2 + 40));
      sub_20A8C3600();
      uint64_t v17 = &v10[*(int *)(v8 + 20)];
      (*v16)(v17, v15, v23);
      uint64_t v18 = sub_20A8C34C0();
      (*(void (**)(char *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v20, v18);
      v10[*(int *)(v8 + 24)] = 1;
      sub_20A7C6488((uint64_t)v10);
      sub_20A6A9308((uint64_t)v10);
      sub_20A8CF450();
      sub_20A8CF480();
      sub_20A8CF490();
      sub_20A8CF460();
      v15 += v21;
      --v11;
    }
    while (v11);
    return v24;
  }
  return result;
}

uint64_t sub_20A6A912C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_20A8C40E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v10)
  {
    v15[1] = v2;
    uint64_t v18 = MEMORY[0x263F8EE78];
    uint64_t v17 = v7;
    sub_20A8CF470();
    uint64_t v12 = *(void *)(sub_20A8C3410() - 8);
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    unint64_t v16 = (void *)(a2 + 16);
    uint64_t v14 = *(void *)(v12 + 72);
    do
    {
      __swift_project_boxed_opaque_existential_1(v16, *(void *)(a2 + 40));
      sub_20A8C3600();
      sub_20A7C6A34((uint64_t)v9, v13);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v17);
      sub_20A8CF450();
      sub_20A8CF480();
      sub_20A8CF490();
      sub_20A8CF460();
      v13 += v14;
      --v10;
    }
    while (v10);
    return v18;
  }
  return result;
}

uint64_t sub_20A6A9308(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SortWatchlistCommandContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A6A9364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A6A9378);
}

uint64_t sub_20A6A9378(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A6A93E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A6A93F8);
}

uint64_t sub_20A6A93F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for QuoteSummaryViewLayoutOptions()
{
  uint64_t result = qword_26AC794B0;
  if (!qword_26AC794B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void **sub_20A6A94B4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v178 = a4;
  uint64_t v176 = a3;
  uint64_t v172 = a1;
  uint64_t v164 = sub_20A8C8DF0();
  uint64_t v163 = *(void *)(v164 - 8);
  MEMORY[0x270FA5388](v164);
  uint64_t v161 = (void *)((char *)v146 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v162 = (uint64_t **)((char *)v146 - v6);
  uint64_t v168 = sub_20A8C9A90();
  uint64_t v167 = *(void *)(v168 - 8);
  MEMORY[0x270FA5388](v168);
  uint64_t v166 = (char *)v146 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_20A8C2B70();
  uint64_t v173 = *(void *)(v171 - 8);
  uint64_t v8 = *(void *)(v173 + 64);
  MEMORY[0x270FA5388](v171);
  uint64_t v170 = (char *)v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44D7C8(0);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = sub_20A8CCB60();
  uint64_t v175 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v169 = (void **)((char *)v146 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v15);
  uint64_t v174 = (char *)v146 - v16;
  uint64_t v17 = sub_20A8CCE00();
  uint64_t v177 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v180 = (char *)v146 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ForYouFeedLayoutModel();
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (double *)((char *)v146 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A683664();
  sub_20A8C9150();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v180 = *(char **)v21;
    uint64_t v177 = *((void *)v21 + 1);
    double v22 = v21[6];
    double v23 = v21[7];
    double v24 = v21[8];
    double v25 = v21[9];
    sub_20A518890();
    uint64_t v26 = (void *)sub_20A8CEB10();
    uint64_t v27 = v179;
    swift_beginAccess();
    uint64_t v28 = v27[7];
    uint64_t v29 = v27[8];
    uint64_t v30 = __swift_project_boxed_opaque_existential_1(v27 + 4, v28);
    uint64_t v31 = *(void *)(v28 - 8);
    double v32 = MEMORY[0x270FA5388](v30);
    unint64_t v34 = (char *)v146 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v31 + 16))(v34, v32);
    uint64_t v35 = *(void *)(v29 + 16);
    int64_t v36 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 64);
    uint64_t v37 = v26;
    uint64_t v38 = (void *)v36(v28, v35);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v34, v28);
    objc_msgSend(v37, sel_setBackgroundColor_, v38);

    uint64_t v39 = v27[11];
    uint64_t v40 = (char *)sub_20A8C8F10();
    uint64_t v41 = *(void **)&v40[OBJC_IVAR____TtC8StocksUI11PlacardView_messageLabel];
    objc_msgSend(v41, sel_setFrame_, v22, v23, v24, v25);
    uint64_t v42 = (void *)sub_20A8CE240();
    objc_msgSend(v41, sel_setText_, v42);

    swift_beginAccess();
    unsigned int v43 = (void *)*__swift_project_boxed_opaque_existential_1((void *)(v39 + 16), *(void *)(v39 + 40));
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
    uint64_t v44 = (void *)sub_20A8CEE20();
    objc_msgSend(v41, sel_setFont_, v44);

    uint64_t v45 = v43 + 2;
    uint64_t v47 = v43[5];
    uint64_t v46 = v43[6];
    __swift_project_boxed_opaque_existential_1(v45, v47);
    uint64_t v48 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v46 + 16) + 40))(v47);
    objc_msgSend(v41, sel_setTextColor_, v48);

    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, double *, uint64_t))(v177 + 32))(v180, v21, v17);
    uint64_t v157 = v179[9];
    uint64_t v159 = v17;
    uint64_t v165 = v13;
    uint64_t v158 = v179[10];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v49 = swift_allocObject();
    swift_weakInit();
    uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v160 = (char *)v146 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v155 = v50;
    v146[1] = v11 + 16;
    v50(v160, v172, v10);
    uint64_t v51 = v173;
    uint64_t v52 = *(void (**)(char *, void *, uint64_t))(v173 + 16);
    uint64_t v53 = v170;
    uint64_t v54 = v171;
    uint64_t v154 = v173 + 16;
    uint64_t v152 = v52;
    v52(v170, v178, v171);
    uint64_t v55 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v56 = (v55 + 24) & ~v55;
    uint64_t v57 = *(unsigned __int8 *)(v51 + 80);
    uint64_t v58 = (v12 + v57 + v56) & ~v57;
    uint64_t v151 = v58 + v8;
    uint64_t v150 = v55 | v57 | 7;
    uint64_t v59 = swift_allocObject();
    *(void *)(v59 + 16) = v49;
    uint64_t v153 = v56;
    unint64_t v61 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
    uint64_t v60 = v11 + 32;
    uint64_t v149 = v61;
    v61(v59 + v56, v160, v10);
    uint64_t v147 = v58;
    uint64_t v63 = *(void (**)(uint64_t, char *, uint64_t))(v51 + 32);
    uint64_t v62 = v51 + 32;
    uint64_t v148 = v63;
    v63(v59 + v58, v53, v54);
    swift_retain();
    uint64_t v64 = v174;
    uint64_t v65 = v175;
    uint64_t v66 = v165;
    sub_20A8CC990();
    swift_release();
    swift_release();
    uint64_t v67 = v169;
    (*(void (**)(void **, char *, uint64_t))(v65 + 16))(v169, v64, v66);
    int v68 = (*(uint64_t (**)(void **, uint64_t))(v65 + 88))(v67, v66);
    if (v68 == *MEMORY[0x263F59928])
    {
      (*(void (**)(void **, uint64_t))(v65 + 96))(v67, v66);
      uint64_t v69 = *v67;
      uint64_t v70 = v179;
      uint64_t v71 = v179 + 4;
      swift_beginAccess();
      uint64_t v72 = v70[7];
      uint64_t v73 = v70[8];
      uint64_t v74 = __swift_project_boxed_opaque_existential_1(v70 + 4, v72);
      uint64_t v178 = v146;
      uint64_t v75 = *(void *)(v72 - 8);
      double v76 = MEMORY[0x270FA5388](v74);
      uint64_t v78 = (char *)v146 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v75 + 16))(v78, v76);
      uint64_t v79 = *(void *)(v73 + 16);
      uint64_t v80 = *(uint64_t (**)(uint64_t, uint64_t))(v79 + 64);
      uint64_t v37 = v69;
      uint64_t v81 = (void *)v80(v72, v79);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v78, v72);
      objc_msgSend(v37, sel_setBackgroundColor_, v81);

      uint64_t v82 = (void *)sub_20A8C8EF0();
      uint64_t v83 = v70[7];
      uint64_t v84 = v70[8];
      uint64_t v85 = __swift_project_boxed_opaque_existential_1(v71, v83);
      uint64_t v86 = *(void *)(v83 - 8);
      double v87 = MEMORY[0x270FA5388](v85);
      unint64_t v89 = (char *)v146 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v86 + 16))(v89, v87);
      uint64_t v90 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v84 + 16) + 72))(v83);
      (*(void (**)(char *, uint64_t))(v86 + 8))(v89, v83);
      objc_msgSend(v82, sel_setBackgroundColor_, v90);

      uint64_t v91 = (void *)sub_20A8C8EF0();
      id v92 = objc_msgSend(v91, sel_layer);

      objc_msgSend(v92, sel_setCornerCurve_, *MEMORY[0x263F15A20]);
      char v93 = (void *)sub_20A8C8EF0();
      sub_20A8C9A70();

      uint64_t v94 = (void *)sub_20A8C8EF0();
      sub_20A8C9A80();

      uint64_t v95 = (void *)sub_20A8C8EF0();
      (*(void (**)(char *, void, uint64_t))(v167 + 104))(v166, *MEMORY[0x263F7D8D8], v168);
      sub_20A8C9AA0();

      id v96 = objc_msgSend(v37, sel_layer);
      objc_msgSend(v96, sel_setCornerRadius_, 6.0);

      objc_msgSend(v37, sel_setClipsToBounds_, 0);
      (*(void (**)(char *, uint64_t))(v175 + 8))(v174, v165);
    }
    else
    {
      uint64_t v97 = v10;
      uint64_t v98 = v67;
      if (v68 != *MEMORY[0x263F59930])
      {
        uint64_t v142 = (void *)sub_20A8CCB50();
        id v143 = objc_msgSend(v142, sel_layer);
        objc_msgSend(v143, sel_setCornerRadius_, 6.0);

        objc_msgSend(v142, sel_setClipsToBounds_, 0);
        id v144 = *(void (**)(char *, uint64_t))(v65 + 8);
        v144(v64, v66);
        (*(void (**)(char *, uint64_t))(v177 + 8))(v180, v159);
        v144((char *)v98, v66);
        return (void **)v142;
      }
      (*(void (**)(void **, uint64_t))(v65 + 96))(v67, v66);
      uint64_t v158 = v97;
      uint64_t v176 = v60;
      uint64_t v169 = (void **)*v67;
      uint64_t v99 = (uint64_t *)swift_allocObject();
      uint64_t v100 = sub_20A8C9E40();
      uint64_t v101 = MEMORY[0x263F7D9A8];
      v99[5] = v100;
      v99[6] = v101;
      __swift_allocate_boxed_opaque_existential_1(v99 + 2);
      sub_20A8C9E30();
      uint64_t v102 = v162;
      char *v162 = v99;
      uint64_t v103 = *MEMORY[0x263F7D5A0];
      uint64_t v173 = v62;
      uint64_t v104 = v163;
      uint64_t v105 = *(void (**)(uint64_t **, uint64_t, uint64_t))(v163 + 104);
      uint64_t v106 = v164;
      v105(v102, v103, v164);
      sub_20A518A38();
      uint64_t v108 = v107;
      uint64_t v109 = swift_allocBox();
      uint64_t v111 = v110 + *(int *)(v108 + 48);
      uint64_t v112 = *(void (**)(uint64_t, uint64_t **, uint64_t))(v104 + 16);
      v112(v110, v102, v106);
      v112(v111, v102, v106);
      long long v113 = v161;
      uint64_t *v161 = v109;
      v105((uint64_t **)v113, *MEMORY[0x263F7D5A8], v106);
      uint64_t v114 = v169;
      sub_20A8C8F00();
      uint64_t v37 = v114;
      id v115 = (void *)sub_20A8C8EF0();
      uint64_t v116 = v179;
      swift_beginAccess();
      uint64_t v117 = v116[7];
      uint64_t v118 = v116[8];
      uint64_t v119 = v175;
      uint64_t v120 = __swift_project_boxed_opaque_existential_1(v116 + 4, v117);
      uint64_t v121 = *(void *)(v117 - 8);
      double v122 = MEMORY[0x270FA5388](v120);
      uint64_t v124 = (char *)v146 - ((v123 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v121 + 16))(v124, v122);
      uint64_t v125 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v118 + 16) + 72))(v117);
      (*(void (**)(char *, uint64_t))(v121 + 8))(v124, v117);
      objc_msgSend(v115, sel_setBackgroundColor_, v125);

      uint64_t v126 = (void *)sub_20A8C8EF0();
      id v127 = objc_msgSend(v126, sel_layer);

      objc_msgSend(v127, sel_setCornerCurve_, *MEMORY[0x263F15A20]);
      uint64_t v128 = (void *)sub_20A8C8EF0();
      sub_20A8C9A70();

      uint64_t v129 = (void *)sub_20A8C8EF0();
      sub_20A8C9A80();

      uint64_t v130 = (void *)sub_20A8C8EF0();
      (*(void (**)(char *, void, uint64_t))(v167 + 104))(v166, *MEMORY[0x263F7D8D8], v168);
      sub_20A8C9AA0();

      uint64_t v131 = (void *)sub_20A8C8F10();
      unint64_t v132 = (void *)sub_20A8CD230();

      uint64_t v133 = (void *)sub_20A8CDB60();
      uint64_t v134 = swift_allocObject();
      swift_weakInit();
      uint64_t v135 = v160;
      uint64_t v136 = v158;
      v155(v160, v172, v158);
      double v137 = v170;
      uint64_t v138 = v171;
      v152(v170, v178, v171);
      uint64_t v139 = swift_allocObject();
      *(void *)(v139 + 16) = v134;
      v149(v139 + v153, v135, v136);
      v148(v139 + v147, v137, v138);
      aBlock[4] = sub_20A6AAFA8;
      aBlock[5] = v139;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_20A4713FC;
      void aBlock[3] = &block_descriptor_31;
      uint64_t v140 = _Block_copy(aBlock);
      swift_release();
      objc_msgSend(v133, sel_onTouchUpInside_, v140);
      _Block_release(v140);

      id v141 = objc_msgSend(v37, sel_layer);
      objc_msgSend(v141, sel_setCornerRadius_, 6.0);

      objc_msgSend(v37, sel_setClipsToBounds_, 0);
      (*(void (**)(uint64_t **, uint64_t))(v163 + 8))(v162, v164);
      (*(void (**)(char *, uint64_t))(v119 + 8))(v174, v165);
    }
    (*(void (**)(char *, uint64_t))(v177 + 8))(v180, v159);
  }
  return v37;
}

uint64_t sub_20A6AA7F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_20A8CCFB0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8CC5E0();
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v6) != *MEMORY[0x263F59AD0]) {
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
  uint64_t v10 = sub_20A8CD200();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v9, v10) != *MEMORY[0x263F59B98]) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (MEMORY[0x2105289B0](result + 16))
    {
      sub_20A7E76D4(a3, a4);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_20A6AAA04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (MEMORY[0x2105289B0](result + 16))
    {
      sub_20A7E76D4(a2, a3);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_20A6AAA9C()
{
  sub_20A4380C4(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_20A6AAAEC()
{
  return sub_20A8CEB30();
}

void **sub_20A6AAB50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X3>, void ***a5@<X8>)
{
  uint64_t result = sub_20A6A94B4(a1, a2, *a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_20A6AAB80(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  sub_20A4342F4(v2 + 32, (uint64_t)v12);
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8);
  uint64_t v10 = v4;
  uint64_t v11 = v5;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  v7(a2, v4, v6);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v2 + 32);
  sub_20A42BEBC(&v9, v2 + 32);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  swift_getObjectType();
  return sub_20A8CA6E0();
}

unint64_t sub_20A6AACA0()
{
  unint64_t result = qword_26763D2A8;
  if (!qword_26763D2A8)
  {
    sub_20A42CFF0(255, &qword_26763D2B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D2A8);
  }
  return result;
}

void sub_20A6AAD08()
{
  swift_getWitnessTable();

  JUMPOUT(0x210523C60);
}

uint64_t type metadata accessor for ForYouFeedBlueprintViewCellProvider()
{
  return self;
}

uint64_t sub_20A6AAD80()
{
  return sub_20A6AADC8((unint64_t *)&unk_26AC72B40, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
}

uint64_t sub_20A6AADC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6AAE10()
{
  return sub_20A6AADC8((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
}

uint64_t sub_20A6AAE58()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A6AAE94(uint64_t a1)
{
  sub_20A44D7C8(0);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v5 = *(void *)(*(void *)(v3 - 8) + 64);
  uint64_t v6 = *(void *)(sub_20A8C2B70() - 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_20A6AA7F0(a1, v7, v1 + v4, v8);
}

uint64_t sub_20A6AAF6C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_20A6AAFA8()
{
  sub_20A44D7C8(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = *(void *)(sub_20A8C2B70() - 8);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_20A6AAA04(v5, v0 + v2, v6);
}

uint64_t Assembly.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  Assembly.init()();
  return v0;
}

uint64_t Assembly.init()()
{
  sub_20A6ABD90();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_20A8E95E0;
  uint64_t v2 = type metadata accessor for AdsAssembly();
  uint64_t v3 = swift_allocObject();
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = sub_20A6ABEA0(&qword_26AC6CB08, (void (*)(uint64_t))type metadata accessor for AdsAssembly);
  *(void *)(v1 + 32) = v3;
  uint64_t v4 = type metadata accessor for PPTAssembly();
  uint64_t v5 = swift_allocObject();
  *(void *)(v1 + 96) = v4;
  *(void *)(v1 + 104) = sub_20A6ABEA0(&qword_26AC6CB18, (void (*)(uint64_t))type metadata accessor for PPTAssembly);
  *(void *)(v1 + 72) = v5;
  uint64_t v6 = type metadata accessor for RendererAssembly();
  uint64_t v7 = swift_allocObject();
  *(void *)(v1 + 136) = v6;
  *(void *)(v1 + 144) = sub_20A6ABEA0(qword_26AC6F0E8, (void (*)(uint64_t))type metadata accessor for RendererAssembly);
  *(void *)(v1 + 112) = v7;
  uint64_t v8 = type metadata accessor for StylerAssembly();
  uint64_t v9 = swift_allocObject();
  *(void *)(v1 + 176) = v8;
  *(void *)(v1 + 184) = sub_20A6ABEA0(&qword_26AC6DAF0, (void (*)(uint64_t))type metadata accessor for StylerAssembly);
  *(void *)(v1 + 152) = v9;
  uint64_t v10 = type metadata accessor for FactoryAssembly();
  uint64_t v11 = swift_allocObject();
  *(void *)(v1 + 216) = v10;
  *(void *)(v1 + 224) = sub_20A6ABEA0(&qword_26AC6DF98, (void (*)(uint64_t))type metadata accessor for FactoryAssembly);
  *(void *)(v1 + 192) = v11;
  uint64_t v12 = type metadata accessor for ManagerAssembly();
  uint64_t v13 = swift_allocObject();
  *(void *)(v1 + 256) = v12;
  *(void *)(v1 + 264) = sub_20A6ABEA0(&qword_26AC6E258, (void (*)(uint64_t))type metadata accessor for ManagerAssembly);
  *(void *)(v1 + 232) = v13;
  uint64_t v14 = type metadata accessor for ProviderAssembly();
  uint64_t v15 = swift_allocObject();
  *(void *)(v1 + 296) = v14;
  *(void *)(v1 + 304) = sub_20A6ABEA0(&qword_26AC6F0B8, (void (*)(uint64_t))type metadata accessor for ProviderAssembly);
  *(void *)(v1 + 272) = v15;
  uint64_t v16 = type metadata accessor for ShortcutItemHandlerAssembly();
  uint64_t v17 = swift_allocObject();
  *(void *)(v1 + 336) = v16;
  *(void *)(v1 + 344) = sub_20A6ABEA0(&qword_26AC77868, (void (*)(uint64_t))type metadata accessor for ShortcutItemHandlerAssembly);
  *(void *)(v1 + 312) = v17;
  uint64_t v18 = type metadata accessor for URLHandlerAssembly();
  uint64_t v19 = swift_allocObject();
  *(void *)(v1 + 376) = v18;
  *(void *)(v1 + 384) = sub_20A6ABEA0(&qword_26AC70B70, (void (*)(uint64_t))type metadata accessor for URLHandlerAssembly);
  *(void *)(v1 + 352) = v19;
  uint64_t v20 = type metadata accessor for UserActivityHandlerAssembly();
  uint64_t v21 = swift_allocObject();
  *(void *)(v1 + 416) = v20;
  *(void *)(v1 + 424) = sub_20A6ABEA0(&qword_26AC780D8, (void (*)(uint64_t))type metadata accessor for UserActivityHandlerAssembly);
  *(void *)(v1 + 392) = v21;
  uint64_t v22 = type metadata accessor for ArticleAssembly();
  uint64_t v23 = swift_allocObject();
  *(void *)(v1 + 456) = v22;
  *(void *)(v1 + 464) = sub_20A6ABEA0((unint64_t *)&unk_26AC6DC60, (void (*)(uint64_t))type metadata accessor for ArticleAssembly);
  *(void *)(v1 + 432) = v23;
  uint64_t v24 = type metadata accessor for BootstrapAssembly();
  uint64_t v25 = swift_allocObject();
  *(void *)(v1 + 496) = v24;
  *(void *)(v1 + 504) = sub_20A6ABEA0(&qword_26AC6F6C8, (void (*)(uint64_t))type metadata accessor for BootstrapAssembly);
  *(void *)(v1 + 472) = v25;
  uint64_t v26 = (objc_class *)type metadata accessor for DebugAssembly();
  id v27 = objc_msgSend(objc_allocWithZone(v26), sel_init);
  *(void *)(v1 + 536) = v26;
  *(void *)(v1 + 544) = sub_20A6ABEA0(&qword_26AC6D108, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
  *(void *)(v1 + 512) = v27;
  uint64_t v28 = type metadata accessor for MenuAssembly();
  uint64_t v29 = swift_allocObject();
  *(void *)(v1 + 576) = v28;
  *(void *)(v1 + 584) = sub_20A6ABEA0(&qword_26AC6CD18, (void (*)(uint64_t))type metadata accessor for MenuAssembly);
  *(void *)(v1 + 552) = v29;
  uint64_t v30 = type metadata accessor for ToolbarAssembly();
  uint64_t v31 = swift_allocObject();
  *(void *)(v1 + 616) = v30;
  *(void *)(v1 + 624) = sub_20A6ABEA0(&qword_26AC6EC30, (void (*)(uint64_t))type metadata accessor for ToolbarAssembly);
  *(void *)(v1 + 592) = v31;
  uint64_t v32 = type metadata accessor for SubscriptionsAssembly();
  uint64_t v33 = swift_allocObject();
  *(void *)(v1 + 656) = v32;
  *(void *)(v1 + 664) = sub_20A6ABEA0(&qword_26AC73660, (void (*)(uint64_t))type metadata accessor for SubscriptionsAssembly);
  *(void *)(v1 + 632) = v33;
  uint64_t v34 = type metadata accessor for CommandAssembly();
  uint64_t v35 = swift_allocObject();
  *(void *)(v1 + 696) = v34;
  *(void *)(v1 + 704) = sub_20A6ABEA0(&qword_26AC6DD08, (void (*)(uint64_t))type metadata accessor for CommandAssembly);
  *(void *)(v1 + 672) = v35;
  uint64_t v36 = type metadata accessor for CoordinatorAssembly();
  uint64_t v37 = swift_allocObject();
  *(void *)(v1 + 736) = v36;
  *(void *)(v1 + 744) = sub_20A6ABEA0(&qword_26AC70DF8, (void (*)(uint64_t))type metadata accessor for CoordinatorAssembly);
  *(void *)(v1 + 712) = v37;
  uint64_t v38 = type metadata accessor for ServiceAssembly();
  uint64_t v39 = swift_allocObject();
  *(void *)(v1 + 776) = v38;
  *(void *)(v1 + 784) = sub_20A6ABEA0(&qword_26AC6E308, (void (*)(uint64_t))type metadata accessor for ServiceAssembly);
  *(void *)(v1 + 752) = v39;
  uint64_t v40 = type metadata accessor for MediaAssembly();
  uint64_t v41 = swift_allocObject();
  *(void *)(v1 + 816) = v40;
  *(void *)(v1 + 824) = sub_20A6ABEA0(&qword_26AC6D128, (void (*)(uint64_t))type metadata accessor for MediaAssembly);
  *(void *)(v1 + 792) = v41;
  if (sub_20A454F84())
  {
    uint64_t v42 = type metadata accessor for AudioAssembly();
    uint64_t v43 = swift_allocObject();
    uint64_t v44 = (unint64_t *)&unk_26AC6D068;
    uint64_t v45 = type metadata accessor for AudioAssembly;
  }
  else
  {
    uint64_t v42 = type metadata accessor for NoopAudioAssembly();
    uint64_t v43 = swift_allocObject();
    uint64_t v44 = (unint64_t *)&unk_26AC80B40;
    uint64_t v45 = type metadata accessor for NoopAudioAssembly;
  }
  uint64_t v46 = sub_20A6ABEA0(v44, (void (*)(uint64_t))v45);
  *(void *)(v1 + 856) = v42;
  *(void *)(v1 + 864) = v46;
  *(void *)(v1 + 832) = v43;
  uint64_t v47 = type metadata accessor for ForYouFeedAssembly();
  uint64_t v48 = swift_allocObject();
  *(void *)(v1 + 896) = v47;
  *(void *)(v1 + 904) = sub_20A6ABEA0(&qword_26AC70578, (void (*)(uint64_t))type metadata accessor for ForYouFeedAssembly);
  *(void *)(v1 + 872) = v48;
  uint64_t v49 = type metadata accessor for MainAssembly();
  uint64_t v50 = swift_allocObject();
  *(void *)(v1 + 936) = v49;
  *(void *)(v1 + 944) = sub_20A6ABEA0(&qword_26AC6CC78, (void (*)(uint64_t))type metadata accessor for MainAssembly);
  *(void *)(v1 + 912) = v50;
  uint64_t v51 = type metadata accessor for ManageWatchlistsAssembly();
  uint64_t v52 = swift_allocObject();
  *(void *)(v1 + 976) = v51;
  *(void *)(v1 + 984) = sub_20A6ABEA0(&qword_26AC75AA0, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsAssembly);
  *(void *)(v1 + 952) = v52;
  uint64_t v53 = type metadata accessor for OnboardingAssembly();
  uint64_t v54 = swift_allocObject();
  *(void *)(v1 + 1016) = v53;
  *(void *)(v1 + 1024) = sub_20A6ABEA0(&qword_26AC70780, (void (*)(uint64_t))type metadata accessor for OnboardingAssembly);
  *(void *)(v1 + 992) = v54;
  uint64_t v55 = type metadata accessor for TickerAssembly();
  uint64_t v56 = swift_allocObject();
  *(void *)(v1 + 1056) = v55;
  *(void *)(v1 + 1064) = sub_20A6ABEA0(&qword_26AC6DB90, (void (*)(uint64_t))type metadata accessor for TickerAssembly);
  *(void *)(v1 + 1032) = v56;
  uint64_t v57 = type metadata accessor for StockFeedAssembly();
  uint64_t v58 = swift_allocObject();
  *(void *)(v1 + 1096) = v57;
  *(void *)(v1 + 1104) = sub_20A6ABEA0(&qword_26AC6FA10, (void (*)(uint64_t))type metadata accessor for StockFeedAssembly);
  *(void *)(v1 + 1072) = v58;
  uint64_t v59 = type metadata accessor for StockFeedViewerAssembly();
  uint64_t v60 = swift_allocObject();
  *(void *)(v1 + 1136) = v59;
  *(void *)(v1 + 1144) = sub_20A6ABEA0(&qword_26AC751D8, (void (*)(uint64_t))type metadata accessor for StockFeedViewerAssembly);
  *(void *)(v1 + 1112) = v60;
  uint64_t v61 = type metadata accessor for StockListAssembly();
  uint64_t v62 = swift_allocObject();
  *(void *)(v1 + 1176) = v61;
  *(void *)(v1 + 1184) = sub_20A6ABEA0(&qword_26AC6FAB8, (void (*)(uint64_t))type metadata accessor for StockListAssembly);
  *(void *)(v1 + 1152) = v62;
  uint64_t v63 = type metadata accessor for StockChartAssembly();
  uint64_t v64 = swift_allocObject();
  *(void *)(v1 + 1216) = v63;
  *(void *)(v1 + 1224) = sub_20A6ABEA0(&qword_26AC70820, (void (*)(uint64_t))type metadata accessor for StockChartAssembly);
  *(void *)(v1 + 1192) = v64;
  uint64_t v65 = type metadata accessor for StockSearchAssembly();
  uint64_t v66 = swift_allocObject();
  *(void *)(v1 + 1256) = v65;
  *(void *)(v1 + 1264) = sub_20A6ABEA0(&qword_26AC71490, (void (*)(uint64_t))type metadata accessor for StockSearchAssembly);
  *(void *)(v1 + 1232) = v66;
  uint64_t v67 = type metadata accessor for WelcomeAssembly();
  uint64_t v68 = swift_allocObject();
  *(void *)(v1 + 1296) = v67;
  *(void *)(v1 + 1304) = sub_20A6ABEA0(&qword_26AC6ECD0, (void (*)(uint64_t))type metadata accessor for WelcomeAssembly);
  *(void *)(v1 + 1272) = v68;
  uint64_t v69 = type metadata accessor for TipsAssembly();
  uint64_t v70 = swift_allocObject();
  *(void *)(v1 + 1336) = v69;
  *(void *)(v1 + 1344) = sub_20A6ABEA0(&qword_26AC6CEE8, (void (*)(uint64_t))type metadata accessor for TipsAssembly);
  *(void *)(v1 + 1312) = v70;
  uint64_t v71 = type metadata accessor for EngagementAssembly();
  uint64_t v72 = swift_allocObject();
  *(void *)(v1 + 1376) = v71;
  *(void *)(v1 + 1384) = sub_20A6ABEA0((unint64_t *)&unk_26AC704D0, (void (*)(uint64_t))type metadata accessor for EngagementAssembly);
  *(void *)(v1 + 1352) = v72;
  *(void *)(v0 + 16) = v1;
  return v0;
}

void sub_20A6ABD90()
{
  if (!qword_26AC686F8)
  {
    sub_20A6ABDE8();
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC686F8);
    }
  }
}

unint64_t sub_20A6ABDE8()
{
  unint64_t result = qword_26AC676A8;
  if (!qword_26AC676A8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC676A8);
  }
  return result;
}

uint64_t Assembly.assemblies.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Assembly.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Assembly.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_20A6ABEA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for Assembly()
{
  return self;
}

uint64_t method lookup function for Assembly(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Assembly);
}

uint64_t dispatch thunk of Assembly.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_20A6ABF38(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v67 = a3;
  uint64_t v63 = a2;
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v71 = *(void *)(v4 - 8);
  uint64_t v72 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v70 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for StockFeedServiceContext();
  MEMORY[0x270FA5388](v69);
  uint64_t v75 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_20A8CC920();
  uint64_t v64 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v74 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_20A8C3190();
  uint64_t v8 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for StockFeedServiceConfig();
  MEMORY[0x270FA5388](v65);
  uint64_t v62 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v68 = (uint64_t)&v57 - v13;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A6AE420(0, qword_26AC721D8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedKnobsConfig, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v57 - v16;
  sub_20A6AE420(0, qword_26AC6E478, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedConfig, v14);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (uint64_t *)((char *)&v57 - v19);
  uint64_t v21 = type metadata accessor for StockFeedContentConfig();
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v57 - v25;
  uint64_t v61 = *a1;
  sub_20A6AE420(0, &qword_26AC82740, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedGroupConfig, MEMORY[0x263F8E0F8]);
  uint64_t v27 = *(void *)(type metadata accessor for StockFeedGroupConfig() - 8);
  unint64_t v28 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_20A8D3DC0;
  if (qword_26AC824B8 != -1) {
    swift_once();
  }
  unint64_t v30 = v29 + v28;
  sub_20A4333C4();
  uint64_t v32 = v31;
  uint64_t v33 = __swift_project_value_buffer(v31, (uint64_t)qword_26AC9ED08);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v33, v32);
  uint64_t v34 = type metadata accessor for StockFeedConfig();
  uint64_t v35 = (char *)v20 + *(int *)(v34 + 20);
  sub_20A8C27F0();
  uint64_t v36 = sub_20A8C2800();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
  *uint64_t v20 = v29;
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v20, 0, 1, v34);
  uint64_t v37 = type metadata accessor for StockFeedKnobsConfig();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v17, 1, 1, v37);
  uint64_t v38 = (uint64_t)v26;
  uint64_t v60 = v26;
  sub_20A52FB50((uint64_t)v20, (uint64_t)v17, (uint64_t)v26);
  uint64_t v59 = v8;
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v40 = v73;
  v39(v10, v63 + OBJC_IVAR____TtC8StocksUI29StockFeedServiceConfigFetcher_appConfiguration, v73);
  uint64_t v41 = v64;
  uint64_t v42 = v66;
  (*(void (**)(char *, void, uint64_t))(v64 + 104))(v74, *MEMORY[0x263F59888], v66);
  uint64_t v58 = v23;
  sub_20A6ADD80(v38, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for StockFeedContentConfig);
  sub_20A6ADD80(v67, v75, (uint64_t (*)(void))type metadata accessor for StockFeedServiceContext);
  uint64_t v43 = (uint64_t)v62;
  v39(v62, (uint64_t)v10, v40);
  uint64_t v44 = (int *)v65;
  uint64_t v45 = v74;
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 16))(v43 + *(int *)(v65 + 20), v74, v42);
  uint64_t v46 = (uint64_t)v58;
  sub_20A6ADD80((uint64_t)v58, v43 + v44[6], (uint64_t (*)(void))type metadata accessor for StockFeedContentConfig);
  uint64_t v47 = v75;
  sub_20A6ADD80(v75, v43 + v44[7], (uint64_t (*)(void))type metadata accessor for StockFeedServiceContext);
  uint64_t v48 = v61;
  *(void *)(v43 + v44[8]) = v61;
  id v49 = v48;
  sub_20A8C3150();
  uint64_t v51 = v50;
  sub_20A4994D4(v46, (uint64_t (*)(void))type metadata accessor for StockFeedContentConfig);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v45, v42);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v10, v73);
  *(void *)(v43 + v44[9]) = v51;
  uint64_t v52 = v70;
  uint64_t v54 = v71;
  uint64_t v53 = v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v70, v47 + *(int *)(v69 + 20), v72);
  sub_20A4994D4(v47, (uint64_t (*)(void))type metadata accessor for StockFeedServiceContext);
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v43 + v44[10], v52, v53);
  sub_20A6ADFF8(v43, v68, (uint64_t (*)(void))type metadata accessor for StockFeedServiceConfig);
  sub_20A6AE420(0, &qword_26AC69890, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, MEMORY[0x263F7D028]);
  swift_allocObject();
  uint64_t v55 = sub_20A8C6580();
  sub_20A4994D4((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for StockFeedContentConfig);
  return v55;
}

uint64_t sub_20A6AC7BC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI29StockFeedServiceConfigFetcher_appConfiguration;
  uint64_t v2 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI29StockFeedServiceConfigFetcher_paidBundleConfigManager);

  return swift_deallocClassInstance();
}

uint64_t sub_20A6AC87C()
{
  return type metadata accessor for StockFeedServiceConfigFetcher(0);
}

uint64_t type metadata accessor for StockFeedServiceConfigFetcher(uint64_t a1)
{
  return sub_20A4D9778(a1, (uint64_t *)&unk_26AC81BE8);
}

uint64_t sub_20A6AC8A4()
{
  uint64_t result = sub_20A8C3190();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_20A6AC948(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockFeedServiceContext();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  sub_20A6ADCC0();
  sub_20A8C6670();
  sub_20A6ADD80(a1, (uint64_t)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StockFeedServiceContext);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_20A6ADFF8((uint64_t)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, (uint64_t (*)(void))type metadata accessor for StockFeedServiceContext);
  uint64_t v7 = (void *)sub_20A8C6450();
  type metadata accessor for StockFeedServiceConfig();
  uint64_t v8 = sub_20A8C6510();
  swift_release();
  swift_release();

  return v8;
}

uint64_t sub_20A6ACAE8(uint64_t a1, void *a2, void *a3)
{
  id v5 = objc_msgSend(*(id *)(a1 + *a2), sel_appConfiguration);
  if (objc_msgSend(v5, sel_respondsToSelector_, sel_paidBundleConfig))
  {
    objc_msgSend(v5, sel_paidBundleConfig);
    swift_unknownObjectRelease();
    sub_20A6AE420(0, (unint64_t *)&qword_26AC698D0, (uint64_t (*)(uint64_t))sub_20A6ADCC0, MEMORY[0x263F7D028]);
    swift_allocObject();
    return sub_20A8C6580();
  }
  else
  {
    swift_unknownObjectRelease();
    __swift_project_boxed_opaque_existential_1((void *)(a1 + *a3), *(void *)(a1 + *a3 + 24));
    return sub_20A8CD970();
  }
}

uint64_t sub_20A6ACC00(void **a1)
{
  unint64_t v1 = *a1;
  sub_20A8C6670();
  uint64_t v2 = (void *)sub_20A8C6450();
  type metadata accessor for StockFeedContentConfig();
  sub_20A8C64F0();
  swift_release();

  *(void *)(swift_allocObject() + 16) = v1;
  id v3 = v1;
  uint64_t v4 = (void *)sub_20A8C6450();
  sub_20A6ADE14();
  uint64_t v5 = sub_20A8C6500();
  swift_release();
  swift_release();

  return v5;
}

uint64_t sub_20A6ACD14(void **a1, uint64_t a2, void *a3)
{
  id v61 = a3;
  uint64_t v52 = a2;
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v64 = *(void *)(v4 - 8);
  uint64_t v65 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v63 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for StockFeedServiceContext() - 8;
  MEMORY[0x270FA5388](v62);
  uint64_t v59 = (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_20A8CC920();
  uint64_t v66 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v49 = v8;
  uint64_t v9 = sub_20A8C3190();
  uint64_t v54 = *(void *)(v9 - 8);
  uint64_t v10 = v54;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for StockFeedServiceConfig() - 8;
  MEMORY[0x270FA5388](v56);
  uint64_t v55 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v60 = (uint64_t)&v48 - v15;
  sub_20A6ADE14();
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for StockFeedContentConfig();
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = v22;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v48 - v24;
  uint64_t v26 = *(int *)(v17 + 56);
  uint64_t v27 = (uint64_t)&v19[v26];
  uint64_t v53 = *a1;
  uint64_t v50 = type metadata accessor for StockFeedContentConfig;
  sub_20A6ADD80((uint64_t)a1 + v26, v27, (uint64_t (*)(void))type metadata accessor for StockFeedContentConfig);
  uint64_t v28 = v27;
  uint64_t v29 = (uint64_t)v25;
  uint64_t v58 = v25;
  sub_20A6ADFF8(v28, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for StockFeedContentConfig);
  unint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = v9;
  uint64_t v51 = v9;
  v30(v12, v52 + OBJC_IVAR____TtC8StocksUI32NFFStockFeedServiceConfigFetcher_appConfiguration, v9);
  uint64_t v32 = v66;
  uint64_t v33 = v8;
  uint64_t v34 = v57;
  (*(void (**)(char *, void, uint64_t))(v66 + 104))(v33, *MEMORY[0x263F59888], v57);
  sub_20A6ADD80(v29, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StockFeedContentConfig);
  uint64_t v35 = v59;
  sub_20A6ADD80((uint64_t)v61, v59, (uint64_t (*)(void))type metadata accessor for StockFeedServiceContext);
  uint64_t v36 = (uint64_t)v55;
  v30(v55, (uint64_t)v12, v31);
  uint64_t v37 = (int *)v56;
  uint64_t v38 = v49;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v36 + *(int *)(v56 + 28), v49, v34);
  uint64_t v39 = (uint64_t)v48;
  sub_20A6ADD80((uint64_t)v48, v36 + v37[8], (uint64_t (*)(void))v50);
  sub_20A6ADD80(v35, v36 + v37[9], (uint64_t (*)(void))type metadata accessor for StockFeedServiceContext);
  uint64_t v40 = v53;
  *(void *)(v36 + v37[10]) = v53;
  id v61 = v40;
  sub_20A8C3150();
  uint64_t v42 = v41;
  sub_20A4994D4(v39, (uint64_t (*)(void))type metadata accessor for StockFeedContentConfig);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v38, v34);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v12, v51);
  *(void *)(v36 + v37[11]) = v42;
  uint64_t v43 = v63;
  uint64_t v45 = v64;
  uint64_t v44 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v63, v35 + *(int *)(v62 + 28), v65);
  sub_20A4994D4(v35, (uint64_t (*)(void))type metadata accessor for StockFeedServiceContext);
  (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v36 + v37[12], v43, v44);
  sub_20A6ADFF8(v36, v60, (uint64_t (*)(void))type metadata accessor for StockFeedServiceConfig);
  sub_20A6AE420(0, &qword_26AC69890, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, MEMORY[0x263F7D028]);
  swift_allocObject();
  uint64_t v46 = sub_20A8C6580();

  sub_20A4994D4((uint64_t)v58, (uint64_t (*)(void))type metadata accessor for StockFeedContentConfig);
  return v46;
}

uint64_t sub_20A6AD33C(uint64_t a1)
{
  sub_20A6AE420(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - v3;
  uint64_t v5 = sub_20A8C2530();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC67688 != -1) {
    swift_once();
  }
  if (sub_20A8C4200())
  {
    if (qword_267639C00 != -1) {
      swift_once();
    }
    sub_20A6ADC4C(&qword_26763D2C0, (void (*)(uint64_t))type metadata accessor for NFFStockFeedServiceConfigFetcher);
    sub_20A8C41C0();
    sub_20A8C2520();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_20A596854((uint64_t)v4);
      sub_20A6AE120();
      swift_allocError();
      *uint64_t v9 = 1;
      sub_20A661740();
      swift_allocObject();
      return sub_20A8C6570();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      uint64_t v10 = sub_20A6AE174((uint64_t)v8);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    return v10;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), *(void *)(a1 + 40));
    return sub_20A8C3A80();
  }
}

uint64_t sub_20A6AD660()
{
  uint64_t v1 = type metadata accessor for StockFeedContentConfig();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v9 - v5;
  sub_20A8CC6D0();
  swift_allocObject();
  uint64_t v7 = sub_20A8CC6C0();
  sub_20A6ADC4C(&qword_26AC73E80, (void (*)(uint64_t))type metadata accessor for StockFeedContentConfig);
  sub_20A8C5950();
  swift_release();
  if (!v0)
  {
    sub_20A6ADD80((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StockFeedContentConfig);
    sub_20A6AE420(0, &qword_26AC69888, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedContentConfig, MEMORY[0x263F7D028]);
    swift_allocObject();
    uint64_t v7 = sub_20A8C6580();
    sub_20A4994D4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StockFeedContentConfig);
  }
  return v7;
}

uint64_t sub_20A6AD830()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI32NFFStockFeedServiceConfigFetcher_appConfiguration;
  uint64_t v2 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI32NFFStockFeedServiceConfigFetcher_paidBundleConfigManager);

  return swift_deallocClassInstance();
}

uint64_t sub_20A6AD8F8()
{
  return type metadata accessor for NFFStockFeedServiceConfigFetcher(0);
}

uint64_t type metadata accessor for NFFStockFeedServiceConfigFetcher(uint64_t a1)
{
  return sub_20A4D9778(a1, (uint64_t *)&unk_26AC7AF58);
}

uint64_t sub_20A6AD920()
{
  uint64_t result = sub_20A8C3190();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_20A6AD9C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockFeedServiceContext();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  sub_20A6ADCC0();
  sub_20A8C6670();
  uint64_t v5 = (void *)sub_20A8C6450();
  sub_20A6ADE14();
  sub_20A8C6510();
  swift_release();

  sub_20A6ADD80(a1, (uint64_t)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StockFeedServiceContext);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  sub_20A6ADFF8((uint64_t)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (uint64_t (*)(void))type metadata accessor for StockFeedServiceContext);
  uint64_t v8 = (void *)sub_20A8C6450();
  type metadata accessor for StockFeedServiceConfig();
  uint64_t v9 = sub_20A8C6510();
  swift_release();
  swift_release();

  return v9;
}

uint64_t sub_20A6ADBBC()
{
  return sub_20A6ADC4C(&qword_26AC73FD0, (void (*)(uint64_t))type metadata accessor for StockFeedServiceConfig);
}

uint64_t sub_20A6ADC04()
{
  return sub_20A6ADC4C(&qword_26AC75010, (void (*)(uint64_t))type metadata accessor for StockFeedServiceContext);
}

uint64_t sub_20A6ADC4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6ADC94()
{
  return sub_20A6ACAE8(v0, &OBJC_IVAR____TtC8StocksUI29StockFeedServiceConfigFetcher_newsConfigurationManager, &OBJC_IVAR____TtC8StocksUI29StockFeedServiceConfigFetcher_paidBundleConfigManager);
}

unint64_t sub_20A6ADCC0()
{
  unint64_t result = qword_26AC686C0;
  if (!qword_26AC686C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC686C0);
  }
  return result;
}

uint64_t sub_20A6ADD04(void **a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for StockFeedServiceContext() - 8);
  return sub_20A6ABF38(a1, a2, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
}

uint64_t sub_20A6ADD80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A6ADDE8()
{
  return sub_20A6ACAE8(v0, &OBJC_IVAR____TtC8StocksUI32NFFStockFeedServiceConfigFetcher_newsConfigurationManager, &OBJC_IVAR____TtC8StocksUI32NFFStockFeedServiceConfigFetcher_paidBundleConfigManager);
}

void sub_20A6ADE14()
{
  if (!qword_26AC7FAA8)
  {
    sub_20A6ADCC0();
    type metadata accessor for StockFeedContentConfig();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC7FAA8);
    }
  }
}

uint64_t objectdestroyTm_8()
{
  uint64_t v1 = (int *)(type metadata accessor for StockFeedServiceContext() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[7];
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_20A6ADF7C(void **a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for StockFeedServiceContext() - 8);
  return sub_20A6ACD14(a1, a2, (void *)(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))));
}

uint64_t sub_20A6ADFF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A6AE060()
{
  return sub_20A6AD33C(v0);
}

uint64_t sub_20A6AE07C()
{
  return swift_deallocObject();
}

id sub_20A6AE0B4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void **)(v2 + 16);
  sub_20A6ADE14();
  uint64_t v7 = (uint64_t)a2 + *(int *)(v6 + 48);
  *a2 = v5;
  sub_20A6ADD80(a1, v7, (uint64_t (*)(void))type metadata accessor for StockFeedContentConfig);
  return v5;
}

unint64_t sub_20A6AE120()
{
  unint64_t result = qword_26763D2C8;
  if (!qword_26763D2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D2C8);
  }
  return result;
}

uint64_t sub_20A6AE174(uint64_t a1)
{
  uint64_t v2 = sub_20A8C2530();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_20A8C2030();
  uint64_t v6 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC6CF90 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_26AC6CF88;
  sub_20A6AE420(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_20A8D3DC0;
  id v11 = v9;
  uint64_t v12 = sub_20A8C24C0();
  uint64_t v14 = v13;
  *(void *)(v10 + 56) = MEMORY[0x263F8D310];
  *(void *)(v10 + 64) = sub_20A43F830();
  *(void *)(v10 + 32) = v12;
  *(void *)(v10 + 40) = v14;
  sub_20A8CEA00();
  sub_20A8C7D90();

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_20A8C2020();
  id v15 = objc_msgSend(self, sel_sharedSession);
  uint64_t v16 = sub_20A8C6430();

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  return v16;
}

void sub_20A6AE420(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for NFFStockFeedServiceConfigFetcher.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A6AE550);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NFFStockFeedServiceConfigFetcher.Errors()
{
  return &type metadata for NFFStockFeedServiceConfigFetcher.Errors;
}

unint64_t sub_20A6AE58C()
{
  unint64_t result = qword_26763D2D0;
  if (!qword_26763D2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D2D0);
  }
  return result;
}

uint64_t type metadata accessor for ShapeView()
{
  return self;
}

unint64_t sub_20A6AE774()
{
  unint64_t result = qword_26AC7F8A0;
  if (!qword_26AC7F8A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC7F8A0);
  }
  return result;
}

uint64_t type metadata accessor for CreateWatchlistCommandHandler()
{
  return self;
}

uint64_t sub_20A6AE7D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A6AE800(a4);
}

uint64_t sub_20A6AE800(uint64_t a1)
{
  sub_20A556CDC(0);
  MEMORY[0x270FA5388](v2 - 8);
  unsigned int v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A51CD94(a1, (uint64_t)v7);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = sub_20A8C6D60();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  uint64_t v12 = 0;
  memset(v11, 0, sizeof(v11));
  swift_retain();
  sub_20A5BFAAC((uint64_t)v7, 0, (uint64_t)v4, (uint64_t)v13, 0, 0, (uint64_t)v11);
  swift_release();
  sub_20A49127C((uint64_t)v11, &qword_26AC69600, (unint64_t *)&unk_26AC695F0);
  sub_20A49127C((uint64_t)v13, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
  sub_20A592D44((uint64_t)v4, (uint64_t (*)(void))sub_20A556CDC);
  sub_20A592D44((uint64_t)v7, type metadata accessor for StocksActivity);
  return swift_release();
}

uint64_t sub_20A6AE9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A6AEA10);
}

uint64_t sub_20A6AEA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C3410();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_20A6AEAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A6AEAD4);
}

uint64_t sub_20A6AEAD4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_20A8C3410();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ForYouFeedPriceChangeDisplayBlueprintModifier()
{
  uint64_t result = qword_26AC818A8;
  if (!qword_26AC818A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A6AEBC8()
{
  uint64_t result = sub_20A8C3410();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A6AEC60(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  v29[1] = a3;
  unint64_t v30 = a2;
  sub_20A6AFD28(0, &qword_26AC6A430, MEMORY[0x263F7D950]);
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v29 - v5;
  sub_20A495590();
  MEMORY[0x270FA5388](v7 - 8);
  sub_20A6AFD28(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v9 = v8;
  uint64_t v31 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v29 - v10;
  char v40 = 0;
  sub_20A8CBA50();
  uint64_t v35 = v3;
  uint64_t v36 = &v40;
  uint64_t v12 = sub_20A44A648((void (*)(char *))sub_20A6AFE1C, (uint64_t)v34, (uint64_t)v39);
  sub_20A6AFD28(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  uint64_t v14 = v13;
  uint64_t v15 = sub_20A6AFCC8(&qword_26AC69E98);
  uint64_t v16 = sub_20A6AFCC8(&qword_26AC69E90);
  MEMORY[0x21051E250](v12, v14, v15, v16);
  type metadata accessor for ForYouFeedSectionDescriptor();
  type metadata accessor for ForYouFeedModel();
  sub_20A6AFC38(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
  sub_20A6AFC38((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
  sub_20A8CBA40();
  uint64_t v17 = sub_20A4C27BC();
  sub_20A8CCAC0();
  sub_20A8CCAB0();
  type metadata accessor for ForYouFeedServiceConfig();
  sub_20A6AFC38(&qword_26AC74890, (void (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig);
  uint64_t v18 = sub_20A8CCA90();
  swift_release();
  if (v18)
  {
    *((void *)&v38 + 1) = sub_20A8CC520();
    *(void *)&long long v37 = v18;
  }
  else
  {
    long long v37 = 0u;
    long long v38 = 0u;
  }
  sub_20A8CBB10();
  sub_20A55E55C(v17);
  uint64_t v19 = v31;
  if (v40 == 1)
  {
    sub_20A4957B0();
    uint64_t v21 = &v6[*(int *)(v20 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v6, v11, v9);
    uint64_t v22 = *MEMORY[0x263F7D528];
    uint64_t v23 = sub_20A8C8B80();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v21, v22, v23);
    uint64_t v24 = (unsigned int *)MEMORY[0x263F7D938];
  }
  else
  {
    uint64_t v24 = (unsigned int *)MEMORY[0x263F7D948];
  }
  uint64_t v25 = v30;
  uint64_t v27 = v32;
  uint64_t v26 = v33;
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v6, *v24, v33);
  v25(v6);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v11, v9);
}

uint64_t sub_20A6AF130@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void (*a3)(char *)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v85 = a3;
  uint64_t v90 = a2;
  uint64_t v98 = a4;
  uint64_t v5 = sub_20A8C4030();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v88 = (char *)v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v89 = (uint64_t)v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6AFE3C(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v93 = (uint64_t)v74 - v10;
  sub_20A6AFE3C(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v86 = (uint64_t)v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v92 = (uint64_t)v74 - v14;
  uint64_t v15 = sub_20A8C3410();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v94 = v15;
  uint64_t v95 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v91 = (char *)v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6AFE3C(0, &qword_26AC6AF30, MEMORY[0x263F59740]);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v96 = (uint64_t)v74 - v19;
  uint64_t v97 = type metadata accessor for StockViewModel();
  MEMORY[0x270FA5388](v97);
  double v87 = (char *)v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)v74 - v22;
  uint64_t v24 = sub_20A8C3F00();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  unint64_t v30 = (char *)v74 - v29;
  uint64_t v31 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x270FA5388](v31);
  uint64_t v84 = (char *)v74 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)v74 - v34;
  sub_20A6AFD28(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  uint64_t v37 = v36;
  uint64_t v99 = a1;
  sub_20A8C8820();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A61E760();
      uint64_t v40 = (uint64_t)&v35[*(int *)(v39 + 48)];
      uint64_t v77 = v39;
      uint64_t v79 = &v35[*(int *)(v39 + 64)];
      uint64_t v80 = v30;
      uint64_t v82 = v25;
      uint64_t v83 = v24;
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v30, v35, v24);
      sub_20A494EC0(v40, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      sub_20A546894((uint64_t)v79, v96);
      uint64_t v81 = v23;
      uint64_t v41 = type metadata accessor for ForYouFeedPriceChangeDisplayBlueprintModifier();
      uint64_t v42 = v91;
      uint64_t v43 = v95;
      uint64_t v45 = v95 + 16;
      uint64_t v44 = *(char **)(v95 + 16);
      double v76 = (void (*)(uint64_t))&v90[*(int *)(v41 + 20)];
      uint64_t v46 = v94;
      uint64_t v90 = v44;
      ((void (*)(char *))v44)(v91);
      sub_20A6AFC38(&qword_26AC68E08, MEMORY[0x263F7AB98]);
      LOBYTE(v40) = sub_20A8CE210();
      id v49 = *(void (**)(char *, uint64_t))(v43 + 8);
      uint64_t v48 = v43 + 8;
      uint64_t v47 = v49;
      v49(v42, v46);
      if (v40)
      {
        sub_20A6AFEFC(v96, &qword_26AC6AF30, MEMORY[0x263F59740]);
        sub_20A6AFF58((uint64_t)v81, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        (*(void (**)(char *, uint64_t))(v82 + 8))(v80, v83);
        goto LABEL_6;
      }
      *(unsigned char *)uint64_t v85 = 1;
      uint64_t v50 = v82 + 16;
      uint64_t v85 = *(void (**)(char *))(v82 + 16);
      uint64_t v79 = (char *)v45;
      uint64_t v51 = (uint64_t)v81;
      v85(v27);
      v74[1] = v50;
      uint64_t v75 = v47;
      uint64_t v52 = v51 + *(int *)(v97 + 20);
      uint64_t v78 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
      uint64_t v95 = v48;
      uint64_t v53 = v92;
      sub_20A6AFE90(v52, v92, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      uint64_t v54 = type metadata accessor for StockSparklineViewModel(0);
      uint64_t v55 = v93;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v93, 1, 1, v54);
      ((void (*)(char *, void (*)(uint64_t), uint64_t))v90)(v42, v76, v46);
      uint64_t v56 = (uint64_t)v87;
      ((void (*)(char *, char *, uint64_t))v85)(v87, v27, v83);
      uint64_t v57 = (int *)v97;
      uint64_t v58 = v53;
      uint64_t v59 = v53;
      uint64_t v60 = v78;
      sub_20A6AFE90(v59, v56 + *(int *)(v97 + 20), &qword_26AC68FB0, v78);
      uint64_t v61 = v56 + v57[6];
      double v76 = (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel;
      sub_20A6AFE90(v55, v61, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
      uint64_t v62 = v94;
      ((void (*)(uint64_t, char *, uint64_t))v90)(v56 + v57[8], v42, v94);
      *(unsigned char *)(v56 + v57[9]) = 0;
      uint64_t v63 = v42;
      uint64_t v64 = v86;
      sub_20A6AFE90(v58, v86, &qword_26AC68FB0, v60);
      uint64_t v65 = v88;
      sub_20A8C3E70();
      uint64_t v66 = v89;
      sub_20A5EC850(v64, v65, 9666786, 0xA300000000000000, v89);
      v75(v63, v62);
      sub_20A6AFEFC(v93, &qword_26AC754A0, v76);
      sub_20A6AFEFC(v92, &qword_26AC68FB0, v78);
      uint64_t v67 = v83;
      uint64_t v95 = *(void *)(v82 + 8);
      ((void (*)(char *, uint64_t))v95)(v27, v83);
      sub_20A494EC0(v66, v56 + *(int *)(v97 + 28), (uint64_t (*)(void))type metadata accessor for PriceViewModel);
      uint64_t v68 = (uint64_t)v84;
      uint64_t v69 = (uint64_t)&v84[*(int *)(v77 + 48)];
      uint64_t v70 = (uint64_t)&v84[*(int *)(v77 + 64)];
      uint64_t v71 = v80;
      ((void (*)(char *, char *, uint64_t))v85)(v84, v80, v67);
      sub_20A4A2540(v56, v69);
      uint64_t v72 = (void (*)(uint64_t))MEMORY[0x263F59740];
      uint64_t v73 = v96;
      sub_20A6AFE90(v96, v70, &qword_26AC6AF30, MEMORY[0x263F59740]);
      swift_storeEnumTagMultiPayload();
      sub_20A8C8850();
      sub_20A6AFF58(v68, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
      sub_20A6AFF58(v56, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      sub_20A6AFEFC(v73, &qword_26AC6AF30, v72);
      sub_20A6AFF58((uint64_t)v81, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v95)(v71, v83);
      break;
    case 2u:
    case 3u:
      sub_20A6AFF58((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
      goto LABEL_6;
    case 4u:
    case 5u:
LABEL_6:
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v98, v99, v37);
      break;
    default:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v98, v99, v37);
      uint64_t result = sub_20A6AFEFC((uint64_t)v35, &qword_26AC6AF30, MEMORY[0x263F59740]);
      break;
  }
  return result;
}

uint64_t sub_20A6AFBA8()
{
  return sub_20A6AFC38(qword_26AC82258, (void (*)(uint64_t))type metadata accessor for ForYouFeedPriceChangeDisplayBlueprintModifier);
}

uint64_t sub_20A6AFBF0()
{
  return sub_20A6AFC38(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
}

uint64_t sub_20A6AFC38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6AFC80()
{
  return sub_20A6AFC38((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
}

uint64_t sub_20A6AFCC8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A6AFD28(255, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A6AFD28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for ForYouFeedSectionDescriptor();
    v8[1] = type metadata accessor for ForYouFeedModel();
    v8[2] = sub_20A6AFC38(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
    v8[3] = sub_20A6AFC38((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A6AFE1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A6AF130(a1, *(char **)(v2 + 16), *(void (**)(char *))(v2 + 24), a2);
}

void sub_20A6AFE3C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A6AFE90(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A6AFE3C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A6AFEFC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A6AFE3C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A6AFF58(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for StockSearchSectionHeaderViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 24);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for StockSearchSectionHeaderViewModel(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  if (v5)
  {
    a1[2] = a2[2];
    a1[3] = v5;
    uint64_t v6 = a2[5];
    a1[4] = a2[4];
    a1[5] = v6;
    a1[6] = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v7;
    a1[6] = a2[6];
  }
  return a1;
}

void *assignWithCopy for StockSearchSectionHeaderViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 2;
  uint64_t v5 = a2 + 2;
  uint64_t v6 = a2[3];
  if (a1[3])
  {
    if (v6)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A5A2B90((uint64_t)(a1 + 2));
      uint64_t v7 = a2[6];
      long long v8 = *((_OWORD *)a2 + 2);
      *uint64_t v4 = *v5;
      *((_OWORD *)a1 + 2) = v8;
      a1[6] = v7;
    }
  }
  else if (v6)
  {
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *v5;
    long long v10 = *((_OWORD *)a2 + 2);
    a1[6] = a2[6];
    *uint64_t v4 = v9;
    *((_OWORD *)a1 + 2) = v10;
  }
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StockSearchSectionHeaderViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 24)) {
    goto LABEL_5;
  }
  uint64_t v5 = *(void *)(a2 + 24);
  if (!v5)
  {
    sub_20A5A2B90(a1 + 16);
LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v7;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    return a1;
  }
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StockSearchSectionHeaderViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockSearchSectionHeaderViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockSearchSectionHeaderViewModel()
{
  return &type metadata for StockSearchSectionHeaderViewModel;
}

uint64_t sub_20A6B033C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for EngagementUpsellBannerPropertiesProvider();
  uint64_t v3 = swift_allocObject();
  a1[3] = v2;
  uint64_t result = sub_20A6B1838(&qword_26AC7E1F8, (void (*)(uint64_t))type metadata accessor for EngagementUpsellBannerPropertiesProvider);
  a1[4] = result;
  *a1 = v3;
  return result;
}

uint64_t sub_20A6B03C0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for EngagementFeatureSettings();
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + 16) = 0x10000;
  uint64_t result = sub_20A6B1838(&qword_26AC76260, (void (*)(uint64_t))type metadata accessor for EngagementFeatureSettings);
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_20A6B0438@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E90);
  uint64_t result = sub_20A8C5BB0();
  if (v37)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, (unint64_t *)&unk_26AC77320);
    uint64_t result = sub_20A8C5BB0();
    uint64_t v5 = v35;
    if (v35)
    {
      sub_20A6B17CC();
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_20A8D7080;
      uint64_t v7 = type metadata accessor for AppSessionEndEventTranslator();
      uint64_t v8 = swift_allocObject();
      *(void *)(v6 + 56) = v7;
      *(void *)(v6 + 64) = &off_26BE64928;
      *(void *)(v6 + 32) = v8;
      uint64_t started = type metadata accessor for AppSessionStartEventTranslator();
      uint64_t v10 = swift_allocObject();
      *(void *)(v6 + 96) = started;
      *(void *)(v6 + 104) = &off_26BE64170;
      *(void *)(v6 + 72) = v10;
      uint64_t v11 = type metadata accessor for ArticleEngagementEventTranslator();
      uint64_t v12 = swift_allocObject();
      *(void *)(v6 + 136) = v11;
      *(void *)(v6 + 144) = &off_26BE686D0;
      *(void *)(v6 + 112) = v12;
      uint64_t v13 = type metadata accessor for FeedViewEventTranslator();
      uint64_t v14 = swift_allocObject();
      *(void *)(v6 + 176) = v13;
      *(void *)(v6 + 184) = &off_26BE63E58;
      *(void *)(v6 + 152) = v14;
      uint64_t v15 = type metadata accessor for WatchSymbolEventTranslator();
      uint64_t v16 = swift_allocObject();
      *(void *)(v6 + 216) = v15;
      *(void *)(v6 + 224) = &off_26BE6BDD0;
      *(void *)(v6 + 192) = v16;
      uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v5);
      double v18 = MEMORY[0x270FA5388](v17);
      uint64_t v20 = (void *)((char *)&v31[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v21 + 16))(v20, v18);
      uint64_t v22 = *v20;
      uint64_t v32 = type metadata accessor for AppReviewRequestManager();
      uint64_t v33 = &off_26BE734E0;
      v31[0] = v22;
      uint64_t v23 = (char *)objc_allocWithZone((Class)type metadata accessor for StocksEngagementEventProcessor());
      uint64_t v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
      double v25 = MEMORY[0x270FA5388](v24);
      uint64_t v27 = (void *)((char *)&v31[-1] - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v28 + 16))(v27, v25);
      id v29 = sub_20A6B0C5C((uint64_t)v36, *v27, v6, v23);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      uint64_t result = sub_20A6B1838(&qword_26AC6C288, (void (*)(uint64_t))type metadata accessor for StocksEngagementEventProcessor);
      *a2 = v29;
      a2[1] = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A6B07CC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC68DC0);
  uint64_t result = sub_20A8C5BB0();
  if (!v32)
  {
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E90);
  uint64_t result = sub_20A8C5BB0();
  if (!v30)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC67650);
  uint64_t result = sub_20A8C5BB0();
  if (!v28)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A6B11D0();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v5 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC75F78);
  uint64_t result = sub_20A8C5BB0();
  if (!v26)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
    double v8 = MEMORY[0x270FA5388](v7);
    uint64_t v10 = (void *)((char *)&v22[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v11 + 16))(v10, v8);
    uint64_t v12 = *v10;
    uint64_t v23 = type metadata accessor for AppReviewRequestStore();
    uint64_t v24 = &off_26BE62F30;
    v22[0] = v12;
    uint64_t v13 = (objc_class *)type metadata accessor for AppReviewRequestManager();
    uint64_t v14 = (char *)objc_allocWithZone(v13);
    uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
    double v16 = MEMORY[0x270FA5388](v15);
    double v18 = (void *)((char *)&v22[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
    id v20 = sub_20A6B1228((uint64_t)v31, (uint64_t)v29, (uint64_t)v27, v5, *v18, v6, v14);
    swift_unknownObjectRelease();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    a2[3] = v13;
    a2[4] = &off_26BE734E0;
    *a2 = v20;
    return result;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_20A6B0B8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AppReviewRequestStore();
  uint64_t v3 = swift_allocObject();
  sub_20A6B1670(0, (unint64_t *)&unk_26AC69810, qword_26AC726D8, (uint64_t)&type metadata for AppReviewRequestState);
  swift_allocObject();
  uint64_t result = sub_20A8C6460();
  *(void *)(v3 + 16) = result;
  a1[3] = v2;
  a1[4] = (uint64_t)&off_26BE62F30;
  *a1 = v3;
  return result;
}

uint64_t type metadata accessor for EngagementAssembly()
{
  return self;
}

id sub_20A6B0C5C(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v9 = sub_20A8C5930();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (uint64_t *)((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18[3] = type metadata accessor for AppReviewRequestManager();
  v18[4] = &off_26BE734E0;
  v18[0] = a2;
  sub_20A4342F4(a1, (uint64_t)&a4[OBJC_IVAR____TtC8StocksUI30StocksEngagementEventProcessor_featureAvailability]);
  sub_20A4342F4((uint64_t)v18, (uint64_t)&a4[OBJC_IVAR____TtC8StocksUI30StocksEngagementEventProcessor_appReviewRequestManager]);
  *(void *)&a4[OBJC_IVAR____TtC8StocksUI30StocksEngagementEventProcessor_eventTranslators] = a3;
  sub_20A8C5970();
  swift_allocObject();
  uint64_t v13 = a4;
  *(void *)&v13[OBJC_IVAR____TtC8StocksUI30StocksEngagementEventProcessor_jsonDecoder] = sub_20A8C5960();
  *uint64_t v12 = sub_20A686B34;
  v12[1] = 0;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F7CD08], v9);
  sub_20A8C5940();

  v17.receiver = v13;
  v17.super_class = ObjectType;
  id v14 = objc_msgSendSuper2(&v17, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v14;
}

uint64_t sub_20A6B0E20()
{
  uint64_t v0 = sub_20A8C6410();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C5CC0();
  sub_20A4301D4(0, (unint64_t *)&unk_26AC698F8);
  sub_20A8C62A0();
  swift_release();
  uint64_t v4 = *MEMORY[0x263F7D010];
  uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, v4, v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC698F0);
  sub_20A8C62A0();
  swift_release();
  v5(v3, v4, v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC69908);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, (unint64_t *)&unk_26AC77320);
  sub_20A8C62A0();
  swift_release();
  v5(v3, v4, v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_20A8C5CD0();
  sub_20A4301D4(0, &qword_26AC75F78);
  sub_20A8C62A0();
  swift_release();
  v5(v3, v4, v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v6)(v3, v0);
}

unint64_t sub_20A6B11D0()
{
  unint64_t result = qword_26AC7F8D8;
  if (!qword_26AC7F8D8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC7F8D8);
  }
  return result;
}

id sub_20A6B1228(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char *a7)
{
  uint64_t v35 = a4;
  uint64_t v36 = a6;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v32 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v9 = sub_20A8C2800();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v32 - v14;
  v40[3] = type metadata accessor for AppReviewRequestStore();
  v40[4] = &off_26BE62F30;
  v40[0] = a5;
  uint64_t v16 = OBJC_IVAR____TtC8StocksUI23AppReviewRequestManager__started;
  char v39 = 0;
  uint64_t v17 = MEMORY[0x263F8D4F8];
  sub_20A6B16DC(0, &qword_26AC69820, MEMORY[0x263F8D4F8], MEMORY[0x263F7D018]);
  swift_allocObject();
  double v18 = a7;
  *(void *)&a7[v16] = sub_20A8C6460();
  uint64_t v19 = OBJC_IVAR____TtC8StocksUI23AppReviewRequestManager__didEngageWithArticle;
  char v39 = 0;
  swift_allocObject();
  *(void *)&v18[v19] = sub_20A8C6460();
  uint64_t v20 = OBJC_IVAR____TtC8StocksUI23AppReviewRequestManager___userIsAuthenticatedToAppStore;
  char v39 = 2;
  sub_20A6B1670(0, &qword_26AC69828, (unint64_t *)&unk_26AC7F840, v17);
  swift_allocObject();
  *(void *)&v18[v20] = sub_20A8C6460();
  uint64_t v21 = OBJC_IVAR____TtC8StocksUI23AppReviewRequestManager__appReviewRequestLastSeenDate;
  sub_20A8C2700();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
  sub_20A6B1728(0, &qword_26AC69808, MEMORY[0x263F07490], MEMORY[0x263F7D018]);
  swift_allocObject();
  uint64_t v22 = sub_20A8C6460();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  *(void *)&v18[v21] = v22;
  uint64_t v23 = &v18[OBJC_IVAR____TtC8StocksUI23AppReviewRequestManager____lazy_storage___appReviewPromptConfig];
  sub_20A6B1728(0, (unint64_t *)&unk_26AC68F10, MEMORY[0x263F7AE18], MEMORY[0x263F8D8F0]);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  uint64_t v25 = v32;
  sub_20A4342F4(v32, (uint64_t)&v18[OBJC_IVAR____TtC8StocksUI23AppReviewRequestManager_userInfo]);
  uint64_t v26 = v33;
  sub_20A4342F4(v33, (uint64_t)&v18[OBJC_IVAR____TtC8StocksUI23AppReviewRequestManager_featureAvailability]);
  uint64_t v27 = v34;
  sub_20A4342F4(v34, (uint64_t)&v18[OBJC_IVAR____TtC8StocksUI23AppReviewRequestManager_appConfigurationManager]);
  uint64_t v28 = v35;
  *(void *)&v18[OBJC_IVAR____TtC8StocksUI23AppReviewRequestManager_appleAccount] = v35;
  sub_20A4342F4((uint64_t)v40, (uint64_t)&v18[OBJC_IVAR____TtC8StocksUI23AppReviewRequestManager_store]);
  *(void *)&v18[OBJC_IVAR____TtC8StocksUI23AppReviewRequestManager_tracker] = v36;
  swift_unknownObjectRetain();
  swift_retain();

  v38.receiver = v18;
  v38.super_class = ObjectType;
  id v29 = objc_msgSendSuper2(&v38, sel_init);
  objc_msgSend(v28, sel_addObserver_, v29);
  sub_20A8C5C70();
  *(void *)(swift_allocObject() + 16) = v29;
  id v30 = v29;
  sub_20A8C5C30();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  __swift_destroy_boxed_opaque_existential_1(v27);
  __swift_destroy_boxed_opaque_existential_1(v26);
  __swift_destroy_boxed_opaque_existential_1(v25);
  return v30;
}

void sub_20A6B1670(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_20A6B16DC(255, a3, a4, MEMORY[0x263F8D8F0]);
    unint64_t v5 = sub_20A8C6490();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_20A6B16DC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_20A6B1728(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A6B178C()
{
  return swift_deallocObject();
}

void sub_20A6B17C4()
{
  sub_20A8AD14C(*(void **)(v0 + 16));
}

void sub_20A6B17CC()
{
  if (!qword_26AC80038)
  {
    sub_20A4301D4(255, &qword_26AC6C440);
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC80038);
    }
  }
}

uint64_t sub_20A6B1838(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t StockSearchCompositionalLayoutOptionsProvider.layoutOptions(for:)(void *a1)
{
  uint64_t v2 = sub_20A8CADF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8CB370();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v15 - v11;
  *(_OWORD *)((char *)&v15 - v11) = xmmword_20A8E9A20;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))((char *)&v15 - v11, *MEMORY[0x263F7DFE8], v6);
  id v13 = objc_msgSend(a1, sel_horizontalSizeClass);
  if ((unint64_t)v13 < 2)
  {
    sub_20A8CADD0();
    sub_20A8CADC0();
    sub_20A8CADC0();
    sub_20A8CADC0();
    sub_20A8CADC0();
LABEL_6:
    sub_20A8CAD90();
    sub_20A8CADA0();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    sub_20A8CADB0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  if (v13 == (id)2)
  {
    sub_20A8CADE0();
    sub_20A8CADC0();
    sub_20A8CADC0();
    sub_20A8CADC0();
    sub_20A8CADC0();
    goto LABEL_6;
  }
  sub_20A8CADD0();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
}

uint64_t StockSearchCompositionalLayoutOptionsProvider.deinit()
{
  return v0;
}

uint64_t StockSearchCompositionalLayoutOptionsProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_20A6B1B4C(void *a1)
{
  return StockSearchCompositionalLayoutOptionsProvider.layoutOptions(for:)(a1);
}

uint64_t type metadata accessor for StockSearchCompositionalLayoutOptionsProvider()
{
  return self;
}

uint64_t method lookup function for StockSearchCompositionalLayoutOptionsProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StockSearchCompositionalLayoutOptionsProvider);
}

ValueMetadata *type metadata accessor for ForYouLocation()
{
  return &type metadata for ForYouLocation;
}

BOOL sub_20A6B1BB0(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  BOOL result = (*a1 | *a2) == 0;
  if (v2) {
    BOOL v4 = *a2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    sub_20A6B1D18();
    swift_retain();
    swift_retain();
    char v5 = sub_20A8CC7B0();
    swift_release();
    swift_release();
    return v5 & 1;
  }
  return result;
}

uint64_t sub_20A6B1C34()
{
  if (*v0) {
    return 0x726F73727563;
  }
  else {
    return 0x656546664F706F74;
  }
}

uint64_t sub_20A6B1C70()
{
  if (!*v0) {
    return 0x656546664F706F74;
  }
  swift_retain();
  sub_20A8CC790();
  sub_20A8CE3D0();
  swift_bridgeObjectRelease();
  sub_20A8CE3D0();
  swift_release();
  return 0x28726F73727563;
}

void sub_20A6B1D18()
{
  if (!qword_26AC6B010)
  {
    type metadata accessor for ForYouFeedServiceConfig();
    sub_20A4F0534();
    unint64_t v0 = sub_20A8CC7C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6B010);
    }
  }
}

void sub_20A6B1D7C(uint64_t a1, double *a2, uint64_t a3)
{
  uint64_t v180 = type metadata accessor for QuoteSummaryTimeRange();
  uint64_t v168 = *(void *)(v180 - 8);
  MEMORY[0x270FA5388](v180);
  uint64_t v170 = (uint64_t)v147 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6B30D0(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v167 = (uint64_t)v147 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v166 = (char *)v147 - v10;
  uint64_t v11 = sub_20A8C2990();
  MEMORY[0x270FA5388](v11 - 8);
  v147[1] = (char *)v147 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8CE230();
  MEMORY[0x270FA5388](v13 - 8);
  v147[0] = (char *)v147 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_20A8C3410();
  uint64_t v158 = *(void *)(v15 - 8);
  uint64_t v159 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v157 = (char *)v147 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8C72A0();
  uint64_t v163 = *(void *)(v17 - 8);
  uint64_t v164 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v161 = (char *)v147 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v162 = (char *)v147 - v20;
  uint64_t v21 = sub_20A8C4030();
  uint64_t v182 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)v147 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)v147 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  id v29 = (char *)v147 - v28;
  double v30 = a2[4];
  double v31 = a2[5];
  double v32 = a2[6];
  double v33 = a2[7];
  id v178 = *(id *)(a3 + OBJC_IVAR____TtC8StocksUI9QuoteView_priceLabel);
  objc_msgSend(v178, sel_setFrame_, v30, v31, v32, v33);
  uint64_t v169 = a3;
  uint64_t v34 = *(void **)(a3 + OBJC_IVAR____TtC8StocksUI9QuoteView_priceChangeLabel);
  double v35 = a2[8];
  double v36 = a2[9];
  double v37 = a2[10];
  double v38 = a2[11];
  uint64_t v150 = a2;
  id v179 = v34;
  objc_msgSend(v34, sel_setFrame_, v35, v36, v37, v38);
  sub_20A8C4250();
  sub_20A8C4230();
  if (qword_26AC69070 != -1) {
    swift_once();
  }
  sub_20A8C4220();
  swift_release();
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v39 = *(void *)(a1 + 72);
    Class v177 = *(Class *)(a1 + 64);
    swift_bridgeObjectRetain();
    goto LABEL_19;
  }
  char v40 = v187;
  double v41 = *(double *)a1;
  sub_20A458F00(a1, (uint64_t)v29);
  if (v40)
  {
    uint64_t v42 = v182;
    (*(void (**)(char *, char *, uint64_t))(v182 + 16))(v23, &v29[*(int *)(v24 + 40)], v21);
    int v43 = (*(uint64_t (**)(char *, uint64_t))(v42 + 88))(v23, v21);
    char v44 = 2;
    if (v43 == *MEMORY[0x263F7AF90]
      || v43 == *MEMORY[0x263F7AF98]
      || v43 == *MEMORY[0x263F7AF68]
      || v43 == *MEMORY[0x263F7AF80]
      || v43 == *MEMORY[0x263F7AF70]
      || v43 == *MEMORY[0x263F7AF88])
    {
      goto LABEL_14;
    }
    if (v43 != *MEMORY[0x263F7AF78])
    {
      if (v43 != *MEMORY[0x263F7AF60]) {
        (*(void (**)(char *, uint64_t))(v42 + 8))(v23, v21);
      }
      char v44 = 2;
      goto LABEL_14;
    }
  }
  char v44 = 0;
LABEL_14:
  sub_20A6B3300((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  if (qword_26AC6D680 != -1) {
    swift_once();
  }
  uint64_t v45 = (objc_class *)sub_20A6573EC(*(void *)(a1 + 48), *(void *)(a1 + 56), 5, 1, v44, v41);
  uint64_t v39 = v46;
  sub_20A458F00(a1, (uint64_t)v26);
  if (!v39)
  {
    uint64_t v45 = (objc_class *)*((void *)v26 + 8);
    uint64_t v39 = *((void *)v26 + 9);
    swift_bridgeObjectRetain();
  }
  Class v177 = v45;
  sub_20A6B3300((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
LABEL_19:
  uint64_t v160 = type metadata accessor for QuoteViewModel();
  uint64_t v182 = a1 + *(int *)(v160 + 20);
  uint64_t v156 = sub_20A5EBCFC(v182, 0);
  uint64_t v154 = v47;
  double v48 = *(double *)(a1 + 16);
  uint64_t v174 = a1;
  int v49 = v48 < 0.0;
  int v151 = *(unsigned __int8 *)(a1 + 24);
  if (v151) {
    int v49 = 2;
  }
  LODWORD(v155) = v49;
  uint64_t v50 = (void *)(v181 + 16);
  uint64_t v176 = (void *)(v181 + 16);
  uint64_t v51 = v181;
  swift_beginAccess();
  uint64_t v52 = (void *)*__swift_project_boxed_opaque_existential_1(v50, *(void *)(v51 + 40));
  sub_20A6B30D0(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
  uint64_t v173 = v53;
  uint64_t inited = swift_initStackObject();
  long long v172 = xmmword_20A8D4540;
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v55 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  uint64_t v56 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  uint64_t v175 = *MEMORY[0x263F83628];
  swift_bridgeObjectRetain();
  id v152 = v55;
  *(void *)(inited + 40) = sub_20A8CEE20();
  uint64_t v57 = v39;
  uint64_t v58 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v56;
  *(void *)(inited + 72) = v58;
  uint64_t v59 = v52 + 2;
  uint64_t v61 = v52[5];
  uint64_t v60 = v52[6];
  __swift_project_boxed_opaque_existential_1(v59, v61);
  uint64_t v62 = *(void *)(v60 + 16);
  uint64_t v63 = *(uint64_t (**)(uint64_t, uint64_t))(v62 + 40);
  id v64 = v58;
  uint64_t v65 = v63(v61, v62);
  uint64_t v171 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 104) = v171;
  *(void *)(inited + 80) = v65;
  sub_20A4CF8B0(inited);
  id v66 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v67 = (void *)sub_20A8CE240();
  uint64_t v165 = v57;
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  uint64_t v69 = v68;
  uint64_t v70 = sub_20A6B3134((unint64_t *)&qword_26AC7F9F8, 255, type metadata accessor for Key);
  uint64_t v153 = MEMORY[0x263F8EE58] + 8;
  uint64_t v71 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v72 = objc_msgSend(v66, sel_initWithString_attributes_, v67, v71);

  objc_msgSend(v178, sel_setAttributedText_, v72);
  uint64_t v73 = (void *)*__swift_project_boxed_opaque_existential_1(v176, *(void *)(v181 + 40));
  uint64_t v74 = swift_initStackObject();
  *(_OWORD *)(v74 + 16) = v172;
  uint64_t v75 = v152;
  *(void *)(v74 + 32) = v152;
  swift_bridgeObjectRetain();
  id v148 = v75;
  *(void *)(v74 + 40) = sub_20A8CEE20();
  id v152 = (id)v56;
  *(void *)(v74 + 64) = v56;
  *(void *)(v74 + 72) = v64;
  id v149 = v64;
  id v76 = sub_20A6BE1C0(v155);
  uint64_t v77 = v73 + 7;
  uint64_t v79 = v73[10];
  uint64_t v78 = v73[11];
  __swift_project_boxed_opaque_existential_1(v77, v79);
  uint64_t v80 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v78 + 16))(v79, v78);
  id v81 = objc_msgSend(v76, sel_stocksAccessibilityAdjustedForIncreaseContrastAgainstWithBackgroundColor_, v80);

  *(void *)(v74 + 104) = v171;
  *(void *)(v74 + 80) = v81;
  sub_20A4CF8B0(v74);
  id v82 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v83 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  uint64_t v155 = v70;
  uint64_t v156 = v69;
  uint64_t v84 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v85 = objc_msgSend(v82, sel_initWithString_attributes_, v83, v84);
  swift_bridgeObjectRelease();

  double v87 = v157;
  uint64_t v86 = v158;
  uint64_t v88 = v159;
  (*(void (**)(char *, uint64_t, uint64_t))(v158 + 16))(v157, v182, v159);
  int v89 = (*(uint64_t (**)(char *, uint64_t))(v86 + 88))(v87, v88);
  uint64_t v90 = (unsigned int *)MEMORY[0x263F7A218];
  if (v89 == *MEMORY[0x263F7AB90])
  {
    uint64_t v92 = v162;
    uint64_t v91 = v163;
    uint64_t v93 = *(void (**)(char *, uint64_t, uint64_t))(v163 + 104);
    uint64_t v94 = v164;
    v93(v162, *MEMORY[0x263F7A210], v164);
    uint64_t v95 = v161;
  }
  else
  {
    uint64_t v91 = v163;
    uint64_t v94 = v164;
    uint64_t v95 = v161;
    uint64_t v92 = v162;
    if (v89 == *MEMORY[0x263F7AB78])
    {
      uint64_t v96 = *MEMORY[0x263F7A208];
    }
    else
    {
      if (v89 != *MEMORY[0x263F7AB88])
      {
        id v146 = v85;
        sub_20A8CF750();
        __break(1u);
        return;
      }
      uint64_t v96 = *MEMORY[0x263F7A218];
    }
    uint64_t v93 = *(void (**)(char *, uint64_t, uint64_t))(v163 + 104);
    v93(v162, v96, v164);
  }
  v93(v95, *v90, v94);
  sub_20A6B3134(&qword_26AC676F8, 255, MEMORY[0x263F7A220]);
  id v97 = v85;
  sub_20A8CE570();
  sub_20A8CE570();
  if (v185 == v183 && v186 == v184)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v98 = *(void (**)(char *, uint64_t))(v91 + 8);
    v98(v95, v94);
    v98(v92, v94);
  }
  else
  {
    char v99 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v100 = *(void (**)(char *, uint64_t))(v91 + 8);
    v100(v95, v94);
    v100(v92, v94);
    if ((v99 & 1) == 0) {
      goto LABEL_33;
    }
  }
  if (((*(unsigned __int8 *)(v174 + 40) | v151) & 1) == 0)
  {
    uint64_t v102 = (void *)*__swift_project_boxed_opaque_existential_1(v176, *(void *)(v181 + 40));
    if (v48 >= 0.0)
    {
      swift_bridgeObjectRelease();
      uint64_t v104 = (void *)sub_20A8CEE20();
      uint64_t v108 = v102[5];
      uint64_t v109 = v102[6];
      __swift_project_boxed_opaque_existential_1(v102 + 2, v108);
      uint64_t v107 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v109 + 24))(v108, v109);
      char v103 = 1;
    }
    else
    {
      char v103 = sub_20A8CF760();
      swift_bridgeObjectRelease();
      uint64_t v104 = (void *)sub_20A8CEE20();
      uint64_t v105 = v102[5];
      uint64_t v106 = v102[6];
      __swift_project_boxed_opaque_existential_1(v102 + 2, v105);
      uint64_t v107 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v106 + 32))(v105, v106);
    }
    uint64_t v110 = v102 + 7;
    uint64_t v111 = v102[10];
    uint64_t v112 = v102[11];
    __swift_project_boxed_opaque_existential_1(v110, v111);
    long long v113 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v112 + 16))(v111, v112);
    id v114 = objc_msgSend(v107, sel_stocksAccessibilityAdjustedForIncreaseContrastAgainstWithBackgroundColor_, v113);

    Class isa = NSAttributedString.appendingAccessibilityDWCPriceChangeArrow(pointingUpward:withFont:withColor:)(v103 & 1, (UIFont)v104, (UIColor)v114).super.isa;
    id v97 = v114;
    goto LABEL_38;
  }
LABEL_33:
  Class isa = (Class)v97;
LABEL_38:
  uint64_t v115 = v180;

  Class v177 = isa;
  objc_msgSend(v179, sel_setAttributedText_, isa);
  uint64_t v116 = v174;
  sub_20A5EC394(v182);
  uint64_t v117 = (uint64_t)v166;
  if (!v118)
  {
    sub_20A8CE220();
    sub_20A8C2940();
    sub_20A8CE2E0();
  }
  uint64_t v119 = v116 + *(int *)(v160 + 24);
  sub_20A6B317C(v119, v117);
  uint64_t v120 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v168 + 48);
  if (v120(v117, 1, v115) == 1)
  {
    sub_20A6B3210(v117);
    uint64_t v121 = 0;
  }
  else
  {
    sub_20A5FE6F4();
    sub_20A6B3300(v117, (uint64_t (*)(void))type metadata accessor for QuoteSummaryTimeRange);
    uint64_t v121 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
  }
  id v122 = v178;
  objc_msgSend(v178, sel_setAccessibilityLabel_, v121);

  uint64_t v123 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v122, sel_setAccessibilityValue_, v123);

  sub_20A5EC13C();
  uint64_t v124 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  id v125 = v179;
  objc_msgSend(v179, sel_setAccessibilityLabel_, v124);

  uint64_t v126 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v125, sel_setAccessibilityValue_, v126);

  uint64_t v127 = v167;
  sub_20A6B317C(v119, v167);
  if (v120(v127, 1, v180) == 1)
  {
    sub_20A6B3210(v127);
    objc_msgSend(*(id *)(v169 + OBJC_IVAR____TtC8StocksUI9QuoteView_timeRangeLabel), sel_setHidden_, 1);
  }
  else
  {
    sub_20A6B329C(v127, v170);
    uint64_t v128 = *(void **)(v169 + OBJC_IVAR____TtC8StocksUI9QuoteView_timeRangeLabel);
    objc_msgSend(v128, sel_setFrame_, v150[12], v150[13], v150[14], v150[15]);
    uint64_t v129 = (void *)*__swift_project_boxed_opaque_existential_1(v176, *(void *)(v181 + 40));
    uint64_t v182 = sub_20A5FDD60();
    uint64_t v130 = swift_initStackObject();
    *(_OWORD *)(v130 + 16) = v172;
    uint64_t v131 = v148;
    *(void *)(v130 + 32) = v148;
    id v132 = v131;
    id v133 = v152;
    *(void *)(v130 + 40) = sub_20A8CEE20();
    uint64_t v134 = v149;
    *(void *)(v130 + 64) = v133;
    *(void *)(v130 + 72) = v134;
    uint64_t v135 = v129 + 2;
    uint64_t v136 = v129[5];
    uint64_t v137 = v129[6];
    __swift_project_boxed_opaque_existential_1(v135, v136);
    uint64_t v138 = *(void *)(v137 + 16);
    uint64_t v139 = *(uint64_t (**)(uint64_t, uint64_t))(v138 + 184);
    id v140 = v134;
    uint64_t v141 = v139(v136, v138);
    *(void *)(v130 + 104) = v171;
    *(void *)(v130 + 80) = v141;
    sub_20A4CF8B0(v130);
    id v142 = objc_allocWithZone(MEMORY[0x263F086A0]);
    id v143 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    id v144 = (void *)sub_20A8CE170();
    swift_bridgeObjectRelease();
    id v145 = objc_msgSend(v142, sel_initWithString_attributes_, v143, v144);

    objc_msgSend(v128, sel_setAttributedText_, v145);
    objc_msgSend(v128, sel_setHidden_, 0);

    sub_20A6B3300(v170, (uint64_t (*)(void))type metadata accessor for QuoteSummaryTimeRange);
  }
}

uint64_t type metadata accessor for QuoteViewRenderer()
{
  return self;
}

uint64_t sub_20A6B3078(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_20A6B3134(&qword_26AC82B38, a2, (void (*)(uint64_t))type metadata accessor for QuoteViewRenderer);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_20A6B30D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A6B3134(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6B317C(uint64_t a1, uint64_t a2)
{
  sub_20A6B30D0(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A6B3210(uint64_t a1)
{
  sub_20A6B30D0(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A6B329C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for QuoteSummaryTimeRange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A6B3300(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_20A6B34C8()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = &v0[OBJC_IVAR____TtC8StocksUI33ForYouFeedScrollLandscapeTestCase_testName];
  *uint64_t v2 = 0xD000000000000019;
  v2[1] = 0x800000020A90A310;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI33ForYouFeedScrollLandscapeTestCase_timeoutInSeconds] = 0x405E000000000000;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI33ForYouFeedScrollLandscapeTestCase_aggregate] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI33ForYouFeedScrollLandscapeTestCase_requiredCapabilities] = &unk_26BE5F000;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI33ForYouFeedScrollLandscapeTestCase_iterations] = 2;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI33ForYouFeedScrollLandscapeTestCase_offset] = 15;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI33ForYouFeedScrollLandscapeTestCase_numberOfScreens] = 5;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI33ForYouFeedScrollLandscapeTestCase_orientation] = 4;
  v0[OBJC_IVAR____TtC8StocksUI33ForYouFeedScrollLandscapeTestCase_waitForCommitToFinish] = 0;
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for ForYouFeedScrollLandscapeTestCase()
{
  return self;
}

uint64_t *sub_20A6B363C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  objc_super v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    objc_super v4 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_20A497708();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = type metadata accessor for NewsStockFeedGroupKnobs();
    *(uint64_t *)((char *)v4 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
    *(uint64_t *)((char *)v4 + *(int *)(v8 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 24));
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_20A6B3734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A497708();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_20A6B37E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A497708();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  swift_retain();
  swift_release();
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  swift_retain();
  swift_release();
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_20A6B38A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A497708();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_20A6B3944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A497708();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  swift_release();
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  swift_release();
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_20A6B39F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A6B3A08);
}

uint64_t sub_20A6B3A08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockFeedGroupKnobs();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A6B3A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A6B3A88);
}

uint64_t sub_20A6B3A88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockFeedGroupKnobs();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StockFeedKnobsConfig()
{
  uint64_t result = qword_26AC721A0;
  if (!qword_26AC721A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A6B3B44()
{
  uint64_t result = type metadata accessor for NewsStockFeedGroupKnobs();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A6B3BDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v37 = a3;
  uint64_t v38 = a2;
  uint64_t v39 = a4;
  sub_20A6B46A4(0, (unint64_t *)&qword_26AC6B020, (void (*)(uint64_t))sub_20A497708);
  MEMORY[0x270FA5388](v5 - 8);
  double v33 = (char *)&v32 - v6;
  uint64_t v7 = type metadata accessor for NewsStockFeedGroupKnobs();
  uint64_t v35 = *(void *)(v7 - 8);
  uint64_t v36 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v34 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6B46A4(0, qword_26AC74C38, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v32 - v13;
  sub_20A6B46A4(0, qword_26AC71200, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v32 - v16;
  uint64_t v18 = type metadata accessor for StockFeedGroupKnobs();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6B46F8(a1, (uint64_t)v17, qword_26AC71200, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    uint64_t v22 = (uint64_t)v33;
    uint64_t v24 = v35;
    uint64_t v23 = v36;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v14, 1, 1, v36);
    sub_20A6B46F8((uint64_t)v14, (uint64_t)v11, qword_26AC74C38, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
    int v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v11, 1, v23);
    char v26 = v37;
    uint64_t v27 = v34;
    if (v25 == 1)
    {
      sub_20A497708();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v22, 1, 1, v28);
      sub_20A889420(v22, 0, 0, v27);
      sub_20A6B4764((uint64_t)v14, qword_26AC74C38, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
      sub_20A6B4764((uint64_t)v11, qword_26AC74C38, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
    }
    else
    {
      sub_20A6B4764((uint64_t)v14, qword_26AC74C38, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
      sub_20A6B47C0((uint64_t)v11, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroupKnobs);
    }
    sub_20A6B47C0((uint64_t)v27, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroupKnobs);
    sub_20A6B4764(a1, qword_26AC71200, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
    sub_20A6B4764((uint64_t)v17, qword_26AC71200, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
    uint64_t v29 = v38;
    uint64_t v30 = v39;
  }
  else
  {
    sub_20A6B4764(a1, qword_26AC71200, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
    sub_20A6B47C0((uint64_t)v17, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for StockFeedGroupKnobs);
    uint64_t v29 = v38;
    uint64_t v30 = v39;
    char v26 = v37;
  }
  sub_20A6B47C0((uint64_t)v21, v30, (uint64_t (*)(void))type metadata accessor for StockFeedGroupKnobs);
  if (v26) {
    uint64_t v29 = 0x7FFFFFFFFFFFFFFFLL;
  }
  uint64_t result = type metadata accessor for StockFeedKnobsConfig();
  *(void *)(v30 + *(int *)(result + 20)) = v29;
  return result;
}

uint64_t sub_20A6B40E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v14 = a2;
  sub_20A6B46A4(0, qword_26AC71200, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v13 - v5;
  sub_20A6B4828();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A6B4884();
  sub_20A8CF8E0();
  if (!v2)
  {
    type metadata accessor for StockFeedGroupKnobs();
    char v18 = 0;
    sub_20A6B48D8(&qword_26763D338, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
    sub_20A8CF5C0();
    char v17 = 1;
    sub_20A8CF5C0();
    sub_20A6B3BDC((uint64_t)v6, v15, v16, v14);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_20A6B4310(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20A44F2D0(*a1, *a2);
}

uint64_t sub_20A6B431C()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A6B43A8()
{
  sub_20A8CE360();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A6B4420()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A6B44A8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_20A8CF5B0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_20A6B4508(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6F6E4B70756F7267;
  if (*v1) {
    uint64_t v2 = 0x70756F724778616DLL;
  }
  unint64_t v3 = 0xEA00000000007362;
  if (*v1) {
    unint64_t v3 = 0xE900000000000073;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_20A6B4550()
{
  if (*v0) {
    return 0x70756F724778616DLL;
  }
  else {
    return 0x6F6E4B70756F7267;
  }
}

uint64_t sub_20A6B4594@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_20A8CF5B0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_20A6B45F8(uint64_t a1)
{
  unint64_t v2 = sub_20A6B4884();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A6B4634(uint64_t a1)
{
  unint64_t v2 = sub_20A6B4884();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20A6B4670@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A6B40E4(a1, a2);
}

uint64_t sub_20A6B4688(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_20A6B4694@<X0>(uint64_t a1@<X8>)
{
  return sub_20A6B4920(v1, a1);
}

void sub_20A6B46A4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A6B46F8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A6B46A4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A6B4764(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A6B46A4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A6B47C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_20A6B4828()
{
  if (!qword_26763D328)
  {
    sub_20A6B4884();
    unint64_t v0 = sub_20A8CF660();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763D328);
    }
  }
}

unint64_t sub_20A6B4884()
{
  unint64_t result = qword_26763D330;
  if (!qword_26763D330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D330);
  }
  return result;
}

uint64_t sub_20A6B48D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6B4920(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockFeedGroupKnobs();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for StockFeedKnobsConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A6B4A50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedKnobsConfig.CodingKeys()
{
  return &type metadata for StockFeedKnobsConfig.CodingKeys;
}

unint64_t sub_20A6B4A8C()
{
  unint64_t result = qword_26763D340;
  if (!qword_26763D340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D340);
  }
  return result;
}

unint64_t sub_20A6B4AE4()
{
  unint64_t result = qword_26763D348;
  if (!qword_26763D348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D348);
  }
  return result;
}

unint64_t sub_20A6B4B3C()
{
  unint64_t result = qword_26763D350;
  if (!qword_26763D350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D350);
  }
  return result;
}

uint64_t sub_20A6B4B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v34 = a2;
  uint64_t v4 = sub_20A8CC310();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C84C();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v36 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v35);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v15 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x270FA5388](v15 - 8);
  char v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for NewsPlacardStockFeedGroup();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for StockFeedGroup();
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6B6334(a1, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_20A6B63FC((uint64_t)v23, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
      sub_20A7AB8E8((uint64_t)v14);
      uint64_t v25 = sub_20A6B6334((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
      uint64_t v26 = *((void *)v17 + 2);
      MEMORY[0x270FA5388](v25);
      *(&v33 - 4) = v34;
      *(&v33 - 3) = (uint64_t)v17;
      *(&v33 - 2) = v37;
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_20A449F28((void (*)(uint64_t))sub_20A524608, (uint64_t)(&v33 - 6), v26, (uint64_t)v39);
      swift_bridgeObjectRelease();
      sub_20A42C4A4();
      uint64_t v29 = v28;
      uint64_t v30 = sub_20A6B62EC(&qword_26AC69D78, (void (*)(uint64_t))sub_20A42C4A4);
      uint64_t v31 = sub_20A6B62EC(&qword_26AC69D70, (void (*)(uint64_t))sub_20A42C4A4);
      MEMORY[0x21051E250](v27, v29, v30, v31);
      type metadata accessor for StockFeedModel();
      sub_20A6B62EC(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
      sub_20A6B62EC(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
      sub_20A8C8810();
      sub_20A6B639C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
      return sub_20A6B639C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v23, v4);
      sub_20A6B5634((uint64_t)v7, v38);
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  else
  {
    sub_20A6B63FC((uint64_t)v23, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
    sub_20A6B50C4((uint64_t)v20, v38);
    return sub_20A6B639C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
  }
}

uint64_t sub_20A6B50C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v27 = a2;
  uint64_t v26 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v26);
  uint64_t v4 = (uint64_t *)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A42C4A4();
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C84C();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = type metadata accessor for NewsPlacardStockFeedGroup();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
  char v13 = sub_20A8C3540();
  sub_20A6B6334(v23, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
  if (v13)
  {
    char v14 = v12[*(int *)(v10 + 20)];
    sub_20A6B639C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
    if (v14)
    {
      swift_storeEnumTagMultiPayload();
      uint64_t v15 = sub_20A6B62EC(&qword_26AC69D78, (void (*)(uint64_t))sub_20A42C4A4);
      uint64_t v16 = sub_20A6B62EC(&qword_26AC69D70, (void (*)(uint64_t))sub_20A42C4A4);
      uint64_t v17 = v25;
      MEMORY[0x21051E240](MEMORY[0x263F8EE78], v25, v15, v16);
      sub_20A6B62EC(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
      sub_20A6B62EC(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
      sub_20A8C8810();
      swift_storeEnumTagMultiPayload();
      goto LABEL_8;
    }
  }
  else
  {
    sub_20A6B639C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = sub_20A6B62EC(&qword_26AC69D78, (void (*)(uint64_t))sub_20A42C4A4);
  uint64_t v19 = sub_20A6B62EC(&qword_26AC69D70, (void (*)(uint64_t))sub_20A42C4A4);
  uint64_t v17 = v25;
  MEMORY[0x21051E240](MEMORY[0x263F8EE78], v25, v18, v19);
  sub_20A6B62EC(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
  sub_20A6B62EC(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
  sub_20A8C8810();
  if (qword_26AC82DA0 != -1) {
    swift_once();
  }
  uint64_t v20 = *(void *)algn_26AC9ED28;
  *uint64_t v4 = qword_26AC9ED20;
  v4[1] = v20;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
LABEL_8:
  sub_20A8C8320();
  sub_20A44D40C();
  sub_20A8C8880();
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v7, v17);
}

uint64_t sub_20A6B5634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v17[1] = a2;
  sub_20A42C84C();
  MEMORY[0x270FA5388](v4 - 8);
  v17[0] = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8CC310();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, a1, v10);
  swift_storeEnumTagMultiPayload();
  sub_20A5244A4();
  sub_20A42C4A4();
  uint64_t v12 = v11;
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_20A8D3DC0;
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 56), *(void *)(v2 + 80));
  sub_20A8CCBB0();
  swift_storeEnumTagMultiPayload();
  sub_20A6B62EC(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
  sub_20A8C8320();
  uint64_t v14 = sub_20A6B62EC(&qword_26AC69D78, (void (*)(uint64_t))sub_20A42C4A4);
  uint64_t v15 = sub_20A6B62EC(&qword_26AC69D70, (void (*)(uint64_t))sub_20A42C4A4);
  MEMORY[0x21051E240](v13, v12, v14, v15);
  sub_20A6B62EC(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
  return sub_20A8C8810();
}

uint64_t sub_20A6B5988()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedSectionFactory()
{
  return self;
}

uint64_t sub_20A6B59F4@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v66 = a4;
  uint64_t v78 = a5;
  uint64_t v8 = sub_20A8CCFE0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v74 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v60 - v12;
  uint64_t v14 = sub_20A8C4020();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v69 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v60 - v18;
  uint64_t v73 = type metadata accessor for StockFeedModel();
  double v20 = MEMORY[0x270FA5388](v73);
  uint64_t v71 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v15;
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  uint64_t v70 = v19;
  uint64_t v68 = v14;
  uint64_t v63 = v22;
  ((void (*)(char *, uint64_t, uint64_t, double))v22)(v19, a1, v14, v20);
  uint64_t v75 = v13;
  uint64_t v76 = v9;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v23 = v9 + 16;
  uint64_t v77 = v8;
  id v64 = v24;
  v24(v13, a2, v8);
  uint64_t v25 = *a3;
  uint64_t v26 = *(void **)(v66 + 96);
  uint64_t v66 = a3[1];
  swift_bridgeObjectRetain();
  uint64_t v27 = (void *)sub_20A8C3F80();
  unsigned int v28 = objc_msgSend(v27, sel_isPaid);
  if (objc_msgSend(v27, sel_respondsToSelector_, sel_isBundlePaid)) {
    LODWORD(v62) = objc_msgSend(v27, sel_isBundlePaid);
  }
  else {
    LODWORD(v62) = 0;
  }
  id v29 = objc_msgSend(v27, sel_sourceChannel);
  uint64_t v30 = (uint64_t)v29;
  if (v29)
  {
    id v31 = objc_msgSend(v29, sel_identifier);
    swift_unknownObjectRelease();
    uint64_t v32 = sub_20A8CE280();
    uint64_t v30 = v33;
  }
  else
  {
    uint64_t v32 = 0;
  }
  uint64_t v67 = v25;
  uint64_t v65 = v23;
  if (v28)
  {
    id v34 = objc_msgSend(v26, sel_purchaseProvider);
    if (!v30)
    {
      swift_unknownObjectRelease();
      goto LABEL_14;
    }
    id v35 = objc_msgSend(v34, sel_purchasedTagIDs);
    uint64_t v36 = sub_20A8CE7F0();
    id v61 = v26;
    uint64_t v37 = v30;
    uint64_t v38 = v36;

    LOBYTE(v35) = sub_20A4443F8(v32, v37, v38);
    swift_unknownObjectRelease();
    uint64_t v30 = v37;
    uint64_t v26 = v61;
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
    {
LABEL_14:
      if ((v62 & 1) == 0)
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
LABEL_15:
      if (v30)
      {
        uint64_t v62 = v30;
        double v41 = (char *)objc_msgSend(objc_msgSend(v26, sel_bundleSubscriptionProvider), sel_bundleSubscription);
        swift_unknownObjectRelease();
        if (objc_getAssociatedObject(v41, v41 + 1))
        {
          sub_20A8CF270();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v79 = 0u;
          long long v80 = 0u;
        }
        sub_20A6B63FC((uint64_t)&v79, (uint64_t)v81, (uint64_t (*)(void))sub_20A42F348);
        if (v82)
        {
          sub_20A4434F8();
          if (swift_dynamicCast())
          {
            id v42 = v83;
            unint64_t v43 = (unint64_t)objc_msgSend(v83, sel_integerValue);
            if (v43 == -1)
            {
              uint64_t v46 = v26;

              char v40 = v63;
              goto LABEL_39;
            }
            id v44 = v42;
LABEL_28:
            id v61 = (id)v43;
            if (objc_getAssociatedObject(v41, (const void *)~v43))
            {
              sub_20A8CF270();
              swift_unknownObjectRelease();
            }
            else
            {
              long long v79 = 0u;
              long long v80 = 0u;
            }
            uint64_t v45 = v44;
            sub_20A6B63FC((uint64_t)&v79, (uint64_t)v81, (uint64_t (*)(void))sub_20A42F348);
            if (v82)
            {
              sub_20A4434F8();
              uint64_t v46 = v26;
              if (swift_dynamicCast())
              {
                uint64_t v47 = v45;
                id v48 = v83;
                unsigned int v49 = objc_msgSend(v48, sel_integerValue);

                char v40 = v63;
                if ((v49 ^ v61))
                {
LABEL_39:
                  id v50 = objc_msgSend(objc_msgSend(v46, sel_bundleSubscriptionProvider), sel_bundleSubscription);
                  swift_unknownObjectRelease();
                  id v51 = objc_msgSend(v50, sel_bundleChannelIDs);

                  uint64_t v52 = (void *)sub_20A8CE240();
                  unsigned __int8 v53 = objc_msgSend(v51, sel_containsObject_, v52);
                  swift_unknownObjectRelease();
                  swift_bridgeObjectRelease();

                  if (v53)
                  {
                    char v39 = 1;
                    goto LABEL_42;
                  }
LABEL_41:
                  char v39 = 0;
                  goto LABEL_42;
                }
LABEL_37:
                swift_unknownObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_41;
              }
            }
            else
            {
              uint64_t v46 = v26;
              sub_20A6B639C((uint64_t)v81, (uint64_t (*)(void))sub_20A42F348);
            }

            char v40 = v63;
            if (v61) {
              goto LABEL_39;
            }
            goto LABEL_37;
          }
        }
        else
        {
          sub_20A6B639C((uint64_t)v81, (uint64_t (*)(void))sub_20A42F348);
        }
        id v44 = 0;
        unint64_t v43 = 0;
        goto LABEL_28;
      }
      swift_unknownObjectRelease();
LABEL_20:
      char v40 = v63;
      goto LABEL_41;
    }
  }
  else if (v62)
  {
    goto LABEL_15;
  }
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  char v39 = 1;
  char v40 = v63;
LABEL_42:
  uint64_t v54 = v70;
  uint64_t v55 = v68;
  v40(v69, v70, v68);
  uint64_t v56 = v75;
  uint64_t v57 = v77;
  v64(v74, v75, v77);
  v81[0] = v39;
  uint64_t v58 = (void (*)(uint64_t))MEMORY[0x263F7AF50];
  sub_20A6B62EC((unint64_t *)&unk_26AC69010, MEMORY[0x263F7AF50]);
  sub_20A6B62EC((unint64_t *)&unk_26AC69000, v58);
  sub_20A8CCF80();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v56, v57);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v54, v55);
  swift_storeEnumTagMultiPayload();
  sub_20A6B62EC(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
  return sub_20A8C8320();
}

uint64_t sub_20A6B62EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6B6334(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A6B639C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A6B63FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A6B6464@<X0>(uint64_t a1@<X0>, double *a2@<X1>, char *a3@<X8>)
{
  long long v113 = a2;
  uint64_t v110 = a3;
  uint64_t v107 = sub_20A8C2800();
  uint64_t v106 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  uint64_t v109 = (char *)v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6B76E8(0, (unint64_t *)&qword_26AC7F5F8, MEMORY[0x263F7CC80]);
  *(void *)&long long v112 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v99 - v8;
  uint64_t v10 = sub_20A8CDDA0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v104 = (char *)v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v108 = (char *)v99 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v99 - v16;
  uint64_t v105 = v3;
  uint64_t v111 = v3[2];
  sub_20A6B76E8(0, (unint64_t *)&qword_26AC7F540, MEMORY[0x263F7CB98]);
  uint64_t v19 = v18;
  sub_20A8CDDE0();
  sub_20A8CDD90();
  uint64_t v21 = *(void (**)(void, void))(v11 + 8);
  uint64_t v20 = v11 + 8;
  uint64_t v22 = v17;
  uint64_t v23 = v10;
  uint64_t v24 = v10;
  uint64_t v25 = (void (*)(char *, uint64_t))v21;
  v21(v22, v24);
  sub_20A8CDDF0();
  *(double *)&uint64_t v26 = COERCE_DOUBLE(sub_20A8CDFC0());
  char v28 = v27;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, void))(v7 + 8))(v9, v112);
  _Q0 = 0uLL;
  double v31 = 0.0;
  if (v28)
  {
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    CGFloat v49 = 0.0;
    double v50 = 0.0;
    double MaxY = 0.0;
    double v52 = 0.0;
    double v53 = 0.0;
    id v44 = v110;
  }
  else
  {
    double v102 = *(double *)&v26;
    uint64_t v32 = (int *)type metadata accessor for StockChartCalloutLayoutOptions();
    char v103 = (double *)((char *)v113 + v32[8]);
    double v33 = v103[1];
    id v34 = v108;
    *(void *)&long long v112 = a1;
    sub_20A8CDDE0();
    uint64_t v35 = sub_20A8CDD90();
    uint64_t v37 = v36;
    uint64_t v111 = v23;
    uint64_t v38 = v23;
    char v39 = v25;
    uint64_t v40 = ((uint64_t (*)(char *, uint64_t))v25)(v34, v38);
    uint64_t v116 = 0;
    MEMORY[0x270FA5388](v40);
    v99[-2] = &v116;
    uint64_t v42 = v19;
    uint64_t v101 = v20;
    if ((v37 & 0x1000000000000000) != 0 || !(v37 & 0x2000000000000000 | v35 & 0x1000000000000000))
    {
      sub_20A8CF3B0();
      uint64_t result = swift_bridgeObjectRelease();
      id v44 = v110;
    }
    else
    {
      MEMORY[0x270FA5388](v41);
      v99[-2] = sub_20A662D70;
      v99[-1] = v43;
      id v44 = v110;
      if ((v37 & 0x2000000000000000) != 0)
      {
        v114[0] = v35;
        v114[1] = v37 & 0xFFFFFFFFFFFFFFLL;
        BOOL v55 = (v35 > 0x20u || ((0x100003E01uLL >> v35) & 1) == 0)
           && (uint64_t v54 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
           && *v54 == 0;
        char v115 = v55;
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        if ((v35 & 0x1000000000000000) != 0)
        {
          uint64_t v45 = (v37 & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v46 = v35 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          uint64_t v45 = sub_20A8CF420();
        }
        char v115 = sub_20A65B7FC(v45, v46, (void (*)(uint64_t *__return_ptr))sub_20A662DE4) & 1;
        uint64_t result = swift_bridgeObjectRelease();
      }
      uint64_t v42 = v19;
    }
    _Q0 = 0uLL;
    if (v115)
    {
      double v56 = v102;
      uint64_t v58 = v105[6];
      uint64_t v57 = v105[7];
      __swift_project_boxed_opaque_existential_1(v105 + 3, v58);
      uint64_t v59 = *(void *)((char *)v113 + v32[7]);
      uint64_t v60 = *(void *)(v57 + 8);
      uint64_t v100 = v39;
      v99[1] = v42;
      uint64_t v110 = *(char **)(v60 + 8);
      v114[3] = v58;
      v114[4] = v57;
      id v61 = (char *)v57;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v114);
      ((void (*)(uint64_t, uint64_t, uint64_t))v110)(v59, v58, v60);
      uint64_t v63 = (uint64_t)v109;
      sub_20A8C2780();
      id v64 = v113;
      uint64_t v65 = v103;
      *(double *)&uint64_t v66 = COERCE_DOUBLE(sub_20A6B6DAC((uint64_t)v113 + v32[6]));
      uint64_t v67 = (uint64_t)v64 + v32[5];
      double v102 = *(double *)&v66;
      uint64_t v68 = sub_20A74B690(v63, v67);
      uint64_t v69 = (uint64_t (*)(uint64_t))*((void *)v61 + 3);
      uint64_t v105 = boxed_opaque_existential_1;
      uint64_t v110 = (char *)v58;
      uint64_t v108 = v61;
      uint64_t v47 = v69(v68);
      swift_bridgeObjectRelease();
      sub_20A8CEC50();
      double v31 = v70;
      CGFloat v49 = v71;
      double v72 = *v64;
      sub_20A8CE970();
      double v74 = v72 - v73;
      if (v74 < v31) {
        double v31 = v74;
      }
      double v75 = v72 - v31;
      uint64_t v76 = v104;
      sub_20A8CDDE0();
      sub_20A8CDD70();
      double v78 = v77;
      v100(v76, v111);
      if (v78 == 0.0 || fabs(v78) >= 5.0)
      {
        if (qword_26AC6D5C0 != -1) {
          swift_once();
        }
        long long v80 = &qword_26AC9E948;
      }
      else
      {
        if (qword_267639BA8 != -1) {
          swift_once();
        }
        long long v80 = &qword_267652F08;
      }
      id v81 = v64;
      double v82 = v33 + v56;
      *(double *)&long long v79 = v75 * 0.5;
      long long v112 = v79;
      id v83 = (id)*v80;
      objc_msgSend(v83, sel_setNumberStyle_, 1);
      id v84 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v78);
      id v85 = objc_msgSend(v83, sel_stringFromNumber_, v84);

      if (v85)
      {
        uint64_t v86 = sub_20A8CE280();
        unint64_t v88 = v87;
      }
      else
      {

        uint64_t v86 = 0;
        unint64_t v88 = 0xE000000000000000;
      }
      uint64_t v48 = (*((uint64_t (**)(uint64_t, unint64_t, char *, double))v108 + 4))(v86, v88, v110, 0.0);
      swift_bridgeObjectRelease();
      sub_20A8CEC50();
      double v52 = v90;
      double v53 = v89;
      double v91 = *v81 - v90 - v65[3];
      double v92 = v82 + v52 * -0.5;
      double v93 = v65[1];
      if (v91 <= v93) {
        double v91 = v65[1];
      }
      if (v92 <= v93) {
        double v92 = v65[1];
      }
      if (v91 >= v92) {
        double v50 = v92;
      }
      else {
        double v50 = v91;
      }
      double v94 = v81[1] - v89 + -4.0;
      v117.origin.CGFloat y = 4.0;
      *(void *)&v117.origin.CGFloat x = v112;
      v117.size.CGFloat width = v31;
      v117.size.CGFloat height = v49;
      double MaxY = CGRectGetMaxY(v117);
      swift_release();
      if (v94 > MaxY) {
        double MaxY = v94;
      }
      (*(void (**)(char *, uint64_t))(v106 + 8))(v109, v107);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v114);
      __asm { FMOV            V0.2D, #4.0 }
      *(void *)&_Q0 = v112;
    }
    else
    {
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      CGFloat v49 = 0.0;
      double v50 = 0.0;
      double MaxY = 0.0;
      double v52 = 0.0;
      double v53 = 0.0;
    }
  }
  *(void *)id v44 = v47;
  *(_OWORD *)(v44 + 8) = _Q0;
  *((double *)v44 + 3) = v31;
  *((CGFloat *)v44 + 4) = v49;
  *((void *)v44 + 5) = v48;
  *((double *)v44 + 6) = v50;
  *((double *)v44 + 7) = MaxY;
  *((double *)v44 + 8) = v52;
  *((double *)v44 + 9) = v53;
  return result;
}

uint64_t sub_20A6B6DAC(uint64_t a1)
{
  uint64_t v3 = sub_20A8C2AF0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t *)(v1 + 64);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v1 + 64);
  if (*(void *)(v8 + 16) && (unint64_t v9 = sub_20A4D1B9C(a1), (v10 & 1) != 0))
  {
    uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
    swift_endAccess();
    swift_retain();
  }
  else
  {
    swift_endAccess();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v12(v6, a1, v3);
    type metadata accessor for StockChartCalloutDateFormatter();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___dateFormatter) = 0;
    *(void *)(v11 + OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___timeFormatter) = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v11 + OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter_timezone, v6, v3);
    v12(v6, a1, v3);
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v7;
    *uint64_t v7 = 0x8000000000000000;
    sub_20A7A3CB4(v11, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
    *uint64_t v7 = v15;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_endAccess();
  }
  return v11;
}

uint64_t sub_20A6B6FC8()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockChartCalloutLayoutAttributesFactory()
{
  return self;
}

double sub_20A6B703C(double a1)
{
  uint64_t v3 = sub_20A8C2BC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C2AF0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8C2800();
  uint64_t v68 = *(void *)(v11 - 8);
  uint64_t v69 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C27F0();
  sub_20A8C2AE0();
  uint64_t v14 = sub_20A6B6DAC((uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v56 = v1 + 24;
  uint64_t v15 = __swift_project_boxed_opaque_existential_1((void *)(v1 + 24), *(void *)(v1 + 48));
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F7A838], v3);
  uint64_t v66 = v14;
  uint64_t v67 = v13;
  id v61 = (id)sub_20A74B690((uint64_t)v13, (uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v16 = (void *)*v15;
  sub_20A42CF04();
  uint64_t v65 = v17;
  uint64_t inited = swift_initStackObject();
  long long v63 = xmmword_20A8D4540;
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v19 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  uint64_t v20 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  uint64_t v21 = *MEMORY[0x263F835B8];
  swift_bridgeObjectRetain();
  id v62 = v19;
  uint64_t v64 = v21;
  *(void *)(inited + 40) = sub_20A8CEE30();
  uint64_t v22 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v20;
  *(void *)(inited + 72) = v22;
  uint64_t v23 = v16 + 2;
  uint64_t v24 = v16[5];
  uint64_t v25 = v16[6];
  __swift_project_boxed_opaque_existential_1(v23, v24);
  uint64_t v26 = *(void *)(v25 + 16);
  char v27 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 40);
  id v60 = v22;
  uint64_t v28 = v27(v24, v26);
  uint64_t v59 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 104) = v59;
  *(void *)(inited + 80) = v28;
  sub_20A4CF8B0(inited);
  id v29 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v30 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  uint64_t v32 = v31;
  uint64_t v57 = sub_20A6B77F4((unint64_t *)&qword_26AC7F9F8, type metadata accessor for Key);
  uint64_t v58 = v32;
  double v33 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(v29, sel_initWithString_attributes_, v30, v33);
  swift_bridgeObjectRelease();

  id v61 = v34;
  sub_20A8CEC50();
  sub_20A4342F4(v56, (uint64_t)v70);
  uint64_t v35 = __swift_project_boxed_opaque_existential_1(v70, v70[3]);
  if (qword_26AC6D5C0 != -1) {
    swift_once();
  }
  id v36 = (id)qword_26AC9E948;
  objc_msgSend(v36, sel_setNumberStyle_, 1);
  id v37 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, 100.0);
  id v38 = objc_msgSend(v36, sel_stringFromNumber_, v37);

  if (v38)
  {
    sub_20A8CE280();
  }
  char v39 = (void *)*v35;
  uint64_t v40 = swift_initStackObject();
  *(_OWORD *)(v40 + 16) = v63;
  uint64_t v41 = v62;
  *(void *)(v40 + 32) = v62;
  swift_bridgeObjectRetain();
  id v42 = v41;
  *(void *)(v40 + 40) = sub_20A8CEE30();
  uint64_t v43 = v60;
  *(void *)(v40 + 64) = v20;
  *(void *)(v40 + 72) = v43;
  uint64_t v44 = v39[5];
  uint64_t v45 = v39[6];
  __swift_project_boxed_opaque_existential_1(v39 + 2, v44);
  uint64_t v46 = *(void *)(v45 + 16);
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v46 + 176);
  id v48 = v43;
  uint64_t v49 = v47(v44, v46);
  *(void *)(v40 + 104) = v59;
  *(void *)(v40 + 80) = v49;
  sub_20A4CF8B0(v40);
  id v50 = objc_allocWithZone(MEMORY[0x263F086A0]);
  id v51 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  double v52 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v53 = objc_msgSend(v50, sel_initWithString_attributes_, v51, v52);
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
  sub_20A8CEC50();
  swift_release();

  (*(void (**)(char *, uint64_t))(v68 + 8))(v67, v69);
  return a1;
}

void sub_20A6B76E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    uint64_t v6 = sub_20A8CDDA0();
    uint64_t v7 = (void (*)(uint64_t))MEMORY[0x263F7CB58];
    v10[0] = v6;
    v10[1] = sub_20A6B77F4(&qword_26AC7F510, MEMORY[0x263F7CB58]);
    v10[2] = sub_20A6B77F4(&qword_26AC7F500, v7);
    void v10[3] = sub_20A6B77F4(&qword_26AC7F508, v7);
    unint64_t v8 = a3(a1, v10);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A6B77F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6B783C(uint64_t a1)
{
  return sub_20A6B7A10(a1, 0, 0xD000000000000032, 0x800000020A90A5F0, &qword_26763D358);
}

uint64_t static Settings.StockFeed.Layout.Chunking.overrideEnabled.getter()
{
  return sub_20A454F34(&qword_267639BF0);
}

uint64_t sub_20A6B7888()
{
  uint64_t v0 = sub_20A8C4260();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A57E3F0(0, (unint64_t *)&qword_26AC69300);
  v5[2] = 1;
  v5[3] = 5;
  v5[1] = 5;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D100], v0);
  uint64_t result = sub_20A8C42C0();
  qword_26763D360 = result;
  return result;
}

uint64_t static Settings.StockFeed.Layout.Chunking.overrideChunkSize.getter()
{
  return sub_20A454F34(&qword_267639BF8);
}

uint64_t sub_20A6B79E8(uint64_t a1)
{
  return sub_20A6B7A10(a1, 0, 0xD000000000000038, 0x800000020A90A570, &qword_26AC69298);
}

uint64_t sub_20A6B7A10(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_20A8C4260();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_20A8C4270();
  double v12 = MEMORY[0x270FA5388](v11);
  (*(void (**)(unsigned char *, void, double))(v14 + 104))(&v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F7D110], v12);
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7D100], v7);
  v16[15] = a2;
  sub_20A57E3F0(0, (unint64_t *)&qword_26AC692F8);
  swift_allocObject();
  uint64_t result = sub_20A8C42E0();
  *a5 = result;
  return result;
}

uint64_t static Settings.StockFeed.Layout.overrideVerticalQuoteDetailLayout.getter()
{
  return sub_20A454F34(&qword_26AC692A0);
}

uint64_t sub_20A6B7C08(uint64_t a1)
{
  return sub_20A6B7A10(a1, 0, 0xD000000000000044, 0x800000020A90A520, &qword_26AC692A8);
}

uint64_t static Settings.StockFeed.Toolbar.overrideAlwaysShowUpdatedLabelEnabled.getter()
{
  return sub_20A454F34(&qword_26AC692B8);
}

uint64_t sub_20A6B7C54()
{
  uint64_t v0 = sub_20A8C4270();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C4260();
  double v5 = MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, void, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F7D108], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D110], v0);
  v9[0] = 0xD000000000000042;
  v9[1] = 0x800000020A90A4D0;
  sub_20A57E3F0(0, &qword_26AC692F0);
  swift_allocObject();
  uint64_t result = sub_20A8C42E0();
  qword_26763D368 = result;
  return result;
}

uint64_t static Settings.StockFeed.ConfigOverrides.url.getter()
{
  if (qword_267639C00 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t Settings.StockFeed.ConfigOverrides.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_20A8C4260();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a4, v5);
  uint64_t v9 = sub_20A8C41F0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t Settings.StockFeed.ConfigOverrides.init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_20A8C4260();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v5, v7);
  uint64_t v9 = sub_20A8C41F0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t Settings.StockFeed.ConfigOverrides.__deallocating_deinit()
{
  _s11TeaSettings0B0C8StocksUIE4TipsV8EarningsV15ConfigOverridesCfd_0();

  return swift_deallocClassInstance();
}

uint64_t sub_20A6B8104()
{
  uint64_t v0 = sub_20A8C4260();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v5 = MEMORY[0x270FA5388](v4);
  double v7 = (char *)&v10 - v6;
  (*(void (**)(char *, void, uint64_t, double))(v1 + 104))((char *)&v10 - v6, *MEMORY[0x263F7D108], v0, v5);
  type metadata accessor for Settings.StockFeed.ConfigOverrides();
  swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v7, v0);
  uint64_t v8 = sub_20A8C41F0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v7, v0);
  qword_26AC69278 = v8;
  return result;
}

uint64_t static Settings.StockFeed.configOverrides.getter()
{
  return sub_20A454F34(&qword_26AC67688);
}

uint64_t sub_20A6B829C(uint64_t a1)
{
  return sub_20A6B7A10(a1, 1, 0xD000000000000027, 0x800000020A90A440, &qword_26AC69280);
}

uint64_t static Settings.StockFeed.Card.swipeToDismiss.getter()
{
  return sub_20A454F34(&qword_26AC69290);
}

uint64_t sub_20A6B82E8()
{
  uint64_t v0 = sub_20A8C4260();
  uint64_t v21 = *(void *)(v0 - 8);
  uint64_t v22 = v0;
  MEMORY[0x270FA5388](v0);
  uint64_t v20 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_20A8C4270();
  uint64_t v18 = *(void *)(v2 - 8);
  uint64_t v19 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v16 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8CCBA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  double v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v15 - v9;
  sub_20A6078E8();
  uint64_t v17 = v11;
  uint64_t v12 = *MEMORY[0x263F59970];
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v13(v10, v12, v4);
  sub_20A60799C(0, &qword_26AC686F0, (uint64_t (*)(uint64_t))sub_20A607968, MEMORY[0x263F8E0F8]);
  sub_20A607968(0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_20A8D5CB0;
  v13(v7, v12, v4);
  sub_20A8C4280();
  v13(v7, *MEMORY[0x263F59978], v4);
  sub_20A8C4280();
  v13(v7, *MEMORY[0x263F59968], v4);
  sub_20A8C4280();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v16, *MEMORY[0x263F7D110], v19);
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v20, *MEMORY[0x263F7D100], v22);
  sub_20A607A00(&qword_26AC6B0C8);
  uint64_t result = sub_20A8C42A0();
  qword_26AC69228 = result;
  return result;
}

uint64_t static Settings.StockFeed.Feed.autoRefreshStrategy.getter()
{
  return sub_20A454F34(&qword_26AC69238);
}

ValueMetadata *type metadata accessor for Settings.StockFeed()
{
  return &type metadata for Settings.StockFeed;
}

ValueMetadata *type metadata accessor for Settings.StockFeed.Layout()
{
  return &type metadata for Settings.StockFeed.Layout;
}

ValueMetadata *type metadata accessor for Settings.StockFeed.Layout.Chunking()
{
  return &type metadata for Settings.StockFeed.Layout.Chunking;
}

ValueMetadata *type metadata accessor for Settings.StockFeed.Toolbar()
{
  return &type metadata for Settings.StockFeed.Toolbar;
}

uint64_t type metadata accessor for Settings.StockFeed.ConfigOverrides()
{
  uint64_t result = qword_26AC69240;
  if (!qword_26AC69240) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A6B87E0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_20A6B8820()
{
  return type metadata accessor for Settings.StockFeed.ConfigOverrides();
}

ValueMetadata *type metadata accessor for Settings.StockFeed.Card()
{
  return &type metadata for Settings.StockFeed.Card;
}

ValueMetadata *type metadata accessor for Settings.StockFeed.Feed()
{
  return &type metadata for Settings.StockFeed.Feed;
}

void *sub_20A6B8848(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C3E10();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_20A6BD2CC(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(type metadata accessor for StockFeedQuoteData() + 20);
    uint64_t v17 = &v9[v16];
    uint64_t v18 = &v10[v16];
    uint64_t v19 = sub_20A8C2CB0();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      sub_20A6BD2CC(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    uint64_t v22 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v23 = (char *)v4 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = sub_20A8C2800();
    uint64_t v26 = *(void *)(v25 - 8);
    char v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    if (v27(v24, 1, v25))
    {
      sub_20A6BD2CC(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
      memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    uint64_t v29 = a3[8];
    uint64_t v30 = (char *)v4 + v29;
    uint64_t v31 = (char *)a2 + v29;
    if (v27((char *)a2 + v29, 1, v25))
    {
      sub_20A6BD2CC(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v30, v31, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v30, 0, 1, v25);
    }
    uint64_t v33 = a3[9];
    long long v34 = *(_OWORD *)((char *)a2 + v33 + 24);
    *(_OWORD *)((char *)v4 + v33 + 24) = v34;
    (**(void (***)(void))(v34 - 8))();
    uint64_t v35 = a3[10];
    long long v36 = *(_OWORD *)((char *)a2 + v35 + 24);
    *(_OWORD *)((char *)v4 + v35 + 24) = v36;
    (**(void (***)(void))(v36 - 8))();
  }
  return v4;
}

uint64_t sub_20A6B8D1C(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_20A8C3E10();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = v4 + *(int *)(type metadata accessor for StockFeedQuoteData() + 20);
  uint64_t v8 = sub_20A8C2CB0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v10 = a1 + a2[7];
  uint64_t v11 = sub_20A8C2800();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v13(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  uint64_t v14 = a1 + a2[8];
  if (!v13(v14, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v11);
  }
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[9]);
  uint64_t v15 = a1 + a2[10];

  return __swift_destroy_boxed_opaque_existential_1(v15);
}

void *sub_20A6B8F54(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C3E10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_20A6BD2CC(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(type metadata accessor for StockFeedQuoteData() + 20);
  uint64_t v15 = &v8[v14];
  uint64_t v16 = &v9[v14];
  uint64_t v17 = sub_20A8C2CB0();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_20A6BD2CC(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_20A8C2800();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v22, 1, v23))
  {
    sub_20A6BD2CC(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
    memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v27 = a3[8];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  if (v25((char *)a2 + v27, 1, v23))
  {
    sub_20A6BD2CC(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v28, v29, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v28, 0, 1, v23);
  }
  uint64_t v31 = a3[9];
  long long v32 = *(_OWORD *)((char *)a2 + v31 + 24);
  *(_OWORD *)((char *)a1 + v31 + 24) = v32;
  (**(void (***)(void))(v32 - 8))();
  uint64_t v33 = a3[10];
  long long v34 = *(_OWORD *)((char *)a2 + v33 + 24);
  *(_OWORD *)((char *)a1 + v33 + 24) = v34;
  (**(void (***)(void))(v34 - 8))();
  return a1;
}

void *sub_20A6B93D8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C3E10();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_20A6BD2CC(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(type metadata accessor for StockFeedQuoteData() + 20);
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  uint64_t v18 = sub_20A8C2CB0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_12:
    sub_20A6BD2CC(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_13:
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v24 = a3[7];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = sub_20A8C2800();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v25, 1, v27);
  int v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
LABEL_18:
    sub_20A6BD2CC(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
    memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
LABEL_19:
  uint64_t v33 = a3[8];
  long long v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  int v36 = v29((char *)a1 + v33, 1, v27);
  int v37 = v29(v35, 1, v27);
  if (!v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v34, v35, v27);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v34, v27);
    goto LABEL_24;
  }
  if (v37)
  {
LABEL_24:
    sub_20A6BD2CC(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v34, v35, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v34, 0, 1, v27);
LABEL_25:
  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + a3[9]), (void *)((char *)a2 + a3[9]));
  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + a3[10]), (void *)((char *)a2 + a3[10]));
  return a1;
}

_OWORD *sub_20A6B9970(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C3E10();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_20A6BD2CC(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = *(int *)(type metadata accessor for StockFeedQuoteData() + 20);
  int v13 = &v7[v12];
  uint64_t v14 = &v8[v12];
  uint64_t v15 = sub_20A8C2CB0();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_20A6BD2CC(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_20A8C2800();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v23(v20, 1, v21))
  {
    sub_20A6BD2CC(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
    memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v25 = a3[8];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  if (v23((char *)a2 + v25, 1, v21))
  {
    sub_20A6BD2CC(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v26, v27, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v26, 0, 1, v21);
  }
  uint64_t v29 = a3[9];
  uint64_t v30 = a3[10];
  int v31 = (char *)a1 + v29;
  uint64_t v32 = (char *)a2 + v29;
  long long v33 = *((_OWORD *)v32 + 1);
  *(_OWORD *)int v31 = *(_OWORD *)v32;
  *((_OWORD *)v31 + 1) = v33;
  *((void *)v31 + 4) = *((void *)v32 + 4);
  long long v34 = (char *)a1 + v30;
  uint64_t v35 = (char *)a2 + v30;
  *((void *)v34 + 4) = *((void *)v35 + 4);
  long long v36 = *((_OWORD *)v35 + 1);
  *(_OWORD *)long long v34 = *(_OWORD *)v35;
  *((_OWORD *)v34 + 1) = v36;
  return a1;
}

void *sub_20A6B9D8C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C3E10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_20A6BD2CC(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = *(int *)(type metadata accessor for StockFeedQuoteData() + 20);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  uint64_t v19 = sub_20A8C2CB0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
LABEL_12:
    sub_20A6BD2CC(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v17, v18, v19);
LABEL_13:
  uint64_t v25 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = sub_20A8C2800();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  int v31 = v30(v26, 1, v28);
  int v32 = v30(v27, 1, v28);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
LABEL_18:
    sub_20A6BD2CC(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
    memcpy(v26, v27, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 40))(v26, v27, v28);
LABEL_19:
  uint64_t v34 = a3[8];
  uint64_t v35 = (char *)a1 + v34;
  long long v36 = (char *)a2 + v34;
  int v37 = v30((char *)a1 + v34, 1, v28);
  int v38 = v30(v36, 1, v28);
  if (!v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 40))(v35, v36, v28);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v35, v28);
    goto LABEL_24;
  }
  if (v38)
  {
LABEL_24:
    sub_20A6BD2CC(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v35, v36, v28);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v35, 0, 1, v28);
LABEL_25:
  uint64_t v40 = a3[9];
  uint64_t v41 = (char *)a1 + v40;
  id v42 = (char *)a2 + v40;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v40);
  long long v43 = *((_OWORD *)v42 + 1);
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  *((_OWORD *)v41 + 1) = v43;
  *((void *)v41 + 4) = *((void *)v42 + 4);
  uint64_t v44 = a3[10];
  uint64_t v45 = (char *)a1 + v44;
  uint64_t v46 = (char *)a2 + v44;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v44);
  long long v47 = *((_OWORD *)v46 + 1);
  *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
  *((_OWORD *)v45 + 1) = v47;
  *((void *)v45 + 4) = *((void *)v46 + 4);
  return a1;
}

uint64_t sub_20A6BA338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A6BA34C);
}

uint64_t sub_20A6BA34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for StockFeedQuoteData();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_20A6BD2CC(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_20A6BA494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A6BA4A8);
}

uint64_t sub_20A6BA4A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for StockFeedQuoteData();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_20A6BD2CC(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for StockFeedReplaceQuoteDataBlueprintModifier()
{
  uint64_t result = qword_26AC7E850;
  if (!qword_26AC7E850) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A6BA63C()
{
  type metadata accessor for StockFeedQuoteData();
  if (v0 <= 0x3F)
  {
    sub_20A6BD2CC(319, &qword_26AC68CC0, MEMORY[0x263F07490]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_20A6BA740(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v44 = a3;
  uint64_t v45 = a2;
  uint64_t v6 = sub_20A8C8B80();
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  MEMORY[0x270FA5388](v6);
  v35[0] = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6BCBE0(0, &qword_26AC6A420, MEMORY[0x263F7D950]);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v39 = (char *)v35 - v9;
  sub_20A46CC8C();
  MEMORY[0x270FA5388](v10 - 8);
  sub_20A6BCBE0(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  uint64_t v12 = v11;
  uint64_t v40 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  int v14 = (char *)v35 - v13;
  uint64_t v38 = v4;
  uint64_t v47 = v4;
  unint64_t v15 = sub_20A425C40((void (*)(char *))sub_20A6BC788, (uint64_t)v46);
  uint64_t v41 = v12;
  sub_20A8CBA50();
  uint64_t v16 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
  sub_20A6BCBE0(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  uint64_t v18 = v17;
  uint64_t v19 = sub_20A6BC744(&qword_26AC69EF8, (unint64_t *)&qword_26AC69F10, v16);
  uint64_t v20 = sub_20A6BC744(&qword_26AC69EF0, (unint64_t *)&qword_26AC69F10, v16);
  MEMORY[0x21051E250](v15, v18, v19, v20);
  type metadata accessor for StockFeedSectionDescriptor();
  type metadata accessor for StockFeedModel();
  sub_20A6BC6FC(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
  sub_20A44D39C();
  sub_20A8CBA40();
  v35[1] = a1;
  uint64_t v21 = sub_20A44E664();
  sub_20A8CCAC0();
  sub_20A8CCAB0();
  type metadata accessor for StockFeedServiceConfig();
  sub_20A6BC6FC(&qword_26AC73FD0, (void (*)(uint64_t))type metadata accessor for StockFeedServiceConfig);
  uint64_t v22 = sub_20A8CCA90();
  swift_release();
  if (v22)
  {
    *((void *)&v49 + 1) = sub_20A8CC520();
    *(void *)&long long v48 = v22;
  }
  else
  {
    long long v48 = 0u;
    long long v49 = 0u;
  }
  uint64_t v23 = v41;
  sub_20A8CBB10();
  sub_20A55E55C(v21);
  uint64_t v24 = type metadata accessor for StockFeedReplaceQuoteDataBlueprintModifier();
  uint64_t v25 = v39;
  if (*(unsigned char *)(v38 + *(int *)(v24 + 24)) == 1)
  {
    sub_20A6BC7A4();
    uint64_t v27 = &v25[*(int *)(v26 + 48)];
    uint64_t v28 = v40;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v25, v14, v23);
    (*(void (**)(char *, void, uint64_t))(v36 + 104))(v27, *MEMORY[0x263F7D528], v37);
    sub_20A6BD018(0, &qword_26AC6A670, (uint64_t (*)(uint64_t))sub_20A6BC84C, sub_20A6BCF48, MEMORY[0x263F7DCD8]);
    sub_20A6BCF7C();
    long long v48 = 0u;
    long long v49 = 0u;
    sub_20A8C8E50();
    uint64_t v30 = v42;
    uint64_t v29 = v43;
    (*(void (**)(char *, void, uint64_t))(v42 + 104))(v25, *MEMORY[0x263F7D928], v43);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1((void *)(v38 + *(int *)(v24 + 40)), *(void *)(v38 + *(int *)(v24 + 40) + 24));
    if (sub_20A8C3850())
    {
      sub_20A8C9B40();
    }
    else
    {
      uint64_t v32 = v36;
      uint64_t v31 = v37;
      uint64_t v33 = v35[0];
      (*(void (**)(void, void, uint64_t))(v36 + 104))(v35[0], *MEMORY[0x263F7D528], v37);
      sub_20A6BC6FC(&qword_26AC76FA0, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
      sub_20A8C9B50();
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v31);
    }
    uint64_t v30 = v42;
    uint64_t v29 = v43;
    uint64_t v28 = v40;
  }
  v45(v25);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v14, v23);
}

uint64_t sub_20A6BADF4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v33 = a1;
  sub_20A42C84C();
  MEMORY[0x270FA5388](v2 - 8);
  v31[1] = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v31 - v8;
  uint64_t v10 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  unint64_t v15 = (char *)v31 - v14;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v31 - v17;
  sub_20A6BCBE0(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  uint64_t v20 = v19;
  sub_20A8C8820();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_bridgeObjectRelease();
      sub_20A42C980();
      sub_20A6BD13C((uint64_t)&v15[*(int *)(v30 + 64)], &qword_26AC6AF30, MEMORY[0x263F59740]);
      goto LABEL_2;
    case 2u:
      sub_20A6BD198((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
      goto LABEL_2;
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
LABEL_2:
      uint64_t v21 = sub_20A8C8820();
      break;
    default:
      sub_20A6BD38C((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      sub_20A6BB304((uint64_t)v9, (uint64_t)v6);
      sub_20A6BD198((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      sub_20A6BD38C((uint64_t)v6, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      uint64_t v21 = swift_storeEnumTagMultiPayload();
      break;
  }
  MEMORY[0x270FA5388](v21);
  v31[-2] = v33;
  unint64_t v22 = sub_20A426268((void (*)(char *))sub_20A6BD120, (uint64_t)&v31[-4]);
  if (*(void *)(v22 + 16))
  {
    sub_20A6BD264((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
    sub_20A6BD018(0, (unint64_t *)&qword_26AC69D80, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, sub_20A44D39C, MEMORY[0x263F7D2D8]);
    uint64_t v24 = v23;
    uint64_t v25 = sub_20A6BD098(&qword_26AC69D78);
    uint64_t v26 = sub_20A6BD098(&qword_26AC69D70);
    MEMORY[0x21051E250](v22, v24, v25, v26);
    type metadata accessor for StockFeedModel();
    sub_20A6BC6FC(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    sub_20A44D39C();
    uint64_t v27 = v32;
    sub_20A8C8810();
    sub_20A6BD198((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
    uint64_t v28 = 0;
  }
  else
  {
    sub_20A6BD198((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
    swift_bridgeObjectRelease();
    uint64_t v28 = 1;
    uint64_t v27 = v32;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v27, v28, 1, v20);
}

uint64_t sub_20A6BB304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v4 = sub_20A8C3410();
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v38 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6BD2CC(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v35 = (uint64_t)&v35 - v7;
  uint64_t v8 = (int *)type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
  sub_20A6BD2CC(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v35 - v16;
  uint64_t v18 = sub_20A8C3F00();
  double v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v22 + 16))(v21, a1, v19);
  uint64_t v23 = type metadata accessor for StockFeedReplaceQuoteDataBlueprintModifier();
  uint64_t v24 = *(int *)(v23 + 20);
  uint64_t v39 = v2;
  sub_20A6BD1F8(v2 + v24, (uint64_t)v14, &qword_26AC68FB0, v11);
  sub_20A6BD264(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
  uint64_t v25 = sub_20A8C3E10();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v14, 1, v25) == 1)
  {
    uint64_t v27 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
    sub_20A6BD1F8((uint64_t)&v10[v8[5]], (uint64_t)v17, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    sub_20A6BD198((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
    sub_20A6BD13C((uint64_t)v14, &qword_26AC68FB0, v27);
  }
  else
  {
    sub_20A6BD198((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v17, v14, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v17, 0, 1, v25);
  }
  uint64_t v28 = v35;
  sub_20A6BD1F8(a1 + v8[6], v35, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
  uint64_t v29 = a1 + v8[7];
  uint64_t v30 = type metadata accessor for QuoteViewModel();
  uint64_t v31 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v38, v29 + *(int *)(v30 + 20), v37);
  int v32 = *(unsigned __int8 *)(a1 + v8[8]);
  __swift_project_boxed_opaque_existential_1((void *)(v39 + *(int *)(v23 + 40)), *(void *)(v39 + *(int *)(v23 + 40) + 24));
  char v33 = sub_20A8C3870();
  return sub_20A6FC190((uint64_t)v21, (uint64_t)v17, v28, v31, v32, v33 & 1, v40);
}

uint64_t sub_20A6BB7A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v115 = a2;
  uint64_t v117 = a3;
  sub_20A6BD2CC(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
  MEMORY[0x270FA5388](v4 - 8);
  char v103 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v104 = (char *)&v97 - v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v111 = (uint64_t)&v97 - v9;
  uint64_t v10 = sub_20A8C3F00();
  long long v112 = *(void **)(v10 - 8);
  uint64_t v113 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v110 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6BD2CC(0, qword_26AC70910, (void (*)(uint64_t))type metadata accessor for StockEarningsModel);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v101 = (uint64_t)&v97 - v13;
  sub_20A6BD2CC(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v105 = (uint64_t)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v106 = (uint64_t)&v97 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v109 = (uint64_t)&v97 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v100 = (char *)&v97 - v21;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v97 - v23;
  uint64_t v25 = sub_20A8C3E10();
  uint64_t v107 = *(void *)(v25 - 8);
  uint64_t v108 = v25;
  MEMORY[0x270FA5388](v25);
  double v102 = (char *)&v97 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for StockEarningsModel();
  uint64_t v99 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v98 = (uint64_t)&v97 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)&v97 - v30;
  uint64_t v32 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x270FA5388](v32 - 8);
  uint64_t v34 = (char *)&v97 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = (char *)&v97 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = (char *)&v97 - v39;
  MEMORY[0x270FA5388](v41);
  uint64_t v43 = (char *)&v97 - v42;
  sub_20A6BD018(0, (unint64_t *)&qword_26AC69D80, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, sub_20A44D39C, MEMORY[0x263F7D2D8]);
  uint64_t v116 = v44;
  sub_20A8C8330();
  uint64_t v114 = v35;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      ((void (*)(char *, uint64_t))v112[1])(v43, v113);
      goto LABEL_10;
    case 3u:
      sub_20A42C53C();
      uint64_t v49 = v48;
      uint64_t v50 = (uint64_t)&v43[*(int *)(v48 + 48)];
      uint64_t v51 = (uint64_t)&v43[*(int *)(v48 + 64)];
      double v52 = v112;
      uint64_t v53 = v113;
      uint64_t v54 = v110;
      ((void (*)(char *, char *, uint64_t))v112[4])(v110, v43, v113);
      uint64_t v55 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
      uint64_t v56 = v109;
      sub_20A6BD320(v50, v109, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      sub_20A6BD320(v51, v111, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      uint64_t v57 = (uint64_t)&v37[*(int *)(v49 + 48)];
      ((void (*)(char *, char *, uint64_t))v52[2])(v37, v54, v53);
      uint64_t v58 = v115 + *(int *)(type metadata accessor for StockFeedReplaceQuoteDataBlueprintModifier() + 20);
      uint64_t v59 = v106;
      sub_20A6BD1F8(v58, v106, &qword_26AC68FB0, v55);
      uint64_t v60 = v56;
      uint64_t v61 = v105;
      sub_20A6BD1F8(v60, v105, &qword_26AC68FB0, v55);
      uint64_t v63 = v107;
      uint64_t v62 = v108;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v59, 1, v108) == 1)
      {
        uint64_t v64 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
        sub_20A6BD320(v61, v57, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
        sub_20A6BD13C(v59, &qword_26AC68FB0, v64);
      }
      else
      {
        sub_20A6BD13C(v61, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 32))(v57, v59, v62);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v63 + 56))(v57, 0, 1, v62);
      }
      uint64_t v76 = (uint64_t)v103;
      uint64_t v75 = (uint64_t)v104;
      uint64_t v77 = (uint64_t)&v37[*(int *)(v49 + 64)];
      uint64_t v78 = type metadata accessor for StockFeedQuoteData();
      long long v79 = (void (*)(uint64_t))MEMORY[0x263F7A890];
      sub_20A6BD1F8(v58 + *(int *)(v78 + 20), v75, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      uint64_t v80 = v111;
      sub_20A6BD1F8(v111, v76, &qword_26AC68DA0, v79);
      uint64_t v81 = sub_20A8C2CB0();
      uint64_t v82 = *(void *)(v81 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v75, 1, v81) == 1)
      {
        id v83 = (void (*)(uint64_t))MEMORY[0x263F7A890];
        sub_20A6BD320(v76, v77, &qword_26AC68DA0, MEMORY[0x263F7A890]);
        sub_20A6BD13C(v75, &qword_26AC68DA0, v83);
      }
      else
      {
        sub_20A6BD13C(v76, &qword_26AC68DA0, MEMORY[0x263F7A890]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 32))(v77, v75, v81);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v82 + 56))(v77, 0, 1, v81);
      }
      swift_storeEnumTagMultiPayload();
      sub_20A44D39C();
      uint64_t v45 = v117;
      sub_20A8C8320();
      sub_20A6BD13C(v80, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      sub_20A6BD13C(v109, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      ((void (*)(char *, uint64_t))v112[1])(v110, v113);
      goto LABEL_20;
    case 4u:
      sub_20A6BD38C((uint64_t)v43, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
      uint64_t v65 = (int *)type metadata accessor for StockFeedReplaceQuoteDataBlueprintModifier();
      uint64_t v66 = v115;
      uint64_t v67 = v115 + v65[5];
      sub_20A6BD1F8(v67, (uint64_t)v24, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      uint64_t v69 = v107;
      uint64_t v68 = v108;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v24, 1, v108) == 1)
      {
        sub_20A6BD13C((uint64_t)v24, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
        sub_20A6BD264((uint64_t)v31, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
        swift_storeEnumTagMultiPayload();
        sub_20A44D39C();
        double v70 = v31;
        uint64_t v45 = v117;
        sub_20A8C8320();
        uint64_t v46 = type metadata accessor for StockEarningsModel;
        uint64_t v47 = (uint64_t)v70;
      }
      else
      {
        id v84 = *(void (**)(char *, char *, uint64_t))(v69 + 32);
        uint64_t v113 = v67;
        id v85 = v102;
        v84(v102, v24, v68);
        long long v112 = __swift_project_boxed_opaque_existential_1((void *)(v66 + v65[9]), *(void *)(v66 + v65[9] + 24));
        uint64_t v86 = (uint64_t)v31;
        uint64_t v87 = (uint64_t)v100;
        unint64_t v88 = v85;
        uint64_t v89 = v68;
        (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v100, v88, v68);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v69 + 56))(v87, 0, 1, v68);
        uint64_t v90 = type metadata accessor for StockFeedQuoteData();
        double v91 = (unsigned int (*)(char *, uint64_t, uint64_t))(v66 + v65[7]);
        uint64_t v92 = v66 + v65[8];
        uint64_t v93 = v101;
        sub_20A444CF0(v86, v87, v113 + *(int *)(v90 + 20), v91, v92, v101);
        sub_20A6BD13C(v87, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
        uint64_t v94 = v86;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v93, 1, v27) == 1)
        {
          (*(void (**)(char *, uint64_t))(v69 + 8))(v102, v89);
          sub_20A6BD198(v86, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
          sub_20A6BD13C(v93, qword_26AC70910, (void (*)(uint64_t))type metadata accessor for StockEarningsModel);
          uint64_t v72 = v116;
          uint64_t v45 = v117;
          uint64_t v73 = *(void *)(v116 - 8);
          uint64_t v74 = 1;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56))(v45, v74, 1, v72);
        }
        uint64_t v95 = v98;
        sub_20A6BD38C(v93, v98, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
        sub_20A6BD264(v95, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
        swift_storeEnumTagMultiPayload();
        sub_20A44D39C();
        uint64_t v45 = v117;
        sub_20A8C8320();
        sub_20A6BD198(v95, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v102, v89);
        uint64_t v47 = v94;
        uint64_t v46 = type metadata accessor for StockEarningsModel;
      }
LABEL_19:
      sub_20A6BD198(v47, (uint64_t (*)(void))v46);
LABEL_20:
      uint64_t v74 = 0;
      uint64_t v72 = v116;
      uint64_t v73 = *(void *)(v116 - 8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56))(v45, v74, 1, v72);
    case 5u:
    case 6u:
    case 7u:
    case 9u:
      sub_20A6BD198((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
      goto LABEL_10;
    case 8u:
      sub_20A46CF6C();
      swift_release();
      uint64_t v71 = sub_20A8CD2C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v71 - 8) + 8))(v43, v71);
      goto LABEL_10;
    case 0xAu:
LABEL_10:
      uint64_t v72 = v116;
      uint64_t v45 = v117;
      uint64_t v73 = *(void *)(v116 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16))(v117, a1, v116);
      uint64_t v74 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56))(v45, v74, 1, v72);
    default:
      sub_20A6BD38C((uint64_t)v43, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      sub_20A6BB304((uint64_t)v34, (uint64_t)v40);
      swift_storeEnumTagMultiPayload();
      sub_20A44D39C();
      uint64_t v45 = v117;
      sub_20A8C8320();
      uint64_t v46 = type metadata accessor for StockFeedMastheadModel;
      uint64_t v47 = (uint64_t)v34;
      goto LABEL_19;
  }
}

uint64_t sub_20A6BC66C()
{
  return sub_20A6BC6FC(&qword_26AC7E848, (void (*)(uint64_t))type metadata accessor for StockFeedReplaceQuoteDataBlueprintModifier);
}

uint64_t sub_20A6BC6B4()
{
  return sub_20A6BC6FC(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
}

uint64_t sub_20A6BC6FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6BC744(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A6BCBE0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6BC788@<X0>(uint64_t a1@<X8>)
{
  return sub_20A6BADF4(*(void *)(v1 + 16), a1);
}

void sub_20A6BC7A4()
{
  if (!qword_26763D370)
  {
    sub_20A6BCBE0(255, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
    sub_20A8C8B80();
    sub_20A8C8E60();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26763D370);
    }
  }
}

void sub_20A6BC84C()
{
  if (!qword_26AC6A258)
  {
    sub_20A6BC9B8();
    sub_20A6BC9F8();
    sub_20A6BCCA4();
    sub_20A6BCE3C();
    type metadata accessor for StockFeedViewController();
    sub_20A6BC6FC(&qword_26AC6A840, (void (*)(uint64_t))sub_20A6BC9F8);
    sub_20A6BC6FC(&qword_26AC6A6D0, (void (*)(uint64_t))sub_20A6BCCA4);
    sub_20A6BC6FC(&qword_26AC6A8B8, (void (*)(uint64_t))sub_20A6BCE3C);
    unint64_t v0 = sub_20A8C94D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A258);
    }
  }
}

unint64_t sub_20A6BC9B8()
{
  unint64_t result = qword_26AC7F910;
  if (!qword_26AC7F910)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC7F910);
  }
  return result;
}

void sub_20A6BC9F8()
{
  if (!qword_26AC6A848)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
    sub_20A6BCBE0(255, (unint64_t *)&qword_26AC6A030, MEMORY[0x263F7D550]);
    sub_20A50BA74();
    type metadata accessor for StockFeedBlueprintViewCellProvider();
    type metadata accessor for StockFeedBlueprintViewSupplementaryViewProvider();
    sub_20A6BC744((unint64_t *)&qword_26AC6A020, (unint64_t *)&qword_26AC6A030, v0);
    sub_20A6BC6FC((unint64_t *)&qword_26AC6A3E8, (void (*)(uint64_t))sub_20A50BA74);
    sub_20A6BC6FC(&qword_26AC7C8B0, (void (*)(uint64_t))type metadata accessor for StockFeedBlueprintViewCellProvider);
    sub_20A6BC6FC(&qword_26AC6B3D8, (void (*)(uint64_t))type metadata accessor for StockFeedBlueprintViewSupplementaryViewProvider);
    sub_20A6BC6FC(&qword_26AC72248, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
    unint64_t v1 = sub_20A8CABB0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AC6A848);
    }
  }
}

void sub_20A6BCBE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for StockFeedSectionDescriptor();
    v8[1] = type metadata accessor for StockFeedModel();
    v8[2] = sub_20A6BC6FC(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    v8[3] = sub_20A44D39C();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_20A6BCCA4()
{
  if (!qword_26AC6A6D8)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
    sub_20A6BCBE0(255, (unint64_t *)&qword_26AC6A030, MEMORY[0x263F7D550]);
    sub_20A50BA74();
    type metadata accessor for StockFeedViewController();
    sub_20A6BC744((unint64_t *)&qword_26AC6A020, (unint64_t *)&qword_26AC6A030, v0);
    sub_20A6BC6FC((unint64_t *)&qword_26AC6A3E8, (void (*)(uint64_t))sub_20A50BA74);
    sub_20A6BC6FC(&qword_26AC75198, (void (*)(uint64_t))type metadata accessor for StockFeedViewController);
    sub_20A6BC6FC(&qword_26AC72248, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
    unint64_t v1 = sub_20A8CA970();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AC6A6D8);
    }
  }
}

void sub_20A6BCE3C()
{
  if (!qword_26AC6A8C0)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
    sub_20A6BCBE0(255, (unint64_t *)&qword_26AC6A030, MEMORY[0x263F7D550]);
    sub_20A50BA74();
    sub_20A6BC744((unint64_t *)&qword_26AC6A020, (unint64_t *)&qword_26AC6A030, v0);
    sub_20A6BC6FC((unint64_t *)&qword_26AC6A3E8, (void (*)(uint64_t))sub_20A50BA74);
    unint64_t v1 = sub_20A8CAD80();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AC6A8C0);
    }
  }
}

uint64_t sub_20A6BCF48()
{
  return sub_20A6BC6FC(&qword_26AC6A250, (void (*)(uint64_t))sub_20A6BC84C);
}

unint64_t sub_20A6BCF7C()
{
  unint64_t result = qword_26AC6A668;
  if (!qword_26AC6A668)
  {
    sub_20A6BD018(255, &qword_26AC6A670, (uint64_t (*)(uint64_t))sub_20A6BC84C, sub_20A6BCF48, MEMORY[0x263F7DCD8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6A668);
  }
  return result;
}

void sub_20A6BD018(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_20A6BD098(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A6BD018(255, (unint64_t *)&qword_26AC69D80, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, sub_20A44D39C, MEMORY[0x263F7D2D8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6BD120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A6BB7A8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_20A6BD13C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A6BD2CC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A6BD198(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A6BD1F8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A6BD2CC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A6BD264(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_20A6BD2CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A6BD320(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A6BD2CC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A6BD38C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_20A6BD3F4(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = (void *)MEMORY[0x2105289B0](v1);
  if (v2)
  {
    uint64_t v3 = v2;
    objc_msgSend(v2, sel_becomeFirstResponder);
  }
}

uint64_t type metadata accessor for StockListSectionHeaderViewRenderer()
{
  return self;
}

unint64_t sub_20A6BD474(uint64_t a1)
{
  unint64_t result = sub_20A6BD49C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_20A6BD49C()
{
  unint64_t result = qword_26AC7CB98;
  if (!qword_26AC7CB98)
  {
    type metadata accessor for StockListSectionHeaderViewRenderer();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7CB98);
  }
  return result;
}

uint64_t type metadata accessor for DebugMenuCommandHandler()
{
  return self;
}

void sub_20A6BD514()
{
  sub_20A6BD570();
  if (v0)
  {
    id v1 = v0;
    sub_20A8C80D0();
  }
}

void sub_20A6BD570()
{
  id v0 = objc_msgSend(self, sel_sharedApplication);
  id v1 = objc_msgSend(v0, sel_connectedScenes);

  sub_20A42CFF0(0, (unint64_t *)&qword_26763CFD0);
  sub_20A6BD9A4();
  uint64_t v2 = sub_20A8CE7F0();

  if ((v2 & 0xC000000000000001) != 0)
  {
    sub_20A8CF2C0();
    sub_20A8CE810();
    uint64_t v2 = v31;
    uint64_t v3 = v32;
    uint64_t v4 = v33;
    uint64_t v5 = v34;
    unint64_t v6 = v35;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v3 = v2 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(v2 + 56);
  }
  int64_t v29 = (unint64_t)(v4 + 64) >> 6;
  uint64_t v26 = v3;
  uint64_t v27 = v2;
  while (1)
  {
    if (v2 < 0)
    {
      uint64_t v10 = v6;
      if (!sub_20A8CF310()) {
        goto LABEL_46;
      }
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v13 = v30;
      swift_unknownObjectRelease();
      uint64_t v12 = v5;
      if (!v30) {
        goto LABEL_46;
      }
    }
    else
    {
      if (v6)
      {
        uint64_t v10 = (v6 - 1) & v6;
        unint64_t v11 = __clz(__rbit64(v6)) | (v5 << 6);
        uint64_t v12 = v5;
      }
      else
      {
        int64_t v14 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_48;
        }
        if (v14 >= v29) {
          goto LABEL_46;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v14);
        uint64_t v12 = v5 + 1;
        if (!v15)
        {
          uint64_t v12 = v5 + 2;
          if (v5 + 2 >= v29) {
            goto LABEL_46;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v5 + 3;
            if (v5 + 3 >= v29) {
              goto LABEL_46;
            }
            unint64_t v15 = *(void *)(v3 + 8 * v12);
            if (!v15)
            {
              uint64_t v12 = v5 + 4;
              if (v5 + 4 >= v29) {
                goto LABEL_46;
              }
              unint64_t v15 = *(void *)(v3 + 8 * v12);
              if (!v15)
              {
                uint64_t v16 = v5 + 5;
                while (v29 != v16)
                {
                  unint64_t v15 = *(void *)(v3 + 8 * v16++);
                  if (v15)
                  {
                    uint64_t v12 = v16 - 1;
                    goto LABEL_29;
                  }
                }
LABEL_46:
                sub_20A6BDA0C();
                return;
              }
            }
          }
        }
LABEL_29:
        uint64_t v10 = (v15 - 1) & v15;
        unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      id v13 = *(id *)(*(void *)(v2 + 48) + 8 * v11);
      if (!v13) {
        goto LABEL_46;
      }
    }
    if (!objc_msgSend(v13, sel_activationState))
    {
      self;
      uint64_t v17 = swift_dynamicCastObjCClass();
      if (v17) {
        break;
      }
    }
LABEL_9:

    uint64_t v5 = v12;
    unint64_t v6 = v10;
  }
  uint64_t v18 = (void *)v17;
  id v28 = v13;
  id v19 = objc_msgSend(v18, sel_windows);
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC823A0);
  unint64_t v20 = sub_20A8CE5E0();

  if (!(v20 >> 62))
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v21) {
      goto LABEL_35;
    }
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_20A8CF540();
  swift_bridgeObjectRelease();
  if (!v21)
  {
LABEL_8:

    swift_bridgeObjectRelease();
    uint64_t v3 = v26;
    uint64_t v2 = v27;
    goto LABEL_9;
  }
LABEL_35:
  uint64_t v22 = 4;
  while (1)
  {
    id v23 = (v20 & 0xC000000000000001) != 0
        ? (id)MEMORY[0x210527700](v22 - 4, v20)
        : *(id *)(v20 + 8 * v22);
    uint64_t v24 = v23;
    uint64_t v25 = v22 - 3;
    if (__OFADD__(v22 - 4, 1)) {
      break;
    }
    sub_20A8C80E0();
    if (swift_dynamicCastClass())
    {
      swift_bridgeObjectRelease();

      sub_20A6BDA0C();
      return;
    }

    ++v22;
    if (v25 == v21) {
      goto LABEL_8;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
}

unint64_t sub_20A6BD9A4()
{
  unint64_t result = qword_26763EB70;
  if (!qword_26763EB70)
  {
    sub_20A42CFF0(255, (unint64_t *)&qword_26763CFD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763EB70);
  }
  return result;
}

uint64_t sub_20A6BDA0C()
{
  return swift_release();
}

id sub_20A6BDA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_20A4BB2F0();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for QuoteViewModel();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v35 = (uint64_t)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = a3;
  int64_t v14 = *(void **)(a3 + OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_mainQuoteView);
  objc_msgSend(v14, sel_setFrame_, *(double *)(a2 + 32), *(double *)(a2 + 40), *(double *)(a2 + 48), *(double *)(a2 + 56));
  uint64_t v34 = v4;
  long long v15 = *(_OWORD *)(a2 + 176);
  v38[6] = *(_OWORD *)(a2 + 160);
  v38[7] = v15;
  uint64_t v39 = *(void *)(a2 + 192);
  long long v16 = *(_OWORD *)(a2 + 112);
  v38[2] = *(_OWORD *)(a2 + 96);
  v38[3] = v16;
  long long v17 = *(_OWORD *)(a2 + 144);
  v38[4] = *(_OWORD *)(a2 + 128);
  v38[5] = v17;
  long long v18 = *(_OWORD *)(a2 + 80);
  v38[0] = *(_OWORD *)(a2 + 64);
  v38[1] = v18;
  sub_20A6B1D7C(a1, (double *)v38, (uint64_t)v14);
  uint64_t v19 = type metadata accessor for QuoteSummaryViewModel();
  sub_20A4BB348(a1 + *(int *)(v19 + 20), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    unint64_t v20 = (uint64_t (*)(void))sub_20A4BB2F0;
    uint64_t v21 = (uint64_t)v10;
LABEL_5:
    sub_20A6BDF0C(v21, v20);
    uint64_t v23 = v36;
    objc_msgSend(*(id *)(v36 + OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_separatorBarView), sel_setHidden_, 1);
    return objc_msgSend(*(id *)(v23 + OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_offHoursQuoteView), sel_setHidden_, 1);
  }
  uint64_t v22 = v35;
  sub_20A6BDEA4((uint64_t)v10, v35, (uint64_t (*)(void))type metadata accessor for QuoteViewModel);
  sub_20A6BDEA4(a2 + 264, (uint64_t)v37, (uint64_t (*)(void))sub_20A4BB3D0);
  sub_20A6BDEA4((uint64_t)v37, (uint64_t)v42, (uint64_t (*)(void))sub_20A4BB3D0);
  if (sub_20A478D68((uint64_t)v42) == 1)
  {
    unint64_t v20 = (uint64_t (*)(void))type metadata accessor for QuoteViewModel;
    uint64_t v21 = v22;
    goto LABEL_5;
  }
  v40[6] = v42[6];
  v40[7] = v42[7];
  uint64_t v41 = v43;
  v40[2] = v42[2];
  v40[3] = v42[3];
  v40[4] = v42[4];
  void v40[5] = v42[5];
  uint64_t v25 = v36;
  uint64_t v26 = *(void **)(v36 + OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_separatorBarView);
  v40[0] = v42[0];
  v40[1] = v42[1];
  objc_msgSend(v26, sel_setFrame_, *(double *)(a2 + 200), *(double *)(a2 + 208), *(double *)(a2 + 216), *(double *)(a2 + 224));
  uint64_t v27 = *(void **)(v25 + OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_offHoursQuoteView);
  objc_msgSend(v27, sel_setFrame_, *(double *)(a2 + 232), *(double *)(a2 + 240), *(double *)(a2 + 248), *(double *)(a2 + 256));
  uint64_t v28 = v34;
  int64_t v29 = (void *)(v34 + 16);
  swift_beginAccess();
  uint64_t v30 = __swift_project_boxed_opaque_existential_1(v29, *(void *)(v28 + 40));
  uint64_t v32 = *(void *)(*v30 + 40);
  uint64_t v31 = *(void *)(*v30 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v30 + 16), v32);
  uint64_t v33 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v31 + 16) + 136))(v32);
  objc_msgSend(v26, sel_setBackgroundColor_, v33);

  sub_20A6B1D7C(v22, (double *)v40, (uint64_t)v27);
  objc_msgSend(v26, sel_setHidden_, 0);
  objc_msgSend(v27, sel_setHidden_, 0);
  return (id)sub_20A6BDF0C(v22, (uint64_t (*)(void))type metadata accessor for QuoteViewModel);
}

uint64_t type metadata accessor for QuoteSummaryViewRenderer()
{
  return self;
}

unint64_t sub_20A6BDE28(uint64_t a1)
{
  unint64_t result = sub_20A6BDE50();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_20A6BDE50()
{
  unint64_t result = qword_26AC75B60;
  if (!qword_26AC75B60)
  {
    type metadata accessor for QuoteSummaryViewRenderer();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC75B60);
  }
  return result;
}

uint64_t sub_20A6BDEA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A6BDF0C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A6BDF6C(uint64_t a1)
{
  uint64_t v26 = *v1;
  uint64_t v4 = v1[5];
  uint64_t v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v4);
  uint64_t v25 = v3;
  uint64_t v5 = *(void *)(v3 + 8);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 8);
  v28[3] = v4;
  uint64_t v28[4] = v3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
  v6(a1, v4, v5);
  uint64_t v9 = v1[10];
  uint64_t v8 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v9);
  uint64_t v10 = *(void *)(v8 + 8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 8);
  v27[3] = v9;
  v27[4] = v8;
  uint64_t v12 = __swift_allocate_boxed_opaque_existential_1(v27);
  uint64_t v13 = v11(a1, v9, v10);
  double v14 = MEMORY[0x270FA5388](v13);
  long long v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t *, uint64_t, double))(v17 + 16))(v16, boxed_opaque_existential_1, v4, v14);
  double v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v22 + 16))(v21, v12, v9, v19);
  uint64_t v23 = sub_20A58ED18((uint64_t)v16, (uint64_t)v21, v26, v4, v9, v25, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return v23;
}

id sub_20A6BE1C0(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  int v3 = a1;
  uint64_t v4 = v2 + 2;
  if (v3 == 2)
  {
    uint64_t v6 = v2[5];
    uint64_t v5 = v2[6];
    __swift_project_boxed_opaque_existential_1(v4, v6);
    uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)(v5 + 16) + 40))(v6);
  }
  else
  {
    uint64_t v8 = v2[5];
    uint64_t v9 = v2[6];
    __swift_project_boxed_opaque_existential_1(v4, v8);
    if (v3) {
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(v8, v9);
    }
    else {
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
    }
  }
  uint64_t v10 = (void *)v7;
  uint64_t v11 = v2 + 7;
  uint64_t v13 = v2[10];
  uint64_t v12 = v2[11];
  __swift_project_boxed_opaque_existential_1(v11, v13);
  double v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v13, v12);
  id v15 = objc_msgSend(v10, sel_stocksAccessibilityAdjustedForIncreaseContrastAgainstWithBackgroundColor_, v14);

  return v15;
}

uint64_t type metadata accessor for QuoteViewStyler()
{
  return self;
}

uint64_t sub_20A6BE300@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_20A6BDF6C(a1);
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for AudioSeekCommandHandler()
{
  return self;
}

uint64_t sub_20A6BE350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A6BE37C(a3, a4);
}

uint64_t sub_20A6BE37C(uint64_t a1, uint64_t a2)
{
  uint64_t v131 = a2;
  uint64_t v2 = sub_20A8C6C60();
  uint64_t v128 = *(void *)(v2 - 8);
  uint64_t v129 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v111 = (char *)&v109 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v116 = (char *)&v109 - v5;
  MEMORY[0x270FA5388](v6);
  uint64_t v120 = (char **)((char *)&v109 - v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v124 = (char **)((char *)&v109 - v9);
  uint64_t v125 = sub_20A8CD640();
  uint64_t v130 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388](v125);
  uint64_t v110 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v115 = (char *)&v109 - v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v113 = (char *)&v109 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v119 = (char *)&v109 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v117 = (char *)&v109 - v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v123 = (char *)&v109 - v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v121 = (char *)&v109 - v22;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v109 - v24;
  uint64_t v26 = sub_20A8C71C0();
  uint64_t v126 = *(void *)(v26 - 8);
  uint64_t v127 = v26;
  MEMORY[0x270FA5388](v26);
  uint64_t v114 = (uint64_t)&v109 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v118 = (uint64_t)&v109 - v29;
  MEMORY[0x270FA5388](v30);
  uint64_t v122 = (uint64_t)&v109 - v31;
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)&v109 - v33;
  uint64_t v35 = sub_20A8CD1F0();
  uint64_t v36 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v109 = (char *)&v109 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  long long v112 = (char *)&v109 - v39;
  MEMORY[0x270FA5388](v40);
  uint64_t v42 = (char *)&v109 - v41;
  MEMORY[0x270FA5388](v43);
  uint64_t v45 = (char *)&v109 - v44;
  sub_20A8CB840();
  sub_20A8CB780();
  char v46 = sub_20A8CB640();
  swift_release();
  if (v46)
  {
    uint64_t v47 = v132[10];
    uint64_t v122 = v132[11];
    uint64_t v123 = (char *)v47;
    uint64_t v120 = __swift_project_boxed_opaque_existential_1(v132 + 7, v47);
    sub_20A6BF0E8();
    sub_20A8CD550();
    double v48 = v133;
    sub_20A8CD570();
    uint64_t v49 = v34;
    sub_20A4B0120((uint64_t)v34);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v45, v35);
    sub_20A8CD580();
    uint64_t v50 = v130;
    uint64_t v51 = v121;
    uint64_t v52 = v125;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v121, v25, v125);
    int v53 = (*(uint64_t (**)(char *, uint64_t))(v50 + 88))(v51, v52);
    if (v53 == *MEMORY[0x263F59CC0])
    {
      uint64_t v54 = (unsigned int *)MEMORY[0x263F79D70];
LABEL_16:
      uint64_t v84 = v128;
      uint64_t v83 = v129;
      id v85 = v124;
      (*(void (**)(void *, void, uint64_t))(v128 + 104))(v124, *v54, v129);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v25, v52);
      (*(void (**)(char *, void *, char *, double))(v122 + 48))(v49, v85, v123, v48);
      (*(void (**)(void *, uint64_t))(v84 + 8))(v85, v83);
      (*(void (**)(char *, uint64_t))(v126 + 8))(v49, v127);
      __swift_project_boxed_opaque_existential_1(v132 + 2, v132[5]);
      sub_20A8CD550();
      return sub_20A8C5550();
    }
    if (v53 == *MEMORY[0x263F59CD0])
    {
      uint64_t v54 = (unsigned int *)MEMORY[0x263F79D80];
      goto LABEL_16;
    }
    if (v53 == *MEMORY[0x263F59CC8])
    {
      uint64_t v54 = (unsigned int *)MEMORY[0x263F79D78];
      goto LABEL_16;
    }
    goto LABEL_34;
  }
  uint64_t v55 = v36;
  uint64_t v56 = v35;
  uint64_t v57 = v132;
  sub_20A8CB700();
  char v58 = sub_20A8CB640();
  swift_release();
  if (v58)
  {
    uint64_t v59 = v57;
    uint64_t v60 = v57 + 7;
    uint64_t v61 = v57[10];
    uint64_t v62 = v59[11];
    uint64_t v124 = __swift_project_boxed_opaque_existential_1(v60, v61);
    sub_20A6BF0E8();
    sub_20A8CD550();
    double v63 = v133;
    sub_20A8CD570();
    sub_20A4B0120(v122);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v42, v56);
    uint64_t v64 = v123;
    sub_20A8CD580();
    uint64_t v65 = v130;
    uint64_t v66 = v117;
    uint64_t v67 = v125;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v117, v64, v125);
    int v68 = (*(uint64_t (**)(char *, uint64_t))(v65 + 88))(v66, v67);
    if (v68 == *MEMORY[0x263F59CC0])
    {
      uint64_t v69 = (unsigned int *)MEMORY[0x263F79D70];
LABEL_24:
      uint64_t v98 = v128;
      uint64_t v97 = v129;
      uint64_t v99 = v120;
      (*(void (**)(void *, void, uint64_t))(v128 + 104))(v120, *v69, v129);
      (*(void (**)(char *, uint64_t))(v130 + 8))(v123, v67);
      uint64_t v100 = v122;
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t, double))(v62 + 56))(v122, v99, v61, v62, v63);
      (*(void (**)(void *, uint64_t))(v98 + 8))(v99, v97);
      (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v100, v127);
      __swift_project_boxed_opaque_existential_1(v59 + 2, v59[5]);
      sub_20A8CD550();
      return sub_20A8C5520();
    }
    if (v68 == *MEMORY[0x263F59CD0])
    {
      uint64_t v69 = (unsigned int *)MEMORY[0x263F79D80];
      goto LABEL_24;
    }
    if (v68 == *MEMORY[0x263F59CC8])
    {
      uint64_t v69 = (unsigned int *)MEMORY[0x263F79D78];
      goto LABEL_24;
    }
LABEL_34:
    uint64_t result = sub_20A8CF520();
    __break(1u);
    return result;
  }
  sub_20A8CB740();
  char v70 = sub_20A8CB640();
  swift_release();
  uint64_t v71 = v57;
  if (v70)
  {
    uint64_t v72 = v57 + 7;
    uint64_t v73 = v57[10];
    uint64_t v74 = v57[11];
    uint64_t v124 = __swift_project_boxed_opaque_existential_1(v72, v71[10]);
    sub_20A6BF0E8();
    sub_20A8CD550();
    double v75 = v133;
    uint64_t v76 = v112;
    sub_20A8CD570();
    sub_20A4B0120(v118);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v76, v56);
    uint64_t v77 = v119;
    sub_20A8CD580();
    uint64_t v78 = v130;
    long long v79 = v113;
    uint64_t v80 = v125;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v113, v77, v125);
    int v81 = (*(uint64_t (**)(char *, uint64_t))(v78 + 88))(v79, v80);
    if (v81 == *MEMORY[0x263F59CC0])
    {
      uint64_t v82 = (unsigned int *)MEMORY[0x263F79D70];
    }
    else if (v81 == *MEMORY[0x263F59CD0])
    {
      uint64_t v82 = (unsigned int *)MEMORY[0x263F79D80];
    }
    else
    {
      if (v81 != *MEMORY[0x263F59CC8]) {
        goto LABEL_34;
      }
      uint64_t v82 = (unsigned int *)MEMORY[0x263F79D78];
    }
    uint64_t v102 = v128;
    uint64_t v101 = v129;
    char v103 = v116;
    (*(void (**)(char *, void, uint64_t))(v128 + 104))(v116, *v82, v129);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v119, v80);
    uint64_t v104 = v118;
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t, double))(v74 + 64))(v118, v103, v73, v74, v75);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v103, v101);
    (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v104, v127);
    __swift_project_boxed_opaque_existential_1(v71 + 2, v71[5]);
    sub_20A8CD550();
    return sub_20A8C5540();
  }
  sub_20A8CB710();
  char v87 = sub_20A8CB640();
  uint64_t result = swift_release();
  if (v87)
  {
    uint64_t v88 = v57[10];
    uint64_t v89 = v57[11];
    uint64_t v124 = __swift_project_boxed_opaque_existential_1(v57 + 7, v88);
    sub_20A6BF0E8();
    uint64_t v90 = v109;
    sub_20A8CD570();
    sub_20A4B0120(v114);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v90, v56);
    double v91 = v115;
    sub_20A8CD580();
    uint64_t v92 = v130;
    uint64_t v93 = v110;
    uint64_t v94 = v125;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v110, v91, v125);
    int v95 = (*(uint64_t (**)(char *, uint64_t))(v92 + 88))(v93, v94);
    if (v95 == *MEMORY[0x263F59CC0])
    {
      uint64_t v96 = (unsigned int *)MEMORY[0x263F79D70];
    }
    else if (v95 == *MEMORY[0x263F59CD0])
    {
      uint64_t v96 = (unsigned int *)MEMORY[0x263F79D80];
    }
    else
    {
      if (v95 != *MEMORY[0x263F59CC8]) {
        goto LABEL_34;
      }
      uint64_t v96 = (unsigned int *)MEMORY[0x263F79D78];
    }
    uint64_t v106 = v128;
    uint64_t v105 = v129;
    uint64_t v107 = v111;
    (*(void (**)(char *, void, uint64_t))(v128 + 104))(v111, *v96, v129);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v115, v94);
    uint64_t v108 = v114;
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v89 + 32))(v114, v107, v88, v89);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v107, v105);
    (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v108, v127);
    __swift_project_boxed_opaque_existential_1(v71 + 2, v71[5]);
    sub_20A8CD550();
    return sub_20A8C5510();
  }
  return result;
}

void sub_20A6BF0E8()
{
  if (!qword_26AC6B248)
  {
    unint64_t v0 = sub_20A8CD5A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6B248);
    }
  }
}

uint64_t sub_20A6BF140()
{
  swift_unknownObjectWeakDestroy();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManageWatchlistsRouter()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for ValueChangeTrend(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A6BF278);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ValueChangeTrend()
{
  return &type metadata for ValueChangeTrend;
}

uint64_t sub_20A6BF2B0(char *a1, char *a2)
{
  return sub_20A44FA90(*a1, *a2);
}

uint64_t sub_20A6BF2BC()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A6BF32C()
{
  sub_20A8CE360();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A6BF388()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A6BF3F4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_20A8CF5B0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_20A6BF454(uint64_t *a1@<X8>)
{
  uint64_t v2 = 28789;
  if (*v1) {
    uint64_t v2 = 1853321060;
  }
  unint64_t v3 = 0xE200000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_20A6BF480()
{
  return sub_20A8CE5A0();
}

uint64_t sub_20A6BF4E0()
{
  return sub_20A8CE580();
}

unint64_t sub_20A6BF534()
{
  unint64_t result = qword_26763D378;
  if (!qword_26763D378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D378);
  }
  return result;
}

unint64_t sub_20A6BF588()
{
  unint64_t result = qword_26763D380;
  if (!qword_26763D380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D380);
  }
  return result;
}

uint64_t sub_20A6BF5DC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_20A68C494(0, v1, 0);
    uint64_t v3 = v16;
    char v4 = (unsigned __int8 *)(a1 + 32);
    unint64_t v5 = (unint64_t)"neutral-highlight";
    unint64_t v6 = (unint64_t)"positive-highlight";
    do
    {
      int v7 = *v4++;
      unint64_t v8 = 0x800000020A8F8000;
      unint64_t v9 = 0xD000000000000011;
      switch(v7)
      {
        case 1:
          unint64_t v8 = v5 | 0x8000000000000000;
          goto LABEL_6;
        case 2:
          unint64_t v8 = v6 | 0x8000000000000000;
LABEL_6:
          unint64_t v9 = 0xD000000000000012;
          break;
        case 3:
          unint64_t v8 = 0xEB00000000737275;
          unint64_t v9 = 0x6F682D7265746661;
          break;
        default:
          break;
      }
      uint64_t v17 = v3;
      unint64_t v11 = *(void *)(v3 + 16);
      unint64_t v10 = *(void *)(v3 + 24);
      if (v11 >= v10 >> 1)
      {
        uint64_t v13 = (const char *)v5;
        uint64_t v15 = (const char *)v6;
        sub_20A68C494(v10 > 1, v11 + 1, 1);
        unint64_t v6 = (unint64_t)v15;
        unint64_t v5 = (unint64_t)v13;
        uint64_t v3 = v17;
      }
      *(void *)(v3 + 16) = v11 + 1;
      uint64_t v12 = v3 + 16 * v11;
      *(void *)(v12 + 32) = v9;
      *(void *)(v12 + 40) = v8;
      --v1;
    }
    while (v1);
  }
  sub_20A6C3024(&qword_26AC7F5A8, MEMORY[0x263F7CC00]);
  sub_20A8CDEB0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A6BF7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v151 = a1;
  uint64_t v154 = (const char *)sub_20A8CDC70();
  uint64_t v157 = (const char *)*((void *)v154 - 1);
  MEMORY[0x270FA5388](v154);
  uint64_t v141 = (char *)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v8 = (char *)&v130 - v7;
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A6C2D90(0, &qword_26AC7F600, (unint64_t *)&qword_26AC7F5F8, MEMORY[0x263F7CC80], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  id v140 = (char *)&v130 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  id v152 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v130 - v13);
  sub_20A6C2F04(0, &qword_26AC7F518, MEMORY[0x263F7CB58]);
  MEMORY[0x270FA5388](v14 - 8);
  id v142 = (char *)&v130 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v153 = (char *)&v130 - v17;
  uint64_t v18 = sub_20A8CDDA0();
  uint64_t v155 = *(void *)(v18 - 8);
  uint64_t v156 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v139 = (char *)&v130 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v147 = (char *)&v130 - v21;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v130 - v23;
  MEMORY[0x270FA5388](v25);
  id v143 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v130 - v26);
  uint64_t v27 = sub_20A8CDBE0();
  uint64_t v145 = *(void *)(v27 - 8);
  uint64_t v146 = v27;
  MEMORY[0x270FA5388](v27);
  uint64_t v138 = (char *)&v130 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  id v144 = (void (*)(char *, const char *))((char *)&v130 - v30);
  uint64_t v31 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7CB98];
  sub_20A6C2D90(0, &qword_26AC7F548, (unint64_t *)&qword_26AC7F540, MEMORY[0x263F7CB98], v9);
  MEMORY[0x270FA5388](v32 - 8);
  uint64_t v34 = (char *)&v130 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = (char *)&v130 - v36;
  sub_20A6C2DF8(0, (unint64_t *)&qword_26AC7F540, v31);
  uint64_t v39 = v38;
  uint64_t v40 = *(unsigned int (**)(uint64_t, uint64_t, const char *))(v38 - 8);
  MEMORY[0x270FA5388](v38);
  id v148 = (void (*)(char *, uint64_t, const char *))((char *)&v130 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v43 = MEMORY[0x270FA5388](v42);
  id v149 = (char *)&v130 - v44;
  uint64_t v150 = v40;
  uint64_t v45 = (unsigned int (*)(char *, uint64_t, uint64_t))*((void *)v40 + 6);
  uint64_t v46 = a2;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, double))v45)(a2, 1, v39, v43) == 1)
  {
    uint64_t v151 = v3 + 24;
    uint64_t v47 = MEMORY[0x2105289B0]();
    if (v47)
    {
      double v48 = (void *)v47;
      sub_20A6BF5DC((uint64_t)byte_26BE5E818);
    }
    uint64_t v49 = v3 + OBJC_IVAR____TtC8StocksUI28StockChartInteractionHandler_chartModel;
    swift_beginAccess();
    uint64_t v50 = v157;
    uint64_t v51 = (uint64_t (*)(uint64_t, uint64_t, const char *))*((void *)v157 + 6);
    uint64_t v52 = v154;
    int v53 = v51(v49, 1, v154);
    uint64_t v54 = (uint64_t)v152;
    uint64_t v55 = v153;
    if (v53) {
      goto LABEL_40;
    }
    uint64_t v56 = (void (*)(char *, uint64_t, const char *))*((void *)v50 + 2);
    id v149 = (char *)(v50 + 16);
    uint64_t v150 = (unsigned int (*)(uint64_t, uint64_t, const char *))v51;
    id v148 = v56;
    v56(v8, v49, v52);
    uint64_t v57 = sub_20A8CDC60();
    uint64_t v59 = (void (*)(char *, const char *))*((void *)v50 + 1);
    char v58 = v50 + 8;
    id v144 = v59;
    v59(v8, v52);
    uint64_t v60 = *(void *)(v57 + 16);
    sub_20A6C2DF8(0, (unint64_t *)&qword_26AC7F5F8, MEMORY[0x263F7CC80]);
    uint64_t v62 = v61;
    double v63 = *(void **)(v61 - 8);
    if (v60)
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v61 - 8) + 16))(v54, v57+ ((*(unsigned __int8 *)(*(void *)(v61 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v61 - 8) + 80)), v61);
      uint64_t v64 = 0;
    }
    else
    {
      uint64_t v64 = 1;
    }
    id v143 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v63[7];
    v143(v54, v64, 1, v62);
    swift_bridgeObjectRelease();
    uint64_t v136 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v63[6];
    if (v136(v54, 1, v62) == 1)
    {
      sub_20A6C2FB4(v54, &qword_26AC7F600, (unint64_t *)&qword_26AC7F5F8, MEMORY[0x263F7CC80]);
LABEL_40:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v155 + 56))(v55, 1, 1, v156);
LABEL_41:
      uint64_t v96 = (void (*)(uint64_t))MEMORY[0x263F7CB58];
      uint64_t v97 = (uint64_t)v55;
      return sub_20A6C2F58(v97, &qword_26AC7F518, v96);
    }
    uint64_t v135 = v63 + 6;
    uint64_t v157 = v58;
    uint64_t v137 = v3;
    uint64_t v98 = sub_20A8CE090();
    uint64_t v134 = v63;
    double v133 = (void (*)(uint64_t, uint64_t))v63[1];
    v133(v54, v62);
    uint64_t v99 = *(void *)(v98 + 16);
    id v132 = v63 + 1;
    uint64_t v101 = (void *)v155;
    uint64_t v100 = v156;
    if (v99)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v155 + 16))(v55, v98 + ((*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80)), v156);
      uint64_t v102 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v101[7];
      char v103 = v55;
      uint64_t v104 = 0;
    }
    else
    {
      uint64_t v102 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v155 + 56);
      char v103 = v55;
      uint64_t v104 = 1;
    }
    id v152 = v102;
    v102(v103, v104, 1, v100);
    swift_bridgeObjectRelease();
    uint64_t v131 = (unsigned int (*)(char *, uint64_t, uint64_t))v101[6];
    if (v131(v55, 1, v100) == 1) {
      goto LABEL_41;
    }
    uint64_t v107 = (void (*)(char *, char *, uint64_t))v101[4];
    v107(v147, v55, v100);
    uint64_t v108 = v154;
    if (v150(v49, 1, v154)) {
      goto LABEL_54;
    }
    uint64_t v153 = (char *)v107;
    uint64_t v109 = v141;
    v148(v141, v49, v108);
    uint64_t v110 = sub_20A8CDC60();
    v144(v109, v108);
    if (*(void *)(v110 + 16))
    {
      uint64_t v111 = (uint64_t)v140;
      ((void (*)(char *, unint64_t, uint64_t))v134[2])(v140, v110 + ((*((unsigned __int8 *)v134 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v134 + 80)), v62);
      uint64_t v112 = 0;
    }
    else
    {
      uint64_t v112 = 1;
      uint64_t v111 = (uint64_t)v140;
    }
    uint64_t v115 = v136;
    v143(v111, v112, 1, v62);
    swift_bridgeObjectRelease();
    if (v115(v111, 1, v62) == 1)
    {
      sub_20A6C2FB4(v111, &qword_26AC7F600, (unint64_t *)&qword_26AC7F5F8, MEMORY[0x263F7CC80]);
      uint64_t v101 = (void *)v155;
      uint64_t v100 = v156;
LABEL_54:
      uint64_t v116 = v142;
      v152(v142, 1, 1, v100);
      uint64_t v117 = v101;
LABEL_55:
      ((void (*)(char *, uint64_t))v117[1])(v147, v100);
      uint64_t v96 = (void (*)(uint64_t))MEMORY[0x263F7CB58];
      uint64_t v97 = (uint64_t)v116;
      return sub_20A6C2F58(v97, &qword_26AC7F518, v96);
    }
    uint64_t v118 = sub_20A8CE090();
    v133(v111, v62);
    uint64_t v119 = *(void *)(v118 + 16);
    uint64_t v116 = v142;
    if (v119)
    {
      uint64_t v117 = (void *)v155;
      uint64_t v120 = v156;
      (*(void (**)(char *, unint64_t, uint64_t))(v155 + 16))(v142, v118+ ((*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80))+ *(void *)(v155 + 72) * (v119 - 1), v156);
      uint64_t v121 = 0;
    }
    else
    {
      uint64_t v121 = 1;
      uint64_t v117 = (void *)v155;
      uint64_t v120 = v156;
    }
    uint64_t v122 = v131;
    v152(v116, v121, 1, v120);
    swift_bridgeObjectRelease();
    uint64_t v100 = v120;
    if (v122(v116, 1, v120) == 1) {
      goto LABEL_55;
    }
    uint64_t v123 = v139;
    ((void (*)(char *, char *, uint64_t))v153)(v139, v116, v120);
    uint64_t v124 = MEMORY[0x2105289B0](v151);
    if (v124)
    {
      uint64_t v125 = (void *)v124;
      uint64_t v126 = v147;
      sub_20A8CDD90();
      sub_20A8CDD90();
      uint64_t v127 = v138;
      sub_20A8CDBD0();
      sub_20A6C3024(&qword_26AC7F5A8, MEMORY[0x263F7CC00]);
      sub_20A8CDEC0();

      (*(void (**)(char *, uint64_t))(v145 + 8))(v127, v146);
      uint64_t v128 = (void (*)(char *, uint64_t))v117[1];
      v128(v123, v100);
      return ((uint64_t (*)(char *, uint64_t))v128)(v126, v100);
    }
    else
    {
      uint64_t v129 = (void (*)(char *, uint64_t))v117[1];
      v129(v123, v120);
      return ((uint64_t (*)(char *, uint64_t))v129)(v147, v120);
    }
  }
  else
  {
    uint64_t v137 = v3;
    sub_20A6C306C(v151, (uint64_t)v37);
    if (v45(v37, 1, v39) == 1)
    {
      return sub_20A6C2FB4((uint64_t)v37, &qword_26AC7F548, (unint64_t *)&qword_26AC7F540, MEMORY[0x263F7CB98]);
    }
    else
    {
      uint64_t v153 = v24;
      uint64_t v66 = v149;
      uint64_t v67 = v150;
      int v68 = (void (*)(char *, char *, uint64_t))*((void *)v150 + 4);
      v68(v149, v37, v39);
      sub_20A6C306C(v46, (uint64_t)v34);
      if (v45(v34, 1, v39) == 1)
      {
        (*((void (**)(char *, uint64_t))v67 + 1))(v66, v39);
        return sub_20A6C2FB4((uint64_t)v34, &qword_26AC7F548, (unint64_t *)&qword_26AC7F540, MEMORY[0x263F7CB98]);
      }
      else
      {
        uint64_t v151 = v39;
        v68((char *)v148, v34, v39);
        id v152 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_20A6C287C();
        uint64_t v69 = (char *)(v137 + 24);
        uint64_t v70 = MEMORY[0x2105289B0](v137 + 24);
        if (v70)
        {
          id v142 = (char *)v70;
          uint64_t v147 = v69;
          uint64_t v71 = 0;
          uint64_t v72 = MEMORY[0x263F8EE78];
          uint64_t v73 = v152;
          uint64_t v157 = "neutral-highlight";
          uint64_t v154 = "positive-highlight";
          while (2)
          {
            char v74 = byte_26BE5E818[v71 + 32];
            unint64_t v75 = 0x800000020A8F8000;
            unint64_t v76 = 0xD000000000000011;
            switch(v74)
            {
              case 1:
                uint64_t v77 = v157;
                goto LABEL_18;
              case 2:
                uint64_t v77 = v154;
LABEL_18:
                unint64_t v75 = (unint64_t)v77 | 0x8000000000000000;
                unint64_t v76 = 0xD000000000000012;
                break;
              case 3:
                unint64_t v76 = 0x6F682D7265746661;
                unint64_t v75 = 0xEB00000000737275;
                break;
              default:
                break;
            }
            unint64_t v78 = 0x800000020A8F8000;
            unint64_t v79 = 0xD000000000000011;
            switch(v73)
            {
              case 1:
                uint64_t v80 = v157;
                goto LABEL_23;
              case 2:
                uint64_t v80 = v154;
LABEL_23:
                unint64_t v78 = (unint64_t)v80 | 0x8000000000000000;
                unint64_t v79 = 0xD000000000000012;
                goto LABEL_24;
              case 3:
                unint64_t v78 = 0xEB00000000737275;
                if (v76 == 0x6F682D7265746661) {
                  goto LABEL_27;
                }
                goto LABEL_28;
              default:
LABEL_24:
                if (v76 != v79) {
                  goto LABEL_28;
                }
LABEL_27:
                if (v75 == v78)
                {
                  swift_bridgeObjectRelease_n();
                }
                else
                {
LABEL_28:
                  char v81 = sub_20A8CF760();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v81 & 1) == 0)
                  {
                    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    uint64_t v158 = v72;
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                    {
                      sub_20A68C4B4(0, *(void *)(v72 + 16) + 1, 1);
                      uint64_t v72 = v158;
                    }
                    unint64_t v84 = *(void *)(v72 + 16);
                    unint64_t v83 = *(void *)(v72 + 24);
                    if (v84 >= v83 >> 1)
                    {
                      sub_20A68C4B4(v83 > 1, v84 + 1, 1);
                      uint64_t v72 = v158;
                    }
                    *(void *)(v72 + 16) = v84 + 1;
                    *(unsigned char *)(v72 + v84 + 32) = v74;
                  }
                }
                if (++v71 != 3) {
                  continue;
                }
                id v85 = v142;
                sub_20A6BF5DC(v72);

                swift_release();
                uint64_t v67 = v150;
                uint64_t v69 = v147;
                break;
            }
            break;
          }
        }
        uint64_t v86 = MEMORY[0x2105289B0](v69);
        if (v86)
        {
          char v87 = (void *)v86;
          uint64_t v88 = (char *)v143;
          uint64_t v89 = v151;
          uint64_t v90 = v149;
          sub_20A8CDDE0();
          uint64_t v157 = (const char *)sub_20A8CDD90();
          double v91 = *(void (**)(char *, uint64_t))(v155 + 8);
          uint64_t v92 = v88;
          uint64_t v93 = v156;
          v91(v92, v156);
          uint64_t v94 = v153;
          sub_20A8CDDE0();
          sub_20A8CDD90();
          v91(v94, v93);
          int v95 = v150;
          uint64_t v113 = (char *)v144;
          sub_20A8CDBD0();
          sub_20A6C3024(&qword_26AC7F5A8, MEMORY[0x263F7CC00]);
          sub_20A8CDEC0();

          (*(void (**)(char *, uint64_t))(v145 + 8))(v113, v146);
          uint64_t v114 = (void (*)(char *, uint64_t))*((void *)v95 + 1);
          v114((char *)v148, v89);
          return ((uint64_t (*)(char *, uint64_t))v114)(v90, v89);
        }
        else
        {
          uint64_t v105 = (void (*)(char *, uint64_t))*((void *)v67 + 1);
          uint64_t v106 = v151;
          v105((char *)v148, v151);
          return ((uint64_t (*)(char *, uint64_t))v105)(v149, v106);
        }
      }
    }
  }
}

uint64_t sub_20A6C098C()
{
  swift_release();
  swift_unknownObjectWeakDestroy();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  sub_20A4380C4(v0 + 96);
  sub_20A6C2F58(v0 + OBJC_IVAR____TtC8StocksUI28StockChartInteractionHandler_chartModel, &qword_26AC7F4D8, MEMORY[0x263F7CB18]);

  return swift_deallocClassInstance();
}

uint64_t sub_20A6C0A3C()
{
  return type metadata accessor for StockChartInteractionHandler();
}

uint64_t type metadata accessor for StockChartInteractionHandler()
{
  uint64_t result = qword_26AC78828;
  if (!qword_26AC78828) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A6C0A90()
{
  sub_20A6C2F04(319, &qword_26AC7F4D8, MEMORY[0x263F7CB18]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unsigned char *storeEnumTagSinglePayload for StockChartInteractionHandler.HighlightState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A6C0C4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockChartInteractionHandler.HighlightState()
{
  return &type metadata for StockChartInteractionHandler.HighlightState;
}

unint64_t sub_20A6C0C88()
{
  unint64_t result = qword_26763D388;
  if (!qword_26763D388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D388);
  }
  return result;
}

uint64_t sub_20A6C0CDC()
{
  return sub_20A6C3024(&qword_26AC7F4D0, MEMORY[0x263F7CB18]);
}

uint64_t sub_20A6C0D24(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_20A6C2D90(0, &qword_26763D390, (unint64_t *)&qword_26AC7F540, MEMORY[0x263F7CB98], MEMORY[0x263F7CB38]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  double v7 = MEMORY[0x270FA5388](v4);
  unint64_t v9 = (char *)v22 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)v22 - v8, a1, v5, v7);
  if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v9, v5) == *MEMORY[0x263F7CB30])
  {
    (*(void (**)(char *, uint64_t))(v6 + 96))(v9, v5);
    uint64_t v10 = MEMORY[0x2105289B0](v2 + 3);
    if (v10 && (v11 = (void *)v10, uint64_t v12 = (void *)sub_20A8CDE70(), v11, v12))
    {
      uint64_t v13 = v2[7];
      uint64_t v14 = v2[8];
      __swift_project_boxed_opaque_existential_1(v2 + 4, v13);
      id v15 = objc_msgSend(v12, sel_traitCollection);
      uint64_t v16 = *(void *)(v14 + 8);
      uint64_t v17 = *(void (**)(id, uint64_t, uint64_t))(v16 + 8);
      void v23[3] = v13;
      v23[4] = v14;
      __swift_allocate_boxed_opaque_existential_1(v23);
      v17(v15, v13, v16);

      uint64_t v18 = swift_allocObject();
      swift_weakInit();
      sub_20A4342F4((uint64_t)v23, (uint64_t)v22);
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v18;
      *(void *)(v19 + 24) = v12;
      sub_20A42BEBC(v22, v19 + 32);
      id v20 = v12;
      sub_20A8CDF00();
      swift_release();
      swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_20A8CDEF0();
      swift_release_n();
      swift_release();

      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    }
    else
    {
      return swift_release();
    }
  }
  else
  {
    uint64_t result = sub_20A8CF520();
    __break(1u);
  }
  return result;
}

uint64_t sub_20A6C1060(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  long long v193 = a4;
  id v200 = a3;
  uint64_t v204 = a1;
  uint64_t v183 = sub_20A8CDBE0();
  uint64_t v182 = *(void *)(v183 - 8);
  MEMORY[0x270FA5388](v183);
  uint64_t v181 = (char *)&v175 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6C2F04(0, &qword_26AC7F518, MEMORY[0x263F7CB58]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v186 = (char *)&v175 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v190 = (char *)&v175 - v8;
  sub_20A6C2DF8(0, (unint64_t *)&qword_26AC7F5F8, MEMORY[0x263F7CC80]);
  v209 = v9;
  v205 = (char *)*(v9 - 1);
  MEMORY[0x270FA5388](v9);
  v202 = (char *)&v175 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v185 = (char *)&v175 - v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v189 = (char *)&v175 - v14;
  uint64_t v206 = sub_20A8CDDA0();
  uint64_t v208 = *(void *)(v206 - 8);
  MEMORY[0x270FA5388](v206);
  char v187 = (char *)&v175 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  v203 = (char *)&v175 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v184 = (char *)&v175 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v175 - v21;
  uint64_t v23 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7CB98];
  sub_20A6C2D90(0, &qword_26AC7F548, (unint64_t *)&qword_26AC7F540, MEMORY[0x263F7CB98], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v192 = (char *)&v175 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v191 = (char *)&v175 - v27;
  sub_20A6C3108();
  uint64_t v29 = v28;
  uint64_t v30 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  *(void *)&double v201 = (char *)&v175 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v188 = (void (*)(char *, uint64_t, uint64_t))((char *)&v175 - v33);
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)&v175 - v35;
  sub_20A6C3180();
  uint64_t v38 = v37;
  MEMORY[0x270FA5388](v37);
  uint64_t v40 = (char *)&v175 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6C2DF8(0, (unint64_t *)&qword_26AC7F540, v23);
  uint64_t v212 = v41;
  v210 = *(void (**)(char *, uint64_t))(v41 - 8);
  MEMORY[0x270FA5388](v41);
  v207 = (char *)&v175 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v43);
  uint64_t v45 = (char *)&v175 - v44;
  MEMORY[0x270FA5388](v46);
  uint64_t v197 = (char *)&v175 - v47;
  MEMORY[0x270FA5388](v48);
  uint64_t v50 = (char *)&v175 - v49;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v180 = v22;
  char v199 = v45;
  uint64_t v211 = result;
  unsigned int v52 = *(unsigned __int8 *)(result + 72);
  uint64_t v53 = *(int *)(v38 + 48);
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  uint64_t v55 = v204;
  v54(v40, v204, v29);
  v40[v53] = v52;
  uint64_t v56 = *(uint64_t (**)(void, uint64_t))(v30 + 88);
  uint64_t v196 = v30 + 88;
  uint64_t v195 = v56;
  int v57 = v56(v40, v29);
  int v194 = *MEMORY[0x263F7CBD0];
  uint64_t v58 = v29;
  uint64_t v198 = v30 + 16;
  if (v57 == v194)
  {
    uint64_t v188 = v54;
    v54(v36, (uint64_t)v40, v29);
    (*(void (**)(char *, uint64_t))(v30 + 96))(v36, v29);
    if (v52 != 1)
    {
      uint64_t v70 = v210;
      uint64_t v71 = v50;
      uint64_t v72 = v36;
      uint64_t v73 = v212;
      (*((void (**)(char *, char *, uint64_t))v210 + 4))(v50, v72, v212);
      char v74 = *(void (**)(char *, uint64_t))(v30 + 8);
      uint64_t v179 = v29;
      v74(v40, v29);
      id v75 = objc_msgSend(v200, sel_layer);
      uint64_t v76 = v211;
      objc_msgSend(v75, sel_addSublayer_, *(void *)(v211 + 80));

      objc_msgSend(*(id *)(v76 + 88), sel_removeFromSuperlayer);
      uint64_t v77 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((void *)v70 + 7);
      uint64_t v78 = (uint64_t)v191;
      v77(v191, 1, 1, v73);
      uint64_t v79 = (uint64_t)v192;
      v77(v192, 1, 1, v73);
      sub_20A6BF7A8(v78, v79);
      uint64_t v80 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7CB98];
      sub_20A6C2FB4(v79, &qword_26AC7F548, (unint64_t *)&qword_26AC7F540, MEMORY[0x263F7CB98]);
      sub_20A6C2FB4(v78, &qword_26AC7F548, (unint64_t *)&qword_26AC7F540, v80);
      char v81 = v189;
      sub_20A8CDDF0();
      uint64_t v82 = v209;
      uint64_t v83 = sub_20A8CE090();
      uint64_t v189 = (char *)*((void *)v205 + 1);
      ((void (*)(char *, void *))v189)(v81, v82);
      uint64_t v84 = v208;
      if (*(void *)(v83 + 16))
      {
        uint64_t v85 = (uint64_t)v190;
        uint64_t v86 = v206;
        (*(void (**)(char *, unint64_t, uint64_t))(v208 + 16))(v190, v83 + ((*(unsigned __int8 *)(v208 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v208 + 80)), v206);
        char v87 = *(char **)(v84 + 56);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v87)(v85, 0, 1, v86);
      }
      else
      {
        char v87 = *(char **)(v208 + 56);
        uint64_t v85 = (uint64_t)v190;
        uint64_t v86 = v206;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v87)(v190, 1, 1, v206);
      }
      uint64_t v59 = v188;
      swift_bridgeObjectRelease();
      uint64_t v88 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v84 + 48);
      if (v88(v85, 1, v86) == 1)
      {
        uint64_t v69 = v210;
        (*((void (**)(char *, uint64_t))v210 + 1))(v71, v212);
        sub_20A6C2F58(v85, &qword_26AC7F518, MEMORY[0x263F7CB58]);
        uint64_t v55 = v204;
        uint64_t v58 = v179;
      }
      else
      {
        id v178 = v88;
        uint64_t v190 = v87;
        uint64_t v89 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 32);
        uint64_t v177 = v84 + 32;
        uint64_t v176 = v89;
        v89(v180, v85, v86);
        uint64_t v90 = v86;
        double v91 = v185;
        uint64_t v92 = v212;
        sub_20A8CDDF0();
        (*((void (**)(char *, uint64_t))v210 + 1))(v71, v92);
        uint64_t v93 = v209;
        uint64_t v94 = sub_20A8CE090();
        ((void (*)(char *, void *))v189)(v91, v93);
        uint64_t v95 = *(void *)(v94 + 16);
        if (v95)
        {
          uint64_t v96 = (uint64_t)v186;
          (*(void (**)(char *, unint64_t, uint64_t))(v84 + 16))(v186, v94+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(void *)(v84 + 72) * (v95 - 1), v90);
          uint64_t v97 = 0;
        }
        else
        {
          uint64_t v97 = 1;
          uint64_t v96 = (uint64_t)v186;
        }
        uint64_t v98 = v90;
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v190)(v96, v97, 1, v90);
        swift_bridgeObjectRelease();
        int v99 = v178(v96, 1, v90);
        uint64_t v55 = v204;
        uint64_t v59 = v188;
        uint64_t v58 = v179;
        if (v99 == 1)
        {
          (*(void (**)(char *, uint64_t))(v84 + 8))(v180, v90);
          sub_20A6C2F58(v96, &qword_26AC7F518, MEMORY[0x263F7CB58]);
          uint64_t v69 = v210;
        }
        else
        {
          uint64_t v100 = v184;
          v176(v184, v96, v90);
          uint64_t v101 = MEMORY[0x2105289B0](v211 + 24);
          uint64_t v69 = v210;
          if (v101)
          {
            uint64_t v102 = (void *)v101;
            char v103 = v180;
            uint64_t v190 = (char *)sub_20A8CDD90();
            sub_20A8CDD90();
            uint64_t v104 = v181;
            uint64_t v58 = v179;
            sub_20A8CDBD0();
            sub_20A6C3024(&qword_26AC7F5A8, MEMORY[0x263F7CC00]);
            sub_20A8CDEC0();

            (*(void (**)(char *, uint64_t))(v182 + 8))(v104, v183);
            uint64_t v105 = *(void (**)(char *, uint64_t))(v208 + 8);
            v105(v184, v98);
            v105(v103, v98);
          }
          else
          {
            uint64_t v106 = *(void (**)(char *, uint64_t))(v208 + 8);
            v106(v100, v90);
            v106(v180, v90);
          }
        }
      }
      *(unsigned char *)(v211 + 72) = 1;
      goto LABEL_24;
    }
    (*((void (**)(char *, uint64_t))v210 + 1))(v36, v212);
    uint64_t v59 = v188;
    goto LABEL_8;
  }
  uint64_t v59 = v54;
  if (v57 != *MEMORY[0x263F7CBC8]) {
    goto LABEL_8;
  }
  uint64_t v60 = (char *)v188;
  v54((char *)v188, (uint64_t)v40, v58);
  (*(void (**)(char *, uint64_t))(v30 + 96))(v60, v58);
  sub_20A6C3244();
  uint64_t v62 = v58;
  double v63 = (void (*)(char *, uint64_t))*((void *)v210 + 1);
  uint64_t v64 = v212;
  v63(&v60[*(int *)(v61 + 48)], v212);
  v63(v60, v64);
  uint64_t v58 = v62;
  if (v52 > 1)
  {
LABEL_8:
    sub_20A6C31E8((uint64_t)v40);
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v62);
  id v65 = v200;
  id v66 = objc_msgSend(v200, sel_layer);
  uint64_t v67 = v211;
  objc_msgSend(v66, sel_addSublayer_, *(void *)(v211 + 80));

  id v68 = objc_msgSend(v65, sel_layer);
  objc_msgSend(v68, sel_addSublayer_, *(void *)(v67 + 88));

  *(unsigned char *)(v67 + 72) = 2;
  uint64_t v58 = v62;
LABEL_9:
  uint64_t v69 = v210;
LABEL_24:
  uint64_t v107 = v203;
  double v108 = v201;
  v59(*(char **)&v201, v55, v58);
  int v109 = v195(*(void *)&v108, v58);
  if (v109 == v194)
  {
    (*(void (**)(double, uint64_t))(v30 + 96))(COERCE_DOUBLE(*(void *)&v108), v58);
    uint64_t v110 = (void (*)(char *, void, uint64_t))*((void *)v69 + 4);
    uint64_t v111 = v69;
    uint64_t v112 = (uint64_t)v197;
    v110(v197, *(void *)&v108, v212);
    uint64_t v113 = v211;
    sub_20A8CDDE0();
    uint64_t v114 = v202;
    sub_20A8CDDF0();
    double v115 = COERCE_DOUBLE(sub_20A8CDFD0());
    uint64_t v117 = v116;
    char v119 = v118;
    (*((void (**)(char *, void *))v205 + 1))(v114, v209);
    (*(void (**)(char *, uint64_t))(v208 + 8))(v107, v206);
    if (v119)
    {
      (*((void (**)(uint64_t, uint64_t))v111 + 1))(v112, v212);
    }
    else
    {
      double v120 = v115 + -0.5;
      id v121 = *(id *)(v113 + 80);
      objc_msgSend(v200, sel_bounds);
      objc_msgSend(v121, sel_setFrame_, v120, 0.0, 1.0, CGRectGetHeight(v213));

      uint64_t v122 = *(char **)(v113 + 80);
      *(void *)&v122[OBJC_IVAR____TtC8StocksUI28StockChartCalloutHandleLayer_knobLocation] = v117;
      objc_msgSend(v122, sel_setNeedsLayout);
      if (MEMORY[0x2105289B0](v113 + 96))
      {
        sub_20A43D8B4(v112);
        swift_unknownObjectRelease();
      }
      __swift_project_boxed_opaque_existential_1(v193, v193[3]);
      sub_20A807168(*(char **)(v113 + 80), 0.0);
      (*((void (**)(uint64_t, uint64_t))v111 + 1))(v112, v212);
    }
  }
  else
  {
    uint64_t v123 = v209;
    if (v109 != *MEMORY[0x263F7CBC8])
    {
      uint64_t result = sub_20A8CF520();
      __break(1u);
      return result;
    }
    (*(void (**)(double, uint64_t))(v30 + 96))(COERCE_DOUBLE(*(void *)&v108), v58);
    sub_20A6C3244();
    uint64_t v125 = *(void *)&v108 + *(int *)(v124 + 48);
    uint64_t v126 = (void (*)(char *, void, uint64_t))*((void *)v69 + 4);
    uint64_t v127 = v212;
    v126(v199, *(void *)&v108, v212);
    v126(v207, v125, v127);
    sub_20A8CDDE0();
    uint64_t v128 = v202;
    sub_20A8CDDF0();
    double v201 = COERCE_DOUBLE(sub_20A8CDFD0());
    uint64_t v204 = v129;
    LOBYTE(v125) = v130;
    uint64_t v131 = (void (*)(char *, void *))*((void *)v205 + 1);
    v131(v128, v123);
    uint64_t v132 = v208 + 8;
    double v133 = *(void (**)(char *, uint64_t))(v208 + 8);
    uint64_t v134 = v206;
    v133(v107, v206);
    if (v125) {
      goto LABEL_35;
    }
    v210 = v133;
    sub_20A8CDDE0();
    sub_20A8CDDF0();
    *(double *)&uint64_t v135 = COERCE_DOUBLE(sub_20A8CDFD0());
    uint64_t v137 = v136;
    char v139 = v138;
    v131(v128, v209);
    v210(v107, v134);
    if (v139)
    {
LABEL_35:
      swift_release();
      uint64_t v173 = (void (*)(char *, uint64_t))*((void *)v69 + 1);
      uint64_t v174 = v212;
      v173(v207, v212);
      return ((uint64_t (*)(char *, uint64_t))v173)(v199, v174);
    }
    uint64_t v208 = v132;
    double v140 = *(double *)&v135;
    uint64_t v141 = v211;
    double v142 = v201 + -0.5;
    id v143 = *(id *)(v211 + 80);
    id v144 = v200;
    objc_msgSend(v200, sel_bounds);
    objc_msgSend(v143, sel_setFrame_, v142, 0.0, 1.0, CGRectGetHeight(v214));

    uint64_t v145 = *(char **)(v141 + 80);
    *(void *)&v145[OBJC_IVAR____TtC8StocksUI28StockChartCalloutHandleLayer_knobLocation] = v204;
    objc_msgSend(v145, sel_setNeedsLayout);
    id v146 = *(id *)(v141 + 88);
    objc_msgSend(v144, sel_bounds);
    objc_msgSend(v146, sel_setFrame_, v140 + -0.5, 0.0, 1.0, CGRectGetHeight(v215));

    uint64_t v147 = *(char **)(v141 + 88);
    *(void *)&v147[OBJC_IVAR____TtC8StocksUI28StockChartCalloutHandleLayer_knobLocation] = v137;
    objc_msgSend(v147, sel_setNeedsLayout);
    id v148 = (void (*)(char *, char *, uint64_t))*((void *)v69 + 2);
    uint64_t v149 = (uint64_t)v191;
    uint64_t v150 = v212;
    v148(v191, v199, v212);
    uint64_t v151 = (void (*)(uint64_t, void, uint64_t, uint64_t))*((void *)v69 + 7);
    v151(v149, 0, 1, v150);
    uint64_t v152 = (uint64_t)v192;
    uint64_t v153 = (uint64_t)v207;
    v148(v192, v207, v150);
    v151(v152, 0, 1, v150);
    sub_20A6BF7A8(v149, v152);
    uint64_t v154 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7CB98];
    sub_20A6C2FB4(v152, &qword_26AC7F548, (unint64_t *)&qword_26AC7F540, MEMORY[0x263F7CB98]);
    sub_20A6C2FB4(v149, &qword_26AC7F548, (unint64_t *)&qword_26AC7F540, v154);
    if (MEMORY[0x2105289B0](v141 + 96))
    {
      sub_20A43DF68((uint64_t)v199, v153);
      swift_unknownObjectRelease();
    }
    uint64_t v155 = v193;
    v209 = __swift_project_boxed_opaque_existential_1(v193, v193[3]);
    v205 = (char *)*(id *)(v141 + 80);
    uint64_t v156 = v203;
    uint64_t v157 = v212;
    sub_20A8CDDE0();
    sub_20A8CDD70();
    double v159 = v158;
    uint64_t v160 = v206;
    uint64_t v161 = v210;
    v210(v156, v206);
    uint64_t v162 = v187;
    sub_20A8CDDE0();
    sub_20A8CDD70();
    double v164 = v163;
    v161(v162, v160);
    uint64_t v165 = v205;
    sub_20A807168(v205, v159 - v164);

    v209 = __swift_project_boxed_opaque_existential_1(v155, v155[3]);
    uint64_t v166 = *(char **)(v211 + 88);
    sub_20A8CDDE0();
    sub_20A8CDD70();
    double v168 = v167;
    v161(v156, v160);
    uint64_t v169 = (uint64_t)v199;
    sub_20A8CDDE0();
    sub_20A8CDD70();
    double v171 = v170;
    v161(v162, v160);
    sub_20A807168(v166, v168 - v171);
    long long v172 = (void (*)(char *, uint64_t))*((void *)v69 + 1);
    v172(v207, v157);
    v172((char *)v169, v157);
  }
  return swift_release();
}

uint64_t sub_20A6C2664()
{
  sub_20A6C2D90(0, &qword_26AC7F548, (unint64_t *)&qword_26AC7F540, MEMORY[0x263F7CB98], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v12 - v4;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    *(unsigned char *)(result + 72) = 0;
    objc_msgSend(*(id *)(result + 80), sel_removeFromSuperlayer);
    objc_msgSend(*(id *)(v7 + 88), sel_removeFromSuperlayer);
    uint64_t v8 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7CB98];
    sub_20A6C2DF8(0, (unint64_t *)&qword_26AC7F540, MEMORY[0x263F7CB98]);
    uint64_t v10 = v9;
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    v11(v5, 1, 1, v9);
    v11(v2, 1, 1, v10);
    sub_20A6BF7A8((uint64_t)v5, (uint64_t)v2);
    sub_20A6C2FB4((uint64_t)v2, &qword_26AC7F548, (unint64_t *)&qword_26AC7F540, v8);
    sub_20A6C2FB4((uint64_t)v5, &qword_26AC7F548, (unint64_t *)&qword_26AC7F540, v8);
    if (MEMORY[0x2105289B0](v7 + 96))
    {
      sub_20A43E3F8();
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_20A6C287C()
{
  uint64_t v0 = sub_20A8CDDA0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v17 - v5;
  sub_20A6C2DF8(0, (unint64_t *)&qword_26AC7F540, MEMORY[0x263F7CB98]);
  sub_20A8CDDE0();
  sub_20A8CDD70();
  double v8 = v7;
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v6, v0);
  sub_20A8CDDE0();
  sub_20A8CDD70();
  double v11 = v10;
  v9(v3, v0);
  if (v11 < v8) {
    return 2;
  }
  sub_20A8CDDE0();
  sub_20A8CDD70();
  double v14 = v13;
  v9(v6, v0);
  sub_20A8CDDE0();
  sub_20A8CDD70();
  double v16 = v15;
  v9(v3, v0);
  return v16 < v14;
}

uint64_t sub_20A6C2A64(uint64_t a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7CB98];
  sub_20A6C2D90(0, &qword_26AC7F548, (unint64_t *)&qword_26AC7F540, MEMORY[0x263F7CB98], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - v8;
  sub_20A6C2F04(0, &qword_26AC7F4D8, MEMORY[0x263F7CB18]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v20 - v11;
  uint64_t v13 = sub_20A8CDC70();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  uint64_t v15 = v1 + OBJC_IVAR____TtC8StocksUI28StockChartInteractionHandler_chartModel;
  swift_beginAccess();
  sub_20A6C32C4((uint64_t)v12, v15);
  swift_endAccess();
  sub_20A6C2DF8(0, (unint64_t *)&qword_26AC7F540, v3);
  uint64_t v17 = v16;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v18(v9, 1, 1, v16);
  v18(v6, 1, 1, v17);
  sub_20A6BF7A8((uint64_t)v9, (uint64_t)v6);
  sub_20A6C2FB4((uint64_t)v6, &qword_26AC7F548, (unint64_t *)&qword_26AC7F540, v3);
  return sub_20A6C2FB4((uint64_t)v9, &qword_26AC7F548, (unint64_t *)&qword_26AC7F540, v3);
}

uint64_t sub_20A6C2CFC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A6C2D34()
{
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  return swift_deallocObject();
}

uint64_t sub_20A6C2D7C(uint64_t a1)
{
  return sub_20A6C1060(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), (void *)(v1 + 32));
}

uint64_t sub_20A6C2D88()
{
  return sub_20A6C2664();
}

void sub_20A6C2D90(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, void *), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_20A6C2DF8(255, a3, a4);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_20A6C2DF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    uint64_t v6 = sub_20A8CDDA0();
    uint64_t v7 = (void (*)(uint64_t))MEMORY[0x263F7CB58];
    v10[0] = v6;
    v10[1] = sub_20A6C3024(&qword_26AC7F510, MEMORY[0x263F7CB58]);
    v10[2] = sub_20A6C3024(&qword_26AC7F500, v7);
    void v10[3] = sub_20A6C3024(&qword_26AC7F508, v7);
    unint64_t v8 = a3(a1, v10);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A6C2F04(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A6C2F58(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A6C2F04(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A6C2FB4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, void *))
{
  sub_20A6C2D90(0, a2, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_20A6C3024(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6C306C(uint64_t a1, uint64_t a2)
{
  sub_20A6C2D90(0, &qword_26AC7F548, (unint64_t *)&qword_26AC7F540, MEMORY[0x263F7CB98], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_20A6C3108()
{
  if (!qword_26763D398)
  {
    sub_20A6C2DF8(255, (unint64_t *)&qword_26AC7F540, MEMORY[0x263F7CB98]);
    unint64_t v0 = sub_20A8CDEE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763D398);
    }
  }
}

void sub_20A6C3180()
{
  if (!qword_26763D3A0)
  {
    sub_20A6C3108();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763D3A0);
    }
  }
}

uint64_t sub_20A6C31E8(uint64_t a1)
{
  sub_20A6C3180();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_20A6C3244()
{
  if (!qword_26763D3A8)
  {
    sub_20A6C2DF8(255, (unint64_t *)&qword_26AC7F540, MEMORY[0x263F7CB98]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763D3A8);
    }
  }
}

uint64_t sub_20A6C32C4(uint64_t a1, uint64_t a2)
{
  sub_20A6C2F04(0, &qword_26AC7F4D8, MEMORY[0x263F7CB18]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

double sub_20A6C3344()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = MEMORY[0x2105289B0](&v0[OBJC_IVAR____TtC8StocksUI40QuoteDetailViewLabelAccessibilityElement_nameLabel]);
  if (!v2) {
    goto LABEL_5;
  }
  uint64_t v3 = (void *)v2;
  uint64_t v4 = MEMORY[0x2105289B0](&v0[OBJC_IVAR____TtC8StocksUI40QuoteDetailViewLabelAccessibilityElement_valueLabel]);
  if (!v4)
  {

LABEL_5:
    v21.receiver = v0;
    v21.super_class = ObjectType;
    objc_msgSendSuper2(&v21, sel_accessibilityFrame);
    return v19;
  }
  uint64_t v5 = (void *)v4;
  objc_msgSend(v3, sel_accessibilityFrame);
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  objc_msgSend(v5, sel_accessibilityFrame);
  v23.origin.CGFloat x = v14;
  v23.origin.CGFloat y = v15;
  v23.size.CGFloat width = v16;
  v23.size.CGFloat height = v17;
  v22.origin.CGFloat x = v7;
  v22.origin.CGFloat y = v9;
  v22.size.CGFloat width = v11;
  v22.size.CGFloat height = v13;
  *(void *)&double v18 = (unint64_t)CGRectUnion(v22, v23);

  return v18;
}

uint64_t type metadata accessor for QuoteDetailViewLabelAccessibilityElement()
{
  return self;
}

void sub_20A6C387C(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_20A8CF2C0();
    sub_20A686158();
    sub_20A6BD9A4();
    sub_20A8CE810();
    uint64_t v1 = v24;
    uint64_t v23 = v25;
    uint64_t v2 = v26;
    uint64_t v3 = v27;
    unint64_t v4 = v28;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v23 = a1 + 56;
    uint64_t v6 = ~v5;
    uint64_t v7 = -v5;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v4 = v8 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v2 = v6;
    uint64_t v3 = 0;
  }
  uint64_t v21 = v2;
  int64_t v22 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!sub_20A8CF310()) {
      goto LABEL_37;
    }
    sub_20A686158();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v13 = v29;
    swift_unknownObjectRelease();
    uint64_t v12 = v3;
    uint64_t v10 = v4;
    if (!v29) {
      goto LABEL_37;
    }
LABEL_33:
    id v17 = objc_msgSend(v13, sel_session, v21);
    uint64_t v18 = sub_20A8CEA80();
    uint64_t v20 = v19;

    if (v20)
    {
      if (v18 == 0x756F59726F46 && v20 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_37:
        sub_20A6BDA0C();
        return;
      }
      char v9 = sub_20A8CF760();
      swift_bridgeObjectRelease();
      if (v9) {
        goto LABEL_37;
      }
    }

    uint64_t v3 = v12;
    unint64_t v4 = v10;
  }
  if (v4)
  {
    uint64_t v10 = (v4 - 1) & v4;
    unint64_t v11 = __clz(__rbit64(v4)) | (v3 << 6);
    uint64_t v12 = v3;
LABEL_32:
    id v13 = *(id *)(*(void *)(v1 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_37;
    }
    goto LABEL_33;
  }
  int64_t v14 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v14 >= v22) {
      goto LABEL_37;
    }
    unint64_t v15 = *(void *)(v23 + 8 * v14);
    uint64_t v12 = v3 + 1;
    if (!v15)
    {
      uint64_t v12 = v3 + 2;
      if (v3 + 2 >= v22) {
        goto LABEL_37;
      }
      unint64_t v15 = *(void *)(v23 + 8 * v12);
      if (!v15)
      {
        uint64_t v12 = v3 + 3;
        if (v3 + 3 >= v22) {
          goto LABEL_37;
        }
        unint64_t v15 = *(void *)(v23 + 8 * v12);
        if (!v15)
        {
          uint64_t v12 = v3 + 4;
          if (v3 + 4 >= v22) {
            goto LABEL_37;
          }
          unint64_t v15 = *(void *)(v23 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v3 + 5;
            if (v3 + 5 >= v22) {
              goto LABEL_37;
            }
            unint64_t v15 = *(void *)(v23 + 8 * v12);
            if (!v15)
            {
              uint64_t v16 = v3 + 6;
              while (v22 != v16)
              {
                unint64_t v15 = *(void *)(v23 + 8 * v16++);
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_31;
                }
              }
              goto LABEL_37;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t OpenMainWindowCommandHandler.__allocating_init(navigator:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t OpenMainWindowCommandHandler.init(navigator:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t OpenMainWindowCommandHandler.deinit()
{
  swift_release();
  return v0;
}

uint64_t OpenMainWindowCommandHandler.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

void sub_20A6C3C50()
{
}

void _s8StocksUI28OpenMainWindowCommandHandlerC6handle13commandCenter0I04with6sourcey03TeaB00fJ4Type_p_AI0F0CyytGytAI0F15ExecutionSourceCSgtF_0()
{
  uint64_t v0 = sub_20A8CA640();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_sharedApplication);
  id v6 = objc_msgSend(v5, sel_connectedScenes);

  sub_20A686158();
  sub_20A6BD9A4();
  uint64_t v7 = sub_20A8CE7F0();

  sub_20A6C387C(v7);
  char v9 = v8;
  swift_bridgeObjectRelease();
  if (v9)
  {
    id v10 = objc_msgSend(v4, sel_sharedApplication);
    id v13 = objc_msgSend(v9, sel_session);
    objc_msgSend(v10, sel_requestSceneSessionActivation_userActivity_options_errorHandler_, v13, 0, 0, 0);

    unint64_t v11 = v13;
  }
  else
  {
    if (qword_26AC6C518 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for StocksActivity(0);
    __swift_project_value_buffer(v12, (uint64_t)qword_26AC6C500);
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7DCB8], v0);
    sub_20A8C8590();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

uint64_t type metadata accessor for OpenMainWindowCommandHandler()
{
  return self;
}

uint64_t method lookup function for OpenMainWindowCommandHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for OpenMainWindowCommandHandler);
}

uint64_t dispatch thunk of OpenMainWindowCommandHandler.__allocating_init(navigator:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_20A6C3F3C()
{
  uint64_t result = sub_20A8C6B30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_20A6C3FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v27 = a1;
  uint64_t v4 = *(void *)(*v3 + 80);
  uint64_t v5 = *(void *)(*v3 + 88);
  uint64_t v6 = *(void *)(*v3 + 96);
  uint64_t v7 = *(void *)(*v3 + 104);
  uint64_t v28 = v4;
  uint64_t v29 = v5;
  uint64_t v30 = v6;
  uint64_t v31 = v7;
  uint64_t v8 = sub_20A8CBF40();
  uint64_t v23 = *(void *)(v8 - 8);
  uint64_t v24 = v8;
  uint64_t v9 = *(void *)(v23 + 64);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v20 - v10;
  __swift_project_boxed_opaque_existential_1(v3 + 3, v3[6]);
  uint64_t result = sub_20A8C7410();
  if (result)
  {
    uint64_t result = sub_20A6C4240(v27, v4, v5, v6, v7);
    if (result)
    {
      uint64_t v22 = v3[2];
      uint64_t v21 = swift_allocObject();
      swift_weakInit();
      uint64_t v14 = v23;
      uint64_t v13 = v24;
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v11, v27, v24);
      unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      unint64_t v16 = (v9 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
      id v17 = (char *)swift_allocObject();
      *((void *)v17 + 2) = v4;
      *((void *)v17 + 3) = v5;
      *((void *)v17 + 4) = v6;
      *((void *)v17 + 5) = v7;
      *((void *)v17 + 6) = v21;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v17[v15], v11, v13);
      uint64_t v18 = &v17[v16];
      uint64_t v19 = v26;
      *(void *)uint64_t v18 = v25;
      *((void *)v18 + 1) = v19;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_20A8C48E0();
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_20A6C4240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_20A8CBFF0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = a2;
  v20[1] = a3;
  v20[2] = a4;
  v20[3] = a5;
  sub_20A8CBF40();
  sub_20A8CBF30();
  int v13 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  BOOL v14 = v13 == *MEMORY[0x263F58810];
  if (v13 == *MEMORY[0x263F58810] || v13 == *MEMORY[0x263F58820]) {
    goto LABEL_19;
  }
  if (v13 != *MEMORY[0x263F58818])
  {
    if (v13 == *MEMORY[0x263F58838]
      || v13 == *MEMORY[0x263F58840]
      || v13 == *MEMORY[0x263F58828]
      || v13 == *MEMORY[0x263F58830])
    {
      return 1;
    }
LABEL_19:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return v14;
  }
  return 0;
}

uint64_t sub_20A6C43F0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v98 = a7;
  *(void *)&long long v99 = a8;
  unint64_t v97 = a6;
  uint64_t v84 = a5;
  uint64_t v83 = a4;
  uint64_t v101 = a1;
  uint64_t v10 = sub_20A8C2800();
  uint64_t v96 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v95 = (char *)v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8CBFF0();
  MEMORY[0x270FA5388](v12 - 8);
  double v91 = (char *)v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_20A8C6F40();
  uint64_t v93 = *(void *)(v14 - 8);
  uint64_t v94 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v92 = (char *)v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_20A8C6B30();
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v85 = (char *)v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_20A8C6B20();
  uint64_t v89 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v88 = (char *)v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_20A8C6C10();
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v80 = (char *)v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_20A8C6770();
  uint64_t v77 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v20 = (char *)v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_20A8C6B50();
  uint64_t v79 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6C55BC(0, (unint64_t *)&unk_26AC6AEE8, MEMORY[0x263F58910], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v26 = (char *)v68 - v25;
  uint64_t v27 = sub_20A8CC1A0();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)v68 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v100 = result;
    unint64_t v102 = v97;
    uint64_t v103 = v98;
    uint64_t v104 = v99;
    uint64_t v105 = a9;
    uint64_t v74 = sub_20A8CBF40();
    sub_20A8CBF20();
    int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27);
    uint64_t v76 = v10;
    uint64_t v75 = a3;
    if (v32 == 1)
    {
      sub_20A6C5530((uint64_t)v26);
      uint64_t v33 = *MEMORY[0x263F24D48];
LABEL_14:
      swift_bridgeObjectRetain();
      uint64_t v49 = v80;
      sub_20A8C6C00();
      sub_20A6C55BC(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
      uint64_t v51 = v50;
      uint64_t v52 = sub_20A8C4620();
      uint64_t v98 = v52;
      uint64_t v53 = *(void *)(v52 - 8);
      uint64_t v54 = *(unsigned __int8 *)(v53 + 80);
      uint64_t v55 = (v54 + 32) & ~v54;
      uint64_t v56 = v55 + *(void *)(v53 + 72);
      uint64_t v84 = v54 | 7;
      uint64_t v79 = v51;
      uint64_t v78 = v56;
      uint64_t v57 = swift_allocObject();
      long long v99 = xmmword_20A8D3DC0;
      *(_OWORD *)(v57 + 16) = xmmword_20A8D3DC0;
      uint64_t v83 = *(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 104);
      v83(v57 + v55, v33, v52);
      sub_20A6C5620(&qword_26AC699C0, MEMORY[0x263F79D58]);
      unint64_t v97 = 0x800000020A90A920;
      uint64_t v58 = v33;
      uint64_t v59 = v82;
      sub_20A8C45B0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v49, v59);
      (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v85, v100 + qword_26AC7ABC0, v87);
      uint64_t v60 = v88;
      sub_20A8C6B10();
      uint64_t v61 = swift_allocObject();
      *(_OWORD *)(v61 + 16) = v99;
      uint64_t v62 = v83;
      v83(v61 + v55, v58, v98);
      sub_20A6C5620(&qword_26AC699A8, MEMORY[0x263F79CC8]);
      uint64_t v63 = v90;
      sub_20A8C45B0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v89 + 8))(v60, v63);
      sub_20A8CBF30();
      uint64_t v64 = v92;
      sub_20A8C6F30();
      uint64_t v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = v99;
      v62(v65 + v55, v58, v98);
      sub_20A6C5620(&qword_26AC69A18, MEMORY[0x263F79F88]);
      uint64_t v66 = v94;
      sub_20A8C45B0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v64, v66);
      sub_20A8C7050();
      uint64_t v67 = v95;
      sub_20A8CBF10();
      sub_20A6C5620(&qword_26AC69A58, MEMORY[0x263F7A050]);
      sub_20A8C4580();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v67, v76);
    }
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v30, v26, v27);
    uint64_t result = sub_20A8CC190();
    if ((~*(void *)&v34 & 0x7FF0000000000000) != 0)
    {
      *(void *)&long long v99 = v20;
      if (v34 > -2147483650.0)
      {
        if (v34 < 2147483650.0)
        {
          sub_20A8C6B40();
          sub_20A6C55BC(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
          uint64_t v36 = v35;
          uint64_t v37 = sub_20A8C4620();
          uint64_t v38 = *(void *)(v37 - 8);
          uint64_t v39 = *(unsigned __int8 *)(v38 + 80);
          uint64_t v40 = (v39 + 32) & ~v39;
          uint64_t v41 = v40 + *(void *)(v38 + 72);
          uint64_t v73 = v36;
          uint64_t v72 = v41;
          uint64_t v71 = v39 | 7;
          uint64_t v42 = swift_allocObject();
          long long v69 = xmmword_20A8D3DC0;
          *(_OWORD *)(v42 + 16) = xmmword_20A8D3DC0;
          uint64_t v43 = *(void (**)(void))(v38 + 104);
          LODWORD(v98) = *MEMORY[0x263F24D48];
          unint64_t v97 = v37;
          uint64_t v70 = (void (*)(uint64_t, void, unint64_t))v43;
          v43(v42 + v40);
          sub_20A6C5620((unint64_t *)&unk_26AC810D0, MEMORY[0x263F79CF8]);
          v68[1] = "";
          sub_20A8C45B0();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v79 + 8))(v23, v21);
          uint64_t result = sub_20A8CC180();
          if ((~*(void *)&v44 & 0x7FF0000000000000) != 0)
          {
            if (v44 > -2147483650.0)
            {
              if (v44 < 2147483650.0)
              {
                uint64_t result = sub_20A8CC180();
                if ((~*(void *)&v45 & 0x7FF0000000000000) != 0)
                {
                  if (v45 > -2147483650.0)
                  {
                    if (v45 < 2147483650.0)
                    {
                      uint64_t v46 = v99;
                      sub_20A8C6760();
                      uint64_t v47 = swift_allocObject();
                      *(_OWORD *)(v47 + 16) = v69;
                      uint64_t v33 = v98;
                      v70(v47 + v40, v98, v97);
                      sub_20A6C5620((unint64_t *)&unk_26AC810C0, MEMORY[0x263F79980]);
                      uint64_t v48 = v78;
                      sub_20A8C45B0();
                      swift_bridgeObjectRelease();
                      (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v46, v48);
                      (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
                      goto LABEL_14;
                    }
LABEL_24:
                    __break(1u);
                    return result;
                  }
LABEL_23:
                  __break(1u);
                  goto LABEL_24;
                }
LABEL_22:
                __break(1u);
                goto LABEL_23;
              }
LABEL_21:
              __break(1u);
              goto LABEL_22;
            }
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
LABEL_19:
          __break(1u);
          goto LABEL_20;
        }
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_20A6C5218()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  uint64_t v1 = v0 + qword_26AC7ABC0;
  uint64_t v2 = sub_20A8C6B30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_20A6C528C()
{
  sub_20A6C5218();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AdAnalyticsJournalEntryProcessor()
{
  return swift_getGenericMetadata();
}

uint64_t sub_20A6C52FC(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 96);
}

uint64_t sub_20A6C5304(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 104);
}

uint64_t sub_20A6C530C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A6C3FE4(a1, a2, a3);
}

uint64_t sub_20A6C5330()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A6C5368()
{
  uint64_t v1 = sub_20A8CBF40();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A6C545C(uint64_t a1)
{
  unint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = *(void *)(sub_20A8CBF40() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_20A6C43F0(a1, v1[6], (uint64_t)v1 + v8, *(void (**)(uint64_t, uint64_t, uint64_t))((char *)v1 + v9), *(void *)((char *)v1 + v9 + 8), v3, v4, v5, v6);
}

uint64_t sub_20A6C5530(uint64_t a1)
{
  sub_20A6C55BC(0, (unint64_t *)&unk_26AC6AEE8, MEMORY[0x263F58910], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_20A6C55BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A6C5620(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for EmptyListViewRenderer()
{
  return self;
}

uint64_t sub_20A6C568C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_20A6C5D9C(&qword_26AC728A0, a2, (void (*)(uint64_t))type metadata accessor for EmptyListViewRenderer);
  *(void *)(a1 + 8) = result;
  return result;
}

id sub_20A6C56E4(double *a1, char *a2)
{
  uint64_t v5 = v2 + 16;
  swift_beginAccess();
  uint64_t v46 = (void *)(v2 + 16);
  uint64_t v6 = __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
  uint64_t v8 = *(void *)(*v6 + 40);
  uint64_t v7 = *(void *)(*v6 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v6 + 16), v8);
  uint64_t v9 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v7 + 16) + 56))(v8);
  double v45 = a2;
  objc_msgSend(a2, sel_setBackgroundColor_, v9);

  CGFloat v10 = *a1;
  double v11 = a1[1];
  double v12 = a1[2];
  double v13 = a1[3];
  objc_msgSend(a2, sel_setFrame_, *a1, v11, v12, v13);
  id v48 = *(id *)&a2[OBJC_IVAR____TtC8StocksUI13EmptyListView_titleLabel];
  objc_msgSend(v48, (SEL)&off_263FDE418, a1[6], a1[7], a1[8], a1[9]);
  sub_20A4342F4(v5, (uint64_t)v49);
  uint64_t v14 = __swift_project_boxed_opaque_existential_1(v49, v50);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v43 = self;
  id v15 = objc_msgSend(v43, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v16 = (void *)*v14;
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v18 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  swift_bridgeObjectRetain();
  id v19 = v18;
  uint64_t v20 = sub_20A512758();
  uint64_t v21 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v20;
  uint64_t v22 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v21;
  *(void *)(inited + 72) = v22;
  uint64_t v23 = v16[5];
  uint64_t v24 = v16[6];
  __swift_project_boxed_opaque_existential_1(v16 + 2, v23);
  uint64_t v25 = *(void *)(v24 + 16);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 224);
  id v27 = v22;
  uint64_t v28 = v26(v23, v25);
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v28;
  sub_20A4CF8B0(inited);
  id v29 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v30 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A6C5D9C((unint64_t *)&qword_26AC7F9F8, 255, type metadata accessor for Key);
  uint64_t v31 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v32 = objc_msgSend(v29, sel_initWithString_attributes_, v30, v31, 0x800000020A903070);
  swift_bridgeObjectRelease();

  objc_msgSend(v48, sel_setAttributedText_, v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  objc_msgSend(v48, sel_setTextAlignment_, 1);
  objc_msgSend(v48, sel_setNumberOfLines_, 0);
  objc_msgSend(v48, sel_setLineBreakMode_, 0);
  uint64_t v33 = *(void **)&v45[OBJC_IVAR____TtC8StocksUI13EmptyListView_descriptionLabel];
  objc_msgSend(v33, sel_setFrame_, a1[10], a1[11], a1[12], a1[13]);
  sub_20A4342F4((uint64_t)v46, (uint64_t)v49);
  __swift_project_boxed_opaque_existential_1(v49, v50);
  id v34 = objc_msgSend(v43, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v35 = sub_20A512A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(v33, sel_setAttributedText_, v35, 0x800000020A903130);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  objc_msgSend(v33, sel_setTextAlignment_, 1);
  objc_msgSend(v33, sel_setNumberOfLines_, 0);
  objc_msgSend(v33, sel_setLineBreakMode_, 0);
  uint64_t v36 = *(void **)&v45[OBJC_IVAR____TtC8StocksUI13EmptyListView_button];
  id v37 = objc_msgSend(v43, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v38 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v36, sel_setTitle_forState_, v38, 0, 0x800000020A90A9C0);

  __swift_project_boxed_opaque_existential_1(v46, *(void *)(v47 + 40));
  sub_20A512C78(v36);
  objc_msgSend(v36, sel_sizeToFit);
  objc_msgSend(v48, sel_frame);
  double Width = CGRectGetWidth(v51);
  objc_msgSend(v33, sel_frame);
  double v40 = CGRectGetWidth(v52);
  if (Width <= v40) {
    double Width = v40;
  }
  objc_msgSend(v36, sel_frame);
  double v41 = CGRectGetWidth(v53);
  if (Width <= v41) {
    double Width = v41;
  }
  v54.origin.CGFloat x = v10;
  v54.origin.CGFloat y = v11;
  v54.size.CGFloat width = v12;
  v54.size.CGFloat height = v13;
  objc_msgSend(v36, sel_setFrame_, (CGRectGetWidth(v54) - Width) * 0.5, a1[4], Width, a1[5]);
  return objc_msgSend(v36, sel_setHidden_, ((_BYTE)a1[14] & 1) == 0);
}

uint64_t sub_20A6C5D9C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6C5E2C()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EntitlementsOverrideProvider()
{
  return self;
}

id sub_20A6C5E88(void *a1, void *a2, uint64_t a3, uint64_t a4, char a5, char a6, char a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  if (a9)
  {
    uint64_t v17 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = 0;
  }
  uint64_t v18 = sub_20A8C2800();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  uint64_t v21 = 0;
  if (v20(a11, 1, v18) != 1)
  {
    uint64_t v21 = (void *)sub_20A8C2730();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a11, v18);
  }
  if (v20(a12, 1, v18) == 1)
  {
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = (void *)sub_20A8C2730();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a12, v18);
  }
  if (a16)
  {
    uint64_t v23 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = 0;
  }
  LOBYTE(v26) = a10 & 1;
  id v24 = objc_msgSend(v27, sel_initWithAppAdamID_inAppAdamID_chargeCurrencyCode_newsAppPurchase_isTrialPeriod_isPurchaser_servicesBundleAdamID_isAmplifyUser_startDate_expiryDate_initialPurchaseTimestamp_serviceBeginsTimestamp_vendorAdHocOfferID_, a1, a2, v16, a5 & 1, a6 & 1, a7 & 1, v17, v26, v21, v22, a13, a14, v23);

  return v24;
}

id sub_20A6C60C0()
{
  uint64_t v1 = v0;
  sub_20A42D040(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v106 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v106 - v6;
  sub_20A8C5AC0();
  id v8 = 0;
  if ((sub_20A8C5AB0() & 1) == 0) {
    return v8;
  }
  id v9 = (id)NewsCoreUserDefaults();
  CGFloat v10 = (void *)sub_20A8CE240();
  unsigned int v11 = objc_msgSend(v9, sel_BOOLForKey_, v10);

  id v12 = (id)NewsCoreUserDefaults();
  double v13 = (void *)sub_20A8CE240();
  unsigned int v113 = objc_msgSend(v12, sel_BOOLForKey_, v13);

  id v14 = (id)NewsCoreUserDefaults();
  id v15 = (void *)sub_20A8CE240();
  unsigned int v112 = objc_msgSend(v14, sel_BOOLForKey_, v15);

  id v16 = (id)NewsCoreUserDefaults();
  uint64_t v17 = (void *)sub_20A8CE240();
  unsigned int v18 = objc_msgSend(v16, sel_BOOLForKey_, v17);

  id v19 = (id)NewsCoreUserDefaults();
  uint64_t v20 = (void *)sub_20A8CE240();
  unsigned int v21 = objc_msgSend(v19, sel_BOOLForKey_, v20);

  uint64_t v116 = 0;
  uint64_t v22 = 0x323232323232;
  if (!v18) {
    uint64_t v22 = 0;
  }
  uint64_t v111 = v22;
  unint64_t v23 = 0xE600000000000000;
  if (!v18) {
    unint64_t v23 = 0;
  }
  uint64_t v114 = 0;
  unint64_t v115 = v23;
  if (v21)
  {
    id v24 = objc_msgSend(*(id *)(v1 + 16), sel_configuration);
    if (!v24) {
      goto LABEL_98;
    }
    uint64_t v25 = v24;
    if (objc_msgSend(v24, sel_respondsToSelector_, sel_paidBundleViaOfferConfig))
    {
      id v26 = objc_msgSend(v25, sel_paidBundleViaOfferConfig);
      swift_unknownObjectRelease();
      id v27 = objc_msgSend(v26, sel_vendorAdHocOfferIds);

      uint64_t v28 = (void *)sub_20A8CE5E0();
      if (v28[2])
      {
        uint64_t v29 = v28[5];
        uint64_t v114 = v28[4];
        uint64_t v116 = v29;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
    uint64_t v114 = sub_20A8CE280();
    uint64_t v116 = v30;
  }
LABEL_14:
  id v31 = (id)NewsCoreUserDefaults();
  id v32 = (void *)sub_20A8CE240();
  id v33 = objc_msgSend(v31, sel_integerForKey_, v32);

  switch((unint64_t)v33)
  {
    case 1uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return objc_msgSend(objc_allocWithZone(MEMORY[0x263F59440]), sel_initWithEntitlements_error_, 0, 0);
    case 2uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v34 = objc_allocWithZone(MEMORY[0x263F087E8]);
      id v35 = (void *)sub_20A8CE240();
      id v36 = objc_msgSend(v34, sel_initWithDomain_code_userInfo_, v35, 1001, 0);

      id v37 = objc_allocWithZone(MEMORY[0x263F59440]);
      id v38 = v36;
      uint64_t v39 = (void *)sub_20A8C23F0();

      id v8 = objc_msgSend(v37, sel_initWithEntitlements_error_, 0, v39);
      return v8;
    case 3uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v40 = objc_allocWithZone(MEMORY[0x263F59440]);
      sub_20A6C6ECC();
      double v41 = (void *)sub_20A8CE5D0();
      id v42 = objc_msgSend(v40, sel_initWithEntitlements_error_, v41, 0);
      goto LABEL_45;
    case 4uLL:
      id v43 = objc_msgSend(*(id *)(v1 + 16), sel_configuration);
      if (!v43) {
        goto LABEL_99;
      }
      double v44 = v43;
      if ((objc_msgSend(v43, sel_respondsToSelector_, sel_paidBundleConfig) & 1) == 0)
      {
        swift_unknownObjectRelease();
        goto LABEL_42;
      }
      id v45 = objc_msgSend(v44, sel_paidBundleConfig);
      swift_unknownObjectRelease();
      id v8 = objc_msgSend(v45, sel_offeredBundlePurchaseIDs);
      if (v8)
      {
        uint64_t v46 = (void *)sub_20A8CE5E0();

        if (v46[2])
        {
          uint64_t v48 = v46[4];
          unint64_t v47 = v46[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v49 = HIBYTE(v47) & 0xF;
          uint64_t v50 = v48 & 0xFFFFFFFFFFFFLL;
          if ((v47 & 0x2000000000000000) != 0 ? HIBYTE(v47) & 0xF : v48 & 0xFFFFFFFFFFFFLL)
          {
            if ((v47 & 0x1000000000000000) != 0)
            {
              uint64_t v53 = (uint64_t)sub_20A8038A4(v48, v47, 10);
              LOBYTE(v48) = v105;
              goto LABEL_74;
            }
            if ((v47 & 0x2000000000000000) == 0)
            {
              if ((v48 & 0x1000000000000000) != 0) {
                CGRect v52 = (unsigned __int8 *)((v47 & 0xFFFFFFFFFFFFFFFLL) + 32);
              }
              else {
                CGRect v52 = (unsigned __int8 *)sub_20A8CF420();
              }
              uint64_t v53 = (uint64_t)sub_20A80388C(v52, v50, 10);
              LOBYTE(v48) = v54 & 1;
              goto LABEL_74;
            }
            uint64_t v119 = v48;
            uint64_t v120 = v47 & 0xFFFFFFFFFFFFFFLL;
            if (v48 == 43)
            {
              if (v49)
              {
                if (v49 != 1 && (BYTE1(v48) - 48) <= 9u)
                {
                  uint64_t v53 = (BYTE1(v48) - 48);
                  if (v49 == 2) {
                    goto LABEL_73;
                  }
                  if ((BYTE2(v48) - 48) <= 9u)
                  {
                    uint64_t v53 = 10 * (BYTE1(v48) - 48) + (BYTE2(v48) - 48);
                    uint64_t v82 = v49 - 3;
                    if (v82)
                    {
                      uint64_t v83 = (unsigned __int8 *)&v119 + 3;
                      while (1)
                      {
                        unsigned int v84 = *v83 - 48;
                        if (v84 > 9) {
                          goto LABEL_71;
                        }
                        uint64_t v85 = 10 * v53;
                        if ((unsigned __int128)(v53 * (__int128)10) >> 64 != (10 * v53) >> 63) {
                          goto LABEL_71;
                        }
                        uint64_t v53 = v85 + v84;
                        if (__OFADD__(v85, v84)) {
                          goto LABEL_71;
                        }
                        LOBYTE(v48) = 0;
                        ++v83;
                        if (!--v82) {
                          goto LABEL_74;
                        }
                      }
                    }
                    goto LABEL_73;
                  }
                }
                goto LABEL_71;
              }
            }
            else
            {
              if (v48 != 45)
              {
                if (v49 && (v48 - 48) <= 9u)
                {
                  uint64_t v53 = (v48 - 48);
                  if (v49 == 1) {
                    goto LABEL_73;
                  }
                  if ((BYTE1(v48) - 48) <= 9u)
                  {
                    uint64_t v53 = 10 * (v48 - 48) + (BYTE1(v48) - 48);
                    uint64_t v97 = v49 - 2;
                    if (v97)
                    {
                      uint64_t v98 = (unsigned __int8 *)&v119 + 2;
                      while (1)
                      {
                        unsigned int v99 = *v98 - 48;
                        if (v99 > 9) {
                          goto LABEL_71;
                        }
                        uint64_t v100 = 10 * v53;
                        if ((unsigned __int128)(v53 * (__int128)10) >> 64 != (10 * v53) >> 63) {
                          goto LABEL_71;
                        }
                        uint64_t v53 = v100 + v99;
                        if (__OFADD__(v100, v99)) {
                          goto LABEL_71;
                        }
                        LOBYTE(v48) = 0;
                        ++v98;
                        if (!--v97) {
                          goto LABEL_74;
                        }
                      }
                    }
                    goto LABEL_73;
                  }
                }
LABEL_71:
                uint64_t v53 = 0;
                LOBYTE(v48) = 1;
                goto LABEL_74;
              }
              if (v49)
              {
                if (v49 != 1 && (BYTE1(v48) - 48) <= 9u)
                {
                  if (v49 == 2)
                  {
                    LOBYTE(v48) = 0;
                    uint64_t v53 = -(uint64_t)(BYTE1(v48) - 48);
LABEL_74:
                    swift_bridgeObjectRelease();
                    if ((v48 & 1) == 0)
                    {
                      id v110 = v45;
                      id v109 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 111111);
                      id v86 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v53);
                      sub_20A8C27F0();
                      uint64_t v87 = sub_20A8C2800();
                      uint64_t v88 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56);
                      v88(v7, 0, 1, v87);
                      sub_20A8C27F0();
                      v88(v4, 0, 1, v87);
                      id v89 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 0);
                      id v90 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 0);
                      id v91 = objc_allocWithZone(MEMORY[0x263F59660]);
                      id v92 = sub_20A6C5E88(v109, v86, 4477781, 0xE300000000000000, 1, v11, v113, v111, v115, v112, (uint64_t)v7, (uint64_t)v4, v89, v90, v114, v116);
                      sub_20A45F33C();
                      uint64_t v93 = swift_allocObject();
                      *(_OWORD *)(v93 + 16) = xmmword_20A8D5CA0;
                      *(void *)(v93 + 32) = v92;
                      uint64_t v119 = v93;
                      sub_20A8CE620();
                      id v94 = objc_allocWithZone(MEMORY[0x263F59440]);
                      sub_20A6C6ECC();
                      id v95 = v92;
                      uint64_t v96 = (void *)sub_20A8CE5D0();
                      swift_bridgeObjectRelease();
                      id v8 = objc_msgSend(v94, sel_initWithEntitlements_error_, v96, 0);

                      return v8;
                    }

                    goto LABEL_42;
                  }
                  if ((BYTE2(v48) - 48) <= 9u)
                  {
                    uint64_t v53 = -10 * (BYTE1(v48) - 48) - (BYTE2(v48) - 48);
                    uint64_t v101 = v49 - 3;
                    if (v101)
                    {
                      unint64_t v102 = (unsigned __int8 *)&v119 + 3;
                      while (1)
                      {
                        unsigned int v103 = *v102 - 48;
                        if (v103 > 9) {
                          goto LABEL_71;
                        }
                        uint64_t v104 = 10 * v53;
                        if ((unsigned __int128)(v53 * (__int128)10) >> 64 != (10 * v53) >> 63) {
                          goto LABEL_71;
                        }
                        uint64_t v53 = v104 - v103;
                        if (__OFSUB__(v104, v103)) {
                          goto LABEL_71;
                        }
                        LOBYTE(v48) = 0;
                        ++v102;
                        if (!--v101) {
                          goto LABEL_74;
                        }
                      }
                    }
LABEL_73:
                    LOBYTE(v48) = 0;
                    goto LABEL_74;
                  }
                }
                goto LABEL_71;
              }
              __break(1u);
            }
            __break(1u);
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
            JUMPOUT(0x20A6C6EB4);
          }
        }

        swift_bridgeObjectRelease();
LABEL_42:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 0;
      }

LABEL_47:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 5uLL:
      id v55 = (id)NewsCoreUserDefaults();
      uint64_t v56 = (void *)sub_20A8CE240();
      id v8 = objc_msgSend(v55, sel_stringForKey_, v56);

      if (!v8) {
        goto LABEL_47;
      }
      LODWORD(v109) = v11;
      uint64_t v57 = sub_20A8CE280();
      uint64_t v59 = v58;

      uint64_t v119 = v57;
      uint64_t v120 = v59;
      uint64_t v117 = 44;
      unint64_t v118 = 0xE100000000000000;
      sub_20A48C5C0();
      uint64_t v60 = sub_20A8CF1F0();
      swift_bridgeObjectRelease();
      uint64_t v119 = MEMORY[0x263F8EE78];
      uint64_t v61 = *(void *)(v60 + 16);
      if (v61)
      {
        uint64_t v107 = v7;
        double v108 = v4;
        swift_bridgeObjectRetain();
        v106[1] = v60;
        uint64_t v62 = (unint64_t *)(v60 + 40);
        uint64_t v63 = v115;
        uint64_t v64 = (uint64_t)v107;
        do
        {
          uint64_t v65 = *(v62 - 1);
          unint64_t v66 = *v62;
          swift_bridgeObjectRetain_n();
          uint64_t v67 = sub_20A801F20(v65, v66);
          if (v68)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v69 = v67;
            id v110 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 111111);
            id v70 = objc_msgSend(objc_allocWithZone(NSNumber), (SEL)&protocolRef_FCFeedPersonalizingItem + 3, v69);
            swift_bridgeObjectRetain();
            sub_20A8C27F0();
            uint64_t v71 = sub_20A8C2800();
            uint64_t v72 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56);
            v72(v64, 0, 1, v71);
            uint64_t v73 = (uint64_t)v108;
            sub_20A8C27F0();
            v72(v73, 0, 1, v71);
            id v74 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 0);
            id v75 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 0);
            id v76 = objc_allocWithZone(MEMORY[0x263F59660]);
            uint64_t v77 = swift_bridgeObjectRetain();
            id v78 = sub_20A6C5E88(v110, v70, 4477781, 0xE300000000000000, 1, (char)v109, v113, v111, v63, v112, v64, v73, v74, v75, v114, v77);
            uint64_t v79 = swift_bridgeObjectRelease();
            if (v78)
            {
              MEMORY[0x2105268E0](v79);
              if (*(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_20A8CE690();
              }
              sub_20A8CE6B0();
              sub_20A8CE620();
            }
          }
          v62 += 2;
          --v61;
        }
        while (v61);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v80 = objc_allocWithZone(MEMORY[0x263F59440]);
      sub_20A6C6ECC();
      double v41 = (void *)sub_20A8CE5D0();
      swift_bridgeObjectRelease();
      id v42 = objc_msgSend(v80, sel_initWithEntitlements_error_, v41, 0);
LABEL_45:
      id v8 = v42;

      return v8;
    default:
      goto LABEL_42;
  }
  return v8;
}

unint64_t sub_20A6C6ECC()
{
  unint64_t result = qword_26763D3D0;
  if (!qword_26763D3D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26763D3D0);
  }
  return result;
}

id sub_20A6C6F0C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = &v2[OBJC_IVAR____TtC8StocksUI17WebViewController_styler];
  swift_beginAccess();
  sub_20A4342F4((uint64_t)v4, (uint64_t)v22);
  uint64_t v5 = v23;
  uint64_t v6 = v24;
  __swift_project_boxed_opaque_existential_1(v22, v23);
  uint64_t v7 = *(void *)(v6 + 8);
  id v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8);
  uint64_t v20 = v5;
  uint64_t v21 = v6;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v19);
  v8(a1, v5, v7);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  sub_20A42BEBC(&v19, (uint64_t)v4);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  id v9 = __swift_project_boxed_opaque_existential_1(v4, *((void *)v4 + 3));
  uint64_t v10 = *v9;
  unsigned int v11 = (void *)(*v9 + 16);
  uint64_t v13 = *(void *)(*v9 + 40);
  uint64_t v12 = *(void *)(*v9 + 48);
  __swift_project_boxed_opaque_existential_1(v11, v13);
  id v14 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v12 + 16) + 104))(v13);
  objc_msgSend(v2, sel_setPreferredControlTintColor_, v14);

  uint64_t v16 = *(void *)(v10 + 40);
  uint64_t v15 = *(void *)(v10 + 48);
  __swift_project_boxed_opaque_existential_1(v11, v16);
  uint64_t v17 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v15 + 16) + 64))(v16);
  objc_msgSend(v2, sel_setPreferredBarTintColor_, v17);

  return objc_msgSend(v2, sel_setDismissButtonStyle_, 0);
}

uint64_t sub_20A6C7148(char a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = sub_20A8C2830();
  v26[0] = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for WebViewSession();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unsigned int v11 = (void *)((char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A6C8B3C(0, &qword_26763D408, (void (*)(uint64_t))type metadata accessor for WebViewSession);
  MEMORY[0x270FA5388](v12 - 8);
  id v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v16 = MEMORY[0x270FA5388](v15);
  unsigned int v18 = (char *)v26 - v17;
  v29.receiver = v2;
  v29.super_class = ObjectType;
  v26[1] = ObjectType;
  objc_msgSendSuper2(&v29, sel_viewDidAppear_, a1 & 1, v16);
  uint64_t v19 = (uint64_t)&v2[OBJC_IVAR____TtC8StocksUI17WebViewController_session];
  swift_beginAccess();
  sub_20A6C8B90(v19, (uint64_t)v18);
  LODWORD(ObjectType) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v18, 1, v8);
  sub_20A6C8C10((uint64_t)v18);
  if (ObjectType == 1)
  {
    sub_20A8C2820();
    uint64_t v20 = sub_20A8C2810();
    uint64_t v22 = v21;
    (*(void (**)(char *, uint64_t))(v26[0] + 8))(v7, v5);
    sub_20A8C27F0();
    uint64_t *v11 = v20;
    v11[1] = v22;
    *((unsigned char *)v11 + *(int *)(v8 + 24)) = 0;
    uint64_t v23 = &v2[OBJC_IVAR____TtC8StocksUI17WebViewController_webViewCoordinator];
    swift_beginAccess();
    uint64_t v24 = *((void *)v23 + 3);
    if (v24)
    {
      __swift_project_boxed_opaque_existential_1(v23, v24);
      sub_20A5EFA54((uint64_t)v11);
    }
    sub_20A6C8C88((uint64_t)v11, (uint64_t)v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v8);
    swift_beginAccess();
    sub_20A6C8D48((uint64_t)v14, v19);
    swift_endAccess();
  }
  if (*(void *)&v2[OBJC_IVAR____TtC8StocksUI17WebViewController_navigator])
  {
    sub_20A6C8A74(&qword_26763D410, (void (*)(uint64_t))type metadata accessor for WebViewController);
    swift_retain();
    sub_20A8C8580();
    swift_release();
  }
  else
  {
    uint64_t v28 = 0;
    memset(v27, 0, sizeof(v27));
  }
  return sub_20A49127C((uint64_t)v27, &qword_26763D420, &qword_26763D428);
}

uint64_t sub_20A6C7554(char a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_20A6C8B3C(0, &qword_26763D408, (void (*)(uint64_t))type metadata accessor for WebViewSession);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v19[-v8];
  uint64_t v10 = type metadata accessor for WebViewSession();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = MEMORY[0x270FA5388](v10);
  id v14 = &v19[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20.receiver = v1;
  v20.super_class = ObjectType;
  objc_msgSendSuper2(&v20, sel_viewDidDisappear_, a1 & 1, v12);
  uint64_t v15 = (uint64_t)&v1[OBJC_IVAR____TtC8StocksUI17WebViewController_session];
  swift_beginAccess();
  sub_20A6C8B90(v15, (uint64_t)v9);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
    return sub_20A6C8C10((uint64_t)v9);
  }
  sub_20A6C8C88((uint64_t)v9, (uint64_t)v14);
  uint64_t v17 = &v1[OBJC_IVAR____TtC8StocksUI17WebViewController_webViewCoordinator];
  swift_beginAccess();
  uint64_t v18 = *((void *)v17 + 3);
  if (v18)
  {
    __swift_project_boxed_opaque_existential_1(v17, v18);
    swift_endAccess();
    swift_retain();
    sub_20A8C48E0();
    swift_release();
    sub_20A6C8CEC((uint64_t)v14);
  }
  else
  {
    sub_20A6C8CEC((uint64_t)v14);
    swift_endAccess();
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v6, 1, 1, v10);
  swift_beginAccess();
  sub_20A6C8D48((uint64_t)v6, v15);
  return swift_endAccess();
}

uint64_t sub_20A6C7A64()
{
  return type metadata accessor for WebViewController();
}

uint64_t type metadata accessor for WebViewController()
{
  uint64_t result = qword_26763D3F8;
  if (!qword_26763D3F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A6C7AB8()
{
  sub_20A6C8B3C(319, &qword_26763D408, (void (*)(uint64_t))type metadata accessor for WebViewSession);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

id sub_20A6C7B84(char a1)
{
  return objc_msgSend(*v1, sel_setSu_showingLinkPreview_, a1 & 1);
}

uint64_t sub_20A6C7B9C@<X0>(uint64_t a1@<X8>)
{
  sub_20A8CA270();
  return sub_20A6C8ABC((uint64_t)v3, a1);
}

uint64_t sub_20A6C7BD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20A8C8EB0();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == *MEMORY[0x263F7D5D8])
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x263F7DB00];
LABEL_5:
    uint64_t v11 = *v10;
    uint64_t v12 = sub_20A8CA130();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(a2, v11, v12);
    uint64_t v13 = *MEMORY[0x263F7DB18];
    uint64_t v14 = sub_20A8CA140();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(a2, v13, v14);
  }
  if (v9 == *MEMORY[0x263F7D5D0])
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x263F7DB08];
    goto LABEL_5;
  }
  uint64_t result = sub_20A8CF520();
  __break(1u);
  return result;
}

uint64_t sub_20A6C7DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A6C7BD8(a1, a2);
}

uint64_t sub_20A6C7DF0@<X0>(uint64_t a1@<X8>)
{
  objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 0, 0);
  uint64_t v3 = *MEMORY[0x263F7DBB0];
  uint64_t v4 = sub_20A8CA260();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104);

  return v5(a1, v3, v4);
}

uint64_t sub_20A6C7E7C()
{
  uint64_t v1 = sub_20A8C2830();
  uint64_t v23 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for WebViewSession();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A6C8B3C(0, &qword_26763D408, (void (*)(uint64_t))type metadata accessor for WebViewSession);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v22 - v12;
  uint64_t v24 = v0;
  uint64_t v14 = v0 + OBJC_IVAR____TtC8StocksUI17WebViewController_session;
  swift_beginAccess();
  sub_20A6C8B90(v14, (uint64_t)v13);
  int v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4);
  uint64_t result = sub_20A6C8C10((uint64_t)v13);
  if (v15 == 1)
  {
    sub_20A8C2820();
    uint64_t v17 = sub_20A8C2810();
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v1);
    sub_20A8C27F0();
    *uint64_t v7 = v17;
    v7[1] = v19;
    *((unsigned char *)v7 + *(int *)(v4 + 24)) = 1;
    objc_super v20 = (void *)(v24 + OBJC_IVAR____TtC8StocksUI17WebViewController_webViewCoordinator);
    swift_beginAccess();
    uint64_t v21 = v20[3];
    if (v21)
    {
      __swift_project_boxed_opaque_existential_1(v20, v21);
      sub_20A5EFA54((uint64_t)v7);
    }
    sub_20A6C8C88((uint64_t)v7, (uint64_t)v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    swift_beginAccess();
    sub_20A6C8D48((uint64_t)v10, v14);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_20A6C8178()
{
  sub_20A6C8B3C(0, &qword_26763D408, (void (*)(uint64_t))type metadata accessor for WebViewSession);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v14[-1] - v2;
  uint64_t v4 = type metadata accessor for WebViewSession();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC8StocksUI17WebViewController_session;
  swift_beginAccess();
  sub_20A6C8B90(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_20A6C8C10((uint64_t)v3);
  }
  sub_20A6C8C88((uint64_t)v3, (uint64_t)v7);
  uint64_t v10 = v0 + OBJC_IVAR____TtC8StocksUI17WebViewController_webViewCoordinator;
  swift_beginAccess();
  if (*(void *)(v10 + 24))
  {
    sub_20A4342F4(v10, (uint64_t)v14);
    swift_endAccess();
    __swift_project_boxed_opaque_existential_1(v14, v14[3]);
    uint64_t v11 = (void (*)(uint64_t, uint64_t, uint64_t))off_26BE676B8[0];
    uint64_t v12 = type metadata accessor for WebViewCoordinator();
    v11((uint64_t)v7, v12, (uint64_t)&off_26BE676A8);
    sub_20A6C8CEC((uint64_t)v7);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    sub_20A6C8CEC((uint64_t)v7);
    return swift_endAccess();
  }
}

uint64_t sub_20A6C8388()
{
  sub_20A6C8B3C(0, &qword_26763D408, (void (*)(uint64_t))type metadata accessor for WebViewSession);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v14[-1] - v2;
  uint64_t v4 = type metadata accessor for WebViewSession();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC8StocksUI17WebViewController_session;
  swift_beginAccess();
  sub_20A6C8B90(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_20A6C8C10((uint64_t)v3);
  }
  sub_20A6C8C88((uint64_t)v3, (uint64_t)v7);
  uint64_t v10 = v0 + OBJC_IVAR____TtC8StocksUI17WebViewController_webViewCoordinator;
  swift_beginAccess();
  if (*(void *)(v10 + 24))
  {
    sub_20A4342F4(v10, (uint64_t)v14);
    swift_endAccess();
    __swift_project_boxed_opaque_existential_1(v14, v14[3]);
    uint64_t v11 = (void (*)(uint64_t, uint64_t, uint64_t))off_26BE676C0;
    uint64_t v12 = type metadata accessor for WebViewCoordinator();
    v11((uint64_t)v7, v12, (uint64_t)&off_26BE676A8);
    sub_20A6C8CEC((uint64_t)v7);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    sub_20A6C8CEC((uint64_t)v7);
    return swift_endAccess();
  }
}

uint64_t sub_20A6C8598()
{
  sub_20A6C8B3C(0, &qword_26763D408, (void (*)(uint64_t))type metadata accessor for WebViewSession);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = &v15[-v5];
  uint64_t v7 = type metadata accessor for WebViewSession();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = v0 + OBJC_IVAR____TtC8StocksUI17WebViewController_session;
  swift_beginAccess();
  sub_20A6C8B90(v11, (uint64_t)v6);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_20A6C8C10((uint64_t)v6);
  }
  sub_20A6C8C88((uint64_t)v6, (uint64_t)v10);
  uint64_t v13 = (void *)(v0 + OBJC_IVAR____TtC8StocksUI17WebViewController_webViewCoordinator);
  swift_beginAccess();
  uint64_t v14 = v13[3];
  if (v14)
  {
    __swift_project_boxed_opaque_existential_1(v13, v14);
    swift_endAccess();
    swift_retain();
    sub_20A8C48E0();
    swift_release();
    sub_20A6C8CEC((uint64_t)v10);
  }
  else
  {
    sub_20A6C8CEC((uint64_t)v10);
    swift_endAccess();
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v3, 1, 1, v7);
  swift_beginAccess();
  sub_20A6C8D48((uint64_t)v3, v11);
  return swift_endAccess();
}

uint64_t sub_20A6C880C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7A278](a1, a2, a3, a4, a5, ObjectType);
}

uint64_t sub_20A6C8890(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7A288](a1, a2, ObjectType);
}

uint64_t sub_20A6C88F0(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7A288](a1, a2, ObjectType);
}

uint64_t sub_20A6C8948(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7A2B0](a1, ObjectType);
}

uint64_t sub_20A6C8998()
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7A270](ObjectType);
}

uint64_t sub_20A6C89D4()
{
  return sub_20A6C8A74((unint64_t *)&unk_26AC6C730, (void (*)(uint64_t))type metadata accessor for StocksActivity);
}

uint64_t sub_20A6C8A1C(uint64_t a1)
{
  uint64_t result = sub_20A6C8A74(&qword_26763D410, (void (*)(uint64_t))type metadata accessor for WebViewController);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_20A6C8A74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6C8ABC(uint64_t a1, uint64_t a2)
{
  sub_20A6C8B3C(0, &qword_26763D418, type metadata accessor for UIEdgeInsets);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20A6C8B3C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A6C8B90(uint64_t a1, uint64_t a2)
{
  sub_20A6C8B3C(0, &qword_26763D408, (void (*)(uint64_t))type metadata accessor for WebViewSession);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A6C8C10(uint64_t a1)
{
  sub_20A6C8B3C(0, &qword_26763D408, (void (*)(uint64_t))type metadata accessor for WebViewSession);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A6C8C88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WebViewSession();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A6C8CEC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WebViewSession();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A6C8D48(uint64_t a1, uint64_t a2)
{
  sub_20A6C8B3C(0, &qword_26763D408, (void (*)(uint64_t))type metadata accessor for WebViewSession);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A6C8DC8(uint64_t a1)
{
  return sub_20A5F0228(a1, v1);
}

uint64_t sub_20A6C8DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_20A8C77E0();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v15 - v10;
  uint64_t result = sub_20A63CA8C();
  if ((v13 & 1) == 0)
  {
    uint64_t v14 = result;
    sub_20A6C91E0(a2);
    sub_20A6D49FC(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
    sub_20A8C8820();
    sub_20A6EE958((uint64_t)v5);
    sub_20A6D5744((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
    uint64_t result = sub_20A8C8830();
    if (v14 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v14 <= 0x7FFFFFFF)
    {
      sub_20A8C8820();
      sub_20A6EEC4C();
      sub_20A6D5744((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
      return sub_20A8C77B0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A6C8FD8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v3 = sub_20A8C77E0();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C5620();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v17 - v11;
  uint64_t result = sub_20A63CF74();
  if ((v14 & 1) == 0)
  {
    uint64_t v15 = result;
    v17[3] = sub_20A6C9458(a1);
    sub_20A63EB84();
    sub_20A8C8820();
    uint64_t v18 = v5;
    sub_20A4B142C((uint64_t)v5);
    uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
    v16(v12, v6);
    uint64_t result = sub_20A8C8830();
    if (v15 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v15 <= 0x7FFFFFFF)
    {
      sub_20A8C8820();
      v16(v9, v6);
      return sub_20A8C77B0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A6C91E0(uint64_t a1)
{
  sub_20A6A05D0(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (uint64_t (*)(uint64_t, void *))&v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_20A8CA990();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A6D56DC(a1, (uint64_t)v4, (uint64_t (*)(void))sub_20A6A05D0);
  if ((*(unsigned int (**)(uint64_t (*)(uint64_t, void *), uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_20A6D5744((uint64_t)v4, (uint64_t (*)(void))sub_20A6A05D0);
    uint64_t v4 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
    sub_20A6D49FC(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
    uint64_t v8 = v9;
    uint64_t v5 = sub_20A6D016C((unint64_t *)&unk_26AC69EA0, (unint64_t *)&qword_26AC69EB0, v4);
    sub_20A8CE840();
    sub_20A8CE8A0();
    uint64_t result = sub_20A8CE890();
    if (result < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
      goto LABEL_10;
    }
    uint64_t v11 = result;
    if (result <= 0x7FFFFFFF) {
      return v11;
    }
    __break(1u);
  }
  (*(void (**)(unsigned char *, uint64_t (*)(uint64_t, void *), uint64_t))(v6 + 32))(v8, v4, v5);
  uint64_t result = sub_20A8CA980();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v11 = result;
  if (result <= 0x7FFFFFFF)
  {
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    return v11;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20A6C9458(uint64_t a1)
{
  sub_20A6A05D0(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_20A8CA990();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A6D56DC(a1, (uint64_t)v4, (uint64_t (*)(void))sub_20A6A05D0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_20A6D5744((uint64_t)v4, (uint64_t (*)(void))sub_20A6A05D0);
    sub_20A63EB84();
    uint64_t v5 = v9;
    uint64_t v4 = (unsigned char *)sub_20A6D0124((unint64_t *)&unk_26763D458, (void (*)(uint64_t))sub_20A63EB84);
    sub_20A8CE840();
    sub_20A8CE8A0();
    uint64_t result = sub_20A8CE890();
    if (result < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
      goto LABEL_10;
    }
    uint64_t v11 = result;
    if (result <= 0x7FFFFFFF) {
      return v11;
    }
    __break(1u);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v8, v4, v5);
  uint64_t result = sub_20A8CA980();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v11 = result;
  if (result <= 0x7FFFFFFF)
  {
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    return v11;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20A6C96B8()
{
  uint64_t v21 = sub_20A8C7720();
  uint64_t v1 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C7710();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  uint64_t v24 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C6820();
  uint64_t v22 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  char v14 = (char *)&v21 - v13;
  sub_20A6C9A90(v0, (uint64_t)&v21 - v13);
  sub_20A8CAA70();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7A648], v21);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  sub_20A8C7700();
  sub_20A6D060C(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v15 = sub_20A8C4620();
  uint64_t v16 = *(void *)(v15 - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, void, uint64_t))(v16 + 104))(v18 + v17, *MEMORY[0x263F24D40], v15);
  sub_20A6D0124((unint64_t *)&unk_26AC69B50, MEMORY[0x263F7A640]);
  uint64_t v19 = v23;
  sub_20A8C4940();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v19);
  sub_20A8C48D0();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v22);
}

uint64_t sub_20A6C9A90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20A8CABF0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A6D0070(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = &v24[-v12];
  uint64_t v14 = a1 + OBJC_IVAR____TtC8StocksUI17ForYouFeedTracker_onDeckViewAction;
  swift_beginAccess();
  sub_20A6D56DC(v14, (uint64_t)v13, (uint64_t (*)(void))sub_20A6D0070);
  uint64_t v15 = sub_20A8C6820();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) != 1)
  {
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v16 + 32))(a2, v13, v15);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v10, 1, 1, v15);
    swift_beginAccess();
    sub_20A6D4750((uint64_t)v10, v14);
    return swift_endAccess();
  }
  sub_20A6D5744((uint64_t)v13, (uint64_t (*)(void))sub_20A6D0070);
  sub_20A8CAA90();
  int v17 = (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 88))(v7, v4);
  if (v17 == *MEMORY[0x263F7DE08])
  {
    uint64_t v18 = (unsigned int *)MEMORY[0x263F79A58];
LABEL_11:
    uint64_t v21 = *v18;
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 104);
    return v22(a2, v21, v15);
  }
  if (v17 == *MEMORY[0x263F7DE18] || v17 == *MEMORY[0x263F7DE20])
  {
    uint64_t v18 = (unsigned int *)MEMORY[0x263F79A48];
    goto LABEL_11;
  }
  if (v17 != *MEMORY[0x263F7DE10])
  {
    (*(void (**)(uint64_t, void, uint64_t))(v16 + 104))(a2, *MEMORY[0x263F79A48], v15);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v23 = sub_20A8CAA80();
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 104);
  if (v23) {
    uint64_t v21 = *MEMORY[0x263F79A28];
  }
  else {
    uint64_t v21 = *MEMORY[0x263F79A58];
  }
  return v22(a2, v21, v15);
}

uint64_t sub_20A6C9DF0(uint64_t a1)
{
  uint64_t v71 = a1;
  uint64_t v2 = (uint64_t (*)(uint64_t, void *))sub_20A8CCF10();
  uint64_t v99 = *((void *)v2 - 1);
  MEMORY[0x270FA5388](v2);
  uint64_t v100 = (char *)v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v97 = (char *)v67 - v5;
  uint64_t v73 = sub_20A8CA320();
  uint64_t v72 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v68 = v6;
  id v70 = (char *)v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_20A8C7290();
  uint64_t v74 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v69 = (char *)v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67[1] = v7;
  MEMORY[0x270FA5388](v8);
  id v78 = (char *)v67 - v9;
  sub_20A6D49FC(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  uint64_t v11 = v10;
  uint64_t v93 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v94 = (char *)v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  id v91 = (char *)v67 - v14;
  sub_20A6A039C();
  uint64_t v98 = v15 - 8;
  MEMORY[0x270FA5388](v15 - 8);
  int v17 = (char *)v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
  sub_20A6D49FC(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)v67 - v24;
  uint64_t v76 = v1;
  uint64_t v101 = *(void *)(v1 + 64);
  id v26 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
  sub_20A6D49FC(0, (unint64_t *)&qword_26AC6A060, MEMORY[0x263F7D550]);
  id v27 = v26;
  uint64_t v28 = v97;
  sub_20A6D016C((unint64_t *)&qword_26AC6A050, (unint64_t *)&qword_26AC6A060, v27);
  sub_20A8C9490();
  uint64_t v77 = v20;
  objc_super v29 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  id v75 = v25;
  uint64_t v88 = v29;
  uint64_t v89 = v20 + 16;
  v29(v22, v25, v19);
  uint64_t v30 = v96;
  sub_20A6D016C((unint64_t *)&unk_26AC6AD10, (unint64_t *)&qword_26AC6AD30, v96);
  id v90 = v22;
  sub_20A8CE4B0();
  id v31 = &v17[*(int *)(v98 + 44)];
  uint64_t v32 = v19;
  uint64_t v33 = sub_20A6D016C((unint64_t *)&unk_26AC6AD20, (unint64_t *)&qword_26AC6AD30, v30);
  uint64_t v34 = *(void *)v31;
  sub_20A8CE8A0();
  uint64_t v35 = 0;
  if (v34 != v101)
  {
    uint64_t v35 = 0;
    uint64_t v87 = (void (**)(char *))(v93 + 16);
    uint64_t v85 = (void (**)(char *, char *, uint64_t))(v93 + 32);
    id v86 = (void (**)(char *, uint64_t))(v77 + 8);
    uint64_t v98 = v99 + 16;
    id v36 = (void (**)(char *, char *, uint64_t (*)(uint64_t, void *)))(v99 + 32);
    id v95 = (uint64_t (**)(char *, void))(v99 + 8);
    id v80 = (void (**)(char *, uint64_t))(v93 + 8);
    uint64_t v96 = v2;
    uint64_t v93 = v33;
    uint64_t v84 = v11;
    uint64_t v83 = v17;
    uint64_t v82 = v32;
    uint64_t v81 = v31;
    while (1)
    {
      uint64_t v92 = v35;
      id v37 = (void (*)(uint64_t *, void))sub_20A8CE8C0();
      id v38 = v91;
      (*v87)(v91);
      v37(&v101, 0);
      uint64_t v39 = v90;
      v88(v90, v17, v32);
      sub_20A8CE8B0();
      (*v86)(v39, v32);
      (*v85)(v94, v38, v11);
      sub_20A6D0124((unint64_t *)&unk_26AC776E0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
      sub_20A6D0124(&qword_26AC6E170, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
      uint64_t result = sub_20A8C88F0();
      uint64_t v41 = result;
      uint64_t v42 = MEMORY[0x263F8EE78];
      uint64_t v101 = MEMORY[0x263F8EE78];
      uint64_t v43 = *(void *)(result + 16);
      if (v43) {
        break;
      }
LABEL_15:
      swift_bridgeObjectRelease();
      uint64_t v53 = *(void *)(v42 + 16);
      uint64_t result = swift_release();
      uint64_t v35 = v92 + v53;
      uint64_t v11 = v84;
      int v17 = v83;
      if (__OFADD__(v92, v53)) {
        goto LABEL_21;
      }
      (*v80)(v94, v84);
      uint64_t v54 = *(void *)v81;
      uint64_t v32 = v82;
      sub_20A8CE8A0();
      if (v54 == v101) {
        goto LABEL_17;
      }
    }
    unint64_t v44 = 0;
    while (v44 < *(void *)(v41 + 16))
    {
      unint64_t v45 = (*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
      uint64_t v46 = *(void *)(v99 + 72);
      (*(void (**)(char *, unint64_t, uint64_t (*)(uint64_t, void *)))(v99 + 16))(v28, v41 + v45 + v46 * v44, v2);
      uint64_t v47 = sub_20A8CCF00();
      swift_unknownObjectRelease();
      if (v47)
      {
        uint64_t v48 = (uint64_t (*)(unint64_t, char *, uint64_t (*)(uint64_t, void *)))*v36;
        (*v36)(v100, v28, v2);
        uint64_t v49 = v101;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_20A68C9AC(0, *(void *)(v49 + 16) + 1, 1);
          uint64_t v49 = v101;
        }
        unint64_t v51 = *(void *)(v49 + 16);
        unint64_t v50 = *(void *)(v49 + 24);
        if (v51 >= v50 >> 1)
        {
          sub_20A68C9AC(v50 > 1, v51 + 1, 1);
          uint64_t v49 = v101;
        }
        *(void *)(v49 + 16) = v51 + 1;
        unint64_t v52 = v49 + v45 + v51 * v46;
        uint64_t v2 = v96;
        uint64_t result = v48(v52, v100, v96);
        uint64_t v101 = v49;
        uint64_t v28 = v97;
      }
      else
      {
        uint64_t result = (*v95)(v28, v2);
      }
      if (v43 == ++v44)
      {
        uint64_t v42 = v101;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_17:
  sub_20A6D5744((uint64_t)v17, (uint64_t (*)(void))sub_20A6A039C);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v75, v32);
  uint64_t v55 = v76;
  __swift_project_boxed_opaque_existential_1((void *)(v76 + 296), *(void *)(v76 + 320));
  uint64_t result = sub_20A8C3850();
  if (v35 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v35 <= 0x7FFFFFFF)
  {
    uint64_t v56 = v78;
    sub_20A8C7280();
    uint64_t v100 = *(char **)(v55 + 16);
    uint64_t v57 = v72;
    uint64_t v58 = v70;
    uint64_t v59 = v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v70, v71, v73);
    uint64_t v60 = v74;
    uint64_t v61 = v69;
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v69, v56, v79);
    unint64_t v62 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    unint64_t v63 = (v68 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v64 = (*(unsigned __int8 *)(v60 + 80) + v63 + 8) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
    uint64_t v65 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v57 + 32))(v65 + v62, v58, v59);
    *(void *)(v65 + v63) = v55;
    uint64_t v66 = v79;
    (*(void (**)(unint64_t, char *, uint64_t))(v60 + 32))(v65 + v64, v61, v79);
    swift_retain();
    sub_20A8C48E0();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v78, v66);
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_20A6CA8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v63 = a4;
  *(void *)&long long v56 = a3;
  uint64_t v68 = a1;
  uint64_t v5 = sub_20A8C2800();
  uint64_t v66 = *(void *)(v5 - 8);
  uint64_t v67 = v5;
  MEMORY[0x270FA5388](v5);
  unint64_t v64 = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C6B00();
  uint64_t v58 = *(void *)(v7 - 8);
  uint64_t v59 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v55 = (char *)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v57 = (char *)v51 - v10;
  uint64_t v11 = sub_20A8C40E0();
  uint64_t v53 = *(void *)(v11 - 8);
  uint64_t v54 = v11;
  MEMORY[0x270FA5388](v11);
  unint64_t v52 = (char *)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C6AF0();
  uint64_t v61 = *(void *)(v13 - 8);
  uint64_t v62 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v60 = (char *)v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_20A8C7760();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_20A8CABF0();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_20A8C6940();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  id v26 = (char *)v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = a2;
  sub_20A8CA2F0();
  int v27 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v22, v19);
  if (v27 == *MEMORY[0x263F7DE08])
  {
    uint64_t v28 = (unsigned int *)MEMORY[0x263F7A688];
  }
  else
  {
    uint64_t v28 = (unsigned int *)MEMORY[0x263F7A690];
    if (v27 != *MEMORY[0x263F7DE18] && v27 != *MEMORY[0x263F7DE20] && v27 != *MEMORY[0x263F7DE10])
    {
      uint64_t result = sub_20A8CF520();
      __break(1u);
      return result;
    }
  }
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *v28, v15);
  sub_20A8C6930();
  sub_20A6D0124((unint64_t *)&unk_26AC69940, MEMORY[0x263F79B20]);
  v51[1] = 0x800000020A90ADF0;
  sub_20A8C45B0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  __swift_project_boxed_opaque_existential_1((void *)(v56 + 256), *(void *)(v56 + 280));
  objc_super v29 = v52;
  sub_20A8C3600();
  char v30 = sub_20A8C4040();
  id v31 = (unsigned int *)MEMORY[0x263F79CB8];
  if ((v30 & 1) == 0) {
    id v31 = (unsigned int *)MEMORY[0x263F79CB0];
  }
  uint64_t v33 = v57;
  uint64_t v32 = v58;
  uint64_t v34 = v59;
  (*(void (**)(char *, void, uint64_t))(v58 + 104))(v57, *v31, v59);
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v55, v33, v34);
  uint64_t v35 = v60;
  sub_20A8C6AE0();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v29, v54);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  sub_20A6D060C(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v59 = v36;
  uint64_t v37 = sub_20A8C4620();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(void *)(v38 + 72);
  uint64_t v40 = *(unsigned __int8 *)(v38 + 80);
  uint64_t v41 = (v40 + 32) & ~v40;
  uint64_t v57 = (char *)(v40 | 7);
  uint64_t v58 = v41 + v39;
  uint64_t v42 = swift_allocObject();
  long long v56 = xmmword_20A8D3DC0;
  *(_OWORD *)(v42 + 16) = xmmword_20A8D3DC0;
  uint64_t v43 = *MEMORY[0x263F24D48];
  unint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 104);
  v44(v42 + v41, v43, v37);
  sub_20A6D0124(&qword_26AC699A0, MEMORY[0x263F79CA8]);
  uint64_t v45 = v62;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v35, v45);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = v56;
  v44(v46 + v41, v43, v37);
  sub_20A8C7290();
  sub_20A6D0124((unint64_t *)&unk_26AC69AC0, MEMORY[0x263F7A200]);
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  sub_20A8C6AA0();
  uint64_t v47 = v64;
  sub_20A8CA310();
  sub_20A6D0124((unint64_t *)&unk_26AC69990, MEMORY[0x263F79BE0]);
  sub_20A8C4570();
  uint64_t v48 = v67;
  uint64_t v49 = *(void (**)(char *, uint64_t))(v66 + 8);
  v49(v47, v67);
  sub_20A8CA300();
  sub_20A8C4580();
  return ((uint64_t (*)(char *, uint64_t))v49)(v47, v48);
}

uint64_t sub_20A6CB1D8()
{
  sub_20A64B360(0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44D7C8(0);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8C4020();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v24 - v16;
  sub_20A6D49FC(0, &qword_26AC6A558, MEMORY[0x263F7DAE0]);
  sub_20A8CA090();
  sub_20A8C8330();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_20A8354E0((uint64_t)v2);
  sub_20A6D5744((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ForYouFeedModel);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v2, 1, v11) == 1) {
    return sub_20A6D5744((uint64_t)v2, (uint64_t (*)(void))sub_20A64B360);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v2, v11);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
  int v19 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v14, v11);
  if (v19 == *MEMORY[0x263F7AF48])
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v14, v11);
    swift_unknownObjectRelease();
    sub_20A45494C();
    uint64_t v21 = &v14[*(int *)(v20 + 48)];
    __swift_project_boxed_opaque_existential_1((void *)(v25 + 216), *(void *)(v25 + 240));
    sub_20A8C3F80();
    sub_20A8C54C0();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    uint64_t v22 = sub_20A8C33A0();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  }
  else if (v19 == *MEMORY[0x263F7AF38])
  {
    uint64_t v23 = *(void (**)(char *, uint64_t))(v12 + 8);
    v23(v17, v11);
    return ((uint64_t (*)(char *, uint64_t))v23)(v14, v11);
  }
  else
  {
    uint64_t result = sub_20A8CF520();
    __break(1u);
  }
  return result;
}

uint64_t sub_20A6CB64C(uint64_t a1)
{
  uint64_t v85 = a1;
  uint64_t v1 = sub_20A8CC1E0();
  uint64_t v77 = *(void *)(v1 - 8);
  uint64_t v78 = v1;
  MEMORY[0x270FA5388](v1);
  id v75 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_20A8CD080();
  uint64_t v72 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  id v70 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6D49FC(0, &qword_26AC6A178, MEMORY[0x263F7D640]);
  uint64_t v5 = v4;
  uint64_t v71 = *(void *)(v4 - 8);
  uint64_t v68 = *(void *)(v71 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v69 = (char *)&v56 - v6;
  uint64_t v76 = sub_20A8CD410();
  uint64_t v73 = *(void *)(v76 - 8);
  uint64_t v7 = *(void *)(v73 + 64);
  MEMORY[0x270FA5388](v76);
  uint64_t v67 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v83 = (char *)&v56 - v9;
  sub_20A6D4AF0();
  uint64_t v81 = *(void *)(v10 - 8);
  uint64_t v82 = v10;
  MEMORY[0x270FA5388](v10);
  id v80 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_20A8CCFE0();
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v62 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_20A8CCEE0();
  uint64_t v63 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v61 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_20A8C4020();
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v79 = (uint64_t)&v56 - v17;
  sub_20A456468();
  uint64_t v58 = v18;
  uint64_t v57 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44D7C8(0);
  uint64_t v25 = v24;
  uint64_t v26 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = v5;
  sub_20A8C9100();
  sub_20A8C8330();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v80, v23, v82);
      uint64_t v39 = v83;
      sub_20A8CCF50();
      uint64_t v84 = *(void *)(v84 + 16);
      uint64_t v40 = v71;
      uint64_t v41 = v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v69, v85, v5);
      uint64_t v42 = v73;
      uint64_t v43 = v67;
      uint64_t v44 = v76;
      (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v67, v39, v76);
      unint64_t v45 = (*(unsigned __int8 *)(v40 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
      unint64_t v46 = (v68 + *(unsigned __int8 *)(v42 + 80) + v45) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
      uint64_t v47 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v40 + 32))(v47 + v45, v41, v29);
      (*(void (**)(unint64_t, char *, uint64_t))(v42 + 32))(v47 + v46, v43, v44);
      sub_20A8C48E0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v83, v44);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v80, v82);
      break;
    case 2:
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      break;
    case 3:
      swift_release();
      sub_20A61E890();
      uint64_t v49 = &v23[*(int *)(v48 + 48)];
      uint64_t v50 = sub_20A8CD2C0();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v50 - 8) + 8))(v49, v50);
      break;
    case 4:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 5:
      uint64_t v51 = v72;
      unint64_t v52 = v70;
      uint64_t v53 = v23;
      uint64_t v54 = v74;
      (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v70, v53, v74);
      uint64_t v55 = (uint64_t)v75;
      sub_20A8CD040();
      sub_20A6CC3F4(v85, v55);
      (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v55, v78);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v52, v54);
      break;
    case 6:
      return result;
    default:
      uint64_t v31 = v57;
      uint64_t v32 = v23;
      uint64_t v33 = v58;
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v20, v32, v58);
      sub_20A8CCF50();
      uint64_t v34 = v62;
      sub_20A8CCF60();
      sub_20A8CCF50();
      sub_20A8C3F80();
      uint64_t v35 = *(void (**)(char *, uint64_t))(v59 + 8);
      uint64_t v36 = v60;
      v35(v15, v60);
      sub_20A8CCF70();
      uint64_t v37 = (uint64_t)v61;
      sub_20A8CCFD0();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v34, v66);
      uint64_t v38 = v79;
      sub_20A6CC058(v85, v79, v37);
      (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v37, v64);
      v35((char *)v38, v36);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v20, v33);
      break;
  }
  return result;
}

uint64_t sub_20A6CC058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v29 = a3;
  uint64_t v32 = a2;
  uint64_t v27 = a1;
  uint64_t v33 = sub_20A8CCEE0();
  uint64_t v31 = *(void *)(v33 - 8);
  uint64_t v30 = *(void *)(v31 + 64);
  MEMORY[0x270FA5388](v33);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = v6;
  uint64_t v7 = sub_20A8C4020();
  uint64_t v24 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v25 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6D49FC(0, &qword_26AC6A178, MEMORY[0x263F7D640]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  double v14 = MEMORY[0x270FA5388](v10);
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v28 = v4[2];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))((char *)&v24 - v15, v27, v11, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v32, v7);
  uint64_t v17 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v6, v29, v33);
  unint64_t v18 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v19 = (v13 + *(unsigned __int8 *)(v8 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v20 = (v9 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (*(unsigned __int8 *)(v17 + 80) + v20 + 8) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v22 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v22 + v18, v16, v11);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v22 + v19, v25, v24);
  *(void *)(v22 + v20) = v4;
  (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v22 + v21, v26, v33);
  swift_retain();
  sub_20A8C48E0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v4 + 11, v4[14]);
  sub_20A8C3A60();
  __swift_project_boxed_opaque_existential_1(v4 + 27, v4[30]);
  sub_20A8C3F80();
  sub_20A8C54D0();
  return swift_unknownObjectRelease();
}

uint64_t sub_20A6CC3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v65 = a2;
  uint64_t v63 = a1;
  sub_20A6D49FC(0, &qword_26AC6A178, MEMORY[0x263F7D640]);
  uint64_t v64 = v4;
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v52 = *(void *)(v56 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v55 = (char *)&v50 - v5;
  uint64_t v6 = sub_20A8CC1E0();
  uint64_t v53 = *(void *)(v6 - 8);
  uint64_t v54 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v51 = v7;
  uint64_t v61 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44D7C8(0);
  uint64_t v57 = *(char **)(v8 - 8);
  uint64_t v58 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6D51A0(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6D51D4();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v59 = v14;
  uint64_t v60 = v15;
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14);
  uint64_t v50 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v62 = (char *)&v50 - v18;
  uint64_t v19 = sub_20A8CBF80();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 176), *(void *)(v2 + 200));
  uint64_t result = sub_20A8C7410();
  if (result)
  {
    sub_20A8CC1C0();
    char v24 = sub_20A8CBF60();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    if (v24)
    {
      sub_20A8C9100();
      sub_20A6D25EC((uint64_t)v10, (uint64_t)v13);
      (*((void (**)(char *, uint64_t))v57 + 1))(v10, v58);
      uint64_t v26 = v59;
      uint64_t v25 = v60;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v13, 1, v59) == 1)
      {
        uint64_t v27 = (uint64_t (*)(void))sub_20A6D51A0;
        uint64_t v28 = (uint64_t)v13;
      }
      else
      {
        uint64_t v29 = *(int *)(v26 + 48);
        uint64_t v30 = v62;
        uint64_t v31 = &v62[v29];
        uint64_t v57 = &v62[v29];
        uint64_t v32 = &v13[v29];
        uint64_t v33 = sub_20A8C6B50();
        uint64_t v34 = *(void *)(v33 - 8);
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v30, v13, v33);
        uint64_t v35 = sub_20A8C6770();
        uint64_t v36 = *(void *)(v35 - 8);
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v31, v32, v35);
        uint64_t v58 = *(void *)(v3 + 16);
        uint64_t v38 = v53;
        uint64_t v37 = v54;
        (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v61, v65, v54);
        uint64_t v39 = *(int *)(v26 + 48);
        uint64_t v40 = v25;
        uint64_t v41 = (uint64_t)v50;
        uint64_t v42 = &v50[v39];
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v50, v62, v33);
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v42, v57, v35);
        uint64_t v44 = v55;
        uint64_t v43 = v56;
        uint64_t v45 = v64;
        (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v55, v63, v64);
        unint64_t v46 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
        unint64_t v47 = (v51 + *(unsigned __int8 *)(v40 + 80) + v46) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
        unint64_t v48 = (v16 + *(unsigned __int8 *)(v43 + 80) + v47) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
        uint64_t v49 = swift_allocObject();
        (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v49 + v46, v61, v37);
        sub_20A6D57A4(v41, v49 + v47, (uint64_t (*)(void))sub_20A6D51D4);
        (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))(v49 + v48, v44, v45);
        sub_20A8C48E0();
        swift_release();
        uint64_t v27 = (uint64_t (*)(void))sub_20A6D51D4;
        uint64_t v28 = (uint64_t)v62;
      }
      return sub_20A6D5744(v28, v27);
    }
  }
  return result;
}

uint64_t sub_20A6CCA58(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a1;
  uint64_t v3 = sub_20A8C2800();
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6A05D0(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6D49FC(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  uint64_t v32 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v31 - v11;
  sub_20A6D49FC(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v18 = sub_20A8C77D0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v34 = v18;
  uint64_t v35 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6D49FC(0, &qword_26AC6A5F0, MEMORY[0x263F7DBD8]);
  uint64_t v33 = a2;
  sub_20A8CA2C0();
  sub_20A8CA2B0();
  uint64_t v22 = sub_20A8CA990();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v8, 1, 1, v22);
  sub_20A6C8DD0((uint64_t)v12, (uint64_t)v8);
  sub_20A6D5744((uint64_t)v8, (uint64_t (*)(void))sub_20A6A05D0);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v32);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_20A6D060C(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v23 = sub_20A8C4620();
  uint64_t v24 = *(void *)(v23 - 8);
  unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, void, uint64_t))(v24 + 104))(v26 + v25, *MEMORY[0x263F24D48], v23);
  sub_20A6D0124(&qword_26AC67710, MEMORY[0x263F7A700]);
  uint64_t v27 = v34;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v21, v27);
  sub_20A8C6FF0();
  sub_20A8CA2D0();
  sub_20A6D0124(&qword_26AC69A40, MEMORY[0x263F7A000]);
  sub_20A8C4570();
  uint64_t v28 = v38;
  uint64_t v29 = *(void (**)(char *, uint64_t))(v37 + 8);
  v29(v5, v38);
  sub_20A8CA2A0();
  sub_20A8C4580();
  return ((uint64_t (*)(char *, uint64_t))v29)(v5, v28);
}

uint64_t sub_20A6CD014(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v40 = sub_20A8C7800();
  uint64_t v39 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v38 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C6890();
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v41 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C72F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  uint64_t v54 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v52 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C7020();
  uint64_t v51 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a2;
  uint64_t ObjectType = swift_getObjectType();
  sub_20A671414();
  sub_20A6D060C(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v48 = v13;
  uint64_t v14 = sub_20A8C4620();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (v17 + 32) & ~v17;
  uint64_t v46 = v17 | 7;
  uint64_t v47 = v18 + v16;
  uint64_t v19 = swift_allocObject();
  long long v45 = xmmword_20A8D3DC0;
  *(_OWORD *)(v19 + 16) = xmmword_20A8D3DC0;
  uint64_t v20 = *MEMORY[0x263F24D48];
  uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 104);
  v44(v19 + v18, v20, v14);
  sub_20A6D0124(&qword_26763C8C0, MEMORY[0x263F7A020]);
  uint64_t v37 = "onDeckViewAction";
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  uint64_t v21 = v12;
  uint64_t v22 = v55;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v21, v10);
  uint64_t v23 = v52;
  uint64_t v24 = v49;
  sub_20A67115C(*(void **)(v22 + 168));
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = v45;
  v44(v25 + v18, v20, v14);
  sub_20A6D0124((unint64_t *)&unk_26AC69AD0, MEMORY[0x263F7A270]);
  uint64_t v26 = v53;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v23, v26);
  id v27 = objc_msgSend(v24, sel_sourceChannel);
  if (v27)
  {
    uint64_t v28 = v27;
    __swift_project_boxed_opaque_existential_1((void *)(v22 + 128), *(void *)(v22 + 152));
    uint64_t v29 = v41;
    sub_20A661B70(v28);
    sub_20A6D0124((unint64_t *)&unk_26AC69930, MEMORY[0x263F79AA0]);
    uint64_t v30 = v43;
    sub_20A8C4940();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v30);
  }
  if (objc_msgSend(v24, sel_respondsToSelector_, sel_parentIssue))
  {
    id v31 = objc_msgSend(v24, sel_parentIssue);
    if (v31)
    {
      id v32 = v31;
      id v33 = objc_msgSend(v32, sel_identifier);
      sub_20A8CE280();

      uint64_t v34 = v38;
      sub_20A8C77F0();
      sub_20A6D0124(&qword_26AC69B70, MEMORY[0x263F7A748]);
      uint64_t v35 = v40;
      sub_20A8C4940();

      (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v35);
    }
  }
  sub_20A8C75B0();
  sub_20A6D0124((unint64_t *)&unk_26763D430, MEMORY[0x263F7A528]);
  memset(v56, 0, 32);
  sub_20A8C45D0();
  return sub_20A6D5744((uint64_t)v56, (uint64_t (*)(void))sub_20A42F348);
}

uint64_t sub_20A6CD734(unint64_t a1)
{
  sub_20A44D7C8(0);
  uint64_t v3 = v2;
  uint64_t v56 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v53 = v4;
  uint64_t v65 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6D49FC(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v66 = v5;
  uint64_t v57 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v57 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v61 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v64 = (char *)&v46 - v8;
  uint64_t v63 = sub_20A8C4020();
  uint64_t v55 = *(void *)(v63 - 8);
  uint64_t v9 = *(void *)(v55 + 64);
  MEMORY[0x270FA5388](v63);
  uint64_t v59 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v60 = (char *)&v46 - v11;
  sub_20A456468();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v58 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v46 - v17;
  uint64_t v19 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = v3;
  unint64_t v54 = a1;
  sub_20A8C8330();
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
    case 5:
      uint64_t result = sub_20A6D5744((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ForYouFeedModel);
      break;
    case 2:
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      break;
    case 3:
      swift_release();
      sub_20A61E890();
      uint64_t v44 = &v21[*(int *)(v43 + 48)];
      uint64_t v45 = sub_20A8CD2C0();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
      break;
    case 4:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 6:
      return result;
    default:
      uint64_t v52 = v14;
      uint64_t v23 = *(void (**)(unint64_t, char *, uint64_t))(v14 + 32);
      uint64_t v50 = v14 + 32;
      uint64_t v51 = v23;
      uint64_t v47 = v13;
      v23((unint64_t)v18, v21, v13);
      uint64_t v24 = v60;
      uint64_t v25 = v18;
      uint64_t v48 = v18;
      sub_20A8CCF50();
      uint64_t v26 = v67;
      uint64_t v68 = *(void *)(v67 + 64);
      id v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
      sub_20A6D49FC(0, (unint64_t *)&qword_26AC6A060, MEMORY[0x263F7D550]);
      sub_20A6D016C((unint64_t *)&qword_26AC6A050, (unint64_t *)&qword_26AC6A060, v27);
      uint64_t v28 = v64;
      sub_20A8C9490();
      uint64_t v49 = *(void *)(v26 + 16);
      uint64_t v29 = v55;
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v59, v24, v63);
      uint64_t v30 = v57;
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v61, v28, v66);
      uint64_t v31 = v56;
      (*(void (**)(char *, unint64_t, uint64_t))(v56 + 16))(v65, v54, v62);
      uint64_t v32 = v52;
      id v33 = v25;
      uint64_t v34 = v47;
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v58, v33, v47);
      unint64_t v35 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      unint64_t v36 = (v9 + *(unsigned __int8 *)(v30 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      unint64_t v37 = (v6 + *(unsigned __int8 *)(v31 + 80) + v36) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      unint64_t v54 = (v53 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v38 = (*(unsigned __int8 *)(v32 + 80) + v54 + 8) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      uint64_t v39 = swift_allocObject();
      unint64_t v40 = v39 + v35;
      uint64_t v41 = v63;
      (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v40, v59, v63);
      uint64_t v42 = v66;
      (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v39 + v36, v61, v66);
      (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v39 + v37, v65, v62);
      *(void *)(v39 + v54) = v67;
      v51(v39 + v38, v58, v34);
      swift_retain();
      sub_20A8C48E0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v64, v42);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v60, v41);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v48, v34);
      break;
  }
  return result;
}

uint64_t sub_20A6CDE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v108 = a6;
  uint64_t v136 = a4;
  uint64_t v137 = a5;
  uint64_t v139 = a3;
  uint64_t v111 = sub_20A8C72F0();
  uint64_t v110 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111);
  id v109 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_20A8C4020();
  uint64_t v101 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  uint64_t v97 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_20A8CCFE0();
  uint64_t v103 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  uint64_t v98 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_20A8CCEE0();
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v96 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_20A8C7740();
  uint64_t v106 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  char v105 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_20A8C7800();
  uint64_t v88 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v87 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_20A8C6890();
  uint64_t v91 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  id v90 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_20A8C7090();
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  uint64_t v93 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_20A8C6DE0();
  uint64_t v113 = *(void *)(v114 - 8);
  MEMORY[0x270FA5388](v114);
  unsigned int v112 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A652530();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v132 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6D49FC(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  uint64_t v130 = v19;
  uint64_t v131 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  unint64_t v115 = (char *)&v86 - v20;
  sub_20A6A05D0(0);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v129 = (char *)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_20A8C77D0();
  uint64_t v117 = *(void *)(v118 - 8);
  MEMORY[0x270FA5388](v118);
  uint64_t v116 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_20A8C6820();
  uint64_t v144 = *(void *)(v146 - 8);
  MEMORY[0x270FA5388](v146);
  id v143 = (char *)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_20A8C7720();
  uint64_t v125 = *(void *)(v126 - 8);
  MEMORY[0x270FA5388](v126);
  uint64_t v124 = (char *)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_20A8C2830();
  uint64_t v122 = *(void *)(v123 - 8);
  MEMORY[0x270FA5388](v123);
  uint64_t v120 = (char *)&v86 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_20A8C7710();
  uint64_t v128 = *(void *)(v127 - 8);
  MEMORY[0x270FA5388](v127);
  id v121 = (char *)&v86 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_20A8C6CB0();
  uint64_t v119 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v86 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = a2;
  sub_20A8C3F80();
  swift_getObjectType();
  sub_20A670898((uint64_t)v30);
  swift_unknownObjectRelease();
  sub_20A6D060C(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v135 = v31;
  uint64_t v32 = sub_20A8C4620();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(void *)(v33 + 72);
  uint64_t v35 = *(unsigned __int8 *)(v33 + 80);
  uint64_t v36 = (v35 + 32) & ~v35;
  uint64_t v142 = v36;
  uint64_t v147 = v36 + v34;
  uint64_t v37 = v35 | 7;
  uint64_t v38 = swift_allocObject();
  long long v148 = xmmword_20A8D3DC0;
  *(_OWORD *)(v38 + 16) = xmmword_20A8D3DC0;
  unsigned int v141 = *MEMORY[0x263F24D48];
  uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 104);
  uint64_t v138 = v33 + 104;
  uint64_t v145 = v39;
  ((void (*)(uint64_t))v39)(v38 + v36);
  sub_20A6D0124((unint64_t *)&unk_26AC699D0, MEMORY[0x263F79DF8]);
  unint64_t v140 = (unint64_t)"onDeckViewAction";
  unint64_t v134 = 0x800000020A90ADF0;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v119 + 8))(v30, v28);
  unint64_t v40 = v120;
  sub_20A8C2820();
  sub_20A8C2810();
  (*(void (**)(char *, uint64_t))(v122 + 8))(v40, v123);
  (*(void (**)(char *, void, uint64_t))(v125 + 104))(v124, *MEMORY[0x263F7A650], v126);
  (*(void (**)(char *, void, uint64_t))(v144 + 104))(v143, *MEMORY[0x263F79A18], v146);
  uint64_t v41 = v121;
  uint64_t v42 = v142;
  sub_20A8C7700();
  id v143 = (char *)v37;
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = v148;
  uint64_t v144 = v32;
  v145(v43 + v42, v141, v32);
  sub_20A6D0124((unint64_t *)&unk_26AC69B50, MEMORY[0x263F7A640]);
  uint64_t v44 = v127;
  uint64_t v146 = a1;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v128 + 8))(v41, v44);
  uint64_t v45 = sub_20A8CA990();
  uint64_t v46 = (uint64_t)v129;
  (*(void (**)(void))(*(void *)(v45 - 8) + 56))();
  sub_20A44D7C8(0);
  sub_20A8C82F0();
  sub_20A6D49FC(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v47 = v132;
  uint64_t v48 = v130;
  sub_20A8CBAC0();
  uint64_t v49 = v131;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48);
  if (result == 1) {
    goto LABEL_17;
  }
  uint64_t v51 = (uint64_t)v115;
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v115, v47, v48);
  uint64_t v52 = v116;
  sub_20A6C8DD0(v51, v46);
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v51, v48);
  sub_20A6D5744(v46, (uint64_t (*)(void))sub_20A6A05D0);
  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = v148;
  uint64_t v54 = *MEMORY[0x263F24D40];
  v145(v53 + v42, v54, v144);
  sub_20A6D0124(&qword_26AC67710, MEMORY[0x263F7A700]);
  uint64_t v55 = v118;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v52, v55);
  sub_20A6D0124(&qword_26AC6E148, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
  uint64_t result = sub_20A8CBB50();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v56 = v112;
  sub_20A8C6DD0();
  uint64_t v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = v148;
  v145(v57 + v142, v54, v144);
  sub_20A6D0124(&qword_26AC69A00, MEMORY[0x263F79E78]);
  uint64_t v58 = v114;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v113 + 8))(v56, v58);
  uint64_t result = sub_20A8CBB60();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    return result;
  }
  uint64_t v59 = v93;
  sub_20A8C7080();
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = v148;
  uint64_t v61 = v142;
  uint64_t v62 = v145;
  v145(v60 + v142, v54, v144);
  sub_20A6D0124((unint64_t *)&unk_26AC69A60, MEMORY[0x263F7A070]);
  uint64_t v63 = v95;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v59, v63);
  id v64 = objc_msgSend((id)sub_20A8C3F80(), sel_sourceChannel);
  swift_unknownObjectRelease();
  if (v64)
  {
    __swift_project_boxed_opaque_existential_1((void *)(v137 + 128), *(void *)(v137 + 152));
    uint64_t v65 = v90;
    sub_20A661B70(v64);
    uint64_t v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = v148;
    v62(v66 + v61, v141, v144);
    sub_20A6D0124((unint64_t *)&unk_26AC69930, MEMORY[0x263F79AA0]);
    uint64_t v67 = v92;
    sub_20A8C45B0();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v65, v67);
  }
  uint64_t v68 = (void *)sub_20A8C3F80();
  if (objc_msgSend(v68, sel_respondsToSelector_, sel_parentIssue))
  {
    id v69 = objc_msgSend(v68, sel_parentIssue);
    swift_unknownObjectRelease();
    if (v69)
    {
      id v70 = v69;
      id v71 = objc_msgSend(v70, sel_identifier);
      sub_20A8CE280();

      uint64_t v72 = v87;
      sub_20A8C77F0();
      sub_20A6D0124(&qword_26AC69B70, MEMORY[0x263F7A748]);
      uint64_t v73 = v89;
      sub_20A8C4940();

      (*(void (**)(char *, uint64_t))(v88 + 8))(v72, v73);
    }
  }
  else
  {
    swift_unknownObjectRelease();
  }
  sub_20A456468();
  uint64_t v74 = v98;
  sub_20A8CCF60();
  id v75 = v97;
  sub_20A8CCF50();
  sub_20A8C3F80();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v75, v102);
  sub_20A8CCF70();
  uint64_t v76 = v96;
  sub_20A8CCFD0();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v74, v104);
  uint64_t v77 = v105;
  sub_20A531D14();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v76, v100);
  uint64_t v78 = swift_allocObject();
  *(_OWORD *)(v78 + 16) = v148;
  uint64_t v79 = v142;
  uint64_t v81 = v144;
  id v80 = v145;
  v145(v78 + v142, v141, v144);
  sub_20A6D0124(&qword_26AC69B60, MEMORY[0x263F7A660]);
  v140 |= 0x8000000000000000;
  uint64_t v82 = v107;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v77, v82);
  sub_20A8C3F80();
  swift_getObjectType();
  uint64_t v83 = v109;
  sub_20A67115C(*(void **)(v137 + 168));
  swift_unknownObjectRelease();
  uint64_t v84 = swift_allocObject();
  *(_OWORD *)(v84 + 16) = v148;
  v80(v84 + v79, v141, v81);
  sub_20A6D0124((unint64_t *)&unk_26AC69AD0, MEMORY[0x263F7A270]);
  uint64_t v85 = v111;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v110 + 8))(v83, v85);
  sub_20A8C74E0();
  sub_20A6D0124(&qword_26AC81210, MEMORY[0x263F7A458]);
  memset(v149, 0, sizeof(v149));
  sub_20A8C45D0();
  return sub_20A6D5744((uint64_t)v149, (uint64_t (*)(void))sub_20A42F348);
}

uint64_t sub_20A6CF534(uint64_t a1)
{
  uint64_t v59 = a1;
  uint64_t v51 = sub_20A8C7090();
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v49 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_20A8C6DE0();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v53 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A652530();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6D49FC(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  uint64_t v66 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v47 - v10;
  sub_20A6A05D0(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_20A8C77D0();
  uint64_t v57 = *(void *)(v15 - 8);
  uint64_t v58 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v56 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6D49FC(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v18 = v17;
  uint64_t v48 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v47 - v19;
  uint64_t v69 = v1[8];
  uint64_t v21 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
  sub_20A6D49FC(0, (unint64_t *)&qword_26AC6A060, MEMORY[0x263F7D550]);
  sub_20A6D016C((unint64_t *)&qword_26AC6A050, (unint64_t *)&qword_26AC6A060, v21);
  sub_20A8C9490();
  uint64_t v22 = v66;
  uint64_t v52 = v1;
  uint64_t v68 = v1[2];
  uint64_t v23 = sub_20A8CA990();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v14, 1, 1, v23);
  sub_20A44D7C8(0);
  sub_20A8C82F0();
  uint64_t v67 = v18;
  sub_20A8CBAC0();
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v22);
  if (result == 1) {
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v22);
  uint64_t v25 = v56;
  sub_20A6C8DD0((uint64_t)v11, (uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v22);
  sub_20A6D5744((uint64_t)v14, (uint64_t (*)(void))sub_20A6A05D0);
  sub_20A6D060C(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v27 = v26;
  uint64_t v28 = sub_20A8C4620();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v31 = (v30 + 32) & ~v30;
  uint64_t v65 = v31 + *(void *)(v29 + 72);
  uint64_t v66 = v27;
  uint64_t v64 = v30 | 7;
  uint64_t v32 = swift_allocObject();
  long long v61 = xmmword_20A8D3DC0;
  *(_OWORD *)(v32 + 16) = xmmword_20A8D3DC0;
  uint64_t v33 = *(void (**)(void))(v29 + 104);
  unsigned int v63 = *MEMORY[0x263F24D40];
  uint64_t v62 = (void (*)(uint64_t, void, uint64_t))v33;
  v33(v32 + v31);
  sub_20A6D0124(&qword_26AC67710, MEMORY[0x263F7A700]);
  uint64_t v60 = "onDeckViewAction";
  uint64_t v34 = v58;
  sub_20A8C4940();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v25, v34);
  sub_20A6D0124(&qword_26AC6E148, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
  uint64_t result = sub_20A8CBB50();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v35 = v53;
  sub_20A8C6DD0();
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = v61;
  v62(v36 + v31, v63, v28);
  sub_20A6D0124(&qword_26AC69A00, MEMORY[0x263F79E78]);
  uint64_t v37 = v55;
  sub_20A8C4940();
  swift_bridgeObjectRelease();
  uint64_t v38 = v35;
  uint64_t v39 = v20;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v37);
  uint64_t v40 = v67;
  uint64_t result = sub_20A8CBB60();
  if (result >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (result <= 0x7FFFFFFF)
    {
      uint64_t v41 = v49;
      sub_20A8C7080();
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = v61;
      v62(v42 + v31, v63, v28);
      sub_20A6D0124((unint64_t *)&unk_26AC69A60, MEMORY[0x263F7A070]);
      uint64_t v43 = v51;
      uint64_t v44 = v68;
      sub_20A8C4940();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v41, v43);
      uint64_t v45 = v52[6];
      uint64_t v46 = v52[7];
      __swift_project_boxed_opaque_existential_1(v52 + 3, v45);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 8))(v44, v45, v46);
      return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v39, v40);
    }
    goto LABEL_10;
  }
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20A6CFE60()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);

  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1(v0 + 216);
  __swift_destroy_boxed_opaque_existential_1(v0 + 256);
  __swift_destroy_boxed_opaque_existential_1(v0 + 296);
  sub_20A6D5744(v0 + OBJC_IVAR____TtC8StocksUI17ForYouFeedTracker_onDeckViewAction, (uint64_t (*)(void))sub_20A6D0070);
  return v0;
}

uint64_t sub_20A6CFEFC()
{
  sub_20A6CFE60();

  return swift_deallocClassInstance();
}

uint64_t sub_20A6CFF54()
{
  return type metadata accessor for ForYouFeedTracker();
}

uint64_t type metadata accessor for ForYouFeedTracker()
{
  uint64_t result = qword_26AC6F790;
  if (!qword_26AC6F790) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A6CFFA8()
{
  sub_20A6D0070(319);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_20A6D0070(uint64_t a1)
{
}

uint64_t sub_20A6D00A4()
{
  return sub_20A8C4980();
}

uint64_t sub_20A6D0124(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6D016C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A6D49FC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6D01B0()
{
  uint64_t v19 = sub_20A8C4020();
  uint64_t v1 = *(void *)(v19 - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v2 = v17 + *(void *)(v1 + 64);
  sub_20A6D49FC(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v18 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v14 = (v2 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v5 = *(void *)(v4 + 64);
  sub_20A44D7C8(0);
  uint64_t v16 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (v14 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v13 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_20A456468();
  uint64_t v15 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = (v13 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v17, v19);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v14, v18);
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v8, v16);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v0 + v11, v15);

  return swift_deallocObject();
}

uint64_t sub_20A6D044C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_20A8C4020() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  sub_20A6D49FC(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(*(void *)(v6 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  sub_20A44D7C8(0);
  unint64_t v10 = (v7 + v8 + *(unsigned __int8 *)(*(void *)(v9 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80);
  unint64_t v11 = (*(void *)(*(void *)(v9 - 8) + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_20A456468();
  uint64_t v13 = *(void *)(v1 + v11);
  uint64_t v14 = v1
      + ((v11 + *(unsigned __int8 *)(*(void *)(v12 - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80));

  return sub_20A6CDE24(a1, v1 + v4, v1 + v7, v1 + v10, v13, v14);
}

void sub_20A6D060C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A6D0670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v179 = a5;
  uint64_t v210 = a4;
  uint64_t v208 = a3;
  uint64_t v224 = a1;
  uint64_t v174 = sub_20A8C7020();
  uint64_t v173 = *(void *)(v174 - 8);
  MEMORY[0x270FA5388](v174);
  double v171 = (char *)&v155 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = sub_20A8C2800();
  uint64_t v196 = *(void *)(v197 - 8);
  MEMORY[0x270FA5388](v197);
  uint64_t v195 = (char *)&v155 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = sub_20A8C6B00();
  uint64_t v191 = *(void *)(v192 - 8);
  MEMORY[0x270FA5388](v192);
  uint64_t v175 = (char *)&v155 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v190 = (char *)&v155 - v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v182 = (char *)&v155 - v12;
  uint64_t v189 = sub_20A8C40E0();
  uint64_t v188 = *(void *)(v189 - 8);
  MEMORY[0x270FA5388](v189);
  double v170 = (char *)&v155 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v180 = (char *)&v155 - v15;
  uint64_t v194 = sub_20A8C6AF0();
  uint64_t v193 = *(void *)(v194 - 8);
  MEMORY[0x270FA5388](v194);
  long long v172 = (char *)&v155 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v181 = (char *)&v155 - v18;
  uint64_t v178 = sub_20A8C7740();
  uint64_t v177 = *(void *)(v178 - 8);
  MEMORY[0x270FA5388](v178);
  uint64_t v176 = (char *)&v155 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_20A8C7800();
  uint64_t v156 = *(void *)(v157 - 8);
  MEMORY[0x270FA5388](v157);
  uint64_t v155 = (char *)&v155 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_20A8C6890();
  uint64_t v159 = *(void *)(v160 - 8);
  MEMORY[0x270FA5388](v160);
  double v158 = (char *)&v155 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = sub_20A8C6FA0();
  uint64_t v168 = *(void *)(v169 - 8);
  MEMORY[0x270FA5388](v169);
  double v167 = (char *)&v155 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = sub_20A8C72F0();
  uint64_t v165 = *(void *)(v166 - 8);
  MEMORY[0x270FA5388](v166);
  double v164 = (char *)&v155 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_20A8C6CB0();
  uint64_t v162 = *(void *)(v163 - 8);
  MEMORY[0x270FA5388](v163);
  uint64_t v161 = (uint64_t)&v155 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = sub_20A8C4020();
  uint64_t v186 = *(void *)(v187 - 8);
  MEMORY[0x270FA5388](v187);
  v209 = (char *)&v155 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = sub_20A8C7090();
  uint64_t v184 = *(void *)(v185 - 8);
  MEMORY[0x270FA5388](v185);
  uint64_t v183 = (char *)&v155 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = sub_20A8C6DE0();
  uint64_t v200 = *(void *)(v201 - 8);
  MEMORY[0x270FA5388](v201);
  char v199 = (char *)&v155 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A652530();
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v30 = (char *)&v155 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6D49FC(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  uint64_t v226 = v31;
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v155 - v33;
  sub_20A6A05D0(0);
  MEMORY[0x270FA5388](v35 - 8);
  uint64_t v37 = (char *)&v155 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44D7C8(0);
  uint64_t v39 = v38;
  v216 = *(void **)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  v207 = (char *)&v155 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v41);
  uint64_t v43 = (char *)&v155 - v42;
  sub_20A6D49FC(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v45 = v44;
  unint64_t v215 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  v205 = (char *)&v155 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v47);
  uint64_t v49 = (char *)&v155 - v48;
  uint64_t v204 = sub_20A8C77D0();
  uint64_t v203 = *(void *)(v204 - 8);
  MEMORY[0x270FA5388](v204);
  v202 = (char *)&v155 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6D49FC(0, &qword_26AC6A178, MEMORY[0x263F7D640]);
  uint64_t v52 = v51;
  sub_20A8C9120();
  uint64_t v213 = a2;
  sub_20A8C9100();
  uint64_t v53 = sub_20A8CA990();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v37, 1, 1, v53);
  uint64_t ObjectType = v39;
  sub_20A8C82F0();
  uint64_t v206 = v45;
  sub_20A8CBAC0();
  uint64_t v54 = v226;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v54) == 1) {
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v30, v54);
  uint64_t v55 = v202;
  sub_20A6C8DD0((uint64_t)v34, (uint64_t)v37);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v54);
  sub_20A6D5744((uint64_t)v37, (uint64_t (*)(void))sub_20A6A05D0);
  uint64_t v56 = v216 + 1;
  uint64_t v57 = ObjectType;
  uint64_t v211 = (void (*)(char *, uint64_t))v216[1];
  v211(v43, ObjectType);
  unint64_t v58 = v215 + 8;
  uint64_t v59 = v49;
  uint64_t v60 = v206;
  uint64_t v198 = *(void (**)(char *, uint64_t))(v215 + 8);
  v198(v59, v206);
  sub_20A6D060C(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v62 = v61;
  uint64_t v63 = sub_20A8C4620();
  uint64_t v64 = *(void *)(v63 - 8);
  uint64_t v65 = *(void *)(v64 + 72);
  uint64_t v66 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v67 = (v66 + 32) & ~v66;
  uint64_t v223 = v62;
  uint64_t v221 = v67 + v65;
  uint64_t v218 = v66 | 7;
  uint64_t v68 = swift_allocObject();
  long long v225 = xmmword_20A8D3DC0;
  *(_OWORD *)(v68 + 16) = xmmword_20A8D3DC0;
  uint64_t v226 = v67;
  uint64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 104);
  unsigned int v214 = *MEMORY[0x263F24D48];
  v219 = v69;
  uint64_t v220 = v63;
  uint64_t v222 = v64 + 104;
  ((void (*)(uint64_t))v69)(v68 + v67);
  sub_20A6D0124(&qword_26AC67710, MEMORY[0x263F7A700]);
  v217 = "onDeckViewAction";
  uint64_t v70 = v204;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v203 + 8))(v55, v70);
  id v71 = v205;
  sub_20A8C9120();
  uint64_t v72 = v207;
  sub_20A8C9100();
  uint64_t v204 = sub_20A6D0124(&qword_26AC6E148, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
  uint64_t v73 = sub_20A8CBB50();
  if (v73 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v73 > 0x7FFFFFFF)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v74 = v57;
  id v75 = v72;
  uint64_t v76 = v199;
  sub_20A8C6DD0();
  v216 = v56;
  v211(v75, v74);
  unint64_t v215 = v58;
  uint64_t v77 = v198;
  v198(v71, v60);
  uint64_t v78 = swift_allocObject();
  *(_OWORD *)(v78 + 16) = v225;
  v219(v78 + v226, v214, v220);
  sub_20A6D0124(&qword_26AC69A00, MEMORY[0x263F79E78]);
  uint64_t v79 = v201;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v200 + 8))(v76, v79);
  sub_20A8C9120();
  sub_20A8C9100();
  uint64_t v80 = sub_20A8CBB60();
  if (v80 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v80 > 0x7FFFFFFF)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v204 = v52;
  uint64_t v81 = v183;
  sub_20A8C7080();
  v211(v75, ObjectType);
  v77(v71, v60);
  uint64_t v82 = swift_allocObject();
  *(_OWORD *)(v82 + 16) = v225;
  uint64_t v83 = v214;
  uint64_t v85 = v219;
  uint64_t v84 = v220;
  v219(v82 + v226, v214, v220);
  sub_20A6D0124((unint64_t *)&unk_26AC69A60, MEMORY[0x263F7A070]);
  unint64_t v86 = (unint64_t)v217 | 0x8000000000000000;
  uint64_t v87 = v185;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v184 + 8))(v81, v87);
  uint64_t v88 = v186;
  uint64_t v89 = v209;
  uint64_t v90 = v187;
  (*(void (**)(char *, uint64_t, uint64_t))(v186 + 16))(v209, v208, v187);
  int v91 = (*(uint64_t (**)(char *, uint64_t))(v88 + 88))(v89, v90);
  if (v91 == *MEMORY[0x263F7AF48])
  {
    (*(void (**)(char *, uint64_t))(v88 + 96))(v89, v90);
    uint64_t v92 = *(void **)v89;
    uint64_t ObjectType = swift_getObjectType();
    unint64_t v215 = v86;
    uint64_t v93 = v83;
    uint64_t v94 = v161;
    v216 = v92;
    sub_20A670898(v161);
    uint64_t v95 = swift_allocObject();
    *(_OWORD *)(v95 + 16) = v225;
    v85(v95 + v226, v93, v84);
    sub_20A6D0124((unint64_t *)&unk_26AC699D0, MEMORY[0x263F79DF8]);
    uint64_t v96 = v85;
    uint64_t v97 = v163;
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v94, v97);
    uint64_t v98 = v164;
    sub_20A67115C(*(void **)(v210 + 168));
    uint64_t v99 = swift_allocObject();
    *(_OWORD *)(v99 + 16) = v225;
    uint64_t v100 = v220;
    v96(v99 + v226, v93, v220);
    sub_20A6D0124((unint64_t *)&unk_26AC69AD0, MEMORY[0x263F7A270]);
    uint64_t v101 = v166;
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v165 + 8))(v98, v101);
    uint64_t v102 = v167;
    sub_20A454470();
    uint64_t v103 = swift_allocObject();
    *(_OWORD *)(v103 + 16) = v225;
    v219(v103 + v226, v93, v100);
    sub_20A6D0124(&qword_26AC69A30, MEMORY[0x263F79FB8]);
    uint64_t v104 = v169;
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    char v105 = v102;
    uint64_t v106 = v216;
    (*(void (**)(char *, uint64_t))(v168 + 8))(v105, v104);
    id v107 = objc_msgSend(v106, sel_sourceChannel);
    if (v107)
    {
      uint64_t v108 = v107;
      __swift_project_boxed_opaque_existential_1((void *)(v210 + 128), *(void *)(v210 + 152));
      id v109 = v158;
      sub_20A661B70(v108);
      uint64_t v110 = swift_allocObject();
      *(_OWORD *)(v110 + 16) = v225;
      v219(v110 + v226, v93, v220);
      sub_20A6D0124((unint64_t *)&unk_26AC69930, MEMORY[0x263F79AA0]);
      uint64_t v111 = v160;
      sub_20A8C45B0();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v159 + 8))(v109, v111);
    }
    uint64_t v112 = v210;
    if (objc_msgSend(v106, sel_respondsToSelector_, sel_parentIssue))
    {
      id v113 = objc_msgSend(v106, sel_parentIssue);
      if (v113)
      {
        id v114 = v113;
        id v115 = objc_msgSend(v114, sel_identifier);
        sub_20A8CE280();

        uint64_t v116 = v155;
        uint64_t v112 = v210;
        sub_20A8C77F0();
        sub_20A6D0124(&qword_26AC69B70, MEMORY[0x263F7A748]);
        uint64_t v117 = v157;
        sub_20A8C4940();

        (*(void (**)(char *, uint64_t))(v156 + 8))(v116, v117);
      }
    }
    uint64_t v118 = v176;
    sub_20A531D14();
    uint64_t v119 = swift_allocObject();
    *(_OWORD *)(v119 + 16) = v225;
    uint64_t v120 = v93;
    id v121 = v219;
    uint64_t v122 = v220;
    v219(v119 + v226, v120, v220);
    sub_20A6D0124(&qword_26AC69B60, MEMORY[0x263F7A660]);
    unint64_t v215 = (unint64_t)v217 | 0x8000000000000000;
    uint64_t v123 = v178;
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v177 + 8))(v118, v123);
    __swift_project_boxed_opaque_existential_1((void *)(v112 + 256), *(void *)(v112 + 280));
    uint64_t v124 = v180;
    sub_20A8C3600();
    char v125 = sub_20A8C4040();
    uint64_t v126 = v191;
    uint64_t v127 = (unsigned int *)MEMORY[0x263F79CB8];
    if ((v125 & 1) == 0) {
      uint64_t v127 = (unsigned int *)MEMORY[0x263F79CB0];
    }
    uint64_t v128 = v182;
    uint64_t v129 = v192;
    (*(void (**)(char *, void, uint64_t))(v191 + 104))(v182, *v127, v192);
    sub_20A45494C();
    v217 = &v209[*(int *)(v130 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v190, v128, v129);
    uint64_t v131 = v181;
    sub_20A8C6AE0();
    (*(void (**)(char *, uint64_t))(v188 + 8))(v124, v189);
    (*(void (**)(char *, uint64_t))(v126 + 8))(v128, v129);
    uint64_t v132 = swift_allocObject();
    *(_OWORD *)(v132 + 16) = v225;
    v121(v132 + v226, v214, v122);
    sub_20A6D0124(&qword_26AC699A0, MEMORY[0x263F79CA8]);
    uint64_t v133 = v194;
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v193 + 8))(v131, v133);
    sub_20A8C7450();
    unint64_t v134 = v195;
    sub_20A8C9130();
    sub_20A6D0124(&qword_26AC69B00, MEMORY[0x263F7A3B0]);
    sub_20A8C4570();
    uint64_t v135 = *(void (**)(char *, uint64_t))(v196 + 8);
    uint64_t v136 = v197;
    v135(v134, v197);
    sub_20A8C9110();
    sub_20A8C4580();
    swift_unknownObjectRelease();
    v135(v134, v136);
    uint64_t v137 = sub_20A8C33A0();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v137 - 8) + 8))(v217, v137);
  }
  if (v91 != *MEMORY[0x263F7AF38])
  {
LABEL_25:
    uint64_t result = sub_20A8CF750();
    __break(1u);
    return result;
  }
  (*(void (**)(char *, uint64_t))(v88 + 96))(v89, v90);
  v216 = *(void **)v89;
  swift_getObjectType();
  uint64_t v139 = v171;
  sub_20A671414();
  uint64_t v140 = swift_allocObject();
  *(_OWORD *)(v140 + 16) = v225;
  unsigned int v141 = v219;
  v219(v140 + v226, v83, v84);
  sub_20A6D0124(&qword_26763C8C0, MEMORY[0x263F7A020]);
  v217 = (char *)((unint64_t)v217 | 0x8000000000000000);
  uint64_t v142 = v174;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v173 + 8))(v139, v142);
  __swift_project_boxed_opaque_existential_1((void *)(v210 + 256), *(void *)(v210 + 280));
  id v143 = v170;
  sub_20A8C3600();
  char v144 = sub_20A8C4040();
  uint64_t v145 = v191;
  uint64_t v146 = (unsigned int *)MEMORY[0x263F79CB8];
  if ((v144 & 1) == 0) {
    uint64_t v146 = (unsigned int *)MEMORY[0x263F79CB0];
  }
  uint64_t v147 = v175;
  uint64_t v148 = v192;
  (*(void (**)(char *, void, uint64_t))(v191 + 104))(v175, *v146, v192);
  (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v190, v147, v148);
  uint64_t v149 = v172;
  sub_20A8C6AE0();
  (*(void (**)(char *, uint64_t))(v188 + 8))(v143, v189);
  (*(void (**)(char *, uint64_t))(v145 + 8))(v147, v148);
  uint64_t v150 = swift_allocObject();
  *(_OWORD *)(v150 + 16) = v225;
  v141(v150 + v226, v214, v220);
  sub_20A6D0124(&qword_26AC699A0, MEMORY[0x263F79CA8]);
  uint64_t v151 = v194;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v193 + 8))(v149, v151);
  sub_20A8C7540();
  uint64_t v152 = v195;
  sub_20A8C9130();
  sub_20A6D0124(&qword_26763D468, MEMORY[0x263F7A4A8]);
  sub_20A8C4570();
  uint64_t v153 = *(void (**)(char *, uint64_t))(v196 + 8);
  uint64_t v154 = v197;
  v153(v152, v197);
  sub_20A8C9110();
  sub_20A8C4580();
  swift_unknownObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v153)(v152, v154);
}

void sub_20A6D25EC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v58 = a1;
  uint64_t v3 = sub_20A8C9830();
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v48 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8CA0B0();
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v51 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6D55F0();
  uint64_t v55 = v7;
  uint64_t v59 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v54 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6D49FC(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v48 - v12;
  sub_20A469FF4(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8C2B70();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = v2;
  uint64_t v60 = *(void *)(v2 + 64);
  uint64_t v21 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
  sub_20A6D49FC(0, (unint64_t *)&qword_26AC6A060, MEMORY[0x263F7D550]);
  sub_20A6D016C((unint64_t *)&qword_26AC6A050, (unint64_t *)&qword_26AC6A060, v21);
  uint64_t v22 = v18;
  sub_20A8C9490();
  sub_20A8CBB40();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_20A6D5744((uint64_t)v16, (uint64_t (*)(void))sub_20A469FF4);
LABEL_17:
    sub_20A6D51D4();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v57, 1, 1, v47);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
  uint64_t v23 = *(void *)(v56 + 72);
  uint64_t v60 = v23;
  sub_20A69FBE0();
  sub_20A6D0124(&qword_26AC6A3A0, (void (*)(uint64_t))sub_20A69FBE0);
  uint64_t v24 = v54;
  sub_20A8CA4B0();
  uint64_t v25 = v55;
  uint64_t v26 = v22;
  char v27 = sub_20A8C85F0();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v59 + 8);
  v59 += 8;
  v28(v24, v25);
  if ((v27 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v20, v17);
    goto LABEL_17;
  }
  uint64_t v58 = v17;
  uint64_t v29 = v51;
  sub_20A8CAC20();
  uint64_t v30 = (void *)sub_20A8CA0A0();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v29, v53);
  if (!v30)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v20, v58);
    goto LABEL_17;
  }
  sub_20A6D4310(v56, (uint64_t)v20, v30);
  CGFloat x = v61.origin.x;
  CGFloat y = v61.origin.y;
  CGFloat width = v61.size.width;
  CGFloat height = v61.size.height;
  double MinY = CGRectGetMinY(v61);
  uint64_t v60 = v23;
  uint64_t v36 = v54;
  sub_20A8CA4B0();
  uint64_t v37 = v48;
  uint64_t v38 = v55;
  sub_20A8C85E0();
  v28(v36, v38);
  sub_20A8C9820();
  double v40 = v39;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v37, v50);
  double v41 = round(MinY / v40);
  if ((~*(void *)&v41 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v42 = v57;
  if (v41 <= -2147483650.0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v41 >= 2147483650.0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  sub_20A6D51D4();
  uint64_t v44 = v43;
  sub_20A8C6B40();
  v62.origin.CGFloat x = x;
  v62.origin.CGFloat y = y;
  v62.size.CGFloat width = width;
  v62.size.CGFloat height = height;
  double v45 = CGRectGetWidth(v62);
  if ((~*(void *)&v45 & 0x7FF0000000000000) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v45 <= -2147483650.0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v45 >= 2147483650.0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v63.origin.CGFloat x = x;
  v63.origin.CGFloat y = y;
  v63.size.CGFloat width = width;
  v63.size.CGFloat height = height;
  double v46 = CGRectGetHeight(v63);
  if ((~*(void *)&v46 & 0x7FF0000000000000) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v46 > -2147483650.0)
  {
    if (v46 < 2147483650.0)
    {
      sub_20A8C6760();

      (*(void (**)(char *, uint64_t))(v26 + 8))(v20, v58);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v42, 0, 1, v44);
      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
}

uint64_t sub_20A6D2D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v39 = a4;
  uint64_t v31 = a3;
  uint64_t v5 = sub_20A8C2800();
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6D060C(0, (unint64_t *)&unk_26AC82D70, MEMORY[0x263F587B8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v35 = (char *)v28 - v9;
  uint64_t v10 = sub_20A8C6980();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  uint64_t v37 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v34 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8CBF80();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v14 = sub_20A8C7670();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v29 = sub_20A8C6860();
  uint64_t v40 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_20A8C6C10();
  uint64_t v38 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v18 = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[1] = a2;
  sub_20A8CC1B0();
  uint64_t v33 = v18;
  sub_20A8C6C00();
  sub_20A8CC1C0();
  sub_20A8C7660();
  uint64_t v30 = v16;
  sub_20A8C6850();
  sub_20A8C6B50();
  sub_20A6D0124((unint64_t *)&unk_26AC810D0, MEMORY[0x263F79CF8]);
  sub_20A8C45B0();
  sub_20A6D51D4();
  sub_20A8C6770();
  sub_20A6D0124((unint64_t *)&unk_26AC810C0, MEMORY[0x263F79980]);
  sub_20A8C45B0();
  sub_20A6D0124(&qword_26AC699C0, MEMORY[0x263F79D58]);
  sub_20A8C45B0();
  sub_20A6D0124((unint64_t *)&unk_26AC82D20, MEMORY[0x263F79A80]);
  sub_20A8C45B0();
  sub_20A8CC1D0();
  uint64_t v19 = v34;
  sub_20A8C6970();
  sub_20A6D060C(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v20 = sub_20A8C4620();
  uint64_t v21 = *(void *)(v20 - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, void, uint64_t))(v21 + 104))(v23 + v22, *MEMORY[0x263F24D48], v20);
  sub_20A6D0124((unint64_t *)&unk_26AC82D30, MEMORY[0x263F79B30]);
  uint64_t v24 = v36;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v24);
  sub_20A8C7330();
  sub_20A6D49FC(0, &qword_26AC6A178, MEMORY[0x263F7D640]);
  sub_20A8C9130();
  sub_20A6D0124((unint64_t *)&unk_26AC82D40, MEMORY[0x263F7A2A0]);
  sub_20A8C4570();
  uint64_t v25 = v42;
  uint64_t v26 = *(void (**)(char *, uint64_t))(v41 + 8);
  v26(v7, v42);
  sub_20A8C9110();
  sub_20A8C4580();
  v26(v7, v25);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v30, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v33, v32);
}

uint64_t sub_20A6D3544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v73 = a3;
  uint64_t v103 = a1;
  uint64_t v79 = sub_20A8C2800();
  uint64_t v78 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v77 = (char *)v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_20A8C6BA0();
  uint64_t v75 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v74 = (char *)v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_20A8C7090();
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v70 = (char *)v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_20A8C6DE0();
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v81 = (char *)v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A652530();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6D49FC(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  uint64_t v100 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v69 - v13;
  sub_20A6A05D0(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44D7C8(0);
  unint64_t v19 = v18;
  uint64_t v102 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v88 = (char *)v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)v69 - v22;
  sub_20A6D49FC(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v25 = v24;
  uint64_t v101 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  unint64_t v86 = (char *)v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)v69 - v28;
  uint64_t v89 = sub_20A8C77D0();
  uint64_t v85 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v84 = (char *)v69 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6D49FC(0, &qword_26AC6A178, MEMORY[0x263F7D640]);
  uint64_t v32 = v31;
  sub_20A8C9120();
  uint64_t v97 = a2;
  sub_20A8C9100();
  uint64_t v33 = sub_20A8CA990();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v17, 1, 1, v33);
  unint64_t v104 = v19;
  sub_20A8C82F0();
  uint64_t v87 = v25;
  sub_20A8CBAC0();
  uint64_t v34 = v100;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v34);
  if (result == 1) {
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v34);
  uint64_t v36 = v84;
  sub_20A6C8DD0((uint64_t)v14, (uint64_t)v17);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v34);
  sub_20A6D5744((uint64_t)v17, (uint64_t (*)(void))sub_20A6A05D0);
  uint64_t v37 = v102 + 8;
  int v91 = *(void (**)(char *, unint64_t))(v102 + 8);
  v91(v23, v104);
  uint64_t v38 = v101 + 8;
  uint64_t v39 = v87;
  uint64_t v80 = *(void (**)(char *, uint64_t))(v101 + 8);
  v80(v29, v87);
  sub_20A6D060C(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v41 = v40;
  uint64_t v42 = sub_20A8C4620();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = *(void *)(v43 + 72);
  uint64_t v45 = *(unsigned __int8 *)(v43 + 80);
  uint64_t v46 = (v45 + 32) & ~v45;
  uint64_t v95 = v41;
  uint64_t v92 = v45 | 7;
  uint64_t v93 = v46 + v44;
  uint64_t v47 = swift_allocObject();
  long long v98 = xmmword_20A8D3DC0;
  *(_OWORD *)(v47 + 16) = xmmword_20A8D3DC0;
  uint64_t v94 = v46;
  uint64_t v49 = *(void (**)(void))(v43 + 104);
  uint64_t v48 = v43 + 104;
  LODWORD(v100) = *MEMORY[0x263F24D48];
  uint64_t v96 = v42;
  uint64_t v99 = (void (*)(uint64_t, void, uint64_t))v49;
  v49(v47 + v46);
  sub_20A6D0124(&qword_26AC67710, MEMORY[0x263F7A700]);
  unint64_t v90 = (unint64_t)"onDeckViewAction";
  uint64_t v50 = v89;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v36, v50);
  uint64_t v51 = v86;
  sub_20A8C9120();
  uint64_t v52 = v88;
  sub_20A8C9100();
  uint64_t v85 = sub_20A6D0124(&qword_26AC6E148, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
  uint64_t result = sub_20A8CBB50();
  uint64_t v89 = v32;
  unint64_t v53 = v104;
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v54 = v81;
  sub_20A8C6DD0();
  uint64_t v102 = v37;
  v91(v52, v53);
  uint64_t v101 = v38;
  uint64_t v55 = v80;
  v80(v51, v39);
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = v98;
  v99(v56 + v94, v100, v96);
  sub_20A6D0124(&qword_26AC69A00, MEMORY[0x263F79E78]);
  uint64_t v57 = v83;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v54, v57);
  sub_20A8C9120();
  sub_20A8C9100();
  uint64_t result = sub_20A8CBB60();
  if (result >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (result <= 0x7FFFFFFF)
    {
      uint64_t v58 = v70;
      sub_20A8C7080();
      v91(v52, v104);
      v55(v51, v39);
      v69[1] = v48;
      uint64_t v59 = swift_allocObject();
      *(_OWORD *)(v59 + 16) = v98;
      uint64_t v60 = v94;
      uint64_t v61 = v96;
      v99(v59 + v94, v100, v96);
      sub_20A6D0124((unint64_t *)&unk_26AC69A60, MEMORY[0x263F7A070]);
      unint64_t v104 = v90 | 0x8000000000000000;
      uint64_t v62 = v72;
      sub_20A8C45B0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v58, v62);
      sub_20A8CD3F0();
      sub_20A8CD400();
      CGRect v63 = v74;
      sub_20A8C6B90();
      uint64_t v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = v98;
      v99(v64 + v60, v100, v61);
      sub_20A6D0124(&qword_26763D470, MEMORY[0x263F79D18]);
      uint64_t v65 = v76;
      sub_20A8C45B0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v63, v65);
      sub_20A8C7360();
      uint64_t v66 = v77;
      sub_20A8C9130();
      sub_20A6D0124(&qword_26763D478, MEMORY[0x263F7A2C0]);
      sub_20A8C4570();
      uint64_t v67 = *(void (**)(char *, uint64_t))(v78 + 8);
      uint64_t v68 = v79;
      v67(v66, v79);
      sub_20A8C9110();
      sub_20A8C4580();
      return ((uint64_t (*)(char *, uint64_t))v67)(v66, v68);
    }
    goto LABEL_10;
  }
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_20A6D4310(uint64_t a1, uint64_t a2, void *a3)
{
  id v39 = a3;
  uint64_t v37 = a2;
  uint64_t v4 = sub_20A8CCE00();
  uint64_t v35 = *(void *)(v4 - 8);
  uint64_t v36 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for ForYouFeedLayoutModel();
  MEMORY[0x270FA5388](v38);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v33 - v9;
  sub_20A683664();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6D55F0();
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41[0] = *(void *)(a1 + 72);
  sub_20A69FBE0();
  sub_20A6D0124(&qword_26AC6A3A0, (void (*)(uint64_t))sub_20A69FBE0);
  sub_20A8CA4B0();
  sub_20A8C8620();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  sub_20A8C9150();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_20A6D56DC((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ForYouFeedLayoutModel);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_20A6D5744((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ForYouFeedLayoutModel);
    sub_20A6D5744((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ForYouFeedLayoutModel);
LABEL_4:
    objc_msgSend(v39, sel_frame);
    return;
  }
  uint64_t v22 = v35;
  uint64_t v21 = v36;
  uint64_t v23 = v34;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v34, v7, v36);
  sub_20A8CCDF0();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v21);
  sub_20A6D5744((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ForYouFeedLayoutModel);
  sub_20A6D57A4((uint64_t)v40, (uint64_t)v41, (uint64_t (*)(void))sub_20A500F7C);
  if (v42) {
    goto LABEL_4;
  }
  CGFloat v24 = *(double *)v41;
  CGFloat v25 = *(double *)&v41[1];
  CGFloat v26 = *(double *)&v41[2];
  CGFloat v27 = *(double *)&v41[3];
  id v28 = v39;
  objc_msgSend(v39, sel_frame);
  CGFloat v30 = v29;
  objc_msgSend(v28, sel_frame);
  CGFloat v32 = v31;
  v43.origin.CGFloat x = v24;
  v43.origin.CGFloat y = v25;
  v43.size.CGFloat width = v26;
  v43.size.CGFloat height = v27;
  CGRectOffset(v43, v30, v32);
}

uint64_t sub_20A6D4750(uint64_t a1, uint64_t a2)
{
  sub_20A6D0070(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A6D47B4()
{
  uint64_t v1 = sub_20A8CA320();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = sub_20A8C7290();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_20A6D4918(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_20A8CA320() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(sub_20A8C7290() - 8);
  uint64_t v7 = *(void *)(v1 + v5);
  uint64_t v8 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_20A6CA8D4(a1, v1 + v4, v7, v8);
}

void sub_20A6D49FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for ForYouFeedSectionDescriptor();
    v8[1] = type metadata accessor for ForYouFeedModel();
    v8[2] = sub_20A6D0124(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
    v8[3] = sub_20A6D0124((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_20A6D4AF0()
{
  if (!qword_26AC6B160)
  {
    sub_20A8CD410();
    uint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F59C20];
    sub_20A6D0124(&qword_26AC6B218, MEMORY[0x263F59C20]);
    sub_20A6D0124(&qword_26AC6B210, v0);
    unint64_t v1 = sub_20A8CCFA0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AC6B160);
    }
  }
}

uint64_t sub_20A6D4BD0()
{
  sub_20A6D49FC(0, &qword_26AC6A178, MEMORY[0x263F7D640]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = sub_20A8CD410();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (v4 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v8, v6);

  return swift_deallocObject();
}

uint64_t sub_20A6D4D3C(uint64_t a1)
{
  sub_20A6D49FC(0, &qword_26AC6A178, MEMORY[0x263F7D640]);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v5 = *(void *)(*(void *)(v3 - 8) + 64);
  uint64_t v6 = *(void *)(sub_20A8CD410() - 8);
  uint64_t v7 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_20A6D3544(a1, v1 + v4, v7);
}

uint64_t sub_20A6D4E2C()
{
  sub_20A6D49FC(0, &qword_26AC6A178, MEMORY[0x263F7D640]);
  uint64_t v13 = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v12 = sub_20A8C4020();
  uint64_t v4 = *(void *)(v12 - 8);
  unint64_t v5 = (v11 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = sub_20A8CCEE0();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (v6 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v11, v13);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v12);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v7);

  return swift_deallocObject();
}

uint64_t sub_20A6D503C(uint64_t a1)
{
  sub_20A6D49FC(0, &qword_26AC6A178, MEMORY[0x263F7D640]);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v5 = *(void *)(*(void *)(v3 - 8) + 64);
  uint64_t v6 = *(void *)(sub_20A8C4020() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(sub_20A8CCEE0() - 8);
  uint64_t v10 = *(void *)(v1 + v8);
  uint64_t v11 = v1 + ((v8 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return sub_20A6D0670(a1, v1 + v4, v1 + v7, v10, v11);
}

void sub_20A6D51A0(uint64_t a1)
{
}

void sub_20A6D51D4()
{
  if (!qword_26AC82BF0)
  {
    sub_20A8C6B50();
    sub_20A8C6770();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC82BF0);
    }
  }
}

uint64_t sub_20A6D5248()
{
  uint64_t v1 = sub_20A8CC1E0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  sub_20A6D51D4();
  uint64_t v6 = v5 - 8;
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  unint64_t v8 = (v3 + v4 + v7) & ~v7;
  uint64_t v9 = *(void *)(*(void *)(v5 - 8) + 64);
  sub_20A6D49FC(0, &qword_26AC6A178, MEMORY[0x263F7D640]);
  uint64_t v17 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (v8 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  uint64_t v13 = sub_20A8C6B50();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v0 + v8, v13);
  unint64_t v14 = v0 + v8 + *(int *)(v6 + 56);
  uint64_t v15 = sub_20A8C6770();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v0 + v12, v17);

  return swift_deallocObject();
}

uint64_t sub_20A6D549C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_20A8CC1E0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  sub_20A6D51D4();
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(*(void *)(v6 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  sub_20A6D49FC(0, &qword_26AC6A178, MEMORY[0x263F7D640]);
  uint64_t v10 = v1
      + ((v7 + v8 + *(unsigned __int8 *)(*(void *)(v9 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80));

  return sub_20A6D2D84(a1, v1 + v4, v1 + v7, v10);
}

void sub_20A6D55F0()
{
  if (!qword_26AC69E68)
  {
    type metadata accessor for ForYouFeedLayoutSectionDescriptor(255);
    type metadata accessor for ForYouFeedLayoutModel();
    sub_20A6D0124(&qword_26AC7BBA0, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutSectionDescriptor);
    sub_20A6D0124((unint64_t *)&unk_26AC72B40, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
    unint64_t v0 = sub_20A8C8610();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69E68);
    }
  }
}

uint64_t sub_20A6D56DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A6D5744(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A6D57A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A6D580C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = sub_20A8C3D00();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6D5D70(0, (unint64_t *)&unk_26AC68D30, MEMORY[0x263F079C8]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v28 - v14;
  uint64_t v16 = v4 + OBJC_IVAR____TtC8StocksUI33StockChartCalloutViewModelFactory_chart;
  swift_beginAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v16, 1, v9))
  {
    uint64_t v17 = sub_20A8C2AF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v15, 1, 1, v17);
LABEL_4:
    sub_20A6D5DC4((uint64_t)v15, (unint64_t *)&unk_26AC68D30, MEMORY[0x263F079C8]);
    uint64_t v20 = type metadata accessor for StockChartRangeCalloutViewModel(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a4, 1, 1, v20);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v16, v9);
  sub_20A8C3C40();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v18 = sub_20A8C2AF0();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18) == 1) {
    goto LABEL_4;
  }
  sub_20A6D5DC4((uint64_t)v15, (unint64_t *)&unk_26AC68D30, MEMORY[0x263F079C8]);
  sub_20A43F268();
  uint64_t v23 = v22;
  CGFloat v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
  v24(a4, a1, v22);
  uint64_t v25 = type metadata accessor for StockChartRangeCalloutViewModel(0);
  v24(a4 + *(int *)(v25 + 20), a2, v23);
  uint64_t v26 = a4 + *(int *)(v25 + 24);
  uint64_t v27 = sub_20A8C2BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v26, a3, v27);
  sub_20A8C2AE0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a4, 0, 1, v25);
}

uint64_t sub_20A6D5BF0()
{
  sub_20A6D5DC4(v0 + OBJC_IVAR____TtC8StocksUI33StockChartCalloutViewModelFactory_chart, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);

  return swift_deallocClassInstance();
}

uint64_t sub_20A6D5C70()
{
  return type metadata accessor for StockChartCalloutViewModelFactory();
}

uint64_t type metadata accessor for StockChartCalloutViewModelFactory()
{
  uint64_t result = qword_26AC7BDC8;
  if (!qword_26AC7BDC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A6D5CC4()
{
  sub_20A6D5D70(319, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_20A6D5D70(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A6D5DC4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A6D5D70(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

double sub_20A6D5E20@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_20A8C9720();
  double v6 = v5;
  sub_20A8C9720();
  double v8 = v7;
  if (v6 > 990.0)
  {
    sub_20A8C9710();
    double v10 = v8 - v9;
    sub_20A8C9710();
    double v12 = v10 - v11;
    sub_20A8C96D0();
    double v14 = v13;
    sub_20A8C96D0();
    double v8 = v12 + v14 + v15;
  }
  uint64_t v16 = (void *)sub_20A8C97B0();
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
  uint64_t v17 = sub_20A549C90();
  sub_20A804630(v17, (uint64_t)&v70, v8);
  swift_bridgeObjectRelease();
  sub_20A8C9720();
  double v68 = 0.0;
  if (v18 > 990.0)
  {
    sub_20A8C9710();
    double v20 = v19;
    sub_20A8C96D0();
    double v68 = v20 - v21;
  }
  sub_20A8C9720();
  double v23 = v22;
  sub_20A8C9720();
  double v69 = v24;
  if (v23 > 990.0)
  {
    sub_20A8C9710();
    double v26 = v69 - v25;
    sub_20A8C9710();
    double v28 = v26 - v27;
    sub_20A8C96D0();
    double v30 = v29;
    sub_20A8C96D0();
    double v69 = v28 + v30 + v31;
  }
  v75.size.CGFloat height = v71;
  CGFloat v66 = v71;
  uint64_t v67 = v70;
  v75.origin.CGFloat y = 0.0;
  v75.origin.CGFloat x = v68;
  v75.size.CGFloat width = v69;
  double v32 = CGRectGetMaxY(v75) + 0.0;
  sub_20A8C9820();
  double v34 = v33;
  sub_20A8C9710();
  double v36 = v34 - v35;
  sub_20A8C9710();
  double v38 = v36 - v37;
  uint64_t v39 = type metadata accessor for StockChartViewLayoutOptions();
  if (*(unsigned char *)(a1 + *(int *)(v39 + 24) + 8))
  {
    CGFloat v40 = *(double *)(a1 + *(int *)(v39 + 20));
  }
  else
  {
    sub_20A8C49F0();
    CGFloat v40 = v41;
  }
  sub_20A8C9710();
  CGFloat v43 = v42;
  sub_20A8C9710();
  CGFloat v45 = v44;
  double v59 = v44;
  v76.origin.CGFloat x = v43;
  v76.origin.CGFloat y = v32;
  v76.size.CGFloat width = v38;
  v76.size.CGFloat height = v40;
  CGFloat v60 = CGRectGetMaxY(v76) + 5.0;
  sub_20A8C9820();
  double v47 = v46;
  sub_20A8C9710();
  double v49 = v47 - v48;
  sub_20A8C9710();
  CGFloat v64 = v49 - v50;
  sub_20A8C9820();
  uint64_t v63 = v51;
  v77.size.CGFloat height = 15.0;
  v77.origin.CGFloat x = v45;
  v77.origin.CGFloat y = v60;
  v77.size.CGFloat width = v64;
  CGFloat MaxY = CGRectGetMaxY(v77);
  sub_20A8C9700();
  uint64_t v61 = v73;
  uint64_t v62 = v72;
  uint64_t v52 = v74;
  double v65 = 1.0 / v53;
  swift_bridgeObjectRetain();
  v78.origin.CGFloat x = v43;
  v78.origin.CGFloat y = v32;
  v78.size.CGFloat width = v38;
  v78.size.CGFloat height = v40;
  CGFloat MinX = CGRectGetMinX(v78);
  v79.origin.CGFloat y = 0.0;
  v79.origin.CGFloat x = v68;
  v79.size.CGFloat width = v69;
  v79.size.CGFloat height = v66;
  CGFloat MinY = CGRectGetMinY(v79);
  v80.origin.CGFloat x = v43;
  v80.origin.CGFloat y = v32;
  v80.size.CGFloat width = v38;
  v80.size.CGFloat height = v40;
  CGFloat Width = CGRectGetWidth(v80);

  sub_20A6D61C8((uint64_t)&v70);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v63;
  *(CGFloat *)(a2 + 24) = MaxY;
  *(CGFloat *)(a2 + 32) = v43;
  *(double *)(a2 + 40) = v32;
  *(double *)(a2 + 48) = v38;
  *(CGFloat *)(a2 + 56) = v40;
  *(double *)(a2 + 64) = v59;
  *(CGFloat *)(a2 + 72) = v60;
  *(CGFloat *)(a2 + 80) = v64;
  *(void *)(a2 + 88) = 0x402E000000000000;
  *(double *)(a2 + 96) = v68;
  *(void *)(a2 + 104) = 0;
  *(double *)(a2 + 112) = v69;
  *(CGFloat *)(a2 + 120) = v66;
  *(void *)(a2 + 128) = v67;
  *(CGFloat *)(a2 + 136) = v66;
  *(void *)(a2 + 144) = v62;
  *(void *)(a2 + 152) = v61;
  *(void *)(a2 + 160) = v52;
  *(CGFloat *)(a2 + 168) = MinX;
  *(CGFloat *)(a2 + 176) = MinY;
  double result = v65;
  *(CGFloat *)(a2 + 184) = Width;
  *(double *)(a2 + 192) = v65;
  return result;
}

uint64_t type metadata accessor for StockChartViewLayoutAttributesFactory()
{
  return self;
}

uint64_t sub_20A6D61C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_20A6D61F4(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *(void *)a1 = *a2;
    a1 = v21 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    long long v8 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v8;
    uint64_t v9 = v8;
    double v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
    swift_bridgeObjectRetain();
    v10(a1 + 16, (uint64_t)(a2 + 2), v9);
    uint64_t v11 = a3[6];
    uint64_t v12 = a1 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    uint64_t v14 = sub_20A8C2EF0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[7];
    long long v16 = *(_OWORD *)((char *)a2 + v15 + 24);
    *(_OWORD *)(a1 + v15 + 24) = v16;
    (**(void (***)(void))(v16 - 8))();
    uint64_t v17 = a3[8];
    long long v18 = *(_OWORD *)((char *)a2 + v17 + 24);
    *(_OWORD *)(a1 + v17 + 24) = v18;
    (**(void (***)(void))(v18 - 8))();
    uint64_t v19 = a3[9];
    long long v20 = *(_OWORD *)((char *)a2 + v19 + 24);
    *(_OWORD *)(a1 + v19 + 24) = v20;
    (**(void (***)(void))(v20 - 8))();
  }
  return a1;
}

uint64_t sub_20A6D6420(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_20A8C2EF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[7]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[8]);
  uint64_t v6 = a1 + a2[9];

  return __swift_destroy_boxed_opaque_existential_1(v6);
}

uint64_t sub_20A6D64CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2 + 16;
  long long v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  uint64_t v9 = v8;
  double v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  v10(a1 + 16, v7, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_20A8C2EF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  long long v16 = *(_OWORD *)(a2 + v15 + 24);
  *(_OWORD *)(a1 + v15 + 24) = v16;
  (**(void (***)(void))(v16 - 8))();
  uint64_t v17 = a3[8];
  long long v18 = *(_OWORD *)(a2 + v17 + 24);
  *(_OWORD *)(a1 + v17 + 24) = v18;
  (**(void (***)(void))(v18 - 8))();
  uint64_t v19 = a3[9];
  long long v20 = *(_OWORD *)(a2 + v19 + 24);
  *(_OWORD *)(a1 + v19 + 24) = v20;
  (**(void (***)(void))(v20 - 8))();
  return a1;
}

void *sub_20A6D66A8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2EF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + a3[7]), (void *)((char *)a2 + a3[7]));
  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + a3[8]), (void *)((char *)a2 + a3[8]));
  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + a3[9]), (void *)((char *)a2 + a3[9]));
  return a1;
}

uint64_t sub_20A6D6788(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20A8C2EF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  long long v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  long long v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  return a1;
}

uint64_t sub_20A6D6874(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_20A8C2EF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  __swift_destroy_boxed_opaque_existential_1(a1 + v12);
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  __swift_destroy_boxed_opaque_existential_1(a1 + v16);
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  __swift_destroy_boxed_opaque_existential_1(a1 + v20);
  long long v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(void *)(v21 + 32) = *(void *)(v22 + 32);
  return a1;
}

uint64_t sub_20A6D698C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A6D69A0);
}

uint64_t sub_20A6D69A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C2EF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_20A6D6A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A6D6A64);
}

uint64_t sub_20A6D6A64(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_20A8C2EF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for StockListPriceDataUpdateBlueprintModifier()
{
  uint64_t result = qword_26AC7E6C8;
  if (!qword_26AC7E6C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A6D6B58()
{
  uint64_t result = sub_20A8C2EF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A6D6BFC(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v152 = a3;
  uint64_t v153 = a2;
  sub_20A6DA684(0, &qword_26AC6A428, MEMORY[0x263F7D950]);
  uint64_t v151 = v4;
  uint64_t v150 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v149 = (char *)v148 - v5;
  sub_20A47113C();
  MEMORY[0x270FA5388](v6 - 8);
  double v171 = (char *)v148 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4AE540();
  MEMORY[0x270FA5388](v8 - 8);
  double v170 = (char *)v148 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = sub_20A8C34C0();
  unint64_t v214 = *(void *)(v169 - 8);
  MEMORY[0x270FA5388](v169);
  uint64_t v168 = (char *)v148 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = sub_20A8C40E0();
  uint64_t v194 = *(void (**)(char *))(v181 - 8);
  MEMORY[0x270FA5388](v181);
  double v167 = (char *)v148 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A69008C();
  uint64_t v210 = *(void *)(v12 - 8);
  uint64_t v211 = v12;
  MEMORY[0x270FA5388](v12);
  double v158 = (void *)((char *)v148 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v191 = (uint64_t)v148 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v206 - 8);
  uint64_t v155 = (char *)v148 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  long long v19 = (char *)v148 - v18;
  MEMORY[0x270FA5388](v20);
  uint64_t v166 = (char *)v148 - v21;
  sub_20A51238C(0);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v203 = (uint64_t)v148 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4D4A5C();
  MEMORY[0x270FA5388](v24 - 8);
  v202 = (char *)v148 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v217 = sub_20A8C3F00();
  uint64_t v193 = *(void *)(v217 - 8);
  MEMORY[0x270FA5388](v217);
  uint64_t v201 = (char *)v148 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v192 = (char *)v148 - v28;
  sub_20A42D93C();
  uint64_t v208 = v29;
  uint64_t v157 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v159 = (char *)v148 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  v216 = (char *)v148 - v32;
  MEMORY[0x270FA5388](v33);
  uint64_t v200 = (char *)v148 - v34;
  sub_20A5123C0();
  uint64_t v165 = v35;
  MEMORY[0x270FA5388](v35);
  v205 = (char *)v148 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6DA684(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  uint64_t v212 = v37;
  uint64_t v185 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37 - 8);
  v207 = (char *)v148 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  uint64_t v190 = (char *)v148 - v40;
  MEMORY[0x270FA5388](v41);
  uint64_t v189 = (char *)v148 - v42;
  sub_20A42D51C();
  uint64_t v44 = v43 - 8;
  MEMORY[0x270FA5388](v43);
  double v46 = (char *)v148 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v47);
  double v49 = (char *)v148 - v48;
  double v50 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
  sub_20A6DA684(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v52 = v51;
  uint64_t v53 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v188 = (char *)v148 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v56 = MEMORY[0x270FA5388](v55);
  uint64_t v154 = v53;
  uint64_t v57 = *(void (**)(double))(v53 + 16);
  uint64_t v187 = v53 + 16;
  uint64_t v173 = (char *)v148 - v58;
  v57(v56);
  uint64_t v186 = v57;
  ((void (*)(char *, uint64_t, uint64_t))v57)(v46, a1, v52);
  uint64_t v59 = sub_20A6DA640((unint64_t *)&unk_26AC6ACE0, (unint64_t *)&qword_26AC6ACF0, v50);
  v148[1] = a1;
  sub_20A8CE840();
  *(void *)&v46[*(int *)(v44 + 44)] = v223;
  sub_20A6DB0A4((uint64_t)v46, (uint64_t)v49, (uint64_t (*)(void))sub_20A42D51C);
  uint64_t v60 = (uint64_t)v49;
  uint64_t v61 = &v49[*(int *)(v44 + 44)];
  uint64_t v62 = *(void *)v61;
  sub_20A8CE8A0();
  if (v62 != v223)
  {
    uint64_t v180 = 0;
    uint64_t v213 = (void (**)(char *))(v185 + 16);
    uint64_t v183 = (void (**)(char *, uint64_t))(v154 + 8);
    uint64_t v182 = (void (**)(char *, char *, uint64_t))(v185 + 32);
    v209 = (void (**)(char *, uint64_t))(v185 + 8);
    char v199 = (void (**)(char *))(v157 + 16);
    uint64_t v204 = (void (**)(char *, char *, uint64_t))(v157 + 32);
    unint64_t v215 = (void (**)(char *, uint64_t, uint64_t))(v193 + 16);
    uint64_t v198 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v193 + 56);
    uint64_t v197 = (void (**)(char *, uint64_t))(v157 + 8);
    uint64_t v196 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v193 + 48);
    uint64_t v195 = (void (**)(char *, uint64_t, uint64_t))(v193 + 32);
    uint64_t v162 = (void (*)(char *))((char *)v194 + 8);
    uint64_t v161 = (void (**)(char *, uint64_t))(v214 + 8);
    uint64_t v160 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v185 + 56);
    uint64_t v156 = v19;
    uint64_t v185 = v59;
    uint64_t v164 = v52;
    uint64_t v163 = v49;
    uint64_t v184 = v61;
    do
    {
      uint64_t v70 = (void (*)(uint64_t *, void))sub_20A8CE8C0();
      uint64_t v71 = v212;
      uint64_t v72 = *v213;
      uint64_t v73 = v189;
      (*v213)(v189);
      v70(&v223, 0);
      uint64_t v74 = v188;
      ((void (*)(char *, uint64_t, uint64_t))v186)(v188, v60, v52);
      sub_20A8CE8B0();
      (*v183)(v74, v52);
      CGRect v75 = v190;
      (*v182)(v190, v73, v71);
      sub_20A8C8820();
      if (v227)
      {
        if (v227 == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        (*v209)(v75, v71);
        double v68 = v184;
        goto LABEL_6;
      }
      long long v177 = v224;
      uint64_t v178 = v225;
      uint64_t v179 = v226;
      uint64_t v176 = v223;
      uint64_t v194 = v72;
      ((void (*)(char *, char *, uint64_t))v72)(v207, v75, v71);
      CGRect v76 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
      sub_20A6DA640((unint64_t *)&unk_26AC69F30, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
      uint64_t v77 = (uint64_t)v205;
      sub_20A8CE4B0();
      CGRect v78 = (uint64_t *)(v77 + *(int *)(v165 + 36));
      sub_20A6DA640(&qword_26AC69F40, (unint64_t *)&qword_26AC69F48, v76);
      uint64_t v79 = *v78;
      sub_20A8CE8A0();
      uint64_t v80 = (uint64_t)v166;
      uint64_t v81 = v208;
      if (v79 == v218)
      {
        unint64_t v214 = MEMORY[0x263F8EE78];
      }
      else
      {
        unint64_t v214 = MEMORY[0x263F8EE78];
        uint64_t v93 = v212;
        uint64_t v94 = v194;
        uint64_t v95 = (uint64_t)v156;
        do
        {
          uint64_t v97 = v77;
          long long v98 = (void (*)(uint64_t *, void))sub_20A8CE8C0();
          uint64_t v99 = v200;
          (*v199)(v200);
          v98(&v218, 0);
          uint64_t v100 = v207;
          ((void (*)(char *, uint64_t, uint64_t))v94)(v207, v97, v93);
          sub_20A8CE8B0();
          (*v209)(v100, v93);
          (*v204)(v216, v99, v81);
          sub_20A8C8330();
          sub_20A6DB18C(v80, v95, type metadata accessor for StockListModel);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload)
          {
            if (EnumCaseMultiPayload == 1) {
              sub_20A6DB12C(v95, type metadata accessor for StockListModel);
            }
            uint64_t v102 = type metadata accessor for StockViewModel();
            uint64_t v103 = v203;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v203, 1, 1, v102);
          }
          else
          {
            uint64_t v104 = v191;
            sub_20A6DB0A4(v95, v191, type metadata accessor for StockListStockModel);
            uint64_t v103 = v203;
            sub_20A6DB18C(v104, v203, (uint64_t (*)(void))type metadata accessor for StockViewModel);
            sub_20A6DB12C(v104, type metadata accessor for StockListStockModel);
            uint64_t v102 = type metadata accessor for StockViewModel();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v103, 0, 1, v102);
          }
          sub_20A6DB12C(v80, type metadata accessor for StockListModel);
          type metadata accessor for StockViewModel();
          uint64_t v105 = 1;
          int v106 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 48))(v103, 1, v102);
          id v107 = (uint64_t (*)(void))sub_20A51238C;
          uint64_t v108 = (uint64_t)v202;
          uint64_t v109 = v217;
          if (v106 != 1)
          {
            (*v215)(v202, v103, v217);
            uint64_t v105 = 0;
            id v107 = (uint64_t (*)(void))type metadata accessor for StockViewModel;
          }
          sub_20A6DB12C(v103, v107);
          (*v198)(v108, v105, 1, v109);
          uint64_t v81 = v208;
          (*v197)(v216, v208);
          if ((*v196)(v108, 1, v109) == 1)
          {
            sub_20A6DB12C(v108, (uint64_t (*)(void))sub_20A4D4A5C);
          }
          else
          {
            uint64_t v110 = v109;
            uint64_t v111 = *v195;
            uint64_t v112 = v192;
            (*v195)(v192, v108, v110);
            v111(v201, (uint64_t)v112, v110);
            unint64_t v113 = v214;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v113 = sub_20A46DD9C(0, *(void *)(v113 + 16) + 1, 1, v113);
            }
            unint64_t v115 = *(void *)(v113 + 16);
            unint64_t v114 = *(void *)(v113 + 24);
            unint64_t v214 = v113;
            if (v115 >= v114 >> 1) {
              unint64_t v214 = sub_20A46DD9C(v114 > 1, v115 + 1, 1, v214);
            }
            uint64_t v94 = v194;
            unint64_t v116 = v214;
            *(void *)(v214 + 16) = v115 + 1;
            v111((char *)(v116+ ((*(unsigned __int8 *)(v193 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v193 + 80))+ *(void *)(v193 + 72) * v115), (uint64_t)v201, v110);
          }
          uint64_t v96 = *v78;
          uint64_t v77 = (uint64_t)v205;
          uint64_t v93 = v212;
          sub_20A8CE8A0();
        }
        while (v96 != v218);
      }
      sub_20A6DB12C(v77, (uint64_t (*)(void))sub_20A5123C0);
      unint64_t v82 = v214;
      int64_t v83 = *(void *)(v214 + 16);
      if (v83)
      {
        uint64_t v218 = MEMORY[0x263F8EE78];
        sub_20A68E16C(0, v83, 0);
        uint64_t v84 = v218;
        unint64_t v85 = v82 + ((*(unsigned __int8 *)(v193 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v193 + 80));
        uint64_t v86 = *(void *)(v193 + 72);
        uint64_t v87 = *(void (**)(char *, unint64_t, uint64_t))(v193 + 16);
        uint64_t v88 = v158;
        do
        {
          v87((char *)v88 + *(int *)(v211 + 48), v85, v217);
          *uint64_t v88 = sub_20A8C3EC0();
          v88[1] = v89;
          uint64_t v218 = v84;
          unint64_t v91 = *(void *)(v84 + 16);
          unint64_t v90 = *(void *)(v84 + 24);
          if (v91 >= v90 >> 1)
          {
            sub_20A68E16C(v90 > 1, v91 + 1, 1);
            uint64_t v84 = v218;
          }
          *(void *)(v84 + 16) = v91 + 1;
          sub_20A6DB0A4((uint64_t)v88, v84+ ((*(unsigned __int8 *)(v210 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v210 + 80))+ *(void *)(v210 + 72) * v91, (uint64_t (*)(void))sub_20A69008C);
          v85 += v86;
          --v83;
        }
        while (v83);
        swift_bridgeObjectRelease();
        if (!*(void *)(v84 + 16))
        {
LABEL_36:
          uint64_t v92 = MEMORY[0x263F8EE80];
          goto LABEL_37;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        if (!*(void *)(MEMORY[0x263F8EE78] + 16)) {
          goto LABEL_36;
        }
      }
      sub_20A6DA744();
      uint64_t v92 = sub_20A8CF570();
LABEL_37:
      uint64_t v218 = v92;
      uint64_t v117 = swift_bridgeObjectRetain();
      uint64_t v118 = v180;
      sub_20A6DA7AC(v117, 1, &v218);
      if (v118)
      {
        uint64_t result = swift_unexpectedError();
        __break(1u);
        return result;
      }
      swift_bridgeObjectRelease();
      uint64_t v119 = v218;
      uint64_t updated = type metadata accessor for StockListPriceDataUpdateBlueprintModifier();
      uint64_t v121 = v172;
      uint64_t v122 = (void *)(v172 + *(int *)(updated + 28));
      __swift_project_boxed_opaque_existential_1(v122, v122[3]);
      uint64_t v123 = v167;
      sub_20A8C3600();
      uint64_t v124 = sub_20A8C40B0();
      uint64_t v180 = *(void (**)(void, void))v162;
      v180(v123, v181);
      swift_retain();
      unint64_t v175 = sub_20A6DAD2C(v124, v119);
      unint64_t v214 = 0;
      swift_bridgeObjectRelease();
      swift_release_n();
      sub_20A4342F4(v121 + *(int *)(updated + 32), (uint64_t)&v218);
      uint64_t v174 = v221;
      __swift_project_boxed_opaque_existential_1(&v218, v220);
      __swift_project_boxed_opaque_existential_1(v122, v122[3]);
      sub_20A8C3600();
      char v125 = v168;
      sub_20A8C40D0();
      v180(v123, v181);
      uint64_t v126 = sub_20A8C3B10();
      swift_bridgeObjectRelease();
      (*v161)(v125, v169);
      uint64_t v127 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v218);
      MEMORY[0x270FA5388](v127);
      uint64_t v128 = v190;
      uint64_t v146 = v190;
      uint64_t v147 = v121;
      unint64_t v129 = v214;
      unint64_t v130 = sub_20A426874((void (*)(void))sub_20A6DB088, (uint64_t)&v148[-4], v126);
      swift_bridgeObjectRelease();
      uint64_t v131 = *(void *)(v130 + 16);
      uint64_t v180 = (void (*)(void, void))v129;
      if (v131)
      {
        uint64_t v132 = v208;
        uint64_t v52 = v164;
        uint64_t v133 = v212;
        uint64_t v134 = v179;
        uint64_t v135 = v178;
        uint64_t v136 = v176;
      }
      else
      {
        swift_storeEnumTagMultiPayload();
        sub_20A6DA5A4(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
        sub_20A8C8320();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v132 = v208;
        uint64_t v52 = v164;
        uint64_t v133 = v212;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v130 = sub_20A46DDE4(0, *(void *)(v130 + 16) + 1, 1, v130);
        }
        unint64_t v139 = *(void *)(v130 + 16);
        unint64_t v138 = *(void *)(v130 + 24);
        uint64_t v136 = v176;
        if (v139 >= v138 >> 1) {
          unint64_t v130 = sub_20A46DDE4(v138 > 1, v139 + 1, 1, v130);
        }
        *(void *)(v130 + 16) = v139 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v157 + 32))(v130+ ((*(unsigned __int8 *)(v157 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v157 + 80))+ *(void *)(v157 + 72) * v139, v159, v132);
        uint64_t v134 = v179;
        uint64_t v135 = v178;
      }
      uint64_t v218 = v136;
      long long v219 = v177;
      uint64_t v220 = v135;
      uint64_t v221 = v134;
      char v222 = 0;
      uint64_t v140 = sub_20A6DA5A4(&qword_26AC69D98, (void (*)(uint64_t))sub_20A42D93C);
      uint64_t v141 = sub_20A6DA5A4(&qword_26AC69D90, (void (*)(uint64_t))sub_20A42D93C);
      MEMORY[0x21051E250](v130, v132, v140, v141);
      sub_20A42D40C();
      sub_20A6DA5A4(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
      uint64_t v142 = v207;
      sub_20A8C8810();
      uint64_t v143 = (uint64_t)v171;
      ((void (*)(char *, char *, uint64_t))v194)(v171, v128, v133);
      (*v160)(v143, 0, 1, v133);
      sub_20A8CBA30();
      sub_20A6DB12C(v143, (uint64_t (*)(void))sub_20A47113C);
      char v144 = *v209;
      (*v209)(v142, v133);
      v144(v128, v133);
      uint64_t v60 = (uint64_t)v163;
      double v68 = v184;
LABEL_6:
      uint64_t v69 = *(void *)v68;
      sub_20A8CE8A0();
    }
    while (v69 != v223);
  }
  sub_20A6DB12C(v60, (uint64_t (*)(void))sub_20A42D51C);
  sub_20A4FBD1C();
  sub_20A42D40C();
  uint64_t v63 = sub_20A6DA5A4(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
  CGFloat v64 = v173;
  sub_20A8C9300();
  __swift_project_boxed_opaque_existential_1(&v223, v225);
  if (sub_20A8C8B90())
  {
    uint64_t v65 = v150;
    CGFloat v66 = v149;
    uint64_t v67 = v151;
    (*(void (**)(char *, void, uint64_t))(v150 + 104))(v149, *MEMORY[0x263F7D948], v151);
  }
  else
  {
    uint64_t v146 = (char *)v63;
    CGFloat v66 = v149;
    sub_20A8C9B40();
    uint64_t v67 = v151;
    uint64_t v65 = v150;
  }
  v153(v66);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v67);
  (*(void (**)(char *, uint64_t))(v154 + 8))(v64, v52);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v223);
}

uint64_t sub_20A6D86D4@<X0>(NSObject *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v142 = a3;
  uint64_t v143 = a2;
  uint64_t v144 = a4;
  uint64_t v123 = sub_20A8C40E0();
  uint64_t v122 = *(void *)(v123 - 8);
  MEMORY[0x270FA5388](v123);
  uint64_t v121 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C4030();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v117 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v119 = (uint64_t)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_20A8C3410();
  uint64_t v115 = *(void *)(v132 - 8);
  MEMORY[0x270FA5388](v132);
  unint64_t v129 = (char *)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_20A8C3F00();
  uint64_t v131 = *(void *)(v136 - 8);
  MEMORY[0x270FA5388](v136);
  uint64_t v135 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A609C6C(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v128 = (uint64_t)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v133 = (char *)&v106 - v15;
  uint64_t v118 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x270FA5388](v118);
  uint64_t v124 = (uint64_t)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A51238C(0);
  MEMORY[0x270FA5388](v17 - 8);
  unint64_t v138 = (void (*)(uint64_t))((char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v137 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v137);
  uint64_t v116 = (uint64_t)&v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v125 = (uint64_t)&v106 - v21;
  MEMORY[0x270FA5388](v22);
  unint64_t v139 = (uint64_t *)((char *)&v106 - v23);
  uint64_t v140 = (uint64_t (*)(void))type metadata accessor for StockViewModel();
  uint64_t v126 = *((void *)v140 - 1);
  MEMORY[0x270FA5388](v140);
  uint64_t v113 = (uint64_t)&v106 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  unint64_t v114 = (char *)&v106 - v26;
  MEMORY[0x270FA5388](v27);
  unint64_t v130 = (int *)((char *)&v106 - v28);
  sub_20A42C470(0);
  MEMORY[0x270FA5388](v29 - 8);
  uint64_t v112 = (uint64_t)&v106 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v127 = (uint64_t)&v106 - v32;
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v106 - v34;
  uint64_t v141 = sub_20A8C3E10();
  uint64_t v36 = *(void *)(v141 - 8);
  MEMORY[0x270FA5388](v141);
  uint64_t v134 = (char *)&v106 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D908(0);
  MEMORY[0x270FA5388](v38 - 8);
  uint64_t v40 = (char *)&v106 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D93C();
  uint64_t v42 = v41;
  uint64_t v43 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v45 = (char *)&v106 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C3E20();
  sub_20A6DA684(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  sub_20A8C8920();
  uint64_t v46 = v42;
  uint64_t v47 = v43;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v40, 1, v46) == 1)
  {
    sub_20A6DB12C((uint64_t)v40, (uint64_t (*)(void))sub_20A42D908);
    if (qword_26AC675A8 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_20A8C7DF0();
    __swift_project_value_buffer(v48, (uint64_t)qword_26AC9E888);
    double v49 = sub_20A8C7DD0();
    os_log_type_t v50 = sub_20A8CE9E0();
    BOOL v51 = os_log_type_enabled(v49, v50);
    uint64_t v52 = v144;
    if (v51)
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v53 = 0;
      _os_log_impl(&dword_20A414000, v49, v50, "Invalid StockListBlueprint in PriceUpdate", v53, 2u);
      MEMORY[0x210528850](v53, -1, -1);
    }

    uint64_t v54 = 1;
  }
  else
  {
    uint64_t v111 = v43;
    uint64_t v55 = *(void (**)(uint64_t, char *, uint64_t))(v43 + 32);
    uint64_t v143 = v45;
    uint64_t v120 = v46;
    uint64_t v110 = v55;
    v55((uint64_t)v45, v40, v46);
    uint64_t updated = type metadata accessor for StockListPriceDataUpdateBlueprintModifier();
    uint64_t v56 = sub_20A8C2EE0();
    uint64_t v109 = a1;
    uint64_t v57 = sub_20A8C3EC0();
    if (*(void *)(v56 + 16))
    {
      unint64_t v59 = sub_20A4D1B24(v57, v58);
      uint64_t v60 = (int *)v140;
      uint64_t v61 = v141;
      if (v62)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v36 + 16))(v35, *(void *)(v56 + 56) + *(void *)(v36 + 72) * v59, v141);
        uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
        CGFloat v64 = v35;
        uint64_t v65 = 0;
      }
      else
      {
        uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
        CGFloat v64 = v35;
        uint64_t v65 = 1;
      }
      id v107 = v63;
      v63(v64, v65, 1, v61);
      CGFloat v66 = v143;
    }
    else
    {
      uint64_t v61 = v141;
      id v107 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
      v107(v35, 1, 1, v141);
      CGFloat v66 = v143;
      uint64_t v60 = (int *)v140;
    }
    uint64_t v67 = v138;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v35, 1, v61) == 1)
    {
      sub_20A6DB12C((uint64_t)v35, (uint64_t (*)(void))sub_20A42C470);
      uint64_t v52 = v144;
      uint64_t v46 = v120;
    }
    else
    {
      uint64_t v68 = (uint64_t)v134;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v134, v35, v61);
      uint64_t v69 = (void (*)(void, void, void))v139;
      uint64_t v46 = v120;
      sub_20A8C8330();
      uint64_t v70 = (uint64_t)v69;
      uint64_t v71 = v125;
      sub_20A6DB18C(v70, v125, type metadata accessor for StockListModel);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1) {
          sub_20A6DB12C(v71, type metadata accessor for StockListModel);
        }
        uint64_t v73 = 1;
      }
      else
      {
        uint64_t v74 = v71;
        uint64_t v75 = v124;
        sub_20A6DB0A4(v74, v124, type metadata accessor for StockListStockModel);
        sub_20A6DB18C(v75, (uint64_t)v67, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        sub_20A6DB12C(v75, type metadata accessor for StockListStockModel);
        uint64_t v73 = 0;
      }
      CGRect v76 = v109;
      uint64_t v77 = v126;
      (*(void (**)(void (*)(uint64_t), uint64_t, uint64_t, int *))(v126 + 56))(v67, v73, 1, v60);
      sub_20A6DB12C((uint64_t)v139, type metadata accessor for StockListModel);
      if ((*(unsigned int (**)(void (*)(uint64_t), uint64_t, int *))(v77 + 48))(v67, 1, v60) != 1)
      {
        uint64_t v140 = (uint64_t (*)(void))type metadata accessor for StockViewModel;
        CGRect v78 = v130;
        sub_20A6DB0A4((uint64_t)v67, (uint64_t)v130, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        uint64_t v79 = v133;
        sub_20A6D973C(v142, v76, v68, v78, v133);
        uint64_t v106 = v36;
        unint64_t v139 = *(void **)(v131 + 16);
        ((void (*)(char *, NSObject *, uint64_t))v139)(v135, v76, v136);
        uint64_t v80 = v127;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v127, v68, v61);
        v107((char *)v80, 0, 1, v61);
        unint64_t v138 = sub_20A609C6C;
        uint64_t v81 = v128;
        sub_20A6DB18C((uint64_t)v79, v128, (uint64_t (*)(void))sub_20A609C6C);
        uint64_t v82 = v115;
        int64_t v83 = *(void (**)(char *, char *, uint64_t))(v115 + 16);
        uint64_t v84 = v132;
        v83(v129, (char *)v78 + v60[8], v132);
        LODWORD(v126) = *((unsigned __int8 *)v78 + v60[9]);
        uint64_t v85 = (uint64_t)v114;
        ((void (*)(char *, char *, uint64_t))v139)(v114, v135, v136);
        uint64_t v86 = v127;
        sub_20A6DB18C(v127, v85 + v60[5], (uint64_t (*)(void))sub_20A42C470);
        sub_20A6DB18C(v81, v85 + v60[6], (uint64_t (*)(void))v138);
        uint64_t v87 = v129;
        v83((char *)(v85 + v60[8]), v129, v84);
        *(unsigned char *)(v85 + v60[9]) = v126;
        uint64_t v88 = v112;
        sub_20A6DB18C(v86, v112, (uint64_t (*)(void))sub_20A42C470);
        uint64_t v89 = v117;
        unint64_t v90 = v135;
        sub_20A8C3E70();
        uint64_t v91 = v119;
        sub_20A5EC850(v88, v89, 9666786, 0xA300000000000000, v119);
        (*(void (**)(char *, uint64_t))(v82 + 8))(v87, v132);
        sub_20A6DB12C(v128, (uint64_t (*)(void))sub_20A609C6C);
        sub_20A6DB12C(v86, (uint64_t (*)(void))sub_20A42C470);
        (*(void (**)(char *, uint64_t))(v131 + 8))(v90, v136);
        uint64_t v92 = v60[7];
        uint64_t v93 = v85;
        sub_20A6DB0A4(v91, v85 + v92, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
        uint64_t v94 = v113;
        sub_20A6DB18C(v85, v113, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        uint64_t v95 = (void *)(v142 + *(int *)(updated + 28));
        __swift_project_boxed_opaque_existential_1(v95, v95[3]);
        LOBYTE(v85) = sub_20A8C36F0();
        __swift_project_boxed_opaque_existential_1(v95, v95[3]);
        uint64_t v96 = v121;
        sub_20A8C3600();
        uint64_t v97 = sub_20A8C4050();
        uint64_t v99 = v98;
        (*(void (**)(char *, uint64_t))(v122 + 8))(v96, v123);
        uint64_t v100 = v94;
        uint64_t v101 = v124;
        sub_20A6DB0A4(v100, v124, v140);
        uint64_t v102 = v118;
        char v103 = v85 & 1;
        uint64_t v46 = v120;
        *(unsigned char *)(v101 + *(int *)(v118 + 20)) = v103;
        uint64_t v104 = (uint64_t *)(v101 + *(int *)(v102 + 24));
        *uint64_t v104 = v97;
        v104[1] = v99;
        sub_20A6DB18C(v101, v116, type metadata accessor for StockListStockModel);
        swift_storeEnumTagMultiPayload();
        sub_20A6DA5A4(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
        uint64_t v52 = v144;
        sub_20A8C8320();
        sub_20A6DB12C(v101, type metadata accessor for StockListStockModel);
        sub_20A6DB12C(v93, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        sub_20A6DB12C((uint64_t)v133, (uint64_t (*)(void))sub_20A609C6C);
        sub_20A6DB12C((uint64_t)v130, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        (*(void (**)(char *, uint64_t))(v106 + 8))(v134, v141);
        uint64_t v47 = v111;
        (*(void (**)(char *, uint64_t))(v111 + 8))(v143, v46);
        uint64_t v54 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v52, v54, 1, v46);
      }
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v68, v61);
      sub_20A6DB12C((uint64_t)v67, (uint64_t (*)(void))sub_20A51238C);
      CGFloat v66 = v143;
      uint64_t v52 = v144;
    }
    v110(v52, v66, v46);
    uint64_t v54 = 0;
    uint64_t v47 = v111;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v52, v54, 1, v46);
}

uint64_t sub_20A6D973C@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X2>, int *a4@<X3>, char *a5@<X8>)
{
  uint64_t v119 = a4;
  uint64_t v125 = a3;
  uint64_t v126 = a5;
  uint64_t v117 = sub_20A8C3F00();
  uint64_t v115 = *(void *)(v117 - 8);
  MEMORY[0x270FA5388](v117);
  uint64_t v116 = (char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for StockSparklineViewModel.CacheModel(0);
  MEMORY[0x270FA5388](v110);
  uint64_t v111 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A609C6C(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C470(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v121 = (char *)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6DB10C(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v112 = (uint64_t)&v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v113 = (uint64_t)&v105 - v17;
  uint64_t v18 = sub_20A8CDCD0();
  uint64_t v123 = *(void *)(v18 - 8);
  uint64_t v124 = v18;
  MEMORY[0x270FA5388](v18);
  id v107 = (char *)&v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v118 = (char *)&v105 - v21;
  MEMORY[0x270FA5388](v22);
  uint64_t v108 = (char *)&v105 - v23;
  sub_20A4C77A4(0);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v26 = (char *)&v105 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_20A8C3D00();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v109 = (char *)&v105 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v105 - v31;
  MEMORY[0x270FA5388](v33);
  uint64_t v120 = (char *)&v105 - v34;
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = (char *)&v105 - v36;
  type metadata accessor for StockListPriceDataUpdateBlueprintModifier();
  uint64_t v122 = a1;
  uint64_t v38 = sub_20A8C2EC0();
  uint64_t v127 = a2;
  uint64_t v39 = sub_20A8C3EC0();
  if (*(void *)(v38 + 16) && (unint64_t v41 = sub_20A4D1B24(v39, v40), (v42 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v28 + 16))(v26, *(void *)(v38 + 56) + *(void *)(v28 + 72) * v41, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v26, 0, 1, v27);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v26, 1, 1, v27);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    sub_20A6DB12C((uint64_t)v26, (uint64_t (*)(void))sub_20A4C77A4);
  }
  else
  {
    unint64_t v114 = v32;
    uint64_t v106 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v106(v37, v26, v27);
    __swift_project_boxed_opaque_existential_1((void *)(v122 + 16), *(void *)(v122 + 40));
    uint64_t v43 = sub_20A8C3E10();
    uint64_t v44 = *(void *)(v43 - 8);
    uint64_t v45 = (uint64_t)v121;
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v121, v125, v43);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v45, 0, 1, v43);
    uint64_t v46 = v113;
    sub_20A61E8FC(v37, v45, v127, v113, 0.02);
    sub_20A6DB12C(v45, (uint64_t (*)(void))sub_20A42C470);
    uint64_t v48 = v123;
    uint64_t v47 = v124;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48))(v46, 1, v124) != 1)
    {
      uint64_t v127 = *(NSObject **)(v48 + 32);
      uint64_t v85 = v108;
      ((void (*)(char *, uint64_t, uint64_t))v127)(v108, v46, v47);
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v118, v85, v47);
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v120, v37, v27);
      uint64_t v122 = sub_20A8C3E00();
      LODWORD(v121) = v86;
      uint64_t v87 = sub_20A8C3D10();
      char v89 = v88;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v85, v47);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v37, v27);
      unint64_t v90 = v126;
      ((void (*)(char *, char *, uint64_t))v127)(v126, v118, v47);
      uint64_t v91 = (int *)type metadata accessor for StockSparklineViewModel(0);
      v106(&v90[v91[8]], v120, v27);
      uint64_t v92 = &v90[v91[5]];
      *(void *)uint64_t v92 = v122;
      v92[8] = v121 & 1;
      uint64_t v93 = &v90[v91[6]];
      *(void *)uint64_t v93 = v87;
      v93[8] = v89 & 1;
      v90[v91[7]] = 0;
      return (*(uint64_t (**)(char *, void, uint64_t, int *))(*((void *)v91 - 1) + 56))(v90, 0, 1, v91);
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v37, v27);
    sub_20A6DB12C(v46, (uint64_t (*)(void))sub_20A6DB10C);
    uint64_t v32 = v114;
  }
  uint64_t v49 = type metadata accessor for StockViewModel();
  sub_20A6DB18C((uint64_t)v119 + *(int *)(v49 + 24), (uint64_t)v11, (uint64_t (*)(void))sub_20A609C6C);
  os_log_type_t v50 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v51 = *((void *)v50 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v51 + 48))(v11, 1, v50) == 1)
  {
    sub_20A6DB12C((uint64_t)v11, (uint64_t (*)(void))sub_20A609C6C);
    uint64_t v53 = v116;
    uint64_t v52 = v117;
  }
  else
  {
    uint64_t v113 = v51;
    uint64_t v54 = &v11[v50[5]];
    uint64_t v55 = *(void *)v54;
    char v56 = v54[8];
    uint64_t v57 = &v11[v50[6]];
    uint64_t v58 = *(void *)v57;
    char v59 = v57[8];
    uint64_t v60 = &v11[v50[8]];
    uint64_t v61 = *(int *)(v110 + 24);
    uint64_t v119 = v50;
    char v62 = v111;
    uint64_t v63 = &v111[v61];
    CGFloat v64 = *(char **)(v28 + 16);
    uint64_t v110 = v28 + 16;
    uint64_t v108 = v64;
    ((void (*)(char *, char *, uint64_t))v64)(&v111[v61], v60, v27);
    *(void *)char v62 = v55;
    v62[8] = v56;
    *((void *)v62 + 2) = v58;
    v62[24] = v59;
    sub_20A6DB12C((uint64_t)v11, type metadata accessor for StockSparklineViewModel);
    uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    CGFloat v66 = v109;
    v65(v109, v63, v27);
    uint64_t v111 = (char *)v65;
    v65(v32, v66, v27);
    __swift_project_boxed_opaque_existential_1((void *)(v122 + 16), *(void *)(v122 + 40));
    uint64_t v67 = sub_20A8C3E10();
    uint64_t v68 = *(void *)(v67 - 8);
    uint64_t v69 = v32;
    uint64_t v70 = (uint64_t)v121;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v121, v125, v67);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v68 + 56))(v70, 0, 1, v67);
    uint64_t v71 = v112;
    unint64_t v114 = v69;
    sub_20A61E8FC(v69, v70, v127, v112, 0.02);
    sub_20A6DB12C(v70, (uint64_t (*)(void))sub_20A42C470);
    uint64_t v73 = v123;
    uint64_t v72 = v124;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48))(v71, 1, v124) != 1)
    {
      uint64_t v127 = (v28 + 32);
      uint64_t v94 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 32);
      uint64_t v95 = v107;
      v94(v107, v71, v72);
      uint64_t v96 = v118;
      (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v118, v95, v72);
      uint64_t v97 = v114;
      ((void (*)(char *, char *, uint64_t))v108)(v120, v114, v27);
      uint64_t v122 = sub_20A8C3E00();
      LODWORD(v121) = v98;
      uint64_t v99 = sub_20A8C3D10();
      LODWORD(v125) = v100;
      (*(void (**)(char *, uint64_t))(v73 + 8))(v95, v72);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v97, v27);
      uint64_t v101 = v126;
      v94(v126, (uint64_t)v96, v72);
      uint64_t v102 = v119;
      ((void (*)(char *, char *, uint64_t))v111)(&v101[v119[8]], v120, v27);
      char v103 = &v101[v102[5]];
      *(void *)char v103 = v122;
      v103[8] = v121 & 1;
      uint64_t v104 = &v101[v102[6]];
      *(void *)uint64_t v104 = v99;
      v104[8] = v125 & 1;
      v101[v102[7]] = 0;
      return (*(uint64_t (**)(char *, void, uint64_t, int *))(v113 + 56))(v101, 0, 1, v102);
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v114, v27);
    sub_20A6DB12C(v71, (uint64_t (*)(void))sub_20A6DB10C);
    uint64_t v53 = v116;
    uint64_t v52 = v117;
    os_log_type_t v50 = v119;
    uint64_t v51 = v113;
  }
  uint64_t v74 = v115;
  if (qword_26AC675A8 != -1) {
    swift_once();
  }
  uint64_t v75 = sub_20A8C7DF0();
  __swift_project_value_buffer(v75, (uint64_t)qword_26AC9E888);
  (*(void (**)(char *, NSObject *, uint64_t))(v74 + 16))(v53, v127, v52);
  CGRect v76 = sub_20A8C7DD0();
  os_log_type_t v77 = sub_20A8CE9E0();
  if (os_log_type_enabled(v76, v77))
  {
    CGRect v78 = (uint8_t *)swift_slowAlloc();
    uint64_t v79 = swift_slowAlloc();
    uint64_t v119 = v50;
    uint64_t v80 = v79;
    uint64_t v129 = v79;
    uint64_t v113 = v51;
    *(_DWORD *)CGRect v78 = 136446210;
    uint64_t v81 = sub_20A8C3EC0();
    uint64_t v128 = sub_20A687610(v81, v82, &v129);
    uint64_t v51 = v113;
    sub_20A8CF1C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v53, v52);
    _os_log_impl(&dword_20A414000, v76, v77, "StockList: failed to created view model for sparkline %{public}s", v78, 0xCu);
    swift_arrayDestroy();
    uint64_t v83 = v80;
    os_log_type_t v50 = v119;
    MEMORY[0x210528850](v83, -1, -1);
    MEMORY[0x210528850](v78, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v74 + 8))(v53, v52);
  }

  return (*(uint64_t (**)(char *, uint64_t, uint64_t, int *))(v51 + 56))(v126, 1, 1, v50);
}

uint64_t sub_20A6DA514()
{
  return sub_20A6DA5A4(&qword_26AC7E6C0, (void (*)(uint64_t))type metadata accessor for StockListPriceDataUpdateBlueprintModifier);
}

uint64_t sub_20A6DA55C()
{
  return sub_20A6DA5A4(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
}

uint64_t sub_20A6DA5A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A6DA5EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A6DA640(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A6DA684(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A6DA684(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for StockListSectionDescriptor;
    v8[1] = type metadata accessor for StockListModel(255);
    v8[2] = sub_20A42D40C();
    v8[3] = sub_20A6DA5A4(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_20A6DA744()
{
  if (!qword_26AC7FD80)
  {
    sub_20A8C3F00();
    unint64_t v0 = sub_20A8CF580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FD80);
    }
  }
}

void sub_20A6DA7AC(uint64_t a1, int a2, void *a3)
{
  uint64_t v7 = sub_20A8C3F00();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A69008C();
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (uint64_t *)((char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return;
  }
  LODWORD(v62) = a2;
  uint64_t v58 = v3;
  uint64_t v59 = v16;
  uint64_t v17 = (char *)v15 + *(int *)(v12 + 48);
  unint64_t v57 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = a1 + v57;
  uint64_t v64 = *(void *)(v13 + 72);
  uint64_t v61 = a1;
  swift_bridgeObjectRetain();
  sub_20A6DB18C(v18, (uint64_t)v15, (uint64_t (*)(void))sub_20A69008C);
  uint64_t v60 = v8;
  uint64_t v19 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v21 = v15[1];
  uint64_t v70 = *v15;
  uint64_t v20 = v70;
  uint64_t v71 = v21;
  CGFloat v66 = v19;
  uint64_t v67 = v10;
  uint64_t v63 = v17;
  uint64_t v65 = v7;
  v19((unint64_t)v10, v17, v7);
  uint64_t v22 = (void *)*a3;
  unint64_t v24 = sub_20A4D1B24(v20, v21);
  uint64_t v25 = v22[2];
  BOOL v26 = (v23 & 1) == 0;
  uint64_t v27 = v25 + v26;
  if (__OFADD__(v25, v26)) {
    goto LABEL_23;
  }
  char v28 = v23;
  if (v22[3] >= v27)
  {
    if (v62)
    {
      if (v23) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_20A7A5A90();
      if (v28) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v33 = (void *)*a3;
    *(void *)(*a3 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    uint64_t v34 = (uint64_t *)(v33[6] + 16 * v24);
    *uint64_t v34 = v20;
    v34[1] = v21;
    uint64_t v35 = v33[7];
    uint64_t v62 = *(void *)(v60 + 72);
    uint64_t v36 = v65;
    v66(v35 + v62 * v24, v67, v65);
    uint64_t v37 = v33[2];
    BOOL v38 = __OFADD__(v37, 1);
    uint64_t v39 = v37 + 1;
    if (v38)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v33[2] = v39;
    uint64_t v40 = v59 - 1;
    if (v59 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v41 = v61 + v64 + v57;
    while (1)
    {
      sub_20A6DB18C(v41, (uint64_t)v15, (uint64_t (*)(void))sub_20A69008C);
      uint64_t v43 = v15[1];
      uint64_t v70 = *v15;
      uint64_t v42 = v70;
      uint64_t v71 = v43;
      v66((unint64_t)v67, v63, v36);
      uint64_t v44 = (void *)*a3;
      unint64_t v45 = sub_20A4D1B24(v42, v43);
      uint64_t v47 = v44[2];
      BOOL v48 = (v46 & 1) == 0;
      BOOL v38 = __OFADD__(v47, v48);
      uint64_t v49 = v47 + v48;
      if (v38) {
        break;
      }
      char v50 = v46;
      if (v44[3] < v49)
      {
        sub_20A7A2F14(v49, 1);
        unint64_t v45 = sub_20A4D1B24(v42, v43);
        if ((v50 & 1) != (v51 & 1)) {
          goto LABEL_25;
        }
      }
      if (v50) {
        goto LABEL_10;
      }
      uint64_t v52 = (void *)*a3;
      *(void *)(*a3 + 8 * (v45 >> 6) + 64) |= 1 << v45;
      uint64_t v53 = (uint64_t *)(v52[6] + 16 * v45);
      *uint64_t v53 = v42;
      v53[1] = v43;
      uint64_t v36 = v65;
      v66(v52[7] + v62 * v45, v67, v65);
      uint64_t v54 = v52[2];
      BOOL v38 = __OFADD__(v54, 1);
      uint64_t v55 = v54 + 1;
      if (v38) {
        goto LABEL_24;
      }
      v52[2] = v55;
      v41 += v64;
      if (!--v40) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_20A7A2F14(v27, v62 & 1);
  unint64_t v29 = sub_20A4D1B24(v20, v21);
  if ((v28 & 1) == (v30 & 1))
  {
    unint64_t v24 = v29;
    if ((v28 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v31 = (void *)swift_allocError();
    swift_willThrow();
    id v72 = v31;
    id v32 = v31;
    sub_20A4756FC();
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v67, v65);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_20A8CF7D0();
  __break(1u);
LABEL_26:
  uint64_t v68 = 0;
  unint64_t v69 = 0xE000000000000000;
  sub_20A8CF3C0();
  sub_20A8CE3D0();
  sub_20A8CF4E0();
  sub_20A8CE3D0();
  sub_20A8CF520();
  __break(1u);
}

unint64_t sub_20A6DAD2C(uint64_t a1, uint64_t a2)
{
  sub_20A4D4A5C();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C3F00();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v34 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v31 = (char *)v29 - v12;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v29[1] = v2;
    void v29[2] = v9 + 16;
    id v32 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v33 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    swift_bridgeObjectRetain();
    v29[0] = a1;
    uint64_t v15 = (uint64_t *)(a1 + 40);
    unint64_t v35 = MEMORY[0x263F8EE78];
    uint64_t v30 = v9;
    while (1)
    {
      if (*(void *)(a2 + 16))
      {
        uint64_t v17 = *(v15 - 1);
        uint64_t v16 = *v15;
        swift_bridgeObjectRetain();
        unint64_t v18 = sub_20A4D1B24(v17, v16);
        if (v19)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v7, *(void *)(a2 + 56) + *(void *)(v9 + 72) * v18, v8);
          uint64_t v20 = 0;
        }
        else
        {
          uint64_t v20 = 1;
        }
        (*v14)(v7, v20, 1, v8);
        swift_bridgeObjectRelease();
        if ((*v33)(v7, 1, v8) != 1)
        {
          uint64_t v21 = v31;
          uint64_t v22 = *v32;
          (*v32)(v31, v7, v8);
          v22(v34, v21, v8);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v23 = v35;
          }
          else {
            unint64_t v23 = sub_20A46DD9C(0, *(void *)(v35 + 16) + 1, 1, v35);
          }
          unint64_t v25 = *(void *)(v23 + 16);
          unint64_t v24 = *(void *)(v23 + 24);
          if (v25 >= v24 >> 1) {
            unint64_t v23 = sub_20A46DD9C(v24 > 1, v25 + 1, 1, v23);
          }
          *(void *)(v23 + 16) = v25 + 1;
          unint64_t v26 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
          unint64_t v35 = v23;
          unint64_t v27 = v23 + v26 + *(void *)(v30 + 72) * v25;
          uint64_t v9 = v30;
          v22((char *)v27, v34, v8);
          goto LABEL_5;
        }
      }
      else
      {
        (*v14)(v7, 1, 1, v8);
      }
      sub_20A6DB12C((uint64_t)v7, (uint64_t (*)(void))sub_20A4D4A5C);
LABEL_5:
      v15 += 2;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        return v35;
      }
    }
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_20A6DB088@<X0>(NSObject *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A6D86D4(a1, *(char **)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_20A6DB0A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_20A6DB10C(uint64_t a1)
{
}

uint64_t sub_20A6DB12C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A6DB18C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for LandingPagePromiseViewController()
{
  uint64_t result = qword_26763D490;
  if (!qword_26763D490) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A6DB240()
{
  return swift_initClassMetadata2();
}

void *sub_20A6DB280(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = a2;
  uint64_t v3 = sub_20A8C9230();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v24 = sub_20A8C2830();
  uint64_t v4 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C4850();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A42F250();
  uint64_t v12 = v11;
  sub_20A8CB4C0();
  uint64_t v25 = v12;
  uint64_t v26 = v2;
  if (v29)
  {
    sub_20A8C4990();
    if (swift_dynamicCast())
    {
      *uint64_t v10 = 0xD000000000000013;
      v10[1] = 0x800000020A90B050;
      (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F24E38], v7);
      swift_bridgeObjectRetain();
      sub_20A8C4950();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
  else
  {
    sub_20A44349C((uint64_t)v28);
  }
  uint64_t v13 = v24;
  type metadata accessor for LandingPagePromiseViewController();
  sub_20A8C2820();
  sub_20A8C2810();
  uint64_t v14 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v13);
  MEMORY[0x270FA5388](v14);
  uint64_t v15 = v26;
  *(&v23 - 4) = v27;
  *(&v23 - 3) = v15;
  sub_20A8C9220();
  uint64_t v22 = &v23 - 6;
  uint64_t v16 = (void *)sub_20A8C95D0();
  id v17 = objc_msgSend(self, sel_currentDevice);
  id v18 = objc_msgSend(v17, sel_userInterfaceIdiom);

  if (v18 == (id)1)
  {
    uint64_t v19 = 2;
    goto LABEL_9;
  }
  if (!v18)
  {
    uint64_t v19 = 1;
LABEL_9:
    objc_msgSend(v16, sel_setModalPresentationStyle_, v19);
  }
  uint64_t v20 = (void (*)(void *))sub_20A8CB490();
  v20(v16);
  swift_release();
  return v16;
}

void sub_20A6DB668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v29 = a7;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  sub_20A42F250();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CampaignRouteModel();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14 - 8);
  id v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  sub_20A8C7AD0();
  uint64_t v30 = sub_20A8C6670();
  sub_20A44D17C();
  uint64_t v28 = sub_20A8CEBE0();
  sub_20A53ECE8(a5, (uint64_t)v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v29, v10);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v19 = (v16 + *(unsigned __int8 *)(v11 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v20 = (v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  sub_20A53EC84((uint64_t)v17, v21 + v18);
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v21 + v19, v13, v10);
  *(void *)(v21 + v20) = a6;
  uint64_t v22 = (void *)(v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v23 = v32;
  *uint64_t v22 = v31;
  v22[1] = v23;
  type metadata accessor for Router();
  swift_retain();
  swift_retain();
  uint64_t v24 = (void *)v28;
  sub_20A8C6520();
  swift_release();

  swift_release();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v33;
  *(void *)(v25 + 24) = v34;
  swift_retain();
  uint64_t v26 = (void *)sub_20A8C6450();
  sub_20A8C6550();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_20A6DB978(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C7A90();
  uint64_t v5 = *(void *)(v4 - 8);
  v6.n128_f64[0] = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (uint64_t *)((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = a1[1];
  if (v9)
  {
    *uint64_t v8 = *a1;
    v8[1] = v9;
    uint64_t v10 = (unsigned int *)MEMORY[0x263F5A070];
  }
  else
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x263F5A068];
  }
  (*(void (**)(void *, void, uint64_t, __n128))(v5 + 104))(v8, *v10, v4, v6);
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 168), *(void *)(a2 + 192));
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_20A8C7B30();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v8, v4);
  return v11;
}

uint64_t sub_20A6DBAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v91 = a7;
  uint64_t v92 = a6;
  uint64_t v77 = a5;
  uint64_t v76 = a4;
  uint64_t v99 = a3;
  uint64_t v101 = (void *)a2;
  uint64_t v93 = a1;
  uint64_t v90 = sub_20A8C7BE0();
  uint64_t v88 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  char v89 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6DE790(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v87 = (char *)&v72 - v9;
  sub_20A6DE790(0, (unint64_t *)&qword_26AC69BD0, MEMORY[0x263F5A0D8]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v86 = (uint64_t)&v72 - v11;
  uint64_t v81 = sub_20A8C7A80();
  uint64_t v80 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  uint64_t v83 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6DE790(0, &qword_26AC69B40, MEMORY[0x263F7A600]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v72 - v14;
  uint64_t v85 = sub_20A8C79F0();
  uint64_t v84 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  unint64_t v82 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_20A8C7C40();
  uint64_t v94 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v79 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  int v100 = (char *)&v72 - v19;
  uint64_t v20 = sub_20A8C7AC0();
  uint64_t v96 = *(void *)(v20 - 8);
  uint64_t v97 = (char *)v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v95 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_20A8C70D0();
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v73 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = (int *)type metadata accessor for CampaignRouteModel();
  unint64_t v78 = *((void *)v105 - 1);
  uint64_t v23 = *(void *)(v78 + 64);
  MEMORY[0x270FA5388](v105);
  uint64_t v24 = (char *)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_20A8C7AB0();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_20A8C7AD0();
  uint64_t v30 = *(void *)(v29 - 8);
  double v31 = MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v72 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v30 + 16))(v33, v93, v29, v31);
  int v34 = (*(uint64_t (**)(char *, uint64_t))(v30 + 88))(v33, v29);
  if (v34 == *MEMORY[0x263F5A080])
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v33, v29);
    uint64_t v36 = *(char **)v33;
    uint64_t v35 = *((void *)v33 + 1);
    sub_20A6DE470();
    BOOL v38 = &v33[*(int *)(v37 + 48)];
    uint64_t v97 = v28;
    uint64_t v98 = v26;
    uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    int v100 = (char *)v25;
    v39(v28, v38, v25);
    uint64_t v40 = v99;
    uint64_t v95 = v36;
    uint64_t v96 = v35;
    unint64_t v41 = sub_20A6DC868(v99, (uint64_t)v36, v35);
    uint64_t v42 = v101 + 2;
    uint64_t v43 = v101[5];
    uint64_t v101 = (void *)v101[6];
    __swift_project_boxed_opaque_existential_1(v42, v43);
    sub_20A4301D4(0, &qword_26763D4B8);
    sub_20A53ECE8(v40, (uint64_t)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v44 = (*(unsigned __int8 *)(v78 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
    unint64_t v45 = (v23 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v46 = swift_allocObject();
    sub_20A53EC84((uint64_t)v24, v46 + v44);
    *(void *)(v46 + v45) = v41;
    sub_20A8C5B90();
    swift_release();
    if (v103)
    {
      sub_20A42BEBC(&v102, (uint64_t)v104);
      sub_20A6DCCE4(v76, v77);
      sub_20A8C4970();
      swift_release();
      if (*(void *)(v40 + v105[7] + 8))
      {
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v47 = v73;
        sub_20A8C70C0();
        sub_20A6DE748(&qword_26AC69A70, MEMORY[0x263F7A090]);
        uint64_t v48 = v75;
        sub_20A8C4940();
        (*(void (**)(char *, uint64_t))(v74 + 8))(v47, v48);
      }
      else
      {
        swift_retain();
      }
      uint64_t v54 = v100;
      uint64_t v56 = v97;
      uint64_t v55 = v98;
      __swift_project_boxed_opaque_existential_1(v104, v104[3]);
      sub_20A8C7AA0();
      unint64_t v57 = (void *)sub_20A8C5610();
      swift_release();
      swift_bridgeObjectRelease();
      if (MEMORY[0x2105289B0](v99 + v105[11]))
      {
        swift_unknownObjectRetain();
        sub_20A8C9DB0();
        swift_unknownObjectRelease();
      }
      ((void (*)(void *))v92)(v57);
      swift_release();

      (*(void (**)(char *, char *))(v55 + 8))(v56, v54);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v104);
    }
    __break(1u);
LABEL_30:
    uint64_t result = sub_20A8CF750();
    __break(1u);
    return result;
  }
  uint64_t v49 = v99;
  if (v34 != *MEMORY[0x263F5A078]) {
    goto LABEL_30;
  }
  (*(void (**)(char *, uint64_t))(v30 + 96))(v33, v29);
  (*(void (**)(char *, char *, char *))(v96 + 32))(v95, v33, v97);
  uint64_t v50 = *(void *)(v49 + v105[8]);
  char v51 = sub_20A8CE660();
  uint64_t v52 = (void (**)(char *, void, uint64_t))(v94 + 104);
  if (v51)
  {
    if ((sub_20A8CE680() & 1) == 0)
    {
      if (sub_20A8CE670()) {
        uint64_t v59 = (unsigned int *)MEMORY[0x263F5A1C8];
      }
      else {
        uint64_t v59 = (unsigned int *)MEMORY[0x263F5A1C0];
      }
      (*v52)(v100, *v59, v98);
      goto LABEL_19;
    }
    uint64_t v53 = (unsigned int *)MEMORY[0x263F5A178];
  }
  else
  {
    uint64_t v53 = (unsigned int *)MEMORY[0x263F5A1C0];
  }
  (*v52)(v100, *v53, v98);
LABEL_19:
  uint64_t v60 = sub_20A6DCDA0();
  if (v61) {
    uint64_t v62 = v60;
  }
  else {
    uint64_t v62 = 0;
  }
  uint64_t v93 = v62;
  unint64_t v63 = 0xE000000000000000;
  if (v61) {
    unint64_t v63 = v61;
  }
  unint64_t v78 = v63;
  sub_20A74D728(v50, (uint64_t)v15);
  uint64_t v64 = sub_20A8C76E0();
  uint64_t v65 = *(void *)(v64 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v15, 1, v64) == 1)
  {
    sub_20A6DE394((uint64_t)v15, &qword_26AC69B40, MEMORY[0x263F7A600]);
    uint64_t v77 = 0;
  }
  else
  {
    uint64_t v77 = sub_20A8C76B0();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v15, v64);
  }
  uint64_t v66 = v94;
  uint64_t v67 = v98;
  (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v79, v100, v98);
  (*(void (**)(char *, void, uint64_t))(v80 + 104))(v83, *MEMORY[0x263F5A060], v81);
  sub_20A6DE3F0(v49 + v105[10], v86);
  uint64_t v68 = sub_20A8C2530();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v87, 1, 1, v68);
  (*(void (**)(char *, void, uint64_t))(v88 + 104))(v89, *MEMORY[0x263F5A118], v90);
  swift_bridgeObjectRetain();
  uint64_t v69 = (uint64_t)v82;
  sub_20A8C7970();
  uint64_t v70 = v95;
  uint64_t v71 = (void *)sub_20A6DD134(v95, v69, (uint64_t)v101);
  v92();

  (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v69, v85);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v100, v67);
  return (*(uint64_t (**)(char *, char *))(v96 + 8))(v70, v97);
}

unint64_t sub_20A6DC868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C7900();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(a1 + *(int *)(type metadata accessor for CampaignRouteModel() + 32));
  if (sub_20A8CE680())
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    *(void *)uint64_t v9 = a2;
    *((void *)v9 + 1) = a3;
    *((_OWORD *)v9 + 1) = 0u;
    *((_OWORD *)v9 + 2) = 0u;
    *((_OWORD *)v9 + 3) = 0u;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F59FF0], v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v10 = sub_20A46DFEC(0, *(void *)(v10 + 16) + 1, 1, v10);
    }
    unint64_t v12 = *(void *)(v10 + 16);
    unint64_t v11 = *(void *)(v10 + 24);
    if (v12 >= v11 >> 1) {
      unint64_t v10 = sub_20A46DFEC(v11 > 1, v12 + 1, 1, v10);
    }
    *(void *)(v10 + 16) = v12 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v12, v9, v6);
  }
  return v10;
}

uint64_t sub_20A6DCA20(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a3;
  uint64_t v21 = a1;
  sub_20A6DE790(0, (unint64_t *)&qword_26AC69BD0, MEMORY[0x263F5A0D8]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v18 - v5;
  sub_20A6DE790(0, &qword_26763D4C0, MEMORY[0x263F58E58]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = sub_20A8C50A0();
  uint64_t v19 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CampaignRouteModel();
  uint64_t v14 = a2 + *(int *)(v13 + 20);
  uint64_t v15 = sub_20A8C56A0();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v9, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v15);
  sub_20A6DE3F0(a2 + *(int *)(v13 + 40), (uint64_t)v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A8C5090();
  __swift_project_boxed_opaque_existential_1(v21, v21[3]);
  sub_20A8C5A50();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v12, v10);
}

uint64_t sub_20A6DCCE4(uint64_t a1, uint64_t a2)
{
  sub_20A42F250();
  sub_20A8CB4C0();
  if (v6)
  {
    sub_20A8C4990();
    if (swift_dynamicCast()) {
      return v4;
    }
  }
  else
  {
    sub_20A44349C((uint64_t)v5);
  }
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 16), *(void *)(a2 + 40));
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A6DCDA0()
{
  sub_20A6DE790(0, &qword_26763D4D0, MEMORY[0x263F59FA8]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v20 - v2;
  sub_20A6DE790(0, (unint64_t *)&qword_26AC69C70, MEMORY[0x263F5A248]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v20 - v5;
  uint64_t v7 = sub_20A8C7CF0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v21 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_20A4301D4(0, &qword_26AC69B98);
  uint64_t result = sub_20A8C5BB0();
  if (!v22)
  {
    __break(1u);
    return result;
  }
  swift_getObjectType();
  uint64_t v11 = *MEMORY[0x263F59F98];
  uint64_t v12 = sub_20A8C78E0();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v3, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v3, 0, 1, v12);
  sub_20A8C7A00();
  sub_20A6DE394((uint64_t)v3, &qword_26763D4D0, MEMORY[0x263F59FA8]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    swift_unknownObjectRelease();
    sub_20A6DE394((uint64_t)v6, (unint64_t *)&qword_26AC69C70, MEMORY[0x263F5A248]);
    return 0;
  }
  uint64_t v14 = v21;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v21, v6, v7);
  uint64_t v15 = sub_20A8C7CE0();
  if (!v15)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
    swift_unknownObjectRelease();
    return 0;
  }
  uint64_t v16 = (void *)v15;
  uint64_t v17 = sub_20A8CE910();
  uint64_t v19 = v18;
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
  if (v19) {
    return v17;
  }
  else {
    return 0;
  }
}

uint64_t sub_20A6DD134(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v59 = a2;
  uint64_t v60 = a3;
  uint64_t v56 = a1;
  sub_20A6DE790(0, &qword_26763D4C8, MEMORY[0x263F5A040]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v52 = (char *)&v51 - v4;
  sub_20A6DE790(0, &qword_26763D4D0, MEMORY[0x263F59FA8]);
  MEMORY[0x270FA5388](v5 - 8);
  char v51 = (char *)&v51 - v6;
  uint64_t v61 = sub_20A8C2530();
  uint64_t v7 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C2830();
  uint64_t v57 = *(void *)(v10 - 8);
  uint64_t v58 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C79F0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v54 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_20A8C78E0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v53 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_20A8C7CF0();
  uint64_t v62 = *(void *)(v19 - 8);
  uint64_t v63 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v64 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_20A8C7AC0();
  uint64_t v22 = *(void *)(v21 - 8);
  double v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t, double))(v22 + 16))(v25, v56, v21, v23);
  int v26 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v25, v21);
  if (v26 == *MEMORY[0x263F5A090])
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v25, v21);
    uint64_t v27 = v7;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v25, v61);
    uint64_t v28 = (uint64_t)v51;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v51, 1, 1, v16);
    uint64_t v29 = (uint64_t)v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v52, v59, v13);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v29, 0, 1, v13);
    __swift_project_boxed_opaque_existential_1((void *)(v60 + 128), *(void *)(v60 + 152));
    sub_20A8C2820();
    sub_20A8C2810();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v12, v58);
    uint64_t v30 = sub_20A8C7C70();
    swift_bridgeObjectRelease();
    sub_20A6DE394(v29, &qword_26763D4C8, MEMORY[0x263F5A040]);
    sub_20A6DE394(v28, &qword_26763D4D0, MEMORY[0x263F59FA8]);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v61);
    return v30;
  }
  uint64_t v55 = v16;
  uint64_t v56 = v12;
  uint64_t v31 = v59;
  uint64_t v32 = v60;
  if (v26 == *MEMORY[0x263F5A088])
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v25, v21);
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v64, v25, v63);
    char v33 = sub_20A8C7CC0();
    uint64_t v61 = v13;
    if (v33)
    {
      uint64_t v34 = v31;
      uint64_t v35 = v14;
      uint64_t v36 = v55;
    }
    else
    {
      char v37 = sub_20A8C7CA0();
      uint64_t v34 = v31;
      uint64_t v35 = v14;
      uint64_t v36 = v55;
      if ((v37 & 1) == 0)
      {
LABEL_17:
        uint64_t v43 = (void *)sub_20A8C7CD0();
        unint64_t v44 = v53;
        (*(void (**)(char *, void, uint64_t))(v17 + 104))(v53, *MEMORY[0x263F59FA0], v36);
        unint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
        uint64_t v46 = v35;
        uint64_t v47 = v54;
        v45(v54, v34, v61);
        uint64_t v48 = *(void *)(v32 + 152);
        uint64_t v60 = *(void *)(v32 + 160);
        __swift_project_boxed_opaque_existential_1((void *)(v32 + 128), v48);
        uint64_t v49 = v56;
        sub_20A8C2820();
        sub_20A8C2810();
        (*(void (**)(char *, uint64_t))(v57 + 8))(v49, v58);
        uint64_t v30 = sub_20A8C7C80();

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v61);
        (*(void (**)(char *, uint64_t))(v17 + 8))(v44, v55);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v63);
        return v30;
      }
      id v38 = objc_msgSend(*(id *)(v32 + 208), sel_possiblyUnfetchedAppConfiguration);
      if (objc_msgSend(v38, sel_respondsToSelector_, sel_paidBundleConfig))
      {
        id v39 = objc_msgSend(v38, sel_paidBundleConfig);
        swift_unknownObjectRelease();
        id v40 = objc_msgSend(v39, sel_offeredBundlePurchaseIDs);

        if (v40)
        {
          uint64_t v41 = sub_20A8CE5E0();

          if (*(void *)(v41 + 16)) {
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
      sub_20A8C7CB0();
      if (v42) {
        swift_bridgeObjectRelease();
      }
      sub_20A8C7990();
    }
    sub_20A8C79B0();
    goto LABEL_17;
  }
  uint64_t result = sub_20A8CF520();
  __break(1u);
  return result;
}

void sub_20A6DDA0C(void *a1, void (*a2)(void *))
{
  uint64_t v4 = sub_20A8C95F0();
  sub_20A6DE748(&qword_26763D4A0, MEMORY[0x263F7D800]);
  uint64_t v5 = (void *)swift_allocError();
  uint64_t v7 = v6;
  v6[3] = sub_20A8C5370();
  v7[4] = sub_20A6DE748(&qword_26763D4A8, MEMORY[0x263F58CC8]);
  __swift_allocate_boxed_opaque_existential_1(v7);
  id v8 = a1;
  sub_20A8C5360();
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v4 - 8) + 104))(v7, *MEMORY[0x263F7D7F8], v4);
  a2(v5);
}

uint64_t sub_20A6DDB68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v17[0] = a7;
  v17[1] = a8;
  uint64_t v10 = sub_20A8C9230();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_allocWithZone(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, v10);
  uint64_t v15 = sub_20A8C95E0();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a4, v10);
  return v15;
}

uint64_t sub_20A6DDCAC()
{
  id v1 = objc_allocWithZone(v0);
  return sub_20A8C9600();
}

id sub_20A6DDCE0(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for LandingPagePromiseViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_20A6DDD2C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LandingPagePromiseViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_20A6DDD64()
{
  return type metadata accessor for LandingPagePromiseViewController();
}

uint64_t sub_20A6DDD6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20A8C8EB0();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  id v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == *MEMORY[0x263F7D5D8])
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x263F7DB00];
LABEL_5:
    uint64_t v11 = *v10;
    uint64_t v12 = sub_20A8CA130();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(a2, v11, v12);
    uint64_t v13 = *MEMORY[0x263F7DAF8];
    uint64_t v14 = sub_20A8CA140();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(a2, v13, v14);
  }
  if (v9 == *MEMORY[0x263F7D5D0])
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x263F7DB08];
    goto LABEL_5;
  }
  uint64_t result = sub_20A8CF520();
  __break(1u);
  return result;
}

uint64_t sub_20A6DDF6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A6DDD6C(a1, a2);
}

void sub_20A6DDF90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_20A6DB668(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

uint64_t sub_20A6DDF9C()
{
  return sub_20A6DB978(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_20A6DDFB8()
{
  uint64_t v1 = type metadata accessor for CampaignRouteModel();
  uint64_t v13 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = (v13 + 16) & ~v13;
  uint64_t v12 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_20A42F250();
  uint64_t v14 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v2 + *(int *)(v1 + 20);
  uint64_t v7 = sub_20A8C56A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v0 + v2 + *(int *)(v1 + 40);
  uint64_t v9 = sub_20A8C7B50();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_unknownObjectWeakDestroy();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + ((v2 + v12 + v5) & ~v5), v14);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A6DE230(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for CampaignRouteModel() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  sub_20A42F250();
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(*(void *)(v8 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  unint64_t v10 = (*(void *)(*(void *)(v8 - 8) + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_20A6DBAC8(a1, a2, v2 + v6, v2 + v9, *(void *)(v2 + v10), *(void (**)(void))(v2 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_20A6DE354()
{
  swift_release();

  return swift_deallocObject();
}

void sub_20A6DE38C(void *a1)
{
  sub_20A6DDA0C(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_20A6DE394(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A6DE790(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A6DE3F0(uint64_t a1, uint64_t a2)
{
  sub_20A6DE790(0, (unint64_t *)&qword_26AC69BD0, MEMORY[0x263F5A0D8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_20A6DE470()
{
  if (!qword_26763D4B0)
  {
    sub_20A8C7AB0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763D4B0);
    }
  }
}

uint64_t sub_20A6DE4DC()
{
  uint64_t v1 = type metadata accessor for CampaignRouteModel();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_bridgeObjectRelease();
  unint64_t v3 = v0 + v2 + *(int *)(v1 + 20);
  uint64_t v4 = sub_20A8C56A0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v5 = v0 + v2 + *(int *)(v1 + 40);
  uint64_t v6 = sub_20A8C7B50();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A6DE6AC(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for CampaignRouteModel() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_20A6DCA20(a1, v1 + v4, v5);
}

uint64_t sub_20A6DE748(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A6DE790(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_20A6DE7E4(uint64_t a1, double *a2, char *a3)
{
  uint64_t v4 = v3;
  sub_20A65C824(0, (unint64_t *)&qword_26AC7FC70, MEMORY[0x263F82228], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v9 = (char *)&v35 - v8;
  id v35 = self;
  id v10 = objc_msgSend(v35, sel_secondarySystemBackgroundColor);
  id v36 = a3;
  objc_msgSend(a3, sel_setBackgroundColor_, v10);

  uint64_t v11 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI19CreateWatchlistView_newWatchlistButton];
  uint64_t v12 = (char *)a2 + *(int *)(type metadata accessor for CreateWatchlistViewLayoutAttributes() + 24);
  uint64_t v13 = sub_20A8CF110();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v9, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  sub_20A8CF130();
  objc_msgSend(v11, sel_setFrame_, a2[1], a2[2], a2[3], a2[4]);
  swift_beginAccess();
  uint64_t v15 = __swift_project_boxed_opaque_existential_1((void *)(v4 + 16), *(void *)(v4 + 40));
  uint64_t v17 = *(void *)(*v15 + 40);
  uint64_t v16 = *(void *)(*v15 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v15 + 16), v17);
  uint64_t v18 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v16 + 16) + 96))(v17);
  objc_msgSend(v11, sel_setTintColor_, v18);

  sub_20A65C824(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D3DC0;
  uint64_t v20 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  unint64_t v21 = sub_20A431DD0();
  swift_bridgeObjectRetain();
  id v22 = v20;
  uint64_t v23 = sub_20A8CEE20();
  *(void *)(inited + 64) = v21;
  *(void *)(inited + 40) = v23;
  sub_20A4CF8B0(inited);
  id v24 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v25 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A6DECEC((unint64_t *)&qword_26AC7F9F8, 255, type metadata accessor for Key);
  int v26 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v27 = objc_msgSend(v24, sel_initWithString_attributes_, v25, v26);

  objc_msgSend(v11, sel_setAttributedTitle_forState_, v27, 0);
  uint64_t v28 = (void *)*__swift_project_boxed_opaque_existential_1((void *)(v4 + 16), *(void *)(v4 + 40));
  id v29 = objc_msgSend(v35, sel_secondarySystemBackgroundColor);
  objc_msgSend(v11, sel_setBackgroundColor_, v29);

  uint64_t v30 = v28 + 2;
  uint64_t v32 = v28[5];
  uint64_t v31 = v28[6];
  __swift_project_boxed_opaque_existential_1(v30, v32);
  char v33 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v31 + 16) + 96))(v32);
  objc_msgSend(v11, sel_setTintColor_, v33);

  uint64_t v34 = (void *)sub_20A8CE240();
  objc_msgSend(v36, sel_setAccessibilityLabel_, v34);
}

uint64_t type metadata accessor for CreateWatchlistViewRenderer()
{
  return self;
}

uint64_t sub_20A6DEC94(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_20A6DECEC(&qword_26763D4D8, a2, (void (*)(uint64_t))type metadata accessor for CreateWatchlistViewRenderer);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_20A6DECEC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_20A6DEDE0()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC8StocksUI28StockChartCalloutHandleLayer_knobLayer;
  id v3 = objc_allocWithZone(MEMORY[0x263F15880]);
  uint64_t v4 = v0;
  *(void *)&v0[v2] = objc_msgSend(v3, sel_init);
  *(void *)&v4[OBJC_IVAR____TtC8StocksUI28StockChartCalloutHandleLayer_knobLocation] = 0;

  v19.receiver = v4;
  v19.super_class = ObjectType;
  uint64_t v5 = (char *)objc_msgSendSuper2(&v19, sel_init);
  uint64_t v6 = OBJC_IVAR____TtC8StocksUI28StockChartCalloutHandleLayer_knobLayer;
  uint64_t v7 = *(void **)&v5[OBJC_IVAR____TtC8StocksUI28StockChartCalloutHandleLayer_knobLayer];
  uint64_t v8 = self;
  unint64_t v9 = v5;
  id v10 = v7;
  id v11 = objc_msgSend(v8, sel_bezierPathWithOvalInRect_, 0.0, 0.0, 18.0, 18.0);
  id v12 = objc_msgSend(v11, sel_CGPath);

  objc_msgSend(v10, sel_setPath_, v12);
  uint64_t v13 = *(void **)&v5[v6];
  objc_msgSend(v13, sel_setBounds_, 0.0, 0.0, 18.0, 18.0);
  sub_20A6DF188();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  *(void *)(inited + 32) = 0x6E6F697469736F70;
  *(void *)(inited + 40) = 0xE800000000000000;
  id v15 = objc_allocWithZone(MEMORY[0x263EFF9D0]);
  id v16 = v13;
  *(void *)(inited + 48) = objc_msgSend(v15, sel_init);
  *(void *)(inited + 56) = 0x756F72676B636162;
  *(void *)(inited + 64) = 0xEF726F6C6F43646ELL;
  *(void *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9D0]), sel_init);
  sub_20A4D09DC(inited);
  sub_20A6DF248();
  uint64_t v17 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_setActions_, v17);

  objc_msgSend(v9, sel_addSublayer_, *(void *)&v5[v6]);
  return v9;
}

uint64_t type metadata accessor for StockChartCalloutHandleLayer()
{
  return self;
}

void sub_20A6DF188()
{
  if (!qword_26AC800D8)
  {
    sub_20A6DF1E0();
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC800D8);
    }
  }
}

void sub_20A6DF1E0()
{
  if (!qword_26AC7F6B0)
  {
    sub_20A6DF248();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC7F6B0);
    }
  }
}

unint64_t sub_20A6DF248()
{
  unint64_t result = qword_26AC7FBD0;
  if (!qword_26AC7FBD0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC7FBD0);
  }
  return result;
}

uint64_t type metadata accessor for SubscriptionFeatureAvailability()
{
  return self;
}

uint64_t sub_20A6DF2C4(uint64_t a1, uint64_t a2)
{
  return sub_20A6DF2F8(a1, a2, MEMORY[0x263F7AD30]);
}

uint64_t sub_20A6DF2E0(uint64_t a1, uint64_t a2)
{
  return sub_20A6DF2F8(a1, a2, MEMORY[0x263F7AD38]);
}

uint64_t sub_20A6DF2F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(*(void *)v3 + 40);
  uint64_t v6 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v5);
  return a3(v5, v6) & 1;
}

void sub_20A6DF34C(void (*a1)(uint64_t, id), uint64_t a2)
{
}

void sub_20A6DF358(void (*a1)(uint64_t, id), uint64_t a2)
{
}

void sub_20A6DF364(void (*a1)(uint64_t, id), uint64_t a2, void *a3)
{
  uint64_t v5 = *(void *)(v3 + *a3);
  uint64_t v6 = v5 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(v5 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return;
    }
    if (v16 >= v10) {
      goto LABEL_21;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v10) {
        goto LABEL_21;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v10) {
          goto LABEL_21;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v13 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_5:
    uint64_t v14 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v13);
    id v15 = *(id *)(*(void *)(v5 + 56) + 8 * v13);
    a1(v14, v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 < v10)
  {
    unint64_t v17 = *(void *)(v6 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        int64_t v11 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          goto LABEL_25;
        }
        if (v11 >= v10) {
          goto LABEL_21;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        ++v18;
        if (v17) {
          goto LABEL_20;
        }
      }
    }
    int64_t v11 = v18;
    goto LABEL_20;
  }
LABEL_21:

  swift_release();
}

uint64_t sub_20A6DF4E4(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v9 = OBJC_IVAR____TtC8StocksUI15QuoteDetailView_scrollView;
  id v10 = objc_allocWithZone(MEMORY[0x263F82B88]);
  int64_t v11 = v4;
  *(void *)&v4[v9] = objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v12 = OBJC_IVAR____TtC8StocksUI15QuoteDetailView_separatorsView;
  *(void *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ShapeView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v13 = OBJC_IVAR____TtC8StocksUI15QuoteDetailView_attributionButtonContainerView;
  *(void *)&v11[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v14 = OBJC_IVAR____TtC8StocksUI15QuoteDetailView_attributionButton;
  type metadata accessor for AttributionButton();
  id v15 = (char *)objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_buttonWithType_, 0);
  id v16 = *(id *)&v15[OBJC_IVAR____TtC8StocksUI17AttributionButton_onTap];
  sub_20A8CB530();

  uint64_t v17 = 0;
  uint64_t v93 = v11;
  *(void *)&v11[v14] = v15;
  int64_t v18 = (void *)MEMORY[0x263F8EE80];
  do
  {
    unsigned __int8 v21 = byte_26BE5F0D0[v17 + 32];
    id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    if (v22)
    {
      id v23 = v22;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v26 = sub_20A4D1C34(v21);
      uint64_t v27 = v18[2];
      BOOL v28 = (v25 & 1) == 0;
      uint64_t v29 = v27 + v28;
      if (__OFADD__(v27, v28))
      {
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
        goto LABEL_88;
      }
      char v30 = v25;
      if (v18[3] < v29)
      {
        sub_20A7A3314(v29, isUniquelyReferenced_nonNull_native);
        unint64_t v31 = sub_20A4D1C34(v21);
        if ((v30 & 1) != (v32 & 1)) {
          goto LABEL_90;
        }
        unint64_t v26 = v31;
        if ((v30 & 1) == 0) {
          goto LABEL_17;
        }
LABEL_2:
        uint64_t v19 = v18[7];
        uint64_t v20 = 8 * v26;

        *(void *)(v19 + v20) = v23;
LABEL_3:
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v25) {
          goto LABEL_2;
        }
      }
      else
      {
        sub_20A7A5D70();
        if (v30) {
          goto LABEL_2;
        }
      }
LABEL_17:
      v18[(v26 >> 6) + 8] |= 1 << v26;
      *(unsigned char *)(v18[6] + v26) = v21;
      *(void *)(v18[7] + 8 * v26) = v23;
      uint64_t v37 = v18[2];
      BOOL v38 = __OFADD__(v37, 1);
      uint64_t v39 = v37 + 1;
      if (v38) {
        goto LABEL_86;
      }
      v18[2] = v39;
      goto LABEL_3;
    }
    unint64_t v33 = sub_20A4D1C34(v21);
    if (v34)
    {
      unint64_t v35 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_20A7A5D70();
      }
      id v36 = *(void **)(v18[7] + 8 * v35);
      sub_20A48BE58(v35, (uint64_t)v18);

      goto LABEL_3;
    }
LABEL_4:
    ++v17;
  }
  while (v17 != 12);
  uint64_t v40 = 0;
  *(void *)&v93[OBJC_IVAR____TtC8StocksUI15QuoteDetailView_nameLabels] = v18;
  uint64_t v41 = (void *)MEMORY[0x263F8EE80];
  do
  {
    unsigned __int8 v44 = byte_26BE5F0D0[v40 + 32];
    id v45 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    if (v45)
    {
      id v46 = v45;
      char v47 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v49 = sub_20A4D1C34(v44);
      uint64_t v50 = v41[2];
      BOOL v51 = (v48 & 1) == 0;
      uint64_t v52 = v50 + v51;
      if (__OFADD__(v50, v51)) {
        goto LABEL_83;
      }
      char v53 = v48;
      if (v41[3] < v52)
      {
        sub_20A7A3314(v52, v47);
        unint64_t v54 = sub_20A4D1C34(v44);
        if ((v53 & 1) != (v55 & 1)) {
          goto LABEL_90;
        }
        unint64_t v49 = v54;
        if ((v53 & 1) == 0) {
          goto LABEL_37;
        }
LABEL_22:
        uint64_t v42 = v41[7];
        uint64_t v43 = 8 * v49;

        *(void *)(v42 + v43) = v46;
LABEL_23:
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
      if (v47)
      {
        if (v48) {
          goto LABEL_22;
        }
      }
      else
      {
        sub_20A7A5D70();
        if (v53) {
          goto LABEL_22;
        }
      }
LABEL_37:
      v41[(v49 >> 6) + 8] |= 1 << v49;
      *(unsigned char *)(v41[6] + v49) = v44;
      *(void *)(v41[7] + 8 * v49) = v46;
      uint64_t v60 = v41[2];
      BOOL v38 = __OFADD__(v60, 1);
      uint64_t v61 = v60 + 1;
      if (v38) {
        goto LABEL_87;
      }
      v41[2] = v61;
      goto LABEL_23;
    }
    unint64_t v56 = sub_20A4D1C34(v44);
    if (v57)
    {
      unint64_t v58 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_20A7A5D70();
      }
      uint64_t v59 = *(void **)(v41[7] + 8 * v58);
      sub_20A48BE58(v58, (uint64_t)v41);

      goto LABEL_23;
    }
LABEL_24:
    ++v40;
  }
  while (v40 != 12);
  *(void *)&v93[OBJC_IVAR____TtC8StocksUI15QuoteDetailView_valueLabels] = v41;

  v94.receiver = v93;
  v94.super_class = ObjectType;
  uint64_t v62 = (char *)objc_msgSendSuper2(&v94, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v63 = OBJC_IVAR____TtC8StocksUI15QuoteDetailView_scrollView;
  uint64_t v64 = *(void **)&v62[OBJC_IVAR____TtC8StocksUI15QuoteDetailView_scrollView];
  uint64_t v65 = v62;
  objc_msgSend(v64, sel_setAlwaysBounceVertical_, 0);
  objc_msgSend(v64, sel_setShowsVerticalScrollIndicator_, 0);
  objc_msgSend(v64, sel_setShowsHorizontalScrollIndicator_, 0);
  objc_msgSend(v64, sel_setDirectionalLockEnabled_, 1);
  objc_msgSend(v65, sel_addSubview_, v64);
  objc_msgSend(v64, sel_addSubview_, *(void *)&v65[OBJC_IVAR____TtC8StocksUI15QuoteDetailView_separatorsView]);
  uint64_t v66 = *(void **)&v65[OBJC_IVAR____TtC8StocksUI15QuoteDetailView_attributionButtonContainerView];
  objc_msgSend(v65, sel_addSubview_, v66);
  objc_msgSend(v66, sel_addSubview_, *(void *)&v65[OBJC_IVAR____TtC8StocksUI15QuoteDetailView_attributionButton]);
  uint64_t v67 = *(void *)&v65[OBJC_IVAR____TtC8StocksUI15QuoteDetailView_nameLabels];
  uint64_t v68 = v67 + 64;
  uint64_t v69 = 1 << *(unsigned char *)(v67 + 32);
  uint64_t v70 = -1;
  if (v69 < 64) {
    uint64_t v70 = ~(-1 << v69);
  }
  unint64_t v71 = v70 & *(void *)(v67 + 64);
  int64_t v72 = (unint64_t)(v69 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v73 = 0;
  while (2)
  {
    if (v71)
    {
      unint64_t v74 = __clz(__rbit64(v71));
      v71 &= v71 - 1;
      unint64_t v75 = v74 | (v73 << 6);
LABEL_45:
      objc_msgSend(v64, sel_addSubview_, *(void *)(*(void *)(v67 + 56) + 8 * v75));
      continue;
    }
    break;
  }
  int64_t v76 = v73 + 1;
  if (__OFADD__(v73, 1)) {
    goto LABEL_84;
  }
  if (v76 < v72)
  {
    unint64_t v77 = *(void *)(v68 + 8 * v76);
    ++v73;
    if (!v77)
    {
      int64_t v73 = v76 + 1;
      if (v76 + 1 >= v72) {
        goto LABEL_61;
      }
      unint64_t v77 = *(void *)(v68 + 8 * v73);
      if (!v77)
      {
        int64_t v73 = v76 + 2;
        if (v76 + 2 >= v72) {
          goto LABEL_61;
        }
        unint64_t v77 = *(void *)(v68 + 8 * v73);
        if (!v77)
        {
          int64_t v78 = v76 + 3;
          if (v78 >= v72) {
            goto LABEL_61;
          }
          unint64_t v77 = *(void *)(v68 + 8 * v78);
          if (!v77)
          {
            while (1)
            {
              int64_t v73 = v78 + 1;
              if (__OFADD__(v78, 1)) {
                break;
              }
              if (v73 >= v72) {
                goto LABEL_61;
              }
              unint64_t v77 = *(void *)(v68 + 8 * v73);
              ++v78;
              if (v77) {
                goto LABEL_60;
              }
            }
LABEL_88:
            __break(1u);
            goto LABEL_89;
          }
          int64_t v73 = v78;
        }
      }
    }
LABEL_60:
    unint64_t v71 = (v77 - 1) & v77;
    unint64_t v75 = __clz(__rbit64(v77)) + (v73 << 6);
    goto LABEL_45;
  }
LABEL_61:
  swift_release();
  uint64_t v79 = *(void *)&v65[OBJC_IVAR____TtC8StocksUI15QuoteDetailView_valueLabels];
  uint64_t v80 = v79 + 64;
  uint64_t v81 = 1 << *(unsigned char *)(v79 + 32);
  uint64_t v82 = -1;
  if (v81 < 64) {
    uint64_t v82 = ~(-1 << v81);
  }
  unint64_t v83 = v82 & *(void *)(v79 + 64);
  int64_t v84 = (unint64_t)(v81 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v85 = 0;
  while (2)
  {
    if (v83)
    {
      unint64_t v86 = __clz(__rbit64(v83));
      v83 &= v83 - 1;
      unint64_t v87 = v86 | (v85 << 6);
LABEL_65:
      objc_msgSend(*(id *)&v62[v63], sel_addSubview_, *(void *)(*(void *)(v79 + 56) + 8 * v87));
      continue;
    }
    break;
  }
  int64_t v88 = v85 + 1;
  if (__OFADD__(v85, 1)) {
    goto LABEL_85;
  }
  if (v88 >= v84)
  {
LABEL_81:

    swift_release();
    return (uint64_t)v65;
  }
  unint64_t v89 = *(void *)(v80 + 8 * v88);
  ++v85;
  if (v89) {
    goto LABEL_80;
  }
  int64_t v85 = v88 + 1;
  if (v88 + 1 >= v84) {
    goto LABEL_81;
  }
  unint64_t v89 = *(void *)(v80 + 8 * v85);
  if (v89) {
    goto LABEL_80;
  }
  int64_t v85 = v88 + 2;
  if (v88 + 2 >= v84) {
    goto LABEL_81;
  }
  unint64_t v89 = *(void *)(v80 + 8 * v85);
  if (v89)
  {
LABEL_80:
    unint64_t v83 = (v89 - 1) & v89;
    unint64_t v87 = __clz(__rbit64(v89)) + (v85 << 6);
    goto LABEL_65;
  }
  int64_t v90 = v88 + 3;
  if (v90 >= v84) {
    goto LABEL_81;
  }
  unint64_t v89 = *(void *)(v80 + 8 * v90);
  if (v89)
  {
    int64_t v85 = v90;
    goto LABEL_80;
  }
  while (1)
  {
    int64_t v85 = v90 + 1;
    if (__OFADD__(v90, 1)) {
      break;
    }
    if (v85 >= v84) {
      goto LABEL_81;
    }
    unint64_t v89 = *(void *)(v80 + 8 * v85);
    ++v90;
    if (v89) {
      goto LABEL_80;
    }
  }
LABEL_89:
  __break(1u);
LABEL_90:
  uint64_t result = sub_20A8CF7D0();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for QuoteDetailView()
{
  return self;
}

void sub_20A6DFDE8()
{
  sub_20A6DFE74(&qword_26AC6E300);

  JUMPOUT(0x210523C60);
}

uint64_t sub_20A6DFE40()
{
  return sub_20A6DFE74(&qword_26AC6E2F8);
}

uint64_t sub_20A6DFE74(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for QuoteDetailView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A6DFEB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8StocksUI15QuoteDetailView_scrollView;
  *(void *)&v1[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82B88]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = OBJC_IVAR____TtC8StocksUI15QuoteDetailView_separatorsView;
  *(void *)&v1[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ShapeView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v4 = OBJC_IVAR____TtC8StocksUI15QuoteDetailView_attributionButtonContainerView;
  *(void *)&v1[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v5 = OBJC_IVAR____TtC8StocksUI15QuoteDetailView_attributionButton;
  type metadata accessor for AttributionButton();
  uint64_t v6 = (char *)objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_buttonWithType_, 0);
  id v7 = *(id *)&v6[OBJC_IVAR____TtC8StocksUI17AttributionButton_onTap];
  sub_20A8CB530();

  *(void *)&v1[v5] = v6;
  sub_20A8CF520();
  __break(1u);
}

uint64_t *sub_20A6E0010(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20A8C9830();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    *(void *)uint64_t v9 = *(void *)v10;
    v9[8] = v10[8];
  }
  return a1;
}

uint64_t sub_20A6E00F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t sub_20A6E0188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  return a1;
}

uint64_t sub_20A6E0220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t sub_20A6E02B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t sub_20A6E0348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A6E035C);
}

uint64_t sub_20A6E035C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A6E03C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A6E03DC);
}

uint64_t sub_20A6E03DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StockChartViewLayoutOptions()
{
  uint64_t result = qword_26AC77A88;
  if (!qword_26AC77A88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A6E0498()
{
  uint64_t result = sub_20A8C9830();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL static AppEvent.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AppEvent.hash(into:)()
{
  return sub_20A8CF890();
}

uint64_t AppEvent.hashValue.getter()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A6E05C8()
{
  sub_20A63A224();
  swift_allocObject();
  uint64_t result = sub_20A8C5AF0();
  qword_26AC69358 = result;
  return result;
}

uint64_t _s12AppAnalytics7TrackerC8StocksUIE15appEventManager13TeaFoundation0gH0CyAD0aG0OGvg_0()
{
  if (qword_26AC69360 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_20A6E066C()
{
  unint64_t result = qword_26AC7F348;
  if (!qword_26AC7F348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7F348);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AppEvent(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A6E078CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppEvent()
{
  return &type metadata for AppEvent;
}

uint64_t type metadata accessor for VideoAdTracker()
{
  return self;
}

uint64_t sub_20A6E07E8(uint64_t a1, uint64_t a2)
{
  uint64_t v38 = a1;
  uint64_t v3 = sub_20A8C6C10();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C6920();
  uint64_t v34 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6E1C34(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v13 = sub_20A8C2530();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8CC0E0();
  int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  uint64_t v36 = v4;
  uint64_t v37 = v3;
  if (v17 == 1)
  {
    sub_20A596854((uint64_t)v12);
LABEL_9:
    sub_20A8CC0B0();
    sub_20A8C6C00();
    sub_20A6E1C34(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
    uint64_t v28 = sub_20A8C4620();
    uint64_t v29 = *(void *)(v28 - 8);
    unint64_t v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_20A8D3DC0;
    (*(void (**)(unint64_t, void, uint64_t))(v29 + 104))(v31 + v30, *MEMORY[0x263F24D48], v28);
    sub_20A6E1DC8(&qword_26AC699C0, MEMORY[0x263F79D58]);
    uint64_t v32 = v37;
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    sub_20A8C7300();
    sub_20A6E1DC8(&qword_26763D538, MEMORY[0x263F7A280]);
    memset(v39, 0, sizeof(v39));
    sub_20A8C45D0();
    sub_20A44349C((uint64_t)v39);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v6, v32);
  }
  uint64_t v33 = v7;
  uint64_t v35 = a2;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6C660]), sel_init);
  uint64_t v19 = (void *)sub_20A8C24D0();
  id v20 = objc_msgSend(v18, sel_identifierForURL_, v19);

  if (!v20)
  {
LABEL_8:
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    goto LABEL_9;
  }
  sub_20A8CE280();

  uint64_t result = sub_20A8CC0C0();
  if ((~*(void *)&v22 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v22 <= -2147483650.0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v22 < 2147483650.0)
  {
    sub_20A8C6910();
    sub_20A6E1C34(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
    uint64_t v23 = sub_20A8C4620();
    uint64_t v24 = *(void *)(v23 - 8);
    unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_20A8D3DC0;
    (*(void (**)(unint64_t, void, uint64_t))(v24 + 104))(v26 + v25, *MEMORY[0x263F24D48], v23);
    sub_20A6E1DC8(&qword_26763D528, MEMORY[0x263F79B10]);
    uint64_t v27 = v33;
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v27);
    goto LABEL_8;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_20A6E0EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v69 = a1;
  uint64_t v3 = sub_20A8C6C10();
  uint64_t v67 = *(void *)(v3 - 8);
  uint64_t v68 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v66 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C6920();
  uint64_t v58 = *(void *)(v5 - 8);
  uint64_t v59 = v5;
  MEMORY[0x270FA5388](v5);
  char v57 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6E1C34(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v56 - v8;
  uint64_t v10 = sub_20A8C2530();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v65 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C6E60();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v61 = v13;
  uint64_t v62 = v14;
  MEMORY[0x270FA5388](v13);
  id v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8CC090();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  id v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v56 - v22;
  uint64_t v24 = sub_20A8C6D80();
  uint64_t v63 = *(void *)(v24 - 8);
  uint64_t v64 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)&uint64_t result = COERCE_DOUBLE(sub_20A8CC0D0());
  if ((v28 & 1) == 0)
  {
    uint64_t v60 = a2;
    double v29 = *(double *)&result * 1000.0;
    if ((~COERCE__INT64(*(double *)&result * 1000.0) & 0x7FF0000000000000) != 0)
    {
      if (v29 > -9.22337204e18)
      {
        if (v29 < 9.22337204e18)
        {
          sub_20A8CC0A0();
          (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v20, v23, v17);
          int v30 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v20, v17);
          if (v30 == *MEMORY[0x263F588B0])
          {
            (*(void (**)(char *, void, uint64_t))(v62 + 104))(v16, *MEMORY[0x263F79F08], v61);
LABEL_17:
            (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
            sub_20A8C6D70();
            sub_20A6E1C34(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
            uint64_t v34 = sub_20A8C4620();
            uint64_t v35 = *(void *)(v34 - 8);
            unint64_t v36 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
            uint64_t v37 = swift_allocObject();
            *(_OWORD *)(v37 + 16) = xmmword_20A8D3DC0;
            (*(void (**)(unint64_t, void, uint64_t))(v35 + 104))(v37 + v36, *MEMORY[0x263F24D48], v34);
            sub_20A6E1DC8(&qword_26763D530, MEMORY[0x263F79E38]);
            uint64_t v38 = v64;
            sub_20A8C45B0();
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v63 + 8))(v26, v38);
            goto LABEL_18;
          }
          if (v30 == *MEMORY[0x263F58888])
          {
            uint64_t v31 = (unsigned int *)MEMORY[0x263F79EE0];
          }
          else if (v30 == *MEMORY[0x263F58890])
          {
            uint64_t v31 = (unsigned int *)MEMORY[0x263F79EE8];
          }
          else if (v30 == *MEMORY[0x263F588A0])
          {
            uint64_t v31 = (unsigned int *)MEMORY[0x263F79EF8];
          }
          else
          {
            if (v30 != *MEMORY[0x263F58898])
            {
              uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 104);
              if (v30 != *MEMORY[0x263F588A8])
              {
                v33(v16, *MEMORY[0x263F79F08], v61);
                (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
                goto LABEL_17;
              }
              uint64_t v32 = *MEMORY[0x263F79F00];
              goto LABEL_16;
            }
            uint64_t v31 = (unsigned int *)MEMORY[0x263F79EF0];
          }
          uint64_t v32 = *v31;
          uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 104);
LABEL_16:
          v33(v16, v32, v61);
          goto LABEL_17;
        }
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_32;
  }
LABEL_18:
  sub_20A8CC0E0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_20A596854((uint64_t)v9);
LABEL_26:
    sub_20A8CC0B0();
    uint64_t v50 = v66;
    sub_20A8C6C00();
    sub_20A6E1C34(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
    uint64_t v51 = sub_20A8C4620();
    uint64_t v52 = *(void *)(v51 - 8);
    unint64_t v53 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_20A8D3DC0;
    (*(void (**)(unint64_t, void, uint64_t))(v52 + 104))(v54 + v53, *MEMORY[0x263F24D48], v51);
    sub_20A6E1DC8(&qword_26AC699C0, MEMORY[0x263F79D58]);
    uint64_t v55 = v68;
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    sub_20A8C6E50();
    sub_20A6E1DC8(&qword_26763D520, MEMORY[0x263F79ED8]);
    memset(v70, 0, 32);
    sub_20A8C45D0();
    sub_20A44349C((uint64_t)v70);
    *(double *)&uint64_t result = COERCE_DOUBLE((*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v50, v55));
    return result;
  }
  uint64_t v39 = v65;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v65, v9, v10);
  id v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6C660]), sel_init);
  uint64_t v41 = (void *)sub_20A8C24D0();
  id v42 = objc_msgSend(v40, sel_identifierForURL_, v41);

  if (!v42)
  {
LABEL_25:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v39, v10);
    goto LABEL_26;
  }
  sub_20A8CE280();

  *(double *)&uint64_t result = COERCE_DOUBLE(sub_20A8CC0C0());
  if ((~*(void *)&v43 & 0x7FF0000000000000) == 0) {
    goto LABEL_33;
  }
  if (v43 <= -2147483650.0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v43 < 2147483650.0)
  {
    unsigned __int8 v44 = v57;
    sub_20A8C6910();
    sub_20A6E1C34(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
    uint64_t v45 = sub_20A8C4620();
    uint64_t v46 = *(void *)(v45 - 8);
    unint64_t v47 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_20A8D3DC0;
    (*(void (**)(unint64_t, void, uint64_t))(v46 + 104))(v48 + v47, *MEMORY[0x263F24D48], v45);
    sub_20A6E1DC8(&qword_26763D528, MEMORY[0x263F79B10]);
    uint64_t v49 = v59;
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v44, v49);
    goto LABEL_25;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_20A6E1A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A6E1AB4(a1, a2, a3, (uint64_t)&unk_26BE6BAD8, (uint64_t)sub_20A6E1D2C);
}

uint64_t sub_20A6E1A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A6E1AB4(a1, a2, a3, (uint64_t)&unk_26BE6BAB0, (uint64_t)sub_20A6E1C1C);
}

uint64_t sub_20A6E1AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[1] = a5;
  uint64_t v7 = sub_20A8CC0F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v5 + 24), *(void *)(*(void *)v5 + 48));
  uint64_t result = sub_20A8C7410();
  if (result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
    unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v12 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12 + v11, (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    sub_20A8C48E0();
    return swift_release();
  }
  return result;
}

uint64_t sub_20A6E1C1C(uint64_t a1)
{
  return sub_20A6E1D44(a1, sub_20A6E0EA4);
}

void sub_20A6E1C34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t objectdestroyTm_9()
{
  uint64_t v1 = sub_20A8CC0F0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_20A6E1D2C(uint64_t a1)
{
  return sub_20A6E1D44(a1, sub_20A6E07E8);
}

uint64_t sub_20A6E1D44(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(sub_20A8CC0F0() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_20A6E1DC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6E1E10(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v3 = sub_20A8C2800();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C76A0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_20A8C7690();
  uint64_t v20 = *(void *)(v18 - 8);
  v11.n128_f64[0] = MEMORY[0x270FA5388](v18);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (unsigned int *)MEMORY[0x263F7A5F0];
  if (*(uint64_t *)(a2 + 64) < 0) {
    uint64_t v14 = (unsigned int *)MEMORY[0x263F7A5E8];
  }
  (*(void (**)(char *, void, uint64_t, __n128))(v8 + 104))(v10, *v14, v7, v11);
  sub_20A8C7680();
  sub_20A6E26D8(&qword_26AC69B28, 255, MEMORY[0x263F7A5E0]);
  sub_20A8C45B0();
  sub_20A8C6E40();
  sub_20A8C4EB0();
  sub_20A6E26D8(&qword_26AC69A08, 255, MEMORY[0x263F79EC8]);
  sub_20A8C4570();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  v15(v6, v3);
  sub_20A8C4EA0();
  sub_20A8C4580();
  v15(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v13, v18);
}

uint64_t sub_20A6E2164()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  sub_20A485620(*(void *)(v0 + 64));
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TipInteractor()
{
  return self;
}

uint64_t sub_20A6E21D8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)v2 + 16))
  {
    sub_20A6E26D8(&qword_26763D548, a2, (void (*)(uint64_t))type metadata accessor for TipInteractor);
    swift_retain();
    sub_20A8C42F0();
    return swift_release();
  }
  return result;
}

uint64_t sub_20A6E2274(uint64_t a1)
{
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C2530();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  sub_20A4E9450(a1, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
    return sub_20A596854((uint64_t)v5);
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  __swift_project_boxed_opaque_existential_1((void *)(v10 + 24), *(void *)(v10 + 48));
  sub_20A8C8B60();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_20A6E2404(uint64_t a1)
{
  uint64_t v3 = sub_20A8C4EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  double v6 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = *v1;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3, v6);
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v9 + v8, (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  swift_retain();
  sub_20A8C48E0();
  return swift_release();
}

uint64_t sub_20A6E2550(uint64_t a1, uint64_t a2)
{
  return sub_20A6E26D8(&qword_26763D540, a2, (void (*)(uint64_t))type metadata accessor for TipInteractor);
}

uint64_t sub_20A6E2598()
{
  uint64_t v1 = sub_20A8C4EC0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_20A6E2664(uint64_t a1)
{
  sub_20A8C4EC0();
  uint64_t v3 = *(void *)(v1 + 16);

  return sub_20A6E1E10(a1, v3);
}

uint64_t sub_20A6E26D8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for StockFeedViewerStyler()
{
  return self;
}

uint64_t sub_20A6E2744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 40);
  uint64_t v8 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  void v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  uint64_t v12 = v10(a1, v7, v9);
  double v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A431A50((uint64_t)v15, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

uint64_t sub_20A6E2890@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20A4342F4((uint64_t)a1, (uint64_t)v20);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  if (!v19)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E90);
  uint64_t result = sub_20A8C5BB0();
  if (!v17)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E50);
  uint64_t result = sub_20A8C5BB0();
  if (!v15)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC68EC0);
  uint64_t result = sub_20A8C5BB0();
  if (!v13)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68F00);
  uint64_t result = sub_20A8C5BB0();
  if (!v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC67650);
  uint64_t result = sub_20A8C5BB0();
  if (v9)
  {
    uint64_t v6 = type metadata accessor for MainModule();
    uint64_t v7 = swift_allocObject();
    sub_20A42BEBC(v20, v7 + 16);
    *(void *)(v7 + 56) = v5;
    sub_20A42BEBC(&v18, v7 + 64);
    sub_20A42BEBC(&v16, v7 + 104);
    sub_20A42BEBC(&v14, v7 + 144);
    sub_20A42BEBC(&v12, v7 + 184);
    sub_20A42BEBC(&v10, v7 + 224);
    sub_20A42BEBC(&v8, v7 + 264);
    a2[3] = v6;
    uint64_t result = sub_20A6E350C(&qword_26AC6C8D8, (void (*)(uint64_t))type metadata accessor for MainModule);
    a2[4] = result;
    *a2 = v7;
    return result;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_20A6E2BA8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v4 = v15;
  if (v15)
  {
    uint64_t v5 = type metadata accessor for MainStyler();
    uint64_t v6 = v16;
    uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
    double v8 = MEMORY[0x270FA5388](v7);
    long long v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *, double))(v11 + 16))(v10, v8);
    uint64_t v12 = sub_20A431A50((uint64_t)v10, v5, v4, v6);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_26BE60538;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A6E2D08(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4699B4();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A491334();
    swift_allocObject();
    return sub_20A8C8570();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A6E2D80(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68EA0);
  uint64_t result = sub_20A8C5BB0();
  if (v7)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC6C4F8);
    uint64_t result = sub_20A8C5BB0();
    if (v5)
    {
      type metadata accessor for StocksV2UserActivityDeserializer();
      uint64_t v3 = swift_allocObject();
      sub_20A42BEBC(&v6, v3 + 16);
      sub_20A42BEBC(&v4, v3 + 56);
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A6E2E80(void *a1)
{
  sub_20A4342F4((uint64_t)a1, (uint64_t)v16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C9DA0();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for TickerCardContainerController();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A6E34B0();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E90);
  uint64_t result = sub_20A8C5BB0();
  if (!v15)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5810BC();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC69C40);
  uint64_t result = sub_20A8C5BB0();
  if (!v13)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC69BC0);
  uint64_t result = sub_20A8C5BB0();
  if (!v11)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68F30);
  uint64_t result = sub_20A8C5BB0();
  if (v8)
  {
    type metadata accessor for Router();
    uint64_t v7 = (void *)swift_allocObject();
    sub_20A42BEBC(v16, (uint64_t)(v7 + 2));
    v7[7] = v3;
    v7[8] = v4;
    v7[9] = v5;
    sub_20A42BEBC(&v14, (uint64_t)(v7 + 10));
    v7[15] = v6;
    sub_20A42BEBC(&v12, (uint64_t)(v7 + 16));
    sub_20A42BEBC(&v10, (uint64_t)(v7 + 21));
    v7[26] = v8;
    v7[27] = v9;
    return (uint64_t)v7;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MainAssembly()
{
  return self;
}

uint64_t sub_20A6E3178()
{
  uint64_t v0 = sub_20A8C6410();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC6D490);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC6D498);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A491334();
  sub_20A8C6290();
  swift_release();
  uint64_t v4 = *MEMORY[0x263F7D000];
  uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, v4, v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  sub_20A8C5CC0();
  type metadata accessor for StocksV2UserActivityDeserializer();
  sub_20A8C6290();
  swift_release();
  v5(v3, *MEMORY[0x263F7D010], v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_20A8C5CC0();
  type metadata accessor for Router();
  sub_20A8C6290();
  swift_release();
  v5(v3, v4, v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v6)(v3, v0);
}

void sub_20A6E34B0()
{
  if (!qword_26AC6B1F8)
  {
    sub_20A430280();
    unint64_t v0 = sub_20A8CD390();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6B1F8);
    }
  }
}

uint64_t sub_20A6E350C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for BrandingTitleViewLayoutAttributes()
{
  return &type metadata for BrandingTitleViewLayoutAttributes;
}

uint64_t sub_20A6E3564()
{
  sub_20A6E35FC();

  return sub_20A8CACE0();
}

unint64_t sub_20A6E35A4()
{
  unint64_t result = qword_26AC7B6A8;
  if (!qword_26AC7B6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7B6A8);
  }
  return result;
}

unint64_t sub_20A6E35FC()
{
  unint64_t result = qword_26AC7B6A0;
  if (!qword_26AC7B6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7B6A0);
  }
  return result;
}

uint64_t sub_20A6E3650(uint64_t a1, uint64_t a2)
{
  uint64_t v55 = a2;
  uint64_t v3 = sub_20A8C6890();
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v45 = v3;
  MEMORY[0x270FA5388](v3);
  double v43 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C6CB0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v51 = v5;
  uint64_t v52 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v50 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C6C30();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  uint64_t v49 = v9;
  MEMORY[0x270FA5388](v8);
  unint64_t v47 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8C76F0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  long long v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_20A8C76E0();
  uint64_t v16 = *(void *)(v15 - 8);
  double v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v12 + 104))(v14, *MEMORY[0x263F7A608], v11, v17);
  sub_20A8C76C0();
  sub_20A6E99D8(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v58 = v20;
  uint64_t v21 = sub_20A8C4620();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void *)(v22 + 72);
  uint64_t v24 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v25 = (v24 + 32) & ~v24;
  uint64_t v54 = v25;
  uint64_t v56 = v24 | 7;
  uint64_t v57 = v25 + v23;
  uint64_t v26 = swift_allocObject();
  long long v53 = xmmword_20A8D3DC0;
  *(_OWORD *)(v26 + 16) = xmmword_20A8D3DC0;
  uint64_t v27 = v26 + v25;
  uint64_t v28 = *MEMORY[0x263F24D40];
  uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 104);
  v46(v27, v28, v21);
  sub_20A6E9A44((unint64_t *)&qword_26AC69B30, MEMORY[0x263F7A600]);
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  double v29 = (void *)sub_20A8C5040();
  sub_20A8C5030();
  int v30 = v47;
  sub_20A8C6C20();
  sub_20A6E9A44(&qword_26AC699C8, MEMORY[0x263F79D68]);
  uint64_t v31 = v48;
  sub_20A8C45B0();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v30, v31);
  swift_getObjectType();
  uint64_t v32 = v50;
  sub_20A670898(v50);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v53;
  LODWORD(v47) = v28;
  uint64_t v34 = v28;
  uint64_t v35 = v46;
  uint64_t v48 = v21;
  v46(v33 + v54, v34, v21);
  sub_20A6E9A44((unint64_t *)&unk_26AC699D0, MEMORY[0x263F79DF8]);
  uint64_t v36 = v51;
  uint64_t v49 = a1;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v32, v36);
  id v37 = objc_msgSend(v29, sel_sourceChannel);
  if (!v37) {
    return swift_unknownObjectRelease();
  }
  uint64_t v38 = v37;
  __swift_project_boxed_opaque_existential_1((void *)(v55 + 24), *(void *)(v55 + 48));
  uint64_t v39 = v43;
  sub_20A661B70(v38);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = v53;
  v35(v40 + v54, v47, v48);
  sub_20A6E9A44((unint64_t *)&unk_26AC69930, MEMORY[0x263F79AA0]);
  uint64_t v41 = v45;
  sub_20A8C45B0();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v39, v41);
}

uint64_t static String.endOfArticleFeedIdentifier.getter()
{
  return 0x747241664F646E45;
}

uint64_t sub_20A6E3D80(uint64_t a1)
{
  uint64_t v20 = a1;
  uint64_t v2 = sub_20A8C6820();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v19 = (uint64_t)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8C7720();
  uint64_t v4 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C2830();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_20A8C7710();
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v1 + 16);
  sub_20A8C2820();
  sub_20A8C2810();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F7A650], v17);
  sub_20A6E408C(v19);
  sub_20A8C7700();
  sub_20A6E9A44((unint64_t *)&unk_26AC69B50, MEMORY[0x263F7A640]);
  uint64_t v13 = v16;
  sub_20A8C4940();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v13);
  return sub_20A8C48D0();
}

uint64_t sub_20A6E408C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_20A8C4610();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8CABF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8CAA90();
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == *MEMORY[0x263F7DE08])
  {
    uint64_t v11 = *MEMORY[0x263F79A58];
    uint64_t v12 = sub_20A8C6820();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(a1, v11, v12);
  }
  else if (v10 == *MEMORY[0x263F7DE18] || v10 == *MEMORY[0x263F7DE20] || v10 == *MEMORY[0x263F7DE10])
  {
    sub_20A8C4910();
    sub_20A6E99D8(0, &qword_26AC7FED8, MEMORY[0x263F24E48], MEMORY[0x263F8E0F8]);
    uint64_t v16 = *(void *)(sub_20A8C4850() - 8);
    unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_20A8D3DC0;
    uint64_t v19 = (void *)(v18 + v17);
    void *v19 = 0x656C6369747261;
    v19[1] = 0xE700000000000000;
    (*(void (**)(void))(v16 + 104))();
    char v20 = sub_20A8C4600();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v21 = sub_20A8C6820();
    if (v20) {
      uint64_t v22 = (unsigned int *)MEMORY[0x263F79A30];
    }
    else {
      uint64_t v22 = (unsigned int *)MEMORY[0x263F79A28];
    }
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v21 - 8) + 104))(a1, *v22, v21);
  }
  else
  {
    uint64_t result = sub_20A8CF520();
    __break(1u);
  }
  return result;
}

uint64_t sub_20A6E4448(char *a1)
{
  sub_20A6E9224();
  uint64_t v58 = *((void *)v2 - 1);
  uint64_t v59 = v2;
  uint64_t v3 = *(char **)(v58 + 64);
  MEMORY[0x270FA5388](v2);
  uint64_t v57 = (char *)&v54 - ((unint64_t)(v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v60 = (char *)&v54 - v5;
  sub_20A6E8F6C(0, &qword_26763D590, MEMORY[0x263F7D640]);
  uint64_t v7 = v6;
  uint64_t v62 = *(void *)(v6 - 8);
  uint64_t v61 = *(void *)(v62 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v69 = (char *)&v54 - v8;
  sub_20A6E930C();
  uint64_t v68 = v9;
  uint64_t v64 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v64 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v65 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v66 = (char *)&v54 - v12;
  uint64_t v13 = sub_20A8C4E60();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6E8DE8();
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = v7;
  sub_20A8C9100();
  sub_20A8C8330();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  int v22 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v16, v13);
  if (v22 == *MEMORY[0x263F58AF0])
  {
    (*(void (**)(char *, uint64_t))(v14 + 96))(v16, v13);
    uint64_t v23 = v64;
    uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
    uint64_t v24 = v66;
    uint64_t v25 = v68;
    v59(v66, v16, v68);
    uint64_t v26 = v67;
    uint64_t v60 = *(char **)(v67 + 16);
    uint64_t v27 = v62;
    uint64_t v28 = a1;
    uint64_t v29 = v63;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v69, v28, v63);
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v65, v24, v25);
    unint64_t v30 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    unint64_t v31 = (v61 + *(unsigned __int8 *)(v23 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v32 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v32 + v30, v69, v29);
    v59((char *)(v32 + v31), v65, v25);
    *(void *)(v32 + ((v10 + v31 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    swift_retain();
    sub_20A8C48E0();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v66, v25);
  }
  else
  {
    uint64_t v65 = v3;
    uint64_t v66 = a1;
    uint64_t v34 = v59;
    uint64_t v35 = v60;
    uint64_t v36 = v58;
    uint64_t v37 = v67;
    uint64_t v38 = v68;
    if (v22 == *MEMORY[0x263F58AF8])
    {
      (*(void (**)(char *, uint64_t))(v14 + 96))(v16, v13);
      sub_20A6E93F4();
      uint64_t v56 = &v16[*(int *)(v39 + 48)];
      uint64_t v40 = v35;
      uint64_t v55 = *(void (**)(char *, char *, void))(v36 + 32);
      v55(v35, v16, v34);
      uint64_t v41 = v37;
      __swift_project_boxed_opaque_existential_1((void *)(v37 + 72), *(void *)(v37 + 96));
      id v42 = v34;
      char v43 = sub_20A8C7410();
      uint64_t v44 = v64;
      if (v43)
      {
        uint64_t v67 = *(void *)(v41 + 16);
        uint64_t v45 = v40;
        uint64_t v46 = v62;
        uint64_t v47 = v36;
        uint64_t v48 = v63;
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v69, v66, v63);
        uint64_t v49 = v57;
        (*(void (**)(char *, char *, void))(v47 + 16))(v57, v45, v42);
        unint64_t v50 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
        unint64_t v51 = (v61 + *(unsigned __int8 *)(v47 + 80) + v50) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
        uint64_t v52 = v42;
        uint64_t v53 = swift_allocObject();
        (*(void (**)(unint64_t, char *, uint64_t))(v46 + 32))(v53 + v50, v69, v48);
        v55((char *)(v53 + v51), v49, v52);
        sub_20A8C48E0();
        swift_release();
        (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v47 + 8))(v60, v52);
        return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v56, v68);
      }
      else
      {
        (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v36 + 8))(v40, v34);
        return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v56, v38);
      }
    }
    else
    {
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
  }
}

uint64_t sub_20A6E4B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v146 = a4;
  uint64_t v187 = a3;
  uint64_t v204 = a1;
  uint64_t v165 = sub_20A8C2800();
  uint64_t v164 = *(void *)(v165 - 8);
  MEMORY[0x270FA5388](v165);
  uint64_t v163 = (char *)&v139 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_20A8C4E40();
  uint64_t v160 = *(void *)(v161 - 8);
  MEMORY[0x270FA5388](v161);
  uint64_t v157 = (char *)&v139 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_20A8CCFE0();
  uint64_t v158 = *(void *)(v159 - 8);
  MEMORY[0x270FA5388](v159);
  uint64_t v154 = (char *)&v139 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_20A8CCEE0();
  uint64_t v155 = *(void *)(v156 - 8);
  MEMORY[0x270FA5388](v156);
  uint64_t v153 = (char *)&v139 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = sub_20A8C7740();
  uint64_t v162 = *(void *)(v186 - 8);
  MEMORY[0x270FA5388](v186);
  uint64_t v185 = (char *)&v139 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_20A8C7800();
  uint64_t v141 = *(void *)(v142 - 8);
  MEMORY[0x270FA5388](v142);
  uint64_t v140 = (char *)&v139 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_20A8C6890();
  uint64_t v144 = *(void *)(v145 - 8);
  MEMORY[0x270FA5388](v145);
  uint64_t v143 = (char *)&v139 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = sub_20A8C6CB0();
  uint64_t v171 = *(void *)(v172 - 8);
  MEMORY[0x270FA5388](v172);
  uint64_t v170 = (uint64_t)&v139 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8CD0F0();
  uint64_t v169 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v168 = (char *)&v139 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6E8EF8();
  MEMORY[0x270FA5388](v15 - 8);
  unint64_t v175 = (char *)&v139 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v182 = (char *)&v139 - v18;
  sub_20A6E8F6C(0, (unint64_t *)&qword_26763D440, MEMORY[0x263F7D450]);
  uint64_t v188 = v19;
  uint64_t v199 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v152 = (char *)&v139 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v166 = (char *)&v139 - v22;
  sub_20A6E99D8(0, &qword_26AC6A720, MEMORY[0x263F7DD60], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v183 = (char *)&v139 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v181 = (char *)&v139 - v26;
  uint64_t v27 = sub_20A8C77D0();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v197 = v27;
  uint64_t v198 = v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v184 = (uint64_t)&v139 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v167 = (uint64_t)&v139 - v31;
  uint64_t v178 = sub_20A8C7090();
  long long v177 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v178 - 8);
  MEMORY[0x270FA5388](v178);
  uint64_t v176 = (char *)&v139 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6E8DE8();
  uint64_t v202 = v33;
  uint64_t v34 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v174 = (char *)&v139 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  uint64_t v180 = (char *)&v139 - v37;
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = (char *)&v139 - v39;
  sub_20A6E8F6C(0, (unint64_t *)&qword_26763CC00, MEMORY[0x263F7E0A8]);
  uint64_t v42 = v41;
  uint64_t v43 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v173 = (char *)&v139 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v45);
  uint64_t v179 = (char *)&v139 - v46;
  MEMORY[0x270FA5388](v47);
  uint64_t v49 = (char *)&v139 - v48;
  v205 = (void *)sub_20A8C6DE0();
  uint64_t v50 = *(v205 - 1);
  MEMORY[0x270FA5388](v205);
  uint64_t v52 = (char *)&v139 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6E8F6C(0, &qword_26763D590, MEMORY[0x263F7D640]);
  uint64_t v54 = v53;
  sub_20A8C9120();
  uint64_t v200 = v54;
  uint64_t v201 = a2;
  sub_20A8C9100();
  uint64_t v55 = (void *)sub_20A6E9A44(&qword_26763D560, MEMORY[0x263F58B00]);
  uint64_t v189 = v42;
  uint64_t result = sub_20A8CBB50();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v151 = v13;
  sub_20A8C6DD0();
  uint64_t v57 = *(void (**)(char *, uint64_t))(v34 + 8);
  uint64_t v196 = v34 + 8;
  uint64_t v194 = v57;
  v57(v40, v202);
  uint64_t v193 = *(void (**)(char *, uint64_t))(v43 + 8);
  uint64_t v58 = v189;
  uint64_t v195 = v43 + 8;
  v193(v49, v189);
  sub_20A6E99D8(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v60 = v59;
  uint64_t v61 = sub_20A8C4620();
  uint64_t v62 = *(void *)(v61 - 8);
  uint64_t v63 = *(void *)(v62 + 72);
  uint64_t v64 = *(unsigned __int8 *)(v62 + 80);
  id v192 = v55;
  uint64_t v65 = (v64 + 32) & ~v64;
  uint64_t v203 = v60;
  uint64_t v206 = v64 | 7;
  uint64_t v207 = v65 + v63;
  uint64_t v66 = swift_allocObject();
  long long v211 = xmmword_20A8D3DC0;
  *(_OWORD *)(v66 + 16) = xmmword_20A8D3DC0;
  uint64_t v208 = v65;
  uint64_t v67 = v66 + v65;
  uint64_t v68 = *MEMORY[0x263F24D48];
  uint64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 104);
  uint64_t v209 = v62 + 104;
  uint64_t v210 = v61;
  v69(v67, v68, v61);
  uint64_t v70 = v69;
  sub_20A6E9A44(&qword_26AC69A00, MEMORY[0x263F79E78]);
  unint64_t v191 = (unint64_t)"articleFooterContext";
  unint64_t v71 = v205;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void *))(v50 + 8))(v52, v71);
  sub_20A8C9120();
  sub_20A8C9100();
  uint64_t result = sub_20A8CBB60();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  int64_t v72 = v176;
  sub_20A8C7080();
  uint64_t v73 = v68;
  uint64_t v74 = v202;
  v194(v40, v202);
  v193(v49, v58);
  uint64_t v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = v211;
  unsigned int v190 = v73;
  v205 = v70;
  v70(v75 + v208, v73, v210);
  sub_20A6E9A44((unint64_t *)&unk_26AC69A60, MEMORY[0x263F7A070]);
  id v192 = (id)(v191 | 0x8000000000000000);
  uint64_t v76 = v178;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  unint64_t v77 = v72;
  uint64_t v78 = v58;
  (*((void (**)(char *, uint64_t))v177 + 1))(v77, v76);
  uint64_t v79 = v179;
  sub_20A8C9120();
  uint64_t v80 = v180;
  sub_20A8C9100();
  uint64_t v81 = sub_20A8CA990();
  uint64_t v82 = *(void *)(v81 - 8);
  unint64_t v83 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56);
  uint64_t v84 = (uint64_t)v181;
  uint64_t v178 = v81;
  long long v177 = v83;
  uint64_t v176 = (char *)(v82 + 56);
  ((void (*)(char *, uint64_t, uint64_t))v83)(v181, 1, 1);
  sub_20A8C82F0();
  int64_t v85 = v182;
  sub_20A8CBAC0();
  unint64_t v86 = v85;
  swift_bridgeObjectRelease();
  uint64_t v87 = v199;
  int64_t v88 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v199 + 48);
  uint64_t v89 = v188;
  uint64_t v150 = v199 + 48;
  uint64_t v149 = v88;
  uint64_t result = v88(v86, 1, v188);
  if (result == 1)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  int64_t v90 = *(void (**)(char *, char *, uint64_t))(v87 + 32);
  uint64_t v91 = v166;
  uint64_t v148 = v87 + 32;
  uint64_t v147 = v90;
  v90(v166, v86, v89);
  uint64_t v92 = v167;
  sub_20A6C8FD8(v84, v167);
  uint64_t v93 = *(char **)(v87 + 8);
  uint64_t v199 = v87 + 8;
  uint64_t v166 = v93;
  ((void (*)(char *, uint64_t))v93)(v91, v89);
  sub_20A6E9060(v84);
  v194(v80, v74);
  v193(v79, v78);
  uint64_t v94 = swift_allocObject();
  *(_OWORD *)(v94 + 16) = v211;
  uint64_t v95 = v190;
  ((void (*)(uint64_t, void, uint64_t))v205)(v94 + v208, v190, v210);
  uint64_t v96 = sub_20A6E9A44(&qword_26AC67710, MEMORY[0x263F7A700]);
  uint64_t v97 = v197;
  uint64_t v181 = (char *)v96;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  uint64_t v98 = *(char **)(v198 + 8);
  v198 += 8;
  uint64_t v182 = v98;
  ((void (*)(uint64_t, uint64_t))v98)(v92, v97);
  sub_20A6E930C();
  uint64_t v99 = v168;
  uint64_t v180 = v100;
  sub_20A8CCF50();
  uint64_t v101 = (void *)sub_20A8CD0D0();
  (*(void (**)(char *, uint64_t))(v169 + 8))(v99, v151);
  swift_getObjectType();
  uint64_t v102 = v170;
  sub_20A670898(v170);
  uint64_t v103 = swift_allocObject();
  *(_OWORD *)(v103 + 16) = v211;
  uint64_t v104 = v208;
  uint64_t v105 = v95;
  uint64_t v106 = v210;
  ((void (*)(uint64_t, uint64_t, uint64_t))v205)(v103 + v208, v105, v210);
  sub_20A6E9A44((unint64_t *)&unk_26AC699D0, MEMORY[0x263F79DF8]);
  uint64_t v107 = v172;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v102, v107);
  id v192 = v101;
  id v108 = objc_msgSend(v101, sel_sourceChannel);
  if (v108)
  {
    uint64_t v109 = v108;
    uint64_t v110 = v106;
    __swift_project_boxed_opaque_existential_1((void *)(v146 + 24), *(void *)(v146 + 48));
    uint64_t v111 = v143;
    sub_20A661B70(v109);
    uint64_t v112 = swift_allocObject();
    *(_OWORD *)(v112 + 16) = v211;
    ((void (*)(uint64_t, void, uint64_t))v205)(v112 + v104, v190, v110);
    sub_20A6E9A44((unint64_t *)&unk_26AC69930, MEMORY[0x263F79AA0]);
    uint64_t v113 = v145;
    sub_20A8C45B0();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v144 + 8))(v111, v113);
  }
  id v114 = v192;
  unsigned __int8 v115 = objc_msgSend(v192, sel_respondsToSelector_, sel_parentIssue);
  uint64_t v116 = (uint64_t)v183;
  uint64_t v117 = v174;
  uint64_t v118 = v173;
  if (v115)
  {
    id v119 = objc_msgSend(v114, sel_parentIssue);
    if (v119)
    {
      id v120 = v119;
      id v121 = objc_msgSend(v120, sel_identifier);
      sub_20A8CE280();

      uint64_t v122 = v140;
      sub_20A8C77F0();
      uint64_t v123 = swift_allocObject();
      *(_OWORD *)(v123 + 16) = v211;
      ((void (*)(uint64_t, void, uint64_t))v205)(v123 + v208, v190, v210);
      sub_20A6E9A44(&qword_26AC69B70, MEMORY[0x263F7A748]);
      uint64_t v124 = v142;
      sub_20A8C45B0();

      swift_bridgeObjectRelease();
      uint64_t v125 = v124;
      uint64_t v116 = (uint64_t)v183;
      (*(void (**)(char *, uint64_t))(v141 + 8))(v122, v125);
    }
  }
  sub_20A8C9120();
  sub_20A8C9100();
  v177(v116, 1, 1, v178);
  uint64_t v126 = v202;
  sub_20A8C82F0();
  uint64_t v127 = v175;
  uint64_t v128 = v189;
  uint64_t v129 = v118;
  sub_20A8CBAC0();
  swift_bridgeObjectRelease();
  uint64_t v130 = v188;
  uint64_t result = v149(v127, 1, v188);
  if (result != 1)
  {
    uint64_t v131 = v152;
    v147(v152, v127, v130);
    sub_20A6C8FD8(v116, v184);
    ((void (*)(char *, uint64_t))v166)(v131, v130);
    sub_20A6E9060(v116);
    v194(v117, v126);
    v193(v129, v128);
    uint64_t v132 = swift_allocObject();
    *(_OWORD *)(v132 + 16) = v211;
    ((void (*)(uint64_t, void, uint64_t))v205)(v132 + v208, v190, v210);
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    uint64_t v133 = v154;
    sub_20A8CCF60();
    uint64_t v134 = v157;
    sub_20A8CCF70();
    sub_20A8C4E30();
    (*(void (**)(char *, uint64_t))(v160 + 8))(v134, v161);
    uint64_t v135 = v153;
    sub_20A8CCFD0();
    (*(void (**)(char *, uint64_t))(v158 + 8))(v133, v159);
    sub_20A531D14();
    (*(void (**)(char *, uint64_t))(v155 + 8))(v135, v156);
    sub_20A6E9A44(&qword_26AC69B60, MEMORY[0x263F7A660]);
    sub_20A8C45B0();
    sub_20A8C7450();
    uint64_t v136 = v163;
    sub_20A8C9130();
    sub_20A6E9A44(&qword_26AC69B00, MEMORY[0x263F7A3B0]);
    sub_20A8C4570();
    uint64_t v137 = *(void (**)(char *, uint64_t))(v164 + 8);
    uint64_t v138 = v165;
    v137(v136, v165);
    sub_20A8C9110();
    sub_20A8C4580();
    swift_unknownObjectRelease();
    v137(v136, v138);
    (*(void (**)(char *, uint64_t))(v162 + 8))(v185, v186);
    return ((uint64_t (*)(uint64_t, uint64_t))v182)(v184, v197);
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_20A6E64DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v128 = a3;
  uint64_t v139 = a1;
  uint64_t v99 = sub_20A8C2800();
  uint64_t v98 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v97 = (char *)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_20A8C6C10();
  uint64_t v96 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388](v125);
  uint64_t v124 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_20A8C76F0();
  uint64_t v92 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  uint64_t v91 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_20A8C6750();
  uint64_t v95 = *(void *)(v123 - 8);
  MEMORY[0x270FA5388](v123);
  id v121 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_20A8C6840();
  uint64_t v94 = *(void *)(v122 - 8);
  MEMORY[0x270FA5388](v122);
  id v120 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6E8EF8();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v110 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6E8F6C(0, (unint64_t *)&qword_26763D440, MEMORY[0x263F7D450]);
  uint64_t v111 = v11;
  uint64_t v109 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v89 = (char *)&v87 - v12;
  sub_20A6E99D8(0, &qword_26AC6A720, MEMORY[0x263F7DD60], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  id v108 = (char *)&v87 - v14;
  uint64_t v119 = sub_20A8C77D0();
  uint64_t v118 = *(void *)(v119 - 8);
  MEMORY[0x270FA5388](v119);
  int64_t v90 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v117 = (uint64_t)&v87 - v17;
  uint64_t v105 = sub_20A8C6CB0();
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v103 = (uint64_t)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_20A8CC210();
  uint64_t v136 = *(void *)(v127 - 8);
  MEMORY[0x270FA5388](v127);
  uint64_t v126 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_20A8C7090();
  uint64_t v101 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  int v100 = (char *)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6E8DE8();
  uint64_t v140 = v21;
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v107 = (char *)&v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v87 - v25;
  sub_20A6E8F6C(0, (unint64_t *)&qword_26763CC00, MEMORY[0x263F7E0A8]);
  uint64_t v28 = v27;
  uint64_t v142 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v106 = (char *)&v87 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v87 - v31;
  uint64_t v33 = sub_20A8C6DE0();
  uint64_t v34 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v36 = (char *)&v87 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6E8F6C(0, &qword_26763D590, MEMORY[0x263F7D640]);
  uint64_t v38 = v37;
  sub_20A8C9120();
  uint64_t v137 = v38;
  uint64_t v138 = a2;
  sub_20A8C9100();
  uint64_t v39 = sub_20A6E9A44(&qword_26763D560, MEMORY[0x263F58B00]);
  uint64_t result = sub_20A8CBB50();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_20A8C6DD0();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v22 + 8);
  uint64_t v116 = v22 + 8;
  id v114 = v41;
  v41(v26, v140);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v142 + 8);
  v142 += 8;
  uint64_t v113 = v42;
  v42(v32, v28);
  sub_20A6E99D8(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v44 = v43;
  uint64_t v45 = sub_20A8C4620();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = *(void *)(v46 + 72);
  uint64_t v48 = *(unsigned __int8 *)(v46 + 80);
  unint64_t v112 = v39;
  uint64_t v49 = (v48 + 32) & ~v48;
  uint64_t v135 = v44;
  uint64_t v130 = v49 + v47;
  uint64_t v133 = v48 | 7;
  uint64_t v50 = swift_allocObject();
  long long v141 = xmmword_20A8D3DC0;
  *(_OWORD *)(v50 + 16) = xmmword_20A8D3DC0;
  uint64_t v131 = v49;
  uint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 104);
  unsigned int v129 = *MEMORY[0x263F24D48];
  uint64_t v132 = v45;
  uint64_t v134 = v46 + 104;
  unsigned __int8 v115 = v51;
  ((void (*)(uint64_t))v51)(v50 + v49);
  sub_20A6E9A44(&qword_26AC69A00, MEMORY[0x263F79E78]);
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
  sub_20A8C9120();
  sub_20A8C9100();
  uint64_t result = sub_20A8CBB60();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v52 = v100;
  sub_20A8C7080();
  v114(v26, v140);
  v113(v32, v28);
  uint64_t v88 = v28;
  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = v141;
  uint64_t v54 = v131;
  uint64_t v55 = v132;
  uint64_t v56 = v129;
  uint64_t v57 = v115;
  v115(v53 + v131, v129, v132);
  sub_20A6E9A44((unint64_t *)&unk_26AC69A60, MEMORY[0x263F7A070]);
  unint64_t v112 = 0x800000020A90B4D0;
  uint64_t v58 = v102;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v52, v58);
  sub_20A6E9224();
  uint64_t v59 = v126;
  uint64_t v101 = v60;
  sub_20A8CCF50();
  uint64_t v61 = sub_20A8CC200();
  uint64_t v62 = *(char **)(v136 + 8);
  v136 += 8;
  int v100 = v62;
  ((void (*)(char *, uint64_t))v62)(v59, v127);
  swift_getObjectType();
  uint64_t v63 = v103;
  uint64_t v102 = v61;
  sub_20A670898(v103);
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = v141;
  v57(v64 + v54, v56, v55);
  uint64_t v65 = v140;
  sub_20A6E9A44((unint64_t *)&unk_26AC699D0, MEMORY[0x263F79DF8]);
  uint64_t v66 = v105;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v63, v66);
  uint64_t v67 = v106;
  sub_20A8C9120();
  uint64_t v68 = v88;
  uint64_t v69 = v107;
  sub_20A8C9100();
  uint64_t v70 = sub_20A8CA990();
  uint64_t v71 = (uint64_t)v108;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v108, 1, 1, v70);
  sub_20A8C82F0();
  int64_t v72 = v110;
  sub_20A8CBAC0();
  swift_bridgeObjectRelease();
  uint64_t v73 = v109;
  uint64_t v74 = v111;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v109 + 48))(v72, 1, v111);
  if (result != 1)
  {
    uint64_t v75 = v89;
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v89, v72, v74);
    uint64_t v76 = v117;
    sub_20A6C8FD8(v71, v117);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v75, v74);
    sub_20A6E9060(v71);
    v114(v69, v65);
    v113(v67, v68);
    uint64_t v77 = swift_allocObject();
    *(_OWORD *)(v77 + 16) = v141;
    uint64_t v78 = v115;
    v115(v77 + v131, v129, v132);
    sub_20A6E9A44(&qword_26AC67710, MEMORY[0x263F7A700]);
    uint64_t v79 = v76;
    uint64_t v80 = v119;
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v118 + 16))(v90, v79, v80);
    sub_20A8C6830();
    sub_20A6E9A44(qword_26763D1B0, MEMORY[0x263F79A70]);
    sub_20A8C45B0();
    (*(void (**)(char *, void, uint64_t))(v92 + 104))(v91, *MEMORY[0x263F7A608], v93);
    sub_20A8C6740();
    sub_20A6E9A44(&qword_26AC69910, MEMORY[0x263F79970]);
    sub_20A8C45B0();
    uint64_t v81 = v126;
    uint64_t v82 = sub_20A8CCF50();
    MEMORY[0x210524510](v82);
    ((void (*)(char *, uint64_t))v100)(v81, v127);
    sub_20A8C6C00();
    uint64_t v83 = swift_allocObject();
    *(_OWORD *)(v83 + 16) = v141;
    v78(v83 + v131, v129, v132);
    sub_20A6E9A44(&qword_26AC699C0, MEMORY[0x263F79D58]);
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    sub_20A8C7370();
    uint64_t v84 = v97;
    sub_20A8C9130();
    sub_20A6E9A44(&qword_26763D5B8, MEMORY[0x263F7A2D0]);
    sub_20A8C4570();
    int64_t v85 = *(void (**)(char *, uint64_t))(v98 + 8);
    uint64_t v86 = v99;
    v85(v84, v99);
    sub_20A8C9110();
    sub_20A8C4580();
    swift_unknownObjectRelease();
    v85(v84, v86);
    (*(void (**)(char *, uint64_t))(v96 + 8))(v124, v125);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v121, v123);
    (*(void (**)(char *, uint64_t))(v94 + 8))(v120, v122);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v118 + 8))(v117, v119);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20A6E78D0(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a1;
  uint64_t v3 = sub_20A8C2800();
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6E8F6C(0, (unint64_t *)&qword_26763D440, MEMORY[0x263F7D450]);
  uint64_t v31 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v30 - v8;
  sub_20A6E8F6C(0, (unint64_t *)&qword_26763CC00, MEMORY[0x263F7E0A8]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v15 = sub_20A8C77D0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v33 = v15;
  uint64_t v34 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6E99D8(0, &qword_26AC6A720, MEMORY[0x263F7DD60], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v30 - v20;
  sub_20A6E8F6C(0, &qword_26763D568, MEMORY[0x263F7DBD8]);
  uint64_t v32 = v21;
  uint64_t v30 = a2;
  sub_20A8CA2E0();
  sub_20A8CA2C0();
  sub_20A8CA2B0();
  sub_20A6C8FD8((uint64_t)v21, (uint64_t)v18);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v31);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_20A6E99D8(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v22 = sub_20A8C4620();
  uint64_t v23 = *(void *)(v22 - 8);
  unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, void, uint64_t))(v23 + 104))(v25 + v24, *MEMORY[0x263F24D40], v22);
  sub_20A6E9A44(&qword_26AC67710, MEMORY[0x263F7A700]);
  uint64_t v26 = v33;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v26);
  sub_20A8C71E0();
  sub_20A8CA2D0();
  sub_20A6E9A44(&qword_26763D570, MEMORY[0x263F7A180]);
  sub_20A8C4570();
  uint64_t v27 = v37;
  uint64_t v28 = *(void (**)(char *, uint64_t))(v36 + 8);
  v28(v5, v37);
  sub_20A8CA2A0();
  sub_20A8C4580();
  v28(v5, v27);
  return sub_20A6E9060((uint64_t)v32);
}

uint64_t sub_20A6E7E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v50 = a1;
  uint64_t v3 = sub_20A8C7090();
  uint64_t v38 = *(void *)(v3 - 8);
  uint64_t v39 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v37 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C6DE0();
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v41 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6E8EF8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v47 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6E8F6C(0, (unint64_t *)&qword_26763D440, MEMORY[0x263F7D450]);
  uint64_t v46 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v37 - v11;
  sub_20A6E99D8(0, &qword_26AC6A720, MEMORY[0x263F7DD60], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v37 - v14;
  uint64_t v16 = sub_20A8C77D0();
  uint64_t v44 = *(void *)(v16 - 8);
  uint64_t v45 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_20A8C76F0();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_20A8C76E0();
  uint64_t v24 = *(void *)(v23 - 8);
  double v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v20 + 104))(v22, *MEMORY[0x263F7A608], v19, v25);
  sub_20A8C76C0();
  sub_20A6E9A44((unint64_t *)&qword_26AC69B30, MEMORY[0x263F7A600]);
  uint64_t v40 = "articleFooterContext";
  sub_20A8C45B0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
  uint64_t v28 = sub_20A8CA990();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v15, 1, 1, v28);
  sub_20A6E8DE8();
  sub_20A8C82F0();
  sub_20A6E8F6C(0, (unint64_t *)&qword_26763CC00, MEMORY[0x263F7E0A8]);
  uint64_t v29 = v47;
  sub_20A8CBAC0();
  uint64_t v30 = v46;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v29, 1, v30);
  if (result == 1) {
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v29, v30);
  sub_20A6C8FD8((uint64_t)v15, (uint64_t)v18);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v30);
  sub_20A6E9060((uint64_t)v15);
  sub_20A6E9A44(&qword_26AC67710, MEMORY[0x263F7A700]);
  uint64_t v32 = v45;
  sub_20A8C45B0();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v18, v32);
  sub_20A6E9A44(&qword_26763D560, MEMORY[0x263F58B00]);
  uint64_t result = sub_20A8CBB50();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v33 = v41;
  sub_20A8C6DD0();
  sub_20A6E9A44(&qword_26AC69A00, MEMORY[0x263F79E78]);
  uint64_t v34 = v43;
  sub_20A8C45B0();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v33, v34);
  uint64_t result = sub_20A8CBB60();
  if (result >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (result <= 0x7FFFFFFF)
    {
      uint64_t v35 = v37;
      sub_20A8C7080();
      sub_20A6E9A44((unint64_t *)&unk_26AC69A60, MEMORY[0x263F7A070]);
      uint64_t v36 = v39;
      sub_20A8C45B0();
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v35, v36);
    }
    goto LABEL_10;
  }
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20A6E86A0()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  __swift_destroy_boxed_opaque_existential_1(v0 + 72);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EndOfArticleCoordinator()
{
  return self;
}

uint64_t sub_20A6E8714()
{
  swift_retain();
  sub_20A8C48E0();

  return swift_release();
}

uint64_t sub_20A6E8770(uint64_t a1)
{
  return sub_20A6E3D80(a1);
}

uint64_t sub_20A6E8794()
{
  uint64_t v0 = sub_20A8C2800();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C6DC0();
  sub_20A8CA310();
  sub_20A6E9A44(&qword_26763D5C0, MEMORY[0x263F79E68]);
  sub_20A8C4900();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  sub_20A8CA300();
  sub_20A8C4920();
  return ((uint64_t (*)(char *, uint64_t))v4)(v3, v0);
}

uint64_t sub_20A6E8918(char *a1)
{
  return sub_20A6E4448(a1);
}

uint64_t sub_20A6E893C(uint64_t a1)
{
  sub_20A6E8F6C(0, &qword_26763D568, MEMORY[0x263F7DBD8]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  double v5 = MEMORY[0x270FA5388](v2);
  uint64_t v7 = (char *)&v11 - v6;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))((char *)&v11 - v6, a1, v3, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v9 + v8, v7, v3);
  sub_20A8C48E0();
  return swift_release();
}

uint64_t sub_20A6E8A98()
{
  uint64_t v0 = sub_20A8C4850();
  uint64_t v1 = *(void *)(v0 - 8);
  double v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (uint64_t *)((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v4 = 0x656E696C64616568;
  v4[1] = 0xE800000000000000;
  (*(void (**)(void *, void, uint64_t, double))(v1 + 104))(v4, *MEMORY[0x263F24E30], v0, v2);
  sub_20A8C4950();
  return (*(uint64_t (**)(void *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_20A6E8BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v21 = a1;
  sub_20A6E8DE8();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v5);
  sub_20A6E8F6C(0, (unint64_t *)&qword_26763CC00, MEMORY[0x263F7E0A8]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  double v13 = MEMORY[0x270FA5388](v9);
  uint64_t v15 = (char *)&v20 - v14;
  uint64_t v20 = *(void *)(*(void *)v3 + 16);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))((char *)&v20 - v14, a2, v10, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v21, v6);
  unint64_t v16 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v17 = (v12 + *(unsigned __int8 *)(v7 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v18 + v16, v15, v10);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v17, (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  sub_20A8C48E0();
  return swift_release();
}

void sub_20A6E8DE8()
{
  if (!qword_26763D550)
  {
    sub_20A8C4E60();
    sub_20A6E9A44(&qword_26763D450, MEMORY[0x263F58B00]);
    unint64_t v0 = sub_20A8C8350();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763D550);
    }
  }
}

uint64_t sub_20A6E8E7C()
{
  return objectdestroyTm_10((unint64_t *)&qword_26763CC00, MEMORY[0x263F7E0A8], (uint64_t (*)(void))sub_20A6E8DE8);
}

uint64_t sub_20A6E8EB0(uint64_t a1)
{
  return sub_20A6E9644(a1, (unint64_t *)&qword_26763CC00, MEMORY[0x263F7E0A8], (uint64_t (*)(void))sub_20A6E8DE8, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_20A6E7E74);
}

void sub_20A6E8EF8()
{
  if (!qword_26763D558)
  {
    sub_20A6E8F6C(255, (unint64_t *)&qword_26763D440, MEMORY[0x263F7D450]);
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763D558);
    }
  }
}

void sub_20A6E8F6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = sub_20A8C5620();
    v8[1] = sub_20A8C4E60();
    v8[2] = sub_20A6E9A44(&qword_26763CBF8, MEMORY[0x263F58E28]);
    v8[3] = sub_20A6E9A44(&qword_26763D450, MEMORY[0x263F58B00]);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A6E9060(uint64_t a1)
{
  sub_20A6E99D8(0, &qword_26AC6A720, MEMORY[0x263F7DD60], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A6E90EC()
{
  sub_20A6E8F6C(0, &qword_26763D568, MEMORY[0x263F7DBD8]);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_20A6E9198(uint64_t a1)
{
  sub_20A6E8F6C(0, &qword_26763D568, MEMORY[0x263F7DBD8]);
  uint64_t v4 = v1
     + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));

  return sub_20A6E78D0(a1, v4);
}

void sub_20A6E9224()
{
  if (!qword_26763D578)
  {
    sub_20A8CC210();
    sub_20A8C4E40();
    uint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F58930];
    sub_20A6E9A44(&qword_26763D580, MEMORY[0x263F58930]);
    sub_20A6E9A44(&qword_26763D588, v0);
    unint64_t v1 = sub_20A8CCFA0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26763D578);
    }
  }
}

void sub_20A6E930C()
{
  if (!qword_26763D598)
  {
    sub_20A8CD0F0();
    sub_20A8C4E40();
    uint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F59B00];
    sub_20A6E9A44(&qword_26763D5A0, MEMORY[0x263F59B00]);
    sub_20A6E9A44(&qword_26763D5A8, v0);
    unint64_t v1 = sub_20A8CCFA0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26763D598);
    }
  }
}

void sub_20A6E93F4()
{
  if (!qword_26763D5B0)
  {
    sub_20A6E9224();
    sub_20A6E930C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763D5B0);
    }
  }
}

uint64_t sub_20A6E9468()
{
  return objectdestroyTm_10(&qword_26763D590, MEMORY[0x263F7D640], (uint64_t (*)(void))sub_20A6E9224);
}

uint64_t objectdestroyTm_10(unint64_t *a1, uint64_t (*a2)(uint64_t, void *), uint64_t (*a3)(void))
{
  sub_20A6E8F6C(0, a1, a2);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = a3(0);
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (v8 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v3 + v8, v6);
  (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v3 + v12, v10);

  return swift_deallocObject();
}

uint64_t sub_20A6E95FC(uint64_t a1)
{
  return sub_20A6E9644(a1, &qword_26763D590, MEMORY[0x263F7D640], (uint64_t (*)(void))sub_20A6E9224, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_20A6E64DC);
}

uint64_t sub_20A6E9644(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, unint64_t, uint64_t))
{
  sub_20A6E8F6C(0, a2, a3);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v10 = *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t v11 = *(void *)(a4(0) - 8);
  uint64_t v12 = v5 + ((v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));

  return a5(a1, v5 + v9, v12);
}

uint64_t sub_20A6E973C()
{
  sub_20A6E8F6C(0, &qword_26763D590, MEMORY[0x263F7D640]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  sub_20A6E930C();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  unint64_t v9 = (v4 + v5 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v7);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A6E98BC(uint64_t a1)
{
  sub_20A6E8F6C(0, &qword_26763D590, MEMORY[0x263F7D640]);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v5 = *(void *)(*(void *)(v3 - 8) + 64);
  sub_20A6E930C();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (v4 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_20A6E4B54(a1, v1 + v4, v1 + v8, v9);
}

void sub_20A6E99D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A6E9A3C(uint64_t a1)
{
  return sub_20A6E3650(a1, v1);
}

uint64_t sub_20A6E9A44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6E9A8C(uint64_t a1)
{
  uint64_t v26 = *v1;
  uint64_t v4 = v1[5];
  uint64_t v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v4);
  uint64_t v25 = v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 8);
  v28[3] = v4;
  uint64_t v28[4] = v3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
  v6(a1, v4, v5);
  uint64_t v9 = v1[10];
  uint64_t v8 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v9);
  uint64_t v10 = *(void *)(v8 + 8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 8);
  v27[3] = v9;
  v27[4] = v8;
  uint64_t v12 = __swift_allocate_boxed_opaque_existential_1(v27);
  uint64_t v13 = v11(a1, v9, v10);
  double v14 = MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t *, uint64_t, double))(v17 + 16))(v16, boxed_opaque_existential_1, v4, v14);
  double v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v22 + 16))(v21, v12, v9, v19);
  uint64_t v23 = sub_20A58ED18((uint64_t)v16, (uint64_t)v21, v26, v4, v9, v25, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return v23;
}

id sub_20A6E9CE0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F089B8]), sel_init);
  id v6 = objc_allocWithZone(MEMORY[0x263F086A0]);
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithString_, v7);

  objc_msgSend(v5, sel_appendAttributedString_, v8);
  if (a3)
  {
    id v9 = objc_allocWithZone(MEMORY[0x263F086A0]);
    id v10 = a3;
    uint64_t v11 = (void *)sub_20A8CE240();
    id v12 = objc_msgSend(v9, sel_initWithString_, v11);

    objc_msgSend(v5, sel_appendAttributedString_, v12);
    type metadata accessor for IconTextAttachment();
    uint64_t v13 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    objc_msgSend(v13, sel_setImage_, v10);
    double v14 = &v13[OBJC_IVAR____TtC8StocksUI18IconTextAttachment_baselineAdjustment];
    *(void *)double v14 = 0x3FF0000000000000;
    unsigned char v14[8] = 0;
    uint64_t v15 = &v13[OBJC_IVAR____TtC8StocksUI18IconTextAttachment_imageHeightOverride];
    *(void *)uint64_t v15 = 0x402A000000000000;
    v15[8] = 0;
    id v16 = objc_msgSend(self, sel_attributedStringWithAttachment_, v13);
    objc_msgSend(v5, sel_appendAttributedString_, v16);
  }
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  uint64_t v18 = (void **)MEMORY[0x263F81500];
  *(_OWORD *)(inited + 16) = xmmword_20A8D3DC0;
  double v19 = *v18;
  *(void *)(inited + 32) = *v18;
  uint64_t v20 = v3[5];
  uint64_t v21 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v20);
  uint64_t v22 = *(void *)(v21 + 16);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 184);
  id v24 = v19;
  uint64_t v25 = v23(v20, v22);
  *(void *)(inited + 64) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 40) = v25;
  sub_20A4CF8B0(inited);
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v26 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_addAttributes_range_, v26, 0, objc_msgSend(v5, sel_length));

  uint64_t v27 = swift_initStackObject();
  *(_OWORD *)(v27 + 16) = xmmword_20A8D3DC0;
  uint64_t v28 = (void *)*MEMORY[0x263F814F0];
  *(void *)(v27 + 32) = *MEMORY[0x263F814F0];
  uint64_t v29 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  id v30 = v28;
  uint64_t v31 = sub_20A8CEE20();
  *(void *)(v27 + 64) = v29;
  *(void *)(v27 + 40) = v31;
  sub_20A4CF8B0(v27);
  uint64_t v32 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_addAttributes_range_, v32, 0, objc_msgSend(v5, sel_length));

  return v5;
}

uint64_t type metadata accessor for BrandingTitleViewStyler()
{
  return self;
}

uint64_t sub_20A6EA0BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_20A6E9A8C(a1);
  *a2 = result;
  return result;
}

uint64_t sub_20A6EA0E8(uint64_t *a1)
{
  sub_20A5535B8(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (uint64_t *)((char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v5 = (int *)type metadata accessor for StockForYouFeedGroup();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  if (*(void *)(v8 + 16))
  {
    uint64_t v9 = sub_20A8C3F00();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8+ ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80)), v9);
    uint64_t v10 = sub_20A8C3F10();
    uint64_t v11 = &v7[v5[7]];
    uint64_t v12 = sub_20A8CC470();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    *(void *)&v7[v5[5]] = v10;
    v7[v5[6]] = 0;
    uint64_t v13 = sub_20A6A74DC(v8);
    if (v13)
    {
      uint64_t v14 = v13;
      sub_20A63577C();
      id v16 = (void *)((char *)v4 + *(int *)(v15 + 48));
      sub_20A6EAA60((uint64_t)v7, (uint64_t)v4);
      type metadata accessor for ForYouFeedGroup();
      swift_storeEnumTagMultiPayload();
      v16[3] = (uint64_t)&type metadata for YahooStockForYouFeedGroupEmitterCursor;
      *id v16 = v14;
    }
    else
    {
      sub_20A6EAA60((uint64_t)v7, (uint64_t)v4);
      type metadata accessor for ForYouFeedGroup();
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
    sub_20A6EAC88(0, (unint64_t *)&qword_26AC69860, (uint64_t (*)(uint64_t))sub_20A5535B8, MEMORY[0x263F7D028]);
    swift_allocObject();
    uint64_t v17 = sub_20A8C6580();
    sub_20A6EAAC4((uint64_t)v7);
  }
  else
  {
    *uint64_t v4 = 0x6574656C706D6F43;
    v4[1] = 0xE900000000000064;
    swift_storeEnumTagMultiPayload();
    sub_20A6EAC88(0, (unint64_t *)&qword_26AC69860, (uint64_t (*)(uint64_t))sub_20A5535B8, MEMORY[0x263F7D028]);
    swift_allocObject();
    return sub_20A8C6580();
  }
  return v17;
}

uint64_t sub_20A6EA400()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI31StubStockForYouFeedGroupEmitter_config;
  sub_20A460F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_20A6EA4A0()
{
  return type metadata accessor for StubStockForYouFeedGroupEmitter();
}

uint64_t type metadata accessor for StubStockForYouFeedGroupEmitter()
{
  uint64_t result = qword_26763D5D0;
  if (!qword_26763D5D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A6EA4F4()
{
  sub_20A460F28();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_20A6EA584(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6EA5D0()
{
  sub_20A8C6670();
  unint64_t v0 = (void *)sub_20A8C6450();
  sub_20A5535B8(0);
  uint64_t v1 = sub_20A8C6510();
  swift_release();

  return v1;
}

uint64_t sub_20A6EA678@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC8StocksUI31StubStockForYouFeedGroupEmitter_config;
  sub_20A460F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
  type metadata accessor for ForYouFeedGroupConfig();

  return swift_storeEnumTagMultiPayload();
}

unint64_t sub_20A6EA70C()
{
  return 0xD000000000000025;
}

uint64_t sub_20A6EA728@<X0>(uint64_t *a1@<X8>)
{
  sub_20A6EAC88(0, &qword_26AC800E8, (uint64_t (*)(uint64_t))sub_20A4D27BC, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D3DC0;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = 0xD000000000000025;
  *(void *)(inited + 56) = 0x800000020A90B5E0;
  sub_20A4CFBE4(inited);
  sub_20A6EAC88(0, &qword_26763D600, (uint64_t (*)(uint64_t))type metadata accessor for StubStockForYouFeedGroupEmitter, MEMORY[0x263F7CE78]);
  a1[3] = v3;
  a1[4] = sub_20A6EACEC();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_20A8C5EF0();
}

uint64_t sub_20A6EA858()
{
  sub_20A6EA584(&qword_26763D5F0, (void (*)(uint64_t))type metadata accessor for StubStockForYouFeedGroupEmitter);

  return sub_20A8C5EE0();
}

uint64_t sub_20A6EA8C4()
{
  return sub_20A6EA584(&qword_26763D5E0, (void (*)(uint64_t))type metadata accessor for StubStockForYouFeedGroupEmitter);
}

uint64_t sub_20A6EA90C()
{
  return sub_20A6EA584(&qword_26763D5E8, (void (*)(uint64_t))type metadata accessor for StubStockForYouFeedGroupEmitter);
}

uint64_t sub_20A6EA954()
{
  return sub_20A6EA584(&qword_26763D5F0, (void (*)(uint64_t))type metadata accessor for StubStockForYouFeedGroupEmitter);
}

uint64_t sub_20A6EA99C()
{
  return sub_20A6EA584(&qword_26AC74890, (void (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig);
}

uint64_t sub_20A6EA9E4()
{
  return sub_20A6EA584(&qword_26763D5F8, (void (*)(uint64_t))type metadata accessor for StubStockForYouFeedGroupEmitter);
}

uint64_t sub_20A6EAA2C()
{
  return sub_20A8CCAD0();
}

uint64_t sub_20A6EAA60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockForYouFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A6EAAC4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockForYouFeedGroup();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A6EAB20()
{
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_20A8D7FF0;
  sub_20A8C3E80();
  sub_20A8C3E90();
  sub_20A8C3EA0();
  sub_20A8C3ED0();
  sub_20A6EAC88(0, (unint64_t *)&qword_26AC698D8, (uint64_t (*)(uint64_t))sub_20A42F348, MEMORY[0x263F7D028]);
  swift_allocObject();
  return sub_20A8C6580();
}

void sub_20A6EAC88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_20A6EACEC()
{
  unint64_t result = qword_26763D608;
  if (!qword_26763D608)
  {
    sub_20A6EAC88(255, &qword_26763D600, (uint64_t (*)(uint64_t))type metadata accessor for StubStockForYouFeedGroupEmitter, MEMORY[0x263F7CE78]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D608);
  }
  return result;
}

uint64_t sub_20A6EAD74()
{
  sub_20A4E8B40(0, (unint64_t *)&qword_26AC6AB40, MEMORY[0x263F7E060]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v6 - v3;
  sub_20A4E8B40(0, (unint64_t *)&unk_26AC6AB78, MEMORY[0x263F7E068]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F7E058], v1);
  uint64_t result = sub_20A8CB5C0();
  qword_26AC9E9F8 = result;
  return result;
}

uint64_t *sub_20A6EAEA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_20A8CC470();
        uint64_t v8 = *(void *)(v7 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          sub_20A6F1088(0, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        }
        goto LABEL_13;
      case 1u:
        uint64_t v12 = sub_20A8C3F00();
        uint64_t v13 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16);
        v13(a1, a2, v12);
        sub_20A61E760();
        uint64_t v78 = v14;
        uint64_t v15 = *(int *)(v14 + 48);
        id v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        ((void (*)(char *))v13)((char *)a1 + v15);
        uint64_t v79 = (int *)type metadata accessor for StockViewModel();
        uint64_t v18 = v79[5];
        uint64_t v19 = &v16[v18];
        uint64_t v20 = &v17[v18];
        uint64_t v21 = sub_20A8C3E10();
        uint64_t v22 = *(void *)(v21 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
        {
          sub_20A6F1088(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
          memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
        }
        uint64_t v30 = v79[6];
        uint64_t v31 = &v16[v30];
        uint64_t v32 = &v17[v30];
        uint64_t v33 = (int *)type metadata accessor for StockSparklineViewModel(0);
        uint64_t v34 = *((void *)v33 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v34 + 48))(v32, 1, v33))
        {
          sub_20A6F1088(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
          memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          uint64_t v36 = sub_20A8CDCD0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v31, v32, v36);
          uint64_t v37 = v33[5];
          uint64_t v38 = &v31[v37];
          uint64_t v39 = &v32[v37];
          *(void *)uint64_t v38 = *(void *)v39;
          _OWORD v38[8] = v39[8];
          uint64_t v40 = v33[6];
          uint64_t v41 = &v31[v40];
          uint64_t v42 = &v32[v40];
          *(void *)uint64_t v41 = *(void *)v42;
          v41[8] = v42[8];
          v31[v33[7]] = v32[v33[7]];
          uint64_t v43 = v33[8];
          uint64_t v44 = &v31[v43];
          uint64_t v45 = &v32[v43];
          uint64_t v46 = sub_20A8C3D00();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
          (*(void (**)(char *, void, uint64_t, int *))(v34 + 56))(v31, 0, 1, v33);
        }
        uint64_t v47 = v79[7];
        uint64_t v76 = v17;
        uint64_t v77 = v16;
        uint64_t v48 = &v16[v47];
        uint64_t v49 = &v17[v47];
        *(void *)uint64_t v48 = *(void *)v49;
        v48[8] = v49[8];
        *((void *)v48 + 2) = *((void *)v49 + 2);
        unsigned char v48[24] = v49[24];
        *((void *)v48 + 4) = *((void *)v49 + 4);
        v48[40] = v49[40];
        uint64_t v50 = *((void *)v49 + 7);
        *((void *)v48 + 6) = *((void *)v49 + 6);
        *((void *)v48 + 7) = v50;
        uint64_t v51 = *((void *)v49 + 9);
        *((void *)v48 + 8) = *((void *)v49 + 8);
        *((void *)v48 + 9) = v51;
        uint64_t v52 = (int *)type metadata accessor for PriceViewModel();
        uint64_t v53 = v52[9];
        uint64_t v74 = &v49[v53];
        uint64_t v75 = &v48[v53];
        uint64_t v54 = sub_20A8C2EB0();
        uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v55(v75, v74, v54);
        uint64_t v56 = v52[10];
        uint64_t v57 = &v48[v56];
        uint64_t v58 = &v49[v56];
        uint64_t v59 = sub_20A8C4030();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
        uint64_t v60 = v52[11];
        uint64_t v61 = &v48[v60];
        uint64_t v62 = &v49[v60];
        uint64_t v63 = sub_20A8C2990();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
        uint64_t v64 = v79[8];
        uint64_t v65 = &v77[v64];
        uint64_t v66 = &v76[v64];
        uint64_t v67 = sub_20A8C3410();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
        v77[v79[9]] = v76[v79[9]];
        uint64_t v68 = *(int *)(v78 + 64);
        uint64_t v69 = (char *)a1 + v68;
        uint64_t v70 = (char *)a2 + v68;
        uint64_t v71 = sub_20A8CC470();
        uint64_t v72 = *(void *)(v71 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71))
        {
          sub_20A6F1088(0, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
          memcpy(v69, v70, *(void *)(*(void *)(v73 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
        }
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v24 = sub_20A8CC470();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
        uint64_t v25 = *(int *)(type metadata accessor for CuratedForYouFeedGroup() + 20);
        uint64_t v26 = (uint64_t *)((char *)a1 + v25);
        uint64_t v27 = (uint64_t *)((char *)a2 + v25);
        uint64_t v28 = v27[1];
        *uint64_t v26 = *v27;
        v26[1] = v28;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v29 = sub_20A8CC310();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_20A6EB790(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_20A8CC470();
      uint64_t v33 = *(void *)(v3 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(a1, 1, v3);
      if (!result) {
        goto LABEL_3;
      }
      break;
    case 1:
      uint64_t v7 = sub_20A8C3F00();
      uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      v8(a1, v7);
      sub_20A61E760();
      uint64_t v10 = v9;
      uint64_t v11 = a1 + *(int *)(v9 + 48);
      v8(v11, v7);
      uint64_t v12 = (int *)type metadata accessor for StockViewModel();
      uint64_t v13 = v11 + v12[5];
      uint64_t v14 = sub_20A8C3E10();
      uint64_t v15 = *(void *)(v14 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
      }
      uint64_t v16 = v11 + v12[6];
      uint64_t v17 = type metadata accessor for StockSparklineViewModel(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17))
      {
        uint64_t v18 = sub_20A8CDCD0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v16, v18);
        uint64_t v19 = v16 + *(int *)(v17 + 32);
        uint64_t v20 = sub_20A8C3D00();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
      }
      uint64_t v21 = v11 + v12[7];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v22 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v23 = v21 + v22[9];
      uint64_t v24 = sub_20A8C2EB0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
      uint64_t v25 = v21 + v22[10];
      uint64_t v26 = sub_20A8C4030();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
      uint64_t v27 = v21 + v22[11];
      uint64_t v28 = sub_20A8C2990();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
      uint64_t v29 = v11 + v12[8];
      uint64_t v30 = sub_20A8C3410();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
      a1 += *(int *)(v10 + 64);
      uint64_t v3 = sub_20A8CC470();
      uint64_t v33 = *(void *)(v3 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(a1, 1, v3);
      if (!result)
      {
LABEL_3:
        uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8);
        uint64_t v5 = a1;
        uint64_t v6 = v3;
        goto LABEL_14;
      }
      break;
    case 2:
      uint64_t v31 = sub_20A8CC470();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(a1, v31);
      type metadata accessor for CuratedForYouFeedGroup();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3:
      uint64_t v32 = sub_20A8CC310();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8);
      uint64_t v6 = v32;
      uint64_t v5 = a1;
LABEL_14:
      uint64_t result = v4(v5, v6);
      break;
    default:
      return result;
  }
  return result;
}

char *sub_20A6EBCA4(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_20A8CC470();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        sub_20A6F1088(0, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      goto LABEL_17;
    case 1u:
      uint64_t v9 = sub_20A8C3F00();
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      v10(a1, a2, v9);
      sub_20A61E760();
      uint64_t v80 = v11;
      uint64_t v12 = *(int *)(v11 + 48);
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      ((void (*)(char *))v10)(&a1[v12]);
      uint64_t v15 = (int *)type metadata accessor for StockViewModel();
      uint64_t v16 = v15[5];
      uint64_t v17 = &v13[v16];
      uint64_t v18 = &v14[v16];
      uint64_t v19 = sub_20A8C3E10();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v81 = a2;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        sub_20A6F1088(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
        memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      uint64_t v28 = v15[6];
      uint64_t v29 = &v13[v28];
      uint64_t v30 = &v14[v28];
      uint64_t v31 = (int *)type metadata accessor for StockSparklineViewModel(0);
      uint64_t v32 = *((void *)v31 - 1);
      uint64_t v82 = a1;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v32 + 48))(v30, 1, v31))
      {
        sub_20A6F1088(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
        memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        uint64_t v34 = sub_20A8CDCD0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v29, v30, v34);
        uint64_t v35 = v31[5];
        uint64_t v36 = &v29[v35];
        uint64_t v37 = &v30[v35];
        *(void *)uint64_t v36 = *(void *)v37;
        v36[8] = v37[8];
        uint64_t v38 = v31[6];
        uint64_t v39 = &v29[v38];
        uint64_t v40 = &v30[v38];
        *(void *)uint64_t v39 = *(void *)v40;
        v39[8] = v40[8];
        v29[v31[7]] = v30[v31[7]];
        uint64_t v41 = v31[8];
        uint64_t v42 = v15;
        uint64_t v43 = &v29[v41];
        uint64_t v44 = &v30[v41];
        uint64_t v45 = sub_20A8C3D00();
        uint64_t v46 = v43;
        uint64_t v15 = v42;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v46, v44, v45);
        (*(void (**)(char *, void, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
      }
      uint64_t v78 = v15;
      uint64_t v79 = v13;
      uint64_t v47 = v15[7];
      uint64_t v48 = &v13[v47];
      uint64_t v49 = &v14[v47];
      *(void *)uint64_t v48 = *(void *)&v14[v47];
      v48[8] = v14[v47 + 8];
      *((void *)v48 + 2) = *(void *)&v14[v47 + 16];
      unsigned char v48[24] = v14[v47 + 24];
      *((void *)v48 + 4) = *(void *)&v14[v47 + 32];
      v48[40] = v14[v47 + 40];
      uint64_t v50 = *(void *)&v14[v47 + 56];
      *((void *)v48 + 6) = *(void *)&v14[v47 + 48];
      *((void *)v48 + 7) = v50;
      uint64_t v51 = *(void *)&v14[v47 + 72];
      *((void *)v48 + 8) = *(void *)&v14[v47 + 64];
      *((void *)v48 + 9) = v51;
      uint64_t v52 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v53 = v52[9];
      uint64_t v54 = &v48[v53];
      uint64_t v77 = v14;
      uint64_t v55 = &v49[v53];
      uint64_t v56 = sub_20A8C2EB0();
      uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v57(v54, v55, v56);
      uint64_t v58 = v52[10];
      uint64_t v59 = &v48[v58];
      uint64_t v60 = &v49[v58];
      uint64_t v61 = sub_20A8C4030();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
      uint64_t v62 = v52[11];
      uint64_t v63 = &v48[v62];
      uint64_t v64 = &v49[v62];
      uint64_t v65 = sub_20A8C2990();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
      uint64_t v66 = v78[8];
      uint64_t v67 = &v79[v66];
      uint64_t v68 = &v77[v66];
      uint64_t v69 = sub_20A8C3410();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
      v79[v78[9]] = v77[v78[9]];
      uint64_t v70 = *(int *)(v80 + 64);
      a1 = v82;
      uint64_t v71 = &v82[v70];
      uint64_t v72 = &v81[v70];
      uint64_t v73 = sub_20A8CC470();
      uint64_t v74 = *(void *)(v73 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
      {
        sub_20A6F1088(0, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
        memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
      }
      goto LABEL_17;
    case 2u:
      uint64_t v22 = sub_20A8CC470();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
      uint64_t v23 = *(int *)(type metadata accessor for CuratedForYouFeedGroup() + 20);
      uint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      uint64_t v26 = *((void *)v25 + 1);
      *(void *)uint64_t v24 = *(void *)v25;
      *((void *)v24 + 1) = v26;
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 3u:
      uint64_t v27 = sub_20A8CC310();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
LABEL_17:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_20A6EC54C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_20A6EFFC8((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_20A8CC470();
        uint64_t v7 = *(void *)(v6 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
        {
          sub_20A6F1088(0, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        }
        goto LABEL_18;
      case 1u:
        uint64_t v9 = sub_20A8C3F00();
        uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 16);
        ((void (*)(char *, char *, uint64_t))v10)(a1, a2, v9);
        sub_20A61E760();
        uint64_t v12 = v11;
        uint64_t v13 = *(int *)(v11 + 48);
        uint64_t v14 = &a2[v13];
        uint64_t v15 = &a1[v13];
        v10();
        uint64_t v16 = v14;
        uint64_t v82 = (int *)type metadata accessor for StockViewModel();
        uint64_t v17 = v82[5];
        uint64_t v18 = &v15[v17];
        uint64_t v19 = &v16[v17];
        uint64_t v20 = sub_20A8C3E10();
        uint64_t v21 = *(void *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        {
          sub_20A6F1088(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
          memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        uint64_t v28 = v82[6];
        uint64_t v29 = &v15[v28];
        uint64_t v30 = &v16[v28];
        uint64_t v31 = (int *)type metadata accessor for StockSparklineViewModel(0);
        uint64_t v32 = *((void *)v31 - 1);
        uint64_t v81 = v12;
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v32 + 48))(v30, 1, v31))
        {
          sub_20A6F1088(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
          memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          uint64_t v34 = sub_20A8CDCD0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v29, v30, v34);
          uint64_t v35 = v31[5];
          uint64_t v36 = &v29[v35];
          uint64_t v37 = &v30[v35];
          uint64_t v38 = *(void *)v37;
          v36[8] = v37[8];
          *(void *)uint64_t v36 = v38;
          uint64_t v39 = v31[6];
          uint64_t v40 = &v29[v39];
          uint64_t v41 = &v30[v39];
          LOBYTE(v38) = v41[8];
          *(void *)uint64_t v40 = *(void *)v41;
          _OWORD v40[8] = v38;
          v29[v31[7]] = v30[v31[7]];
          uint64_t v42 = v31[8];
          uint64_t v43 = v16;
          uint64_t v44 = &v29[v42];
          uint64_t v45 = &v30[v42];
          uint64_t v46 = sub_20A8C3D00();
          uint64_t v47 = v44;
          uint64_t v16 = v43;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v47, v45, v46);
          (*(void (**)(char *, void, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
        }
        uint64_t v80 = v16;
        uint64_t v48 = v82[7];
        uint64_t v49 = &v15[v48];
        uint64_t v50 = &v16[v48];
        uint64_t v51 = *(void *)&v16[v48];
        v49[8] = v50[8];
        *(void *)uint64_t v49 = v51;
        uint64_t v52 = *((void *)v50 + 2);
        v49[24] = v50[24];
        *((void *)v49 + 2) = v52;
        uint64_t v53 = *((void *)v50 + 4);
        v49[40] = v50[40];
        *((void *)v49 + 4) = v53;
        *((void *)v49 + 6) = *((void *)v50 + 6);
        *((void *)v49 + 7) = *((void *)v50 + 7);
        *((void *)v49 + 8) = *((void *)v50 + 8);
        *((void *)v49 + 9) = *((void *)v50 + 9);
        uint64_t v54 = (int *)type metadata accessor for PriceViewModel();
        uint64_t v55 = v54[9];
        uint64_t v77 = &v50[v55];
        uint64_t v78 = &v49[v55];
        uint64_t v56 = sub_20A8C2EB0();
        uint64_t v79 = v15;
        uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v57(v78, v77, v56);
        uint64_t v58 = v54[10];
        uint64_t v59 = &v49[v58];
        uint64_t v60 = &v50[v58];
        uint64_t v61 = sub_20A8C4030();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
        uint64_t v62 = v54[11];
        uint64_t v63 = &v49[v62];
        uint64_t v64 = &v50[v62];
        uint64_t v65 = sub_20A8C2990();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
        uint64_t v66 = v82[8];
        uint64_t v67 = &v79[v66];
        uint64_t v68 = &v80[v66];
        uint64_t v69 = sub_20A8C3410();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
        v79[v82[9]] = v80[v82[9]];
        uint64_t v70 = *(int *)(v81 + 64);
        uint64_t v71 = &a1[v70];
        uint64_t v72 = &a2[v70];
        uint64_t v73 = sub_20A8CC470();
        uint64_t v74 = *(void *)(v73 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
        {
          sub_20A6F1088(0, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
          memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
        }
        goto LABEL_18;
      case 2u:
        uint64_t v23 = sub_20A8CC470();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        uint64_t v24 = *(int *)(type metadata accessor for CuratedForYouFeedGroup() + 20);
        uint64_t v25 = &a1[v24];
        uint64_t v26 = &a2[v24];
        *(void *)uint64_t v25 = *(void *)v26;
        *((void *)v25 + 1) = *((void *)v26 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 3u:
        uint64_t v27 = sub_20A8CC310();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for ForYouFeedSectionDescriptor()
{
  uint64_t result = qword_26AC776F8;
  if (!qword_26AC776F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_20A6ECE84(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_20A8CC470();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        sub_20A6F1088(0, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      goto LABEL_17;
    case 1u:
      uint64_t v9 = sub_20A8C3F00();
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
      v10(a1, a2, v9);
      sub_20A61E760();
      uint64_t v69 = v11;
      uint64_t v12 = *(int *)(v11 + 48);
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      v10(&a1[v12], &a2[v12], v9);
      uint64_t v70 = (int *)type metadata accessor for StockViewModel();
      uint64_t v15 = v70[5];
      uint64_t v16 = &v13[v15];
      uint64_t v17 = &v14[v15];
      uint64_t v18 = sub_20A8C3E10();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        sub_20A6F1088(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      uint64_t v24 = v70[6];
      uint64_t v25 = &v13[v24];
      uint64_t v26 = &v14[v24];
      uint64_t v27 = (int *)type metadata accessor for StockSparklineViewModel(0);
      uint64_t v28 = *((void *)v27 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
      {
        sub_20A6F1088(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        uint64_t v30 = sub_20A8CDCD0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v25, v26, v30);
        uint64_t v31 = v27[5];
        uint64_t v32 = &v25[v31];
        uint64_t v33 = &v26[v31];
        *(void *)uint64_t v32 = *(void *)v33;
        v32[8] = v33[8];
        uint64_t v34 = v27[6];
        uint64_t v35 = &v25[v34];
        uint64_t v36 = &v26[v34];
        *(void *)uint64_t v35 = *(void *)v36;
        v35[8] = v36[8];
        v25[v27[7]] = v26[v27[7]];
        uint64_t v37 = v27[8];
        uint64_t v38 = &v25[v37];
        uint64_t v39 = &v26[v37];
        uint64_t v40 = sub_20A8C3D00();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
        (*(void (**)(char *, void, uint64_t, int *))(v28 + 56))(v25, 0, 1, v27);
      }
      uint64_t v41 = v70[7];
      uint64_t v42 = &v13[v41];
      uint64_t v43 = &v14[v41];
      *(void *)uint64_t v42 = *(void *)&v14[v41];
      _OWORD v42[8] = v14[v41 + 8];
      *((void *)v42 + 2) = *(void *)&v14[v41 + 16];
      v42[24] = v14[v41 + 24];
      *((void *)v42 + 4) = *(void *)&v14[v41 + 32];
      v42[40] = v14[v41 + 40];
      long long v44 = *(_OWORD *)&v14[v41 + 64];
      *((_OWORD *)v42 + 3) = *(_OWORD *)&v14[v41 + 48];
      *((_OWORD *)v42 + 4) = v44;
      uint64_t v45 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v46 = v45[9];
      uint64_t v47 = &v42[v46];
      uint64_t v48 = &v43[v46];
      uint64_t v49 = sub_20A8C2EB0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
      uint64_t v50 = v45[10];
      uint64_t v51 = &v42[v50];
      uint64_t v52 = &v43[v50];
      uint64_t v53 = sub_20A8C4030();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
      uint64_t v54 = v45[11];
      uint64_t v55 = &v42[v54];
      uint64_t v56 = &v43[v54];
      uint64_t v57 = sub_20A8C2990();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
      uint64_t v58 = v70[8];
      uint64_t v59 = &v13[v58];
      uint64_t v60 = &v14[v58];
      uint64_t v61 = sub_20A8C3410();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
      v13[v70[9]] = v14[v70[9]];
      uint64_t v62 = *(int *)(v69 + 64);
      uint64_t v63 = &a1[v62];
      uint64_t v64 = &a2[v62];
      uint64_t v65 = sub_20A8CC470();
      uint64_t v66 = *(void *)(v65 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
      {
        sub_20A6F1088(0, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v63, v64, v65);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
      }
      goto LABEL_17;
    case 2u:
      uint64_t v21 = sub_20A8CC470();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
      uint64_t v22 = type metadata accessor for CuratedForYouFeedGroup();
      *(_OWORD *)&a1[*(int *)(v22 + 20)] = *(_OWORD *)&a2[*(int *)(v22 + 20)];
      goto LABEL_17;
    case 3u:
      uint64_t v23 = sub_20A8CC310();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
LABEL_17:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_20A6ED6F8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_20A6EFFC8((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_20A8CC470();
        uint64_t v7 = *(void *)(v6 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
        {
          sub_20A6F1088(0, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        }
        goto LABEL_19;
      case 1u:
        uint64_t v9 = sub_20A8C3F00();
        uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
        v10(a1, a2, v9);
        sub_20A61E760();
        uint64_t v72 = v11;
        uint64_t v12 = *(int *)(v11 + 48);
        uint64_t v13 = &a1[v12];
        uint64_t v14 = &a2[v12];
        v10(&a1[v12], &a2[v12], v9);
        uint64_t v15 = (int *)type metadata accessor for StockViewModel();
        uint64_t v16 = v15[5];
        uint64_t v17 = &v13[v16];
        uint64_t v18 = &v14[v16];
        uint64_t v19 = sub_20A8C3E10();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          sub_20A6F1088(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
          memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        uint64_t v25 = v15[6];
        uint64_t v26 = &v13[v25];
        uint64_t v27 = &v14[v25];
        uint64_t v28 = (int *)type metadata accessor for StockSparklineViewModel(0);
        uint64_t v29 = *((void *)v28 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v29 + 48))(v27, 1, v28))
        {
          sub_20A6F1088(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
          memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
          uint64_t v31 = sub_20A8CDCD0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v26, v27, v31);
          uint64_t v32 = v28[5];
          uint64_t v33 = &v26[v32];
          uint64_t v34 = &v27[v32];
          *(void *)uint64_t v33 = *(void *)v34;
          v33[8] = v34[8];
          uint64_t v35 = v28[6];
          uint64_t v36 = &v26[v35];
          uint64_t v37 = &v27[v35];
          *(void *)uint64_t v36 = *(void *)v37;
          v36[8] = v37[8];
          v26[v28[7]] = v27[v28[7]];
          uint64_t v38 = v28[8];
          uint64_t v70 = &v26[v38];
          uint64_t v39 = &v27[v38];
          uint64_t v40 = sub_20A8C3D00();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v70, v39, v40);
          (*(void (**)(char *, void, uint64_t, int *))(v29 + 56))(v26, 0, 1, v28);
        }
        uint64_t v41 = v15[7];
        uint64_t v42 = &v13[v41];
        uint64_t v71 = v13;
        uint64_t v43 = v15;
        long long v44 = &v14[v41];
        *(void *)uint64_t v42 = *(void *)&v14[v41];
        _OWORD v42[8] = v14[v41 + 8];
        *((void *)v42 + 2) = *(void *)&v14[v41 + 16];
        v42[24] = v14[v41 + 24];
        *((void *)v42 + 4) = *(void *)&v14[v41 + 32];
        v42[40] = v14[v41 + 40];
        long long v45 = *(_OWORD *)&v14[v41 + 64];
        *((_OWORD *)v42 + 3) = *(_OWORD *)&v14[v41 + 48];
        *((_OWORD *)v42 + 4) = v45;
        uint64_t v46 = (int *)type metadata accessor for PriceViewModel();
        uint64_t v47 = v46[9];
        uint64_t v48 = &v42[v47];
        uint64_t v49 = &v44[v47];
        uint64_t v50 = sub_20A8C2EB0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
        uint64_t v51 = v46[10];
        uint64_t v52 = &v42[v51];
        uint64_t v53 = &v44[v51];
        uint64_t v54 = sub_20A8C4030();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
        uint64_t v55 = v46[11];
        uint64_t v56 = &v42[v55];
        uint64_t v57 = &v44[v55];
        uint64_t v58 = sub_20A8C2990();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
        uint64_t v59 = v43[8];
        uint64_t v60 = &v71[v59];
        uint64_t v61 = &v14[v59];
        uint64_t v62 = sub_20A8C3410();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
        v71[v43[9]] = v14[v43[9]];
        uint64_t v63 = *(int *)(v72 + 64);
        uint64_t v64 = &a1[v63];
        uint64_t v65 = &a2[v63];
        uint64_t v66 = sub_20A8CC470();
        uint64_t v67 = *(void *)(v66 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
        {
          sub_20A6F1088(0, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
          memcpy(v64, v65, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v64, v65, v66);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
        }
        goto LABEL_19;
      case 2u:
        uint64_t v22 = sub_20A8CC470();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
        uint64_t v23 = type metadata accessor for CuratedForYouFeedGroup();
        *(_OWORD *)&a1[*(int *)(v23 + 20)] = *(_OWORD *)&a2[*(int *)(v23 + 20)];
        goto LABEL_19;
      case 3u:
        uint64_t v24 = sub_20A8CC310();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(a1, a2, v24);
LABEL_19:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_20A6EDF88()
{
  sub_20A6F1088(319, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
  if (v1 <= 0x3F)
  {
    void v8[4] = *(void *)(v0 - 8) + 64;
    sub_20A8C3F00();
    if (v2 <= 0x3F)
    {
      type metadata accessor for StockViewModel();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout3();
        void v8[5] = v8;
        uint64_t v4 = type metadata accessor for CuratedForYouFeedGroup();
        if (v5 <= 0x3F)
        {
          _OWORD v8[6] = *(void *)(v4 - 8) + 64;
          uint64_t v6 = sub_20A8CC310();
          if (v7 <= 0x3F)
          {
            v8[7] = *(void *)(v6 - 8) + 64;
            swift_initEnumMetadataMultiPayload();
          }
        }
      }
    }
  }
}

uint64_t sub_20A6EE148()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6F0F58(v1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
  char v8 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A61E760();
      uint64_t v10 = (uint64_t)&v7[*(int *)(v9 + 48)];
      sub_20A6EFF58((uint64_t)&v7[*(int *)(v9 + 64)], &qword_26AC6AF30, MEMORY[0x263F59740]);
      sub_20A6EFFC8(v10, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      uint64_t v11 = sub_20A8C3F00();
      (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v7, v11);
      goto LABEL_5;
    case 2u:
      sub_20A6F0EF0((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
      uint64_t v12 = &v4[*(int *)(v2 + 20)];
      if (*(void *)v12 == 0x69726F7453706F74 && *((void *)v12 + 1) == 0xEA00000000007365) {
        char v8 = 1;
      }
      else {
        char v8 = sub_20A8CF760();
      }
      sub_20A6EFFC8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
      break;
    case 3u:
      sub_20A6EFFC8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
LABEL_5:
      char v8 = 0;
      break;
    case 4u:
    case 5u:
      return v8 & 1;
    default:
      sub_20A6EFF58((uint64_t)v7, &qword_26AC6AF30, MEMORY[0x263F59740]);
      char v8 = 1;
      break;
  }
  return v8 & 1;
}

uint64_t sub_20A6EE3FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CC310();
  uint64_t v30 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C3F00();
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6F1088(0, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6F0F58(v1, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
  uint64_t v20 = 7364967;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A61E760();
      uint64_t v24 = (uint64_t)&v19[*(int *)(v23 + 48)];
      uint64_t v25 = (uint64_t)&v19[*(int *)(v23 + 64)];
      uint64_t v26 = v29;
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v10, v19, v8);
      uint64_t v20 = sub_20A8C3E20();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
      sub_20A6EFF58(v25, &qword_26AC6AF30, MEMORY[0x263F59740]);
      sub_20A6EFFC8(v24, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      break;
    case 2u:
      sub_20A6F0EF0((uint64_t)v19, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
      uint64_t v20 = sub_20A8CC3C0();
      sub_20A6EFFC8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
      break;
    case 3u:
      uint64_t v27 = v30;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v4, v19, v2);
      uint64_t v20 = sub_20A8CC2C0();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v2);
      break;
    case 4u:
      return v20;
    case 5u:
      uint64_t v20 = 0x64726163616C70;
      break;
    default:
      sub_20A546894((uint64_t)v19, (uint64_t)v16);
      sub_20A6F0FC0((uint64_t)v16, (uint64_t)v13, &qword_26AC6AF30, MEMORY[0x263F59740]);
      uint64_t v21 = sub_20A8CC470();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v13, 1, v21) == 1)
      {
        sub_20A6EFF58((uint64_t)v13, &qword_26AC6AF30, MEMORY[0x263F59740]);
        uint64_t v20 = 0x69726F7453706F74;
      }
      else
      {
        uint64_t v20 = sub_20A8CC3C0();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v21);
      }
      sub_20A6EFF58((uint64_t)v16, &qword_26AC6AF30, MEMORY[0x263F59740]);
      break;
  }
  return v20;
}

uint64_t sub_20A6EE958@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6F0F58(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A61E760();
      uint64_t v13 = (uint64_t)&v6[*(int *)(v12 + 48)];
      uint64_t v14 = (uint64_t)&v6[*(int *)(v12 + 64)];
      uint64_t v15 = *MEMORY[0x263F7A718];
      uint64_t v16 = sub_20A8C77E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(a1, v15, v16);
      sub_20A6EFF58(v14, &qword_26AC6AF30, MEMORY[0x263F59740]);
      sub_20A6EFFC8(v13, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      uint64_t v17 = sub_20A8C3F00();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v6, v17);
      break;
    case 2u:
      uint64_t v18 = (unsigned int *)MEMORY[0x263F7A720];
      goto LABEL_7;
    case 3u:
      uint64_t v18 = (unsigned int *)MEMORY[0x263F7A710];
LABEL_7:
      uint64_t v19 = *v18;
      uint64_t v20 = sub_20A8C77E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(a1, v19, v20);
      uint64_t result = sub_20A6EFFC8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
      break;
    case 4u:
    case 5u:
      uint64_t v7 = *MEMORY[0x263F7A730];
      uint64_t v8 = sub_20A8C77E0();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(a1, v7, v8);
      break;
    default:
      uint64_t v10 = *MEMORY[0x263F7A708];
      uint64_t v11 = sub_20A8C77E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(a1, v10, v11);
      uint64_t result = sub_20A6EFF58((uint64_t)v6, &qword_26AC6AF30, MEMORY[0x263F59740]);
      break;
  }
  return result;
}

uint64_t sub_20A6EEC4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6F0F58(v1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
  uint64_t v8 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A61E760();
      uint64_t v10 = (uint64_t)&v7[*(int *)(v9 + 48)];
      sub_20A6EFF58((uint64_t)&v7[*(int *)(v9 + 64)], &qword_26AC6AF30, MEMORY[0x263F59740]);
      sub_20A6EFFC8(v10, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      uint64_t v11 = sub_20A8C3F00();
      (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v7, v11);
      return 0;
    case 2u:
      sub_20A6F0EF0((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
      uint64_t v8 = *(void *)&v4[*(int *)(v2 + 20)];
      swift_bridgeObjectRetain();
      sub_20A6EFFC8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
      return v8;
    case 3u:
      sub_20A6EFFC8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
      return 0;
    case 4u:
    case 5u:
      return v8;
    default:
      sub_20A6EFF58((uint64_t)v7, &qword_26AC6AF30, MEMORY[0x263F59740]);
      return 0;
  }
}

uint64_t sub_20A6EEEC0()
{
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6F0F58(v3, (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_20A61E760();
      uint64_t v7 = (uint64_t)&v2[*(int *)(v6 + 48)];
      sub_20A6EFF58((uint64_t)&v2[*(int *)(v6 + 64)], &qword_26AC6AF30, MEMORY[0x263F59740]);
      sub_20A6EFFC8(v7, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      uint64_t v8 = sub_20A8C3F00();
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v2, v8);
      return 1;
    case 2:
    case 3:
      sub_20A6EFFC8((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
      return 1;
    case 4:
    case 5:
      return result;
    default:
      sub_20A6EFF58((uint64_t)v2, &qword_26AC6AF30, MEMORY[0x263F59740]);
      return 1;
  }
}

uint64_t sub_20A6EF074@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6F0F58(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A61E760();
      uint64_t v13 = (uint64_t)&v6[*(int *)(v12 + 48)];
      sub_20A6EFF58((uint64_t)&v6[*(int *)(v12 + 64)], &qword_26AC6AF30, MEMORY[0x263F59740]);
      sub_20A6EFFC8(v13, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      uint64_t v14 = sub_20A8C3F00();
      (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v6, v14);
      goto LABEL_8;
    case 2u:
      uint64_t v8 = (unsigned int *)MEMORY[0x263F59B40];
      goto LABEL_6;
    case 3u:
      uint64_t v8 = (unsigned int *)MEMORY[0x263F59B30];
LABEL_6:
      uint64_t v9 = *v8;
      uint64_t v10 = sub_20A8CD150();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(a1, v9, v10);
      return sub_20A6EFFC8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
    case 4u:
      uint64_t v7 = (unsigned int *)MEMORY[0x263F59B38];
      goto LABEL_9;
    case 5u:
      sub_20A8CF520();
      __break(1u);
      JUMPOUT(0x20A6EF310);
    default:
      sub_20A6EFF58((uint64_t)v6, &qword_26AC6AF30, MEMORY[0x263F59740]);
LABEL_8:
      uint64_t v7 = (unsigned int *)MEMORY[0x263F59B28];
LABEL_9:
      uint64_t v15 = *v7;
      uint64_t v16 = sub_20A8CD150();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(a1, v15, v16);
  }
}

uint64_t sub_20A6EF328@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_20A6F1088(0, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v37 - v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v37 - v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v37 - v14;
  uint64_t v16 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6F0F58(v2, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      sub_20A61E760();
      uint64_t v24 = v23;
      sub_20A546894((uint64_t)&v18[*(int *)(v23 + 64)], (uint64_t)v9);
      sub_20A6F0FC0((uint64_t)v9, (uint64_t)v6, &qword_26AC6AF30, MEMORY[0x263F59740]);
      uint64_t v25 = sub_20A8CC470();
      uint64_t v26 = *(void *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v6, 1, v25) == 1)
      {
        uint64_t v27 = (uint64_t (*)(uint64_t))MEMORY[0x263F59740];
        sub_20A6EFF58((uint64_t)v9, &qword_26AC6AF30, MEMORY[0x263F59740]);
        sub_20A6EFF58((uint64_t)v6, &qword_26AC6AF30, v27);
        *(_OWORD *)a1 = 0u;
        *(_OWORD *)(a1 + 16) = 0u;
        *(void *)(a1 + 32) = 0;
      }
      else
      {
        uint64_t v34 = MEMORY[0x263F59738];
        *(void *)(a1 + 24) = v25;
        *(void *)(a1 + 32) = v34;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
        (*(void (**)(uint64_t *, char *, uint64_t))(v26 + 32))(boxed_opaque_existential_1, v6, v25);
        sub_20A6EFF58((uint64_t)v9, &qword_26AC6AF30, MEMORY[0x263F59740]);
      }
      sub_20A6EFFC8((uint64_t)&v18[*(int *)(v24 + 48)], (uint64_t (*)(void))type metadata accessor for StockViewModel);
      uint64_t v36 = sub_20A8C3F00();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v36 - 8) + 8))(v18, v36);
      break;
    case 2:
      *(void *)(a1 + 24) = type metadata accessor for CuratedForYouFeedGroup();
      *(void *)(a1 + 32) = sub_20A6F1040(&qword_26AC67F68, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroup);
      uint64_t v28 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t result = sub_20A6F0EF0((uint64_t)v18, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
      break;
    case 3:
      uint64_t v29 = sub_20A8CC310();
      uint64_t v30 = MEMORY[0x263F59708];
      *(void *)(a1 + 24) = v29;
      *(void *)(a1 + 32) = v30;
      uint64_t v31 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t result = (*(uint64_t (**)(uint64_t *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v31, v18, v29);
      break;
    case 4:
    case 5:
      *(void *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      break;
    default:
      sub_20A546894((uint64_t)v18, (uint64_t)v15);
      sub_20A6F0FC0((uint64_t)v15, (uint64_t)v12, &qword_26AC6AF30, MEMORY[0x263F59740]);
      uint64_t v20 = sub_20A8CC470();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v12, 1, v20) == 1)
      {
        uint64_t v22 = (uint64_t (*)(uint64_t))MEMORY[0x263F59740];
        sub_20A6EFF58((uint64_t)v15, &qword_26AC6AF30, MEMORY[0x263F59740]);
        uint64_t result = sub_20A6EFF58((uint64_t)v12, &qword_26AC6AF30, v22);
        *(_OWORD *)a1 = 0u;
        *(_OWORD *)(a1 + 16) = 0u;
        *(void *)(a1 + 32) = 0;
      }
      else
      {
        uint64_t v32 = MEMORY[0x263F59738];
        *(void *)(a1 + 24) = v20;
        *(void *)(a1 + 32) = v32;
        uint64_t v33 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
        (*(void (**)(uint64_t *, char *, uint64_t))(v21 + 32))(v33, v12, v20);
        uint64_t result = sub_20A6EFF58((uint64_t)v15, &qword_26AC6AF30, MEMORY[0x263F59740]);
      }
      break;
  }
  return result;
}

uint64_t sub_20A6EF890@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F59800];
  uint64_t v3 = sub_20A8CC5C0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_20A6EF914@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6F0F58(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A61E760();
      uint64_t v13 = (uint64_t)&v6[*(int *)(v12 + 48)];
      uint64_t v14 = (uint64_t)&v6[*(int *)(v12 + 64)];
      uint64_t v15 = *MEMORY[0x263F587D0];
      uint64_t v16 = sub_20A8CBFA0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(a1, v15, v16);
      sub_20A6EFF58(v14, &qword_26AC6AF30, MEMORY[0x263F59740]);
      sub_20A6EFFC8(v13, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      uint64_t v17 = sub_20A8C3F00();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v6, v17);
      break;
    case 2u:
      uint64_t v18 = (unsigned int *)MEMORY[0x263F587D8];
      goto LABEL_7;
    case 3u:
      uint64_t v18 = (unsigned int *)MEMORY[0x263F587C0];
LABEL_7:
      uint64_t v19 = *v18;
      uint64_t v20 = sub_20A8CBFA0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(a1, v19, v20);
      uint64_t result = sub_20A6EFFC8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
      break;
    case 4u:
    case 5u:
      uint64_t v7 = *MEMORY[0x263F587C8];
      uint64_t v8 = sub_20A8CBFA0();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(a1, v7, v8);
      break;
    default:
      uint64_t v10 = *MEMORY[0x263F587D8];
      uint64_t v11 = sub_20A8CBFA0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(a1, v10, v11);
      uint64_t result = sub_20A6EFF58((uint64_t)v6, &qword_26AC6AF30, MEMORY[0x263F59740]);
      break;
  }
  return result;
}

uint64_t sub_20A6EFC08()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6F0F58(v1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A61E760();
      uint64_t v6 = (uint64_t)&v4[*(int *)(v5 + 48)];
      sub_20A6EFF58((uint64_t)&v4[*(int *)(v5 + 64)], &qword_26AC6AF30, MEMORY[0x263F59740]);
      sub_20A6EFFC8(v6, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      uint64_t v7 = sub_20A8C3F00();
      (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
      goto LABEL_5;
    case 2u:
      sub_20A6EFFC8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
      goto LABEL_5;
    case 3u:
      sub_20A6EFFC8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
      goto LABEL_7;
    case 4u:
    case 5u:
LABEL_7:
      uint64_t result = sub_20A8CC940();
      break;
    default:
      sub_20A6EFF58((uint64_t)v4, &qword_26AC6AF30, MEMORY[0x263F59740]);
LABEL_5:
      uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x263F59890];
      sub_20A6F1088(0, &qword_26AC80008, MEMORY[0x263F59890], MEMORY[0x263F8E0F8]);
      sub_20A8CC970();
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_20A8D4540;
      sub_20A8CC950();
      sub_20A8CC960();
      v11[1] = v9;
      sub_20A6F1040((unint64_t *)&qword_26AC6B048, MEMORY[0x263F59890]);
      sub_20A6F1088(0, &qword_26AC7F7B8, v8, MEMORY[0x263F8D488]);
      sub_20A546A78();
      uint64_t result = sub_20A8CF290();
      break;
  }
  return result;
}

uint64_t sub_20A6EFF58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A6F1088(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A6EFFC8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A6F0028(uint64_t a1, uint64_t a2)
{
  uint64_t v119 = a1;
  uint64_t v120 = a2;
  uint64_t v2 = (void (*)(char *, uint64_t))sub_20A8CC310();
  uint64_t v114 = *((void *)v2 - 1);
  unsigned __int8 v115 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v106 = (char *)&v100 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v105 = (char *)&v100 - v5;
  uint64_t v6 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v108 = (uint64_t)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v107 = (uint64_t)&v100 - v9;
  uint64_t v104 = sub_20A8C3E10();
  uint64_t v102 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  int v100 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6F1088(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v101 = (uint64_t)&v100 - v12;
  sub_20A5C6360();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v103 = (uint64_t)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for StockViewModel();
  MEMORY[0x270FA5388](v16);
  uint64_t v109 = (uint64_t)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v116 = (uint64_t)&v100 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v110 = (uint64_t)&v100 - v21;
  MEMORY[0x270FA5388](v22);
  uint64_t v111 = (uint64_t)&v100 - v23;
  uint64_t v24 = sub_20A8C3F00();
  uint64_t v117 = *(void *)(v24 - 8);
  uint64_t v118 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v113 = (char *)&v100 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  unint64_t v112 = (char *)&v100 - v27;
  uint64_t v28 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v100 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v100 - v32;
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)&v100 - v35;
  MEMORY[0x270FA5388](v37);
  uint64_t v39 = (char *)&v100 - v38;
  sub_20A6F0E8C();
  MEMORY[0x270FA5388](v40 - 8);
  uint64_t v42 = (char *)&v100 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = (uint64_t)&v42[*(int *)(v43 + 56)];
  sub_20A6F0F58(v119, (uint64_t)v42, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
  sub_20A6F0F58(v120, v44, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A6F0F58((uint64_t)v42, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
      sub_20A61E760();
      uint64_t v61 = v60;
      uint64_t v62 = *(int *)(v60 + 48);
      uint64_t v63 = (uint64_t)&v36[v62];
      uint64_t v64 = (uint64_t)&v36[*(int *)(v60 + 64)];
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_20A6EFF58(v64, &qword_26AC6AF30, MEMORY[0x263F59740]);
        sub_20A6EFFC8((uint64_t)&v36[v62], (uint64_t (*)(void))type metadata accessor for StockViewModel);
        (*(void (**)(char *, uint64_t))(v117 + 8))(v36, v118);
        goto LABEL_22;
      }
      uint64_t v119 = v61;
      uint64_t v120 = v64;
      unsigned __int8 v115 = (void (*)(char *, uint64_t))(v44 + v62);
      uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v117 + 32);
      uint64_t v66 = v112;
      uint64_t v67 = v36;
      uint64_t v68 = v118;
      v65(v112, v67, v118);
      uint64_t v69 = v113;
      v65(v113, (char *)v44, v68);
      uint64_t v70 = v111;
      sub_20A6F0EF0(v63, v111, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      uint64_t v71 = v110;
      sub_20A6F0EF0((uint64_t)v115, v110, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      char v72 = MEMORY[0x21051C160](v66, v69);
      sub_20A6F0F58(v70, v116, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      uint64_t v73 = v109;
      sub_20A6F0F58(v71, v109, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      if ((v72 & 1) == 0)
      {
        sub_20A6EFFC8(v73, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        sub_20A6EFFC8(v116, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        sub_20A6EFFC8(v71, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        sub_20A6EFFC8(v70, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        uint64_t v89 = v118;
        int64_t v90 = *(void (**)(char *, uint64_t))(v117 + 8);
        v90(v113, v118);
        v90(v66, v89);
LABEL_31:
        char v51 = 0;
        goto LABEL_32;
      }
      uint64_t v74 = *(int *)(v16 + 20);
      uint64_t v75 = v116 + v74;
      uint64_t v76 = v73 + v74;
      uint64_t v77 = *(int *)(v14 + 48);
      uint64_t v78 = v103;
      uint64_t v79 = v103 + v77;
      uint64_t v80 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AEF0];
      sub_20A6F0FC0(v75, v103, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      sub_20A6F0FC0(v76, v79, &qword_26AC68FB0, v80);
      uint64_t v81 = v102;
      uint64_t v82 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48);
      uint64_t v83 = v104;
      if (v82(v78, 1, v104) == 1)
      {
        sub_20A6EFFC8(v73, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        sub_20A6EFFC8(v116, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        sub_20A6EFFC8(v110, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        sub_20A6EFFC8(v111, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        uint64_t v84 = v118;
        int64_t v85 = *(void (**)(char *, uint64_t))(v117 + 8);
        v85(v113, v118);
        v85(v112, v84);
        if (v82(v79, 1, v83) == 1)
        {
          sub_20A6EFF58(v78, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
          char v51 = 1;
          goto LABEL_32;
        }
        goto LABEL_30;
      }
      uint64_t v91 = v101;
      sub_20A6F0FC0(v78, v101, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      if (v82(v79, 1, v83) == 1)
      {
        sub_20A6EFFC8(v109, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        sub_20A6EFFC8(v116, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        sub_20A6EFFC8(v110, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        sub_20A6EFFC8(v111, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        uint64_t v92 = v118;
        uint64_t v93 = *(void (**)(char *, uint64_t))(v117 + 8);
        v93(v113, v118);
        v93(v112, v92);
        (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v91, v83);
LABEL_30:
        sub_20A6EFFC8(v78, (uint64_t (*)(void))sub_20A5C6360);
        goto LABEL_31;
      }
      uint64_t v97 = v100;
      (*(void (**)(char *, uint64_t, uint64_t))(v81 + 32))(v100, v79, v83);
      sub_20A6F1040((unint64_t *)&unk_26AC68FA0, MEMORY[0x263F7AEF0]);
      char v51 = sub_20A8CE210();
      unsigned __int8 v115 = *(void (**)(char *, uint64_t))(v81 + 8);
      v115(v97, v83);
      sub_20A6EFFC8(v109, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      sub_20A6EFFC8(v116, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      sub_20A6EFFC8(v110, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      sub_20A6EFFC8(v111, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      uint64_t v98 = v118;
      uint64_t v99 = *(void (**)(char *, uint64_t))(v117 + 8);
      v99(v113, v118);
      v99(v112, v98);
      v115((char *)v91, v83);
      sub_20A6EFF58(v78, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
LABEL_32:
      uint64_t v94 = v120;
      uint64_t v95 = v44 + *(int *)(v119 + 64);
      uint64_t v96 = (uint64_t (*)(uint64_t))MEMORY[0x263F59740];
      sub_20A6EFF58(v95, &qword_26AC6AF30, MEMORY[0x263F59740]);
      sub_20A6EFF58(v94, &qword_26AC6AF30, v96);
      uint64_t v58 = (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor;
LABEL_23:
      sub_20A6EFFC8((uint64_t)v42, v58);
      return v51 & 1;
    case 2u:
      sub_20A6F0F58((uint64_t)v42, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        sub_20A6EFFC8((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
        goto LABEL_22;
      }
      uint64_t v45 = v107;
      sub_20A6F0EF0((uint64_t)v33, v107, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
      uint64_t v46 = v108;
      sub_20A6F0EF0(v44, v108, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
      uint64_t v47 = sub_20A8CC3C0();
      uint64_t v49 = v48;
      if (v47 == sub_20A8CC3C0() && v49 == v50) {
        char v51 = 1;
      }
      else {
        char v51 = sub_20A8CF760();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_20A6EFFC8(v46, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
      sub_20A6EFFC8(v45, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
      uint64_t v58 = (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor;
      goto LABEL_23;
    case 3u:
      sub_20A6F0F58((uint64_t)v42, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        (*(void (**)(char *, void))(v114 + 8))(v30, v115);
        goto LABEL_22;
      }
      uint64_t v53 = v114;
      uint64_t v52 = v115;
      uint64_t v54 = *(void (**)(char *, char *, void (*)(void, void)))(v114 + 32);
      uint64_t v55 = v105;
      v54(v105, v30, (void (*)(void, void))v115);
      uint64_t v56 = v106;
      v54(v106, (char *)v44, (void (*)(void, void))v52);
      char v51 = sub_20A8CC2F0();
      uint64_t v57 = *(void (**)(char *, void))(v53 + 8);
      v57(v56, v52);
      v57(v55, v52);
      uint64_t v58 = (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor;
      goto LABEL_23;
    case 4u:
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v58 = (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor;
      if (EnumCaseMultiPayload != 4) {
        goto LABEL_22;
      }
      goto LABEL_18;
    case 5u:
      int v86 = swift_getEnumCaseMultiPayload();
      uint64_t v58 = (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor;
      if (v86 != 5) {
        goto LABEL_22;
      }
LABEL_18:
      char v51 = 1;
      goto LABEL_23;
    default:
      sub_20A6F0F58((uint64_t)v42, (uint64_t)v39, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_20A6EFF58((uint64_t)v39, &qword_26AC6AF30, MEMORY[0x263F59740]);
LABEL_22:
        char v51 = 0;
        uint64_t v58 = (uint64_t (*)(void))sub_20A6F0E8C;
      }
      else
      {
        uint64_t v88 = (uint64_t (*)(uint64_t))MEMORY[0x263F59740];
        sub_20A6EFF58(v44, &qword_26AC6AF30, MEMORY[0x263F59740]);
        sub_20A6EFF58((uint64_t)v39, &qword_26AC6AF30, v88);
        char v51 = 1;
        uint64_t v58 = (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor;
      }
      goto LABEL_23;
  }
}

void sub_20A6F0E8C()
{
  if (!qword_26AC777A0)
  {
    type metadata accessor for ForYouFeedSectionDescriptor();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC777A0);
    }
  }
}

uint64_t sub_20A6F0EF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A6F0F58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A6F0FC0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_20A6F1088(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A6F1040(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A6F1088(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *sub_20A6F10EC(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    long long v8 = *((_OWORD *)a2 + 3);
    a1[2] = *((_OWORD *)a2 + 2);
    a1[3] = v8;
    long long v9 = *((_OWORD *)a2 + 5);
    a1[4] = *((_OWORD *)a2 + 4);
    a1[5] = v9;
    long long v10 = *((_OWORD *)a2 + 7);
    a1[6] = *((_OWORD *)a2 + 6);
    a1[7] = v10;
    memcpy(a1 + 8, a2 + 16, 0x1A1uLL);
    uint64_t v11 = *(int *)(a3 + 36);
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    uint64_t v14 = sub_20A8CAC10();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    *((unsigned char *)v4 + *(int *)(a3 + 40)) = *((unsigned char *)a2 + *(int *)(a3 + 40));
  }
  return v4;
}

uint64_t sub_20A6F11FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 36);
  uint64_t v3 = sub_20A8CAC10();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

_OWORD *sub_20A6F1264(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  long long v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  long long v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  memcpy(a1 + 8, a2 + 8, 0x1A1uLL);
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_20A8CAC10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  *((unsigned char *)a1 + *(int *)(a3 + 40)) = *((unsigned char *)a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_20A6F1324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
  long long v6 = *(_OWORD *)(a2 + 408);
  long long v7 = *(_OWORD *)(a2 + 424);
  long long v8 = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = v8;
  *(_OWORD *)(a1 + 408) = v6;
  *(_OWORD *)(a1 + 424) = v7;
  long long v9 = *(_OWORD *)(a2 + 472);
  long long v10 = *(_OWORD *)(a2 + 488);
  long long v11 = *(_OWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 513) = *(_OWORD *)(a2 + 513);
  *(_OWORD *)(a1 + 488) = v10;
  *(_OWORD *)(a1 + 504) = v11;
  *(_OWORD *)(a1 + 472) = v9;
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(unsigned char *)(a1 + 544) = *(unsigned char *)(a2 + 544);
  uint64_t v12 = *(int *)(a3 + 36);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_20A8CAC10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  *(unsigned char *)(a1 + *(int *)(a3 + 40)) = *(unsigned char *)(a2 + *(int *)(a3 + 40));
  return a1;
}

_OWORD *sub_20A6F1584(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  long long v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  long long v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  memcpy(a1 + 8, a2 + 8, 0x1A1uLL);
  uint64_t v10 = *(int *)(a3 + 36);
  long long v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_20A8CAC10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  *((unsigned char *)a1 + *(int *)(a3 + 40)) = *((unsigned char *)a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_20A6F1644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  long long v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  long long v10 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v10;
  long long v11 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v11;
  long long v12 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v12;
  long long v13 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v13;
  long long v14 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v14;
  long long v15 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v15;
  long long v16 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v16;
  long long v17 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v17;
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(_OWORD *)(a1 + 513) = *(_OWORD *)(a2 + 513);
  long long v18 = *(_OWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
  *(_OWORD *)(a1 + 504) = v18;
  long long v19 = *(_OWORD *)(a2 + 472);
  *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 472) = v19;
  long long v20 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 440) = v20;
  long long v21 = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 408) = v21;
  *(void *)&long long v20 = *(void *)(a2 + 536);
  *(unsigned char *)(a1 + 544) = *(unsigned char *)(a2 + 544);
  uint64_t v22 = *(int *)(a3 + 36);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(void *)(a1 + 536) = v20;
  uint64_t v25 = sub_20A8CAC10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
  *(unsigned char *)(a1 + *(int *)(a3 + 40)) = *(unsigned char *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_20A6F177C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A6F1790);
}

uint64_t sub_20A6F1790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 544);
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_20A8CAC10();
    long long v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 36);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_20A6F1840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A6F1854);
}

uint64_t sub_20A6F1854(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 544) = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_20A8CAC10();
    long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for StockTitleViewLayoutAttributes()
{
  uint64_t result = qword_26AC7A178;
  if (!qword_26AC7A178) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A6F1944()
{
  uint64_t result = sub_20A8CAC10();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A6F19F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = sub_20A8CAC10();
  int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_20A6F1A68()
{
  sub_20A6F1B28(&qword_26AC7A168);

  return sub_20A8CACE0();
}

uint64_t sub_20A6F1AC0()
{
  return sub_20A6F1B28(&qword_26AC7A170);
}

uint64_t sub_20A6F1AF4()
{
  return sub_20A6F1B28(&qword_26AC7A168);
}

uint64_t sub_20A6F1B28(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StockTitleViewLayoutAttributes();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6F1B6C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v53 = a2;
  sub_20A6F78E0(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  long long v8 = (char *)&v52 - v7;
  uint64_t v9 = sub_20A8C2800();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v61 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v60 = (char *)&v52 - v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v54 = v3;
  uint64_t v55 = (char *)&v52 - v15;
  sub_20A4342F4((uint64_t)(v3 + 56), (uint64_t)v65);
  uint64_t v16 = *(void *)(*__swift_project_boxed_opaque_existential_1(v65, v65[3]) + 16);
  uint64_t v62 = a3;
  uint64_t v17 = v16 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v16 + 16);
  long long v18 = (os_unfair_lock_s *)(v16 + ((*(unsigned int *)(*(void *)v16 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v18);
  sub_20A6F6F64(v17);
  os_unfair_lock_unlock(v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
  uint64_t v19 = *(void *)(a1 + 16);
  uint64_t v20 = MEMORY[0x263F8EE78];
  if (v19)
  {
    uint64_t v58 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    uint64_t v56 = v10;
    uint64_t v57 = (void (**)(char *, char *, uint64_t))(v10 + 32);
    uint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v52 = a1;
    uint64_t v22 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v24 = *(v22 - 1);
      uint64_t v23 = *v22;
      uint64_t v64 = 0;
      MEMORY[0x270FA5388](v21);
      *(&v52 - 2) = (uint64_t)&v64;
      if ((v23 & 0x1000000000000000) == 0)
      {
        if ((v23 & 0x2000000000000000) != 0)
        {
          v65[0] = v24;
          v65[1] = v23 & 0xFFFFFFFFFFFFFFLL;
          if (v24 <= 0x20u && ((1 << v24) & 0x100003E01) != 0)
          {
LABEL_19:
            swift_bridgeObjectRetain();
            goto LABEL_20;
          }
          swift_bridgeObjectRetain();
          uint64_t v29 = (unsigned char *)_swift_stdlib_strtod_clocale();
          if (!v29) {
            goto LABEL_20;
          }
          goto LABEL_28;
        }
        if ((v24 & 0x1000000000000000) != 0)
        {
          unsigned int v25 = *(unsigned __int8 *)((v23 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
          BOOL v26 = v25 > 0x20;
          uint64_t v27 = (1 << v25) & 0x100003E01;
          if (!v26 && v27 != 0) {
            goto LABEL_19;
          }
          swift_bridgeObjectRetain();
          uint64_t v29 = (unsigned char *)_swift_stdlib_strtod_clocale();
          if (!v29) {
            goto LABEL_20;
          }
LABEL_28:
          if (!*v29) {
            goto LABEL_29;
          }
          goto LABEL_20;
        }
      }
      swift_bridgeObjectRetain();
      sub_20A8CF3B0();
      if (v63)
      {
LABEL_29:
        sub_20A8C2780();
        uint64_t v31 = 0;
        goto LABEL_21;
      }
LABEL_20:
      uint64_t v31 = 1;
LABEL_21:
      (*v59)(v8, v31, 1, v9);
      swift_bridgeObjectRelease();
      if ((*v58)(v8, 1, v9) == 1)
      {
        uint64_t v21 = sub_20A6F7944((uint64_t)v8, &qword_26AC68CC0, MEMORY[0x263F07490]);
      }
      else
      {
        uint64_t v32 = *v57;
        uint64_t v33 = v55;
        (*v57)(v55, v8, v9);
        v32(v60, v33, v9);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v20 = sub_20A46D718(0, *(void *)(v20 + 16) + 1, 1, v20);
        }
        unint64_t v35 = *(void *)(v20 + 16);
        unint64_t v34 = *(void *)(v20 + 24);
        if (v35 >= v34 >> 1) {
          uint64_t v20 = sub_20A46D718(v34 > 1, v35 + 1, 1, v20);
        }
        *(void *)(v20 + 16) = v35 + 1;
        uint64_t v21 = ((uint64_t (*)(unint64_t, char *, uint64_t))v32)(v20+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v35, v60, v9);
      }
      v22 += 2;
      if (!--v19)
      {
        swift_bridgeObjectRelease();
        uint64_t v10 = v56;
        break;
      }
    }
  }
  uint64_t v36 = sub_20A6F234C(v53, v20, v54);
  swift_bridgeObjectRelease();
  int64_t v37 = *(void *)(v36 + 16);
  if (v37)
  {
    v65[0] = MEMORY[0x263F8EE78];
    sub_20A68C494(0, v37, 0);
    uint64_t v39 = *(char **)(v10 + 16);
    uint64_t v38 = v10 + 16;
    uint64_t v40 = *(unsigned __int8 *)(v38 + 64);
    uint64_t v58 = (unsigned int (**)(char *, uint64_t, uint64_t))v36;
    uint64_t v41 = v36 + ((v40 + 32) & ~v40);
    uint64_t v59 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
    uint64_t v60 = v39;
    uint64_t v42 = (void (**)(char *, uint64_t))(v38 - 8);
    do
    {
      uint64_t v43 = v61;
      ((void (*)(char *, uint64_t, uint64_t))v60)(v61, v41, v9);
      sub_20A8C2790();
      uint64_t v44 = sub_20A8CE760();
      uint64_t v46 = v45;
      (*v42)(v43, v9);
      uint64_t v47 = v65[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C494(0, *(void *)(v47 + 16) + 1, 1);
        uint64_t v47 = v65[0];
      }
      unint64_t v49 = *(void *)(v47 + 16);
      unint64_t v48 = *(void *)(v47 + 24);
      if (v49 >= v48 >> 1)
      {
        sub_20A68C494(v48 > 1, v49 + 1, 1);
        uint64_t v47 = v65[0];
      }
      *(void *)(v47 + 16) = v49 + 1;
      uint64_t v50 = v47 + 16 * v49;
      *(void *)(v50 + 32) = v44;
      *(void *)(v50 + 40) = v46;
      v41 += (uint64_t)v59;
      --v37;
    }
    while (v37);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v47;
}

uint64_t sub_20A6F21AC()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI27StockChartDescriptorFactory_stock;
  uint64_t v2 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_20A6F225C()
{
  return type metadata accessor for StockChartDescriptorFactory();
}

uint64_t type metadata accessor for StockChartDescriptorFactory()
{
  uint64_t result = qword_26AC779C8;
  if (!qword_26AC779C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A6F22B0()
{
  uint64_t result = sub_20A8C3F00();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_20A6F234C(unint64_t a1, uint64_t a2, char *a3)
{
  unint64_t v610 = a1;
  uint64_t v613 = 0;
  uint64_t v565 = sub_20A8C2A80();
  uint64_t v563 = *(void *)(v565 - 8);
  MEMORY[0x270FA5388](v565);
  v562 = (char *)&v519 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C22A0();
  uint64_t v564 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  v520 = (char *)&v519 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  v561 = (char *)&v519 - v9;
  sub_20A6F78E0(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v539 = (uint64_t)&v519 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  v540 = (char *)&v519 - v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v524 = (uint64_t)&v519 - v15;
  MEMORY[0x270FA5388](v16);
  long long v18 = (char *)&v519 - v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v526 = (uint64_t)&v519 - v20;
  MEMORY[0x270FA5388](v21);
  v529 = (char *)&v519 - v22;
  MEMORY[0x270FA5388](v23);
  v521 = (char *)&v519 - v24;
  MEMORY[0x270FA5388](v25);
  v530 = (char *)&v519 - v26;
  MEMORY[0x270FA5388](v27);
  v531 = (char *)&v519 - v28;
  MEMORY[0x270FA5388](v29);
  uint64_t v543 = (uint64_t)&v519 - v30;
  MEMORY[0x270FA5388](v31);
  v546 = (char *)&v519 - v32;
  MEMORY[0x270FA5388](v33);
  uint64_t v553 = (uint64_t)&v519 - v34;
  MEMORY[0x270FA5388](v35);
  v555 = (char *)&v519 - v36;
  MEMORY[0x270FA5388](v37);
  uint64_t v558 = (uint64_t)&v519 - v38;
  MEMORY[0x270FA5388](v39);
  v567 = (char *)&v519 - v40;
  MEMORY[0x270FA5388](v41);
  uint64_t v573 = (uint64_t)&v519 - v42;
  MEMORY[0x270FA5388](v43);
  v576 = (char *)&v519 - v44;
  MEMORY[0x270FA5388](v45);
  uint64_t v584 = (uint64_t)&v519 - v46;
  MEMORY[0x270FA5388](v47);
  v590 = (void (**)(char *, char *, uint64_t))((char *)&v519 - v48);
  MEMORY[0x270FA5388](v49);
  v603 = (char **)((char *)&v519 - v50);
  MEMORY[0x270FA5388](v51);
  v606 = (void (**)(char *, uint64_t))((char *)&v519 - v52);
  MEMORY[0x270FA5388](v53);
  v596 = (char *)&v519 - v54;
  MEMORY[0x270FA5388](v55);
  v601 = (char **)((char *)&v519 - v56);
  MEMORY[0x270FA5388](v57);
  v547 = (char *)&v519 - v58;
  MEMORY[0x270FA5388](v59);
  uint64_t v585 = (uint64_t)&v519 - v60;
  MEMORY[0x270FA5388](v61);
  v589 = (char *)&v519 - v62;
  MEMORY[0x270FA5388](v63);
  v574 = (char *)&v519 - v64;
  MEMORY[0x270FA5388](v65);
  uint64_t v67 = (char *)&v519 - v66;
  uint64_t v611 = sub_20A8C2800();
  unint64_t v602 = *(void *)(v611 - 8);
  MEMORY[0x270FA5388](v611);
  v538 = (char *)&v519 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v69);
  v537 = (char *)&v519 - v70;
  MEMORY[0x270FA5388](v71);
  v541 = (char *)&v519 - v72;
  MEMORY[0x270FA5388](v73);
  v549 = (char *)&v519 - v74;
  MEMORY[0x270FA5388](v75);
  v548 = (char *)&v519 - v76;
  MEMORY[0x270FA5388](v77);
  v523 = (char *)&v519 - v78;
  MEMORY[0x270FA5388](v79);
  v522 = (char *)&v519 - v80;
  MEMORY[0x270FA5388](v81);
  v532 = (char *)&v519 - v82;
  MEMORY[0x270FA5388](v83);
  v534 = (char *)&v519 - v84;
  MEMORY[0x270FA5388](v85);
  v528 = (char *)&v519 - v86;
  MEMORY[0x270FA5388](v87);
  v525 = (char *)&v519 - v88;
  MEMORY[0x270FA5388](v89);
  v527 = (char *)&v519 - v90;
  MEMORY[0x270FA5388](v91);
  v533 = (char *)&v519 - v92;
  MEMORY[0x270FA5388](v93);
  v535 = (char *)&v519 - v94;
  MEMORY[0x270FA5388](v95);
  v536 = (char *)&v519 - v96;
  MEMORY[0x270FA5388](v97);
  uint64_t v99 = (char *)&v519 - v98;
  MEMORY[0x270FA5388](v100);
  uint64_t v102 = (char *)&v519 - v101;
  MEMORY[0x270FA5388](v103);
  v542 = (char *)&v519 - v104;
  MEMORY[0x270FA5388](v105);
  v544 = (char *)&v519 - v106;
  MEMORY[0x270FA5388](v107);
  v551 = (char *)&v519 - v108;
  MEMORY[0x270FA5388](v109);
  v545 = (char *)&v519 - v110;
  MEMORY[0x270FA5388](v111);
  v556 = (char *)&v519 - v112;
  MEMORY[0x270FA5388](v113);
  v552 = (char *)&v519 - v114;
  MEMORY[0x270FA5388](v115);
  v550 = (char *)&v519 - v116;
  MEMORY[0x270FA5388](v117);
  v560 = (char *)&v519 - v118;
  MEMORY[0x270FA5388](v119);
  v554 = (char *)&v519 - v120;
  MEMORY[0x270FA5388](v121);
  v569 = (char *)&v519 - v122;
  MEMORY[0x270FA5388](v123);
  v557 = (char *)&v519 - v124;
  MEMORY[0x270FA5388](v125);
  v559 = (char *)&v519 - v126;
  MEMORY[0x270FA5388](v127);
  v571 = (char *)&v519 - v128;
  MEMORY[0x270FA5388](v129);
  v566 = (char *)&v519 - v130;
  MEMORY[0x270FA5388](v131);
  v577 = (char *)&v519 - v132;
  MEMORY[0x270FA5388](v133);
  v572 = (char *)&v519 - v134;
  MEMORY[0x270FA5388](v135);
  v570 = (char *)&v519 - v136;
  MEMORY[0x270FA5388](v137);
  v581 = (char *)&v519 - v138;
  MEMORY[0x270FA5388](v139);
  v575 = (char *)&v519 - v140;
  MEMORY[0x270FA5388](v141);
  v591 = (char *)&v519 - v142;
  MEMORY[0x270FA5388](v143);
  v580 = (char *)&v519 - v144;
  MEMORY[0x270FA5388](v145);
  v579 = (char *)&v519 - v146;
  MEMORY[0x270FA5388](v147);
  unint64_t v599 = (unint64_t)&v519 - v148;
  MEMORY[0x270FA5388](v149);
  v586 = (char *)&v519 - v150;
  MEMORY[0x270FA5388](v151);
  unint64_t v608 = (unint64_t)&v519 - v152;
  MEMORY[0x270FA5388](v153);
  v598 = (char *)&v519 - v154;
  MEMORY[0x270FA5388](v155);
  v592 = (char *)&v519 - v156;
  MEMORY[0x270FA5388](v157);
  v609 = (unsigned int (*)(char *, uint64_t, uint64_t))((char *)&v519 - v158);
  MEMORY[0x270FA5388](v159);
  unint64_t v605 = (unint64_t)&v519 - v160;
  MEMORY[0x270FA5388](v161);
  v612 = (char *)&v519 - v162;
  MEMORY[0x270FA5388](v163);
  v595 = (char *)&v519 - v164;
  MEMORY[0x270FA5388](v165);
  v594 = (char *)&v519 - v166;
  MEMORY[0x270FA5388](v167);
  uint64_t v607 = (uint64_t)&v519 - v168;
  MEMORY[0x270FA5388](v169);
  v597 = (char *)&v519 - v170;
  MEMORY[0x270FA5388](v171);
  v600 = (char *)&v519 - v172;
  MEMORY[0x270FA5388](v173);
  v583 = (char *)&v519 - v174;
  MEMORY[0x270FA5388](v175);
  v582 = (char *)&v519 - v176;
  MEMORY[0x270FA5388](v177);
  v604 = (void (*)(char *, char *, uint64_t))((char *)&v519 - v178);
  MEMORY[0x270FA5388](v179);
  v587 = (char *)&v519 - v180;
  MEMORY[0x270FA5388](v181);
  v588 = (char *)&v519 - v182;
  MEMORY[0x270FA5388](v183);
  v568 = (char *)&v519 - v184;
  MEMORY[0x270FA5388](v185);
  v578 = (char *)&v519 - v186;
  uint64_t v187 = sub_20A8C2BC0();
  uint64_t v188 = *(void *)(v187 - 8);
  double v189 = MEMORY[0x270FA5388](v187);
  unint64_t v191 = (char *)&v519 - ((v190 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, unint64_t, uint64_t, double))(v188 + 16))(v191, v610, v187, v189);
  int v192 = (*(uint64_t (**)(char *, uint64_t))(v188 + 88))(v191, v187);
  if (v192 == *MEMORY[0x263F7A838])
  {
    v601 = *(char ***)(a2 + 16);
    if (v601)
    {
      v598 = a3;
      uint64_t v607 = v6;
      unint64_t v193 = v602;
      unint64_t v194 = (*(unsigned __int8 *)(v193 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v193 + 80);
      uint64_t v593 = a2;
      v600 = (char *)v194;
      uint64_t v195 = a2 + v194;
      uint64_t v196 = v611;
      v612 = *(char **)(v602 + 16);
      ((void (*)(char *, unint64_t, uint64_t))v612)(v67, a2 + v194, v611);
      uint64_t v197 = *(char ***)(v193 + 56);
      ((void (*)(char *, void, uint64_t, uint64_t))v197)(v67, 0, 1, v196);
      uint64_t v198 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v193 + 48);
      if (v198(v67, 1, v196) != 1)
      {
        uint64_t v200 = (char **)(v193 + 32);
        uint64_t v199 = *(char **)(v193 + 32);
        v609 = v198;
        unint64_t v610 = v193 + 48;
        uint64_t v201 = v578;
        v594 = v199;
        ((void (*)(char *, char *, uint64_t))v199)(v578, v67, v196);
        uint64_t v202 = v601;
        unint64_t v599 = *(void *)(v193 + 72);
        uint64_t v203 = v574;
        unint64_t v608 = v193 + 16;
        ((void (*)(char *, unint64_t, uint64_t))v612)(v574, v195 + v599 * ((void)v601 - 1), v196);
        ((void (*)(char *, void, uint64_t, uint64_t))v197)(v203, 0, 1, v196);
        if (v609(v203, 1, v196) == 1)
        {
          (*(void (**)(char *, uint64_t))(v193 + 8))(v201, v196);
          uint64_t v204 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
          uint64_t v205 = (uint64_t)v203;
LABEL_36:
          sub_20A6F7944(v205, &qword_26AC68CC0, v204);
          return MEMORY[0x263F8EE78];
        }
        unint64_t v605 = (unint64_t)v197;
        v606 = (void (**)(char *, uint64_t))(v193 + 56);
        v266 = v568;
        v603 = v200;
        ((void (*)(char *, char *, uint64_t))v594)(v568, v203, v196);
        v267 = v266;
        id v268 = objc_msgSend(self, sel_currentCalendar);
        v269 = v562;
        sub_20A8C2A00();

        sub_20A6F78E0(0, (unint64_t *)&qword_26AC7FE70, MEMORY[0x263F07908], MEMORY[0x263F8E0F8]);
        uint64_t v270 = sub_20A8C2A60();
        uint64_t v271 = *(void *)(v270 - 8);
        unint64_t v272 = (*(unsigned __int8 *)(v271 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v271 + 80);
        uint64_t v273 = swift_allocObject();
        *(_OWORD *)(v273 + 16) = xmmword_20A8D3DC0;
        (*(void (**)(unint64_t, void, uint64_t))(v271 + 104))(v273 + v272, *MEMORY[0x263F07890], v270);
        sub_20A7BA4B0(v273);
        swift_setDeallocating();
        v274 = v578;
        swift_arrayDestroy();
        swift_deallocClassInstance();
        v275 = v561;
        sub_20A8C29C0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v563 + 8))(v269, v565);
        uint64_t v276 = sub_20A8C2250();
        LOBYTE(v270) = v277;
        (*(void (**)(char *, uint64_t))(v564 + 8))(v275, v607);
        if (v270)
        {
          v346 = *(void (**)(char *, uint64_t))(v602 + 8);
          v346(v267, v196);
          v346(v274, v196);
          return MEMORY[0x263F8EE78];
        }
        uint64_t v278 = sub_20A6F6EF8(v276);
        uint64_t v280 = v279;
        v597 = (char *)*__swift_project_boxed_opaque_existential_1((void *)v598 + 7, *((void *)v598 + 10));
        v281 = v588;
        sub_20A8C2780();
        v598 = (char *)v278;
        if (v278 >= 0) {
          uint64_t v282 = 1;
        }
        else {
          uint64_t v282 = v280;
        }
        uint64_t v607 = v602 + 8;
        v595 = (char *)(v602 + 40);
        v596 = (char *)v282;
        swift_bridgeObjectRetain();
        unint64_t v602 = MEMORY[0x263F8EE78];
        v283 = v589;
        v284 = v587;
        v285 = (void (*)(char *, char *, uint64_t))v594;
        unint64_t v286 = v599;
        do
        {
          ((void (*)(char *, uint64_t, uint64_t))v612)(v283, v195, v196);
          ((void (*)(char *, void, uint64_t, uint64_t))v605)(v283, 0, 1, v196);
          if (v609(v283, 1, v196) == 1)
          {
            swift_bridgeObjectRelease();
            v287 = *(void (**)(char *, uint64_t))v607;
            v372 = (void (*)(uint64_t, void, uint64_t, uint64_t))v605;
            (*(void (**)(char *, uint64_t))v607)(v281, v196);
            goto LABEL_107;
          }
          v285(v284, v283, v196);
          sub_20A6F6F80();
          if ((sub_20A8CE1F0() & 1) == 0)
          {
            ((void (*)(void, char *, uint64_t))v612)(v604, v284, v196);
            unint64_t v288 = v602;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v288 = sub_20A46D718(0, *(void *)(v288 + 16) + 1, 1, v288);
            }
            unint64_t v290 = *(void *)(v288 + 16);
            unint64_t v289 = *(void *)(v288 + 24);
            if (v290 >= v289 >> 1) {
              unint64_t v288 = sub_20A46D718(v289 > 1, v290 + 1, 1, v288);
            }
            *(void *)(v288 + 16) = v290 + 1;
            unint64_t v602 = v288;
            uint64_t v291 = v611;
            uint64_t v292 = ((uint64_t (*)(char *, void, uint64_t))v285)(&v600[v288 + v290 * v286], v604, v611);
            MEMORY[0x270FA5388](v292);
            *((unsigned char *)&v519 - 32) = (_BYTE)v598;
            uint64_t v293 = (uint64_t)v596;
            *(&v519 - 3) = v284;
            *(&v519 - 2) = (char *)v293;
            uint64_t v295 = v294 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v294 + 16);
            v296 = (os_unfair_lock_s *)(v294 + ((*(unsigned int *)(*(void *)v294 + 48) + 3) & 0x1FFFFFFFCLL));
            os_unfair_lock_lock(v296);
            uint64_t v297 = v585;
            uint64_t v298 = v295;
            uint64_t v299 = v613;
            sub_20A6F79B4(v298, v585);
            uint64_t v613 = v299;
            uint64_t v300 = v297;
            v284 = v587;
            uint64_t v301 = v291;
            os_unfair_lock_unlock(v296);
            v302 = v583;
            ((void (*)(char *, char *, uint64_t))v612)(v583, v284, v291);
            if (v609((char *)v300, 1, v291) == 1)
            {
              v303 = v582;
              v285(v582, v302, v291);
              sub_20A6F7944(v300, &qword_26AC68CC0, MEMORY[0x263F07490]);
            }
            else
            {
              (*(void (**)(char *, uint64_t))v607)(v302, v291);
              v303 = v582;
              v285(v582, (char *)v300, v291);
            }
            v283 = v589;
            v281 = v588;
            (*(void (**)(char *, char *, uint64_t))v595)(v588, v303, v301);
            uint64_t v196 = v301;
            unint64_t v286 = v599;
          }
          v287 = *(void (**)(char *, uint64_t))v607;
          (*(void (**)(char *, uint64_t))v607)(v284, v196);
          v195 += v286;
          uint64_t v202 = (char **)((char *)v202 - 1);
        }
        while (v202);
        v372 = (void (*)(uint64_t, void, uint64_t, uint64_t))v605;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v605)(v283, 1, 1, v196);
        swift_bridgeObjectRelease();
        v287(v281, v196);
LABEL_107:
        unint64_t v614 = v602;
        v373 = v568;
        if (!*(void *)(v602 + 16))
        {
LABEL_111:
          v287(v373, v196);
          v287(v578, v196);
          return v614;
        }
        uint64_t v374 = (uint64_t)v547;
        ((void (*)(char *, char *, uint64_t))v612)(v547, &v600[v602], v196);
        v372(v374, 0, 1, v196);
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v609)(v374, 1, v196);
        if (result == 1) {
          goto LABEL_226;
        }
        uint64_t result = sub_20A6F7944(v374, &qword_26AC68CC0, MEMORY[0x263F07490]);
        if (*(void *)(v614 + 16))
        {
          sub_20A5AB2A4(0, 1);
          uint64_t v196 = v611;
          goto LABEL_111;
        }
        __break(1u);
        goto LABEL_222;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v602 + 56))(v67, 1, 1, v611);
    }
    uint64_t v204 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
    uint64_t v205 = (uint64_t)v67;
    goto LABEL_36;
  }
  uint64_t v593 = a2;
  if (v192 == *MEMORY[0x263F7A840])
  {
    v592 = (char *)*__swift_project_boxed_opaque_existential_1((void *)a3 + 7, *((void *)a3 + 10));
    uint64_t v206 = v600;
    sub_20A8C2780();
    uint64_t v207 = *(void *)(v593 + 16);
    if (v207)
    {
      uint64_t v208 = (char **)(v602 + 16);
      v612 = *(char **)(v602 + 16);
      v591 = (char *)((*(unsigned __int8 *)(v602 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v602 + 80));
      uint64_t v209 = &v591[v593];
      unint64_t v210 = v602 + 56;
      unint64_t v608 = *(void *)(v602 + 72);
      v609 = (unsigned int (*)(char *, uint64_t, uint64_t))(v602 + 48);
      long long v211 = (uint64_t (**)(char *, char **, uint64_t))(v602 + 32);
      v606 = (void (**)(char *, uint64_t))(v602 + 8);
      v590 = (void (**)(char *, char *, uint64_t))(v602 + 40);
      swift_bridgeObjectRetain();
      unint64_t v610 = MEMORY[0x263F8EE78];
      unint64_t v605 = v210;
      v589 = (char *)(v210 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000);
      uint64_t v212 = v611;
      uint64_t v213 = v601;
      unint64_t v214 = v597;
      v603 = v208;
      while (1)
      {
        ((void (*)(char **, char *, uint64_t))v612)(v213, v209, v212);
        v604 = *(void (**)(char *, char *, uint64_t))v605;
        ((void (*)(char **, void, uint64_t, uint64_t))v604)(v213, 0, 1, v212);
        v216 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v609;
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))v609)(v213, 1, v212) == 1) {
          break;
        }
        uint64_t v217 = *v211;
        (*v211)(v214, v213, v212);
        sub_20A6F6F80();
        if ((sub_20A8CE1F0() & 1) == 0)
        {
          ((void (*)(uint64_t, char *, uint64_t))v612)(v607, v214, v212);
          unint64_t v218 = v610;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v218 = sub_20A46D718(0, *(void *)(v218 + 16) + 1, 1, v218);
          }
          unint64_t v220 = *(void *)(v218 + 16);
          unint64_t v219 = *(void *)(v218 + 24);
          if (v220 >= v219 >> 1) {
            unint64_t v218 = sub_20A46D718(v219 > 1, v220 + 1, 1, v218);
          }
          *(void *)(v218 + 16) = v220 + 1;
          unint64_t v610 = v218;
          uint64_t v221 = &v591[v218 + v220 * v608];
          uint64_t v222 = v611;
          uint64_t v223 = v217(v221, (char **)v607, v611);
          v598 = (char *)&v519;
          MEMORY[0x270FA5388](v223);
          *((unsigned char *)&v519 - 32) = 1;
          unint64_t v214 = v597;
          *(&v519 - 3) = v597;
          *(&v519 - 2) = (char *)1;
          uint64_t v225 = v224 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v224 + 16);
          uint64_t v226 = (os_unfair_lock_s *)(v224 + ((*(unsigned int *)(*(void *)v224 + 48) + 3) & 0x1FFFFFFFCLL));
          os_unfair_lock_lock(v226);
          unint64_t v599 = (unint64_t)v217;
          uint64_t v227 = (uint64_t)v596;
          uint64_t v228 = v225;
          uint64_t v229 = v613;
          sub_20A6F79B4(v228, (uint64_t)v596);
          uint64_t v613 = v229;
          uint64_t v230 = v227;
          uint64_t v212 = v222;
          os_unfair_lock_unlock(v226);
          v231 = v595;
          ((void (*)(char *, char *, uint64_t))v612)(v595, v214, v222);
          if (v216(v230, 1, v222) == 1)
          {
            unint64_t v215 = v594;
            ((void (*)(char *, char *, uint64_t))v599)(v594, v231, v212);
            sub_20A6F7944(v230, &qword_26AC68CC0, MEMORY[0x263F07490]);
          }
          else
          {
            (*v606)(v231, v222);
            unint64_t v215 = v594;
            ((void (*)(char *, uint64_t, uint64_t))v599)(v594, v230, v212);
          }
          uint64_t v206 = v600;
          uint64_t v213 = v601;
          (*v590)(v600, v215, v212);
        }
        (*v606)(v214, v212);
        v209 += v608;
        if (!--v207)
        {
          ((void (*)(char **, uint64_t, uint64_t, uint64_t))v604)(v213, 1, 1, v212);
          break;
        }
      }
    }
    else
    {
      v265 = *(void (**)(char **, uint64_t, uint64_t, uint64_t))(v602 + 56);
      swift_bridgeObjectRetain();
      unint64_t v610 = MEMORY[0x263F8EE78];
      uint64_t v212 = v611;
      v265(v601, 1, 1, v611);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v602 + 8))(v206, v212);
    return v610;
  }
  if (v192 == *MEMORY[0x263F7A850])
  {
    v596 = (char *)*__swift_project_boxed_opaque_existential_1((void *)a3 + 7, *((void *)a3 + 10));
    sub_20A8C2780();
    uint64_t v232 = *(void *)(v593 + 16);
    if (v232)
    {
      v233 = (char *)(v602 + 16);
      unint64_t v610 = *(void *)(v602 + 16);
      v594 = (char *)((*(unsigned __int8 *)(v602 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v602 + 80));
      v234 = &v594[v593];
      unint64_t v235 = v602 + 56;
      uint64_t v607 = *(void *)(v602 + 72);
      unint64_t v608 = v602 + 48;
      v236 = (uint64_t (**)(char *, void (**)(char *, uint64_t), uint64_t))(v602 + 32);
      v604 = (void (*)(char *, char *, uint64_t))(v602 + 8);
      v591 = (char *)(v602 + 40);
      swift_bridgeObjectRetain();
      unint64_t v237 = MEMORY[0x263F8EE78];
      v601 = (char **)v235;
      v590 = (void (**)(char *, char *, uint64_t))(v235 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000);
      uint64_t v238 = v611;
      v240 = (char *)v605;
      v239 = v606;
      v595 = v233;
      while (1)
      {
        ((void (*)(void (**)(char *, uint64_t), char *, uint64_t))v610)(v239, v234, v238);
        v600 = *v601;
        ((void (*)(void (**)(char *, uint64_t), void, uint64_t, uint64_t))v600)(v239, 0, 1, v238);
        v242 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v608;
        if ((*(unsigned int (**)(void (**)(char *, uint64_t), uint64_t, uint64_t))v608)(v239, 1, v238) == 1)break; {
        v243 = *v236;
        }
        (*v236)(v240, v239, v238);
        sub_20A6F6F80();
        if ((sub_20A8CE1F0() & 1) == 0)
        {
          ((void (*)(unsigned int (*)(char *, uint64_t, uint64_t), char *, uint64_t))v610)(v609, v240, v238);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v237 = sub_20A46D718(0, *(void *)(v237 + 16) + 1, 1, v237);
          }
          unint64_t v245 = *(void *)(v237 + 16);
          unint64_t v244 = *(void *)(v237 + 24);
          if (v245 >= v244 >> 1) {
            unint64_t v237 = sub_20A46D718(v244 > 1, v245 + 1, 1, v237);
          }
          *(void *)(v237 + 16) = v245 + 1;
          uint64_t v246 = v611;
          uint64_t v247 = v243(&v594[v237 + v245 * v607], (void (**)(char *, uint64_t))v609, v611);
          v597 = (char *)&v519;
          MEMORY[0x270FA5388](v247);
          *((unsigned char *)&v519 - 32) = 1;
          *(&v519 - 3) = v240;
          *(&v519 - 2) = (char *)7;
          uint64_t v249 = v248 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v248 + 16);
          uint64_t v250 = (*(unsigned int *)(*(void *)v248 + 48) + 3) & 0x1FFFFFFFCLL;
          unint64_t v599 = (unint64_t)v243;
          v251 = (os_unfair_lock_s *)(v248 + v250);
          os_unfair_lock_lock((os_unfair_lock_t)(v248 + v250));
          v252 = (void (*)(void, void, void))v603;
          uint64_t v253 = v249;
          uint64_t v254 = v613;
          sub_20A6F79B4(v253, (uint64_t)v603);
          uint64_t v613 = v254;
          uint64_t v255 = (uint64_t)v252;
          v240 = (char *)v605;
          uint64_t v238 = v246;
          os_unfair_lock_unlock(v251);
          v256 = v598;
          ((void (*)(char *, char *, uint64_t))v610)(v598, v240, v246);
          if (v242(v255, 1, v246) == 1)
          {
            v241 = v592;
            ((void (*)(char *, char *, uint64_t))v599)(v592, v256, v246);
            sub_20A6F7944(v255, &qword_26AC68CC0, MEMORY[0x263F07490]);
          }
          else
          {
            (*(void (**)(char *, uint64_t))v604)(v256, v246);
            v241 = v592;
            ((void (*)(char *, uint64_t, uint64_t))v599)(v592, v255, v246);
          }
          v239 = v606;
          (*(void (**)(char *, char *, uint64_t))v591)(v612, v241, v246);
        }
        (*(void (**)(char *, uint64_t))v604)(v240, v238);
        v234 += v607;
        if (!--v232)
        {
          ((void (*)(void (**)(char *, uint64_t), uint64_t, uint64_t, uint64_t))v600)(v239, 1, 1, v238);
          break;
        }
      }
    }
    else
    {
      v345 = *(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t, uint64_t))(v602 + 56);
      swift_bridgeObjectRetain();
      unint64_t v237 = MEMORY[0x263F8EE78];
      uint64_t v238 = v611;
      v345(v606, 1, 1, v611);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v602 + 8))(v612, v238);
    return v237;
  }
  if (v192 == *MEMORY[0x263F7A828] || v192 == *MEMORY[0x263F7A870])
  {
    v601 = (char **)*__swift_project_boxed_opaque_existential_1((void *)a3 + 7, *((void *)a3 + 10));
    sub_20A8C2780();
    uint64_t v320 = *(void *)(v593 + 16);
    if (v320)
    {
      v321 = (char *)(v602 + 16);
      v612 = *(char **)(v602 + 16);
      v598 = (char *)((*(unsigned __int8 *)(v602 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v602 + 80));
      v322 = &v598[v593];
      unint64_t v323 = v602 + 56;
      uint64_t v324 = *(void *)(v602 + 72);
      v609 = (unsigned int (*)(char *, uint64_t, uint64_t))(v602 + 48);
      v325 = (uint64_t (**)(char *, char *, uint64_t))(v602 + 32);
      v606 = (void (**)(char *, uint64_t))(v602 + 8);
      uint64_t v607 = v324;
      v597 = (char *)(v602 + 40);
      swift_bridgeObjectRetain();
      unint64_t v237 = MEMORY[0x263F8EE78];
      unint64_t v605 = v323;
      v596 = (char *)(v323 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000);
      uint64_t v326 = v611;
      v327 = (char *)v590;
      v328 = v586;
      v600 = v321;
      while (1)
      {
        ((void (*)(char *, char *, uint64_t))v612)(v327, v322, v326);
        v604 = *(void (**)(char *, char *, uint64_t))v605;
        ((void (*)(char *, void, uint64_t, uint64_t))v604)(v327, 0, 1, v326);
        v330 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v609;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v609)(v327, 1, v326) == 1) {
          break;
        }
        v331 = *v325;
        (*v325)(v328, v327, v326);
        sub_20A6F6F80();
        if ((sub_20A8CE1F0() & 1) == 0)
        {
          ((void (*)(unint64_t, char *, uint64_t))v612)(v599, v328, v326);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v237 = sub_20A46D718(0, *(void *)(v237 + 16) + 1, 1, v237);
          }
          unint64_t v333 = *(void *)(v237 + 16);
          unint64_t v332 = *(void *)(v237 + 24);
          if (v333 >= v332 >> 1) {
            unint64_t v237 = sub_20A46D718(v332 > 1, v333 + 1, 1, v237);
          }
          *(void *)(v237 + 16) = v333 + 1;
          unint64_t v610 = v237;
          v334 = &v598[v237 + v333 * v607];
          uint64_t v335 = v611;
          uint64_t v336 = v331(v334, (char *)v599, v611);
          v603 = (char **)v331;
          MEMORY[0x270FA5388](v336);
          *((unsigned char *)&v519 - 32) = 2;
          *(&v519 - 3) = v328;
          *(&v519 - 2) = (char *)1;
          uint64_t v338 = v337 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v337 + 16);
          v339 = (os_unfair_lock_s *)(v337 + ((*(unsigned int *)(*(void *)v337 + 48) + 3) & 0x1FFFFFFFCLL));
          os_unfair_lock_lock(v339);
          uint64_t v340 = v584;
          uint64_t v341 = v338;
          uint64_t v342 = v613;
          sub_20A6F79B4(v341, v584);
          uint64_t v613 = v342;
          uint64_t v326 = v335;
          v343 = v339;
          v328 = v586;
          os_unfair_lock_unlock(v343);
          v344 = v580;
          ((void (*)(char *, char *, uint64_t))v612)(v580, v328, v335);
          if (v330(v340, 1, v335) == 1)
          {
            v329 = v579;
            ((void (*)(char *, char *, uint64_t))v603)(v579, v344, v335);
            sub_20A6F7944(v340, &qword_26AC68CC0, MEMORY[0x263F07490]);
          }
          else
          {
            (*v606)(v344, v335);
            v329 = v579;
            ((void (*)(char *, uint64_t, uint64_t))v603)(v579, v340, v335);
          }
          v327 = (char *)v590;
          (*(void (**)(unint64_t, char *, uint64_t))v597)(v608, v329, v335);
          unint64_t v237 = v610;
        }
        (*v606)(v328, v326);
        v322 += v607;
        if (!--v320)
        {
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v604)(v327, 1, 1, v326);
          break;
        }
      }
    }
    else
    {
      v371 = *(void (**)(void (**)(char *, char *, uint64_t), uint64_t, uint64_t, uint64_t))(v602 + 56);
      swift_bridgeObjectRetain();
      unint64_t v237 = MEMORY[0x263F8EE78];
      uint64_t v326 = v611;
      v371(v590, 1, 1, v611);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v602 + 8))(v608, v326);
    return v237;
  }
  if (v192 == *MEMORY[0x263F7A818])
  {
    v603 = (char **)*__swift_project_boxed_opaque_existential_1((void *)a3 + 7, *((void *)a3 + 10));
    sub_20A8C2780();
    uint64_t v257 = *(void *)(v593 + 16);
    if (v257)
    {
      v258 = (char **)(v602 + 16);
      v612 = *(char **)(v602 + 16);
      v600 = (char *)((*(unsigned __int8 *)(v602 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v602 + 80));
      v259 = &v600[v593];
      unint64_t v260 = v602 + 56;
      unint64_t v608 = *(void *)(v602 + 72);
      v609 = (unsigned int (*)(char *, uint64_t, uint64_t))(v602 + 48);
      v261 = (void (**)(char *, char *, uint64_t))(v602 + 32);
      uint64_t v607 = v602 + 8;
      unint64_t v599 = v602 + 40;
      swift_bridgeObjectRetain();
      unint64_t v237 = MEMORY[0x263F8EE78];
      v606 = (void (**)(char *, uint64_t))v260;
      v598 = (char *)(v260 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000);
      uint64_t v262 = v611;
      v263 = v576;
      v264 = v575;
      v601 = v258;
      while (1)
      {
        ((void (*)(char *, char *, uint64_t))v612)(v263, v259, v262);
        unint64_t v605 = (unint64_t)*v606;
        ((void (*)(char *, void, uint64_t, uint64_t))v605)(v263, 0, 1, v262);
        v305 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v609;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v609)(v263, 1, v262) == 1) {
          break;
        }
        v306 = *v261;
        (*v261)(v264, v263, v262);
        sub_20A6F6F80();
        if ((sub_20A8CE1F0() & 1) == 0)
        {
          ((void (*)(char *, char *, uint64_t))v612)(v581, v264, v262);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v237 = sub_20A46D718(0, *(void *)(v237 + 16) + 1, 1, v237);
          }
          unint64_t v308 = *(void *)(v237 + 16);
          unint64_t v307 = *(void *)(v237 + 24);
          if (v308 >= v307 >> 1) {
            unint64_t v237 = sub_20A46D718(v307 > 1, v308 + 1, 1, v237);
          }
          *(void *)(v237 + 16) = v308 + 1;
          unint64_t v610 = v237;
          v309 = &v600[v237 + v308 * v608];
          uint64_t v310 = v611;
          uint64_t v311 = ((uint64_t (*)(char *, char *, uint64_t))v306)(v309, v581, v611);
          v604 = v306;
          MEMORY[0x270FA5388](v311);
          *((unsigned char *)&v519 - 32) = 2;
          *(&v519 - 3) = v264;
          *(&v519 - 2) = (char *)2;
          uint64_t v313 = v312 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v312 + 16);
          v314 = (os_unfair_lock_s *)(v312 + ((*(unsigned int *)(*(void *)v312 + 48) + 3) & 0x1FFFFFFFCLL));
          os_unfair_lock_lock(v314);
          uint64_t v315 = v573;
          uint64_t v316 = v313;
          uint64_t v317 = v613;
          sub_20A6F79B4(v316, v573);
          uint64_t v613 = v317;
          uint64_t v262 = v310;
          v318 = v314;
          v264 = v575;
          os_unfair_lock_unlock(v318);
          v319 = v572;
          ((void (*)(char *, char *, uint64_t))v612)(v572, v264, v310);
          if (v305(v315, 1, v310) == 1)
          {
            v304 = v570;
            v604(v570, v319, v310);
            sub_20A6F7944(v315, &qword_26AC68CC0, MEMORY[0x263F07490]);
          }
          else
          {
            (*(void (**)(char *, uint64_t))v607)(v319, v310);
            v304 = v570;
            v604(v570, (char *)v315, v310);
          }
          v263 = v576;
          (*(void (**)(char *, char *, uint64_t))v599)(v591, v304, v310);
          unint64_t v237 = v610;
        }
        (*(void (**)(char *, uint64_t))v607)(v264, v262);
        v259 += v608;
        if (!--v257)
        {
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v605)(v263, 1, 1, v262);
          break;
        }
      }
    }
    else
    {
      v400 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v602 + 56);
      swift_bridgeObjectRetain();
      unint64_t v237 = MEMORY[0x263F8EE78];
      uint64_t v262 = v611;
      v400(v576, 1, 1, v611);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v602 + 8))(v591, v262);
    return v237;
  }
  if (v192 == *MEMORY[0x263F7A848])
  {
    v603 = (char **)*__swift_project_boxed_opaque_existential_1((void *)a3 + 7, *((void *)a3 + 10));
    sub_20A8C2780();
    uint64_t v347 = *(void *)(v593 + 16);
    if (v347)
    {
      v348 = (char **)(v602 + 16);
      v612 = *(char **)(v602 + 16);
      v600 = (char *)((*(unsigned __int8 *)(v602 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v602 + 80));
      v349 = &v600[v593];
      unint64_t v350 = v602 + 56;
      unint64_t v608 = *(void *)(v602 + 72);
      v609 = (unsigned int (*)(char *, uint64_t, uint64_t))(v602 + 48);
      v351 = (void (**)(char *, char *, uint64_t))(v602 + 32);
      uint64_t v607 = v602 + 8;
      unint64_t v599 = v602 + 40;
      swift_bridgeObjectRetain();
      unint64_t v237 = MEMORY[0x263F8EE78];
      v606 = (void (**)(char *, uint64_t))v350;
      v598 = (char *)(v350 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000);
      uint64_t v352 = v611;
      v353 = v567;
      v354 = v566;
      v601 = v348;
      while (1)
      {
        ((void (*)(char *, char *, uint64_t))v612)(v353, v349, v352);
        unint64_t v605 = (unint64_t)*v606;
        ((void (*)(char *, void, uint64_t, uint64_t))v605)(v353, 0, 1, v352);
        v356 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v609;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v609)(v353, 1, v352) == 1) {
          break;
        }
        v357 = *v351;
        (*v351)(v354, v353, v352);
        sub_20A6F6F80();
        if ((sub_20A8CE1F0() & 1) == 0)
        {
          ((void (*)(char *, char *, uint64_t))v612)(v571, v354, v352);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v237 = sub_20A46D718(0, *(void *)(v237 + 16) + 1, 1, v237);
          }
          unint64_t v359 = *(void *)(v237 + 16);
          unint64_t v358 = *(void *)(v237 + 24);
          if (v359 >= v358 >> 1) {
            unint64_t v237 = sub_20A46D718(v358 > 1, v359 + 1, 1, v237);
          }
          *(void *)(v237 + 16) = v359 + 1;
          unint64_t v610 = v237;
          v360 = &v600[v237 + v359 * v608];
          uint64_t v361 = v611;
          uint64_t v362 = ((uint64_t (*)(char *, char *, uint64_t))v357)(v360, v571, v611);
          v604 = v357;
          MEMORY[0x270FA5388](v362);
          *((unsigned char *)&v519 - 32) = 2;
          *(&v519 - 3) = v354;
          *(&v519 - 2) = (char *)4;
          uint64_t v364 = v363 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v363 + 16);
          v365 = (os_unfair_lock_s *)(v363 + ((*(unsigned int *)(*(void *)v363 + 48) + 3) & 0x1FFFFFFFCLL));
          os_unfair_lock_lock(v365);
          uint64_t v366 = v558;
          uint64_t v367 = v364;
          uint64_t v368 = v613;
          sub_20A6F79B4(v367, v558);
          uint64_t v613 = v368;
          uint64_t v352 = v361;
          v369 = v365;
          v354 = v566;
          os_unfair_lock_unlock(v369);
          v370 = v557;
          ((void (*)(char *, char *, uint64_t))v612)(v557, v354, v361);
          if (v356(v366, 1, v361) == 1)
          {
            v355 = v559;
            v604(v559, v370, v361);
            sub_20A6F7944(v366, &qword_26AC68CC0, MEMORY[0x263F07490]);
          }
          else
          {
            (*(void (**)(char *, uint64_t))v607)(v370, v361);
            v355 = v559;
            v604(v559, (char *)v366, v361);
          }
          v353 = v567;
          (*(void (**)(char *, char *, uint64_t))v599)(v577, v355, v361);
          unint64_t v237 = v610;
        }
        (*(void (**)(char *, uint64_t))v607)(v354, v352);
        v349 += v608;
        if (!--v347)
        {
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v605)(v353, 1, 1, v352);
          break;
        }
      }
    }
    else
    {
      v426 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v602 + 56);
      swift_bridgeObjectRetain();
      unint64_t v237 = MEMORY[0x263F8EE78];
      uint64_t v352 = v611;
      v426(v567, 1, 1, v611);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v602 + 8))(v577, v352);
    return v237;
  }
  if (v192 == *MEMORY[0x263F7A860])
  {
    v603 = (char **)*__swift_project_boxed_opaque_existential_1((void *)a3 + 7, *((void *)a3 + 10));
    sub_20A8C2780();
    uint64_t v376 = *(void *)(v593 + 16);
    if (v376)
    {
      v377 = (char **)(v602 + 16);
      v612 = *(char **)(v602 + 16);
      v600 = (char *)((*(unsigned __int8 *)(v602 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v602 + 80));
      v378 = &v600[v593];
      unint64_t v379 = v602 + 56;
      unint64_t v608 = *(void *)(v602 + 72);
      v609 = (unsigned int (*)(char *, uint64_t, uint64_t))(v602 + 48);
      v380 = (void (**)(char *, char *, uint64_t))(v602 + 32);
      uint64_t v607 = v602 + 8;
      unint64_t v599 = v602 + 40;
      swift_bridgeObjectRetain();
      unint64_t v237 = MEMORY[0x263F8EE78];
      v606 = (void (**)(char *, uint64_t))v379;
      v598 = (char *)(v379 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000);
      uint64_t v381 = v611;
      v382 = v555;
      v383 = v554;
      v601 = v377;
      while (1)
      {
        ((void (*)(char *, char *, uint64_t))v612)(v382, v378, v381);
        unint64_t v605 = (unint64_t)*v606;
        ((void (*)(char *, void, uint64_t, uint64_t))v605)(v382, 0, 1, v381);
        v385 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v609;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v609)(v382, 1, v381) == 1) {
          break;
        }
        v386 = *v380;
        (*v380)(v383, v382, v381);
        sub_20A6F6F80();
        if ((sub_20A8CE1F0() & 1) == 0)
        {
          ((void (*)(char *, char *, uint64_t))v612)(v560, v383, v381);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v237 = sub_20A46D718(0, *(void *)(v237 + 16) + 1, 1, v237);
          }
          unint64_t v388 = *(void *)(v237 + 16);
          unint64_t v387 = *(void *)(v237 + 24);
          if (v388 >= v387 >> 1) {
            unint64_t v237 = sub_20A46D718(v387 > 1, v388 + 1, 1, v237);
          }
          *(void *)(v237 + 16) = v388 + 1;
          unint64_t v610 = v237;
          v389 = &v600[v237 + v388 * v608];
          uint64_t v390 = v611;
          uint64_t v391 = ((uint64_t (*)(char *, char *, uint64_t))v386)(v389, v560, v611);
          v604 = v386;
          MEMORY[0x270FA5388](v391);
          *((unsigned char *)&v519 - 32) = 2;
          *(&v519 - 3) = v383;
          *(&v519 - 2) = (char *)6;
          uint64_t v393 = v392 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v392 + 16);
          v394 = (os_unfair_lock_s *)(v392 + ((*(unsigned int *)(*(void *)v392 + 48) + 3) & 0x1FFFFFFFCLL));
          os_unfair_lock_lock(v394);
          uint64_t v395 = v553;
          uint64_t v396 = v393;
          uint64_t v397 = v613;
          sub_20A6F79B4(v396, v553);
          uint64_t v613 = v397;
          uint64_t v381 = v390;
          v398 = v394;
          v383 = v554;
          os_unfair_lock_unlock(v398);
          v399 = v552;
          ((void (*)(char *, char *, uint64_t))v612)(v552, v383, v390);
          if (v385(v395, 1, v390) == 1)
          {
            v384 = v550;
            v604(v550, v399, v390);
            sub_20A6F7944(v395, &qword_26AC68CC0, MEMORY[0x263F07490]);
          }
          else
          {
            (*(void (**)(char *, uint64_t))v607)(v399, v390);
            v384 = v550;
            v604(v550, (char *)v395, v390);
          }
          v382 = v555;
          (*(void (**)(char *, char *, uint64_t))v599)(v569, v384, v390);
          unint64_t v237 = v610;
        }
        (*(void (**)(char *, uint64_t))v607)(v383, v381);
        v378 += v608;
        if (!--v376)
        {
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v605)(v382, 1, 1, v381);
          break;
        }
      }
    }
    else
    {
      v427 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v602 + 56);
      swift_bridgeObjectRetain();
      unint64_t v237 = MEMORY[0x263F8EE78];
      uint64_t v381 = v611;
      v427(v555, 1, 1, v611);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v602 + 8))(v569, v381);
    return v237;
  }
  if (v192 != *MEMORY[0x263F7A868])
  {
    if (v192 != *MEMORY[0x263F7A858] && v192 != *MEMORY[0x263F7A830])
    {
      (*(void (**)(char *, uint64_t))(v188 + 8))(v191, v187);
      return MEMORY[0x263F8EE78];
    }
    unint64_t v608 = *(void *)(v593 + 16);
    if (v608)
    {
      v598 = a3;
      uint64_t v607 = v6;
      unint64_t v428 = v602;
      v597 = (char *)((*(unsigned __int8 *)(v428 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v428 + 80));
      v429 = *(char **)(v602 + 16);
      uint64_t v430 = (uint64_t)v530;
      v596 = &v597[v593];
      uint64_t v431 = v611;
      v612 = v429;
      ((void (*)(char *))v429)(v530);
      v432 = *(char ***)(v428 + 56);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v432)(v430, 0, 1, v431);
      v603 = *(char ***)(v428 + 48);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v603)(v430, 1, v431) == 1)
      {
        a3 = v598;
        v433 = v432;
      }
      else
      {
        v604 = (void (*)(char *, char *, uint64_t))(v428 + 16);
        v600 = *(char **)(v428 + 32);
        ((void (*)(char *, uint64_t, uint64_t))v600)(v102, v430, v431);
        v609 = (unsigned int (*)(char *, uint64_t, uint64_t))(v428 + 32);
        unint64_t v605 = *(void *)(v428 + 72);
        uint64_t v430 = (uint64_t)v521;
        ((void (*)(char *, char *, uint64_t))v612)(v521, &v596[v605 * (v608 - 1)], v431);
        v601 = v432;
        unint64_t v599 = v428 + 56;
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v432)(v430, 0, 1, v431);
        int v436 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v603)(v430, 1, v431);
        v606 = (void (**)(char *, uint64_t))(v428 + 48);
        if (v436 != 1)
        {
          v595 = v18;
          v460 = v600;
          ((void (*)(char *, uint64_t, uint64_t))v600)(v99, v430, v431);
          v461 = v562;
          sub_20A8C2A40();
          sub_20A6F78E0(0, (unint64_t *)&qword_26AC7FE70, MEMORY[0x263F07908], MEMORY[0x263F8E0F8]);
          uint64_t v462 = sub_20A8C2A60();
          uint64_t v463 = *(void *)(v462 - 8);
          unint64_t v464 = (*(unsigned __int8 *)(v463 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v463 + 80);
          uint64_t v465 = swift_allocObject();
          *(_OWORD *)(v465 + 16) = xmmword_20A8D3DC0;
          (*(void (**)(unint64_t, void, uint64_t))(v463 + 104))(v465 + v464, *MEMORY[0x263F078A0], v462);
          sub_20A7BA4B0(v465);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
          v466 = v520;
          v592 = v99;
          sub_20A8C29C0();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v563 + 8))(v461, v565);
          uint64_t v467 = sub_20A8C2260();
          LOBYTE(v462) = v468;
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v564 + 8))(v466, v607);
          v519 = v102;
          if (v462)
          {
            v598 = (char *)*__swift_project_boxed_opaque_existential_1((void *)v598 + 7, *((void *)v598 + 10));
            sub_20A8C2780();
            v494 = (void (**)(char *, uint64_t))(v602 + 8);
            v602 += 40;
            swift_bridgeObjectRetain();
            unint64_t v610 = MEMORY[0x263F8EE78];
            uint64_t v495 = v611;
            v496 = v529;
            v497 = v601;
            v498 = v535;
            uint64_t v499 = (uint64_t)v596;
            v500 = (unsigned int (*)(char *, uint64_t, uint64_t))v603;
            uint64_t v607 = (uint64_t)v494;
            do
            {
              ((void (*)(char *, uint64_t, uint64_t))v612)(v496, v499, v495);
              ((void (*)(char *, void, uint64_t, uint64_t))v497)(v496, 0, 1, v495);
              if (v500(v496, 1, v495) == 1)
              {
                swift_bridgeObjectRelease();
                v502 = *v494;
                goto LABEL_218;
              }
              ((void (*)(char *, char *, uint64_t))v600)(v498, v496, v495);
              sub_20A6F6F80();
              if ((sub_20A8CE1F0() & 1) == 0)
              {
                ((void (*)(char *, char *, uint64_t))v612)(v533, v498, v495);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v610 = sub_20A46D718(0, *(void *)(v610 + 16) + 1, 1, v610);
                }
                v503 = v600;
                unint64_t v505 = *(void *)(v610 + 16);
                unint64_t v504 = *(void *)(v610 + 24);
                if (v505 >= v504 >> 1) {
                  unint64_t v610 = sub_20A46D718(v504 > 1, v505 + 1, 1, v610);
                }
                unint64_t v506 = v610;
                uint64_t v507 = v611;
                *(void *)(v610 + 16) = v505 + 1;
                uint64_t v508 = ((uint64_t (*)(char *, char *, uint64_t))v503)(&v597[v506 + v505 * v605], v533, v507);
                MEMORY[0x270FA5388](v508);
                *((unsigned char *)&v519 - 32) = 3;
                v509 = v535;
                *(&v519 - 3) = v535;
                *(&v519 - 2) = (char *)3;
                uint64_t v511 = v510 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v510 + 16);
                v512 = (os_unfair_lock_s *)(v510 + ((*(unsigned int *)(*(void *)v510 + 48) + 3) & 0x1FFFFFFFCLL));
                os_unfair_lock_lock(v512);
                uint64_t v513 = v526;
                uint64_t v514 = v511;
                uint64_t v515 = v613;
                sub_20A6F79B4(v514, v526);
                uint64_t v613 = v515;
                uint64_t v495 = v507;
                os_unfair_lock_unlock(v512);
                v516 = v525;
                ((void (*)(char *, char *, uint64_t))v612)(v525, v509, v495);
                v500 = (unsigned int (*)(char *, uint64_t, uint64_t))v603;
                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v603)(v513, 1, v495) == 1)
                {
                  v501 = v527;
                  ((void (*)(char *, char *, uint64_t))v600)(v527, v516, v495);
                  sub_20A6F7944(v513, &qword_26AC68CC0, MEMORY[0x263F07490]);
                }
                else
                {
                  (*(void (**)(char *, uint64_t))v607)(v516, v495);
                  v501 = v527;
                  ((void (*)(char *, uint64_t, uint64_t))v600)(v527, v513, v495);
                }
                v496 = v529;
                v497 = v601;
                (*(void (**)(char *, char *, uint64_t))v602)(v536, v501, v495);
                v498 = v535;
              }
              v494 = (void (**)(char *, uint64_t))v607;
              v502 = *(void (**)(char *, uint64_t))v607;
              (*(void (**)(char *, uint64_t))v607)(v498, v495);
              v499 += v605;
              --v608;
            }
            while (v608);
            ((void (*)(char *, uint64_t, uint64_t, uint64_t))v497)(v496, 1, 1, v495);
            swift_bridgeObjectRelease();
LABEL_218:
            v517 = v592;
            v502(v536, v495);
            v502(v517, v495);
            v502(v519, v495);
            return v610;
          }
          float v469 = ceilf((float)v467 / 5.0);
          v470 = v601;
          uint64_t v471 = (uint64_t)v596;
          if ((~LODWORD(v469) & 0x7F800000) != 0)
          {
            uint64_t v472 = v611;
            v473 = v595;
            v474 = v528;
            if (v469 > -9.2234e18)
            {
              unint64_t v475 = v602;
              if (v469 < 9.2234e18)
              {
                uint64_t v476 = (uint64_t)v469;
                if ((uint64_t)v469 <= 1) {
                  uint64_t v476 = 1;
                }
                v594 = (char *)v476;
                v598 = (char *)*__swift_project_boxed_opaque_existential_1((void *)v598 + 7, *((void *)v598 + 10));
                sub_20A8C2780();
                unint64_t v602 = v475 + 40;
                swift_bridgeObjectRetain();
                unint64_t v610 = MEMORY[0x263F8EE78];
                uint64_t v607 = v475 + 8;
                v591 = (char *)((v475 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
                v477 = v534;
                do
                {
                  ((void (*)(char *, uint64_t, uint64_t))v612)(v473, v471, v472);
                  ((void (*)(char *, void, uint64_t, uint64_t))v470)(v473, 0, 1, v472);
                  if (((unsigned int (*)(char *, uint64_t, uint64_t))v603)(v473, 1, v472) == 1)
                  {
                    swift_bridgeObjectRelease();
                    v479 = *(void (**)(char *, uint64_t))v607;
                    goto LABEL_220;
                  }
                  ((void (*)(char *, char *, uint64_t))v460)(v477, v473, v472);
                  sub_20A6F6F80();
                  if ((sub_20A8CE1F0() & 1) == 0)
                  {
                    ((void (*)(char *, char *, uint64_t))v612)(v532, v477, v472);
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      unint64_t v610 = sub_20A46D718(0, *(void *)(v610 + 16) + 1, 1, v610);
                    }
                    unint64_t v481 = *(void *)(v610 + 16);
                    unint64_t v480 = *(void *)(v610 + 24);
                    if (v481 >= v480 >> 1) {
                      unint64_t v610 = sub_20A46D718(v480 > 1, v481 + 1, 1, v610);
                    }
                    unint64_t v482 = v610;
                    uint64_t v483 = v611;
                    *(void *)(v610 + 16) = v481 + 1;
                    uint64_t v484 = ((uint64_t (*)(char *, char *, uint64_t))v460)(&v597[v482 + v481 * v605], v532, v483);
                    MEMORY[0x270FA5388](v484);
                    *((unsigned char *)&v519 - 32) = 3;
                    v485 = v534;
                    v486 = v594;
                    *(&v519 - 3) = v534;
                    *(&v519 - 2) = v486;
                    uint64_t v488 = v487 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v487 + 16);
                    v489 = (os_unfair_lock_s *)(v487
                                              + ((*(unsigned int *)(*(void *)v487 + 48) + 3) & 0x1FFFFFFFCLL));
                    os_unfair_lock_lock(v489);
                    uint64_t v490 = v524;
                    uint64_t v491 = v488;
                    uint64_t v492 = v613;
                    sub_20A6F79B4(v491, v524);
                    uint64_t v613 = v492;
                    uint64_t v472 = v483;
                    os_unfair_lock_unlock(v489);
                    v493 = v523;
                    ((void (*)(char *, char *, uint64_t))v612)(v523, v485, v472);
                    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v603)(v490, 1, v472) == 1)
                    {
                      v478 = v522;
                      ((void (*)(char *, char *, uint64_t))v460)(v522, v493, v472);
                      sub_20A6F7944(v490, &qword_26AC68CC0, MEMORY[0x263F07490]);
                    }
                    else
                    {
                      (*(void (**)(char *, uint64_t))v607)(v493, v472);
                      v478 = v522;
                      ((void (*)(char *, uint64_t, uint64_t))v460)(v522, v490, v472);
                    }
                    v473 = v595;
                    v470 = v601;
                    v474 = v528;
                    (*(void (**)(char *, char *, uint64_t))v602)(v528, v478, v472);
                    v477 = v534;
                  }
                  v479 = *(void (**)(char *, uint64_t))v607;
                  (*(void (**)(char *, uint64_t))v607)(v477, v472);
                  v471 += v605;
                  --v608;
                }
                while (v608);
                ((void (*)(char *, uint64_t, uint64_t, uint64_t))v470)(v473, 1, 1, v472);
                swift_bridgeObjectRelease();
LABEL_220:
                v518 = v592;
                v479(v474, v472);
                v479(v518, v472);
                v479(v519, v472);
                return v610;
              }
              goto LABEL_225;
            }
LABEL_224:
            __break(1u);
LABEL_225:
            __break(1u);
LABEL_226:
            __break(1u);
            goto LABEL_227;
          }
LABEL_223:
          __break(1u);
          goto LABEL_224;
        }
        (*(void (**)(char *, uint64_t))(v428 + 8))(v102, v431);
        a3 = v598;
        v433 = v601;
      }
    }
    else
    {
      v433 = *(char ***)(v602 + 56);
      uint64_t v430 = (uint64_t)v530;
      uint64_t v431 = v611;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v433)(v530, 1, 1, v611);
    }
    sub_20A6F7944(v430, &qword_26AC68CC0, MEMORY[0x263F07490]);
    v600 = (char *)*__swift_project_boxed_opaque_existential_1((void *)a3 + 7, *((void *)a3 + 10));
    sub_20A8C2780();
    v437 = v540;
    unint64_t v438 = v608;
    if (v608)
    {
      v609 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v602 + 16);
      unint64_t v599 = (*(unsigned __int8 *)(v602 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v602 + 80);
      uint64_t v439 = v593 + v599;
      v606 = *(void (***)(char *, uint64_t))(v602 + 72);
      uint64_t v607 = v602 + 48;
      v440 = (uint64_t (**)(char *, char *, uint64_t))(v602 + 32);
      v604 = (void (*)(char *, char *, uint64_t))(v602 + 56);
      unint64_t v605 = v602 + 8;
      v612 = (char *)(v602 + 16);
      v598 = (char *)(v602 + 40);
      swift_bridgeObjectRetain();
      unint64_t v237 = MEMORY[0x263F8EE78];
      v601 = v433;
      while (1)
      {
        v609(v437, v439, v431);
        ((void (*)(char *, void, uint64_t, uint64_t))v433)(v437, 0, 1, v431);
        v442 = *(void (**)(char *, uint64_t))v607;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v607)(v437, 1, v431) == 1) {
          break;
        }
        v443 = v549;
        v444 = *v440;
        (*v440)(v549, v437, v431);
        sub_20A6F6F80();
        if ((sub_20A8CE1F0() & 1) == 0)
        {
          v609(v541, (uint64_t)v443, v431);
          v445 = v443;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v237 = sub_20A46D718(0, *(void *)(v237 + 16) + 1, 1, v237);
          }
          unint64_t v447 = *(void *)(v237 + 16);
          unint64_t v446 = *(void *)(v237 + 24);
          unint64_t v608 = v438;
          if (v447 >= v446 >> 1) {
            unint64_t v237 = sub_20A46D718(v446 > 1, v447 + 1, 1, v237);
          }
          *(void *)(v237 + 16) = v447 + 1;
          unint64_t v610 = v237;
          unint64_t v448 = v237 + v599 + v447 * (void)v606;
          uint64_t v449 = v611;
          uint64_t v450 = v444((char *)v448, v541, v611);
          MEMORY[0x270FA5388](v450);
          *((unsigned char *)&v519 - 32) = 3;
          *(&v519 - 3) = v445;
          *(&v519 - 2) = (char *)3;
          uint64_t v452 = v451 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v451 + 16);
          v453 = (os_unfair_lock_s *)(v451 + ((*(unsigned int *)(*(void *)v451 + 48) + 3) & 0x1FFFFFFFCLL));
          os_unfair_lock_lock(v453);
          v603 = (char **)v444;
          uint64_t v454 = v539;
          uint64_t v455 = v452;
          uint64_t v456 = v613;
          sub_20A6F6FD8(v455, v539);
          uint64_t v613 = v456;
          uint64_t v457 = v454;
          uint64_t v431 = v449;
          os_unfair_lock_unlock(v453);
          v458 = v538;
          v609(v538, (uint64_t)v445, v449);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v442)(v457, 1, v449) == 1)
          {
            v441 = v537;
            ((void (*)(char *, char *, uint64_t))v603)(v537, v458, v449);
            sub_20A6F7944(v457, &qword_26AC68CC0, MEMORY[0x263F07490]);
          }
          else
          {
            (*(void (**)(char *, uint64_t))v605)(v458, v449);
            v441 = v537;
            ((void (*)(char *, uint64_t, uint64_t))v603)(v537, v457, v449);
          }
          v433 = v601;
          v437 = v540;
          unint64_t v438 = v608;
          (*(void (**)(char *, char *, uint64_t))v598)(v548, v441, v449);
          unint64_t v237 = v610;
        }
        (*(void (**)(char *, uint64_t))v605)(v549, v431);
        v439 += (uint64_t)v606;
        if (!--v438) {
          goto LABEL_182;
        }
      }
      unint64_t v459 = v602;
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v237 = MEMORY[0x263F8EE78];
LABEL_182:
      unint64_t v459 = v602;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v433)(v437, 1, 1, v431);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v459 + 8))(v548, v431);
    return v237;
  }
  v603 = (char **)*__swift_project_boxed_opaque_existential_1((void *)a3 + 7, *((void *)a3 + 10));
  sub_20A8C2780();
  uint64_t v401 = *(void *)(v593 + 16);
  uint64_t v402 = v611;
  if (v401)
  {
    v403 = (char **)(v602 + 16);
    v612 = *(char **)(v602 + 16);
    v600 = (char *)((*(unsigned __int8 *)(v602 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v602 + 80));
    v404 = &v600[v593];
    unint64_t v405 = v602 + 56;
    unint64_t v608 = *(void *)(v602 + 72);
    v609 = (unsigned int (*)(char *, uint64_t, uint64_t))(v602 + 48);
    v406 = (void (**)(char *, char *, uint64_t))(v602 + 32);
    uint64_t v607 = v602 + 8;
    unint64_t v599 = v602 + 40;
    swift_bridgeObjectRetain();
    unint64_t v610 = MEMORY[0x263F8EE78];
    v606 = (void (**)(char *, uint64_t))v405;
    v598 = (char *)(v405 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000);
    v407 = v546;
    v408 = v545;
    v601 = v403;
    while (1)
    {
      ((void (*)(char *, char *, uint64_t))v612)(v407, v404, v402);
      v410 = *v606;
      ((void (*)(char *, void, uint64_t, uint64_t))*v606)(v407, 0, 1, v402);
      v411 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v609;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v609)(v407, 1, v402) == 1) {
        break;
      }
      v412 = *v406;
      (*v406)(v408, v407, v402);
      sub_20A6F6F80();
      if ((sub_20A8CE1F0() & 1) == 0)
      {
        ((void (*)(char *, char *, uint64_t))v612)(v551, v408, v402);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v610 = sub_20A46D718(0, *(void *)(v610 + 16) + 1, 1, v610);
        }
        unint64_t v414 = *(void *)(v610 + 16);
        unint64_t v413 = *(void *)(v610 + 24);
        unint64_t v605 = (unint64_t)v410;
        if (v414 >= v413 >> 1) {
          unint64_t v610 = sub_20A46D718(v413 > 1, v414 + 1, 1, v610);
        }
        unint64_t v415 = v610;
        uint64_t v416 = v611;
        *(void *)(v610 + 16) = v414 + 1;
        uint64_t v417 = ((uint64_t (*)(char *, char *, uint64_t))v412)(&v600[v415 + v414 * v608], v551, v416);
        v604 = v412;
        MEMORY[0x270FA5388](v417);
        *((unsigned char *)&v519 - 32) = 3;
        *(&v519 - 3) = v408;
        *(&v519 - 2) = (char *)1;
        uint64_t v419 = v418 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v418 + 16);
        v420 = (os_unfair_lock_s *)(v418 + ((*(unsigned int *)(*(void *)v418 + 48) + 3) & 0x1FFFFFFFCLL));
        os_unfair_lock_lock(v420);
        uint64_t v421 = v543;
        uint64_t v422 = v419;
        uint64_t v423 = v613;
        sub_20A6F79B4(v422, v543);
        uint64_t v613 = v423;
        uint64_t v424 = v421;
        v408 = v545;
        uint64_t v402 = v416;
        os_unfair_lock_unlock(v420);
        v425 = v542;
        ((void (*)(char *, char *, uint64_t))v612)(v542, v408, v416);
        if (v411(v424, 1, v416) == 1)
        {
          v409 = v544;
          v604(v544, v425, v416);
          sub_20A6F7944(v424, &qword_26AC68CC0, MEMORY[0x263F07490]);
        }
        else
        {
          (*(void (**)(char *, uint64_t))v607)(v425, v416);
          v409 = v544;
          v604(v544, (char *)v424, v416);
        }
        v407 = v546;
        (*(void (**)(char *, char *, uint64_t))v599)(v556, v409, v416);
        v410 = (void (*)(char *, uint64_t))v605;
      }
      (*(void (**)(char *, uint64_t))v607)(v408, v402);
      v404 += v608;
      if (!--v401)
      {
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v410)(v407, 1, 1, v402);
        break;
      }
    }
  }
  else
  {
    v410 = *(void (**)(char *, uint64_t))(v602 + 56);
    swift_bridgeObjectRetain();
    unint64_t v610 = MEMORY[0x263F8EE78];
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v410)(v546, 1, 1, v402);
  }
  swift_bridgeObjectRelease();
  unint64_t v434 = v602;
  (*(void (**)(char *, uint64_t))(v602 + 8))(v556, v402);
  unint64_t v237 = v610;
  unint64_t v614 = v610;
  if (*(void *)(v610 + 16) <= 5uLL) {
    return v237;
  }
  uint64_t v435 = (uint64_t)v531;
  (*(void (**)(char *, unint64_t, uint64_t))(v434 + 16))(v531, v610 + ((*(unsigned __int8 *)(v434 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v434 + 80)), v402);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v410)(v435, 0, 1, v402);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v434 + 48))(v435, 1, v402);
  if (result != 1)
  {
    uint64_t result = sub_20A6F7944(v435, &qword_26AC68CC0, MEMORY[0x263F07490]);
    if (*(void *)(v614 + 16))
    {
      sub_20A5AB2A4(0, 1);
      return v614;
    }
LABEL_222:
    __break(1u);
    goto LABEL_223;
  }
LABEL_227:
  __break(1u);
  return result;
}

uint64_t sub_20A6F6EF8(uint64_t result)
{
  if (result < 7) {
    return 0;
  }
  float v1 = ceilf((float)result / 5.0);
  if ((~LODWORD(v1) & 0x7F800000) != 0)
  {
    if (v1 > -9.2234e18)
    {
      if (v1 < 9.2234e18) {
        return 0x8000000000000000;
      }
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_20A6F6F64(uint64_t a1)
{
  return sub_20A8C1198(a1, *(void *)(v1 + 16));
}

unint64_t sub_20A6F6F80()
{
  unint64_t result = qword_26AC68CA0;
  if (!qword_26AC68CA0)
  {
    sub_20A8C2800();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC68CA0);
  }
  return result;
}

uint64_t sub_20A6F6FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A8C1290(a1, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_20A6F6FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v71 = a2;
  uint64_t v74 = sub_20A8C2800();
  uint64_t v69 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  uint64_t v72 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v73 = (char *)&v65 - v6;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A6F78E0(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v70 = (void (*)(char *, uint64_t))((char *)&v65 - v9);
  uint64_t v10 = sub_20A8C3E10();
  uint64_t v75 = *(void *)(v10 - 8);
  uint64_t v76 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v67 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6F78E0(0, (unint64_t *)&qword_26AC68F68, MEMORY[0x263F7AE98], v7);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v65 - v13;
  uint64_t v15 = sub_20A8C3CA0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v68 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v66 = (char *)&v65 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v65 - v21;
  uint64_t v23 = sub_20A8C2BC0();
  uint64_t v24 = *(void *)(v23 - 8);
  double v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v65 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v24 + 16))(v27, a3, v23, v25);
  int v28 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v27, v23);
  LODWORD(a3) = *MEMORY[0x263F7A838];
  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
  uint64_t v29 = sub_20A8C3CD0();
  unint64_t v30 = v29;
  if (v28 != a3) {
    return v30;
  }
  uint64_t v31 = *(void *)(v29 + 16);
  if (v31)
  {
    uint64_t v32 = v16;
    uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v16 + 16);
    unint64_t v34 = v29
        + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))
        + *(void *)(v16 + 72) * (v31 - 1);
    uint64_t v35 = v15;
    v33(v14, v34, v15);
    uint64_t v36 = 0;
  }
  else
  {
    uint64_t v36 = 1;
    uint64_t v32 = v16;
    uint64_t v35 = v15;
  }
  uint64_t v37 = v22;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v14, v36, 1, v35);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v14, 1, v35) == 1)
  {
    sub_20A6F7944((uint64_t)v14, (unint64_t *)&qword_26AC68F68, MEMORY[0x263F7AE98]);
    return sub_20A8C3CD0();
  }
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  v38(v22, v14, v35);
  unint64_t v30 = sub_20A8C3CD0();
  uint64_t v39 = v70;
  sub_20A4BECB4(v71, (uint64_t)v70);
  uint64_t v40 = v75;
  uint64_t v41 = v76;
  if ((*(unsigned int (**)(void (*)(char *, uint64_t), uint64_t, uint64_t))(v75 + 48))(v39, 1, v76) != 1)
  {
    uint64_t v65 = v38;
    uint64_t v71 = v32 + 32;
    uint64_t v42 = v67;
    (*(void (**)(char *, void (*)(char *, uint64_t), uint64_t))(v40 + 32))(v67, v39, v41);
    uint64_t v43 = v73;
    sub_20A8C3C60();
    uint64_t v44 = v72;
    sub_20A8C3DA0();
    char v45 = sub_20A8C2750();
    uint64_t v46 = *(void (**)(char *, uint64_t))(v69 + 8);
    uint64_t v47 = v44;
    uint64_t v48 = v74;
    v46(v47, v74);
    uint64_t v70 = v46;
    v46(v43, v48);
    if (v45)
    {
      double v49 = COERCE_DOUBLE(sub_20A8C3C80());
      char v51 = v50;
      double v52 = COERCE_DOUBLE(sub_20A8C3E00());
      if ((v51 & 1) == 0)
      {
        if ((v53 & 1) == 0 && v49 == v52) {
          goto LABEL_13;
        }
LABEL_15:
        uint64_t v54 = v72;
        sub_20A8C3C60();
        sub_20A8C2720();
        v70(v54, v74);
        sub_20A8C3E00();
        uint64_t v55 = v66;
        sub_20A8C3C70();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v30 = sub_20A46D5A0(0, *(void *)(v30 + 16) + 1, 1, v30);
        }
        unint64_t v57 = *(void *)(v30 + 16);
        unint64_t v56 = *(void *)(v30 + 24);
        if (v57 >= v56 >> 1) {
          unint64_t v30 = sub_20A46D5A0(v56 > 1, v57 + 1, 1, v30);
        }
        *(void *)(v30 + 16) = v57 + 1;
        uint64_t v58 = v65;
        v65((char *)(v30+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v57), v55, v35);
        uint64_t v59 = v42;
        uint64_t v38 = v58;
        (*(void (**)(char *, uint64_t))(v75 + 8))(v59, v76);
        goto LABEL_20;
      }
      if ((v53 & 1) == 0) {
        goto LABEL_15;
      }
    }
LABEL_13:
    (*(void (**)(char *, uint64_t))(v75 + 8))(v42, v76);
    uint64_t v38 = v65;
    goto LABEL_20;
  }
  sub_20A6F7944((uint64_t)v39, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
LABEL_20:
  if (*(void *)(v30 + 16) == 1)
  {
    uint64_t v60 = v72;
    sub_20A8C3C60();
    sub_20A8C2720();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v60, v74);
    sub_20A8C3C80();
    uint64_t v61 = v68;
    sub_20A8C3C70();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v30 = sub_20A46D5A0(0, *(void *)(v30 + 16) + 1, 1, v30);
    }
    unint64_t v63 = *(void *)(v30 + 16);
    unint64_t v62 = *(void *)(v30 + 24);
    if (v63 >= v62 >> 1) {
      unint64_t v30 = sub_20A46D5A0(v62 > 1, v63 + 1, 1, v30);
    }
    *(void *)(v30 + 16) = v63 + 1;
    v38((char *)(v30+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v63), v61, v35);
  }
  (*(void (**)(char *, uint64_t))(v32 + 8))(v37, v35);
  return v30;
}

void sub_20A6F78E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A6F7944(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A6F78E0(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A6F79B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A6F6FD8(a1, a2);
}

void *sub_20A6F79CC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    uint64_t v15 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20A8C3F00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C3E10();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_20A6F8358(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_20A8C3D00();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      sub_20A6F8358(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    uint64_t v86 = a1;
    uint64_t v87 = a3;
    uint64_t v22 = a3[7];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v88 = a2;
    uint64_t v24 = (char *)a2 + v22;
    *(void *)uint64_t v23 = *(void *)((char *)a2 + v22);
    v23[8] = *((unsigned char *)a2 + v22 + 8);
    *((void *)v23 + 2) = *(void *)((char *)a2 + v22 + 16);
    v23[24] = *((unsigned char *)a2 + v22 + 24);
    *((void *)v23 + 4) = *(void *)((char *)a2 + v22 + 32);
    v23[40] = *((unsigned char *)a2 + v22 + 40);
    uint64_t v25 = *(void *)((char *)a2 + v22 + 56);
    *((void *)v23 + 6) = *(void *)((char *)a2 + v22 + 48);
    *((void *)v23 + 7) = v25;
    uint64_t v26 = *(void *)((char *)a2 + v22 + 72);
    *((void *)v23 + 8) = *(void *)((char *)a2 + v22 + 64);
    *((void *)v23 + 9) = v26;
    uint64_t v27 = (int *)type metadata accessor for PriceViewModel();
    uint64_t v28 = v27[9];
    uint64_t v29 = &v23[v28];
    unint64_t v30 = &v24[v28];
    uint64_t v31 = sub_20A8C2EB0();
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v83 = v31;
    v32(v29, v30, v31);
    uint64_t v33 = v27[10];
    unint64_t v34 = &v23[v33];
    uint64_t v35 = &v24[v33];
    uint64_t v36 = sub_20A8C4030();
    uint64_t v82 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
    v82(v34, v35, v36);
    uint64_t v37 = v27[11];
    uint64_t v38 = &v23[v37];
    uint64_t v39 = &v24[v37];
    uint64_t v40 = sub_20A8C2990();
    uint64_t v80 = *(void (**)(char *, char *))(*(void *)(v40 - 8) + 16);
    uint64_t v81 = v40;
    v80(v38, v39);
    uint64_t v41 = type metadata accessor for QuoteViewModel();
    uint64_t v42 = *(int *)(v41 + 20);
    uint64_t v43 = &v23[v42];
    uint64_t v44 = &v24[v42];
    uint64_t v45 = sub_20A8C3410();
    uint64_t v78 = *(void (**)(char *, char *))(*(void *)(v45 - 8) + 16);
    uint64_t v79 = v45;
    v78(v43, v44);
    uint64_t v46 = *(int *)(v41 + 24);
    uint64_t v47 = &v23[v46];
    uint64_t v48 = &v24[v46];
    uint64_t v49 = type metadata accessor for QuoteSummaryTimeRange();
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
    if (v77(v48, 1, v49))
    {
      sub_20A6F8358(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
      memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      uint64_t v75 = v50;
      uint64_t v84 = v49;
      uint64_t v52 = sub_20A8C2BC0();
      uint64_t v53 = *(void *)(v52 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v48, 3, v52))
      {
        uint64_t v50 = v75;
        memcpy(v47, v48, *(void *)(v75 + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v47, v48, v52);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v47, 0, 3, v52);
        uint64_t v50 = v75;
      }
      uint64_t v49 = v84;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v84);
    }
    uint64_t v54 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
    uint64_t v55 = &v23[v54];
    unint64_t v56 = &v24[v54];
    uint64_t v57 = *(void *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(&v24[v54], 1, v41))
    {
      sub_20A6F8358(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
      memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
      uint64_t v60 = v87;
      uint64_t v59 = v88;
      uint64_t v15 = v86;
    }
    else
    {
      uint64_t v76 = v50;
      *(void *)uint64_t v55 = *(void *)v56;
      v55[8] = v56[8];
      *((void *)v55 + 2) = *((void *)v56 + 2);
      v55[24] = v56[24];
      *((void *)v55 + 4) = *((void *)v56 + 4);
      v55[40] = v56[40];
      uint64_t v61 = *((void *)v56 + 7);
      *((void *)v55 + 6) = *((void *)v56 + 6);
      *((void *)v55 + 7) = v61;
      uint64_t v62 = *((void *)v56 + 9);
      *((void *)v55 + 8) = *((void *)v56 + 8);
      *((void *)v55 + 9) = v62;
      uint64_t v63 = v27[9];
      uint64_t v64 = &v55[v63];
      uint64_t v85 = v49;
      uint64_t v65 = &v56[v63];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32(v64, v65, v83);
      v82(&v55[v27[10]], &v56[v27[10]], v36);
      ((void (*)(char *, char *, uint64_t))v80)(&v55[v27[11]], &v56[v27[11]], v81);
      ((void (*)(char *, char *, uint64_t))v78)(&v55[*(int *)(v41 + 20)], &v56[*(int *)(v41 + 20)], v79);
      uint64_t v66 = *(int *)(v41 + 24);
      uint64_t v67 = &v55[v66];
      uint64_t v68 = &v56[v66];
      if (v77(v68, 1, v85))
      {
        sub_20A6F8358(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
        memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
        uint64_t v60 = v87;
        uint64_t v59 = v88;
        uint64_t v15 = v86;
      }
      else
      {
        uint64_t v70 = sub_20A8C2BC0();
        uint64_t v71 = *(void *)(v70 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v68, 3, v70))
        {
          uint64_t v72 = v76;
          memcpy(v67, v68, *(void *)(v76 + 64));
          uint64_t v60 = v87;
          uint64_t v59 = v88;
          uint64_t v73 = v85;
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v67, v68, v70);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v67, 0, 3, v70);
          uint64_t v60 = v87;
          uint64_t v59 = v88;
          uint64_t v73 = v85;
          uint64_t v72 = v76;
        }
        uint64_t v15 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v67, 0, 1, v73);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v55, 0, 1, v41);
    }
    *((unsigned char *)v15 + v60[8]) = *((unsigned char *)v59 + v60[8]);
  }
  return v15;
}

void sub_20A6F8358(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A6F83AC(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_20A8C3E10();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = a1 + a2[6];
  uint64_t v9 = sub_20A8C3D00();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = a1 + a2[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v13 = v11 + v12[9];
  uint64_t v14 = sub_20A8C2EB0();
  uint64_t v35 = *(void (**)(uint64_t))(*(void *)(v14 - 8) + 8);
  uint64_t v36 = v14;
  v35(v13);
  uint64_t v15 = v11 + v12[10];
  uint64_t v16 = sub_20A8C4030();
  unint64_t v34 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
  v34(v15, v16);
  uint64_t v17 = v11 + v12[11];
  uint64_t v18 = sub_20A8C2990();
  uint64_t v33 = *(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
  v33(v17, v18);
  uint64_t v19 = type metadata accessor for QuoteViewModel();
  uint64_t v20 = v11 + *(int *)(v19 + 20);
  uint64_t v21 = sub_20A8C3410();
  uint64_t v32 = *(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
  v32(v20, v21);
  uint64_t v22 = v11 + *(int *)(v19 + 24);
  uint64_t v23 = type metadata accessor for QuoteSummaryTimeRange();
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
  if (!v31(v22, 1, v23))
  {
    uint64_t v24 = sub_20A8C2BC0();
    uint64_t v25 = *(void *)(v24 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v22, 3, v24)) {
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v22, v24);
    }
  }
  uint64_t v26 = v11 + *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v26, 1, v19);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t))v35)(v26 + v12[9], v36);
    v34(v26 + v12[10], v16);
    v33(v26 + v12[11], v18);
    v32(v26 + *(int *)(v19 + 20), v21);
    uint64_t v28 = v26 + *(int *)(v19 + 24);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v31)(v28, 1, v23);
    if (!result)
    {
      uint64_t v29 = sub_20A8C2BC0();
      uint64_t v37 = *(void *)(v29 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v28, 3, v29);
      if (!result)
      {
        unint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8);
        return v30(v28, v29);
      }
    }
  }
  return result;
}

uint64_t sub_20A6F890C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_20A8C3E10();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_20A6F8358(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_20A8C3D00();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    sub_20A6F8358(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v84 = a3;
  uint64_t v85 = a2;
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)uint64_t v20 = *(void *)(a2 + v19);
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(a2 + v19 + 8);
  *(void *)(v20 + 16) = *(void *)(a2 + v19 + 16);
  *(unsigned char *)(v20 + 24) = *(unsigned char *)(a2 + v19 + 24);
  *(void *)(v20 + 32) = *(void *)(a2 + v19 + 32);
  *(unsigned char *)(v20 + 40) = *(unsigned char *)(a2 + v19 + 40);
  uint64_t v22 = *(void *)(a2 + v19 + 56);
  *(void *)(v20 + 48) = *(void *)(a2 + v19 + 48);
  *(void *)(v20 + 56) = v22;
  uint64_t v23 = *(void *)(a2 + v19 + 72);
  *(void *)(v20 + 64) = *(void *)(a2 + v19 + 64);
  *(void *)(v20 + 72) = v23;
  uint64_t v24 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v25 = v24[9];
  uint64_t v26 = (char *)(v20 + v25);
  uint64_t v27 = (char *)(v21 + v25);
  uint64_t v28 = sub_20A8C2EB0();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
  uint64_t v86 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v80 = v29;
  v29(v26, v27, v28);
  uint64_t v30 = v24[10];
  uint64_t v31 = v20 + v30;
  uint64_t v32 = v21 + v30;
  uint64_t v33 = sub_20A8C4030();
  uint64_t v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16);
  v78(v31, v32, v33);
  uint64_t v34 = v24[11];
  uint64_t v35 = v20 + v34;
  uint64_t v36 = v21 + v34;
  uint64_t v37 = sub_20A8C2990();
  uint64_t v76 = *(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 16);
  uint64_t v77 = v37;
  v76(v35, v36);
  uint64_t v38 = type metadata accessor for QuoteViewModel();
  uint64_t v39 = *(int *)(v38 + 20);
  uint64_t v40 = v20 + v39;
  uint64_t v41 = v21 + v39;
  uint64_t v42 = sub_20A8C3410();
  uint64_t v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16);
  v75(v40, v41, v42);
  uint64_t v43 = *(int *)(v38 + 24);
  uint64_t v44 = (void *)(v20 + v43);
  uint64_t v45 = (const void *)(v21 + v43);
  uint64_t v46 = type metadata accessor for QuoteSummaryTimeRange();
  uint64_t v81 = *(void *)(v46 - 8);
  uint64_t v74 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v81 + 48);
  uint64_t v79 = v33;
  if (v74(v45, 1, v46))
  {
    sub_20A6F8358(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    uint64_t v82 = v46;
    uint64_t v48 = sub_20A8C2BC0();
    uint64_t v49 = *(void *)(v48 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v49 + 48))(v45, 3, v48))
    {
      uint64_t v50 = v81;
      memcpy(v44, v45, *(void *)(v81 + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v49 + 16))(v44, v45, v48);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v44, 0, 3, v48);
      uint64_t v50 = v81;
    }
    uint64_t v51 = *(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56);
    uint64_t v46 = v82;
    v51(v44, 0, 1, v82);
  }
  uint64_t v52 = v86;
  uint64_t v53 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
  uint64_t v54 = (void *)(v20 + v53);
  uint64_t v55 = (void *)(v21 + v53);
  uint64_t v56 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v56 + 48))(v55, 1, v38))
  {
    sub_20A6F8358(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
    memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
    uint64_t v59 = v84;
    uint64_t v58 = v85;
  }
  else
  {
    uint64_t v87 = v56;
    *uint64_t v54 = *v55;
    *((unsigned char *)v54 + 8) = *((unsigned char *)v55 + 8);
    v54[2] = v55[2];
    *((unsigned char *)v54 + 24) = *((unsigned char *)v55 + 24);
    v54[4] = v55[4];
    *((unsigned char *)v54 + 40) = *((unsigned char *)v55 + 40);
    uint64_t v60 = v55[7];
    v54[6] = v55[6];
    v54[7] = v60;
    uint64_t v83 = v46;
    uint64_t v61 = v55[9];
    v54[8] = v55[8];
    v54[9] = v61;
    uint64_t v62 = v24[9];
    uint64_t v63 = (char *)v54 + v62;
    uint64_t v64 = (char *)v55 + v62;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v80(v63, v64, v28);
    v78((uint64_t)v54 + v24[10], (uint64_t)v55 + v24[10], v79);
    ((void (*)(char *, char *, uint64_t))v76)((char *)v54 + v24[11], (char *)v55 + v24[11], v77);
    v75((uint64_t)v54 + *(int *)(v38 + 20), (uint64_t)v55 + *(int *)(v38 + 20), v42);
    uint64_t v65 = *(int *)(v38 + 24);
    uint64_t v66 = (char *)v54 + v65;
    uint64_t v67 = (char *)v55 + v65;
    if (v74(v67, 1, v83))
    {
      sub_20A6F8358(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      uint64_t v59 = v84;
      uint64_t v69 = v87;
    }
    else
    {
      uint64_t v70 = sub_20A8C2BC0();
      uint64_t v71 = *(void *)(v70 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v67, 3, v70))
      {
        uint64_t v72 = v81;
        memcpy(v66, v67, *(void *)(v81 + 64));
        uint64_t v59 = v84;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v66, v67, v70);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v66, 0, 3, v70);
        uint64_t v59 = v84;
        uint64_t v72 = v81;
      }
      uint64_t v69 = v87;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v66, 0, 1, v83);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v54, 0, 1, v38);
    uint64_t v58 = v85;
  }
  *(unsigned char *)(v52 + v59[8]) = *(unsigned char *)(v58 + v59[8]);
  return v52;
}

uint64_t sub_20A6F9248(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_20A8C3E10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_20A6F8358(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = sub_20A8C3D00();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
LABEL_12:
    sub_20A6F8358(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 24))(v17, v18, v19);
LABEL_13:
  uint64_t v127 = a1;
  uint64_t v25 = a3[7];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = *(void *)(a2 + v25);
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  *(void *)uint64_t v26 = v28;
  uint64_t v29 = *(void *)(v27 + 16);
  *(unsigned char *)(v26 + 24) = *(unsigned char *)(v27 + 24);
  *(void *)(v26 + 16) = v29;
  uint64_t v30 = *(void *)(v27 + 32);
  *(unsigned char *)(v26 + 40) = *(unsigned char *)(v27 + 40);
  *(void *)(v26 + 32) = v30;
  *(void *)(v26 + 48) = *(void *)(v27 + 48);
  *(void *)(v26 + 56) = *(void *)(v27 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v26 + 64) = *(void *)(v27 + 64);
  *(void *)(v26 + 72) = *(void *)(v27 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v32 = v31[9];
  uint64_t v33 = v26 + v32;
  uint64_t v34 = v27 + v32;
  uint64_t v35 = sub_20A8C2EB0();
  uint64_t v118 = *(void *)(v35 - 8);
  uint64_t v123 = v35;
  uint64_t v113 = *(void (**)(uint64_t, uint64_t))(v118 + 24);
  v113(v33, v34);
  uint64_t v36 = v31[10];
  uint64_t v37 = v26 + v36;
  uint64_t v38 = v27 + v36;
  uint64_t v39 = sub_20A8C4030();
  uint64_t v117 = *(void *)(v39 - 8);
  uint64_t v122 = v39;
  uint64_t v112 = *(void (**)(uint64_t, uint64_t))(v117 + 24);
  v112(v37, v38);
  uint64_t v124 = v31;
  uint64_t v40 = v31[11];
  uint64_t v41 = v26 + v40;
  uint64_t v42 = v27 + v40;
  uint64_t v43 = sub_20A8C2990();
  uint64_t v116 = *(void *)(v43 - 8);
  uint64_t v121 = v43;
  uint64_t v111 = *(void (**)(uint64_t, uint64_t))(v116 + 24);
  v111(v41, v42);
  uint64_t v44 = type metadata accessor for QuoteViewModel();
  uint64_t v45 = *(int *)(v44 + 20);
  uint64_t v46 = v26 + v45;
  uint64_t v47 = v27 + v45;
  uint64_t v48 = sub_20A8C3410();
  uint64_t v115 = *(void *)(v48 - 8);
  uint64_t v119 = v48;
  uint64_t v110 = *(void (**)(uint64_t, uint64_t))(v115 + 24);
  v110(v46, v47);
  uint64_t v49 = *(int *)(v44 + 24);
  uint64_t v50 = (void *)(v26 + v49);
  uint64_t v51 = (void *)(v27 + v49);
  uint64_t v52 = type metadata accessor for QuoteSummaryTimeRange();
  uint64_t v125 = *(void *)(v52 - 8);
  uint64_t v53 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v125 + 48);
  LODWORD(v46) = v53(v50, 1, v52);
  uint64_t v126 = v52;
  uint64_t v120 = (uint64_t (*)(char *, uint64_t, uint64_t))v53;
  int v54 = v53(v51, 1, v52);
  if (!v46)
  {
    if (!v54)
    {
      uint64_t v60 = sub_20A8C2BC0();
      uint64_t v108 = *(void *)(v60 - 8);
      uint64_t v61 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v108 + 48);
      int v109 = v61(v50, 3, v60);
      int v62 = v61(v51, 3, v60);
      if (v109)
      {
        if (!v62)
        {
          (*(void (**)(void *, void *, uint64_t))(v108 + 16))(v50, v51, v60);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v108 + 56))(v50, 0, 3, v60);
          goto LABEL_28;
        }
      }
      else
      {
        if (!v62)
        {
          (*(void (**)(void *, void *, uint64_t))(v108 + 24))(v50, v51, v60);
          goto LABEL_28;
        }
        (*(void (**)(void *, uint64_t))(v108 + 8))(v50, v60);
      }
      size_t v59 = *(void *)(v125 + 64);
LABEL_20:
      memcpy(v50, v51, v59);
      goto LABEL_28;
    }
    sub_20A6FA2A0((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for QuoteSummaryTimeRange);
LABEL_19:
    sub_20A6F8358(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    size_t v59 = *(void *)(*(void *)(v58 - 8) + 64);
    goto LABEL_20;
  }
  if (v54) {
    goto LABEL_19;
  }
  uint64_t v55 = sub_20A8C2BC0();
  uint64_t v56 = *(void *)(v55 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v56 + 48))(v51, 3, v55))
  {
    uint64_t v57 = v125;
    memcpy(v50, v51, *(void *)(v125 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v56 + 16))(v50, v51, v55);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v50, 0, 3, v55);
    uint64_t v57 = v125;
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v50, 0, 1, v126);
LABEL_28:
  uint64_t v63 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
  uint64_t v64 = (void *)(v26 + v63);
  uint64_t v65 = (uint64_t *)(v27 + v63);
  uint64_t v66 = *(void *)(v44 - 8);
  uint64_t v67 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
  int v68 = v67(v26 + v63, 1, v44);
  int v69 = v67((uint64_t)v65, 1, v44);
  if (!v68)
  {
    if (v69)
    {
      sub_20A6FA2A0((uint64_t)v64, (uint64_t (*)(void))type metadata accessor for QuoteViewModel);
      sub_20A6F8358(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
      memcpy(v64, v65, *(void *)(*(void *)(v72 - 8) + 64));
      uint64_t v71 = v127;
      goto LABEL_51;
    }
    uint64_t v86 = *v65;
    *((unsigned char *)v64 + 8) = *((unsigned char *)v65 + 8);
    *uint64_t v64 = v86;
    uint64_t v87 = v65[2];
    *((unsigned char *)v64 + 24) = *((unsigned char *)v65 + 24);
    v64[2] = v87;
    uint64_t v88 = v65[4];
    *((unsigned char *)v64 + 40) = *((unsigned char *)v65 + 40);
    v64[4] = v88;
    uint64_t v64[6] = v65[6];
    v64[7] = v65[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v64[8] = v65[8];
    v64[9] = v65[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v89 = v124;
    ((void (*)(char *, char *, uint64_t))v113)((char *)v64 + v124[9], (char *)v65 + v124[9], v123);
    ((void (*)(char *, char *, uint64_t))v112)((char *)v64 + v89[10], (char *)v65 + v89[10], v122);
    ((void (*)(char *, char *, uint64_t))v111)((char *)v64 + v89[11], (char *)v65 + v89[11], v121);
    ((void (*)(char *, char *, uint64_t))v110)((char *)v64 + *(int *)(v44 + 20), (char *)v65 + *(int *)(v44 + 20), v119);
    uint64_t v90 = *(int *)(v44 + 24);
    uint64_t v91 = (char *)v64 + v90;
    uint64_t v92 = (char *)v65 + v90;
    LODWORD(v89) = v120(v91, 1, v126);
    int v93 = v120(v92, 1, v126);
    if (v89)
    {
      uint64_t v71 = v127;
      if (!v93)
      {
        uint64_t v94 = sub_20A8C2BC0();
        uint64_t v95 = *(void *)(v94 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v92, 3, v94))
        {
          uint64_t v96 = v125;
          memcpy(v91, v92, *(void *)(v125 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v91, v92, v94);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v91, 0, 3, v94);
          uint64_t v96 = v125;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v91, 0, 1, v126);
        goto LABEL_51;
      }
    }
    else
    {
      uint64_t v71 = v127;
      if (!v93)
      {
        uint64_t v103 = sub_20A8C2BC0();
        uint64_t v104 = *(void *)(v103 - 8);
        uint64_t v105 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 48);
        int v106 = v105(v91, 3, v103);
        int v107 = v105(v92, 3, v103);
        if (v106)
        {
          if (!v107)
          {
            (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v91, v92, v103);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v91, 0, 3, v103);
            goto LABEL_51;
          }
        }
        else
        {
          if (!v107)
          {
            (*(void (**)(char *, char *, uint64_t))(v104 + 24))(v91, v92, v103);
            goto LABEL_51;
          }
          (*(void (**)(char *, uint64_t))(v104 + 8))(v91, v103);
        }
        size_t v101 = *(void *)(v125 + 64);
        goto LABEL_47;
      }
      sub_20A6FA2A0((uint64_t)v91, (uint64_t (*)(void))type metadata accessor for QuoteSummaryTimeRange);
    }
    sub_20A6F8358(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    size_t v101 = *(void *)(*(void *)(v100 - 8) + 64);
LABEL_47:
    memcpy(v91, v92, v101);
    goto LABEL_51;
  }
  if (v69)
  {
    sub_20A6F8358(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
    memcpy(v64, v65, *(void *)(*(void *)(v70 - 8) + 64));
    uint64_t v71 = v127;
  }
  else
  {
    uint64_t v114 = v66;
    uint64_t v73 = *v65;
    *((unsigned char *)v64 + 8) = *((unsigned char *)v65 + 8);
    *uint64_t v64 = v73;
    uint64_t v74 = v65[2];
    *((unsigned char *)v64 + 24) = *((unsigned char *)v65 + 24);
    v64[2] = v74;
    uint64_t v75 = v65[4];
    *((unsigned char *)v64 + 40) = *((unsigned char *)v65 + 40);
    v64[4] = v75;
    uint64_t v64[6] = v65[6];
    v64[7] = v65[7];
    v64[8] = v65[8];
    v64[9] = v65[9];
    uint64_t v76 = v124;
    uint64_t v77 = v124[9];
    uint64_t v78 = (char *)v64 + v77;
    uint64_t v79 = (char *)v65 + v77;
    uint64_t v80 = *(void (**)(char *, char *, uint64_t))(v118 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v80(v78, v79, v123);
    (*(void (**)(char *, char *, uint64_t))(v117 + 16))((char *)v64 + v76[10], (char *)v65 + v76[10], v122);
    (*(void (**)(char *, char *, uint64_t))(v116 + 16))((char *)v64 + v76[11], (char *)v65 + v76[11], v121);
    (*(void (**)(char *, char *, uint64_t))(v115 + 16))((char *)v64 + *(int *)(v44 + 20), (char *)v65 + *(int *)(v44 + 20), v119);
    uint64_t v81 = *(int *)(v44 + 24);
    uint64_t v82 = (char *)v64 + v81;
    uint64_t v83 = (char *)v65 + v81;
    if (v120(v83, 1, v126))
    {
      sub_20A6F8358(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
      memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
      uint64_t v71 = v127;
      uint64_t v85 = v114;
    }
    else
    {
      uint64_t v97 = sub_20A8C2BC0();
      uint64_t v98 = *(void *)(v97 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v83, 3, v97))
      {
        uint64_t v99 = v125;
        memcpy(v82, v83, *(void *)(v125 + 64));
        uint64_t v71 = v127;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v82, v83, v97);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v82, 0, 3, v97);
        uint64_t v71 = v127;
        uint64_t v99 = v125;
      }
      uint64_t v85 = v114;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v99 + 56))(v82, 0, 1, v126);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v85 + 56))(v64, 0, 1, v44);
  }
LABEL_51:
  *(unsigned char *)(v71 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return v71;
}

uint64_t sub_20A6FA2A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A6FA300(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_20A8C3E10();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_20A6F8358(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[6];
  int v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_20A8C3D00();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    sub_20A6F8358(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v77 = a3;
  uint64_t v78 = a2;
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)uint64_t v20 = *(void *)(a2 + v19);
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(a2 + v19 + 8);
  *(void *)(v20 + 16) = *(void *)(a2 + v19 + 16);
  *(unsigned char *)(v20 + 24) = *(unsigned char *)(a2 + v19 + 24);
  *(void *)(v20 + 32) = *(void *)(a2 + v19 + 32);
  *(unsigned char *)(v20 + 40) = *(unsigned char *)(a2 + v19 + 40);
  long long v22 = *(_OWORD *)(a2 + v19 + 64);
  *(_OWORD *)(v20 + 48) = *(_OWORD *)(a2 + v19 + 48);
  *(_OWORD *)(v20 + 64) = v22;
  int v23 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v24 = v23[9];
  uint64_t v25 = v20 + v24;
  uint64_t v26 = v21 + v24;
  uint64_t v27 = sub_20A8C2EB0();
  uint64_t v74 = *(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 32);
  uint64_t v75 = v27;
  v74(v25, v26);
  uint64_t v28 = v23[10];
  uint64_t v29 = v20 + v28;
  uint64_t v30 = v21 + v28;
  uint64_t v31 = sub_20A8C4030();
  uint64_t v72 = *(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 32);
  uint64_t v73 = v31;
  v72(v29, v30);
  uint64_t v32 = v23[11];
  uint64_t v33 = v20 + v32;
  uint64_t v34 = v21 + v32;
  uint64_t v35 = sub_20A8C2990();
  uint64_t v70 = *(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 32);
  uint64_t v71 = v35;
  v70(v33, v34);
  uint64_t v36 = type metadata accessor for QuoteViewModel();
  uint64_t v37 = *(int *)(v36 + 20);
  uint64_t v38 = v20 + v37;
  uint64_t v39 = v21 + v37;
  uint64_t v40 = sub_20A8C3410();
  int v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 32);
  v69(v38, v39, v40);
  uint64_t v41 = *(int *)(v36 + 24);
  uint64_t v42 = (void *)(v20 + v41);
  uint64_t v43 = (const void *)(v21 + v41);
  uint64_t v44 = type metadata accessor for QuoteSummaryTimeRange();
  uint64_t v76 = *(void *)(v44 - 8);
  int v68 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v76 + 48);
  if (v68(v43, 1, v44))
  {
    sub_20A6F8358(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    uint64_t v66 = v44;
    uint64_t v67 = a1;
    uint64_t v46 = sub_20A8C2BC0();
    uint64_t v47 = *(void *)(v46 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48))(v43, 3, v46))
    {
      uint64_t v48 = v76;
      memcpy(v42, v43, *(void *)(v76 + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v47 + 32))(v42, v43, v46);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v42, 0, 3, v46);
      uint64_t v48 = v76;
    }
    uint64_t v49 = *(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56);
    uint64_t v44 = v66;
    v49(v42, 0, 1, v66);
    a1 = v67;
  }
  uint64_t v50 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
  uint64_t v51 = (void *)(v20 + v50);
  uint64_t v52 = (void *)(v21 + v50);
  uint64_t v53 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v53 + 48))(v52, 1, v36))
  {
    sub_20A6F8358(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
    memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
    uint64_t v55 = a2;
  }
  else
  {
    *uint64_t v51 = *v52;
    *((unsigned char *)v51 + 8) = *((unsigned char *)v52 + 8);
    void v51[2] = v52[2];
    *((unsigned char *)v51 + 24) = *((unsigned char *)v52 + 24);
    v51[4] = v52[4];
    *((unsigned char *)v51 + 40) = *((unsigned char *)v52 + 40);
    long long v56 = *((_OWORD *)v52 + 4);
    *((_OWORD *)v51 + 3) = *((_OWORD *)v52 + 3);
    *((_OWORD *)v51 + 4) = v56;
    ((void (*)(char *, char *, uint64_t))v74)((char *)v51 + v23[9], (char *)v52 + v23[9], v75);
    ((void (*)(char *, char *, uint64_t))v72)((char *)v51 + v23[10], (char *)v52 + v23[10], v73);
    ((void (*)(char *, char *, uint64_t))v70)((char *)v51 + v23[11], (char *)v52 + v23[11], v71);
    v69((uint64_t)v51 + *(int *)(v36 + 20), (uint64_t)v52 + *(int *)(v36 + 20), v40);
    uint64_t v57 = *(int *)(v36 + 24);
    uint64_t v58 = (char *)v51 + v57;
    size_t v59 = (char *)v52 + v57;
    if (v68(v59, 1, v44))
    {
      sub_20A6F8358(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      uint64_t v55 = a2;
    }
    else
    {
      uint64_t v61 = v44;
      uint64_t v62 = sub_20A8C2BC0();
      uint64_t v63 = *(void *)(v62 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v59, 3, v62))
      {
        uint64_t v64 = v76;
        memcpy(v58, v59, *(void *)(v76 + 64));
        uint64_t v55 = v78;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v58, v59, v62);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v58, 0, 3, v62);
        uint64_t v55 = v78;
        uint64_t v64 = v76;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v58, 0, 1, v61);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v53 + 56))(v51, 0, 1, v36);
  }
  *(unsigned char *)(a1 + v77[8]) = *(unsigned char *)(v55 + v77[8]);
  return a1;
}

uint64_t sub_20A6FABF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_20A8C3E10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_20A6F8358(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = sub_20A8C3D00();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
LABEL_12:
    sub_20A6F8358(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 40))(v17, v18, v19);
LABEL_13:
  uint64_t v119 = a2;
  uint64_t v120 = a3;
  uint64_t v25 = a3[7];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(void *)uint64_t v26 = *(void *)(a2 + v25);
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(a2 + v25 + 8);
  *(void *)(v26 + 16) = *(void *)(a2 + v25 + 16);
  *(unsigned char *)(v26 + 24) = *(unsigned char *)(a2 + v25 + 24);
  *(void *)(v26 + 32) = *(void *)(a2 + v25 + 32);
  *(unsigned char *)(v26 + 40) = *(unsigned char *)(a2 + v25 + 40);
  uint64_t v28 = *(void *)(a2 + v25 + 56);
  *(void *)(v26 + 48) = *(void *)(a2 + v25 + 48);
  *(void *)(v26 + 56) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(v27 + 72);
  *(void *)(v26 + 64) = *(void *)(v27 + 64);
  *(void *)(v26 + 72) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v31 = v30[9];
  uint64_t v32 = v26 + v31;
  uint64_t v33 = v27 + v31;
  uint64_t v34 = sub_20A8C2EB0();
  uint64_t v110 = *(void *)(v34 - 8);
  uint64_t v115 = v34;
  int v106 = *(void (**)(uint64_t, uint64_t))(v110 + 40);
  v106(v32, v33);
  uint64_t v35 = v30[10];
  uint64_t v36 = v26 + v35;
  uint64_t v37 = v27 + v35;
  uint64_t v38 = sub_20A8C4030();
  uint64_t v109 = *(void *)(v38 - 8);
  uint64_t v114 = v38;
  uint64_t v105 = *(void (**)(uint64_t, uint64_t))(v109 + 40);
  v105(v36, v37);
  uint64_t v116 = v30;
  uint64_t v39 = v30[11];
  uint64_t v40 = v26 + v39;
  uint64_t v41 = v27 + v39;
  uint64_t v42 = sub_20A8C2990();
  uint64_t v108 = *(void *)(v42 - 8);
  uint64_t v113 = v42;
  uint64_t v104 = *(void (**)(uint64_t, uint64_t))(v108 + 40);
  v104(v40, v41);
  uint64_t v43 = type metadata accessor for QuoteViewModel();
  uint64_t v44 = *(int *)(v43 + 20);
  uint64_t v45 = v26 + v44;
  uint64_t v46 = v27 + v44;
  uint64_t v47 = sub_20A8C3410();
  uint64_t v107 = *(void *)(v47 - 8);
  uint64_t v111 = v47;
  uint64_t v103 = *(void (**)(uint64_t, uint64_t))(v107 + 40);
  v103(v45, v46);
  uint64_t v48 = *(int *)(v43 + 24);
  uint64_t v49 = (void *)(v26 + v48);
  uint64_t v50 = (void *)(v27 + v48);
  uint64_t v51 = type metadata accessor for QuoteSummaryTimeRange();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
  LODWORD(v45) = v53(v49, 1, v51);
  uint64_t v118 = v51;
  uint64_t v112 = (uint64_t (*)(char *, uint64_t, uint64_t))v53;
  int v54 = v53(v50, 1, v51);
  uint64_t v117 = v52;
  if (!v45)
  {
    if (!v54)
    {
      uint64_t v60 = sub_20A8C2BC0();
      uint64_t v61 = *(void *)(v60 - 8);
      uint64_t v62 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v61 + 48);
      int v102 = v62(v49, 3, v60);
      int v63 = v62(v50, 3, v60);
      if (v102)
      {
        if (!v63)
        {
          (*(void (**)(void *, void *, uint64_t))(v61 + 32))(v49, v50, v60);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v49, 0, 3, v60);
          goto LABEL_28;
        }
      }
      else
      {
        if (!v63)
        {
          (*(void (**)(void *, void *, uint64_t))(v61 + 40))(v49, v50, v60);
          goto LABEL_28;
        }
        (*(void (**)(void *, uint64_t))(v61 + 8))(v49, v60);
      }
      size_t v59 = *(void *)(v117 + 64);
LABEL_20:
      memcpy(v49, v50, v59);
      goto LABEL_28;
    }
    sub_20A6FA2A0((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for QuoteSummaryTimeRange);
LABEL_19:
    sub_20A6F8358(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    size_t v59 = *(void *)(*(void *)(v58 - 8) + 64);
    goto LABEL_20;
  }
  if (v54) {
    goto LABEL_19;
  }
  uint64_t v55 = sub_20A8C2BC0();
  uint64_t v56 = *(void *)(v55 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v56 + 48))(v50, 3, v55))
  {
    uint64_t v57 = v117;
    memcpy(v49, v50, *(void *)(v117 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v56 + 32))(v49, v50, v55);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v49, 0, 3, v55);
    uint64_t v57 = v117;
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v49, 0, 1, v51);
LABEL_28:
  uint64_t v64 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
  uint64_t v65 = (void *)(v26 + v64);
  uint64_t v66 = (void *)(v27 + v64);
  uint64_t v67 = *(void *)(v43 - 8);
  int v68 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
  int v69 = v68(v26 + v64, 1, v43);
  int v70 = v68((uint64_t)v66, 1, v43);
  if (!v69)
  {
    if (v70)
    {
      sub_20A6FA2A0((uint64_t)v65, (uint64_t (*)(void))type metadata accessor for QuoteViewModel);
      sub_20A6F8358(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
      memcpy(v65, v66, *(void *)(*(void *)(v73 - 8) + 64));
      uint64_t v71 = v119;
      goto LABEL_33;
    }
    void *v65 = *v66;
    *((unsigned char *)v65 + 8) = *((unsigned char *)v66 + 8);
    v65[2] = v66[2];
    *((unsigned char *)v65 + 24) = *((unsigned char *)v66 + 24);
    v65[4] = v66[4];
    *((unsigned char *)v65 + 40) = *((unsigned char *)v66 + 40);
    uint64_t v81 = v66[7];
    void v65[6] = v66[6];
    v65[7] = v81;
    swift_bridgeObjectRelease();
    uint64_t v82 = v66[9];
    v65[8] = v66[8];
    v65[9] = v82;
    swift_bridgeObjectRelease();
    uint64_t v83 = v116;
    ((void (*)(char *, char *, uint64_t))v106)((char *)v65 + v116[9], (char *)v66 + v116[9], v115);
    ((void (*)(char *, char *, uint64_t))v105)((char *)v65 + v83[10], (char *)v66 + v83[10], v114);
    ((void (*)(char *, char *, uint64_t))v104)((char *)v65 + v83[11], (char *)v66 + v83[11], v113);
    ((void (*)(char *, char *, uint64_t))v103)((char *)v65 + *(int *)(v43 + 20), (char *)v66 + *(int *)(v43 + 20), v111);
    uint64_t v84 = *(int *)(v43 + 24);
    uint64_t v85 = (char *)v65 + v84;
    uint64_t v86 = (char *)v66 + v84;
    LODWORD(v83) = v112(v85, 1, v118);
    int v87 = v112(v86, 1, v118);
    uint64_t v74 = v120;
    if (v83)
    {
      uint64_t v71 = v119;
      if (!v87)
      {
        uint64_t v88 = sub_20A8C2BC0();
        uint64_t v89 = *(void *)(v88 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v86, 3, v88))
        {
          uint64_t v90 = v117;
          memcpy(v85, v86, *(void *)(v117 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v85, v86, v88);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v85, 0, 3, v88);
          uint64_t v90 = v117;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v85, 0, 1, v118);
        goto LABEL_52;
      }
    }
    else
    {
      uint64_t v71 = v119;
      if (!v87)
      {
        uint64_t v97 = sub_20A8C2BC0();
        uint64_t v98 = *(void *)(v97 - 8);
        uint64_t v99 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v98 + 48);
        int v100 = v99(v85, 3, v97);
        int v101 = v99(v86, 3, v97);
        if (v100)
        {
          if (!v101)
          {
            (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v85, v86, v97);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v85, 0, 3, v97);
            goto LABEL_52;
          }
        }
        else
        {
          if (!v101)
          {
            (*(void (**)(char *, char *, uint64_t))(v98 + 40))(v85, v86, v97);
            goto LABEL_52;
          }
          (*(void (**)(char *, uint64_t))(v98 + 8))(v85, v97);
        }
        size_t v95 = *(void *)(v117 + 64);
        goto LABEL_48;
      }
      sub_20A6FA2A0((uint64_t)v85, (uint64_t (*)(void))type metadata accessor for QuoteSummaryTimeRange);
    }
    sub_20A6F8358(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    size_t v95 = *(void *)(*(void *)(v94 - 8) + 64);
LABEL_48:
    memcpy(v85, v86, v95);
    goto LABEL_52;
  }
  uint64_t v71 = v119;
  if (v70)
  {
    sub_20A6F8358(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
    memcpy(v65, v66, *(void *)(*(void *)(v72 - 8) + 64));
LABEL_33:
    uint64_t v74 = v120;
    goto LABEL_52;
  }
  void *v65 = *v66;
  *((unsigned char *)v65 + 8) = *((unsigned char *)v66 + 8);
  v65[2] = v66[2];
  *((unsigned char *)v65 + 24) = *((unsigned char *)v66 + 24);
  v65[4] = v66[4];
  *((unsigned char *)v65 + 40) = *((unsigned char *)v66 + 40);
  long long v75 = *((_OWORD *)v66 + 4);
  *((_OWORD *)v65 + 3) = *((_OWORD *)v66 + 3);
  *((_OWORD *)v65 + 4) = v75;
  uint64_t v76 = v116;
  (*(void (**)(char *, char *, uint64_t))(v110 + 32))((char *)v65 + v116[9], (char *)v66 + v116[9], v115);
  (*(void (**)(char *, char *, uint64_t))(v109 + 32))((char *)v65 + v76[10], (char *)v66 + v76[10], v114);
  (*(void (**)(char *, char *, uint64_t))(v108 + 32))((char *)v65 + v76[11], (char *)v66 + v76[11], v113);
  (*(void (**)(char *, char *, uint64_t))(v107 + 32))((char *)v65 + *(int *)(v43 + 20), (char *)v66 + *(int *)(v43 + 20), v111);
  uint64_t v77 = *(int *)(v43 + 24);
  uint64_t v78 = (char *)v65 + v77;
  uint64_t v79 = (char *)v66 + v77;
  uint64_t v74 = v120;
  if (v112(v79, 1, v118))
  {
    sub_20A6F8358(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
  }
  else
  {
    uint64_t v91 = sub_20A8C2BC0();
    uint64_t v92 = *(void *)(v91 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v79, 3, v91))
    {
      uint64_t v93 = v117;
      memcpy(v78, v79, *(void *)(v117 + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v78, v79, v91);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v78, 0, 3, v91);
      uint64_t v93 = v117;
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v93 + 56))(v78, 0, 1, v118);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v67 + 56))(v65, 0, 1, v43);
LABEL_52:
  *(unsigned char *)(a1 + v74[8]) = *(unsigned char *)(v71 + v74[8]);
  return a1;
}

uint64_t sub_20A6FBBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A6FBBD0);
}

uint64_t sub_20A6FBBD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3F00();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  sub_20A6F8358(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  sub_20A6F8358(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = type metadata accessor for QuoteSummaryViewModel();
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  unsigned int v17 = *(unsigned __int8 *)(a1 + a3[8]);
  if (v17 >= 2) {
    int v18 = ((v17 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v18 = -2;
  }
  if (v18 < 0) {
    int v18 = -1;
  }
  return (v18 + 1);
}

uint64_t sub_20A6FBDD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A6FBDE4);
}

uint64_t sub_20A6FBDE4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_20A8C3F00();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_20A6F8358(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      sub_20A6F8358(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[6];
      }
      else
      {
        uint64_t result = type metadata accessor for QuoteSummaryViewModel();
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(unsigned char *)(a1 + a4[8]) = a2 + 2;
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[7];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for StockFeedMastheadModel()
{
  uint64_t result = qword_26AC73F20;
  if (!qword_26AC73F20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A6FC010()
{
  sub_20A8C3F00();
  if (v0 <= 0x3F)
  {
    sub_20A6F8358(319, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    if (v1 <= 0x3F)
    {
      sub_20A6F8358(319, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
      if (v2 <= 0x3F)
      {
        type metadata accessor for QuoteSummaryViewModel();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_20A6FC190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X8>)
{
  int v56 = a6;
  int v58 = a5;
  uint64_t v53 = a4;
  uint64_t v49 = a2;
  uint64_t v50 = a3;
  uint64_t v9 = sub_20A8C2BC0();
  MEMORY[0x270FA5388](v9 - 8);
  int v54 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8C3410();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v60 = v11;
  uint64_t v61 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v47 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = (void (*)(uint64_t))MEMORY[0x263F7AEB8];
  sub_20A6F8358(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v59 = (uint64_t)&v43 - v15;
  uint64_t v16 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
  sub_20A6F8358(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v43 = (char *)&v43 - v18;
  uint64_t v19 = sub_20A8C3F00();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  int v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for QuoteSummaryViewModel();
  double v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v48 = (uint64_t)&v43 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = v20;
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, double))(v20 + 16);
  v26(a7, a1, v19, v24);
  uint64_t v27 = type metadata accessor for StockFeedMastheadModel();
  uint64_t v28 = v49;
  sub_20A6FD0D8(v49, a7 + *(int *)(v27 + 20), &qword_26AC68FB0, v16);
  uint64_t v45 = v27;
  uint64_t v29 = *(int *)(v27 + 24);
  uint64_t v57 = a7;
  uint64_t v30 = a7 + v29;
  uint64_t v31 = v50;
  uint64_t v32 = v44;
  sub_20A6FD0D8(v50, v30, (unint64_t *)&unk_26AC68F80, v44);
  uint64_t v46 = v22;
  uint64_t v55 = a1;
  uint64_t v52 = v19;
  uint64_t v33 = v19;
  uint64_t v34 = (uint64_t)v43;
  ((void (*)(char *, uint64_t, uint64_t))v26)(v22, a1, v33);
  uint64_t v35 = v31;
  uint64_t v36 = v53;
  sub_20A6FD0D8(v28, v34, &qword_26AC68FB0, v16);
  sub_20A6FD0D8(v31, v59, (unint64_t *)&unk_26AC68F80, v32);
  uint64_t v37 = (uint64_t)v47;
  (*(void (**)(void))(v61 + 16))();
  sub_20A8C4250();
  sub_20A8C4230();
  if (qword_26AC69088 != -1) {
    swift_once();
  }
  uint64_t v38 = (uint64_t)v54;
  sub_20A8C4220();
  swift_release();
  uint64_t v39 = v48;
  sub_20A59EC1C((uint64_t)v46, v34, v59, v37, v38, v56 & 1, v48);
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v36, v60);
  sub_20A6FD07C(v35, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
  sub_20A6FD07C(v28, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v55, v52);
  uint64_t v40 = v45;
  uint64_t v41 = v57;
  uint64_t result = sub_20A6FD1E8(v39, v57 + *(int *)(v45 + 28));
  *(unsigned char *)(v41 + *(int *)(v40 + 32)) = v58;
  return result;
}

uint64_t sub_20A6FC658(uint64_t a1, uint64_t a2)
{
  uint64_t v95 = a2;
  uint64_t v92 = sub_20A8C3D00();
  uint64_t v90 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v86 = &v79[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = (void (*)(uint64_t))MEMORY[0x263F7AEB8];
  sub_20A6FD018(0, &qword_26AC68F90, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
  uint64_t v89 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v91 = &v79[-v6];
  sub_20A6F8358(0, (unint64_t *)&unk_26AC68F80, v4);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v88 = &v79[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v79[-v10];
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = &v79[-v13];
  uint64_t v15 = sub_20A8C3E10();
  uint64_t v93 = *(void *)(v15 - 8);
  uint64_t v94 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = &v79[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
  sub_20A6FD018(0, (unint64_t *)&qword_26AC67658, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  uint64_t v20 = v19;
  MEMORY[0x270FA5388](v19);
  int v22 = &v79[-v21];
  sub_20A6F8358(0, &qword_26AC68FB0, v18);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v25 = &v79[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = &v79[-v27];
  double v30 = MEMORY[0x270FA5388](v29);
  uint64_t v32 = &v79[-v31];
  uint64_t v33 = v95;
  if ((MEMORY[0x21051C160](a1, v30) & 1) == 0) {
    return 0;
  }
  uint64_t v82 = v17;
  uint64_t v83 = v25;
  uint64_t v85 = v11;
  int v87 = v14;
  uint64_t v34 = type metadata accessor for StockFeedMastheadModel();
  uint64_t v35 = *(int *)(v34 + 20);
  uint64_t v84 = a1;
  uint64_t v36 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
  sub_20A6FD0D8(a1 + v35, (uint64_t)v32, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  sub_20A6FD0D8(v33 + *(int *)(v34 + 20), (uint64_t)v28, &qword_26AC68FB0, v36);
  uint64_t v37 = (uint64_t)&v22[*(int *)(v20 + 48)];
  sub_20A6FD0D8((uint64_t)v32, (uint64_t)v22, &qword_26AC68FB0, v36);
  sub_20A6FD0D8((uint64_t)v28, v37, &qword_26AC68FB0, v36);
  uint64_t v38 = v93;
  uint64_t v39 = v94;
  uint64_t v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 48);
  uint64_t v41 = (uint64_t)v32;
  if (v40((uint64_t)v22, 1, v94) == 1)
  {
    uint64_t v42 = v34;
    uint64_t v43 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
    sub_20A6FD07C((uint64_t)v28, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    sub_20A6FD07C(v41, &qword_26AC68FB0, v43);
    int v44 = v40(v37, 1, v39);
    uint64_t v45 = (uint64_t)v87;
    if (v44 == 1)
    {
      sub_20A6FD07C((uint64_t)v22, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      uint64_t v34 = v42;
      goto LABEL_9;
    }
LABEL_7:
    uint64_t v49 = (unint64_t *)&qword_26AC67658;
    uint64_t v50 = &qword_26AC68FB0;
    uint64_t v51 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
    uint64_t v52 = (uint64_t)v22;
LABEL_15:
    sub_20A6FD144(v52, v49, v50, v51);
    return 0;
  }
  uint64_t v81 = v28;
  uint64_t v46 = (uint64_t)v83;
  sub_20A6FD0D8((uint64_t)v22, (uint64_t)v83, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  int v47 = v40(v37, 1, v39);
  uint64_t v45 = (uint64_t)v87;
  if (v47 == 1)
  {
    uint64_t v48 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
    sub_20A6FD07C((uint64_t)v81, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    sub_20A6FD07C(v41, &qword_26AC68FB0, v48);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v46, v94);
    goto LABEL_7;
  }
  uint64_t v53 = v82;
  uint64_t v54 = v94;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v38 + 32))(v82, v37, v94);
  sub_20A6FD1A0((unint64_t *)&unk_26AC68FA0, MEMORY[0x263F7AEF0]);
  int v80 = sub_20A8CE210();
  uint64_t v55 = *(void (**)(unsigned char *, uint64_t))(v38 + 8);
  v55(v53, v54);
  int v56 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
  sub_20A6FD07C((uint64_t)v81, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  sub_20A6FD07C(v41, &qword_26AC68FB0, v56);
  v55((unsigned char *)v46, v54);
  sub_20A6FD07C((uint64_t)v22, &qword_26AC68FB0, v56);
  if ((v80 & 1) == 0) {
    return 0;
  }
LABEL_9:
  uint64_t v57 = (void (*)(uint64_t))MEMORY[0x263F7AEB8];
  sub_20A6FD0D8(v84 + *(int *)(v34 + 24), v45, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
  uint64_t v94 = v34;
  uint64_t v58 = (uint64_t)v85;
  sub_20A6FD0D8(v95 + *(int *)(v34 + 24), (uint64_t)v85, (unint64_t *)&unk_26AC68F80, v57);
  uint64_t v59 = v91;
  uint64_t v60 = (uint64_t)&v91[*(int *)(v89 + 48)];
  sub_20A6FD0D8(v45, (uint64_t)v91, (unint64_t *)&unk_26AC68F80, v57);
  sub_20A6FD0D8(v58, v60, (unint64_t *)&unk_26AC68F80, v57);
  uint64_t v61 = v90;
  uint64_t v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48);
  uint64_t v63 = v92;
  if (v62((uint64_t)v59, 1, v92) == 1)
  {
    uint64_t v64 = (void (*)(uint64_t))MEMORY[0x263F7AEB8];
    sub_20A6FD07C(v58, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
    sub_20A6FD07C(v45, (unint64_t *)&unk_26AC68F80, v64);
    if (v62(v60, 1, v63) == 1)
    {
      sub_20A6FD07C((uint64_t)v59, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
      goto LABEL_19;
    }
    goto LABEL_14;
  }
  uint64_t v65 = v88;
  sub_20A6FD0D8((uint64_t)v59, (uint64_t)v88, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
  if (v62(v60, 1, v63) == 1)
  {
    uint64_t v66 = (void (*)(uint64_t))MEMORY[0x263F7AEB8];
    sub_20A6FD07C((uint64_t)v85, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
    sub_20A6FD07C((uint64_t)v87, (unint64_t *)&unk_26AC68F80, v66);
    (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v65, v63);
LABEL_14:
    uint64_t v49 = &qword_26AC68F90;
    uint64_t v50 = (unint64_t *)&unk_26AC68F80;
    uint64_t v51 = (void (*)(uint64_t))MEMORY[0x263F7AEB8];
    uint64_t v52 = (uint64_t)v59;
    goto LABEL_15;
  }
  int v68 = v65;
  int v69 = v86;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v61 + 32))(v86, v60, v63);
  sub_20A6FD1A0(&qword_26AC68F78, MEMORY[0x263F7AEB8]);
  char v70 = sub_20A8CE210();
  uint64_t v71 = *(void (**)(unsigned char *, uint64_t))(v61 + 8);
  v71(v69, v63);
  uint64_t v72 = (void (*)(uint64_t))MEMORY[0x263F7AEB8];
  sub_20A6FD07C((uint64_t)v85, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
  sub_20A6FD07C((uint64_t)v87, (unint64_t *)&unk_26AC68F80, v72);
  v71(v68, v63);
  sub_20A6FD07C((uint64_t)v59, (unint64_t *)&unk_26AC68F80, v72);
  if ((v70 & 1) == 0) {
    return 0;
  }
LABEL_19:
  uint64_t v73 = v94;
  uint64_t v74 = v95;
  uint64_t v75 = v84;
  if (!sub_20A5A01A4(v84 + *(int *)(v94 + 28), v95 + *(int *)(v94 + 28))) {
    return 0;
  }
  uint64_t v76 = *(int *)(v73 + 32);
  BOOL v77 = *(unsigned char *)(v74 + v76) == 2;
  unsigned int v78 = !v77;
  if (*(unsigned char *)(v75 + v76) == 2) {
    return v77;
  }
  else {
    return v78;
  }
}

void sub_20A6FD018(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_20A6F8358(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_20A6FD07C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A6F8358(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A6FD0D8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A6F8358(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A6FD144(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A6FD018(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_20A6FD1A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6FD1E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for QuoteSummaryViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A6FD24C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  sub_20A460E5C();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  uint64_t v28 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v31 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A460F28();
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6FE754();
  uint64_t v10 = v9;
  uint64_t v30 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ForYouFeedGroupConfig();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A6FE7B0();
  uint64_t v16 = v33;
  sub_20A8CF8E0();
  if (v16)
  {
    uint64_t v21 = (uint64_t)a1;
  }
  else
  {
    uint64_t v33 = v15;
    v24[1] = v13;
    uint64_t v17 = v30;
    uint64_t v18 = v31;
    sub_20A6FE804();
    sub_20A8CF640();
    v24[0] = v12;
    uint64_t v19 = a1;
    if (v32[0])
    {
      sub_20A4342F4((uint64_t)a1, (uint64_t)v32);
      type metadata accessor for CuratedForYouFeedGroupConfigData();
      sub_20A6FE8BC(&qword_26AC7ACE8, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupConfigData);
      sub_20A6FE8BC(&qword_26AC7ACE0, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupConfigData);
      sub_20A8CC560();
      (*(void (**)(void, uint64_t))(v17 + 8))(v24[0], v10);
      uint64_t v20 = (uint64_t)v33;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v33, v18, v27);
    }
    else
    {
      sub_20A4342F4((uint64_t)a1, (uint64_t)v32);
      type metadata accessor for StockForYouFeedGroupConfigData();
      sub_20A6FE8BC(&qword_26AC7A030, (void (*)(uint64_t))type metadata accessor for StockForYouFeedGroupConfigData);
      sub_20A6FE8BC(&qword_26AC7A028, (void (*)(uint64_t))type metadata accessor for StockForYouFeedGroupConfigData);
      sub_20A8CC560();
      (*(void (**)(void, uint64_t))(v17 + 8))(v24[0], v10);
      uint64_t v20 = (uint64_t)v33;
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v33, v8, v26);
    }
    uint64_t v23 = v29;
    swift_storeEnumTagMultiPayload();
    sub_20A6FE858(v20, v23);
    uint64_t v21 = (uint64_t)v19;
  }
  return __swift_destroy_boxed_opaque_existential_1(v21);
}

uint64_t sub_20A6FD6FC(uint64_t a1)
{
  v16[1] = a1;
  sub_20A460E5C();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A460F28();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ForYouFeedGroupConfig();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A676EC4(v1, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v14, v3);
    sub_20A8CC580();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    sub_20A8CC580();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_20A6FD950()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A6FD99C()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A6FD9E4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_20A8CF5B0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_20A6FDA38@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_20A8CF5B0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_20A6FDA90(uint64_t a1)
{
  unint64_t v2 = sub_20A6FE7B0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A6FDACC(uint64_t a1)
{
  unint64_t v2 = sub_20A6FE7B0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20A6FDB08(char *a1, char *a2)
{
  return sub_20A44F2D4(*a1, *a2);
}

uint64_t sub_20A6FDB14()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A6FDB94()
{
  sub_20A8CE360();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A6FDC00()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A6FDC7C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_20A8CF5B0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_20A6FDCDC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6B636F7473;
  if (*v1) {
    uint64_t v2 = 0x64657461727563;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_20A6FDD18()
{
  return sub_20A8CE5A0();
}

uint64_t sub_20A6FDD78()
{
  return sub_20A8CE580();
}

uint64_t sub_20A6FDDC8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A6FD24C(a1, a2);
}

uint64_t sub_20A6FDDE0(uint64_t a1)
{
  return sub_20A6FD6FC(a1);
}

uint64_t sub_20A6FDDF8()
{
  uint64_t v1 = v0;
  sub_20A460E5C();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A460F28();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A676EC4(v1, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v14, v3);
    uint64_t v15 = sub_20A8CC530();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    uint64_t v15 = sub_20A8CC530();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v15;
}

uint64_t sub_20A6FE030(uint64_t a1, uint64_t a2)
{
  return sub_20A6FE2E0(a1, a2, MEMORY[0x263F597E8]);
}

uint64_t sub_20A6FE050(uint64_t a1, uint64_t a2)
{
  return sub_20A6FE080(a1, a2, MEMORY[0x263F597C0]);
}

uint64_t sub_20A6FE068(uint64_t a1, uint64_t a2)
{
  return sub_20A6FE080(a1, a2, MEMORY[0x263F597B8]);
}

uint64_t sub_20A6FE080(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v19 = a3;
  sub_20A460E5C();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A460F28();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A676EC4(v3, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v16, v5);
    v19(v5);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v16, v10);
    v19(v10);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_20A6FE2C8(uint64_t a1, uint64_t a2)
{
  return sub_20A6FE2E0(a1, a2, MEMORY[0x263F597D8]);
}

uint64_t sub_20A6FE2E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = v3;
  sub_20A460E5C();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A460F28();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A676EC4(v5, (uint64_t)v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v18, v7);
    uint64_t v19 = a3(v7);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v18, v12);
    uint64_t v19 = a3(v12);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return v19;
}

uint64_t sub_20A6FE518(uint64_t a1, uint64_t a2)
{
  return sub_20A6FE2E0(a1, a2, MEMORY[0x263F597E0]);
}

uint64_t sub_20A6FE530(uint64_t a1, uint64_t a2)
{
  return sub_20A6FE2E0(a1, a2, MEMORY[0x263F597C8]);
}

uint64_t sub_20A6FE548(uint64_t a1, uint64_t a2)
{
  return sub_20A6FE2E0(a1, a2, MEMORY[0x263F597D0]);
}

uint64_t sub_20A6FE564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A6FE8BC(&qword_26AC729B0, (void (*)(uint64_t))type metadata accessor for ForYouFeedGroupConfig);

  return MEMORY[0x270F4F5D8](a1, a2, a3, v6);
}

uint64_t sub_20A6FE5E8()
{
  return sub_20A6FE8BC(&qword_26AC729D0, (void (*)(uint64_t))type metadata accessor for ForYouFeedGroupConfig);
}

uint64_t type metadata accessor for ForYouFeedGroupConfig()
{
  uint64_t result = qword_26AC729D8;
  if (!qword_26AC729D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A6FE67C()
{
  return sub_20A6FE8BC(&qword_26AC729C0, (void (*)(uint64_t))type metadata accessor for ForYouFeedGroupConfig);
}

uint64_t sub_20A6FE6C4()
{
  return sub_20A6FE8BC(&qword_26AC729C8, (void (*)(uint64_t))type metadata accessor for ForYouFeedGroupConfig);
}

uint64_t sub_20A6FE70C()
{
  return sub_20A6FE8BC(&qword_26AC729B8, (void (*)(uint64_t))type metadata accessor for ForYouFeedGroupConfig);
}

void sub_20A6FE754()
{
  if (!qword_26AC7FE10)
  {
    sub_20A6FE7B0();
    unint64_t v0 = sub_20A8CF660();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FE10);
    }
  }
}

unint64_t sub_20A6FE7B0()
{
  unint64_t result = qword_26AC72988;
  if (!qword_26AC72988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC72988);
  }
  return result;
}

unint64_t sub_20A6FE804()
{
  unint64_t result = qword_26AC729A8;
  if (!qword_26AC729A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC729A8);
  }
  return result;
}

uint64_t sub_20A6FE858(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ForYouFeedGroupConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A6FE8BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ForYouFeedGroupConfig.CodingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A6FE9D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedGroupConfig.CodingType()
{
  return &type metadata for ForYouFeedGroupConfig.CodingType;
}

unsigned char *storeEnumTagSinglePayload for ForYouFeedGroupConfig.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A6FEAA4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedGroupConfig.CodingKeys()
{
  return &type metadata for ForYouFeedGroupConfig.CodingKeys;
}

uint64_t *sub_20A6FEADC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1) {
      sub_20A460E5C();
    }
    else {
      sub_20A460F28();
    }
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20A6FEC0C(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1) {
    sub_20A460E5C();
  }
  else {
    sub_20A460F28();
  }
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_20A6FEC88(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1) {
    sub_20A460E5C();
  }
  else {
    sub_20A460F28();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_20A6FED34(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_20A6FEDF0(a1);
    if (swift_getEnumCaseMultiPayload() == 1) {
      sub_20A460E5C();
    }
    else {
      sub_20A460F28();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20A6FEDF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ForYouFeedGroupConfig();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A6FEE4C(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1) {
    sub_20A460E5C();
  }
  else {
    sub_20A460F28();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_20A6FEEF8(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_20A6FEDF0(a1);
    if (swift_getEnumCaseMultiPayload() == 1) {
      sub_20A460E5C();
    }
    else {
      sub_20A460F28();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_20A6FEFB4()
{
  sub_20A460F28();
  if (v0 <= 0x3F)
  {
    sub_20A460E5C();
    if (v1 <= 0x3F) {
      swift_initEnumMetadataMultiPayload();
    }
  }
}

unint64_t sub_20A6FF07C()
{
  unint64_t result = qword_26763D610;
  if (!qword_26763D610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D610);
  }
  return result;
}

unint64_t sub_20A6FF0D4()
{
  unint64_t result = qword_26763D618;
  if (!qword_26763D618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D618);
  }
  return result;
}

unint64_t sub_20A6FF12C()
{
  unint64_t result = qword_26AC72998;
  if (!qword_26AC72998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC72998);
  }
  return result;
}

unint64_t sub_20A6FF184()
{
  unint64_t result = qword_26AC72990;
  if (!qword_26AC72990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC72990);
  }
  return result;
}

unint64_t sub_20A6FF1D8()
{
  unint64_t result = qword_26AC729A0;
  if (!qword_26AC729A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC729A0);
  }
  return result;
}

void sub_20A6FF22C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v5 = sub_20A8C6E90();
  uint64_t v26 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6FF5D4();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C4530();
  double v14 = MEMORY[0x270FA5388](v13);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))((char *)&v24 - v15, a1, v13, v14);
  if (swift_dynamicCast())
  {
    uint64_t v25 = v7;
    uint64_t v17 = v28;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v18 = (void *)sub_20A8C4510();
    uint64_t v19 = sub_20A8C4840();
    unint64_t v21 = v20;

    if (!v3)
    {
      sub_20A6FF668(&qword_26763D620, MEMORY[0x263F79F18]);
      sub_20A8C5950();
      sub_20A531704(v19, v21);
      (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v17, v25, v5);
      uint64_t v22 = type metadata accessor for EngagementEvent();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v17, 0, 1, v22);
    }
  }
  else
  {
    uint64_t v23 = type metadata accessor for EngagementEvent();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v28, 1, 1, v23);
  }
}

uint64_t type metadata accessor for WatchSymbolEventTranslator()
{
  return self;
}

void sub_20A6FF5BC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

void sub_20A6FF5D4()
{
  if (!qword_26AC69328)
  {
    sub_20A8C6EA0();
    sub_20A6FF668(&qword_26AC69A10, MEMORY[0x263F79F28]);
    unint64_t v0 = sub_20A8C4530();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69328);
    }
  }
}

uint64_t sub_20A6FF668(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6FF6B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  sub_20A6242A0((uint64_t)sub_20A441D78, v4);

  return swift_release();
}

uint64_t type metadata accessor for ForYouFeedMemoryTestSuite()
{
  return self;
}

uint64_t sub_20A6FF834()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_20A6FF86C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v39 = sub_20A8CC280();
  uint64_t v4 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v37 - v8;
  uint64_t v10 = sub_20A8CA180();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = (void *)sub_20A8CE240();
  id v15 = objc_msgSend(a1, sel_objectForKey_, v14);

  if (!v15)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_20A8CF270();
  swift_unknownObjectRelease();
  sub_20A441D28(v41, v42);
  type metadata accessor for ForYouFeedViewController();
  swift_dynamicCast();
  id v16 = v40;
  id v17 = objc_msgSend(v40, sel_splitViewController);
  if (!v17)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v18 = v17;
  unsigned int v19 = objc_msgSend(v17, sel_isCollapsed);

  if (!v19)
  {
LABEL_6:
    sub_20A8C9BF0();
    uint64_t v23 = (void *)sub_20A8C94C0();
    swift_release();
    objc_msgSend(v23, sel_bounds);
    CGFloat v25 = v24;
    CGFloat v27 = v26;
    CGFloat v29 = v28;
    CGFloat v31 = v30;

    v43.origin.CGFloat x = v25;
    v43.origin.CGFloat y = v27;
    v43.size.CGFloat width = v29;
    v43.size.CGFloat height = v31;
    *(double *)&uint64_t v32 = CGRectGetHeight(v43) * 20.0;
    sub_20A8C9BF0();
    uint64_t v33 = (void *)sub_20A8C94C0();
    swift_release();
    sub_20A8CC270();
    MEMORY[0x2105245B0](v6, 10.0);
    uint64_t v34 = *(void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v35 = v39;
    v34(v6, v39);
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = v37;
    *(void *)(v36 + 24) = v38;
    swift_retain();
    sub_20A623AD4(v32, 0, v33, (uint64_t)v9, (uint64_t)sub_20A6FFD18, v36, 1.0);

    swift_release();
    v34(v9, v35);
    return;
  }
  unint64_t v20 = (void *)sub_20A8CE240();
  id v21 = objc_msgSend(a1, sel_objectForKey_, v20);

  if (v21)
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
    sub_20A441D28(v41, v42);
    sub_20A8C9D60();
    swift_dynamicCast();
    id v22 = v40;
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F7DB50], v10);
    sub_20A8C9CB0();

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    goto LABEL_6;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_20A6FFCE0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A6FFD18()
{
  return sub_20A6FF6B0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t dispatch thunk of StocksUserActivityIntentSerializerType.intent(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of StocksUserActivityIntentDeserializerType.activity(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t destroy for StockFeedNewsRefreshDataBlueprintModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();

  return __swift_destroy_boxed_opaque_existential_1(a1 + 24);
}

uint64_t initializeWithCopy for StockFeedNewsRefreshDataBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = a2 + 24;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_retain();
  v8(a1 + 24, v5, v7);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t assignWithCopy for StockFeedNewsRefreshDataBlueprintModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for StockFeedNewsRefreshDataBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockFeedNewsRefreshDataBlueprintModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockFeedNewsRefreshDataBlueprintModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedNewsRefreshDataBlueprintModifier()
{
  return &type metadata for StockFeedNewsRefreshDataBlueprintModifier;
}

uint64_t sub_20A70000C(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v254 = a3;
  uint64_t v255 = (void (*)(char *))a2;
  uint64_t v269 = a1;
  uint64_t v253 = sub_20A8C8B80();
  uint64_t v263 = *(void *)(v253 - 8);
  MEMORY[0x270FA5388](v253);
  v261 = (char *)&v242 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7030A8(0, &qword_26AC6A420, MEMORY[0x263F7D950]);
  uint64_t v262 = v4;
  uint64_t v260 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  v259 = (char *)&v242 - v5;
  uint64_t v283 = sub_20A8CC310();
  unint64_t v244 = *(char **)(v283 - 8);
  MEMORY[0x270FA5388](v283);
  uint64_t v278 = (char *)&v242 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v252 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x270FA5388](v252);
  uint64_t v276 = (uint64_t)&v242 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  v251 = (uint64_t *)((char *)&v242 - v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v275 = (uint64_t)&v242 - v11;
  uint64_t v291 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v291);
  unint64_t v289 = (uint64_t *)((char *)&v242 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A42C4A4();
  uint64_t v299 = v13;
  uint64_t v282 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  char v277 = (char *)&v242 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C84C();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v295 = (char *)&v242 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v270 = type metadata accessor for NewsPlacardStockFeedGroup();
  MEMORY[0x270FA5388](v270);
  uint64_t v248 = (uint64_t)&v242 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v267 = (uint64_t)&v242 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v274 = (uint64_t)&v242 - v21;
  MEMORY[0x270FA5388](v22);
  uint64_t v247 = (uint64_t)&v242 - v23;
  MEMORY[0x270FA5388](v24);
  uint64_t v266 = (uint64_t)&v242 - v25;
  MEMORY[0x270FA5388](v26);
  uint64_t v273 = (uint64_t)&v242 - v27;
  uint64_t v296 = sub_20A8CCFE0();
  uint64_t v250 = *(void *)(v296 - 8);
  MEMORY[0x270FA5388](v296);
  unint64_t v286 = (char *)&v242 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  v281 = (char *)&v242 - v30;
  MEMORY[0x270FA5388](v31);
  uint64_t v246 = (char *)&v242 - v32;
  uint64_t v293 = type metadata accessor for StockFeedGroup();
  uint64_t v243 = *(void *)(v293 - 8);
  MEMORY[0x270FA5388](v293);
  uint64_t v272 = (uint64_t)&v242 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  v285 = (void (**)(char *, uint64_t))((char *)&v242 - v35);
  MEMORY[0x270FA5388](v36);
  *(void *)&long long v284 = (char *)&v242 - v37;
  MEMORY[0x270FA5388](v38);
  uint64_t v271 = (uint64_t)&v242 - v39;
  MEMORY[0x270FA5388](v40);
  uint64_t v280 = (void (**)(char *, uint64_t))((char *)&v242 - v41);
  MEMORY[0x270FA5388](v42);
  uint64_t v279 = (char *)&v242 - v43;
  MEMORY[0x270FA5388](v44);
  uint64_t v242 = (uint64_t)&v242 - v45;
  MEMORY[0x270FA5388](v46);
  uint64_t v245 = (uint64_t)&v242 - v47;
  uint64_t v48 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v48);
  v265 = (uint64_t *)((char *)&v242 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v50);
  v264 = (uint64_t *)((char *)&v242 - v51);
  MEMORY[0x270FA5388](v52);
  uint64_t v294 = (uint64_t)&v242 - v53;
  MEMORY[0x270FA5388](v54);
  uint64_t v308 = (uint64_t)&v242 - v55;
  sub_20A7030A8(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  uint64_t v311 = v56;
  *(void *)&long long v290 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  unint64_t v288 = (void (**)(uint64_t, char *, uint64_t))((char *)&v242 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v58);
  v287 = (void (**)(uint64_t, char *, uint64_t))((char *)&v242 - v59);
  MEMORY[0x270FA5388](v60);
  uint64_t v249 = (uint64_t)&v242 - v61;
  MEMORY[0x270FA5388](v62);
  uint64_t v292 = (char *)&v242 - v63;
  MEMORY[0x270FA5388](v64);
  unint64_t v307 = (char *)&v242 - v65;
  MEMORY[0x270FA5388](v66);
  uint64_t v310 = (char *)&v242 - v67;
  sub_20A42C388(0);
  uint64_t v69 = v68 - 8;
  MEMORY[0x270FA5388](v68);
  uint64_t v71 = (char *)&v242 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A46CC8C();
  MEMORY[0x270FA5388](v72 - 8);
  v258 = (char *)&v242 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_20A8C2830();
  uint64_t v75 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  BOOL v77 = (char *)&v242 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v78 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
  sub_20A7030A8(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  uint64_t v80 = v79;
  uint64_t v81 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  v306 = (char *)&v242 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v83);
  uint64_t v85 = (char *)&v242 - v84;
  MEMORY[0x270FA5388](v86);
  uint64_t v297 = (char *)&v242 - v87;
  sub_20A8C2820();
  uint64_t v257 = sub_20A8C2810();
  uint64_t v256 = v88;
  (*(void (**)(char *, uint64_t))(v75 + 8))(v77, v74);
  uint64_t v268 = v81;
  v304 = *(void (**)(char *, uint64_t, uint64_t))(v81 + 16);
  v305 = (void *)(v81 + 16);
  v304(v85, v269, v80);
  uint64_t v316 = MEMORY[0x263F8EE78];
  sub_20A70319C((unint64_t *)&unk_26AC6ACA0, (unint64_t *)&qword_26AC6ACC0, v78);
  uint64_t v89 = v80;
  sub_20A8CE4B0();
  uint64_t v90 = &v71[*(int *)(v69 + 44)];
  sub_20A70319C((unint64_t *)&unk_26AC6ACB0, (unint64_t *)&qword_26AC6ACC0, v78);
  uint64_t v91 = *(void *)v90;
  sub_20A8CE8A0();
  uint64_t v309 = v48;
  uint64_t v301 = v80;
  if (v91 != (void)v314)
  {
    v303 = (void (**)(char *))(v290 + 16);
    v302 = (void (**)(char *, uint64_t))(v268 + 8);
    uint64_t v115 = (void (**)(char *, char *, uint64_t))(v290 + 32);
    uint64_t v300 = (void (**)(char *, uint64_t))(v290 + 8);
    uint64_t v116 = v307;
    do
    {
      uint64_t v122 = (void (*)(long long *, void))sub_20A8CE8C0();
      uint64_t v123 = v311;
      (*v303)(v116);
      v122(&v314, 0);
      uint64_t v124 = v306;
      v304(v306, (uint64_t)v71, v89);
      sub_20A8CE8B0();
      (*v302)(v124, v89);
      uint64_t v125 = *v115;
      (*v115)(v310, v116, v123);
      sub_20A8C8820();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v117 = v308;
          swift_bridgeObjectRelease();
          sub_20A42C980();
          uint64_t v119 = v117 + *(int *)(v118 + 64);
          uint64_t v120 = (uint64_t (*)(void))sub_20A42C764;
          goto LABEL_7;
        case 2u:
          uint64_t v120 = (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor;
          uint64_t v119 = v308;
LABEL_7:
          sub_20A7031E0(v119, v120);
          goto LABEL_8;
        case 3u:
          goto LABEL_12;
        case 4u:
        case 5u:
        case 6u:
        case 7u:
LABEL_8:
          (*v300)(v310, v311);
          break;
        default:
          sub_20A7031E0(v308, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
LABEL_12:
          v125(v292, v310, v311);
          uint64_t v126 = v316;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_20A68C634(0, *(void *)(v126 + 16) + 1, 1);
            uint64_t v126 = v316;
          }
          unint64_t v128 = *(void *)(v126 + 16);
          unint64_t v127 = *(void *)(v126 + 24);
          if (v128 >= v127 >> 1)
          {
            sub_20A68C634(v127 > 1, v128 + 1, 1);
            uint64_t v126 = v316;
          }
          *(void *)(v126 + 16) = v128 + 1;
          v125((char *)(v126+ ((*(unsigned __int8 *)(v290 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v290 + 80))+ *(void *)(v290 + 72) * v128), v292, v311);
          uint64_t v316 = v126;
          uint64_t v89 = v301;
          break;
      }
      uint64_t v121 = *(void *)v90;
      sub_20A8CE8A0();
    }
    while (v121 != (void)v314);
  }
  sub_20A7031E0((uint64_t)v71, (uint64_t (*)(void))sub_20A42C388);
  uint64_t v92 = v316;
  uint64_t v93 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
  uint64_t v94 = sub_20A70319C(&qword_26AC69EF8, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  uint64_t v95 = sub_20A70319C(&qword_26AC69EF0, (unint64_t *)&qword_26AC69F10, v93);
  MEMORY[0x21051E250](v92, v311, v94, v95);
  uint64_t v96 = sub_20A703060(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
  uint64_t v97 = sub_20A703060(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
  uint64_t v98 = v297;
  uint64_t v308 = v96;
  uint64_t v310 = (char *)v97;
  sub_20A8CBA40();
  unint64_t v99 = v298[2];
  uint64_t v100 = v296;
  int v101 = v286;
  uint64_t v102 = (uint64_t)v285;
  uint64_t v103 = v284;
  switch(v99 >> 61)
  {
    case 1uLL:
      uint64_t v129 = *(void *)((v99 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v130 = *(void *)((v99 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v131 = *(char **)(v129 + 16);
      if (!v131)
      {
        swift_retain();
LABEL_67:
        uint64_t v230 = v249;
        sub_20A887A94(v130, v249);
        uint64_t v180 = v98;
        sub_20A8CBA80();
        (*(void (**)(uint64_t, uint64_t))(v290 + 8))(v230, v311);
        sub_20A8CCAC0();
        swift_retain();
        sub_20A8CCAB0();
        type metadata accessor for StockFeedServiceConfig();
        sub_20A703060(&qword_26AC73FD0, (void (*)(uint64_t))type metadata accessor for StockFeedServiceConfig);
        uint64_t v231 = sub_20A8CCA90();
        swift_release();
        uint64_t v228 = v253;
        if (v231) {
          goto LABEL_73;
        }
        goto LABEL_68;
      }
      v305 = v298 + 3;
      uint64_t v132 = v129 + ((*(unsigned __int8 *)(v243 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v243 + 80));
      v306 = (char *)v130;
      v304 = *(void (**)(char *, uint64_t, uint64_t))(v243 + 72);
      uint64_t v292 = v244 + 32;
      unint64_t v288 = (void (**)(uint64_t, char *, uint64_t))(v244 + 16);
      unint64_t v286 = v244 + 8;
      v285 = (void (**)(char *, uint64_t))(v282 + 8);
      v303 = (void (**)(char *))(v250 + 8);
      v302 = (void (**)(char *, uint64_t))(v290 + 8);
      uint64_t v274 = v129;
      swift_bridgeObjectRetain();
      uint64_t v276 = v130 & 0x7FFFFFFFFFFFFFFFLL;
      swift_retain();
      uint64_t v300 = 0;
      long long v284 = xmmword_20A8D3DC0;
      uint64_t v133 = v281;
      uint64_t v134 = (uint64_t)v280;
      uint64_t v135 = (uint64_t)v279;
      while (1)
      {
        unint64_t v307 = v131;
        sub_20A5245A0(v132, v135, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
        uint64_t v146 = __swift_project_boxed_opaque_existential_1(v305, v298[6]);
        type metadata accessor for StockFeedServiceConfig();
        sub_20A703060(&qword_26AC73FD0, (void (*)(uint64_t))type metadata accessor for StockFeedServiceConfig);
        sub_20A8CC780();
        uint64_t v147 = (void *)*v146;
        sub_20A5245A0(v135, v134, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload)
        {
          if (EnumCaseMultiPayload == 1)
          {
            sub_20A52462C(v134, v275, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
            sub_20A5245A0(v135, v271, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
            int v149 = swift_getEnumCaseMultiPayload();
            if (v149)
            {
              if (v149 == 1)
              {
                uint64_t v150 = v251;
                sub_20A52462C(v271, (uint64_t)v251, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
                sub_20A42C980();
                uint64_t v152 = (uint64_t)v264;
                uint64_t v153 = (uint64_t)v264 + *(int *)(v151 + 64);
                uint64_t v154 = v150[1];
                void *v264 = *v150;
                *(void *)(v152 + 8) = v154;
                uint64_t v155 = *(int *)(v252 + 32);
                *(unsigned char *)(v152 + 16) = *((unsigned char *)v150 + *(int *)(v252 + 28));
                sub_20A5245A0((uint64_t)v150 + v155, v153, (uint64_t (*)(void))sub_20A42C764);
                swift_bridgeObjectRetain();
                sub_20A7031E0((uint64_t)v150, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
              }
              else
              {
                uint64_t v152 = (uint64_t)v264;
                (*(void (**)(void *, uint64_t, uint64_t))v292)(v264, v271, v283);
              }
            }
            else
            {
              uint64_t v167 = v247;
              sub_20A52462C(v271, v247, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
              sub_20A7031E0(v167, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
              uint64_t v152 = (uint64_t)v264;
            }
            swift_storeEnumTagMultiPayload();
            uint64_t v168 = sub_20A5245A0(v152, v294, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
            uint64_t v169 = v275;
            uint64_t v170 = *(void *)(v275 + 16);
            MEMORY[0x270FA5388](v168);
            uint64_t v133 = v281;
            uint64_t v238 = v281;
            uint64_t v239 = v169;
            uint64_t v240 = (uint64_t)v147;
            swift_bridgeObjectRetain();
            uint64_t v171 = v152;
            uint64_t v172 = v300;
            uint64_t v173 = sub_20A449F28((void (*)(uint64_t))sub_20A5248F4, (uint64_t)(&v242 - 6), v170, (uint64_t)v312);
            uint64_t v300 = v172;
            swift_bridgeObjectRelease();
            uint64_t v174 = sub_20A703060(&qword_26AC69D78, (void (*)(uint64_t))sub_20A42C4A4);
            uint64_t v175 = sub_20A703060(&qword_26AC69D70, (void (*)(uint64_t))sub_20A42C4A4);
            MEMORY[0x21051E250](v173, v299, v174, v175);
            uint64_t v142 = (char *)v287;
            sub_20A8C8810();
            sub_20A7031E0(v171, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
            sub_20A7031E0(v169, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
            uint64_t v134 = (uint64_t)v280;
            uint64_t v135 = (uint64_t)v279;
            uint64_t v144 = v296;
          }
          else
          {
            uint64_t v136 = v278;
            uint64_t v137 = v134;
            uint64_t v138 = v283;
            (*(void (**)(char *, uint64_t, uint64_t))v292)(v278, v137, v283);
            (*v288)(v294, v136, v138);
            swift_storeEnumTagMultiPayload();
            sub_20A703240(0, (unint64_t *)&qword_26AC7FF20, (uint64_t (*)(uint64_t))sub_20A42C4A4, MEMORY[0x263F8E0F8]);
            uint64_t v139 = swift_allocObject();
            *(_OWORD *)(v139 + 16) = v284;
            __swift_project_boxed_opaque_existential_1(v147 + 7, v147[10]);
            uint64_t v133 = v281;
            sub_20A8CCBB0();
            swift_storeEnumTagMultiPayload();
            sub_20A8C8320();
            uint64_t v140 = sub_20A703060(&qword_26AC69D78, (void (*)(uint64_t))sub_20A42C4A4);
            uint64_t v141 = sub_20A703060(&qword_26AC69D70, (void (*)(uint64_t))sub_20A42C4A4);
            MEMORY[0x21051E240](v139, v299, v140, v141);
            uint64_t v142 = (char *)v287;
            sub_20A8C8810();
            uint64_t v143 = v136;
            uint64_t v135 = (uint64_t)v279;
            uint64_t v144 = v296;
            uint64_t v145 = v138;
            uint64_t v134 = (uint64_t)v280;
            (*(void (**)(char *, uint64_t))v286)(v143, v145);
          }
          goto LABEL_21;
        }
        uint64_t v156 = v273;
        sub_20A52462C(v134, v273, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
        __swift_project_boxed_opaque_existential_1(v147 + 2, v147[5]);
        char v157 = sub_20A8C3540();
        uint64_t v158 = v266;
        sub_20A5245A0(v156, v266, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
        if ((v157 & 1) == 0) {
          break;
        }
        char v159 = *(unsigned char *)(v158 + *(int *)(v270 + 20));
        sub_20A7031E0(v158, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
        uint64_t v142 = (char *)v287;
        if ((v159 & 1) == 0) {
          goto LABEL_31;
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v160 = sub_20A703060(&qword_26AC69D78, (void (*)(uint64_t))sub_20A42C4A4);
        uint64_t v161 = sub_20A703060(&qword_26AC69D70, (void (*)(uint64_t))sub_20A42C4A4);
        MEMORY[0x21051E240](MEMORY[0x263F8EE78], v299, v160, v161);
        sub_20A8C8810();
        swift_storeEnumTagMultiPayload();
LABEL_34:
        uint64_t v144 = v296;
        uint64_t v166 = v277;
        sub_20A8C8320();
        sub_20A8C8880();
        (*v285)(v166, v299);
        sub_20A7031E0(v273, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
LABEL_21:
        ((void (*)(char *, uint64_t))*v303)(v133, v144);
        sub_20A8CBA80();
        (*v302)(v142, v311);
        sub_20A7031E0(v135, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
        v132 += (uint64_t)v304;
        uint64_t v131 = v307 - 1;
        if (v307 == (char *)1)
        {
          swift_bridgeObjectRelease();
          uint64_t v98 = v297;
          uint64_t v130 = (uint64_t)v306;
          goto LABEL_67;
        }
      }
      sub_20A7031E0(v158, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
      uint64_t v142 = (char *)v287;
LABEL_31:
      swift_storeEnumTagMultiPayload();
      uint64_t v162 = sub_20A703060(&qword_26AC69D78, (void (*)(uint64_t))sub_20A42C4A4);
      uint64_t v163 = sub_20A703060(&qword_26AC69D70, (void (*)(uint64_t))sub_20A42C4A4);
      MEMORY[0x21051E240](MEMORY[0x263F8EE78], v299, v162, v163);
      sub_20A8C8810();
      if (qword_26AC82DA0 != -1) {
        swift_once();
      }
      uint64_t v164 = *(void *)algn_26AC9ED28;
      uint64_t v165 = v289;
      *unint64_t v289 = qword_26AC9ED20;
      v165[1] = v164;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 2uLL:
      sub_20A524694();
      uint64_t v176 = swift_projectBox();
      uint64_t v177 = v242;
      sub_20A5245A0(v176, v242, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
      __swift_project_boxed_opaque_existential_1(v298 + 3, v298[6]);
      type metadata accessor for StockFeedServiceConfig();
      sub_20A703060(&qword_26AC73FD0, (void (*)(uint64_t))type metadata accessor for StockFeedServiceConfig);
      swift_retain();
      uint64_t v178 = (uint64_t)v246;
      sub_20A8CC780();
      uint64_t v179 = v249;
      sub_20A6B4B90(v177, v178, v249);
      (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v178, v100);
      uint64_t v180 = v98;
      sub_20A8CBA80();
      (*(void (**)(uint64_t, uint64_t))(v290 + 8))(v179, v311);
      sub_20A8CCAC0();
      swift_retain();
      sub_20A8CCAB0();
      uint64_t v181 = sub_20A8CCA90();
      swift_release();
      if (v181)
      {
        *((void *)&v315 + 1) = sub_20A8CC520();
        *(void *)&long long v314 = v181;
      }
      else
      {
        long long v314 = 0u;
        long long v315 = 0u;
      }
      uint64_t v228 = v253;
      uint64_t v229 = v301;
      sub_20A8CBB10();
      swift_release_n();
      sub_20A7031E0(v177, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
      goto LABEL_77;
    case 3uLL:
      uint64_t v182 = *(void *)((v99 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v183 = *(void *)((v99 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v184 = *(char **)(v182 + 16);
      if (v184)
      {
        v305 = v298 + 3;
        uint64_t v185 = v182 + ((*(unsigned __int8 *)(v243 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v243 + 80));
        v306 = (char *)v183;
        v304 = *(void (**)(char *, uint64_t, uint64_t))(v243 + 72);
        uint64_t v292 = v244 + 32;
        v287 = (void (**)(uint64_t, char *, uint64_t))(v244 + 16);
        v281 = v244 + 8;
        uint64_t v280 = (void (**)(char *, uint64_t))(v282 + 8);
        v303 = (void (**)(char *))(v250 + 8);
        v302 = (void (**)(char *, uint64_t))(v290 + 8);
        uint64_t v275 = v182;
        swift_bridgeObjectRetain();
        uint64_t v279 = (char *)(v183 & 0x7FFFFFFFFFFFFFFFLL);
        swift_retain();
        uint64_t v300 = 0;
        long long v290 = xmmword_20A8D3DC0;
        while (1)
        {
          unint64_t v307 = v184;
          sub_20A5245A0(v185, v103, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
          uint64_t v195 = __swift_project_boxed_opaque_existential_1(v305, v298[6]);
          type metadata accessor for StockFeedServiceConfig();
          sub_20A703060(&qword_26AC73FD0, (void (*)(uint64_t))type metadata accessor for StockFeedServiceConfig);
          sub_20A8CC780();
          uint64_t v196 = (void *)*v195;
          sub_20A5245A0(v103, v102, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
          int v197 = swift_getEnumCaseMultiPayload();
          if (v197)
          {
            if (v197 == 1)
            {
              sub_20A52462C(v102, v276, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
              sub_20A5245A0(v103, v272, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
              int v198 = swift_getEnumCaseMultiPayload();
              if (v198)
              {
                if (v198 == 1)
                {
                  uint64_t v199 = v251;
                  sub_20A52462C(v272, (uint64_t)v251, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
                  sub_20A42C980();
                  uint64_t v201 = (uint64_t)v265;
                  uint64_t v202 = (uint64_t)v265 + *(int *)(v200 + 64);
                  uint64_t v203 = v199[1];
                  void *v265 = *v199;
                  *(void *)(v201 + 8) = v203;
                  uint64_t v204 = *(int *)(v252 + 32);
                  *(unsigned char *)(v201 + 16) = *((unsigned char *)v199 + *(int *)(v252 + 28));
                  sub_20A5245A0((uint64_t)v199 + v204, v202, (uint64_t (*)(void))sub_20A42C764);
                  swift_bridgeObjectRetain();
                  sub_20A7031E0((uint64_t)v199, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
                }
                else
                {
                  uint64_t v201 = (uint64_t)v265;
                  (*(void (**)(void *, uint64_t, uint64_t))v292)(v265, v272, v283);
                }
              }
              else
              {
                uint64_t v216 = v248;
                sub_20A52462C(v272, v248, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
                sub_20A7031E0(v216, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
                uint64_t v201 = (uint64_t)v265;
              }
              swift_storeEnumTagMultiPayload();
              uint64_t v217 = sub_20A5245A0(v201, v294, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
              uint64_t v218 = v276;
              uint64_t v219 = *(void *)(v276 + 16);
              MEMORY[0x270FA5388](v217);
              unint64_t v220 = v286;
              uint64_t v238 = v286;
              uint64_t v239 = v218;
              uint64_t v240 = (uint64_t)v196;
              swift_bridgeObjectRetain();
              uint64_t v221 = v201;
              uint64_t v222 = v300;
              uint64_t v223 = sub_20A449F28((void (*)(uint64_t))sub_20A524608, (uint64_t)(&v242 - 6), v219, (uint64_t)v313);
              uint64_t v300 = v222;
              swift_bridgeObjectRelease();
              uint64_t v224 = sub_20A703060(&qword_26AC69D78, (void (*)(uint64_t))sub_20A42C4A4);
              uint64_t v225 = sub_20A703060(&qword_26AC69D70, (void (*)(uint64_t))sub_20A42C4A4);
              MEMORY[0x21051E250](v223, v299, v224, v225);
              unint64_t v191 = (char *)v288;
              sub_20A8C8810();
              sub_20A7031E0(v221, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
              uint64_t v226 = v218;
              int v101 = v220;
              sub_20A7031E0(v226, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
              uint64_t v102 = (uint64_t)v285;
              uint64_t v103 = v284;
              uint64_t v193 = v296;
            }
            else
            {
              uint64_t v186 = v278;
              uint64_t v187 = v283;
              (*(void (**)(char *, uint64_t, uint64_t))v292)(v278, v102, v283);
              (*v287)(v294, v186, v187);
              swift_storeEnumTagMultiPayload();
              sub_20A703240(0, (unint64_t *)&qword_26AC7FF20, (uint64_t (*)(uint64_t))sub_20A42C4A4, MEMORY[0x263F8E0F8]);
              uint64_t v188 = swift_allocObject();
              *(_OWORD *)(v188 + 16) = v290;
              __swift_project_boxed_opaque_existential_1(v196 + 7, v196[10]);
              uint64_t v102 = (uint64_t)v285;
              sub_20A8CCBB0();
              swift_storeEnumTagMultiPayload();
              sub_20A8C8320();
              uint64_t v189 = sub_20A703060(&qword_26AC69D78, (void (*)(uint64_t))sub_20A42C4A4);
              uint64_t v190 = sub_20A703060(&qword_26AC69D70, (void (*)(uint64_t))sub_20A42C4A4);
              MEMORY[0x21051E240](v188, v299, v189, v190);
              unint64_t v191 = (char *)v288;
              uint64_t v103 = v284;
              sub_20A8C8810();
              int v192 = v186;
              uint64_t v193 = v296;
              uint64_t v194 = v187;
              int v101 = v286;
              (*(void (**)(char *, uint64_t))v281)(v192, v194);
            }
            goto LABEL_43;
          }
          uint64_t v205 = v274;
          sub_20A52462C(v102, v274, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
          __swift_project_boxed_opaque_existential_1(v196 + 2, v196[5]);
          char v206 = sub_20A8C3540();
          uint64_t v207 = v267;
          sub_20A5245A0(v205, v267, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
          if ((v206 & 1) == 0) {
            break;
          }
          char v208 = *(unsigned char *)(v207 + *(int *)(v270 + 20));
          sub_20A7031E0(v207, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
          unint64_t v191 = (char *)v288;
          if ((v208 & 1) == 0) {
            goto LABEL_53;
          }
          swift_storeEnumTagMultiPayload();
          uint64_t v209 = sub_20A703060(&qword_26AC69D78, (void (*)(uint64_t))sub_20A42C4A4);
          uint64_t v210 = sub_20A703060(&qword_26AC69D70, (void (*)(uint64_t))sub_20A42C4A4);
          MEMORY[0x21051E240](MEMORY[0x263F8EE78], v299, v209, v210);
          sub_20A8C8810();
          swift_storeEnumTagMultiPayload();
LABEL_56:
          uint64_t v193 = v296;
          unint64_t v215 = v277;
          sub_20A8C8320();
          sub_20A8C8880();
          (*v280)(v215, v299);
          sub_20A7031E0(v274, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
LABEL_43:
          ((void (*)(char *, uint64_t))*v303)(v101, v193);
          sub_20A8CBA80();
          (*v302)(v191, v311);
          sub_20A7031E0(v103, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
          v185 += (uint64_t)v304;
          uint64_t v184 = v307 - 1;
          if (v307 == (char *)1)
          {
            swift_bridgeObjectRelease();
            goto LABEL_72;
          }
        }
        sub_20A7031E0(v207, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
        unint64_t v191 = (char *)v288;
LABEL_53:
        swift_storeEnumTagMultiPayload();
        uint64_t v211 = sub_20A703060(&qword_26AC69D78, (void (*)(uint64_t))sub_20A42C4A4);
        uint64_t v212 = sub_20A703060(&qword_26AC69D70, (void (*)(uint64_t))sub_20A42C4A4);
        MEMORY[0x21051E240](MEMORY[0x263F8EE78], v299, v211, v212);
        sub_20A8C8810();
        if (qword_26AC82DA0 != -1) {
          swift_once();
        }
        uint64_t v213 = *(void *)algn_26AC9ED28;
        unint64_t v214 = v289;
        *unint64_t v289 = qword_26AC9ED20;
        v214[1] = v213;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        goto LABEL_56;
      }
      swift_retain();
LABEL_72:
      sub_20A8CCAC0();
      swift_retain();
      sub_20A8CCAB0();
      type metadata accessor for StockFeedServiceConfig();
      sub_20A703060(&qword_26AC73FD0, (void (*)(uint64_t))type metadata accessor for StockFeedServiceConfig);
      uint64_t v231 = sub_20A8CCA90();
      swift_release();
      uint64_t v228 = v253;
      uint64_t v180 = v297;
      if (v231)
      {
LABEL_73:
        *((void *)&v315 + 1) = sub_20A8CC520();
        *(void *)&long long v314 = v231;
      }
      else
      {
LABEL_68:
        long long v314 = 0u;
        long long v315 = 0u;
      }
      uint64_t v232 = v255;
      uint64_t v229 = v301;
      sub_20A8CBB10();
      swift_release_n();
LABEL_78:
      uint64_t v233 = v263;
      v234 = v261;
      (*(void (**)(char *, void, uint64_t))(v263 + 104))(v261, *MEMORY[0x263F7D528], v228);
      uint64_t v235 = sub_20A703060(&qword_26AC76FA0, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
      v241 = v310;
      uint64_t v239 = v235;
      uint64_t v240 = v308;
      uint64_t v238 = v310;
      v236 = v259;
      sub_20A8C9B50();
      (*(void (**)(char *, uint64_t))(v233 + 8))(v234, v228);
      v232(v236);
      (*(void (**)(char *, uint64_t))(v260 + 8))(v236, v262);
      return (*(uint64_t (**)(char *, uint64_t))(v268 + 8))(v180, v229);
    case 4uLL:
      uint64_t v180 = v98;
      sub_20A8CCAC0();
      swift_retain_n();
      sub_20A8CCAB0();
      type metadata accessor for StockFeedServiceConfig();
      sub_20A703060(&qword_26AC73FD0, (void (*)(uint64_t))type metadata accessor for StockFeedServiceConfig);
      uint64_t v227 = sub_20A8CCA90();
      swift_release();
      if (v227)
      {
        *((void *)&v315 + 1) = sub_20A8CC520();
        *(void *)&long long v314 = v227;
      }
      else
      {
        long long v314 = 0u;
        long long v315 = 0u;
      }
      uint64_t v228 = v253;
      uint64_t v229 = v301;
      sub_20A8CBB10();
      swift_release_n();
      goto LABEL_77;
    default:
      sub_20A524694();
      uint64_t v105 = v104;
      uint64_t v106 = swift_projectBox();
      uint64_t v107 = v100;
      uint64_t v108 = *(void *)(v106 + *(int *)(v105 + 48));
      uint64_t v109 = v245;
      sub_20A5245A0(v106, v245, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
      __swift_project_boxed_opaque_existential_1(v298 + 3, v298[6]);
      unint64_t v307 = (char *)type metadata accessor for StockFeedServiceConfig();
      sub_20A703060(&qword_26AC73FD0, (void (*)(uint64_t))type metadata accessor for StockFeedServiceConfig);
      swift_retain();
      uint64_t v110 = (uint64_t)v246;
      sub_20A8CC780();
      uint64_t v111 = v249;
      sub_20A6B4B90(v109, v110, v249);
      (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v110, v107);
      sub_20A8CBA80();
      uint64_t v112 = *(void (**)(uint64_t, uint64_t))(v290 + 8);
      uint64_t v113 = v311;
      v112(v111, v311);
      sub_20A887A94(v108, v111);
      sub_20A8CBA80();
      v112(v111, v113);
      sub_20A8CCAC0();
      swift_retain();
      sub_20A8CCAB0();
      uint64_t v114 = sub_20A8CCA90();
      swift_release();
      if (v114)
      {
        *((void *)&v315 + 1) = sub_20A8CC520();
        *(void *)&long long v314 = v114;
      }
      else
      {
        long long v314 = 0u;
        long long v315 = 0u;
      }
      uint64_t v228 = v253;
      uint64_t v229 = v301;
      uint64_t v180 = v297;
      sub_20A8CBB10();
      swift_release_n();
      sub_20A7031E0(v245, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
LABEL_77:
      uint64_t v232 = v255;
      goto LABEL_78;
  }
}

unint64_t sub_20A702F7C()
{
  unint64_t result = qword_26763D628;
  if (!qword_26763D628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D628);
  }
  return result;
}

uint64_t sub_20A702FD0()
{
  return sub_20A703060(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
}

uint64_t sub_20A703018()
{
  return sub_20A703060(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
}

uint64_t sub_20A703060(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A7030A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for StockFeedSectionDescriptor();
    v8[1] = type metadata accessor for StockFeedModel();
    v8[2] = sub_20A703060(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    v8[3] = sub_20A703060(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A70319C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A7030A8(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A7031E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A703240(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A7032A4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_20A68C494(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = *(void *)(sub_20A8C3F00() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      uint64_t v7 = sub_20A8C3EC0();
      uint64_t v9 = v8;
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_20A68C494(v10 > 1, v11 + 1, 1);
      }
      *(void *)(v14 + 16) = v11 + 1;
      uint64_t v12 = v14 + 16 * v11;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_20A7033DC()
{
  if (qword_26AC6D3D0 != -1) {
    swift_once();
  }
  int64_t v1 = (void *)qword_26AC6D3C8;
  sub_20A43F778();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_20A8D3DC0;
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  id v3 = v1;
  char v4 = sub_20A8C3800();
  uint64_t v5 = MEMORY[0x263F8D530];
  *(void *)(v2 + 56) = MEMORY[0x263F8D4F8];
  *(void *)(v2 + 64) = v5;
  *(unsigned char *)(v2 + 32) = v4 & 1;
  sub_20A8CEA00();
  sub_20A8C7D90();

  swift_bridgeObjectRelease();
  sub_20A4C76AC(0);
  sub_20A8C6670();
  uint64_t v6 = (void *)sub_20A8C6450();
  sub_20A49EF38();
  sub_20A8C6510();
  swift_release();

  uint64_t v7 = (void *)sub_20A8C6450();
  sub_20A8C6520();
  swift_release();

  uint64_t v8 = (void *)sub_20A8C6450();
  uint64_t v9 = sub_20A8C6500();
  swift_release();

  sub_20A703628();
  return v9;
}

uint64_t sub_20A703628()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  if (sub_20A8C3800())
  {
    sub_20A4C76AC(0);
    sub_20A8C6670();
    int64_t v1 = (void *)sub_20A8C6450();
    sub_20A70420C();
    sub_20A8C6510();
    swift_release();

    uint64_t v2 = (void *)sub_20A8C6450();
    uint64_t v3 = sub_20A8C6500();
    swift_release();

    return v3;
  }
  else
  {
    sub_20A70419C();
    swift_allocError();
    sub_20A704318(0, &qword_26763D638, (uint64_t)&type metadata for ForYouFeedPoolStockContent, MEMORY[0x263F7D028]);
    swift_allocObject();
    return sub_20A8C6570();
  }
}

uint64_t sub_20A7037CC(uint64_t *a1, void *a2)
{
  uint64_t v5 = sub_20A8C59F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (char *)v20 - v10;
  uint64_t v12 = *a1;
  uint64_t v13 = a2[30];
  v20[1] = a2[31];
  uint64_t v21 = v12;
  v20[0] = __swift_project_boxed_opaque_existential_1(a2 + 27, v13);
  sub_20A7032A4(v12);
  uint64_t v22 = v2;
  uint64_t v14 = *MEMORY[0x263F7CD50];
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v15(v11, v14, v5);
  v15(v8, v14, v5);
  sub_20A8C39A0();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v8, v5);
  v16(v11, v5);
  *(void *)(swift_allocObject() + 16) = v21;
  swift_bridgeObjectRetain();
  uint64_t v17 = (void *)sub_20A8C6450();
  sub_20A49EF38();
  uint64_t v18 = sub_20A8C6500();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_20A7039F8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v30 = a3;
  uint64_t v5 = sub_20A8C34C0();
  uint64_t v28 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_20A8C40E0();
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A49EF38();
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C2EF0();
  uint64_t v14 = *(void *)(v13 - 8);
  double v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(int *)(v10 + 56);
  uint64_t v19 = &v12[v18];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))(&v12[v18], a1 + v18, v13, v15);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v19, v13);
  uint64_t v20 = a2[25];
  v24[1] = a2[26];
  v24[0] = __swift_project_boxed_opaque_existential_1(a2 + 22, v20);
  __swift_project_boxed_opaque_existential_1(a2 + 17, a2[20]);
  swift_bridgeObjectRetain();
  sub_20A8C3600();
  uint64_t v21 = v26;
  sub_20A8C40D0();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v27);
  uint64_t v22 = sub_20A8C3B10();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v21, v29);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  uint64_t *v30 = v22;
  return result;
}

uint64_t sub_20A703D18@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  if (qword_26AC6D3D0 != -1) {
    swift_once();
  }
  char v4 = (void *)qword_26AC6D3C8;
  sub_20A43F778();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_20A8D3DC0;
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = MEMORY[0x263F8D750];
  *(void *)(v5 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v5 + 64) = v7;
  *(void *)(v5 + 32) = v6;
  id v8 = v4;
  sub_20A8CEA00();
  sub_20A8C7D90();

  swift_bridgeObjectRelease();
  *a2 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_20A703E18(uint64_t *a1, uint64_t a2)
{
  uint64_t v34 = sub_20A8C3F00();
  uint64_t v5 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v33 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  sub_20A4342F4(a2 + 56, (uint64_t)v35);
  uint64_t v8 = v36;
  uint64_t v9 = v37;
  uint64_t v10 = __swift_project_boxed_opaque_existential_1(v35, v36);
  int64_t v11 = *(void *)(v7 + 16);
  if (v11)
  {
    v27[1] = v10;
    _OWORD v27[2] = v9;
    v27[3] = v8;
    uint64_t v28 = a2;
    uint64_t v29 = v2;
    uint64_t v38 = MEMORY[0x263F8EE78];
    sub_20A68C494(0, v11, 0);
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v14 = v7 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    uint64_t v31 = *(void *)(v12 + 56);
    uint64_t v32 = v13;
    uint64_t v30 = (void (**)(char *, uint64_t))(v12 - 8);
    do
    {
      double v15 = v33;
      uint64_t v16 = v34;
      uint64_t v17 = v12;
      v32(v33, v14, v34);
      uint64_t v18 = sub_20A8C3EC0();
      uint64_t v20 = v19;
      (*v30)(v15, v16);
      uint64_t v21 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C494(0, *(void *)(v21 + 16) + 1, 1);
        uint64_t v21 = v38;
      }
      unint64_t v23 = *(void *)(v21 + 16);
      unint64_t v22 = *(void *)(v21 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_20A68C494(v22 > 1, v23 + 1, 1);
        uint64_t v21 = v38;
      }
      *(void *)(v21 + 16) = v23 + 1;
      uint64_t v24 = v21 + 16 * v23;
      *(void *)(v24 + 32) = v18;
      *(void *)(v24 + 40) = v20;
      v14 += v31;
      --v11;
      uint64_t v12 = v17;
    }
    while (v11);
    a2 = v28;
  }
  sub_20A8C3730();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 96), *(void *)(a2 + 120));
  sub_20A8C3B80();
  uint64_t v25 = sub_20A8C6640();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return v25;
}

uint64_t sub_20A7040AC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  sub_20A4342F4((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  *a2 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ForYouFeedPoolService()
{
  return self;
}

uint64_t sub_20A704118@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_20A7033DC();
  *a1 = result;
  a1[1] = v3;
  a1[2] = MEMORY[0x263F8EE88];
  return result;
}

uint64_t sub_20A704150()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 136), *(void *)(v0 + 160));
  return sub_20A8C35B0();
}

unint64_t sub_20A70419C()
{
  unint64_t result = qword_26763D630;
  if (!qword_26763D630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D630);
  }
  return result;
}

uint64_t sub_20A7041F0()
{
  return swift_retain();
}

void sub_20A70420C()
{
  if (!qword_26AC7F668)
  {
    sub_20A70428C();
    sub_20A43F7E0(255, &qword_26AC68E78);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC7F668);
    }
  }
}

void sub_20A70428C()
{
  if (!qword_26AC7F660)
  {
    sub_20A704318(255, (unint64_t *)&qword_26AC7F800, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_20A8CE1A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7F660);
    }
  }
}

void sub_20A704318(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_20A704364()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unsigned char *storeEnumTagSinglePayload for ForYouFeedPoolService.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A704438);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedPoolService.Errors()
{
  return &type metadata for ForYouFeedPoolService.Errors;
}

unint64_t sub_20A704474()
{
  unint64_t result = qword_26763D640;
  if (!qword_26763D640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D640);
  }
  return result;
}

unint64_t sub_20A7044C8(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x546E6F6974636573;
      break;
    case 2:
      unint64_t result = 0x6B636F7473;
      break;
    case 3:
      unint64_t result = 0x6565466B636F7473;
      break;
    case 4:
      unint64_t result = 0x7972657571;
      break;
    case 5:
      unint64_t result = 0x656C6369747261;
      break;
    case 6:
      unint64_t result = 7107189;
      break;
    case 7:
      unint64_t result = 0x736E6F6974706FLL;
      break;
    case 8:
      unint64_t result = 0x6F506C6C6F726373;
      break;
    case 9:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A704610(void *a1)
{
  int v3 = v1;
  sub_20A70C940(0, &qword_26AC7FE50, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A70C684();
  sub_20A8CF8F0();
  LOBYTE(v14[0]) = *v3;
  char v15 = 0;
  sub_20A70C9A4();
  sub_20A8CF6E0();
  if (!v2)
  {
    LOBYTE(v14[0]) = v3[1];
    char v15 = 1;
    sub_20A70C9F8();
    sub_20A8CF6A0();
    uint64_t v10 = type metadata accessor for StocksActivityUserInfo();
    LOBYTE(v14[0]) = 2;
    sub_20A8C3F00();
    sub_20A70CA4C((unint64_t *)&unk_26AC67660, MEMORY[0x263F7AF08]);
    sub_20A8CF6A0();
    LOBYTE(v14[0]) = 3;
    type metadata accessor for StocksActivity.StockFeed.Series(0);
    sub_20A70CA4C(&qword_26AC6C5D0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
    sub_20A8CF6A0();
    LOBYTE(v14[0]) = 4;
    sub_20A8CF670();
    LOBYTE(v14[0]) = 5;
    type metadata accessor for ArticleUserInfoModel();
    sub_20A70CA4C(&qword_26AC71720, (void (*)(uint64_t))type metadata accessor for ArticleUserInfoModel);
    sub_20A8CF6A0();
    LOBYTE(v14[0]) = 6;
    sub_20A8C2530();
    sub_20A70CA4C(&qword_26AC68C68, MEMORY[0x263F06EA8]);
    sub_20A8CF6A0();
    LOBYTE(v14[0]) = 7;
    sub_20A8CF690();
    int64_t v11 = &v3[*(int *)(v10 + 48)];
    long long v12 = v11[1];
    v14[0] = *v11;
    v14[1] = v12;
    char v15 = 8;
    sub_20A70CA94();
    sub_20A8CF6A0();
    LOBYTE(v14[0]) = 9;
    sub_20A8CF670();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_20A704A7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  int v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A705CAC(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v46 = (char *)&v43 - v5;
  sub_20A705CAC(0, &qword_26AC71728, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel, v3);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v43 - v7;
  sub_20A705CAC(0, (unint64_t *)&unk_26AC6C610, type metadata accessor for StocksActivity.StockFeed.Series, v3);
  MEMORY[0x270FA5388](v9 - 8);
  int64_t v11 = (char *)&v43 - v10;
  sub_20A705CAC(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], v3);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v43 - v13;
  sub_20A70C940(0, &qword_26AC830E8, MEMORY[0x263F8E040]);
  uint64_t v48 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v43 - v17;
  uint64_t v52 = type metadata accessor for StocksActivityUserInfo();
  MEMORY[0x270FA5388](v52);
  uint64_t v51 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1[3];
  uint64_t v49 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_20A70C684();
  uint64_t v47 = v18;
  uint64_t v21 = v50;
  sub_20A8CF8E0();
  if (v21) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  }
  uint64_t v22 = (uint64_t)v14;
  uint64_t v50 = v11;
  uint64_t v44 = v8;
  uint64_t v23 = v16;
  char v55 = 0;
  sub_20A70C75C();
  sub_20A8CF640();
  uint64_t v24 = v51;
  *uint64_t v51 = v53;
  char v55 = 1;
  sub_20A70C7B0();
  sub_20A8CF610();
  uint64_t v25 = (int *)v52;
  v24[1] = v53;
  sub_20A8C3F00();
  LOBYTE(v53) = 2;
  sub_20A70CA4C(&qword_26AC83100, MEMORY[0x263F7AF08]);
  sub_20A8CF610();
  sub_20A70C804(v22, (uint64_t)&v24[v25[6]], (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
  type metadata accessor for StocksActivity.StockFeed.Series(0);
  LOBYTE(v53) = 3;
  sub_20A70CA4C(&qword_26AC83108, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
  uint64_t v26 = (uint64_t)v50;
  sub_20A8CF610();
  sub_20A70C804(v26, (uint64_t)&v24[v25[7]], (unint64_t *)&unk_26AC6C610, type metadata accessor for StocksActivity.StockFeed.Series);
  LOBYTE(v53) = 4;
  uint64_t v27 = sub_20A8CF5E0();
  uint64_t v28 = (uint64_t *)&v24[v25[8]];
  *uint64_t v28 = v27;
  v28[1] = v29;
  type metadata accessor for ArticleUserInfoModel();
  LOBYTE(v53) = 5;
  sub_20A70CA4C(&qword_26AC83110, (void (*)(uint64_t))type metadata accessor for ArticleUserInfoModel);
  uint64_t v30 = (uint64_t)v44;
  sub_20A8CF610();
  sub_20A70C804(v30, (uint64_t)&v24[v25[9]], &qword_26AC71728, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel);
  sub_20A8C2530();
  LOBYTE(v53) = 6;
  sub_20A70CA4C(&qword_26AC83090, MEMORY[0x263F06EA8]);
  uint64_t v31 = (uint64_t)v46;
  sub_20A8CF610();
  sub_20A70C804(v31, (uint64_t)&v24[v25[10]], (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
  LOBYTE(v53) = 7;
  uint64_t v32 = sub_20A8CF600();
  uint64_t v33 = &v24[v25[11]];
  *(void *)uint64_t v33 = v32;
  v33[8] = v34 & 1;
  char v55 = 8;
  sub_20A70C884();
  sub_20A8CF610();
  uint64_t v35 = &v24[v25[12]];
  long long v36 = v54;
  *uint64_t v35 = v53;
  v35[1] = v36;
  LOBYTE(v53) = 9;
  uint64_t v37 = sub_20A8CF5E0();
  uint64_t v39 = v38;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v47, v48);
  uint64_t v40 = (uint64_t)v51;
  uint64_t v41 = (uint64_t *)&v51[*(int *)(v52 + 52)];
  *uint64_t v41 = v37;
  v41[1] = v39;
  sub_20A70C8D8(v40, v45, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  return sub_20A70C568(v40, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
}

unint64_t sub_20A7054AC()
{
  return sub_20A7044C8(*v0);
}

uint64_t sub_20A7054B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A708D30(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A7054DC(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_20A7054E8(uint64_t a1)
{
  unint64_t v2 = sub_20A70C684();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A705524(uint64_t a1)
{
  unint64_t v2 = sub_20A70C684();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20A705560@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A704A7C(a1, a2);
}

uint64_t sub_20A705578(void *a1)
{
  return sub_20A704610(a1);
}

uint64_t type metadata accessor for StocksV2UserActivitySerializer()
{
  return self;
}

uint64_t *sub_20A7055B4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v7 = a3[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_20A8C3F00();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_20A705CAC(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for StocksActivity.StockFeed.Series(0);
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      sub_20A705CAC(0, (unint64_t *)&unk_26AC6C610, type metadata accessor for StocksActivity.StockFeed.Series, MEMORY[0x263F8D8F0]);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v16, v10);
      *(void *)&v15[*(int *)(v17 + 20)] = *(void *)&v16[*(int *)(v17 + 20)];
      uint64_t v20 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
      swift_bridgeObjectRetain();
      v20(v15, 0, 1, v17);
    }
    uint64_t v21 = a3[8];
    uint64_t v22 = a3[9];
    uint64_t v23 = (uint64_t *)((char *)v4 + v21);
    uint64_t v24 = (uint64_t *)((char *)a2 + v21);
    uint64_t v25 = v24[1];
    void *v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = (uint64_t *)((char *)v4 + v22);
    uint64_t v27 = (uint64_t *)((char *)a2 + v22);
    uint64_t v28 = (int *)type metadata accessor for ArticleUserInfoModel();
    uint64_t v29 = *((void *)v28 - 1);
    uint64_t v30 = *(unsigned int (**)(void *, uint64_t, int *))(v29 + 48);
    swift_bridgeObjectRetain();
    if (v30(v27, 1, v28))
    {
      sub_20A705CAC(0, &qword_26AC71728, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel, MEMORY[0x263F8D8F0]);
      memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      uint64_t v70 = v29;
      uint64_t v71 = v26;
      uint64_t v32 = v27[1];
      *uint64_t v26 = *v27;
      v26[1] = v32;
      uint64_t v33 = v28[5];
      __dst = (char *)v26 + v33;
      uint64_t v69 = (char *)v27 + v33;
      uint64_t v34 = sub_20A8C2530();
      uint64_t v35 = *(void *)(v34 - 8);
      long long v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
      swift_bridgeObjectRetain();
      if (v36(v69, 1, v34))
      {
        sub_20A705CAC(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
        memcpy(__dst, v69, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(__dst, v69, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v34);
      }
      *((unsigned char *)v71 + v28[6]) = *((unsigned char *)v27 + v28[6]);
      uint64_t v38 = v28[7];
      uint64_t v39 = (char *)v71 + v38;
      uint64_t v40 = (char *)v27 + v38;
      uint64_t v41 = *(void *)((char *)v27 + v38 + 24);
      if (v41)
      {
        uint64_t v42 = *((void *)v40 + 4);
        *((void *)v39 + 3) = v41;
        *((void *)v39 + 4) = v42;
        (**(void (***)(void))(v41 - 8))();
      }
      else
      {
        long long v43 = *((_OWORD *)v40 + 1);
        *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
        *((_OWORD *)v39 + 1) = v43;
        *((void *)v39 + 4) = *((void *)v40 + 4);
      }
      uint64_t v44 = v28[8];
      uint64_t v45 = (void *)((char *)v71 + v44);
      uint64_t v46 = (void *)((char *)v27 + v44);
      uint64_t v47 = v46[1];
      void *v45 = *v46;
      v45[1] = v47;
      uint64_t v48 = *(void (**)(void *, void, uint64_t, int *))(v70 + 56);
      swift_bridgeObjectRetain();
      v48(v71, 0, 1, v28);
    }
    uint64_t v49 = a3[10];
    uint64_t v50 = (char *)v4 + v49;
    uint64_t v51 = (char *)a2 + v49;
    uint64_t v52 = sub_20A8C2530();
    uint64_t v53 = *(void *)(v52 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
    {
      sub_20A705CAC(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
      memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
    }
    uint64_t v55 = a3[11];
    uint64_t v56 = a3[12];
    uint64_t v57 = (char *)v4 + v55;
    uint64_t v58 = (char *)a2 + v55;
    *(void *)uint64_t v57 = *(void *)v58;
    v57[8] = v58[8];
    uint64_t v59 = (char *)v4 + v56;
    uint64_t v60 = (char *)a2 + v56;
    uint64_t v61 = *((void *)v60 + 1);
    if (v61 == 1)
    {
      long long v62 = *((_OWORD *)v60 + 1);
      *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
      *((_OWORD *)v59 + 1) = v62;
    }
    else
    {
      *(void *)uint64_t v59 = *(void *)v60;
      *((void *)v59 + 1) = v61;
      *((_OWORD *)v59 + 1) = *((_OWORD *)v60 + 1);
      swift_bridgeObjectRetain();
    }
    uint64_t v63 = a3[13];
    uint64_t v64 = (uint64_t *)((char *)v4 + v63);
    uint64_t v65 = (uint64_t *)((char *)a2 + v63);
    uint64_t v66 = v65[1];
    *uint64_t v64 = *v65;
    v64[1] = v66;
    swift_bridgeObjectRetain();
  }
  return v4;
}

void sub_20A705CAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A705D10(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_20A8C3F00();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v5);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[9];
  uint64_t v10 = type metadata accessor for ArticleUserInfoModel();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v9 + *(int *)(v10 + 20);
    uint64_t v12 = sub_20A8C2530();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
    uint64_t v14 = v9 + *(int *)(v10 + 28);
    if (*(void *)(v14 + 24)) {
      __swift_destroy_boxed_opaque_existential_1(v14);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = a1 + a2[10];
  uint64_t v16 = sub_20A8C2530();
  uint64_t v17 = *(void *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  if (*(void *)(a1 + a2[12] + 8) != 1) {
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

_WORD *sub_20A706018(_WORD *a1, _WORD *a2, int *a3)
{
  int v3 = a3;
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C3F00();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_20A705CAC(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = v3[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_20A705CAC(0, (unint64_t *)&unk_26AC6C610, type metadata accessor for StocksActivity.StockFeed.Series, MEMORY[0x263F8D8F0]);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
    *(void *)&v13[*(int *)(v15 + 20)] = *(void *)&v14[*(int *)(v15 + 20)];
    uint64_t v18 = *(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56);
    swift_bridgeObjectRetain();
    v18(v13, 0, 1, v15);
  }
  uint64_t v19 = v3[8];
  uint64_t v20 = v3[9];
  uint64_t v21 = (void *)((char *)a1 + v19);
  uint64_t v22 = (void *)((char *)a2 + v19);
  uint64_t v23 = v22[1];
  void *v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = (void *)((char *)a1 + v20);
  uint64_t v25 = (void *)((char *)a2 + v20);
  uint64_t v26 = (int *)type metadata accessor for ArticleUserInfoModel();
  uint64_t v27 = *((void *)v26 - 1);
  uint64_t v28 = *(unsigned int (**)(void *, uint64_t, int *))(v27 + 48);
  swift_bridgeObjectRetain();
  if (v28(v25, 1, v26))
  {
    sub_20A705CAC(0, &qword_26AC71728, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel, MEMORY[0x263F8D8F0]);
    memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    uint64_t v68 = v27;
    uint64_t v69 = v3;
    uint64_t v30 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v30;
    uint64_t v31 = v26[5];
    uint64_t v66 = (char *)v25 + v31;
    __dst = (char *)v24 + v31;
    uint64_t v32 = sub_20A8C2530();
    uint64_t v33 = *(void *)(v32 - 8);
    uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
    swift_bridgeObjectRetain();
    if (v34(v66, 1, v32))
    {
      sub_20A705CAC(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
      memcpy(__dst, v66, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(__dst, v66, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v32);
    }
    *((unsigned char *)v24 + v26[6]) = *((unsigned char *)v25 + v26[6]);
    uint64_t v36 = v26[7];
    uint64_t v37 = (char *)v24 + v36;
    uint64_t v38 = (char *)v25 + v36;
    uint64_t v39 = *(void *)((char *)v25 + v36 + 24);
    if (v39)
    {
      uint64_t v40 = *((void *)v38 + 4);
      *((void *)v37 + 3) = v39;
      *((void *)v37 + 4) = v40;
      (**(void (***)(void))(v39 - 8))();
    }
    else
    {
      long long v41 = *((_OWORD *)v38 + 1);
      *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
      *((_OWORD *)v37 + 1) = v41;
      *((void *)v37 + 4) = *((void *)v38 + 4);
    }
    uint64_t v42 = v26[8];
    long long v43 = (void *)((char *)v24 + v42);
    uint64_t v44 = (void *)((char *)v25 + v42);
    uint64_t v45 = v44[1];
    void *v43 = *v44;
    v43[1] = v45;
    uint64_t v46 = *(void (**)(void *, void, uint64_t, int *))(v68 + 56);
    swift_bridgeObjectRetain();
    v46(v24, 0, 1, v26);
    int v3 = v69;
  }
  uint64_t v47 = v3[10];
  uint64_t v48 = (char *)a1 + v47;
  uint64_t v49 = (char *)a2 + v47;
  uint64_t v50 = sub_20A8C2530();
  uint64_t v51 = *(void *)(v50 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
  {
    sub_20A705CAC(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  }
  uint64_t v53 = v3[11];
  uint64_t v54 = v3[12];
  uint64_t v55 = (char *)a1 + v53;
  uint64_t v56 = (char *)a2 + v53;
  *(void *)uint64_t v55 = *(void *)v56;
  v55[8] = v56[8];
  uint64_t v57 = (char *)a1 + v54;
  uint64_t v58 = (char *)a2 + v54;
  uint64_t v59 = *((void *)v58 + 1);
  if (v59 == 1)
  {
    long long v60 = *((_OWORD *)v58 + 1);
    *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
    *((_OWORD *)v57 + 1) = v60;
  }
  else
  {
    *(void *)uint64_t v57 = *(void *)v58;
    *((void *)v57 + 1) = v59;
    *((_OWORD *)v57 + 1) = *((_OWORD *)v58 + 1);
    swift_bridgeObjectRetain();
  }
  uint64_t v61 = v3[13];
  long long v62 = (void *)((char *)a1 + v61);
  uint64_t v63 = (void *)((char *)a2 + v61);
  uint64_t v64 = v63[1];
  *long long v62 = *v63;
  v62[1] = v64;
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *sub_20A7066C4(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = a3[6];
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_20A8C3F00();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v5, v6, v7);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v5, v7);
LABEL_6:
    sub_20A705CAC(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 24))(v5, v6, v7);
LABEL_7:
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v14, v15, v7);
      *(void *)&v14[*(int *)(v16 + 20)] = *(void *)&v15[*(int *)(v16 + 20)];
      uint64_t v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
      swift_bridgeObjectRetain();
      v21(v14, 0, 1, v16);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    sub_20A70C568((uint64_t)v14, type metadata accessor for StocksActivity.StockFeed.Series);
LABEL_12:
    sub_20A705CAC(0, (unint64_t *)&unk_26AC6C610, type metadata accessor for StocksActivity.StockFeed.Series, MEMORY[0x263F8D8F0]);
    memcpy(v14, v15, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 24))(v14, v15, v7);
  *(void *)&v14[*(int *)(v16 + 20)] = *(void *)&v15[*(int *)(v16 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v24 = a3;
  uint64_t v23 = a2;
  uint64_t v25 = a3[8];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[9];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  uint64_t v31 = (int *)type metadata accessor for ArticleUserInfoModel();
  uint64_t v32 = *((void *)v31 - 1);
  uint64_t v33 = *(uint64_t (**)(void *, uint64_t, int *))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (v35)
    {
      sub_20A70C568((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ArticleUserInfoModel);
      goto LABEL_19;
    }
    *uint64_t v29 = *v30;
    v29[1] = v30[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v43 = v31[5];
    uint64_t v44 = (char *)v29 + v43;
    uint64_t v45 = (char *)v30 + v43;
    uint64_t v46 = sub_20A8C2530();
    uint64_t v47 = *(void *)(v46 - 8);
    uint64_t v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
    uint64_t v98 = v44;
    LODWORD(v44) = v48(v44, 1, v46);
    int v49 = v48(v45, 1, v46);
    if (v44)
    {
      if (v49)
      {
        sub_20A705CAC(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
        size_t v51 = *(void *)(*(void *)(v50 - 8) + 64);
        uint64_t v52 = v98;
LABEL_32:
        memcpy(v52, v45, v51);
        goto LABEL_35;
      }
      (*(void (**)(void *, char *, uint64_t))(v47 + 16))(v98, v45, v46);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v98, 0, 1, v46);
    }
    else
    {
      if (v49)
      {
        (*(void (**)(void *, uint64_t))(v47 + 8))(v98, v46);
        sub_20A705CAC(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
        size_t v51 = *(void *)(*(void *)(v63 - 8) + 64);
        uint64_t v52 = v98;
        goto LABEL_32;
      }
      (*(void (**)(void *, char *, uint64_t))(v47 + 24))(v98, v45, v46);
    }
LABEL_35:
    uint64_t v24 = a3;
    uint64_t v23 = a2;
    *((unsigned char *)v29 + v31[6]) = *((unsigned char *)v30 + v31[6]);
    uint64_t v64 = v31[7];
    uint64_t v65 = (uint64_t)v29 + v64;
    uint64_t v66 = (void *)((char *)v30 + v64);
    uint64_t v67 = *(void *)((char *)v30 + v64 + 24);
    if (*(void *)((char *)v29 + v64 + 24))
    {
      if (v67)
      {
        __swift_assign_boxed_opaque_existential_1((uint64_t *)v65, v66);
LABEL_42:
        uint64_t v70 = v31[8];
        uint64_t v71 = (void *)((char *)v29 + v70);
        uint64_t v72 = (void *)((char *)v30 + v70);
        void *v71 = *v72;
        v71[1] = v72[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_43;
      }
      __swift_destroy_boxed_opaque_existential_1(v65);
    }
    else if (v67)
    {
      *(void *)(v65 + 24) = v67;
      *(void *)(v65 + 32) = v66[4];
      (**(void (***)(uint64_t, char *))(v67 - 8))(v65, (char *)v66);
      goto LABEL_42;
    }
    long long v68 = *(_OWORD *)v66;
    long long v69 = *((_OWORD *)v66 + 1);
    *(void *)(v65 + 32) = v66[4];
    *(_OWORD *)uint64_t v65 = v68;
    *(_OWORD *)(v65 + 16) = v69;
    goto LABEL_42;
  }
  if (v35)
  {
LABEL_19:
    sub_20A705CAC(0, &qword_26AC71728, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel, MEMORY[0x263F8D8F0]);
    memcpy(v29, v30, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_43;
  }
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  uint64_t v36 = v31[5];
  uint64_t v97 = v30;
  __dst = (char *)v29 + v36;
  uint64_t v37 = (char *)v30 + v36;
  uint64_t v38 = sub_20A8C2530();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  swift_bridgeObjectRetain();
  if (v40(v37, 1, v38))
  {
    sub_20A705CAC(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    memcpy(__dst, v37, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(__dst, v37, v38);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v38);
  }
  *((unsigned char *)v29 + v31[6]) = *((unsigned char *)v97 + v31[6]);
  uint64_t v53 = v31[7];
  uint64_t v54 = (char *)v29 + v53;
  uint64_t v55 = (char *)v97 + v53;
  uint64_t v56 = *(void *)((char *)v97 + v53 + 24);
  uint64_t v24 = a3;
  uint64_t v23 = a2;
  if (v56)
  {
    *((void *)v54 + 3) = v56;
    *((void *)v54 + 4) = *((void *)v55 + 4);
    (**(void (***)(void))(v56 - 8))();
  }
  else
  {
    long long v57 = *(_OWORD *)v55;
    long long v58 = *((_OWORD *)v55 + 1);
    *((void *)v54 + 4) = *((void *)v55 + 4);
    *(_OWORD *)uint64_t v54 = v57;
    *((_OWORD *)v54 + 1) = v58;
  }
  uint64_t v59 = v31[8];
  long long v60 = (void *)((char *)v29 + v59);
  uint64_t v61 = (void *)((char *)v97 + v59);
  void *v60 = *v61;
  v60[1] = v61[1];
  long long v62 = *(void (**)(void *, void, uint64_t, int *))(v32 + 56);
  swift_bridgeObjectRetain();
  v62(v29, 0, 1, v31);
LABEL_43:
  uint64_t v73 = v24[10];
  uint64_t v74 = &a1[v73];
  uint64_t v75 = &v23[v73];
  uint64_t v76 = sub_20A8C2530();
  uint64_t v77 = *(void *)(v76 - 8);
  unsigned int v78 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v77 + 48);
  int v79 = v78(v74, 1, v76);
  int v80 = v78(v75, 1, v76);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v77 + 16))(v74, v75, v76);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v80)
  {
    (*(void (**)(unsigned char *, uint64_t))(v77 + 8))(v74, v76);
LABEL_48:
    sub_20A705CAC(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    memcpy(v74, v75, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v77 + 24))(v74, v75, v76);
LABEL_49:
  uint64_t v82 = v24[11];
  uint64_t v83 = &a1[v82];
  uint64_t v84 = &v23[v82];
  uint64_t v85 = *(void *)v84;
  v83[8] = v84[8];
  *(void *)uint64_t v83 = v85;
  uint64_t v86 = v24[12];
  uint64_t v87 = (uint64_t)&a1[v86];
  uint64_t v88 = &v23[v86];
  uint64_t v89 = *(void *)&a1[v86 + 8];
  uint64_t v90 = *(void *)&v23[v86 + 8];
  if (v89 == 1)
  {
    if (v90 == 1)
    {
      long long v91 = *((_OWORD *)v88 + 1);
      *(_OWORD *)uint64_t v87 = *(_OWORD *)v88;
      *(_OWORD *)(v87 + 16) = v91;
    }
    else
    {
      *(void *)uint64_t v87 = *(void *)v88;
      *(void *)(v87 + 8) = *((void *)v88 + 1);
      *(_OWORD *)(v87 + 16) = *((_OWORD *)v88 + 1);
      swift_bridgeObjectRetain();
    }
  }
  else if (v90 == 1)
  {
    sub_20A707230(v87);
    long long v92 = *((_OWORD *)v88 + 1);
    *(_OWORD *)uint64_t v87 = *(_OWORD *)v88;
    *(_OWORD *)(v87 + 16) = v92;
  }
  else
  {
    *(void *)uint64_t v87 = *(void *)v88;
    *(void *)(v87 + 8) = *((void *)v88 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v87 + 16) = *((void *)v88 + 2);
    *(void *)(v87 + 24) = *((void *)v88 + 3);
  }
  uint64_t v93 = v24[13];
  uint64_t v94 = &a1[v93];
  uint64_t v95 = &v23[v93];
  *uint64_t v94 = *v95;
  v94[1] = v95[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A707230(uint64_t a1)
{
  return a1;
}

_WORD *sub_20A707284(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C3F00();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_20A705CAC(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_20A705CAC(0, (unint64_t *)&unk_26AC6C610, type metadata accessor for StocksActivity.StockFeed.Series, MEMORY[0x263F8D8F0]);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v14, v9);
    *(void *)&v13[*(int *)(v15 + 20)] = *(void *)&v14[*(int *)(v15 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  int v19 = (_OWORD *)((char *)a1 + v18);
  int v20 = (_OWORD *)((char *)a2 + v18);
  uint64_t v21 = (int *)type metadata accessor for ArticleUserInfoModel();
  uint64_t v22 = *((void *)v21 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
  {
    sub_20A705CAC(0, &qword_26AC71728, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel, MEMORY[0x263F8D8F0]);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    _OWORD *v19 = *v20;
    uint64_t v24 = v21[5];
    __dst = (char *)v19 + v24;
    uint64_t v25 = (char *)v20 + v24;
    uint64_t v26 = sub_20A8C2530();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      sub_20A705CAC(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
      memcpy(__dst, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(__dst, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
    }
    *((unsigned char *)v19 + v21[6]) = *((unsigned char *)v20 + v21[6]);
    uint64_t v29 = v21[7];
    uint64_t v30 = (char *)v19 + v29;
    uint64_t v31 = (char *)v20 + v29;
    long long v32 = *((_OWORD *)v31 + 1);
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v32;
    *((void *)v30 + 4) = *((void *)v31 + 4);
    *(_OWORD *)((char *)v19 + v21[8]) = *(_OWORD *)((char *)v20 + v21[8]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v33 = a3[10];
  int v34 = (char *)a1 + v33;
  int v35 = (char *)a2 + v33;
  uint64_t v36 = sub_20A8C2530();
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    sub_20A705CAC(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  uint64_t v39 = a3[11];
  uint64_t v40 = a3[12];
  uint64_t v41 = (char *)a1 + v39;
  uint64_t v42 = (char *)a2 + v39;
  *(void *)uint64_t v41 = *(void *)v42;
  v41[8] = v42[8];
  uint64_t v43 = (_OWORD *)((char *)a1 + v40);
  uint64_t v44 = (_OWORD *)((char *)a2 + v40);
  long long v45 = v44[1];
  _OWORD *v43 = *v44;
  v43[1] = v45;
  *(_OWORD *)((char *)a1 + a3[13]) = *(_OWORD *)((char *)a2 + a3[13]);
  return a1;
}

_WORD *sub_20A707888(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v5 = a3[6];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_20A8C3F00();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(v6, 1, v8);
  int v12 = v10(v7, 1, v8);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
LABEL_6:
    sub_20A705CAC(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
    memcpy(v6, v7, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(v6, v7, v8);
LABEL_7:
  uint64_t v94 = a3;
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  uint64_t v18 = *(void *)(v17 - 8);
  int v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v15, v16, v8);
      *(void *)&v15[*(int *)(v17 + 20)] = *(void *)&v16[*(int *)(v17 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    sub_20A70C568((uint64_t)v15, type metadata accessor for StocksActivity.StockFeed.Series);
LABEL_12:
    sub_20A705CAC(0, (unint64_t *)&unk_26AC6C610, type metadata accessor for StocksActivity.StockFeed.Series, MEMORY[0x263F8D8F0]);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(v15, v16, v8);
  *(void *)&v15[*(int *)(v17 + 20)] = *(void *)&v16[*(int *)(v17 + 20)];
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v23 = a2;
  uint64_t v24 = a3[8];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (uint64_t *)((char *)a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[9];
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (void *)((char *)a2 + v29);
  long long v32 = (int *)type metadata accessor for ArticleUserInfoModel();
  uint64_t v33 = *((void *)v32 - 1);
  int v34 = *(uint64_t (**)(void *, uint64_t, int *))(v33 + 48);
  int v35 = v34(v30, 1, v32);
  int v36 = v34(v31, 1, v32);
  if (v35)
  {
    if (!v36)
    {
      *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
      uint64_t v37 = v32[5];
      uint64_t v38 = (char *)v30 + v37;
      uint64_t v39 = (char *)v31 + v37;
      uint64_t v40 = sub_20A8C2530();
      uint64_t v41 = *(void *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        sub_20A705CAC(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
        memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      uint64_t v23 = a2;
      *((unsigned char *)v30 + v32[6]) = *((unsigned char *)v31 + v32[6]);
      uint64_t v55 = v32[7];
      uint64_t v56 = (char *)v30 + v55;
      long long v57 = (char *)v31 + v55;
      long long v58 = *((_OWORD *)v57 + 1);
      *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
      *((_OWORD *)v56 + 1) = v58;
      *((void *)v56 + 4) = *((void *)v57 + 4);
      *(_OWORD *)((char *)v30 + v32[8]) = *(_OWORD *)((char *)v31 + v32[8]);
      (*(void (**)(void *, void, uint64_t, int *))(v33 + 56))(v30, 0, 1, v32);
      goto LABEL_35;
    }
LABEL_19:
    sub_20A705CAC(0, &qword_26AC71728, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel, MEMORY[0x263F8D8F0]);
    memcpy(v30, v31, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_35;
  }
  if (v36)
  {
    sub_20A70C568((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ArticleUserInfoModel);
    goto LABEL_19;
  }
  uint64_t v44 = v31[1];
  void *v30 = *v31;
  v30[1] = v44;
  swift_bridgeObjectRelease();
  uint64_t v45 = v32[5];
  uint64_t v46 = (char *)v30 + v45;
  uint64_t v47 = (char *)v31 + v45;
  uint64_t v48 = sub_20A8C2530();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
  long long v92 = v46;
  LODWORD(v46) = v50(v46, 1, v48);
  int v51 = v50(v47, 1, v48);
  if (v46)
  {
    if (!v51)
    {
      (*(void (**)(void *, char *, uint64_t))(v49 + 32))(v92, v47, v48);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v92, 0, 1, v48);
      goto LABEL_32;
    }
    sub_20A705CAC(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    size_t v53 = *(void *)(*(void *)(v52 - 8) + 64);
    uint64_t v54 = v92;
  }
  else
  {
    if (!v51)
    {
      (*(void (**)(void *, char *, uint64_t))(v49 + 40))(v92, v47, v48);
      goto LABEL_32;
    }
    (*(void (**)(void *, uint64_t))(v49 + 8))(v92, v48);
    sub_20A705CAC(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    size_t v53 = *(void *)(*(void *)(v59 - 8) + 64);
    uint64_t v54 = v92;
  }
  memcpy(v54, v47, v53);
LABEL_32:
  uint64_t v23 = a2;
  *((unsigned char *)v30 + v32[6]) = *((unsigned char *)v31 + v32[6]);
  uint64_t v60 = v32[7];
  uint64_t v61 = (uint64_t)v30 + v60;
  long long v62 = (char *)v31 + v60;
  if (*(void *)((char *)v30 + v60 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v61);
  }
  long long v63 = *((_OWORD *)v62 + 1);
  *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
  *(_OWORD *)(v61 + 16) = v63;
  *(void *)(v61 + 32) = *((void *)v62 + 4);
  uint64_t v64 = v32[8];
  uint64_t v65 = (void *)((char *)v30 + v64);
  uint64_t v66 = (void *)((char *)v31 + v64);
  uint64_t v68 = *v66;
  uint64_t v67 = v66[1];
  void *v65 = v68;
  v65[1] = v67;
  swift_bridgeObjectRelease();
LABEL_35:
  uint64_t v69 = a3[10];
  uint64_t v70 = (char *)a1 + v69;
  uint64_t v71 = (char *)v23 + v69;
  uint64_t v72 = sub_20A8C2530();
  uint64_t v73 = *(void *)(v72 - 8);
  uint64_t v74 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 48);
  int v75 = v74(v70, 1, v72);
  int v76 = v74(v71, 1, v72);
  if (v75)
  {
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v70, v71, v72);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v73 + 8))(v70, v72);
LABEL_40:
    sub_20A705CAC(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    memcpy(v70, v71, *(void *)(*(void *)(v77 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(v73 + 40))(v70, v71, v72);
LABEL_41:
  uint64_t v78 = v94[11];
  uint64_t v79 = v94[12];
  int v80 = (char *)a1 + v78;
  uint64_t v81 = (char *)v23 + v78;
  *(void *)int v80 = *(void *)v81;
  v80[8] = v81[8];
  uint64_t v82 = (char *)a1 + v79;
  uint64_t v83 = (char *)v23 + v79;
  if (*(void *)((char *)a1 + v79 + 8) != 1)
  {
    uint64_t v84 = *((void *)v83 + 1);
    if (v84 != 1)
    {
      *(void *)uint64_t v82 = *(void *)v83;
      *((void *)v82 + 1) = v84;
      swift_bridgeObjectRelease();
      *((_OWORD *)v82 + 1) = *((_OWORD *)v83 + 1);
      goto LABEL_46;
    }
    sub_20A707230((uint64_t)a1 + v79);
  }
  long long v85 = *((_OWORD *)v83 + 1);
  *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
  *((_OWORD *)v82 + 1) = v85;
LABEL_46:
  uint64_t v86 = v94[13];
  uint64_t v87 = (void *)((char *)a1 + v86);
  uint64_t v88 = (uint64_t *)((char *)v23 + v86);
  uint64_t v90 = *v88;
  uint64_t v89 = v88[1];
  *uint64_t v87 = v90;
  v87[1] = v89;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A708298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A7082AC);
}

uint64_t sub_20A7082AC(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A705CAC(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[6];
LABEL_13:
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v15(a1 + v9, a2, v7);
  }
  sub_20A705CAC(0, (unint64_t *)&unk_26AC6C610, type metadata accessor for StocksActivity.StockFeed.Series, MEMORY[0x263F8D8F0]);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_13;
  }
  if (a2 == 2147483646)
  {
    unint64_t v11 = *(void *)(a1 + a3[8] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    int v12 = v11 - 1;
    if (v12 < 0) {
      int v12 = -1;
    }
    return (v12 + 1);
  }
  else
  {
    sub_20A705CAC(0, &qword_26AC71728, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel, MEMORY[0x263F8D8F0]);
    if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
    {
      uint64_t v7 = v14;
      uint64_t v8 = *(void *)(v14 - 8);
      uint64_t v9 = a3[9];
      goto LABEL_13;
    }
    sub_20A705CAC(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
    uint64_t v18 = v16;
    uint64_t v19 = a1 + a3[10];
    return v17(v19, a2, v18);
  }
}

uint64_t sub_20A708544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A708558);
}

void sub_20A708558(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A705CAC(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_9:
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v14(a1 + v11, a2, a2, v9);
    return;
  }
  sub_20A705CAC(0, (unint64_t *)&unk_26AC6C610, type metadata accessor for StocksActivity.StockFeed.Series, MEMORY[0x263F8D8F0]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_9;
  }
  if (a3 == 2147483646)
  {
    *(void *)(a1 + a4[8] + 8) = a2;
    return;
  }
  sub_20A705CAC(0, &qword_26AC71728, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel, MEMORY[0x263F8D8F0]);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_9;
  }
  sub_20A705CAC(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[10];

  v16(v18, a2, a2, v17);
}

uint64_t type metadata accessor for StocksActivityUserInfo()
{
  uint64_t result = qword_26AC6BA30;
  if (!qword_26AC6BA30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A708830()
{
  sub_20A705CAC(319, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_20A705CAC(319, (unint64_t *)&unk_26AC6C610, type metadata accessor for StocksActivity.StockFeed.Series, MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F)
    {
      sub_20A705CAC(319, &qword_26AC71728, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel, MEMORY[0x263F8D8F0]);
      if (v2 <= 0x3F)
      {
        sub_20A705CAC(319, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_20A708A60()
{
  return sub_20A70CA4C((unint64_t *)&unk_26AC6C730, (void (*)(uint64_t))type metadata accessor for StocksActivity);
}

uint64_t sub_20A708AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for StocksV2UserActivitySerializer();

  return MEMORY[0x270F7B920](a1, v5, a3);
}

uint64_t sub_20A708B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for StocksV2UserActivitySerializer();

  return MEMORY[0x270F7B930](a1, v5, a3);
}

unint64_t sub_20A708B50(uint64_t a1)
{
  return sub_20A70C27C(a1);
}

unint64_t sub_20A708B68(uint64_t a1, uint64_t a2)
{
  sub_20A705CAC(0, &qword_26AC800E8, (uint64_t (*)(uint64_t))sub_20A4D27BC, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D3DC0;
  *(void *)(inited + 32) = 1635017060;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v6 = sub_20A709E74(a1, a2);
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_20A4D27BC();
    return swift_arrayDestroy();
  }
  else
  {
    *(void *)(inited + 72) = MEMORY[0x263F06F78];
    *(void *)(inited + 48) = v6;
    *(void *)(inited + 56) = v7;
    return sub_20A4CFBE4(inited);
  }
}

uint64_t sub_20A708C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for StocksV2UserActivitySerializer();

  return MEMORY[0x270F7B928](a1, v5, a3);
}

uint64_t sub_20A708CC0(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 40);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v1 + 16), v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

uint64_t sub_20A708D30(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x546E6F6974636573 && a2 == 0xEB00000000657079 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B636F7473 && a2 == 0xE500000000000000 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6565466B636F7473 && a2 == 0xEF73656972655364 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7972657571 && a2 == 0xE500000000000000 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C6369747261 && a2 == 0xE700000000000000 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6F506C6C6F726373 && a2 == 0xEE006E6F69746973 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020A90BA70)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_20A709170(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C3F00();
  uint64_t v43 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v14 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v42 - v18;
  sub_20A70C8D8(a1, (uint64_t)&v42 - v18, type metadata accessor for StocksActivity);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v21 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      goto LABEL_7;
    case 1u:
      sub_20A600FA0();
      uint64_t v27 = &v19[*(int *)(v26 + 48)];
      type metadata accessor for Localized();
      uint64_t v28 = swift_getObjCClassFromMetadata();
      id v29 = objc_msgSend(self, sel_bundleForClass_, v28);
      uint64_t v30 = sub_20A8C2370();

      uint64_t v31 = sub_20A8CA180();
      (*(void (**)(char *, uint64_t))(*(void *)(v31 - 8) + 8))(v27, v31);
      long long v32 = (uint64_t (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor;
      goto LABEL_9;
    case 2u:
      sub_20A70C5C8((uint64_t)v19, (uint64_t)v13, type metadata accessor for StocksActivity.StockFeed);
      type metadata accessor for Localized();
      uint64_t v22 = swift_getObjCClassFromMetadata();
      id v23 = objc_msgSend(self, sel_bundleForClass_, v22);
      sub_20A8C2370();

      sub_20A70C478(0, (unint64_t *)&qword_26AC80130, (unint64_t *)&qword_26AC80160, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_20A8D3DC0;
      sub_20A70C8D8((uint64_t)v13, (uint64_t)v10, type metadata accessor for StocksActivity.StockFeed);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_20A70C5C8((uint64_t)v10, (uint64_t)v4, type metadata accessor for StocksActivity.StockFeed.Series);
        uint64_t v25 = v43;
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v7, v4, v5);
        sub_20A70C568((uint64_t)v4, type metadata accessor for StocksActivity.StockFeed.Series);
      }
      else
      {
        uint64_t v25 = v43;
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v7, v10, v5);
      }
      uint64_t v38 = sub_20A8C3EF0();
      uint64_t v40 = v39;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v5);
      *(void *)(v24 + 56) = MEMORY[0x263F8D310];
      *(void *)(v24 + 64) = sub_20A43F830();
      *(void *)(v24 + 32) = v38;
      *(void *)(v24 + 40) = v40;
      uint64_t v30 = sub_20A8CE2B0();
      swift_bridgeObjectRelease();
      int v36 = type metadata accessor for StocksActivity.StockFeed;
      uint64_t v37 = (uint64_t)v13;
      goto LABEL_12;
    case 3u:
      swift_bridgeObjectRelease();
      type metadata accessor for Localized();
      uint64_t v33 = swift_getObjCClassFromMetadata();
      id v21 = objc_msgSend(self, sel_bundleForClass_, v33);
LABEL_7:
      uint64_t v30 = sub_20A8C2370();

      break;
    case 4u:
    case 5u:
      type metadata accessor for Localized();
      uint64_t v34 = swift_getObjCClassFromMetadata();
      id v35 = objc_msgSend(self, sel_bundleForClass_, v34);
      uint64_t v30 = sub_20A8C2370();

      long long v32 = type metadata accessor for StocksActivity;
LABEL_9:
      int v36 = v32;
      uint64_t v37 = (uint64_t)v19;
LABEL_12:
      sub_20A70C568(v37, v36);
      break;
    default:
      sub_20A70C8D8(a1, (uint64_t)v16, type metadata accessor for StocksActivity);
      uint64_t v44 = 0;
      unint64_t v45 = 0xE000000000000000;
      sub_20A8CF3C0();
      sub_20A8CE3D0();
      sub_20A8CF4E0();
      sub_20A8CF520();
      __break(1u);
      JUMPOUT(0x20A7099E0);
  }
  return v30;
}

uint64_t sub_20A7099F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C3F00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v15 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (unint64_t *)((char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A70C8D8(a1, (uint64_t)v17, type metadata accessor for StocksActivity);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v19 = MEMORY[0x263F8EE78];
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_20A600FA0();
      uint64_t v25 = (char *)v17 + *(int *)(v24 + 48);
      uint64_t v26 = sub_20A8CA180();
      (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
      int v20 = (uint64_t (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor;
      goto LABEL_3;
    case 2:
      sub_20A70C5C8((uint64_t)v17, (uint64_t)v14, type metadata accessor for StocksActivity.StockFeed);
      sub_20A484548();
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_20A8D3DC0;
      sub_20A70C8D8((uint64_t)v14, (uint64_t)v11, type metadata accessor for StocksActivity.StockFeed);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_20A70C5C8((uint64_t)v11, (uint64_t)v4, type metadata accessor for StocksActivity.StockFeed.Series);
        (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v4, v5);
        sub_20A70C568((uint64_t)v4, type metadata accessor for StocksActivity.StockFeed.Series);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
      }
      uint64_t v27 = sub_20A8C3EC0();
      uint64_t v29 = v28;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      *(void *)(v19 + 32) = v27;
      *(void *)(v19 + 40) = v29;
      id v21 = type metadata accessor for StocksActivity.StockFeed;
      uint64_t v22 = (uint64_t)v14;
      goto LABEL_4;
    case 3:
      swift_bridgeObjectRelease();
      return v19;
    case 4:
    case 5:
    case 6:
    case 7:
    case 10:
    case 12:
      int v20 = type metadata accessor for StocksActivity;
LABEL_3:
      id v21 = v20;
      uint64_t v22 = (uint64_t)v17;
LABEL_4:
      sub_20A70C568(v22, v21);
      break;
    case 8:
      sub_20A485620(*v17);
      break;
    case 9:
      sub_20A459CA4(*v17);
      break;
    case 11:
      sub_20A4B2908();
      swift_release();
      sub_20A70C6EC((uint64_t)v17, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
      break;
    case 13:
      return v19;
    default:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  return v19;
}

uint64_t *sub_20A709E74(uint64_t a1, uint64_t a2)
{
  uint64_t v258 = a2;
  uint64_t v270 = a1;
  uint64_t v2 = sub_20A8C2530();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v265 = v2;
  uint64_t v266 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v250 = (char *)&v236 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v247 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x270FA5388](v247);
  uint64_t v248 = (uint64_t)&v236 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v252 = (uint64_t)&v236 - v7;
  uint64_t v8 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v260 = v8;
  uint64_t v261 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v241 = (uint64_t)&v236 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v264 = sub_20A8C82E0();
  uint64_t v257 = *(void *)(v264 - 8);
  MEMORY[0x270FA5388](v264);
  uint64_t v255 = (char *)&v236 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v259 = (unint64_t)&v236 - v13;
  MEMORY[0x270FA5388](v14);
  unint64_t v244 = (char *)&v236 - v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v253 = (char *)&v236 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v243 = (char *)&v236 - v19;
  MEMORY[0x270FA5388](v20);
  v251 = (char *)&v236 - v21;
  uint64_t v246 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x270FA5388](v246);
  id v23 = (char *)&v236 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v256 = (uint64_t)&v236 - v25;
  uint64_t v26 = sub_20A8C3F00();
  uint64_t v267 = *(void *)(v26 - 8);
  uint64_t v268 = v26;
  MEMORY[0x270FA5388](v26);
  uint64_t v242 = (char *)&v236 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v249 = (char *)&v236 - v29;
  uint64_t v30 = type metadata accessor for ForYouSectionDescriptor();
  MEMORY[0x270FA5388](v30);
  long long v32 = (uint64_t *)((char *)&v236 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v33);
  uint64_t v254 = (uint64_t *)((char *)&v236 - v34);
  uint64_t v262 = type metadata accessor for StocksActivityUserInfo();
  MEMORY[0x270FA5388](v262);
  int v36 = (char *)&v236 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  uint64_t v245 = (char *)&v236 - v38;
  MEMORY[0x270FA5388](v39);
  uint64_t v41 = (char *)&v236 - v40;
  MEMORY[0x270FA5388](v42);
  uint64_t v239 = (char *)&v236 - v43;
  MEMORY[0x270FA5388](v44);
  uint64_t v240 = (char *)&v236 - v45;
  MEMORY[0x270FA5388](v46);
  uint64_t v238 = (char *)&v236 - v47;
  MEMORY[0x270FA5388](v48);
  unint64_t v237 = (char *)&v236 - v49;
  MEMORY[0x270FA5388](v50);
  uint64_t v52 = (char *)&v236 - v51;
  uint64_t v53 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v53);
  uint64_t v55 = (char *)&v236 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v56);
  long long v58 = (char *)&v236 - v57;
  sub_20A70C8D8(v270, (uint64_t)&v236 - v57, type metadata accessor for StocksActivity);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      long long v264 = *(_OWORD *)v58;
      uint64_t v59 = *((void *)v58 + 2);
      uint64_t v60 = *((void *)v58 + 3);
      uint64_t v61 = *((void *)v58 + 4);
      uint64_t v62 = *((void *)v58 + 5);
      sub_20A8C20C0();
      swift_allocObject();
      sub_20A8C20B0();
      StocksActivity.type.getter((char *)v269);
      char v63 = v269[0];
      uint64_t v64 = (int *)v262;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v267 + 56))(&v52[*(int *)(v262 + 24)], 1, 1, v268);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v261 + 56))(&v52[v64[7]], 1, 1, v260);
      uint64_t v65 = &v52[v64[9]];
      uint64_t v66 = type metadata accessor for ArticleUserInfoModel();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v65, 1, 1, v66);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v266 + 56))(&v52[v64[10]], 1, 1, v265);
      *uint64_t v52 = v63;
      v52[1] = 2;
      uint64_t v67 = &v52[v64[8]];
      *(void *)uint64_t v67 = 0;
      *((void *)v67 + 1) = 0;
      uint64_t v68 = &v52[v64[11]];
      *(void *)uint64_t v68 = 0;
      v68[8] = 1;
      uint64_t v69 = &v52[v64[12]];
      *(_OWORD *)uint64_t v69 = v264;
      *((void *)v69 + 2) = v59;
      *((void *)v69 + 3) = v60;
      uint64_t v70 = &v52[v64[13]];
      *(void *)uint64_t v70 = v61;
      *((void *)v70 + 1) = v62;
      sub_20A70CA4C(&qword_26AC6BA28, (void (*)(uint64_t))type metadata accessor for StocksActivityUserInfo);
      long long v32 = (uint64_t *)sub_20A8C20A0();
      sub_20A70C568((uint64_t)v52, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
      swift_release();
      return v32;
    case 1u:
      sub_20A600FA0();
      uint64_t v90 = &v58[*(int *)(v89 + 48)];
      long long v91 = (void (*)(void, void, void))v254;
      sub_20A70C5C8((uint64_t)v58, (uint64_t)v254, (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor);
      sub_20A70C8D8((uint64_t)v91, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v94 = v266;
      uint64_t v93 = v267;
      uint64_t v95 = v249;
      switch(EnumCaseMultiPayload)
      {
        case 1:
          swift_bridgeObjectRelease();
          goto LABEL_34;
        case 2:
          sub_20A70C568((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor);
LABEL_34:
          sub_20A70C630();
          swift_allocError();
          *uint64_t v176 = 0;
          v176[1] = 0;
          swift_willThrow();
          sub_20A70C568((uint64_t)v91, (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor);
          uint64_t v177 = sub_20A8CA180();
          (*(void (**)(char *, uint64_t))(*(void *)(v177 - 8) + 8))(v90, v177);
          break;
        case 3:
          uint64_t v163 = v90;
          uint64_t v164 = v268;
          sub_20A8C20C0();
          swift_allocObject();
          sub_20A8C20B0();
          StocksActivity.type.getter((char *)v269);
          char v165 = v269[0];
          uint64_t v166 = (int *)v262;
          uint64_t v167 = v237;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56))(&v237[*(int *)(v262 + 24)], 1, 1, v164);
          (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v261 + 56))(&v167[v166[7]], 1, 1, v260);
          long long v32 = (uint64_t *)&v167[v166[9]];
          uint64_t v168 = type metadata accessor for ArticleUserInfoModel();
          (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v168 - 8) + 56))(v32, 1, 1, v168);
          (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v94 + 56))(&v167[v166[10]], 1, 1, v265);
          *uint64_t v167 = v165;
          v167[1] = 0;
          uint64_t v169 = &v167[v166[8]];
          *uint64_t v169 = 0;
          v169[1] = 0;
          uint64_t v170 = &v167[v166[11]];
          *(void *)uint64_t v170 = 0;
          v170[8] = 1;
          uint64_t v171 = &v167[v166[12]];
          *(_OWORD *)uint64_t v171 = xmmword_20A8EBDD0;
          *((void *)v171 + 2) = 0;
          *((void *)v171 + 3) = 0;
          uint64_t v172 = &v167[v166[13]];
          void *v172 = 0;
          v172[1] = 0;
          sub_20A70CA4C(&qword_26AC6BA28, (void (*)(uint64_t))type metadata accessor for StocksActivityUserInfo);
          uint64_t v173 = v263;
          uint64_t v174 = sub_20A8C20A0();
          if (!v173) {
            long long v32 = (uint64_t *)v174;
          }
          swift_release();
          sub_20A70C568((uint64_t)v167, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
          sub_20A70C568((uint64_t)v254, (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor);
          uint64_t v175 = sub_20A8CA180();
          (*(void (**)(char *, uint64_t))(*(void *)(v175 - 8) + 8))(v163, v175);
          break;
        default:
          *(void *)&long long v264 = v90;
          uint64_t v96 = v268;
          (*(void (**)(char *, uint64_t *, uint64_t))(v267 + 32))(v249, v32, v268);
          sub_20A8C20C0();
          swift_allocObject();
          sub_20A8C20B0();
          StocksActivity.type.getter((char *)v269);
          char v97 = v269[0];
          uint64_t v98 = (int *)v262;
          unint64_t v99 = v238;
          uint64_t v100 = &v238[*(int *)(v262 + 24)];
          (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v100, v95, v96);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v93 + 56))(v100, 0, 1, v96);
          (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v261 + 56))(&v99[v98[7]], 1, 1, v260);
          long long v32 = (uint64_t *)&v99[v98[9]];
          uint64_t v101 = type metadata accessor for ArticleUserInfoModel();
          (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56))(v32, 1, 1, v101);
          (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v94 + 56))(&v99[v98[10]], 1, 1, v265);
          *unint64_t v99 = v97;
          v99[1] = 1;
          uint64_t v102 = &v99[v98[8]];
          *uint64_t v102 = 0;
          v102[1] = 0;
          uint64_t v103 = &v99[v98[11]];
          *(void *)uint64_t v103 = 0;
          v103[8] = 1;
          uint64_t v104 = &v99[v98[12]];
          *(_OWORD *)uint64_t v104 = xmmword_20A8EBDD0;
          *((void *)v104 + 2) = 0;
          *((void *)v104 + 3) = 0;
          uint64_t v105 = &v99[v98[13]];
          void *v105 = 0;
          v105[1] = 0;
          sub_20A70CA4C(&qword_26AC6BA28, (void (*)(uint64_t))type metadata accessor for StocksActivityUserInfo);
          uint64_t v106 = v263;
          uint64_t v107 = sub_20A8C20A0();
          if (!v106) {
            long long v32 = (uint64_t *)v107;
          }
          swift_release();
          sub_20A70C568((uint64_t)v99, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
          (*(void (**)(char *, uint64_t))(v93 + 8))(v95, v268);
          sub_20A70C568((uint64_t)v254, (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor);
          uint64_t v108 = sub_20A8CA180();
          (*(void (**)(void, uint64_t))(*(void *)(v108 - 8) + 8))(v264, v108);
          break;
      }
      return v32;
    case 2u:
      uint64_t v73 = v256;
      sub_20A70C5C8((uint64_t)v58, v256, type metadata accessor for StocksActivity.StockFeed);
      sub_20A70C8D8(v73, (uint64_t)v23, type metadata accessor for StocksActivity.StockFeed);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_20A5A89F0(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
        unint64_t v259 = *(void *)&v23[*(int *)(v74 + 48)];
        uint64_t v75 = v241;
        sub_20A70C5C8((uint64_t)v23, v241, type metadata accessor for StocksActivity.StockFeed.Series);
        uint64_t v76 = v265;
        uint64_t v77 = v267;
        uint64_t v78 = v268;
        uint64_t v80 = v257;
        uint64_t v79 = v258;
        if (v258)
        {
          uint64_t v81 = v264;
          (*(void (**)(char *, void, void))(v257 + 104))(v253, *MEMORY[0x263F7D2B8], v264);
          uint64_t v255 = *(char **)(v79 + 16);
          if (v255)
          {
            unint64_t v82 = (*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
            uint64_t v83 = v244;
            uint64_t v254 = *(void **)(v80 + 16);
            ((void (*)(char *, unint64_t, uint64_t))v254)(v244, v79 + v82, v81);
            uint64_t v84 = sub_20A70CA4C(&qword_26763D648, MEMORY[0x263F7D2C0]);
            swift_bridgeObjectRetain();
            uint64_t v85 = v81;
            uint64_t v252 = v84;
            char v86 = sub_20A8CE210();
            uint64_t v87 = *(void (**)(char *, uint64_t))(v80 + 8);
            v87(v83, v85);
            if (v86)
            {
LABEL_9:
              swift_bridgeObjectRelease();
              v87(v253, v264);
              v259 |= 1uLL;
              uint64_t v76 = v265;
              uint64_t v88 = v266;
              uint64_t v77 = v267;
              uint64_t v78 = v268;
              uint64_t v75 = v241;
LABEL_61:
              sub_20A8C20C0();
              swift_allocObject();
              sub_20A8C20B0();
              StocksActivity.type.getter((char *)v269);
              char v207 = v269[0];
              char v208 = (int *)v262;
              uint64_t v209 = v239;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56))(&v239[*(int *)(v262 + 24)], 1, 1, v78);
              uint64_t v210 = (uint64_t)&v209[v208[7]];
              sub_20A70C8D8(v75, v210, type metadata accessor for StocksActivity.StockFeed.Series);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v261 + 56))(v210, 0, 1, v260);
              uint64_t v211 = &v209[v208[9]];
              uint64_t v212 = type metadata accessor for ArticleUserInfoModel();
              (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v212 - 8) + 56))(v211, 1, 1, v212);
              (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v88 + 56))(&v209[v208[10]], 1, 1, v76);
              unsigned char *v209 = v207;
              v209[1] = 2;
              uint64_t v213 = &v209[v208[8]];
              *uint64_t v213 = 0;
              v213[1] = 0;
              unint64_t v214 = &v209[v208[11]];
              *(void *)unint64_t v214 = v259;
              v214[8] = 0;
              unint64_t v215 = &v209[v208[12]];
              *(_OWORD *)unint64_t v215 = xmmword_20A8EBDD0;
              *((void *)v215 + 2) = 0;
              *((void *)v215 + 3) = 0;
              uint64_t v216 = &v209[v208[13]];
              void *v216 = 0;
              v216[1] = 0;
              sub_20A70CA4C(&qword_26AC6BA28, (void (*)(uint64_t))type metadata accessor for StocksActivityUserInfo);
              long long v32 = (uint64_t *)sub_20A8C20A0();
              swift_release();
              sub_20A70C568((uint64_t)v209, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
              sub_20A70C568(v75, type metadata accessor for StocksActivity.StockFeed.Series);
              sub_20A70C568(v256, type metadata accessor for StocksActivity.StockFeed);
              return v32;
            }
            if (v255 == (char *)1)
            {
              swift_bridgeObjectRelease();
              uint64_t v76 = v265;
              uint64_t v77 = v267;
              uint64_t v78 = v268;
              uint64_t v179 = v264;
              uint64_t v75 = v241;
            }
            else
            {
              v251 = (char *)((v80 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
              uint64_t v200 = *(void *)(v80 + 72);
              unint64_t v201 = v258 + v200 + v82;
              uint64_t v202 = 1;
              uint64_t v179 = v264;
              do
              {
                uint64_t v203 = v244;
                ((void (*)(char *, unint64_t, uint64_t))v254)(v244, v201, v179);
                uint64_t v55 = (char *)(v202 + 1);
                if (__OFADD__(v202, 1)) {
                  goto LABEL_76;
                }
                char v204 = sub_20A8CE210();
                uint64_t v205 = v203;
                char v206 = v204;
                v87(v205, v179);
                if (v206) {
                  goto LABEL_9;
                }
                ++v202;
                v201 += v200;
                uint64_t v179 = v264;
              }
              while (v55 != v255);
              swift_bridgeObjectRelease();
              uint64_t v76 = v265;
              uint64_t v77 = v267;
              uint64_t v78 = v268;
              uint64_t v75 = v241;
            }
            v87(v253, v179);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v80 + 8))(v253, v81);
          }
        }
        uint64_t v88 = v266;
        goto LABEL_61;
      }
      sub_20A5A89F0(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
      uint64_t v148 = *(char **)&v23[*(int *)(v147 + 48)];
      uint64_t v149 = v267;
      uint64_t v150 = v268;
      uint64_t v151 = v242;
      (*(void (**)(char *, char *, uint64_t))(v267 + 32))(v242, v23, v268);
      uint64_t v153 = v257;
      uint64_t v152 = v258;
      unint64_t v259 = (unint64_t)v148;
      if (!v258)
      {
        uint64_t v162 = v266;
        goto LABEL_70;
      }
      uint64_t v154 = v251;
      uint64_t v155 = v264;
      (*(void (**)(char *, void, void))(v257 + 104))(v251, *MEMORY[0x263F7D2B8], v264);
      uint64_t v255 = *(char **)(v152 + 16);
      if (v255)
      {
        unint64_t v156 = (*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80);
        char v157 = v243;
        uint64_t v254 = *(void **)(v153 + 16);
        ((void (*)(char *, unint64_t, uint64_t))v254)(v243, v152 + v156, v155);
        uint64_t v158 = sub_20A70CA4C(&qword_26763D648, MEMORY[0x263F7D2C0]);
        swift_bridgeObjectRetain();
        uint64_t v159 = v155;
        uint64_t v253 = (char *)v158;
        char v160 = sub_20A8CE210();
        uint64_t v161 = *(void (**)(char *, uint64_t))(v153 + 8);
        v161(v157, v159);
        if (v160)
        {
LABEL_28:
          swift_bridgeObjectRelease();
          v161(v251, v264);
          v259 |= 1uLL;
          uint64_t v162 = v266;
          uint64_t v149 = v267;
          uint64_t v150 = v268;
          goto LABEL_69;
        }
        uint64_t v252 = (v153 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        if (v255 == (char *)1)
        {
          swift_bridgeObjectRelease();
          uint64_t v149 = v267;
          uint64_t v150 = v268;
          uint64_t v180 = v264;
        }
        else
        {
          uint64_t v217 = *(void *)(v153 + 72);
          unint64_t v218 = v258 + v217 + v156;
          uint64_t v219 = 1;
          uint64_t v180 = v264;
          do
          {
            unint64_t v220 = v243;
            ((void (*)(char *, unint64_t, uint64_t))v254)(v243, v218, v180);
            uint64_t v55 = (char *)(v219 + 1);
            if (__OFADD__(v219, 1)) {
              goto LABEL_77;
            }
            char v221 = sub_20A8CE210();
            uint64_t v222 = v220;
            char v223 = v221;
            v161(v222, v180);
            if (v223) {
              goto LABEL_28;
            }
            ++v219;
            v218 += v217;
            uint64_t v180 = v264;
          }
          while (v55 != v255);
          swift_bridgeObjectRelease();
          uint64_t v149 = v267;
          uint64_t v150 = v268;
        }
        v161(v251, v180);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v153 + 8))(v154, v155);
      }
      uint64_t v162 = v266;
LABEL_69:
      uint64_t v151 = v242;
LABEL_70:
      sub_20A8C20C0();
      swift_allocObject();
      sub_20A8C20B0();
      StocksActivity.type.getter((char *)v269);
      char v224 = v269[0];
      uint64_t v225 = (int *)v262;
      uint64_t v226 = v240;
      uint64_t v227 = &v240[*(int *)(v262 + 24)];
      (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v227, v151, v150);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v227, 0, 1, v150);
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v261 + 56))(&v226[v225[7]], 1, 1, v260);
      long long v32 = (uint64_t *)&v226[v225[9]];
      uint64_t v228 = type metadata accessor for ArticleUserInfoModel();
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v228 - 8) + 56))(v32, 1, 1, v228);
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v162 + 56))(&v226[v225[10]], 1, 1, v265);
      *uint64_t v226 = v224;
      v226[1] = 2;
      uint64_t v229 = &v226[v225[8]];
      *uint64_t v229 = 0;
      v229[1] = 0;
      uint64_t v230 = &v226[v225[11]];
      *(void *)uint64_t v230 = v259;
      v230[8] = 0;
      uint64_t v231 = &v226[v225[12]];
      *(_OWORD *)uint64_t v231 = xmmword_20A8EBDD0;
      *((void *)v231 + 2) = 0;
      *((void *)v231 + 3) = 0;
      uint64_t v232 = &v226[v225[13]];
      *uint64_t v232 = 0;
      v232[1] = 0;
      sub_20A70CA4C(&qword_26AC6BA28, (void (*)(uint64_t))type metadata accessor for StocksActivityUserInfo);
      uint64_t v233 = v263;
      uint64_t v234 = sub_20A8C20A0();
      if (v233)
      {
        swift_release();
        sub_20A70C568((uint64_t)v226, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
        (*(void (**)(char *, uint64_t))(v149 + 8))(v151, v150);
        int v198 = type metadata accessor for StocksActivity.StockFeed;
        uint64_t v199 = v256;
LABEL_72:
        sub_20A70C568(v199, v198);
      }
      else
      {
        long long v32 = (uint64_t *)v234;
        swift_release();
        sub_20A70C568((uint64_t)v226, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
        (*(void (**)(char *, uint64_t))(v149 + 8))(v151, v150);
        sub_20A70C568(v256, type metadata accessor for StocksActivity.StockFeed);
      }
      return v32;
    case 3u:
      uint64_t v109 = *(void *)v58;
      uint64_t v110 = *((void *)v58 + 1);
      sub_20A8C20C0();
      swift_allocObject();
      sub_20A8C20B0();
      StocksActivity.type.getter((char *)v269);
      char v111 = v269[0];
      uint64_t v112 = (int *)v262;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v267 + 56))(&v41[*(int *)(v262 + 24)], 1, 1, v268);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v261 + 56))(&v41[v112[7]], 1, 1, v260);
      long long v32 = (uint64_t *)&v41[v112[9]];
      uint64_t v113 = type metadata accessor for ArticleUserInfoModel();
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v32, 1, 1, v113);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v266 + 56))(&v41[v112[10]], 1, 1, v265);
      *uint64_t v41 = v111;
      v41[1] = 2;
      uint64_t v114 = &v41[v112[8]];
      *(void *)uint64_t v114 = v109;
      *((void *)v114 + 1) = v110;
      uint64_t v115 = &v41[v112[11]];
      *(void *)uint64_t v115 = 0;
      v115[8] = 1;
      uint64_t v116 = &v41[v112[12]];
      *(_OWORD *)uint64_t v116 = xmmword_20A8EBDD0;
      *((void *)v116 + 2) = 0;
      *((void *)v116 + 3) = 0;
      uint64_t v117 = &v41[v112[13]];
      *(void *)uint64_t v117 = 0;
      *((void *)v117 + 1) = 0;
      sub_20A70CA4C(&qword_26AC6BA28, (void (*)(uint64_t))type metadata accessor for StocksActivityUserInfo);
      uint64_t v118 = v263;
      uint64_t v119 = sub_20A8C20A0();
      if (!v118) {
        long long v32 = (uint64_t *)v119;
      }
      sub_20A70C568((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
      swift_release();
      return v32;
    case 4u:
      uint64_t v71 = v252;
      sub_20A70C5C8((uint64_t)v58, v252, type metadata accessor for StocksActivity.Article);
      uint64_t v72 = v248;
      sub_20A70C8D8(v71, v248, type metadata accessor for StocksActivity.Article);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_unknownObjectRelease();
        uint64_t v256 = 0;
      }
      else
      {
        sub_20A42FC8C();
        uint64_t v256 = *(void *)(v72 + *(int *)(v134 + 48));
        sub_20A70C4E0(v72 + *(int *)(v134 + 64));
        sub_20A70C568(v72, MEMORY[0x263F58AA8]);
      }
      uint64_t v136 = v266;
      uint64_t v135 = v267;
      uint64_t v137 = v264;
      uint64_t v139 = v257;
      uint64_t v138 = v258;
      uint64_t v140 = v268;
      if (!v258) {
        goto LABEL_51;
      }
      (*(void (**)(unint64_t, void, void))(v257 + 104))(v259, *MEMORY[0x263F7D2B8], v264);
      uint64_t v257 = *(void *)(v138 + 16);
      if (v257)
      {
        unint64_t v141 = (*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80);
        uint64_t v142 = v255;
        uint64_t v254 = *(void **)(v139 + 16);
        ((void (*)(char *, unint64_t, uint64_t))v254)(v255, v138 + v141, v137);
        uint64_t v143 = sub_20A70CA4C(&qword_26763D648, MEMORY[0x263F7D2C0]);
        swift_bridgeObjectRetain();
        uint64_t v144 = v137;
        uint64_t v253 = (char *)v143;
        char v145 = sub_20A8CE210();
        uint64_t v146 = *(void (**)(char *, uint64_t))(v139 + 8);
        v146(v142, v144);
        if (v145)
        {
LABEL_24:
          swift_bridgeObjectRelease();
          v146((char *)v259, v264);
          v256 |= 1uLL;
          uint64_t v136 = v266;
          uint64_t v135 = v267;
          uint64_t v140 = v268;
          uint64_t v71 = v252;
          goto LABEL_51;
        }
        if (v257 == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v136 = v266;
          uint64_t v135 = v267;
          uint64_t v140 = v268;
          uint64_t v178 = v264;
          uint64_t v71 = v252;
        }
        else
        {
          v251 = (char *)((v139 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
          uint64_t v181 = *(void *)(v139 + 72);
          unint64_t v182 = v258 + v181 + v141;
          uint64_t v183 = 1;
          uint64_t v178 = v264;
          do
          {
            uint64_t v184 = v255;
            ((void (*)(char *, unint64_t, uint64_t))v254)(v255, v182, v178);
            uint64_t v55 = (char *)(v183 + 1);
            if (__OFADD__(v183, 1))
            {
              __break(1u);
LABEL_76:
              __break(1u);
LABEL_77:
              __break(1u);
LABEL_78:
              sub_20A70C8D8(v270, (uint64_t)v55, type metadata accessor for StocksActivity);
              v269[0] = 0;
              v269[1] = 0xE000000000000000;
              sub_20A8CF3C0();
              swift_bridgeObjectRelease();
              strcpy((char *)v269, "This activity ");
              HIBYTE(v269[1]) = -18;
              StocksActivity.identifier.getter();
              sub_20A8CE3D0();
              swift_bridgeObjectRelease();
              sub_20A8CE3D0();
              sub_20A8CF520();
              __break(1u);
              JUMPOUT(0x20A70C254);
            }
            char v185 = sub_20A8CE210();
            uint64_t v186 = v184;
            char v187 = v185;
            v146(v186, v178);
            if (v187) {
              goto LABEL_24;
            }
            ++v183;
            v182 += v181;
            uint64_t v178 = v264;
          }
          while (v55 != (char *)v257);
          swift_bridgeObjectRelease();
          uint64_t v136 = v266;
          uint64_t v135 = v267;
          uint64_t v140 = v268;
          uint64_t v71 = v252;
        }
        v146((char *)v259, v178);
      }
      else
      {
        (*(void (**)(unint64_t, uint64_t))(v139 + 8))(v259, v137);
      }
LABEL_51:
      sub_20A8C20C0();
      swift_allocObject();
      sub_20A8C20B0();
      StocksActivity.type.getter((char *)v269);
      char v188 = v269[0];
      uint64_t v189 = (int *)v262;
      uint64_t v190 = v245;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v135 + 56))(&v245[*(int *)(v262 + 24)], 1, 1, v140);
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v261 + 56))(&v190[v189[7]], 1, 1, v260);
      long long v32 = (uint64_t *)&v190[v189[9]];
      sub_20A7B7C50(v32);
      uint64_t v191 = type metadata accessor for ArticleUserInfoModel();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v191 - 8) + 56))(v32, 0, 1, v191);
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v136 + 56))(&v190[v189[10]], 1, 1, v265);
      *uint64_t v190 = v188;
      v190[1] = 2;
      int v192 = &v190[v189[8]];
      void *v192 = 0;
      v192[1] = 0;
      uint64_t v193 = &v190[v189[11]];
      *(void *)uint64_t v193 = v256;
      v193[8] = 0;
      uint64_t v194 = &v190[v189[12]];
      *(_OWORD *)uint64_t v194 = xmmword_20A8EBDD0;
      *((void *)v194 + 2) = 0;
      *((void *)v194 + 3) = 0;
      uint64_t v195 = &v190[v189[13]];
      *uint64_t v195 = 0;
      v195[1] = 0;
      sub_20A70CA4C(&qword_26AC6BA28, (void (*)(uint64_t))type metadata accessor for StocksActivityUserInfo);
      uint64_t v196 = v263;
      uint64_t v197 = sub_20A8C20A0();
      if (v196)
      {
        swift_release();
        sub_20A70C568((uint64_t)v190, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
        int v198 = type metadata accessor for StocksActivity.Article;
        uint64_t v199 = v71;
        goto LABEL_72;
      }
      long long v32 = (uint64_t *)v197;
      swift_release();
      sub_20A70C568((uint64_t)v190, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
      sub_20A70C568(v71, type metadata accessor for StocksActivity.Article);
      return v32;
    case 5u:
      uint64_t v120 = v266;
      uint64_t v121 = v250;
      uint64_t v122 = v58;
      uint64_t v123 = v265;
      (*(void (**)(char *, char *, uint64_t))(v266 + 32))(v250, v122, v265);
      sub_20A8C20C0();
      swift_allocObject();
      sub_20A8C20B0();
      StocksActivity.type.getter((char *)v269);
      char v124 = v269[0];
      uint64_t v125 = (int *)v262;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v267 + 56))(&v36[*(int *)(v262 + 24)], 1, 1, v268);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v261 + 56))(&v36[v125[7]], 1, 1, v260);
      uint64_t v126 = &v36[v125[9]];
      uint64_t v127 = type metadata accessor for ArticleUserInfoModel();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 56))(v126, 1, 1, v127);
      long long v32 = (uint64_t *)&v36[v125[10]];
      (*(void (**)(uint64_t *, char *, uint64_t))(v120 + 16))(v32, v121, v123);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v120 + 56))(v32, 0, 1, v123);
      *int v36 = v124;
      v36[1] = 2;
      unint64_t v128 = &v36[v125[8]];
      *(void *)unint64_t v128 = 0;
      *((void *)v128 + 1) = 0;
      uint64_t v129 = &v36[v125[11]];
      *(void *)uint64_t v129 = 0;
      v129[8] = 1;
      uint64_t v130 = &v36[v125[12]];
      *(_OWORD *)uint64_t v130 = xmmword_20A8EBDD0;
      *((void *)v130 + 2) = 0;
      *((void *)v130 + 3) = 0;
      uint64_t v131 = &v36[v125[13]];
      *(void *)uint64_t v131 = 0;
      *((void *)v131 + 1) = 0;
      sub_20A70CA4C(&qword_26AC6BA28, (void (*)(uint64_t))type metadata accessor for StocksActivityUserInfo);
      uint64_t v132 = v263;
      uint64_t v133 = sub_20A8C20A0();
      if (!v132) {
        long long v32 = (uint64_t *)v133;
      }
      swift_release();
      sub_20A70C568((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
      (*(void (**)(char *, uint64_t))(v120 + 8))(v121, v123);
      return v32;
    default:
      goto LABEL_78;
  }
}

unint64_t sub_20A70C27C(uint64_t a1)
{
  sub_20A705CAC(0, &qword_26AC800E8, (uint64_t (*)(uint64_t))sub_20A4D27BC, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D3DC0;
  *(void *)(inited + 32) = 1635017060;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v4 = sub_20A709E74(a1, 0);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_20A4D27BC();
    return swift_arrayDestroy();
  }
  else
  {
    *(void *)(inited + 72) = MEMORY[0x263F06F78];
    *(void *)(inited + 48) = v4;
    *(void *)(inited + 56) = v5;
    return sub_20A4CFBE4(inited);
  }
}

id sub_20A70C378(uint64_t a1)
{
  sub_20A8CE280();
  id v2 = objc_allocWithZone(MEMORY[0x263F02AE8]);
  uint64_t v3 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithItemContentType_, v3);

  sub_20A709170(a1);
  uint64_t v5 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setDisplayName_, v5);

  sub_20A7099F8(a1);
  uint64_t v6 = (void *)sub_20A8CE5D0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setKeywords_, v6);

  return v4;
}

void sub_20A70C478(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_20A43F7E0(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_20A70C4E0(uint64_t a1)
{
  sub_20A70C478(0, (unint64_t *)&qword_26AC79B50, (unint64_t *)&unk_26AC79B40, (uint64_t)&protocol descriptor for ArticleScienceDataProviderType, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A70C568(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A70C5C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_20A70C630()
{
  unint64_t result = qword_26763D650;
  if (!qword_26763D650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D650);
  }
  return result;
}

unint64_t sub_20A70C684()
{
  unint64_t result = qword_26AC6BA10;
  if (!qword_26AC6BA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6BA10);
  }
  return result;
}

uint64_t sub_20A70C6D8(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A70C6EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A705CAC(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_20A70C75C()
{
  unint64_t result = qword_26AC830F0;
  if (!qword_26AC830F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC830F0);
  }
  return result;
}

unint64_t sub_20A70C7B0()
{
  unint64_t result = qword_26AC830F8;
  if (!qword_26AC830F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC830F8);
  }
  return result;
}

uint64_t sub_20A70C804(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_20A705CAC(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

unint64_t sub_20A70C884()
{
  unint64_t result = qword_26763D658;
  if (!qword_26763D658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D658);
  }
  return result;
}

uint64_t sub_20A70C8D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_20A70C940(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A70C684();
    unint64_t v7 = a3(a1, &type metadata for StocksActivityUserInfo.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20A70C9A4()
{
  unint64_t result = qword_26AC6BA00;
  if (!qword_26AC6BA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6BA00);
  }
  return result;
}

unint64_t sub_20A70C9F8()
{
  unint64_t result = qword_26AC67A90;
  if (!qword_26AC67A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC67A90);
  }
  return result;
}

uint64_t sub_20A70CA4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A70CA94()
{
  unint64_t result = qword_26AC6D760;
  if (!qword_26AC6D760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6D760);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StocksActivityUserInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StocksActivityUserInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A70CC44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StocksActivityUserInfo.CodingKeys()
{
  return &type metadata for StocksActivityUserInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for StocksV2UserActivitySerializer.SerializationError()
{
  return &type metadata for StocksV2UserActivitySerializer.SerializationError;
}

unint64_t sub_20A70CC90()
{
  unint64_t result = qword_26763D660;
  if (!qword_26763D660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D660);
  }
  return result;
}

unint64_t sub_20A70CCE8()
{
  unint64_t result = qword_26AC6BA20;
  if (!qword_26AC6BA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6BA20);
  }
  return result;
}

unint64_t sub_20A70CD40()
{
  unint64_t result = qword_26AC6BA18;
  if (!qword_26AC6BA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6BA18);
  }
  return result;
}

uint64_t sub_20A70CD94()
{
  uint64_t v1 = sub_20A8CAB50();
  double v2 = MEMORY[0x270FA5388](v1);
  (*(void (**)(char *, void, double))(v4 + 104))((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F7DDE0], v2);
  uint64_t v5 = sub_20A8CB150();
  swift_allocObject();
  uint64_t v6 = sub_20A8CB140();
  char v7 = *(unsigned char *)(v0 + 16);
  uint64_t v14 = v5;
  uint64_t v15 = MEMORY[0x263F7DF58];
  *(void *)&long long v13 = v6;
  uint64_t v8 = type metadata accessor for OnboardingPersonalizedAdsStep();
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 57) = 2;
  *(_OWORD *)(v9 + 64) = xmmword_20A8EC0E0;
  *(void *)(v9 + 88) = 0;
  *(void *)(v9 + 96) = 0;
  *(void *)(v9 + 80) = 1;
  sub_20A42BEBC(&v13, v9 + 16);
  *(unsigned char *)(v9 + 56) = v7;
  sub_20A70CF90();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_20A8D3DC0;
  *(void *)(v10 + 56) = v8;
  *(void *)(v10 + 64) = sub_20A70D040();
  *(void *)(v10 + 32) = v9;
  return sub_20A8C9DC0();
}

uint64_t OnboardingConfigurationFactory.deinit()
{
  return v0;
}

uint64_t OnboardingConfigurationFactory.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OnboardingConfigurationFactory()
{
  return self;
}

uint64_t method lookup function for OnboardingConfigurationFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for OnboardingConfigurationFactory);
}

void sub_20A70CF90()
{
  if (!qword_26AC7FF38)
  {
    sub_20A70CFE8();
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FF38);
    }
  }
}

unint64_t sub_20A70CFE8()
{
  unint64_t result = qword_26AC69E28;
  if (!qword_26AC69E28)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC69E28);
  }
  return result;
}

unint64_t sub_20A70D040()
{
  unint64_t result = qword_26AC79338;
  if (!qword_26AC79338)
  {
    type metadata accessor for OnboardingPersonalizedAdsStep();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC79338);
  }
  return result;
}

uint64_t sub_20A70D098()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t sub_20A70D168()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t sub_20A70D220()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t type metadata accessor for WatchlistCreationAlert.Localization()
{
  return self;
}

ValueMetadata *type metadata accessor for WatchlistCreationAlert()
{
  return &type metadata for WatchlistCreationAlert;
}

uint64_t sub_20A70D314()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

id sub_20A70D3DC(void *a1, void *a2)
{
  type metadata accessor for WatchlistCreationAlert.Localization();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  char v7 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setPlaceholder_, v7, 0x800000020A90BB40);

  type metadata accessor for Localized();
  uint64_t v8 = swift_getObjCClassFromMetadata();
  id v9 = objc_msgSend(v5, sel_bundleForClass_, v8);
  sub_20A8C2370();

  uint64_t v10 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setAccessibilityLabel_, v10, 0x800000020A90BBA0);

  if (a2)
  {
    id v11 = objc_msgSend(v5, sel_bundleForClass_, v8);
    sub_20A8C2370();

    uint64_t v12 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    objc_msgSend(a2, sel_setText_, v12, 0x800000020A90BC00);
  }
  objc_msgSend(a1, sel_setEnablesReturnKeyAutomatically_, 1);
  objc_msgSend(a1, sel_setReturnKeyType_, 9);

  return objc_msgSend(a1, sel_setAutocapitalizationType_, 1);
}