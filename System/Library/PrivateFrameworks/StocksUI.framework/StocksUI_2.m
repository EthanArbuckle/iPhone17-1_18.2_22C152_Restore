uint64_t sub_20A594314(uint64_t a1, uint64_t a2, int *a3)
{
  long long v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  long long v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for StockViewModel();
  v11 = v10[5];
  v12 = (void *)(v7 + v11);
  v13 = (const void *)(v8 + v11);
  v14 = sub_20A8C3E10();
  v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_20A5962C4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = v10[6];
  v18 = (char *)(v7 + v17);
  v19 = (char *)(v8 + v17);
  v20 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v21 = *((void *)v20 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
  {
    sub_20A5962C4(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    v23 = sub_20A8CDCD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v18, v19, v23);
    v24 = v20[5];
    v25 = &v18[v24];
    v26 = &v19[v24];
    *(void *)v25 = *(void *)v26;
    v25[8] = v26[8];
    v27 = v20[6];
    v28 = &v18[v27];
    v29 = &v19[v27];
    *(void *)v28 = *(void *)v29;
    v28[8] = v29[8];
    v18[v20[7]] = v19[v20[7]];
    v30 = v20[8];
    v31 = &v18[v30];
    v32 = &v19[v30];
    v33 = sub_20A8C3D00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
    (*(void (**)(char *, void, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
  }
  v34 = v10[7];
  v35 = v7 + v34;
  v36 = v8 + v34;
  *(void *)v35 = *(void *)(v8 + v34);
  *(unsigned char *)(v35 + 8) = *(unsigned char *)(v8 + v34 + 8);
  *(void *)(v35 + 16) = *(void *)(v8 + v34 + 16);
  *(unsigned char *)(v35 + 24) = *(unsigned char *)(v8 + v34 + 24);
  *(void *)(v35 + 32) = *(void *)(v8 + v34 + 32);
  *(unsigned char *)(v35 + 40) = *(unsigned char *)(v8 + v34 + 40);
  v37 = *(_OWORD *)(v8 + v34 + 64);
  *(_OWORD *)(v35 + 48) = *(_OWORD *)(v8 + v34 + 48);
  *(_OWORD *)(v35 + 64) = v37;
  v38 = (int *)type metadata accessor for PriceViewModel();
  v39 = v38[9];
  v40 = v35 + v39;
  v41 = v36 + v39;
  v42 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = v38[10];
  v44 = v35 + v43;
  v45 = v36 + v43;
  v46 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = v38[11];
  v48 = v35 + v47;
  v49 = v36 + v47;
  v50 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = v10[8];
  v52 = v7 + v51;
  v53 = v8 + v51;
  v54 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
  *(unsigned char *)(v7 + v10[9]) = *(unsigned char *)(v8 + v10[9]);
  v55 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v55) = *(void *)(a2 + v55);
  return a1;
}

uint64_t sub_20A59482C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v76 = a3;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  v77 = (int *)type metadata accessor for StockViewModel();
  uint64_t v78 = v9;
  uint64_t v12 = v77[5];
  v13 = (void *)(v9 + v12);
  v14 = (void *)(v10 + v12);
  uint64_t v15 = sub_20A8C3E10();
  uint64_t v16 = *(void *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    sub_20A5962C4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v21 = v77[6];
  v22 = (unsigned char *)(v9 + v21);
  v23 = (unsigned char *)(v10 + v21);
  v24 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v25 = *((void *)v24 - 1);
  v26 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      uint64_t v65 = sub_20A8CDCD0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v65 - 8) + 40))(v22, v23, v65);
      uint64_t v66 = v24[5];
      v67 = &v22[v66];
      v68 = &v23[v66];
      *(void *)v67 = *(void *)v68;
      v67[8] = v68[8];
      uint64_t v69 = v24[6];
      v70 = &v22[v69];
      v71 = &v23[v69];
      *(void *)v70 = *(void *)v71;
      v70[8] = v71[8];
      v22[v24[7]] = v23[v24[7]];
      uint64_t v72 = v24[8];
      v73 = &v22[v72];
      v74 = &v23[v72];
      uint64_t v75 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 40))(v73, v74, v75);
      goto LABEL_13;
    }
    sub_20A596184((uint64_t)v22, type metadata accessor for StockSparklineViewModel);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    sub_20A5962C4(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
    memcpy(v22, v23, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v29 = sub_20A8CDCD0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v29 - 8) + 32))(v22, v23, v29);
  uint64_t v30 = v24[5];
  v31 = &v22[v30];
  v32 = &v23[v30];
  *(void *)v31 = *(void *)v32;
  v31[8] = v32[8];
  uint64_t v33 = v24[6];
  v34 = &v22[v33];
  v35 = &v23[v33];
  *(void *)v34 = *(void *)v35;
  v34[8] = v35[8];
  v22[v24[7]] = v23[v24[7]];
  uint64_t v36 = v24[8];
  v37 = &v22[v36];
  v38 = &v23[v36];
  uint64_t v39 = sub_20A8C3D00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
LABEL_13:
  uint64_t v41 = v77[7];
  uint64_t v42 = v78 + v41;
  uint64_t v43 = v10 + v41;
  *(void *)uint64_t v42 = *(void *)(v10 + v41);
  *(unsigned char *)(v42 + 8) = *(unsigned char *)(v10 + v41 + 8);
  *(void *)(v42 + 16) = *(void *)(v10 + v41 + 16);
  *(unsigned char *)(v42 + 24) = *(unsigned char *)(v10 + v41 + 24);
  *(void *)(v42 + 32) = *(void *)(v10 + v41 + 32);
  *(unsigned char *)(v42 + 40) = *(unsigned char *)(v10 + v41 + 40);
  uint64_t v44 = *(void *)(v10 + v41 + 56);
  *(void *)(v42 + 48) = *(void *)(v10 + v41 + 48);
  *(void *)(v42 + 56) = v44;
  swift_bridgeObjectRelease();
  uint64_t v45 = *(void *)(v43 + 72);
  *(void *)(v42 + 64) = *(void *)(v43 + 64);
  *(void *)(v42 + 72) = v45;
  swift_bridgeObjectRelease();
  v46 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v47 = v46[9];
  uint64_t v48 = v42 + v47;
  uint64_t v49 = v43 + v47;
  uint64_t v50 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  uint64_t v51 = v46[10];
  uint64_t v52 = v42 + v51;
  uint64_t v53 = v43 + v51;
  uint64_t v54 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
  uint64_t v55 = v46[11];
  uint64_t v56 = v42 + v55;
  uint64_t v57 = v43 + v55;
  uint64_t v58 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 40))(v56, v57, v58);
  uint64_t v59 = v77[8];
  uint64_t v60 = v78 + v59;
  uint64_t v61 = v10 + v59;
  uint64_t v62 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 40))(v60, v61, v62);
  *(unsigned char *)(v78 + v77[9]) = *(unsigned char *)(v10 + v77[9]);
  uint64_t v63 = *(int *)(v76 + 32);
  *(void *)(a1 + *(int *)(v76 + 28)) = *(void *)(a2 + *(int *)(v76 + 28));
  *(void *)(a1 + v63) = *(void *)(a2 + v63);
  swift_release();
  return a1;
}

uint64_t sub_20A594EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A594EFC);
}

uint64_t sub_20A594EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for StockViewModel();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_20A594FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A594FC0);
}

uint64_t sub_20A594FC0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for StockViewModel();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for StockListMoveStockBlueprintModifier()
{
  uint64_t result = qword_26763C118;
  if (!qword_26763C118) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A5950B4()
{
  uint64_t result = type metadata accessor for StockViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A595170(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v106 = a3;
  v107 = a2;
  sub_20A5960C4(0, &qword_26AC6A428, MEMORY[0x263F7D950]);
  uint64_t v108 = *(void *)(v4 - 8);
  uint64_t v109 = v4;
  MEMORY[0x270FA5388](v4);
  v105 = (void *)((char *)v83 - v5);
  uint64_t v113 = sub_20A8C3F00();
  uint64_t v111 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113);
  v112 = (char *)v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C91C0();
  uint64_t v96 = *(void *)(v7 - 8);
  uint64_t v97 = v7;
  MEMORY[0x270FA5388](v7);
  v95 = (char *)v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  v94 = (char *)v83 - v10;
  uint64_t v11 = sub_20A8CA4C0();
  uint64_t v99 = *(void *)(v11 - 8);
  uint64_t v100 = v11;
  MEMORY[0x270FA5388](v11);
  v98 = (char *)v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_20A8C40E0();
  uint64_t v93 = *(void *)(v114 - 8);
  MEMORY[0x270FA5388](v114);
  v92 = (char *)v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5960C4(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v15 = v14;
  uint64_t v102 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  v101 = (char *)v83 - v16;
  sub_20A5962C4(0, &qword_26AC69DB0, (uint64_t (*)(uint64_t))sub_20A42D93C, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v17 - 8);
  int v19 = (char *)v83 - v18;
  sub_20A42D93C();
  uint64_t v21 = v20;
  uint64_t v103 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  v23 = (char *)v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A47113C();
  MEMORY[0x270FA5388](v24 - 8);
  v26 = (char *)v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5960C4(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  uint64_t v28 = v27;
  uint64_t v29 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  v31 = (char *)v83 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  v34 = (char *)v83 - v33;
  sub_20A8CBB90();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v28) == 1)
  {
    sub_20A596184((uint64_t)v26, (uint64_t (*)(void))sub_20A47113C);
    sub_20A5961E4();
    uint64_t v35 = swift_allocError();
    uint64_t v36 = v105;
    uint64_t *v105 = v35;
    uint64_t v38 = v108;
    uint64_t v37 = v109;
    (*(void (**)(uint64_t *, void, uint64_t))(v108 + 104))(v36, *MEMORY[0x263F7D930], v109);
    v107(v36);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v38 + 8))(v36, v37);
  }
  else
  {
    uint64_t v91 = a1;
    v88 = v31;
    v89 = v23;
    uint64_t v40 = v109;
    uint64_t v90 = v15;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v34, v26, v28);
    uint64_t v41 = type metadata accessor for StockListMoveStockBlueprintModifier();
    sub_20A8C3E20();
    sub_20A8C8920();
    swift_bridgeObjectRelease();
    uint64_t v42 = v103;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v19, 1, v21) == 1)
    {
      sub_20A596238((uint64_t)v19);
      sub_20A5961E4();
      uint64_t v43 = swift_allocError();
      uint64_t v44 = v105;
      uint64_t *v105 = v43;
      uint64_t v45 = v108;
      (*(void (**)(uint64_t *, void, uint64_t))(v108 + 104))(v44, *MEMORY[0x263F7D930], v40);
      v107(v44);
      (*(void (**)(uint64_t *, uint64_t))(v45 + 8))(v44, v40);
      return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v34, v28);
    }
    else
    {
      v46 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
      uint64_t v85 = v21;
      v46(v89, v19, v21);
      uint64_t v86 = v29;
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v88, v34, v28);
      v83[2] = v41;
      uint64_t v87 = v28;
      sub_20A8C8860();
      (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v101, v91, v90);
      v84 = v34;
      sub_20A8CBAB0();
      uint64_t v47 = sub_20A82EA50();
      int64_t v48 = *(void *)(v47 + 16);
      if (v48)
      {
        uint64_t v115 = MEMORY[0x263F8EE78];
        sub_20A68C494(0, v48, 0);
        uint64_t v49 = v111 + 16;
        uint64_t v111 = *(void *)(v111 + 16);
        unint64_t v50 = (*(unsigned __int8 *)(v49 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 64);
        v83[1] = v47;
        unint64_t v51 = v47 + v50;
        uint64_t v110 = *(void *)(v49 + 56);
        uint64_t v52 = (void (**)(char *, uint64_t))(v49 - 8);
        do
        {
          uint64_t v53 = v112;
          uint64_t v54 = v113;
          uint64_t v55 = v49;
          ((void (*)(char *, unint64_t, uint64_t))v111)(v112, v51, v113);
          uint64_t v56 = sub_20A8C3EC0();
          uint64_t v58 = v57;
          (*v52)(v53, v54);
          uint64_t v59 = v115;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_20A68C494(0, *(void *)(v59 + 16) + 1, 1);
            uint64_t v59 = v115;
          }
          unint64_t v61 = *(void *)(v59 + 16);
          unint64_t v60 = *(void *)(v59 + 24);
          if (v61 >= v60 >> 1)
          {
            sub_20A68C494(v60 > 1, v61 + 1, 1);
            uint64_t v59 = v115;
          }
          *(void *)(v59 + 16) = v61 + 1;
          uint64_t v62 = v59 + 16 * v61;
          *(void *)(v62 + 32) = v56;
          *(void *)(v62 + 40) = v58;
          v51 += v110;
          --v48;
          uint64_t v49 = v55;
          uint64_t v63 = v114;
        }
        while (v48);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v63 = v114;
      }
      v64 = v92;
      uint64_t v65 = v104;
      uint64_t v66 = v104[5];
      uint64_t v114 = v104[6];
      __swift_project_boxed_opaque_existential_1(v104 + 2, v66);
      __swift_project_boxed_opaque_existential_1(v65 + 2, v65[5]);
      sub_20A8C3600();
      sub_20A8C36B0();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v64, v63);
      v68 = v98;
      uint64_t v67 = v99;
      uint64_t v69 = *(char **)(v99 + 104);
      LODWORD(v113) = *MEMORY[0x263F7DC48];
      uint64_t v70 = v100;
      v112 = v69;
      ((void (*)(char *))v69)(v98);
      uint64_t v114 = sub_20A8CA3A0();
      uint64_t v111 = *(void *)(v67 + 8);
      ((void (*)(char *, uint64_t))v111)(v68, v70);
      v71 = v94;
      sub_20A8CA3F0();
      uint64_t v72 = v95;
      uint64_t v73 = v96;
      uint64_t v74 = v97;
      (*(void (**)(char *, void, uint64_t))(v96 + 104))(v95, *MEMORY[0x263F7D698], v97);
      char v75 = sub_20A8C91B0();
      uint64_t v76 = *(void (**)(char *, uint64_t))(v73 + 8);
      v76(v72, v74);
      v76(v71, v74);
      type metadata accessor for StockListModel(0);
      sub_20A42D40C();
      sub_20A59607C(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
      if (v75)
      {
        v77 = v105;
        uint64_t v78 = v101;
        sub_20A8C9B20();
        v107(v77);
        swift_release();
        (*(void (**)(uint64_t *, uint64_t))(v108 + 8))(v77, v109);
        (*(void (**)(char *, uint64_t))(v102 + 8))(v78, v90);
      }
      else
      {
        v79 = v105;
        v80 = v101;
        sub_20A8C9B30();
        v107(v79);
        (*(void (**)(uint64_t *, uint64_t))(v108 + 8))(v79, v109);
        ((void (*)(char *, void, uint64_t))v112)(v68, v113, v70);
        sub_20A8CA4D0();
        swift_release();
        ((void (*)(char *, uint64_t))v111)(v68, v70);
        (*(void (**)(char *, uint64_t))(v102 + 8))(v80, v90);
      }
      v81 = *(void (**)(char *, uint64_t))(v86 + 8);
      uint64_t v82 = v87;
      v81(v88, v87);
      (*(void (**)(char *, uint64_t))(v103 + 8))(v89, v85);
      return ((uint64_t (*)(char *, uint64_t))v81)(v84, v82);
    }
  }
}

uint64_t sub_20A595EAC()
{
  sub_20A5962C4(0, (unint64_t *)&qword_26AC7FFC8, MEMORY[0x263F7D880], MEMORY[0x263F8E0F8]);
  uint64_t v0 = sub_20A8C9880();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, void, uint64_t))(v1 + 104))(v3 + v2, *MEMORY[0x263F7D878], v0);
  uint64_t v4 = sub_20A7BAEDC(v3);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v4;
}

uint64_t sub_20A595FEC()
{
  return sub_20A59607C(&qword_26763C128, (void (*)(uint64_t))type metadata accessor for StockListMoveStockBlueprintModifier);
}

uint64_t sub_20A596034()
{
  return sub_20A59607C(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
}

uint64_t sub_20A59607C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A5960C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for StockListSectionDescriptor;
    v8[1] = type metadata accessor for StockListModel(255);
    v8[2] = sub_20A42D40C();
    v8[3] = sub_20A59607C(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A596184(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_20A5961E4()
{
  unint64_t result = qword_26763C130;
  if (!qword_26763C130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C130);
  }
  return result;
}

uint64_t sub_20A596238(uint64_t a1)
{
  sub_20A5962C4(0, &qword_26AC69DB0, (uint64_t (*)(uint64_t))sub_20A42D93C, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_20A5962C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for StockListMoveStockBlueprintModifier.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A5963C4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockListMoveStockBlueprintModifier.Errors()
{
  return &type metadata for StockListMoveStockBlueprintModifier.Errors;
}

unint64_t sub_20A596400()
{
  unint64_t result = qword_26763C138;
  if (!qword_26763C138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C138);
  }
  return result;
}

uint64_t CopyLinkCommandHandler.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t CopyLink2CommandHandler.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t CopyLink2CommandHandler.init()()
{
  return v0;
}

uint64_t CopyLink2CommandHandler.handle(commandCenter:command:with:source:)()
{
  return sub_20A596648();
}

BOOL CopyLink2CommandHandler.canHandle(commandCenter:command:with:source:)()
{
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C8F50();
  uint64_t v3 = sub_20A8C2530();
  BOOL v4 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) != 1;
  sub_20A596854((uint64_t)v2);
  return v4;
}

uint64_t CopyLink2CommandHandler.deinit()
{
  return v0;
}

uint64_t sub_20A59654C()
{
  return sub_20A596648();
}

BOOL sub_20A596554()
{
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C8F50();
  uint64_t v3 = sub_20A8C2530();
  BOOL v4 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) != 1;
  sub_20A596854((uint64_t)v2);
  return v4;
}

uint64_t CopyLinkCommandHandler.init()()
{
  return v0;
}

uint64_t CopyLinkCommandHandler.handle(commandCenter:command:with:source:)()
{
  return sub_20A5968B0();
}

uint64_t CopyLinkCommandHandler.deinit()
{
  return v0;
}

uint64_t CopyLinkCommandHandler.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_20A596640()
{
  return sub_20A5968B0();
}

uint64_t sub_20A596648()
{
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_20A8C2530();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C8F50();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return sub_20A596854((uint64_t)v2);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  unint64_t v8 = self;
  id v9 = objc_msgSend(v8, sel_generalPasteboard);
  uint64_t v10 = (void *)sub_20A8C24D0();
  objc_msgSend(v9, sel_setURL_, v10);

  id v11 = objc_msgSend(v8, sel_generalPasteboard);
  sub_20A8C24C0();
  uint64_t v12 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setString_, v12);

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_20A596854(uint64_t a1)
{
  sub_20A4845D0(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A5968B0()
{
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_20A8C2530();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C2520();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return sub_20A596854((uint64_t)v2);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  unint64_t v8 = self;
  id v9 = objc_msgSend(v8, sel_generalPasteboard);
  uint64_t v10 = (void *)sub_20A8C24D0();
  objc_msgSend(v9, sel_setURL_, v10);

  id v11 = objc_msgSend(v8, sel_generalPasteboard);
  sub_20A8C24C0();
  uint64_t v12 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setString_, v12);

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t type metadata accessor for CopyLink2CommandHandler()
{
  return self;
}

uint64_t method lookup function for CopyLink2CommandHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CopyLink2CommandHandler);
}

uint64_t dispatch thunk of CopyLink2CommandHandler.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t type metadata accessor for CopyLinkCommandHandler()
{
  return self;
}

uint64_t method lookup function for CopyLinkCommandHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CopyLinkCommandHandler);
}

uint64_t dispatch thunk of CopyLinkCommandHandler.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_20A596C54()
{
  return type metadata accessor for ForYouFeedMastheadViewProvider();
}

uint64_t type metadata accessor for ForYouFeedMastheadViewProvider()
{
  uint64_t result = qword_26AC80E68;
  if (!qword_26AC80E68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A596CA8()
{
  uint64_t result = sub_20A8C96C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_20A596D64()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_mastheadView);
}

id sub_20A596D78()
{
  return sub_20A596D9C();
}

id sub_20A596D9C()
{
  unint64_t v1 = __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_renderer), *(void *)(v0 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_renderer + 24));
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_mastheadView);
  swift_bridgeObjectRetain();
  objc_msgSend(v2, sel_bounds);
  double v4 = v3;
  double v6 = v5;
  uint64_t v7 = __swift_project_boxed_opaque_existential_1((void *)(*v1 + 16), *(void *)(*v1 + 40));
  uint64_t v9 = *(void *)(*v7 + 40);
  uint64_t v8 = *(void *)(*v7 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v7 + 16), v9);
  uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v8 + 16) + 40))(v9);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F5A3D0]), sel_initWithTextColor_, v10);

  uint64_t v12 = (void *)sub_20A8CE240();
  id v13 = objc_msgSend(v11, sel_styleTitleText_styleType_boundingSize_, v12, 0, v4, v6);
  swift_bridgeObjectRelease();

  return v13;
}

void sub_20A596ED8()
{
}

void sub_20A596EFC()
{
  uint64_t v1 = v0;
  sub_20A8CA210();
  CGFloat Width = CGRectGetWidth(v21);
  sub_20A8CA200();
  double v4 = v3 + 116.0;
  sub_20A8CA1E0();
  sub_20A8CA210();
  sub_20A8C96B0();
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  id v13 = (void *)sub_20A8CA1F0();
  uint64_t v14 = (void *)sub_20A8CA1D0();
  v19[0] = Width;
  v19[1] = v4;
  v19[2] = v6;
  v19[3] = v8;
  v19[4] = v10;
  v19[5] = v12;
  *(void *)&v19[6] = v13;
  *(void *)&v19[7] = v14;
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_layoutAttributesFactory), *(void *)(v1 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_layoutAttributesFactory + 24));
  uint64_t v15 = OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_model;
  swift_retain();
  sub_20A73B8FC(v19, (uint64_t)v18);
  swift_release();
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_renderer), *(void *)(v1 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_renderer + 24));
  uint64_t v16 = *(void *)(v0 + v15);
  swift_retain();
  id v17 = (id)sub_20A8CA1F0();
  sub_20A41B05C(v16, v18, v17, *(char **)(v0 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_mastheadView));

  swift_release();
}

double sub_20A5970B8()
{
  sub_20A8CA200();
  return v0 + 116.0;
}

uint64_t sub_20A5970EC()
{
  return sub_20A597110();
}

uint64_t sub_20A597110()
{
  swift_retain();
  if (sub_20A8051B8())
  {
    if (qword_26AC82DB0 != -1) {
      swift_once();
    }
    type metadata accessor for ForYouMastheadModel();
    sub_20A5972E8((unint64_t *)&qword_26763A540, (void (*)(uint64_t))type metadata accessor for ForYouMastheadModel);
    sub_20A8C41C0();
    if (v4)
    {
      uint64_t v1 = OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_animationManager;
      id v2 = objc_retain(*(id *)(*(void *)(v0 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_mastheadView)
                             + qword_26763CFB0));
      sub_20A8C7920();

      uint64_t result = swift_release();
      *(unsigned char *)(*(void *)(v0 + v1) + 16) = 0;
      return result;
    }
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return swift_release();
}

uint64_t sub_20A597290(uint64_t a1)
{
  uint64_t result = sub_20A5972E8(&qword_26AC80E58, (void (*)(uint64_t))type metadata accessor for ForYouFeedMastheadViewProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_20A5972E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A597330(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_20A8CF760();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  double v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_20A8CF760() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_20A5973F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_20A8CE280();
  uint64_t v5 = v4;
  if (v3 == sub_20A8CE280() && v5 == v6)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v8 = sub_20A8CF760();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = 5;
  while (1)
  {
    uint64_t v11 = v10 - 3;
    if (__OFADD__(v10 - 4, 1)) {
      break;
    }
    uint64_t v12 = sub_20A8CE280();
    uint64_t v14 = v13;
    if (v12 == sub_20A8CE280() && v14 == v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    char v17 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_7;
    }
    ++v10;
    if (v11 == v2) {
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_20A597550()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WatchlistCommandHandler()
{
  return self;
}

uint64_t sub_20A5975C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, uint64_t a6)
{
  __int16 v6 = *a5;
  int v7 = a5[1];
  uint64_t v8 = *((void *)a5 + 1);
  if (v7) {
    __int16 v9 = 256;
  }
  else {
    __int16 v9 = 0;
  }
  return sub_20A5976FC(a1, a2, a4, v9 | v6, v8, a6);
}

uint64_t sub_20A597604@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t result = sub_20A597DA4(a1);
  *(unsigned char *)a2 = result & 1;
  *(unsigned char *)(a2 + 1) = BYTE1(result) & 1;
  *(void *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_20A597644(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = a5;
  uint64_t v15 = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(boxed_opaque_existential_1, a2, a5);
  uint64_t v11 = swift_allocObject();
  sub_20A42BEBC(a1, v11 + 16);
  sub_20A42BEBC(&v13, v11 + 56);
  *(void *)(v11 + 96) = a3;
  return v11;
}

uint64_t sub_20A5976FC(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v41 = a3;
  uint64_t v42 = a6;
  uint64_t v40 = 0;
  sub_20A598288(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v39 - v11;
  uint64_t v13 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A598288(0, &qword_26763ACE8, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  CGRect v21 = (char *)v39 - v20;
  if ((a4 & 0x100) != 0)
  {
    if (a4)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v28 = sub_20A8CF760();
      swift_bridgeObjectRelease();
      if ((v28 & 1) == 0)
      {
        uint64_t v29 = v40;
LABEL_16:
        sub_20A4B2908();
        uint64_t v35 = *(int *)(v34 + 48);
        uint64_t v36 = sub_20A8C3F00();
        uint64_t v37 = *(void *)(v36 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v15, v41, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v15, 0, 1, v36);
        *(void *)&v15[v35] = v42;
        swift_storeEnumTagMultiPayload();
        uint64_t v38 = sub_20A8C6D60();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v12, 1, 1, v38);
        uint64_t v46 = 0;
        memset(v45, 0, sizeof(v45));
        uint64_t v44 = 0;
        memset(v43, 0, sizeof(v43));
        swift_retain();
        swift_retain();
        sub_20A5BFAAC((uint64_t)v15, 0, (uint64_t)v12, (uint64_t)v45, 0, 0, (uint64_t)v43);
        if (v29) {

        }
        else {
          swift_release();
        }
        sub_20A49127C((uint64_t)v43, &qword_26AC69600, (unint64_t *)&unk_26AC695F0);
        sub_20A49127C((uint64_t)v45, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
        sub_20A5982DC((uint64_t)v12, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28]);
        sub_20A4EF9E0((uint64_t)v15);
        return swift_release();
      }
    }
    v39[2] = a2;
    v39[1] = swift_getObjectType();
    if (qword_26AC6ABF8 != -1) {
      swift_once();
    }
    v39[0] = qword_26AC9EA08;
    __swift_project_boxed_opaque_existential_1((void *)(v7 + 16), *(void *)(v7 + 40));
    sub_20A8C3600();
    uint64_t v30 = type metadata accessor for WatchlistMembershipCommandContext(0);
    v31 = &v21[*(int *)(v30 + 20)];
    uint64_t v32 = sub_20A8C3F00();
    uint64_t v33 = *(void *)(v32 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v31, v41, v32);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v31, 0, 1, v32);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v21, 0, 1, v30);
    uint64_t v29 = v40;
    sub_20A8C8CD0();
    if (v29)
    {

      uint64_t v29 = 0;
    }
    sub_20A5982DC((uint64_t)v21, &qword_26763ACE8, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
    goto LABEL_16;
  }
  swift_getObjectType();
  if (qword_26AC6ABF8 != -1) {
    swift_once();
  }
  __swift_project_boxed_opaque_existential_1((void *)(v7 + 16), *(void *)(v7 + 40));
  sub_20A8C3600();
  uint64_t v22 = type metadata accessor for WatchlistMembershipCommandContext(0);
  v23 = &v18[*(int *)(v22 + 20)];
  uint64_t v24 = sub_20A8C3F00();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v23, v41, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v23, 0, 1, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v18, 0, 1, v22);
  v26 = v40;
  sub_20A8C8CD0();
  if (v26) {

  }
  return sub_20A5982DC((uint64_t)v18, &qword_26763ACE8, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
}

uint64_t sub_20A597DA4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v54 = a1;
  uint64_t v3 = sub_20A8C40E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v49 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  uint64_t v7 = sub_20A8C3690();
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t v47 = v4;
  uint64_t v48 = v3;
  uint64_t v46 = v1;
  if (!v8)
  {
    swift_bridgeObjectRelease();
    int v45 = 0;
    goto LABEL_27;
  }
  uint64_t v9 = 0;
  uint64_t v10 = *(void *)(v4 + 72);
  unint64_t v52 = v7 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v53 = v7;
  uint64_t v51 = v10;
  do
  {
    uint64_t v11 = (void *)sub_20A8C40B0();
    uint64_t v12 = sub_20A8C3EC0();
    uint64_t v14 = v13;
    uint64_t v15 = v11[2];
    if (!v15) {
      goto LABEL_10;
    }
    uint64_t v16 = v12;
    BOOL v17 = v11[4] == v12 && v11[5] == v13;
    if (v17 || (uint64_t result = sub_20A8CF760(), (result & 1) != 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v45 = 1;
      goto LABEL_25;
    }
    if (v15 == 1)
    {
LABEL_10:
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    uint64_t v19 = v6;
    uint64_t v20 = v11 + 7;
    uint64_t v21 = 1;
    do
    {
      uint64_t v22 = v21 + 1;
      if (__OFADD__(v21, 1))
      {
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
        return result;
      }
      BOOL v23 = *(v20 - 1) == v16 && *v20 == v14;
      if (v23 || (uint64_t result = sub_20A8CF760(), (result & 1) != 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int v45 = 1;
        uint64_t v2 = v46;
        uint64_t v6 = v19;
        goto LABEL_26;
      }
      v20 += 2;
      ++v21;
    }
    while (v22 != v15);
    swift_bridgeObjectRelease();
    uint64_t v6 = v19;
LABEL_11:
    ++v9;
    swift_bridgeObjectRelease();
  }
  while (v9 != v8);
  swift_bridgeObjectRelease();
  int v45 = 0;
LABEL_25:
  uint64_t v2 = v46;
LABEL_26:
  uint64_t v4 = v47;
  uint64_t v3 = v48;
LABEL_27:
  uint64_t v24 = v49;
  __swift_project_boxed_opaque_existential_1(v6, *(void *)(v2 + 40));
  uint64_t result = sub_20A8C3690();
  uint64_t v25 = result;
  uint64_t v53 = *(void *)(result + 16);
  if (v53)
  {
    uint64_t v44 = v6;
    uint64_t v26 = 0;
    unint64_t v27 = 0;
    unint64_t v52 = result + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    unint64_t v50 = (uint64_t (**)(char *, uint64_t))(v4 + 8);
    uint64_t v51 = v4 + 16;
    while (1)
    {
      if (v27 >= *(void *)(v25 + 16))
      {
        __break(1u);
LABEL_67:
        __break(1u);
        goto LABEL_68;
      }
      uint64_t v28 = v25;
      (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v24, v52 + *(void *)(v4 + 72) * v27, v3);
      uint64_t v29 = (void *)sub_20A8C40B0();
      uint64_t v30 = sub_20A8C3EC0();
      uint64_t v32 = v31;
      uint64_t v33 = v29[2];
      if (v33)
      {
        uint64_t v34 = v30;
        BOOL v35 = v29[4] == v30 && v29[5] == v31;
        if (v35 || (sub_20A8CF760() & 1) != 0)
        {
LABEL_39:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v24 = v49;
          uint64_t v3 = v48;
          uint64_t result = (*v50)(v49, v48);
          if (__OFADD__(v26++, 1)) {
            goto LABEL_67;
          }
          uint64_t v4 = v47;
          uint64_t v25 = v28;
          goto LABEL_31;
        }
        if (v33 != 1)
        {
          if (v29[6] == v34 && v29[7] == v32) {
            goto LABEL_39;
          }
          uint64_t result = sub_20A8CF760();
          if (result) {
            goto LABEL_39;
          }
          if (v33 != 2)
          {
            uint64_t v37 = v29 + 9;
            uint64_t v38 = 2;
            do
            {
              uint64_t v39 = v38 + 1;
              if (__OFADD__(v38, 1)) {
                goto LABEL_69;
              }
              if (*(v37 - 1) == v34 && *v37 == v32) {
                goto LABEL_39;
              }
              uint64_t result = sub_20A8CF760();
              if (result) {
                goto LABEL_39;
              }
              v37 += 2;
              ++v38;
            }
            while (v39 != v33);
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v4 = v47;
        uint64_t v3 = v48;
        uint64_t v24 = v49;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v25 = v28;
      swift_bridgeObjectRelease();
      uint64_t result = (*v50)(v24, v3);
LABEL_31:
      if (++v27 == v53)
      {
        swift_bridgeObjectRelease();
        if (v45)
        {
          int v41 = 0;
          uint64_t v2 = v46;
          uint64_t v6 = v44;
          goto LABEL_62;
        }
        uint64_t v2 = v46;
        uint64_t v6 = v44;
LABEL_61:
        int v41 = 1;
        goto LABEL_62;
      }
    }
  }
  swift_bridgeObjectRelease();
  if ((v45 & 1) == 0) {
    goto LABEL_61;
  }
  int v41 = 0;
LABEL_62:
  __swift_project_boxed_opaque_existential_1(v6, *(void *)(v2 + 40));
  if (sub_20A8C36F0()) {
    int v42 = 256;
  }
  else {
    int v42 = 0;
  }
  return v42 | v41;
}

void sub_20A598288(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A5982DC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A598288(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A598338@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  sub_20A4333C4();
  uint64_t v5 = v4;
  uint64_t v18 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A59919C();
  uint64_t v9 = v8;
  uint64_t v21 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5991F8();
  sub_20A8CF8E0();
  if (!v2)
  {
    uint64_t v12 = v21;
    uint64_t v16 = v5;
    BOOL v17 = v7;
    sub_20A59924C();
    sub_20A8CF640();
    sub_20A4342F4((uint64_t)a1, (uint64_t)v20);
    type metadata accessor for NewsStockFeedGroupConfigData();
    sub_20A5992A0(&qword_26AC78660, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupConfigData);
    sub_20A5992A0(&qword_26AC78658, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupConfigData);
    uint64_t v13 = v17;
    sub_20A8CC560();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v9);
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v19, v13, v16);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_20A5985EC()
{
  return sub_20A59873C();
}

uint64_t sub_20A5985FC()
{
  return sub_20A8CE360();
}

uint64_t sub_20A59860C()
{
  return sub_20A5987CC();
}

uint64_t sub_20A59861C@<X0>(BOOL *a1@<X8>)
{
  return sub_20A598824(a1);
}

void sub_20A598628(void *a1@<X8>)
{
  *a1 = 1701869940;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_20A59863C()
{
  return 1701869940;
}

uint64_t sub_20A59864C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_20A8CF5B0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_20A5986A4(uint64_t a1)
{
  unint64_t v2 = sub_20A5991F8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A5986E0(uint64_t a1)
{
  unint64_t v2 = sub_20A5991F8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20A59871C()
{
  return sub_20A59873C();
}

uint64_t sub_20A59873C()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A59878C()
{
  return sub_20A8CE360();
}

uint64_t sub_20A5987AC()
{
  return sub_20A5987CC();
}

uint64_t sub_20A5987CC()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A598818@<X0>(BOOL *a1@<X8>)
{
  return sub_20A598824(a1);
}

uint64_t sub_20A598824@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_20A8CF5B0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_20A598874(void *a1@<X8>)
{
  *a1 = 0x4C656C6369747261;
  a1[1] = 0xEB00000000747369;
}

uint64_t sub_20A598898()
{
  return sub_20A8CE5A0();
}

uint64_t sub_20A5988F8()
{
  return sub_20A8CE580();
}

uint64_t sub_20A598948@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A598338(a1, a2);
}

uint64_t sub_20A598960()
{
  uint64_t v1 = v0;
  sub_20A4333C4();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A599138(v1, (uint64_t)v9);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
  sub_20A8CC580();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_20A598AB8()
{
  sub_20A4333C4();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A599138(v0, (uint64_t)v8);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  uint64_t v9 = sub_20A8CC530();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v9;
}

uint64_t sub_20A598C00(uint64_t a1, uint64_t a2)
{
  return sub_20A598DFC(a1, a2, MEMORY[0x263F597E8]);
}

uint64_t sub_20A598C1C(uint64_t a1, uint64_t a2)
{
  return sub_20A598C4C(a1, a2, MEMORY[0x263F597C0]);
}

uint64_t sub_20A598C34(uint64_t a1, uint64_t a2)
{
  return sub_20A598C4C(a1, a2, MEMORY[0x263F597B8]);
}

uint64_t sub_20A598C4C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  sub_20A4333C4();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A599138(v3, (uint64_t)v12);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
  a3(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_20A598D9C(uint64_t a1, uint64_t a2)
{
  return sub_20A598DFC(a1, a2, MEMORY[0x263F597D8]);
}

uint64_t sub_20A598DB4(uint64_t a1, uint64_t a2)
{
  return sub_20A598DFC(a1, a2, MEMORY[0x263F597E0]);
}

uint64_t sub_20A598DCC(uint64_t a1, uint64_t a2)
{
  return sub_20A598DFC(a1, a2, MEMORY[0x263F597C8]);
}

uint64_t sub_20A598DE4(uint64_t a1, uint64_t a2)
{
  return sub_20A598DFC(a1, a2, MEMORY[0x263F597D0]);
}

uint64_t sub_20A598DFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  sub_20A4333C4();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A599138(v3, (uint64_t)v12);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
  uint64_t v13 = a3(v6);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v13;
}

uint64_t sub_20A598F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A5992A0(&qword_26AC720E8, (void (*)(uint64_t))type metadata accessor for StockFeedGroupConfig);

  return MEMORY[0x270F4F5D8](a1, a2, a3, v6);
}

uint64_t sub_20A598FCC()
{
  return sub_20A5992A0(&qword_26AC72108, (void (*)(uint64_t))type metadata accessor for StockFeedGroupConfig);
}

uint64_t type metadata accessor for StockFeedGroupConfig()
{
  uint64_t result = qword_26AC72110;
  if (!qword_26AC72110) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A599060()
{
  return sub_20A5992A0(&qword_26AC720F8, (void (*)(uint64_t))type metadata accessor for StockFeedGroupConfig);
}

uint64_t sub_20A5990A8()
{
  return sub_20A5992A0(&qword_26AC72100, (void (*)(uint64_t))type metadata accessor for StockFeedGroupConfig);
}

uint64_t sub_20A5990F0()
{
  return sub_20A5992A0(&qword_26AC720F0, (void (*)(uint64_t))type metadata accessor for StockFeedGroupConfig);
}

uint64_t sub_20A599138(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockFeedGroupConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_20A59919C()
{
  if (!qword_26AC7FE08)
  {
    sub_20A5991F8();
    unint64_t v0 = sub_20A8CF660();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FE08);
    }
  }
}

unint64_t sub_20A5991F8()
{
  unint64_t result = qword_26AC720C0;
  if (!qword_26AC720C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC720C0);
  }
  return result;
}

unint64_t sub_20A59924C()
{
  unint64_t result = qword_26AC720E0;
  if (!qword_26AC720E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC720E0);
  }
  return result;
}

uint64_t sub_20A5992A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedGroupConfig.CodingType()
{
  return &type metadata for StockFeedGroupConfig.CodingType;
}

unsigned char *_s8StocksUI20StockFeedGroupConfigO10CodingTypeOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A59939CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedGroupConfig.CodingKeys()
{
  return &type metadata for StockFeedGroupConfig.CodingKeys;
}

uint64_t *sub_20A5993D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A4333C4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  return a1;
}

uint64_t sub_20A599484(uint64_t a1)
{
  sub_20A4333C4();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_20A5994E8(uint64_t a1, uint64_t a2)
{
  sub_20A4333C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_20A59954C(uint64_t a1, uint64_t a2)
{
  sub_20A4333C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_20A5995B0(uint64_t a1, uint64_t a2)
{
  sub_20A4333C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_20A599614(uint64_t a1, uint64_t a2)
{
  sub_20A4333C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_20A599678(uint64_t a1, uint64_t a2)
{
  sub_20A4333C4();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A5996E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A4333C4();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, a2, a3, v6);
}

void sub_20A599760(uint64_t a1)
{
  sub_20A4333C4();
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(v2 - 8);
    swift_initEnumMetadataSingleCase();
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
}

unint64_t sub_20A599808()
{
  unint64_t result = qword_26763C158;
  if (!qword_26763C158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C158);
  }
  return result;
}

unint64_t sub_20A599860()
{
  unint64_t result = qword_26763C160;
  if (!qword_26763C160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C160);
  }
  return result;
}

unint64_t sub_20A5998B8()
{
  unint64_t result = qword_26AC720D0;
  if (!qword_26AC720D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC720D0);
  }
  return result;
}

unint64_t sub_20A599910()
{
  unint64_t result = qword_26AC720C8;
  if (!qword_26AC720C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC720C8);
  }
  return result;
}

unint64_t sub_20A599964()
{
  unint64_t result = qword_26AC720D8;
  if (!qword_26AC720D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC720D8);
  }
  return result;
}

void sub_20A5999B8(void *a1, char a2, uint64_t a3, void *a4, uint64_t a5)
{
  sub_20A59AD68(0, &qword_26763C178, type metadata accessor for CommandStocksShareContentComplete, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v48 - v10;
  uint64_t v12 = type metadata accessor for CommandShareContent(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  BOOL v17 = (char *)&v48 - v16;
  if (a4)
  {
    id v18 = a4;
    sub_20A8CE9E0();
    sub_20A43F778();
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_20A8D4540;
    uint64_t v20 = sub_20A71FAAC();
    uint64_t v22 = v21;
    uint64_t v23 = MEMORY[0x263F8D310];
    *(void *)(v19 + 56) = MEMORY[0x263F8D310];
    unint64_t v24 = sub_20A43F830();
    *(void *)(v19 + 64) = v24;
    *(void *)(v19 + 32) = v20;
    *(void *)(v19 + 40) = v22;
    uint64_t v48 = 0;
    unint64_t v49 = 0xE000000000000000;
    uint64_t v50 = (uint64_t)a4;
    sub_20A43F7E0(0, (unint64_t *)&qword_26AC80150);
    sub_20A8CF4E0();
    uint64_t v25 = v48;
    unint64_t v26 = v49;
    *(void *)(v19 + 96) = v23;
    *(void *)(v19 + 104) = v24;
    *(void *)(v19 + 72) = v25;
    *(void *)(v19 + 80) = v26;
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
    unint64_t v27 = (void *)sub_20A8CF180();
    sub_20A8C7D90();
    swift_bridgeObjectRelease();

    return;
  }
  if (!a1)
  {
    os_log_type_t v32 = sub_20A8CE9E0();
    sub_20A59ADCC(a5, (uint64_t)v17);
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
    uint64_t v33 = sub_20A8CF180();
    os_log_type_t v34 = v32;
    if (os_log_type_enabled(v33, v32))
    {
      BOOL v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v48 = v36;
      *(_DWORD *)BOOL v35 = 136315138;
      uint64_t v37 = sub_20A71FAAC();
      uint64_t v50 = sub_20A687610(v37, v38, &v48);
      sub_20A8CF1C0();
      swift_bridgeObjectRelease();
      sub_20A59B178((uint64_t)v17);
      _os_log_impl(&dword_20A414000, v33, v34, "Sharing did not return an activity type; skipping completion for %s",
        v35,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x210528850](v36, -1, -1);
      MEMORY[0x210528850](v35, -1, -1);

      return;
    }

    uint64_t v47 = (uint64_t)v17;
LABEL_14:
    sub_20A59B178(v47);
    return;
  }
  if ((a2 & 1) == 0)
  {
    id v39 = a1;
    os_log_type_t v40 = sub_20A8CE9E0();
    sub_20A59ADCC(a5, (uint64_t)v14);
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
    int v41 = sub_20A8CF180();
    os_log_type_t v42 = v40;
    if (os_log_type_enabled(v41, v40))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v48 = v44;
      *(_DWORD *)uint64_t v43 = 136315138;
      uint64_t v45 = sub_20A71FAAC();
      uint64_t v50 = sub_20A687610(v45, v46, &v48);
      sub_20A8CF1C0();
      swift_bridgeObjectRelease();
      sub_20A59B178((uint64_t)v14);
      _os_log_impl(&dword_20A414000, v41, v42, "Sharing did not complete; skipping completion for %s", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x210528850](v44, -1, -1);
      MEMORY[0x210528850](v43, -1, -1);

      return;
    }

    uint64_t v47 = (uint64_t)v14;
    goto LABEL_14;
  }
  swift_getObjectType();
  uint64_t v28 = qword_26AC6AB88;
  id v29 = a1;
  if (v28 != -1) {
    swift_once();
  }
  sub_20A59ADCC(a5, (uint64_t)v11);
  uint64_t v30 = type metadata accessor for CommandStocksShareContentComplete(0);
  *(void *)&v11[*(int *)(v30 + 20)] = v29;
  *(void *)&v11[*(int *)(v30 + 24)] = 0;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 0, 1, v30);
  id v31 = v29;
  sub_20A8C8CD0();
  sub_20A59B1D4((uint64_t)v11, &qword_26763C178, type metadata accessor for CommandStocksShareContentComplete);
}

uint64_t sub_20A599FBC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = *(void (**)(void *, uint64_t, uint64_t, void *))(a1 + 32);
  if (a4) {
    uint64_t v9 = sub_20A8CE5E0();
  }
  else {
    uint64_t v9 = 0;
  }
  swift_retain();
  id v10 = a2;
  id v11 = a5;
  v8(a2, a3, v9, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for StocksSharingCommandHandler()
{
  return self;
}

void sub_20A59A09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

id sub_20A59A0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v98 = a4;
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AEF0];
  sub_20A59AD68(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v86 = (uint64_t)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v83 - v11;
  uint64_t v13 = sub_20A8C3F00();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v85 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  id v18 = (char *)&v83 - v17;
  uint64_t v19 = type metadata accessor for CommandShareContent(0);
  uint64_t v89 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v90 = v20;
  uint64_t v91 = (uint64_t)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v83 - v22;
  uint64_t v24 = sub_20A8C2530();
  uint64_t v92 = *(void *)(v24 - 8);
  uint64_t v93 = v24;
  MEMORY[0x270FA5388](v24);
  unint64_t v26 = (char *)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = MEMORY[0x263F8EE78];
  uint64_t v94 = a3;
  sub_20A59ADCC(a3, (uint64_t)v23);
  sub_20A58B96C();
  uint64_t v28 = (uint64_t)&v23[*(int *)(v27 + 48)];
  uint64_t v87 = v14;
  uint64_t v88 = v13;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v23, v13);
  sub_20A59AE30(v28, (uint64_t)v12, &qword_26AC68FB0, v7);
  id v83 = (id)sub_20A8C3EF0();
  uint64_t v84 = sub_20A8C3E60();
  v95 = v26;
  sub_20A8C3E30();
  sub_20A741C64((uint64_t)v18);
  uint64_t v96 = a2;
  uint64_t v97 = a1;
  id v29 = (void *)sub_20A8C87A0();
  swift_release();
  if (v29)
  {
    id v30 = v29;
    MEMORY[0x2105268E0]();
    if (*(void *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_20A8CE690();
    }
    sub_20A8CE6B0();
    sub_20A8CE620();
  }
  sub_20A7C74A4((uint64_t)v18);
  id v31 = (void *)sub_20A8C87A0();
  swift_release();
  uint64_t v32 = (uint64_t)v12;
  uint64_t v33 = v88;
  if (v31)
  {
    id v34 = v31;
    MEMORY[0x2105268E0]();
    if (*(void *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_20A8CE690();
    }
    sub_20A8CE6B0();
    sub_20A8CE620();
  }
  id v35 = objc_allocWithZone((Class)SUStockLinkPresentationSource);
  uint64_t v36 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  uint64_t v37 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  unint64_t v38 = (void *)sub_20A8C24D0();
  id v39 = objc_msgSend(v35, sel_initWithStockSymbol_name_url_, v36, v37, v38);

  v101 = (void *)sub_20A42CFF0(0, &qword_26763C168);
  *(void *)&long long aBlock = v39;
  id v83 = v39;
  os_log_type_t v40 = sub_20A46E07C(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v42 = v40[2];
  unint64_t v41 = v40[3];
  if (v42 >= v41 >> 1) {
    os_log_type_t v40 = sub_20A46E07C((void *)(v41 > 1), v42 + 1, 1, v40);
  }
  v40[2] = v42 + 1;
  sub_20A441D28(&aBlock, &v40[4 * v42 + 4]);
  uint64_t v43 = v87;
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
  uint64_t v45 = v85;
  v44(v85, v18, v33);
  uint64_t v84 = v32;
  uint64_t v46 = v32;
  uint64_t v47 = v86;
  sub_20A4BECB4(v46, v86);
  uint64_t v48 = (objc_class *)type metadata accessor for StockShareActivityItemSource();
  unint64_t v49 = (char *)objc_allocWithZone(v48);
  v44(&v49[OBJC_IVAR____TtC8StocksUI28StockShareActivityItemSource_stock], v45, v33);
  sub_20A4BECB4(v47, (uint64_t)&v49[OBJC_IVAR____TtC8StocksUI28StockShareActivityItemSource_quote]);
  v104.receiver = v49;
  v104.super_class = v48;
  id v50 = objc_msgSendSuper2(&v104, sel_init);
  sub_20A59B1D4(v47, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  uint64_t v51 = *(void (**)(char *, uint64_t))(v43 + 8);
  v51(v45, v33);
  v101 = v48;
  *(void *)&long long aBlock = v50;
  unint64_t v53 = v40[2];
  unint64_t v52 = v40[3];
  id v54 = v50;
  if (v53 >= v52 >> 1) {
    os_log_type_t v40 = sub_20A46E07C((void *)(v52 > 1), v53 + 1, 1, v40);
  }
  v40[2] = v53 + 1;
  sub_20A441D28(&aBlock, &v40[4 * v53 + 4]);

  sub_20A59B1D4(v84, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  v51(v18, v33);
  id v55 = objc_allocWithZone(MEMORY[0x263F6BC98]);
  uint64_t v56 = (void *)sub_20A8CE5D0();
  swift_bridgeObjectRelease();
  sub_20A42CFF0(0, &qword_26763C170);
  uint64_t v57 = (void *)sub_20A8CE5D0();
  swift_bridgeObjectRelease();
  id v58 = objc_msgSend(v55, sel_initWithActivityItems_applicationActivities_, v56, v57);

  objc_msgSend(v58, sel_setModalPresentationStyle_, 7);
  sub_20A59AD68(0, &qword_26763B768, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, MEMORY[0x263F8E0F8]);
  uint64_t v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = xmmword_20A8DB4F0;
  unint64_t v60 = (void *)*MEMORY[0x263F6BCD0];
  unint64_t v61 = (void *)*MEMORY[0x263F6BD40];
  *(void *)(v59 + 32) = *MEMORY[0x263F6BCD0];
  *(void *)(v59 + 40) = v61;
  uint64_t v62 = (void *)*MEMORY[0x263F6BCE0];
  uint64_t v63 = (void *)*MEMORY[0x263F6BD48];
  *(void *)(v59 + 48) = *MEMORY[0x263F6BCE0];
  *(void *)(v59 + 56) = v63;
  v64 = (void *)*MEMORY[0x263F6BD18];
  uint64_t v65 = (void *)*MEMORY[0x263F6BD30];
  *(void *)(v59 + 64) = *MEMORY[0x263F6BD18];
  *(void *)(v59 + 72) = v65;
  uint64_t v66 = (void *)*MEMORY[0x263F6BCE8];
  *(void *)(v59 + 80) = *MEMORY[0x263F6BCE8];
  type metadata accessor for ActivityType(0);
  id v67 = v60;
  id v68 = v61;
  id v69 = v62;
  id v70 = v63;
  id v71 = v64;
  id v72 = v65;
  id v73 = v66;
  uint64_t v74 = (void *)sub_20A8CE5D0();
  swift_bridgeObjectRelease();
  objc_msgSend(v58, sel_setExcludedActivityTypes_, v74);

  uint64_t v75 = v91;
  sub_20A59ADCC(v94, v91);
  unint64_t v76 = (*(unsigned __int8 *)(v89 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
  unint64_t v77 = (v90 + v76 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v78 = swift_allocObject();
  sub_20A59B040(v75, v78 + v76);
  v79 = (void *)(v78 + v77);
  uint64_t v80 = v96;
  void *v79 = v97;
  v79[1] = v80;
  *(void *)(v78 + ((v77 + 23) & 0xFFFFFFFFFFFFFFF8)) = v98;
  uint64_t v102 = sub_20A59B0A4;
  uint64_t v103 = v78;
  *(void *)&long long aBlock = MEMORY[0x263EF8330];
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v100 = sub_20A599FBC;
  v101 = &block_descriptor_18;
  v81 = _Block_copy(&aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v58, sel_setCompletionWithItemsHandler_, v81);
  _Block_release(v81);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v95, v93);
  return v58;
}

void sub_20A59AA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a4) {
    return;
  }
  swift_retain();
  uint64_t v8 = (void *)sub_20A8C9990();
  if (!v8)
  {
    swift_release();
    return;
  }
  id v34 = v8;
  id v9 = objc_msgSend(v8, sel_nextResponder);
  if (!v9)
  {
LABEL_6:
    swift_release();
    uint64_t v12 = v34;
LABEL_7:

    return;
  }
  while (1)
  {
    id v35 = v9;
    self;
    uint64_t v10 = (void *)swift_dynamicCastObjCClass();
    if (v10) {
      break;
    }
    id v11 = objc_msgSend(v35, sel_nextResponder);

    id v9 = v11;
    if (!v11) {
      goto LABEL_6;
    }
  }
  uint64_t v13 = v10;
  id v14 = objc_msgSend(v10, sel_view);
  if (!v14)
  {
    swift_release();

    uint64_t v12 = v35;
    goto LABEL_7;
  }
  uint64_t v15 = v14;
  id v16 = sub_20A59A0A8(a1, a2, a3, a4);
  sub_20A8C9980();
  double v18 = v37;
  double v17 = v38;
  sub_20A59AE30((uint64_t)v36, (uint64_t)v42, qword_26AC7FB60, (uint64_t (*)(uint64_t))type metadata accessor for CGRect);
  if ((v42[32] & 1) != 0 || v18 == 0.0 && v17 == 0.0)
  {
    objc_msgSend(v34, sel_bounds);
  }
  else
  {
    sub_20A8C9980();
    sub_20A59AE30((uint64_t)v39, (uint64_t)v40, qword_26AC7FB60, (uint64_t (*)(uint64_t))type metadata accessor for CGRect);
    if (v41)
    {
      __break(1u);
      return;
    }
    double v19 = *(double *)v40;
    double v20 = *(double *)&v40[1];
    double v21 = *(double *)&v40[2];
    double v22 = *(double *)&v40[3];
  }
  objc_msgSend(v15, sel_convertRect_fromCoordinateSpace_, v34, v19, v20, v21, v22);
  double v24 = v23;
  double v26 = v25;
  double v28 = v27;
  double v30 = v29;
  id v31 = objc_msgSend(v16, sel_popoverPresentationController);
  if (v31)
  {
    uint64_t v32 = v31;
    objc_msgSend(v31, sel_setSourceView_, v15);
  }
  id v33 = objc_msgSend(v16, sel_popoverPresentationController);
  objc_msgSend(v33, sel_setSourceRect_, v24, v26, v28, v30);

  objc_msgSend(v13, sel_presentViewController_animated_completion_, v16, 1, 0);
  swift_release();
}

void sub_20A59AD68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A59ADCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CommandShareContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A59AE30(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_20A59AD68(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A59AEB0()
{
  uint64_t v1 = *(void *)(type metadata accessor for CommandShareContent(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = sub_20A8C3F00();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  sub_20A58B96C();
  unint64_t v5 = v0 + v2 + *(int *)(v4 + 48);
  uint64_t v6 = sub_20A8C3E10();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A59B040(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CommandShareContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20A59B0A4(void *a1, char a2, uint64_t a3, void *a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for CommandShareContent(0) - 8);
  uint64_t v10 = v4 + ((*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  sub_20A5999B8(a1, a2, a3, a4, v10);
}

uint64_t sub_20A59B178(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CommandShareContent(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A59B1D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A59AD68(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

id StockChartCalloutView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void StockChartCalloutView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC8StocksUI21StockChartCalloutView_dateLabel;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = OBJC_IVAR____TtC8StocksUI21StockChartCalloutView_priceLabel;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_20A8CF520();
  __break(1u);
}

id StockChartCalloutView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

char *StockChartCalloutView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC8StocksUI21StockChartCalloutView_dateLabel;
  id v10 = objc_allocWithZone(MEMORY[0x263F828E0]);
  id v11 = v4;
  *(void *)&v4[v9] = objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v12 = OBJC_IVAR____TtC8StocksUI21StockChartCalloutView_priceLabel;
  *(void *)&v11[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for StockChartCalloutView();
  uint64_t v13 = (char *)objc_msgSendSuper2(&v17, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v14 = *(void *)&v13[OBJC_IVAR____TtC8StocksUI21StockChartCalloutView_dateLabel];
  uint64_t v15 = v13;
  objc_msgSend(v15, sel_addSubview_, v14);
  objc_msgSend(v15, sel_addSubview_, *(void *)&v15[OBJC_IVAR____TtC8StocksUI21StockChartCalloutView_priceLabel]);

  return v15;
}

uint64_t type metadata accessor for StockChartCalloutView()
{
  return self;
}

id StockChartCalloutView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StockChartCalloutView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_20A59B68C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v34 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v6 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v6;
    uint64_t v7 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v7;
    uint64_t v8 = type metadata accessor for PriceViewModel();
    uint64_t v9 = *(int *)(v8 + 36);
    id v10 = (char *)v4 + v9;
    id v11 = (char *)a2 + v9;
    uint64_t v12 = sub_20A8C2EB0();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v66 = v13;
    v13(v10, v11, v12);
    uint64_t v14 = (int *)v8;
    uint64_t v15 = *(int *)(v8 + 40);
    id v16 = (char *)v4 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = sub_20A8C4030();
    v64 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
    v64(v16, v17, v18);
    uint64_t v19 = v14[11];
    double v20 = (char *)v4 + v19;
    uint64_t v21 = (uint64_t)a2 + v19;
    uint64_t v22 = sub_20A8C2990();
    uint64_t v62 = *(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 16);
    uint64_t v63 = v22;
    v62(v20, v21);
    uint64_t v23 = type metadata accessor for QuoteViewModel();
    uint64_t v24 = *(int *)(v23 + 20);
    double v25 = (char *)v4 + v24;
    uint64_t v26 = (uint64_t)a2 + v24;
    uint64_t v27 = sub_20A8C3410();
    unint64_t v60 = *(void (**)(char *, uint64_t))(*(void *)(v27 - 8) + 16);
    uint64_t v61 = v27;
    v60(v25, v26);
    uint64_t v28 = *(int *)(v23 + 24);
    double v29 = (char *)v4 + v28;
    double v30 = (char *)a2 + v28;
    uint64_t v31 = type metadata accessor for QuoteSummaryTimeRange();
    uint64_t v32 = *(void *)(v31 - 8);
    uint64_t v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
    uint64_t v65 = v18;
    if (v59(v30, 1, v31))
    {
      sub_20A5A083C(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
      memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      uint64_t v56 = v31;
      uint64_t v57 = v32;
      uint64_t v35 = sub_20A8C2BC0();
      uint64_t v36 = *(void *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v30, 3, v35))
      {
        uint64_t v32 = v57;
        memcpy(v29, v30, *(void *)(v57 + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v29, v30, v35);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v29, 0, 3, v35);
        uint64_t v32 = v57;
      }
      uint64_t v31 = v56;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v56);
    }
    uint64_t v37 = *(int *)(a3 + 20);
    double v38 = (void *)((char *)v4 + v37);
    id v39 = (uint64_t *)((char *)a2 + v37);
    uint64_t v40 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v40 + 48))(v39, 1, v23))
    {
      sub_20A5A083C(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
      memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      uint64_t v68 = v40;
      uint64_t v58 = v32;
      void *v38 = *v39;
      *((unsigned char *)v38 + 8) = *((unsigned char *)v39 + 8);
      v38[2] = v39[2];
      *((unsigned char *)v38 + 24) = *((unsigned char *)v39 + 24);
      v38[4] = v39[4];
      *((unsigned char *)v38 + 40) = *((unsigned char *)v39 + 40);
      uint64_t v42 = v39[7];
      v38[6] = v39[6];
      v38[7] = v42;
      uint64_t v43 = v39[9];
      v38[8] = v39[8];
      v38[9] = v43;
      uint64_t v44 = v14[9];
      uint64_t v45 = (char *)v38 + v44;
      uint64_t v46 = (char *)v39 + v44;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v66(v45, v46, v12);
      v64((char *)v38 + v14[10], (uint64_t)v39 + v14[10], v65);
      ((void (*)(char *, char *, uint64_t))v62)((char *)v38 + v14[11], (char *)v39 + v14[11], v63);
      ((void (*)(char *, char *, uint64_t))v60)((char *)v38 + *(int *)(v23 + 20), (char *)v39 + *(int *)(v23 + 20), v61);
      uint64_t v47 = *(int *)(v23 + 24);
      uint64_t v48 = (char *)v38 + v47;
      unint64_t v49 = (char *)v39 + v47;
      if (v59((char *)v39 + v47, 1, v31))
      {
        sub_20A5A083C(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
        uint64_t v51 = v68;
      }
      else
      {
        uint64_t v52 = sub_20A8C2BC0();
        uint64_t v53 = *(void *)(v52 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v49, 3, v52))
        {
          uint64_t v54 = v58;
          memcpy(v48, v49, *(void *)(v58 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v48, v49, v52);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v48, 0, 3, v52);
          uint64_t v54 = v58;
        }
        uint64_t v51 = v68;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v48, 0, 1, v31);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v38, 0, 1, v23);
    }
  }
  return v4;
}

uint64_t sub_20A59BDB0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v3 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v4 = a1 + v3[9];
  uint64_t v5 = sub_20A8C2EB0();
  uint64_t v26 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v26(v4, v5);
  uint64_t v6 = a1 + v3[10];
  uint64_t v7 = sub_20A8C4030();
  double v25 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v25(v6, v7);
  uint64_t v8 = a1 + v3[11];
  uint64_t v9 = sub_20A8C2990();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v24(v8, v9);
  uint64_t v10 = type metadata accessor for QuoteViewModel();
  uint64_t v11 = a1 + *(int *)(v10 + 20);
  uint64_t v12 = sub_20A8C3410();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v23(v11, v12);
  uint64_t v13 = a1 + *(int *)(v10 + 24);
  uint64_t v14 = type metadata accessor for QuoteSummaryTimeRange();
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  if (!v22(v13, 1, v14))
  {
    uint64_t v15 = sub_20A8C2BC0();
    uint64_t v21 = *(void *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v13, 3, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v13, v15);
    }
  }
  uint64_t v16 = a1 + *(int *)(a2 + 20);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v16, 1, v10);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26(v16 + v3[9], v5);
    v25(v16 + v3[10], v7);
    v24(v16 + v3[11], v9);
    v23(v16 + *(int *)(v10 + 20), v12);
    uint64_t v18 = v16 + *(int *)(v10 + 24);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v22)(v18, 1, v14);
    if (!result)
    {
      uint64_t v19 = sub_20A8C2BC0();
      uint64_t v28 = *(void *)(v19 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v18, 3, v19);
      if (!result)
      {
        double v20 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8);
        return v20(v18, v19);
      }
    }
  }
  return result;
}

uint64_t sub_20A59C1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v8 = v7[9];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = sub_20A8C2EB0();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v60 = v12;
  v12(v9, v10, v11);
  uint64_t v13 = v7[10];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_20A8C4030();
  uint64_t v58 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
  uint64_t v59 = v16;
  v58(v14, v15);
  uint64_t v17 = v7[11];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_20A8C2990();
  uint64_t v56 = *(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
  uint64_t v57 = v20;
  v56(v18, v19);
  uint64_t v21 = type metadata accessor for QuoteViewModel();
  uint64_t v22 = *(int *)(v21 + 20);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_20A8C3410();
  id v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
  v55(v23, v24, v25);
  uint64_t v26 = *(int *)(v21 + 24);
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (const void *)(a2 + v26);
  uint64_t v29 = type metadata accessor for QuoteSummaryTimeRange();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v54 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48);
  if (v54(v28, 1, v29))
  {
    sub_20A5A083C(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    uint64_t v52 = v30;
    uint64_t v61 = v29;
    uint64_t v32 = sub_20A8C2BC0();
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v28, 3, v32))
    {
      uint64_t v30 = v52;
      memcpy(v27, v28, *(void *)(v52 + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v33 + 16))(v27, v28, v32);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v27, 0, 3, v32);
      uint64_t v30 = v52;
    }
    uint64_t v29 = v61;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v61);
  }
  uint64_t v34 = *(int *)(a3 + 20);
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (void *)(a2 + v34);
  uint64_t v37 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v37 + 48))(v36, 1, v21))
  {
    sub_20A5A083C(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
    memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    uint64_t v64 = v37;
    uint64_t v53 = v30;
    void *v35 = *v36;
    *((unsigned char *)v35 + 8) = *((unsigned char *)v36 + 8);
    v35[2] = v36[2];
    *((unsigned char *)v35 + 24) = *((unsigned char *)v36 + 24);
    v35[4] = v36[4];
    *((unsigned char *)v35 + 40) = *((unsigned char *)v36 + 40);
    uint64_t v39 = v36[7];
    v35[6] = v36[6];
    v35[7] = v39;
    uint64_t v40 = v36[9];
    v35[8] = v36[8];
    v35[9] = v40;
    uint64_t v41 = v7[9];
    uint64_t v42 = (char *)v35 + v41;
    uint64_t v62 = v29;
    uint64_t v43 = (char *)v36 + v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v60(v42, v43, v11);
    ((void (*)(char *, char *, uint64_t))v58)((char *)v35 + v7[10], (char *)v36 + v7[10], v59);
    ((void (*)(char *, char *, uint64_t))v56)((char *)v35 + v7[11], (char *)v36 + v7[11], v57);
    v55((uint64_t)v35 + *(int *)(v21 + 20), (uint64_t)v36 + *(int *)(v21 + 20), v25);
    uint64_t v44 = *(int *)(v21 + 24);
    uint64_t v45 = (char *)v35 + v44;
    uint64_t v46 = (char *)v36 + v44;
    if (v54((char *)v36 + v44, 1, v62))
    {
      sub_20A5A083C(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      uint64_t v48 = sub_20A8C2BC0();
      uint64_t v49 = *(void *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v46, 3, v48))
      {
        uint64_t v50 = v53;
        memcpy(v45, v46, *(void *)(v53 + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v45, v46, v48);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v45, 0, 3, v48);
        uint64_t v50 = v53;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v45, 0, 1, v62);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v35, 0, 1, v21);
  }
  return a1;
}

uint64_t sub_20A59C894(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v5;
  uint64_t v6 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v9 = v8[9];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (uint64_t)a2 + v9;
  uint64_t v12 = sub_20A8C2EB0();
  uint64_t v98 = *(void *)(v12 - 8);
  uint64_t v103 = v12;
  uint64_t v93 = *(void (**)(uint64_t, uint64_t))(v98 + 24);
  v93(v10, v11);
  uint64_t v13 = v8[10];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (uint64_t)a2 + v13;
  uint64_t v16 = sub_20A8C4030();
  uint64_t v97 = *(void *)(v16 - 8);
  uint64_t v102 = v16;
  uint64_t v92 = *(void (**)(uint64_t, uint64_t))(v97 + 24);
  v92(v14, v15);
  objc_super v104 = v8;
  uint64_t v17 = v8[11];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t)a2 + v17;
  uint64_t v20 = sub_20A8C2990();
  uint64_t v96 = *(void *)(v20 - 8);
  uint64_t v101 = v20;
  uint64_t v91 = *(void (**)(uint64_t, uint64_t))(v96 + 24);
  v91(v18, v19);
  uint64_t v21 = type metadata accessor for QuoteViewModel();
  uint64_t v22 = *(int *)(v21 + 20);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t)a2 + v22;
  uint64_t v25 = sub_20A8C3410();
  uint64_t v95 = *(void *)(v25 - 8);
  uint64_t v99 = v25;
  uint64_t v90 = *(void (**)(uint64_t, uint64_t))(v95 + 24);
  v90(v23, v24);
  uint64_t v26 = *(int *)(v21 + 24);
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = type metadata accessor for QuoteSummaryTimeRange();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
  int v32 = v31(v27, 1, v29);
  uint64_t v106 = v29;
  uint64_t v100 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v31;
  int v33 = v31(v28, 1, v29);
  uint64_t v105 = v30;
  if (!v32)
  {
    if (!v33)
    {
      uint64_t v40 = sub_20A8C2BC0();
      uint64_t v41 = *(void *)(v40 - 8);
      uint64_t v42 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v41 + 48);
      int v89 = v42(v27, 3, v40);
      int v43 = v42(v28, 3, v40);
      if (v89)
      {
        if (!v43)
        {
          (*(void (**)(void *, char *, uint64_t))(v41 + 16))(v27, v28, v40);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v27, 0, 3, v40);
          goto LABEL_9;
        }
      }
      else
      {
        if (!v43)
        {
          (*(void (**)(void *, char *, uint64_t))(v41 + 24))(v27, v28, v40);
          goto LABEL_9;
        }
        (*(void (**)(void *, uint64_t))(v41 + 8))(v27, v40);
      }
      size_t v38 = *(void *)(v30 + 64);
LABEL_8:
      memcpy(v27, v28, v38);
LABEL_9:
      uint64_t v39 = a3;
      goto LABEL_15;
    }
    sub_20A59D554((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for QuoteSummaryTimeRange);
LABEL_7:
    sub_20A5A083C(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    size_t v38 = *(void *)(*(void *)(v37 - 8) + 64);
    goto LABEL_8;
  }
  if (v33) {
    goto LABEL_7;
  }
  uint64_t v34 = sub_20A8C2BC0();
  uint64_t v35 = *(void *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v28, 3, v34))
  {
    uint64_t v36 = v105;
    memcpy(v27, v28, *(void *)(v105 + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v35 + 16))(v27, v28, v34);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v27, 0, 3, v34);
    uint64_t v36 = v105;
  }
  uint64_t v39 = a3;
  (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v27, 0, 1, v29);
LABEL_15:
  uint64_t v44 = *(int *)(v39 + 20);
  uint64_t v45 = a1 + v44;
  uint64_t v46 = (uint64_t *)((char *)a2 + v44);
  uint64_t v47 = *(void *)(v21 - 8);
  uint64_t v48 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
  int v49 = v48(a1 + v44, 1, v21);
  int v50 = v48((uint64_t)v46, 1, v21);
  if (!v49)
  {
    if (v50)
    {
      sub_20A59D554(v45, (uint64_t (*)(void))type metadata accessor for QuoteViewModel);
      goto LABEL_21;
    }
    uint64_t v67 = *v46;
    *(unsigned char *)(v45 + 8) = *((unsigned char *)v46 + 8);
    *(void *)uint64_t v45 = v67;
    uint64_t v68 = v46[2];
    *(unsigned char *)(v45 + 24) = *((unsigned char *)v46 + 24);
    *(void *)(v45 + 16) = v68;
    uint64_t v69 = v46[4];
    *(unsigned char *)(v45 + 40) = *((unsigned char *)v46 + 40);
    *(void *)(v45 + 32) = v69;
    *(void *)(v45 + 48) = v46[6];
    *(void *)(v45 + 56) = v46[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v45 + 64) = v46[8];
    *(void *)(v45 + 72) = v46[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v70 = v104;
    ((void (*)(uint64_t, char *, uint64_t))v93)(v45 + v104[9], (char *)v46 + v104[9], v103);
    ((void (*)(uint64_t, char *, uint64_t))v92)(v45 + v70[10], (char *)v46 + v70[10], v102);
    ((void (*)(uint64_t, char *, uint64_t))v91)(v45 + v70[11], (char *)v46 + v70[11], v101);
    ((void (*)(uint64_t, char *, uint64_t))v90)(v45 + *(int *)(v21 + 20), (char *)v46 + *(int *)(v21 + 20), v99);
    uint64_t v71 = *(int *)(v21 + 24);
    id v72 = (void *)(v45 + v71);
    id v73 = (char *)v46 + v71;
    int v74 = v100(v45 + v71, 1, v106);
    int v75 = v100((uint64_t)v73, 1, v106);
    if (v74)
    {
      if (!v75)
      {
        uint64_t v76 = sub_20A8C2BC0();
        uint64_t v77 = *(void *)(v76 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v73, 3, v76))
        {
          uint64_t v78 = v105;
          memcpy(v72, v73, *(void *)(v105 + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v77 + 16))(v72, v73, v76);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v77 + 56))(v72, 0, 3, v76);
          uint64_t v78 = v105;
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v78 + 56))(v72, 0, 1, v106);
        return a1;
      }
    }
    else
    {
      if (!v75)
      {
        uint64_t v84 = sub_20A8C2BC0();
        uint64_t v85 = *(void *)(v84 - 8);
        uint64_t v86 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v85 + 48);
        int v87 = v86(v72, 3, v84);
        int v88 = v86(v73, 3, v84);
        if (v87)
        {
          if (!v88)
          {
            (*(void (**)(void *, char *, uint64_t))(v85 + 16))(v72, v73, v84);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v85 + 56))(v72, 0, 3, v84);
            return a1;
          }
        }
        else
        {
          if (!v88)
          {
            (*(void (**)(void *, char *, uint64_t))(v85 + 24))(v72, v73, v84);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v85 + 8))(v72, v84);
        }
        size_t v64 = *(void *)(v105 + 64);
        goto LABEL_35;
      }
      sub_20A59D554((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for QuoteSummaryTimeRange);
    }
    sub_20A5A083C(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    size_t v64 = *(void *)(*(void *)(v82 - 8) + 64);
LABEL_35:
    uint64_t v65 = v72;
    uint64_t v66 = v73;
    goto LABEL_22;
  }
  if (v50)
  {
LABEL_21:
    sub_20A5A083C(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
    size_t v64 = *(void *)(*(void *)(v63 - 8) + 64);
    uint64_t v65 = (void *)v45;
    uint64_t v66 = (char *)v46;
LABEL_22:
    memcpy(v65, v66, v64);
    return a1;
  }
  uint64_t v94 = v47;
  uint64_t v51 = *v46;
  *(unsigned char *)(v45 + 8) = *((unsigned char *)v46 + 8);
  *(void *)uint64_t v45 = v51;
  uint64_t v52 = v46[2];
  *(unsigned char *)(v45 + 24) = *((unsigned char *)v46 + 24);
  *(void *)(v45 + 16) = v52;
  uint64_t v53 = v46[4];
  *(unsigned char *)(v45 + 40) = *((unsigned char *)v46 + 40);
  *(void *)(v45 + 32) = v53;
  *(void *)(v45 + 48) = v46[6];
  *(void *)(v45 + 56) = v46[7];
  *(void *)(v45 + 64) = v46[8];
  *(void *)(v45 + 72) = v46[9];
  uint64_t v54 = v104;
  uint64_t v55 = v104[9];
  uint64_t v56 = v45 + v55;
  uint64_t v57 = (uint64_t)v46 + v55;
  uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v58(v56, v57, v103);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 16))(v45 + v54[10], (uint64_t)v46 + v54[10], v102);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 16))(v45 + v54[11], (uint64_t)v46 + v54[11], v101);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16))(v45 + *(int *)(v21 + 20), (uint64_t)v46 + *(int *)(v21 + 20), v99);
  uint64_t v59 = *(int *)(v21 + 24);
  unint64_t v60 = (void *)(v45 + v59);
  uint64_t v61 = (char *)v46 + v59;
  if (v100((uint64_t)v46 + v59, 1, v106))
  {
    sub_20A5A083C(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
  }
  else
  {
    uint64_t v79 = sub_20A8C2BC0();
    uint64_t v80 = *(void *)(v79 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v61, 3, v79))
    {
      uint64_t v81 = v105;
      memcpy(v60, v61, *(void *)(v105 + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v80 + 16))(v60, v61, v79);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v80 + 56))(v60, 0, 3, v79);
      uint64_t v81 = v105;
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v81 + 56))(v60, 0, 1, v106);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v94 + 56))(v45, 0, 1, v21);
  return a1;
}

uint64_t sub_20A59D554(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A59D5B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  uint64_t v6 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v7 = v6[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20A8C2EB0();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v54(v8, v9, v10);
  uint64_t v11 = v6[10];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_20A8C4030();
  uint64_t v52 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 32);
  uint64_t v53 = v14;
  v52(v12, v13);
  uint64_t v15 = v6[11];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_20A8C2990();
  int v50 = *(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 32);
  uint64_t v51 = v18;
  v50(v16, v17);
  uint64_t v19 = type metadata accessor for QuoteViewModel();
  uint64_t v20 = *(int *)(v19 + 20);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_20A8C3410();
  int v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32);
  v49(v21, v22, v23);
  uint64_t v24 = *(int *)(v19 + 24);
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (const void *)(a2 + v24);
  uint64_t v27 = type metadata accessor for QuoteSummaryTimeRange();
  uint64_t v56 = *(void *)(v27 - 8);
  uint64_t v48 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48);
  uint64_t v55 = v10;
  if (v48(v26, 1, v27))
  {
    sub_20A5A083C(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v47 = v27;
    uint64_t v29 = sub_20A8C2BC0();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v26, 3, v29))
    {
      uint64_t v31 = v56;
      memcpy(v25, v26, *(void *)(v56 + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v30 + 32))(v25, v26, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v25, 0, 3, v29);
      uint64_t v31 = v56;
    }
    uint64_t v27 = v47;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v25, 0, 1, v47);
  }
  uint64_t v32 = *(int *)(a3 + 20);
  int v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  uint64_t v35 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v35 + 48))(v34, 1, v19))
  {
    sub_20A5A083C(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
    memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    *int v33 = *v34;
    *((unsigned char *)v33 + 8) = *((unsigned char *)v34 + 8);
    v33[2] = v34[2];
    *((unsigned char *)v33 + 24) = *((unsigned char *)v34 + 24);
    v33[4] = v34[4];
    *((unsigned char *)v33 + 40) = *((unsigned char *)v34 + 40);
    long long v37 = *((_OWORD *)v34 + 4);
    *((_OWORD *)v33 + 3) = *((_OWORD *)v34 + 3);
    *((_OWORD *)v33 + 4) = v37;
    v54((uint64_t)v33 + v6[9], (uint64_t)v34 + v6[9], v55);
    ((void (*)(char *, char *, uint64_t))v52)((char *)v33 + v6[10], (char *)v34 + v6[10], v53);
    ((void (*)(char *, char *, uint64_t))v50)((char *)v33 + v6[11], (char *)v34 + v6[11], v51);
    v49((uint64_t)v33 + *(int *)(v19 + 20), (uint64_t)v34 + *(int *)(v19 + 20), v23);
    uint64_t v38 = *(int *)(v19 + 24);
    uint64_t v39 = (char *)v33 + v38;
    uint64_t v40 = (char *)v34 + v38;
    if (v48((char *)v34 + v38, 1, v27))
    {
      sub_20A5A083C(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      uint64_t v42 = v27;
      uint64_t v43 = sub_20A8C2BC0();
      uint64_t v44 = *(void *)(v43 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v40, 3, v43))
      {
        uint64_t v45 = v56;
        memcpy(v39, v40, *(void *)(v56 + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v39, v40, v43);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v39, 0, 3, v43);
        uint64_t v45 = v56;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v39, 0, 1, v42);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v33, 0, 1, v19);
  }
  return a1;
}

uint64_t sub_20A59DC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v8 = v7[9];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_20A8C2EB0();
  uint64_t v90 = *(void *)(v11 - 8);
  uint64_t v95 = v11;
  uint64_t v86 = *(void (**)(uint64_t, uint64_t))(v90 + 40);
  v86(v9, v10);
  uint64_t v12 = v7[10];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_20A8C4030();
  uint64_t v89 = *(void *)(v15 - 8);
  uint64_t v94 = v15;
  uint64_t v85 = *(void (**)(uint64_t, uint64_t))(v89 + 40);
  v85(v13, v14);
  uint64_t v96 = v7;
  uint64_t v16 = v7[11];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_20A8C2990();
  uint64_t v88 = *(void *)(v19 - 8);
  uint64_t v93 = v19;
  uint64_t v84 = *(void (**)(uint64_t, uint64_t))(v88 + 40);
  v84(v17, v18);
  uint64_t v20 = type metadata accessor for QuoteViewModel();
  uint64_t v21 = *(int *)(v20 + 20);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_20A8C3410();
  uint64_t v87 = *(void *)(v24 - 8);
  uint64_t v91 = v24;
  id v83 = *(void (**)(uint64_t, uint64_t))(v87 + 40);
  v83(v22, v23);
  uint64_t v25 = *(int *)(v20 + 24);
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  uint64_t v28 = type metadata accessor for QuoteSummaryTimeRange();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v29 + 48);
  int v31 = v30(v26, 1, v28);
  uint64_t v98 = v28;
  uint64_t v92 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v30;
  int v32 = v30(v27, 1, v28);
  uint64_t v97 = v29;
  if (!v31)
  {
    if (!v32)
    {
      uint64_t v39 = sub_20A8C2BC0();
      uint64_t v40 = *(void *)(v39 - 8);
      uint64_t v41 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v40 + 48);
      int v82 = v41(v26, 3, v39);
      int v42 = v41(v27, 3, v39);
      if (v82)
      {
        if (!v42)
        {
          (*(void (**)(void *, void *, uint64_t))(v40 + 32))(v26, v27, v39);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v26, 0, 3, v39);
          goto LABEL_9;
        }
      }
      else
      {
        if (!v42)
        {
          (*(void (**)(void *, void *, uint64_t))(v40 + 40))(v26, v27, v39);
          goto LABEL_9;
        }
        (*(void (**)(void *, uint64_t))(v40 + 8))(v26, v39);
      }
      size_t v37 = *(void *)(v29 + 64);
LABEL_8:
      memcpy(v26, v27, v37);
LABEL_9:
      uint64_t v38 = a3;
      goto LABEL_15;
    }
    sub_20A59D554((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for QuoteSummaryTimeRange);
LABEL_7:
    sub_20A5A083C(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    size_t v37 = *(void *)(*(void *)(v36 - 8) + 64);
    goto LABEL_8;
  }
  if (v32) {
    goto LABEL_7;
  }
  uint64_t v33 = sub_20A8C2BC0();
  uint64_t v34 = *(void *)(v33 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v34 + 48))(v27, 3, v33))
  {
    uint64_t v35 = v97;
    memcpy(v26, v27, *(void *)(v97 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v34 + 32))(v26, v27, v33);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v26, 0, 3, v33);
    uint64_t v35 = v97;
  }
  uint64_t v38 = a3;
  (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v26, 0, 1, v98);
LABEL_15:
  uint64_t v43 = *(int *)(v38 + 20);
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = *(void *)(v20 - 8);
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
  int v48 = v47(a1 + v43, 1, v20);
  int v49 = v47(v45, 1, v20);
  if (!v48)
  {
    if (v49)
    {
      sub_20A59D554(v44, (uint64_t (*)(void))type metadata accessor for QuoteViewModel);
      goto LABEL_21;
    }
    *(void *)uint64_t v44 = *(void *)v45;
    *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
    *(void *)(v44 + 16) = *(void *)(v45 + 16);
    *(unsigned char *)(v44 + 24) = *(unsigned char *)(v45 + 24);
    *(void *)(v44 + 32) = *(void *)(v45 + 32);
    *(unsigned char *)(v44 + 40) = *(unsigned char *)(v45 + 40);
    uint64_t v60 = *(void *)(v45 + 56);
    *(void *)(v44 + 48) = *(void *)(v45 + 48);
    *(void *)(v44 + 56) = v60;
    swift_bridgeObjectRelease();
    uint64_t v61 = *(void *)(v45 + 72);
    *(void *)(v44 + 64) = *(void *)(v45 + 64);
    *(void *)(v44 + 72) = v61;
    swift_bridgeObjectRelease();
    uint64_t v62 = v96;
    ((void (*)(uint64_t, uint64_t, uint64_t))v86)(v44 + v96[9], v45 + v96[9], v95);
    ((void (*)(uint64_t, uint64_t, uint64_t))v85)(v44 + v62[10], v45 + v62[10], v94);
    ((void (*)(uint64_t, uint64_t, uint64_t))v84)(v44 + v62[11], v45 + v62[11], v93);
    ((void (*)(uint64_t, uint64_t, uint64_t))v83)(v44 + *(int *)(v20 + 20), v45 + *(int *)(v20 + 20), v91);
    uint64_t v63 = *(int *)(v20 + 24);
    size_t v64 = (void *)(v44 + v63);
    uint64_t v65 = (void *)(v45 + v63);
    int v66 = v92(v44 + v63, 1, v98);
    int v67 = v92((uint64_t)v65, 1, v98);
    if (v66)
    {
      if (!v67)
      {
        uint64_t v68 = sub_20A8C2BC0();
        uint64_t v69 = *(void *)(v68 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v69 + 48))(v65, 3, v68))
        {
          uint64_t v70 = v97;
          memcpy(v64, v65, *(void *)(v97 + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v69 + 32))(v64, v65, v68);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v64, 0, 3, v68);
          uint64_t v70 = v97;
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v70 + 56))(v64, 0, 1, v98);
        return a1;
      }
    }
    else
    {
      if (!v67)
      {
        uint64_t v77 = sub_20A8C2BC0();
        uint64_t v78 = *(void *)(v77 - 8);
        uint64_t v79 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v78 + 48);
        int v80 = v79(v64, 3, v77);
        int v81 = v79(v65, 3, v77);
        if (v80)
        {
          if (!v81)
          {
            (*(void (**)(void *, void *, uint64_t))(v78 + 32))(v64, v65, v77);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v78 + 56))(v64, 0, 3, v77);
            return a1;
          }
        }
        else
        {
          if (!v81)
          {
            (*(void (**)(void *, void *, uint64_t))(v78 + 40))(v64, v65, v77);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v78 + 8))(v64, v77);
        }
        size_t v57 = *(void *)(v97 + 64);
        goto LABEL_35;
      }
      sub_20A59D554((uint64_t)v64, (uint64_t (*)(void))type metadata accessor for QuoteSummaryTimeRange);
    }
    sub_20A5A083C(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    size_t v57 = *(void *)(*(void *)(v75 - 8) + 64);
LABEL_35:
    uint64_t v58 = v64;
    uint64_t v59 = v65;
    goto LABEL_22;
  }
  if (v49)
  {
LABEL_21:
    sub_20A5A083C(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
    size_t v57 = *(void *)(*(void *)(v56 - 8) + 64);
    uint64_t v58 = (void *)v44;
    uint64_t v59 = (const void *)v45;
LABEL_22:
    memcpy(v58, v59, v57);
    return a1;
  }
  *(void *)uint64_t v44 = *(void *)v45;
  *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
  *(void *)(v44 + 16) = *(void *)(v45 + 16);
  *(unsigned char *)(v44 + 24) = *(unsigned char *)(v45 + 24);
  *(void *)(v44 + 32) = *(void *)(v45 + 32);
  *(unsigned char *)(v44 + 40) = *(unsigned char *)(v45 + 40);
  long long v50 = *(_OWORD *)(v45 + 64);
  *(_OWORD *)(v44 + 48) = *(_OWORD *)(v45 + 48);
  *(_OWORD *)(v44 + 64) = v50;
  uint64_t v51 = v96;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 32))(v44 + v96[9], v45 + v96[9], v95);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32))(v44 + v51[10], v45 + v51[10], v94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 32))(v44 + v51[11], v45 + v51[11], v93);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 32))(v44 + *(int *)(v20 + 20), v45 + *(int *)(v20 + 20), v91);
  uint64_t v52 = *(int *)(v20 + 24);
  uint64_t v53 = (void *)(v44 + v52);
  uint64_t v54 = (const void *)(v45 + v52);
  if (v92(v45 + v52, 1, v98))
  {
    sub_20A5A083C(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    uint64_t v71 = v46;
    uint64_t v72 = sub_20A8C2BC0();
    uint64_t v73 = *(void *)(v72 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v73 + 48))(v54, 3, v72))
    {
      uint64_t v74 = v97;
      memcpy(v53, v54, *(void *)(v97 + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v73 + 32))(v53, v54, v72);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v73 + 56))(v53, 0, 3, v72);
      uint64_t v74 = v97;
    }
    uint64_t v46 = v71;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v74 + 56))(v53, 0, 1, v98);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v44, 0, 1, v20);
  return a1;
}

uint64_t sub_20A59E88C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A59E8A0);
}

uint64_t sub_20A59E8A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for QuoteViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_20A5A083C(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_20A59E9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A59E9C8);
}

uint64_t sub_20A59E9C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for QuoteViewModel();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_20A5A083C(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for QuoteSummaryViewModel()
{
  uint64_t result = qword_26AC72FA8;
  if (!qword_26AC72FA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A59EB34()
{
  type metadata accessor for QuoteViewModel();
  if (v0 <= 0x3F)
  {
    sub_20A5A083C(319, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_20A59EC1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  int v124 = a6;
  uint64_t v143 = a4;
  uint64_t v144 = a5;
  uint64_t v145 = a3;
  uint64_t v146 = a1;
  uint64_t v140 = a7;
  uint64_t v132 = sub_20A8C2990();
  uint64_t v131 = *(void *)(v132 - 8);
  MEMORY[0x270FA5388](v132);
  v139 = (char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_20A8C2EB0();
  uint64_t v127 = *(void *)(v130 - 8);
  MEMORY[0x270FA5388](v130);
  v129 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5A083C(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v134 = (uint64_t)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v123 = (uint64_t)&v110 - v13;
  uint64_t v14 = sub_20A8C3410();
  uint64_t v141 = *(void *)(v14 - 8);
  uint64_t v142 = v14;
  MEMORY[0x270FA5388](v14);
  v133 = (char *)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  v122 = (char *)&v110 - v17;
  sub_20A5A083C(0, qword_26AC6D6E0, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v121 = (uint64_t)&v110 - v19;
  uint64_t v20 = sub_20A8C2BC0();
  uint64_t v147 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v110 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5A083C(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v126 = (uint64_t)&v110 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v138 = (uint64_t)&v110 - v26;
  uint64_t v27 = sub_20A8C4030();
  uint64_t v136 = *(void *)(v27 - 8);
  uint64_t v137 = v27;
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v110 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = type metadata accessor for PriceViewModel();
  uint64_t v120 = *(void *)(v135 - 8);
  MEMORY[0x270FA5388](v135);
  v128 = (uint64_t *)((char *)&v110 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v110 - v32;
  uint64_t v34 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
  sub_20A5A083C(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  MEMORY[0x270FA5388](v35 - 8);
  size_t v37 = (char *)&v110 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = (char *)&v110 - v39;
  uint64_t v41 = sub_20A8C3E10();
  MEMORY[0x270FA5388](v41);
  uint64_t v43 = (char *)&v110 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v44;
  uint64_t v46 = v34;
  uint64_t v48 = v47;
  sub_20A5A06FC(a2, (uint64_t)v40, &qword_26AC68FB0, v46);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v40, 1, v45) == 1)
  {
    uint64_t v49 = v48;
    uint64_t v50 = v140;
    uint64_t v51 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
    sub_20A5A06A0((uint64_t)v40, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v37, 1, 1, v45);
    uint64_t v52 = v146;
    sub_20A8C3E70();
    sub_20A5EC850((uint64_t)v37, v29, 9666786, 0xA300000000000000, (uint64_t)v33);
    (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v144, v20);
    sub_20A5A06A0(v145, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
    sub_20A5A06A0(a2, &qword_26AC68FB0, v51);
    uint64_t v53 = sub_20A8C3F00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v52, v53);
    uint64_t v54 = type metadata accessor for QuoteViewModel();
    uint64_t v55 = v50 + *(int *)(v54 + 24);
    uint64_t v56 = type metadata accessor for QuoteSummaryTimeRange();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 1, 1, v56);
    sub_20A5A0768((uint64_t)v33, v50, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v141 + 32))(v50 + *(int *)(v54 + 20), v143, v142);
    uint64_t v57 = type metadata accessor for QuoteSummaryViewModel();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v50 + *(int *)(v57 + 20), 1, 1, v54);
  }
  v125 = v29;
  v118 = v33;
  uint64_t v119 = a2;
  uint64_t v115 = v48;
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
  uint64_t v116 = v45;
  v59(v43, v40, v45);
  double v60 = sub_20A59FC28(v144, (uint64_t)v43, v145);
  uint64_t v113 = v61;
  int v112 = v62;
  uint64_t v63 = v147;
  (*(void (**)(char *, void, uint64_t, double))(v147 + 104))(v22, *MEMORY[0x263F7A838], v20, v60);
  sub_20A46BA08((unint64_t *)&qword_26AC68D78);
  sub_20A8CE570();
  sub_20A8CE570();
  size_t v64 = v43;
  if (v148 == v150 && v149 == v151) {
    char v65 = 1;
  }
  else {
    char v65 = sub_20A8CF760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v114 = *(void (**)(char *, uint64_t))(v63 + 8);
  v114(v22, v20);
  uint64_t v117 = v20;
  uint64_t v147 = v63 + 8;
  if (v65)
  {
    int v66 = v125;
    sub_20A8C3E70();
    char v67 = v124 & 1;
    uint64_t v68 = v121;
    size_t v64 = v43;
    sub_20A5FCF64(v66, v124 & 1, v121);
    (*(void (**)(char *, uint64_t))(v136 + 8))(v66, v137);
    uint64_t v70 = v141;
    uint64_t v69 = v142;
    uint64_t v71 = v122;
    (*(void (**)(char *, uint64_t, uint64_t))(v141 + 16))(v122, v143, v142);
    uint64_t v72 = v123;
    sub_20A5FD780(v67, v123);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48))(v68, 1, v135) != 1)
    {
      uint64_t v73 = v127;
      uint64_t v75 = v126;
      sub_20A5A0768(v68, v126, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
      uint64_t v76 = type metadata accessor for QuoteViewModel();
      (*(void (**)(uint64_t, char *, uint64_t))(v70 + 32))(v75 + *(int *)(v76 + 20), v71, v69);
      sub_20A5A07D0(v72, v75 + *(int *)(v76 + 24), (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v75, 0, 1, v76);
      goto LABEL_13;
    }
    uint64_t v73 = v127;
    sub_20A5A06A0(v72, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v69);
    sub_20A5A06A0(v68, qword_26AC6D6E0, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
  }
  else
  {
    uint64_t v73 = v127;
  }
  uint64_t v74 = type metadata accessor for QuoteViewModel();
  uint64_t v75 = v126;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v126, 1, 1, v74);
LABEL_13:
  uint64_t v111 = v64;
  sub_20A5A07D0(v75, v138, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
  uint64_t v77 = sub_20A8C3E00();
  LODWORD(v127) = v78;
  uint64_t v126 = sub_20A8C3DC0();
  char v80 = v79;
  uint64_t v81 = sub_20A8C3D30();
  uint64_t v83 = v82;
  uint64_t v84 = v125;
  sub_20A8C3E70();
  uint64_t v85 = v129;
  uint64_t v86 = v130;
  (*(void (**)(char *, void, uint64_t))(v73 + 104))(v129, *MEMORY[0x263F7A9A0], v130);
  uint64_t v87 = v139;
  sub_20A8C2910();
  uint64_t v88 = (uint64_t)v128;
  uint64_t *v128 = v77;
  uint64_t v89 = v87;
  *(unsigned char *)(v88 + 8) = v127 & 1;
  *(void *)(v88 + 16) = v113;
  *(unsigned char *)(v88 + 24) = v112 & 1;
  *(void *)(v88 + 32) = v126;
  *(unsigned char *)(v88 + 40) = v80 & 1;
  *(void *)(v88 + 48) = v81;
  *(void *)(v88 + 56) = v83;
  uint64_t v90 = v135;
  uint64_t v91 = v136;
  uint64_t v92 = v137;
  (*(void (**)(uint64_t, char *, uint64_t))(v136 + 16))(v88 + *(int *)(v135 + 40), v84, v137);
  *(void *)(v88 + 64) = 9666786;
  *(void *)(v88 + 72) = 0xA300000000000000;
  (*(void (**)(uint64_t, char *, uint64_t))(v73 + 16))(v88 + *(int *)(v90 + 36), v85, v86);
  uint64_t v93 = v131;
  uint64_t v94 = v89;
  uint64_t v95 = v132;
  (*(void (**)(uint64_t, char *, uint64_t))(v131 + 16))(v88 + *(int *)(v90 + 44), v94, v132);
  if (qword_26AC6D680 != -1) {
    swift_once();
  }
  uint64_t v96 = qword_26AC9EA70;
  (*(void (**)(char *, uint64_t))(v73 + 8))(v85, v86);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v84, v92);
  uint64_t v97 = v96 + OBJC_IVAR____TtC8StocksUI14PriceFormatter_locale;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v93 + 40))(v97, v139, v95);
  swift_endAccess();
  uint64_t v98 = (uint64_t)v118;
  sub_20A5A0768(v88, (uint64_t)v118, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  uint64_t v100 = v141;
  uint64_t v99 = v142;
  uint64_t v101 = v133;
  uint64_t v102 = v143;
  (*(void (**)(char *, uint64_t, uint64_t))(v141 + 16))(v133, v143, v142);
  uint64_t v103 = v134;
  uint64_t v104 = v144;
  uint64_t v105 = v111;
  sub_20A5FD9FC(v144, v134);
  v114((char *)v104, v117);
  (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v102, v99);
  sub_20A5A06A0(v145, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
  sub_20A5A06A0(v119, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  uint64_t v106 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v106 - 8) + 8))(v146, v106);
  (*(void (**)(char *, uint64_t))(v115 + 8))(v105, v116);
  uint64_t v107 = v140;
  sub_20A5A0768(v98, v140, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  uint64_t v108 = type metadata accessor for QuoteViewModel();
  (*(void (**)(uint64_t, char *, uint64_t))(v100 + 32))(v107 + *(int *)(v108 + 20), v101, v99);
  sub_20A5A07D0(v103, v107 + *(int *)(v108 + 24), (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
  uint64_t v109 = type metadata accessor for QuoteSummaryViewModel();
  return sub_20A5A07D0(v138, v107 + *(int *)(v109 + 20), (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
}

double sub_20A59FC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v43 = a3;
  sub_20A5A083C(0, (unint64_t *)&qword_26AC68F68, MEMORY[0x263F7AE98]);
  MEMORY[0x270FA5388](v3 - 8);
  *(void *)&double v42 = (char *)&v42 - v4;
  sub_20A5A083C(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v42 - v6;
  uint64_t v8 = sub_20A8C3D00();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v42 - v13;
  uint64_t v15 = sub_20A8C2BC0();
  uint64_t v16 = *(void *)(v15 - 8);
  double v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v16 + 104))(v19, *MEMORY[0x263F7A838], v15, v17);
  sub_20A46BA08(&qword_26AC68D70);
  char v20 = sub_20A8CE210();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  if (v20)
  {
    sub_20A8C3D10();
    return result;
  }
  sub_20A5A06FC(v43, (uint64_t)v7, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    uint64_t v22 = (unint64_t *)&unk_26AC68F80;
    uint64_t v23 = (void (*)(uint64_t))MEMORY[0x263F7AEB8];
    uint64_t v24 = (uint64_t)v7;
LABEL_5:
    sub_20A5A06A0(v24, v22, v23);
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
  double v25 = COERCE_DOUBLE(sub_20A8C3E00());
  LODWORD(v27) = v26;
  double v28 = COERCE_DOUBLE(sub_20A8C3C30());
  char v30 = v29;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  if (v30)
  {
    uint64_t v33 = sub_20A8C3CD0();
    uint64_t v34 = *(void *)(v33 + 16);
    uint64_t v35 = sub_20A8C3CA0();
    uint64_t v36 = *(void *)(v35 - 8);
    uint64_t v37 = v36;
    LODWORD(v43) = v27;
    if (v34)
    {
      uint64_t v27 = *(void *)&v42;
      (*(void (**)(double, unint64_t, uint64_t))(v36 + 16))(COERCE_DOUBLE(*(void *)&v42), v33 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80)), v35);
      uint64_t v38 = 0;
    }
    else
    {
      uint64_t v38 = 1;
      uint64_t v27 = *(void *)&v42;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v27, v38, 1, v35);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v27, 1, v35) == 1)
    {
      uint64_t v39 = *(void (**)(char *, uint64_t))(v9 + 8);
      v39(v11, v8);
      v39(v14, v8);
      uint64_t v22 = (unint64_t *)&qword_26AC68F68;
      uint64_t v23 = (void (*)(uint64_t))MEMORY[0x263F7AE98];
      uint64_t v24 = v27;
      goto LABEL_5;
    }
    double v28 = COERCE_DOUBLE(sub_20A8C3C80());
    char v32 = v40 & 1;
    double v42 = v25;
    uint64_t v41 = *(void (**)(char *, uint64_t))(v9 + 8);
    v41(v11, v8);
    v41(v14, v8);
    double v25 = v42;
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v27, v35);
    LOBYTE(v27) = v43;
  }
  else
  {
    uint64_t v31 = *(void (**)(char *, uint64_t))(v9 + 8);
    v31(v11, v8);
    v31(v14, v8);
    char v32 = 0;
  }
  if ((v27 & 1) == 0 && (v32 & 1) == 0) {
    return v25 - v28;
  }
  return result;
}

BOOL sub_20A5A01A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for QuoteViewModel();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5A0620();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5A083C(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  double v17 = (char *)&v28 - v16;
  MEMORY[0x270FA5388](v18);
  char v20 = (char *)&v28 - v19;
  if (!sub_20A8ACB50(a1, a2)) {
    return 0;
  }
  double v28 = v7;
  char v29 = v14;
  uint64_t v21 = type metadata accessor for QuoteSummaryViewModel();
  sub_20A5A06FC(a1 + *(int *)(v21 + 20), (uint64_t)v20, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
  sub_20A5A06FC(a2 + *(int *)(v21 + 20), (uint64_t)v17, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
  uint64_t v22 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_20A5A06FC((uint64_t)v20, (uint64_t)v11, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
  sub_20A5A06FC((uint64_t)v17, v22, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v23((uint64_t)v11, 1, v4) == 1)
  {
    sub_20A5A06A0((uint64_t)v17, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
    sub_20A5A06A0((uint64_t)v20, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
    if (v23(v22, 1, v4) == 1)
    {
      sub_20A5A06A0((uint64_t)v11, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
      return 1;
    }
    goto LABEL_7;
  }
  uint64_t v24 = (uint64_t)v29;
  sub_20A5A06FC((uint64_t)v11, (uint64_t)v29, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
  if (v23(v22, 1, v4) == 1)
  {
    sub_20A5A06A0((uint64_t)v17, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
    sub_20A5A06A0((uint64_t)v20, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
    sub_20A59D554(v24, (uint64_t (*)(void))type metadata accessor for QuoteViewModel);
LABEL_7:
    sub_20A59D554((uint64_t)v11, (uint64_t (*)(void))sub_20A5A0620);
    return 0;
  }
  uint64_t v25 = (uint64_t)v28;
  sub_20A5A0768(v22, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for QuoteViewModel);
  BOOL v26 = sub_20A8ACB50(v24, v25);
  sub_20A59D554(v25, (uint64_t (*)(void))type metadata accessor for QuoteViewModel);
  sub_20A5A06A0((uint64_t)v17, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
  sub_20A5A06A0((uint64_t)v20, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
  sub_20A59D554(v24, (uint64_t (*)(void))type metadata accessor for QuoteViewModel);
  sub_20A5A06A0((uint64_t)v11, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
  return v26;
}

void sub_20A5A0620()
{
  if (!qword_26AC82B30)
  {
    sub_20A5A083C(255, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC82B30);
    }
  }
}

uint64_t sub_20A5A06A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A5A083C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A5A06FC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A5A083C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A5A0768(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A5A07D0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A5A083C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_20A5A083C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for SlideForYouFeedTitleViewAnimator()
{
  return self;
}

uint64_t sub_20A5A08B8(char a1, void *a2, void *a3)
{
  return sub_20A5A08C8(a1 & 1, a2, a3);
}

id sub_20A5A08C0(char a1, void *a2, void *a3)
{
  return sub_20A5A0AA8(a1 & 1, a2, a3);
}

uint64_t sub_20A5A08C8(char a1, void *a2, id a3)
{
  objc_msgSend(a3, sel_frame);
  if (a1)
  {
    sub_20A8CED90();
    objc_msgSend(a3, sel_setFrame_);
    objc_msgSend(a3, sel_setAlpha_, 1.0);
    objc_msgSend(a2, sel_frame);
    objc_msgSend(a3, sel_frame);
    CGRectGetHeight(v11);
    sub_20A8CED90();
    objc_msgSend(a2, sel_setFrame_);
    objc_msgSend(a2, sel_frame);
    double Height = CGRectGetHeight(v12);
    objc_msgSend(a3, sel_frame);
    if (Height - CGRectGetHeight(v13) <= 0.0) {
      double v6 = 1.0;
    }
    else {
      double v6 = 0.0;
    }
    uint64_t v7 = 1;
  }
  else
  {
    objc_msgSend(a3, sel_frame);
    CGRectGetHeight(v10);
    sub_20A8CED90();
    objc_msgSend(a3, sel_setFrame_);
    double v6 = 1.0;
    objc_msgSend(a3, sel_setAlpha_, 1.0);
    objc_msgSend(a2, sel_frame);
    sub_20A8CED90();
    objc_msgSend(a2, sel_setFrame_);
    uint64_t v7 = 0;
  }
  objc_msgSend(a2, sel_setAlpha_, v6);
  return v7;
}

id sub_20A5A0AA8(char a1, id a2, void *a3)
{
  objc_msgSend(a2, sel_frame);
  if (a1)
  {
    objc_msgSend(a3, sel_frame);
    CGRectGetHeight(v11);
    sub_20A8CED90();
    objc_msgSend(a2, sel_setFrame_);
    objc_msgSend(a2, sel_frame);
    double Height = CGRectGetHeight(v12);
    objc_msgSend(a3, sel_frame);
    BOOL v8 = Height - CGRectGetHeight(v13) <= 0.0;
    double v6 = 1.0;
    if (!v8) {
      double v6 = 0.0;
    }
  }
  else
  {
    sub_20A8CED90();
    objc_msgSend(a2, sel_setFrame_);
    double v6 = 1.0;
  }
  objc_msgSend(a2, sel_setAlpha_, v6);

  return objc_msgSend(a3, sel_setAlpha_, 1.0);
}

void sub_20A5A0BD4(unsigned __int8 a1, id a2, void *a3, double a4)
{
  int v7 = a1;
  objc_msgSend(a2, sel_frame);
  double Height = CGRectGetHeight(v13);
  objc_msgSend(a3, sel_frame);
  double v9 = CGRectGetHeight(v14);
  if (v7 != 2)
  {
    double v10 = Height - v9;
    objc_msgSend(a3, sel_frame);
    objc_msgSend(a3, sel_frame);
    CGRectGetHeight(v15);
    objc_msgSend(a3, sel_frame);
    CGRectGetHeight(v16);
    sub_20A8CED90();
    objc_msgSend(a3, sel_setFrame_);
    objc_msgSend(a3, sel_setAlpha_, 1.0);
    objc_msgSend(a2, sel_frame);
    objc_msgSend(a3, sel_frame);
    CGRectGetHeight(v17);
    sub_20A8CED90();
    objc_msgSend(a2, sel_setFrame_);
    double v11 = 1.0;
    if (v10 > 0.0) {
      double v11 = 1.0 - a4;
    }
    objc_msgSend(a2, sel_setAlpha_, v11);
  }
}

uint64_t AttributionSource.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AttributionSource.homeURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AttributionSource();
  return sub_20A5A206C(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))sub_20A4845D0);
}

uint64_t type metadata accessor for AttributionSource()
{
  uint64_t result = qword_26AC68B68;
  if (!qword_26AC68B68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *AttributionSource.logoImage.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for AttributionSource() + 24));
  id v2 = v1;
  return v1;
}

uint64_t AttributionSource.init(name:homeURL:logoImage:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  uint64_t v8 = type metadata accessor for AttributionSource();
  uint64_t result = sub_20A5A0EE4(a3, (uint64_t)a5 + *(int *)(v8 + 20));
  *(void *)((char *)a5 + *(int *)(v8 + 24)) = a4;
  return result;
}

uint64_t sub_20A5A0EE4(uint64_t a1, uint64_t a2)
{
  sub_20A4845D0(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s8StocksUI17AttributionSourceV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_20A8C2530();
  uint64_t v49 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v46 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v47 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5A2008();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v8);
  double v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for AttributionSource();
  MEMORY[0x270FA5388](v52);
  CGRect v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v51 = (uint64_t)&v45 - v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v45 - v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v45 - v20;
  uint64_t v22 = a1[1];
  uint64_t v23 = a2[1];
  BOOL v24 = *a1 == *a2;
  uint64_t v50 = a2;
  if (v24 && v22 == v23)
  {
    sub_20A5A206C((uint64_t)a1, (uint64_t)&v45 - v20, (uint64_t (*)(void))type metadata accessor for AttributionSource);
    sub_20A5A206C((uint64_t)a2, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for AttributionSource);
  }
  else
  {
    char v25 = sub_20A8CF760();
    sub_20A5A206C((uint64_t)a1, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for AttributionSource);
    sub_20A5A206C((uint64_t)a2, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for AttributionSource);
    if ((v25 & 1) == 0)
    {
      sub_20A5A20D4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for AttributionSource);
      sub_20A5A20D4((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for AttributionSource);
      goto LABEL_13;
    }
  }
  uint64_t v48 = v13;
  uint64_t v26 = *(int *)(v52 + 20);
  uint64_t v27 = (uint64_t)&v18[v26];
  uint64_t v28 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_20A5A206C((uint64_t)&v21[v26], (uint64_t)v11, (uint64_t (*)(void))sub_20A4845D0);
  sub_20A5A206C(v27, v28, (uint64_t (*)(void))sub_20A4845D0);
  uint64_t v29 = v49;
  char v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
  if (v30((uint64_t)v11, 1, v4) != 1)
  {
    uint64_t v32 = v47;
    sub_20A5A206C((uint64_t)v11, v47, (uint64_t (*)(void))sub_20A4845D0);
    uint64_t v33 = v32;
    if (v30(v28, 1, v4) != 1)
    {
      uint64_t v36 = v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v46, v28, v4);
      sub_20A5A2134();
      uint64_t v37 = v29;
      char v38 = sub_20A8CE210();
      uint64_t v39 = *(void (**)(char *, uint64_t))(v37 + 8);
      v39(v36, v4);
      sub_20A5A20D4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for AttributionSource);
      sub_20A5A20D4((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for AttributionSource);
      v39((char *)v33, v4);
      sub_20A5A20D4((uint64_t)v11, (uint64_t (*)(void))sub_20A4845D0);
      uint64_t v31 = v51;
      sub_20A5A206C((uint64_t)a1, v51, (uint64_t (*)(void))type metadata accessor for AttributionSource);
      CGRect v13 = v48;
      sub_20A5A206C((uint64_t)v50, (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for AttributionSource);
      if (v38) {
        goto LABEL_16;
      }
LABEL_14:
      sub_20A5A20D4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AttributionSource);
      sub_20A5A20D4(v31, (uint64_t (*)(void))type metadata accessor for AttributionSource);
      return 0;
    }
    sub_20A5A20D4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for AttributionSource);
    sub_20A5A20D4((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for AttributionSource);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v4);
    goto LABEL_11;
  }
  sub_20A5A20D4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for AttributionSource);
  sub_20A5A20D4((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for AttributionSource);
  if (v30(v28, 1, v4) != 1)
  {
LABEL_11:
    sub_20A5A20D4((uint64_t)v11, (uint64_t (*)(void))sub_20A5A2008);
    CGRect v13 = v48;
LABEL_13:
    uint64_t v34 = (uint64_t)v50;
    uint64_t v31 = v51;
    sub_20A5A206C((uint64_t)a1, v51, (uint64_t (*)(void))type metadata accessor for AttributionSource);
    sub_20A5A206C(v34, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AttributionSource);
    goto LABEL_14;
  }
  sub_20A5A20D4((uint64_t)v11, (uint64_t (*)(void))sub_20A4845D0);
  uint64_t v31 = v51;
  sub_20A5A206C((uint64_t)a1, v51, (uint64_t (*)(void))type metadata accessor for AttributionSource);
  CGRect v13 = v48;
  sub_20A5A206C((uint64_t)v50, (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for AttributionSource);
LABEL_16:
  uint64_t v40 = v52;
  uint64_t v41 = *(void **)(v31 + *(int *)(v52 + 24));
  id v42 = v41;
  sub_20A5A20D4(v31, (uint64_t (*)(void))type metadata accessor for AttributionSource);

  uint64_t v43 = *(void **)&v13[*(int *)(v40 + 24)];
  id v44 = v43;
  sub_20A5A20D4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AttributionSource);

  return (v41 == 0) ^ (v43 != 0);
}

uint64_t *initializeBufferWithCopyOfBuffer for AttributionSource(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C2530();
    uint64_t v12 = *(void *)(v11 - 8);
    CGRect v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_20A4845D0(0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 24);
    uint64_t v17 = *(void **)((char *)a2 + v16);
    *(uint64_t *)((char *)v4 + v16) = (uint64_t)v17;
    id v18 = v17;
  }
  return v4;
}

void destroy for AttributionSource(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_20A8C2530();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = *(void **)(a1 + *(int *)(a2 + 24));
}

void *initializeWithCopy for AttributionSource(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C2530();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_20A4845D0(0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = *(void **)((char *)a2 + v14);
  *(void *)((char *)a1 + v14) = v15;
  id v16 = v15;
  return a1;
}

void *assignWithCopy for AttributionSource(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2530();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_20A4845D0(0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  id v16 = *(void **)((char *)a1 + v15);
  uint64_t v17 = *(void **)((char *)a2 + v15);
  *(void *)((char *)a1 + v15) = v17;
  id v18 = v17;

  return a1;
}

_OWORD *initializeWithTake for AttributionSource(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2530();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_20A4845D0(0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithTake for AttributionSource(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C2530();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_20A4845D0(0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = *(void **)((char *)a1 + v16);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);

  return a1;
}

uint64_t getEnumTagSinglePayload for AttributionSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A5A1DFC);
}

uint64_t sub_20A5A1DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_20A4845D0(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AttributionSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A5A1EC0);
}

uint64_t sub_20A5A1EC0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_20A4845D0(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_20A5A1F68()
{
  sub_20A4845D0(319);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_20A5A2008()
{
  if (!qword_26AC68A70)
  {
    sub_20A4845D0(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC68A70);
    }
  }
}

uint64_t sub_20A5A206C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A5A20D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_20A5A2134()
{
  unint64_t result = qword_26AC68A68;
  if (!qword_26AC68A68)
  {
    sub_20A8C2530();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC68A68);
  }
  return result;
}

void destroy for TickerViewLayoutAttributes(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 160);
  if (v1 != (void *)1) {
}
  }

uint64_t initializeWithCopy for TickerViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  uint64_t v8 = *(void **)(a2 + 160);
  if (v8 != (void *)1) {
    id v9 = v8;
  }
  *(void *)(a1 + 160) = v8;
  return a1;
}

void *assignWithCopy for TickerViewLayoutAttributes(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  a1[17] = a2[17];
  a1[18] = a2[18];
  a1[19] = a2[19];
  long long v3 = a1 + 20;
  long long v4 = (void *)a1[20];
  long long v5 = (void *)a2[20];
  if (v4 != (void *)1)
  {
    if (v5 != (void *)1)
    {
      *long long v3 = v5;
      id v8 = v5;

      return a1;
    }
    sub_20A5A2320((uint64_t)(a1 + 20));
    long long v5 = (void *)a2[20];
    goto LABEL_6;
  }
  if (v5 == (void *)1)
  {
LABEL_6:
    *long long v3 = v5;
    return a1;
  }
  *long long v3 = v5;
  id v6 = v5;
  return a1;
}

uint64_t sub_20A5A2320(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for TickerViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  id v9 = (void *)(a1 + 160);
  id v8 = *(void **)(a1 + 160);
  *(_OWORD *)(a1 + 144) = v7;
  uint64_t v10 = *(void *)(a2 + 160);
  if (v8 != (void *)1)
  {
    if (v10 != 1)
    {
      *id v9 = v10;

      return a1;
    }
    sub_20A5A2320(a1 + 160);
    goto LABEL_6;
  }
  if (v10 == 1)
  {
LABEL_6:
    *id v9 = 1;
    return a1;
  }
  *id v9 = v10;
  return a1;
}

uint64_t getEnumTagSinglePayload for TickerViewLayoutAttributes(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFD && *(unsigned char *)(a1 + 168)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 160);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  BOOL v5 = __OFSUB__(v4, 1);
  int v6 = v4 - 1;
  if (v6 < 0 != v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for TickerViewLayoutAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 168) = 0;
    }
    if (a2) {
      *(void *)(result + 160) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TickerViewLayoutAttributes()
{
  return &type metadata for TickerViewLayoutAttributes;
}

uint64_t sub_20A5A24F8()
{
  sub_20A5A258C();

  return sub_20A8CACE0();
}

unint64_t sub_20A5A2538()
{
  unint64_t result = qword_26763C190;
  if (!qword_26763C190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C190);
  }
  return result;
}

unint64_t sub_20A5A258C()
{
  unint64_t result = qword_26763C198;
  if (!qword_26763C198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C198);
  }
  return result;
}

void *sub_20A5A25E0(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    swift_bridgeObjectRetain();
    if (v7)
    {
      a1[2] = a2[2];
      a1[3] = v7;
      uint64_t v8 = a2[5];
      a1[4] = a2[4];
      a1[5] = v8;
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v10 = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((_OWORD *)a1 + 2) = v10;
      a1[6] = a2[6];
    }
    sub_20A5A274C();
    uint64_t v12 = *(int *)(v11 + 48);
    int v13 = (_OWORD *)((char *)a1 + v12);
    int v14 = (char *)a2 + v12;
    long long v15 = *(_OWORD *)((char *)a2 + v12 + 16);
    _OWORD *v13 = *(_OWORD *)((char *)a2 + v12);
    v13[1] = v15;
    long long v16 = *(_OWORD *)((char *)a2 + v12 + 48);
    v13[2] = *(_OWORD *)((char *)a2 + v12 + 32);
    v13[3] = v16;
    uint64_t v17 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
    uint64_t v18 = *(int *)(v17 + 24);
    uint64_t v19 = (char *)v13 + v18;
    uint64_t v20 = &v14[v18];
    uint64_t v21 = sub_20A8CAC10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    uint64_t v22 = *(int *)(v17 + 28);
    uint64_t v23 = *(void **)&v14[v22];
    *(void *)((char *)v13 + v22) = v23;
    id v24 = v23;
  }
  return a1;
}

void sub_20A5A274C()
{
  if (!qword_26763C1A0)
  {
    type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763C1A0);
    }
  }
}

void sub_20A5A27B8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_20A5A274C();
  uint64_t v3 = a1 + *(int *)(v2 + 48);
  uint64_t v4 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  uint64_t v5 = v3 + *(int *)(v4 + 24);
  uint64_t v6 = sub_20A8CAC10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = *(void **)(v3 + *(int *)(v4 + 28));
}

void *sub_20A5A2878(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  if (v5)
  {
    a1[2] = a2[2];
    a1[3] = v5;
    uint64_t v6 = a2[5];
    a1[4] = a2[4];
    a1[5] = v6;
    a1[6] = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v7;
    a1[6] = a2[6];
  }
  sub_20A5A274C();
  uint64_t v9 = *(int *)(v8 + 48);
  long long v10 = (_OWORD *)((char *)a1 + v9);
  uint64_t v11 = (char *)a2 + v9;
  long long v12 = *(_OWORD *)((char *)a2 + v9 + 16);
  *long long v10 = *(_OWORD *)((char *)a2 + v9);
  v10[1] = v12;
  long long v13 = *(_OWORD *)((char *)a2 + v9 + 48);
  v10[2] = *(_OWORD *)((char *)a2 + v9 + 32);
  v10[3] = v13;
  uint64_t v14 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  uint64_t v15 = *(int *)(v14 + 24);
  long long v16 = (char *)v10 + v15;
  uint64_t v17 = &v11[v15];
  uint64_t v18 = sub_20A8CAC10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = *(int *)(v14 + 28);
  uint64_t v20 = *(void **)&v11[v19];
  *(void *)((char *)v10 + v19) = v20;
  id v21 = v20;
  return a1;
}

void *sub_20A5A2998(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 2;
  uint64_t v5 = a2 + 2;
  uint64_t v6 = a2[3];
  if (a1[3])
  {
    if (v6)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A5A2B90((uint64_t)(a1 + 2));
      uint64_t v7 = a2[6];
      long long v8 = *((_OWORD *)a2 + 2);
      *uint64_t v4 = *v5;
      *((_OWORD *)a1 + 2) = v8;
      a1[6] = v7;
    }
  }
  else if (v6)
  {
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *v5;
    long long v10 = *((_OWORD *)a2 + 2);
    a1[6] = a2[6];
    *uint64_t v4 = v9;
    *((_OWORD *)a1 + 2) = v10;
  }
  sub_20A5A274C();
  uint64_t v12 = *(int *)(v11 + 48);
  long long v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (char *)a2 + v12;
  void *v13 = *(void *)((char *)a2 + v12);
  v13[1] = *(void *)((char *)a2 + v12 + 8);
  v13[2] = *(void *)((char *)a2 + v12 + 16);
  v13[3] = *(void *)((char *)a2 + v12 + 24);
  v13[4] = *(void *)((char *)a2 + v12 + 32);
  v13[5] = *(void *)((char *)a2 + v12 + 40);
  v13[6] = *(void *)((char *)a2 + v12 + 48);
  v13[7] = *(void *)((char *)a2 + v12 + 56);
  uint64_t v15 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  uint64_t v16 = *(int *)(v15 + 24);
  uint64_t v17 = (char *)v13 + v16;
  uint64_t v18 = &v14[v16];
  uint64_t v19 = sub_20A8CAC10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  uint64_t v20 = *(int *)(v15 + 28);
  id v21 = *(void **)&v14[v20];
  uint64_t v22 = *(void **)((char *)v13 + v20);
  *(void *)((char *)v13 + v20) = v21;
  id v23 = v21;

  return a1;
}

uint64_t sub_20A5A2B90(uint64_t a1)
{
  return a1;
}

uint64_t sub_20A5A2BE4(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  sub_20A5A274C();
  uint64_t v6 = *(int *)(v5 + 48);
  uint64_t v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  long long v9 = *(_OWORD *)(a2 + v6 + 16);
  *uint64_t v7 = *(_OWORD *)(a2 + v6);
  v7[1] = v9;
  long long v10 = *(_OWORD *)(a2 + v6 + 48);
  v7[2] = *(_OWORD *)(a2 + v6 + 32);
  v7[3] = v10;
  uint64_t v11 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  uint64_t v12 = *(int *)(v11 + 24);
  long long v13 = (char *)v7 + v12;
  uint64_t v14 = v8 + v12;
  uint64_t v15 = sub_20A8CAC10();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  *(void *)((char *)v7 + *(int *)(v11 + 28)) = *(void *)(v8 + *(int *)(v11 + 28));
  return a1;
}

uint64_t sub_20A5A2CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 24)) {
    goto LABEL_5;
  }
  uint64_t v5 = *(void *)(a2 + 24);
  if (!v5)
  {
    sub_20A5A2B90(a1 + 16);
LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v7;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    goto LABEL_6;
  }
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
LABEL_6:
  sub_20A5A274C();
  uint64_t v9 = *(int *)(v8 + 48);
  long long v10 = (_OWORD *)(a1 + v9);
  uint64_t v11 = a2 + v9;
  long long v12 = *(_OWORD *)(a2 + v9 + 16);
  *long long v10 = *(_OWORD *)(a2 + v9);
  v10[1] = v12;
  long long v13 = *(_OWORD *)(a2 + v9 + 48);
  v10[2] = *(_OWORD *)(a2 + v9 + 32);
  v10[3] = v13;
  uint64_t v14 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  uint64_t v15 = *(int *)(v14 + 24);
  uint64_t v16 = (char *)v10 + v15;
  uint64_t v17 = v11 + v15;
  uint64_t v18 = sub_20A8CAC10();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = *(int *)(v14 + 28);
  uint64_t v20 = *(void **)((char *)v10 + v19);
  *(void *)((char *)v10 + v19) = *(void *)(v11 + v19);

  return a1;
}

uint64_t sub_20A5A2DEC(uint64_t a1, uint64_t a2)
{
  sub_20A5A274C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A5A2E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A5A274C();
  long long v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, a2, a3, v6);
}

uint64_t type metadata accessor for StockSearchLayoutSectionDescriptor()
{
  uint64_t result = qword_26AC7CC58;
  if (!qword_26AC7CC58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A5A2F20(uint64_t a1)
{
  uint64_t result = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = v4;
  }
  return result;
}

uint64_t sub_20A5A2FDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  MEMORY[0x270FA5388](v2);
  int v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  long long v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5A33D4(v1, (uint64_t)v7);
  uint64_t v8 = *((void *)v7 + 2);
  uint64_t v9 = *((void *)v7 + 3);
  swift_bridgeObjectRelease();
  sub_20A5A3438(v8, v9);
  sub_20A5A274C();
  sub_20A5A3488((uint64_t)&v7[*(int *)(v10 + 48)], (uint64_t)v4);
  sub_20A5A34EC();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_20A8D3DC0;
  *(void *)(v11 + 56) = v2;
  *(void *)(v11 + 64) = sub_20A5A3544(&qword_26763C1A8, (void (*)(uint64_t))type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v11 + 32));
  sub_20A5A3488((uint64_t)v4, (uint64_t)boxed_opaque_existential_1);
  return v11;
}

uint64_t sub_20A5A316C(uint64_t a1)
{
  uint64_t v2 = sub_20A5A3544(&qword_26763C1B0, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutSectionDescriptor);

  return MEMORY[0x270F7C578](a1, v2);
}

double sub_20A5A31D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  MEMORY[0x270FA5388](v2);
  int v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  long long v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5A33D4(v1, (uint64_t)v7);
  uint64_t v8 = *((void *)v7 + 2);
  uint64_t v9 = *((void *)v7 + 3);
  swift_bridgeObjectRelease();
  sub_20A5A3438(v8, v9);
  sub_20A5A274C();
  sub_20A5A3488((uint64_t)&v7[*(int *)(v10 + 48)], (uint64_t)v4);
  sub_20A5A3544(&qword_26763AC18, (void (*)(uint64_t))type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes);
  sub_20A8CACE0();
  double v12 = v11;
  sub_20A5A358C((uint64_t)v4);
  return v12;
}

uint64_t sub_20A5A3344()
{
  return sub_20A5A3544(&qword_26AC7CC48, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutSectionDescriptor);
}

uint64_t sub_20A5A338C()
{
  return sub_20A5A3544(&qword_26AC7CC50, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutSectionDescriptor);
}

uint64_t sub_20A5A33D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockSearchLayoutSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A5A3438(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A5A3488(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20A5A34EC()
{
  if (!qword_26AC7FFF8)
  {
    sub_20A5122A8();
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FFF8);
    }
  }
}

uint64_t sub_20A5A3544(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A5A358C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for Localized()
{
  return self;
}

uint64_t static Settings.Welcome.Version.effectiveLatestCompleted.getter()
{
  sub_20A8C4250();
  sub_20A8C4230();
  if (qword_26AC67678 != -1) {
    swift_once();
  }
  sub_20A8C4220();
  swift_release();
  uint64_t result = v1;
  if (v1 < 0)
  {
    sub_20A8C4230();
    if (qword_26AC69190 != -1) {
      swift_once();
    }
    sub_20A8C4220();
    swift_release();
    return v1;
  }
  return result;
}

uint64_t static Settings.Welcome.Version.current.getter()
{
  return 2;
}

uint64_t static Settings.Welcome.Version.minimumCompletedForTracking.getter()
{
  return 1;
}

uint64_t sub_20A5A3700(uint64_t a1)
{
  return sub_20A5A3774(a1, 0, 0xD000000000000027, 0x800000020A902C50, &qword_26AC69188);
}

uint64_t static Settings.Welcome.Version.latestCompleted.getter()
{
  return sub_20A454F34(&qword_26AC69190);
}

uint64_t sub_20A5A374C(uint64_t a1)
{
  return sub_20A5A3774(a1, -1, 0xD00000000000002DLL, 0x800000020A902C80, &qword_26AC69198);
}

uint64_t sub_20A5A3774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_20A8C4260();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A57E3F0(0, (unint64_t *)&qword_26AC69300);
  v12[2] = a2;
  v12[3] = a2;
  v12[1] = 0x7FFFFFFFFFFFFFFFLL;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7D100], v7);
  uint64_t result = sub_20A8C42C0();
  *a5 = result;
  return result;
}

uint64_t static Settings.Welcome.Version.debugLatestCompleted.getter()
{
  return sub_20A454F34(&qword_26AC67678);
}

uint64_t sub_20A5A38E0(uint64_t a1)
{
  return sub_20A5A395C(1.6, a1, 0xD000000000000035, 0x800000020A902BD0, &qword_26763C1B8);
}

uint64_t static Settings.Welcome.minimumDelayOnPage1.getter()
{
  return sub_20A454F34(&qword_267639960);
}

uint64_t sub_20A5A3930(uint64_t a1)
{
  return sub_20A5A395C(0.65, a1, 0xD00000000000003ELL, 0x800000020A902C10, &qword_26763C1C0);
}

uint64_t sub_20A5A395C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_20A8C4260();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8C4270();
  double v12 = MEMORY[0x270FA5388](v11);
  (*(void (**)(char *, void, double))(v14 + 104))((char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F7D110], v12);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7D100], v7);
  *(double *)&v16[1] = a1;
  sub_20A57E3F0(0, &qword_26763C370);
  swift_allocObject();
  uint64_t result = sub_20A8C42E0();
  *a5 = result;
  return result;
}

uint64_t static Settings.Welcome.Animations.WelcomeToStocksScaleUp.initialScale.getter()
{
  return sub_20A454F34(&qword_267639968);
}

uint64_t sub_20A5A3B5C(uint64_t a1)
{
  return sub_20A5A395C(1.0, a1, 0xD000000000000035, 0x800000020A902BD0, &qword_26763C1C8);
}

uint64_t static Settings.Welcome.Animations.WelcomeToStocksScaleUp.mass.getter()
{
  return sub_20A454F34(&qword_267639970);
}

uint64_t sub_20A5A3BA8(uint64_t a1)
{
  return sub_20A5A395C(50.0, a1, 0xD00000000000003ALL, 0x800000020A902B90, &qword_26763C1D0);
}

uint64_t static Settings.Welcome.Animations.WelcomeToStocksScaleUp.stiffness.getter()
{
  return sub_20A454F34(&qword_267639978);
}

uint64_t sub_20A5A3BF8(uint64_t a1)
{
  return sub_20A5A395C(14.0, a1, 0xD000000000000038, 0x800000020A902B50, &qword_26763C1D8);
}

uint64_t static Settings.Welcome.Animations.WelcomeToStocksScaleUp.damping.getter()
{
  return sub_20A454F34(&qword_267639980);
}

uint64_t sub_20A5A3C44(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639970);
}

uint64_t sub_20A5A3C68(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639978);
}

uint64_t sub_20A5A3C8C(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639980);
}

void sub_20A5A3CB0()
{
  sub_20A5A5650();

  JUMPOUT(0x2105216C0);
}

uint64_t sub_20A5A3CEC(uint64_t a1)
{
  unint64_t v2 = sub_20A5A5650();

  return MEMORY[0x270F7B598](a1, v2);
}

uint64_t sub_20A5A3D28(uint64_t a1)
{
  return sub_20A5A395C(0.5, a1, 0xD00000000000003CLL, 0x800000020A902B10, &qword_26763C1E0);
}

uint64_t static Settings.Welcome.Animations.WelcomeToStocksFadeIn.duration.getter()
{
  return sub_20A454F34(&qword_267639988);
}

uint64_t sub_20A5A3D74(uint64_t a1)
{
  return sub_20A5A395C(0.25, a1, 0xD000000000000041, 0x800000020A902AC0, &qword_26763C1E8);
}

uint64_t static Settings.Welcome.Animations.WelcomeToStocksFadeIn.controlOneX.getter()
{
  return sub_20A454F34(&qword_267639990);
}

uint64_t sub_20A5A3DC0(uint64_t a1)
{
  return sub_20A5A395C(0.1, a1, 0xD000000000000041, 0x800000020A902A70, &qword_26763C1F0);
}

uint64_t static Settings.Welcome.Animations.WelcomeToStocksFadeIn.controlOneY.getter()
{
  return sub_20A454F34(&qword_267639998);
}

uint64_t sub_20A5A3E10(uint64_t a1)
{
  return sub_20A5A395C(0.75, a1, 0xD000000000000041, 0x800000020A902A20, &qword_26763C1F8);
}

uint64_t static Settings.Welcome.Animations.WelcomeToStocksFadeIn.controlTwoX.getter()
{
  return sub_20A454F34(&qword_2676399A0);
}

uint64_t sub_20A5A3E5C(uint64_t a1)
{
  return sub_20A5A395C(1.0, a1, 0xD000000000000041, 0x800000020A9029D0, &qword_26763C200);
}

uint64_t static Settings.Welcome.Animations.WelcomeToStocksFadeIn.controlTwoY.getter()
{
  return sub_20A454F34(&qword_2676399A8);
}

uint64_t sub_20A5A3EA8(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639988);
}

uint64_t sub_20A5A3ECC(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639990);
}

uint64_t sub_20A5A3EF0(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639998);
}

uint64_t sub_20A5A3F14(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_2676399A0);
}

uint64_t sub_20A5A3F38(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_2676399A8);
}

uint64_t sub_20A5A3F5C(uint64_t a1)
{
  unint64_t v2 = sub_20A5A55FC();

  return MEMORY[0x270F7B4B8](a1, v2);
}

uint64_t sub_20A5A3F98(uint64_t a1)
{
  unint64_t v2 = sub_20A5A55FC();

  return MEMORY[0x270F7B4C0](a1, v2);
}

uint64_t sub_20A5A3FD4(uint64_t a1)
{
  return sub_20A5A395C(0.5, a1, 0xD00000000000003ALL, 0x800000020A902990, &qword_26763C208);
}

uint64_t static Settings.Welcome.Animations.ActivityIndicatorFadeIn.delay.getter()
{
  return sub_20A454F34(&qword_2676399B0);
}

uint64_t sub_20A5A4020(uint64_t a1)
{
  return sub_20A5A395C(0.25, a1, 0xD00000000000003DLL, 0x800000020A902950, &qword_26763C210);
}

uint64_t static Settings.Welcome.Animations.ActivityIndicatorFadeIn.duration.getter()
{
  return sub_20A454F34(&qword_2676399B8);
}

uint64_t sub_20A5A406C(uint64_t a1)
{
  return sub_20A5A395C(0.25, a1, 0xD000000000000042, 0x800000020A902900, &qword_26763C218);
}

uint64_t static Settings.Welcome.Animations.ActivityIndicatorFadeIn.controlOneX.getter()
{
  return sub_20A454F34(&qword_2676399C0);
}

uint64_t sub_20A5A40B8(uint64_t a1)
{
  return sub_20A5A395C(0.1, a1, 0xD000000000000042, 0x800000020A9028B0, &qword_26763C220);
}

uint64_t static Settings.Welcome.Animations.ActivityIndicatorFadeIn.controlOneY.getter()
{
  return sub_20A454F34(&qword_2676399C8);
}

uint64_t sub_20A5A4108(uint64_t a1)
{
  return sub_20A5A395C(0.75, a1, 0xD000000000000042, 0x800000020A902860, &qword_26763C228);
}

uint64_t static Settings.Welcome.Animations.ActivityIndicatorFadeIn.controlTwoX.getter()
{
  return sub_20A454F34(&qword_2676399D0);
}

uint64_t sub_20A5A4154(uint64_t a1)
{
  return sub_20A5A395C(1.0, a1, 0xD000000000000042, 0x800000020A902810, &qword_26763C230);
}

uint64_t static Settings.Welcome.Animations.ActivityIndicatorFadeIn.controlTwoY.getter()
{
  return sub_20A454F34(&qword_2676399D8);
}

uint64_t sub_20A5A41A0(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_2676399B8);
}

uint64_t sub_20A5A41C4(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_2676399C0);
}

uint64_t sub_20A5A41E8(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_2676399C8);
}

uint64_t sub_20A5A420C(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_2676399D0);
}

uint64_t sub_20A5A4230(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_2676399D8);
}

uint64_t sub_20A5A4254(uint64_t a1)
{
  unint64_t v2 = sub_20A5A55A8();

  return MEMORY[0x270F7B4B8](a1, v2);
}

uint64_t sub_20A5A4290(uint64_t a1)
{
  unint64_t v2 = sub_20A5A55A8();

  return MEMORY[0x270F7B4C0](a1, v2);
}

uint64_t sub_20A5A42CC(uint64_t a1)
{
  return sub_20A5A395C(0.08, a1, 0xD000000000000033, 0x800000020A9027D0, &qword_26763C238);
}

uint64_t static Settings.Welcome.Animations.SpinnerFadeOut.duration.getter()
{
  return sub_20A454F34(&qword_2676399E0);
}

uint64_t sub_20A5A431C(uint64_t a1)
{
  return sub_20A5A395C(0.25, a1, 0xD000000000000038, 0x800000020A902790, &qword_26763C240);
}

uint64_t static Settings.Welcome.Animations.SpinnerFadeOut.controlOneX.getter()
{
  return sub_20A454F34(&qword_2676399E8);
}

uint64_t sub_20A5A4368(uint64_t a1)
{
  return sub_20A5A395C(0.1, a1, 0xD000000000000038, 0x800000020A902750, &qword_26763C248);
}

uint64_t static Settings.Welcome.Animations.SpinnerFadeOut.controlOneY.getter()
{
  return sub_20A454F34(&qword_2676399F0);
}

uint64_t sub_20A5A43B8(uint64_t a1)
{
  return sub_20A5A395C(0.75, a1, 0xD000000000000038, 0x800000020A902710, &qword_26763C250);
}

uint64_t static Settings.Welcome.Animations.SpinnerFadeOut.controlTwoX.getter()
{
  return sub_20A454F34(&qword_2676399F8);
}

uint64_t sub_20A5A4404(uint64_t a1)
{
  return sub_20A5A395C(1.0, a1, 0xD000000000000038, 0x800000020A9026D0, &qword_26763C258);
}

uint64_t static Settings.Welcome.Animations.SpinnerFadeOut.controlTwoY.getter()
{
  return sub_20A454F34(&qword_267639A00);
}

uint64_t sub_20A5A4450(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_2676399E0);
}

uint64_t sub_20A5A4474(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_2676399E8);
}

uint64_t sub_20A5A4498(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_2676399F0);
}

uint64_t sub_20A5A44BC(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_2676399F8);
}

uint64_t sub_20A5A44E0(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639A00);
}

uint64_t sub_20A5A4504(uint64_t a1)
{
  unint64_t v2 = sub_20A5A5554();

  return MEMORY[0x270F7B4B8](a1, v2);
}

uint64_t sub_20A5A4540(uint64_t a1)
{
  unint64_t v2 = sub_20A5A5554();

  return MEMORY[0x270F7B4C0](a1, v2);
}

uint64_t sub_20A5A457C(uint64_t a1)
{
  return sub_20A5A395C(0.2, a1, 0xD000000000000034, 0x800000020A902690, &qword_26763C260);
}

uint64_t static Settings.Welcome.Animations.AppIconFadeOut.duration.getter()
{
  return sub_20A454F34(&qword_267639A08);
}

uint64_t sub_20A5A45CC(uint64_t a1)
{
  return sub_20A5A395C(0.25, a1, 0xD000000000000039, 0x800000020A902650, &qword_26763C268);
}

uint64_t static Settings.Welcome.Animations.AppIconFadeOut.controlOneX.getter()
{
  return sub_20A454F34(&qword_267639A10);
}

uint64_t sub_20A5A4618(uint64_t a1)
{
  return sub_20A5A395C(0.1, a1, 0xD000000000000039, 0x800000020A902610, &qword_26763C270);
}

uint64_t static Settings.Welcome.Animations.AppIconFadeOut.controlOneY.getter()
{
  return sub_20A454F34(&qword_267639A18);
}

uint64_t sub_20A5A4668(uint64_t a1)
{
  return sub_20A5A395C(0.75, a1, 0xD000000000000039, 0x800000020A9025D0, &qword_26763C278);
}

uint64_t static Settings.Welcome.Animations.AppIconFadeOut.controlTwoX.getter()
{
  return sub_20A454F34(&qword_267639A20);
}

uint64_t sub_20A5A46B4(uint64_t a1)
{
  return sub_20A5A395C(1.0, a1, 0xD000000000000039, 0x800000020A902590, &qword_26763C280);
}

uint64_t static Settings.Welcome.Animations.AppIconFadeOut.controlTwoY.getter()
{
  return sub_20A454F34(&qword_267639A28);
}

uint64_t sub_20A5A4700(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639A08);
}

uint64_t sub_20A5A4724(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639A10);
}

uint64_t sub_20A5A4748(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639A18);
}

uint64_t sub_20A5A476C(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639A20);
}

uint64_t sub_20A5A4790(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639A28);
}

uint64_t sub_20A5A47B4(uint64_t a1)
{
  unint64_t v2 = sub_20A5A5500();

  return MEMORY[0x270F7B4B8](a1, v2);
}

uint64_t sub_20A5A47F0(uint64_t a1)
{
  unint64_t v2 = sub_20A5A5500();

  return MEMORY[0x270F7B4C0](a1, v2);
}

uint64_t sub_20A5A482C(uint64_t a1)
{
  return sub_20A5A395C(0.04, a1, 0xD00000000000002CLL, 0x800000020A902560, &qword_26763C288);
}

uint64_t static Settings.Welcome.Animations.Page2Moves.delay.getter()
{
  return sub_20A454F34(&qword_267639A30);
}

uint64_t sub_20A5A487C(uint64_t a1)
{
  return sub_20A5A395C(1.0, a1, 0xD00000000000002BLL, 0x800000020A902530, &qword_26763C290);
}

uint64_t static Settings.Welcome.Animations.Page2Moves.mass.getter()
{
  return sub_20A454F34(&qword_267639A38);
}

uint64_t sub_20A5A48C8(uint64_t a1)
{
  return sub_20A5A395C(90.0, a1, 0xD000000000000030, 0x800000020A9024F0, &qword_26763C298);
}

uint64_t static Settings.Welcome.Animations.Page2Moves.stiffness.getter()
{
  return sub_20A454F34(&qword_267639A40);
}

uint64_t sub_20A5A491C(uint64_t a1)
{
  return sub_20A5A395C(18.0, a1, 0xD00000000000002ELL, 0x800000020A9024C0, &qword_26763C2A0);
}

uint64_t static Settings.Welcome.Animations.Page2Moves.damping.getter()
{
  return sub_20A454F34(&qword_267639A48);
}

uint64_t sub_20A5A4968(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639A38);
}

uint64_t sub_20A5A498C(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639A40);
}

uint64_t sub_20A5A49B0(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639A48);
}

void sub_20A5A49D4()
{
  sub_20A5A54AC();

  JUMPOUT(0x2105216C0);
}

uint64_t sub_20A5A4A10(uint64_t a1)
{
  unint64_t v2 = sub_20A5A54AC();

  return MEMORY[0x270F7B598](a1, v2);
}

uint64_t sub_20A5A4A4C(uint64_t a1)
{
  return sub_20A5A395C(0.16, a1, 0xD000000000000032, 0x800000020A902480, &qword_26763C2A8);
}

uint64_t static Settings.Welcome.Animations.Page2FadeIns.duration.getter()
{
  return sub_20A454F34(&qword_267639A50);
}

uint64_t sub_20A5A4A9C(uint64_t a1)
{
  return sub_20A5A395C(0.25, a1, 0xD000000000000037, 0x800000020A902440, &qword_26763C2B0);
}

uint64_t static Settings.Welcome.Animations.Page2FadeIns.controlOneX.getter()
{
  return sub_20A454F34(&qword_267639A58);
}

uint64_t sub_20A5A4AE8(uint64_t a1)
{
  return sub_20A5A395C(0.1, a1, 0xD000000000000037, 0x800000020A902400, &qword_26763C2B8);
}

uint64_t static Settings.Welcome.Animations.Page2FadeIns.controlOneY.getter()
{
  return sub_20A454F34(&qword_267639A60);
}

uint64_t sub_20A5A4B38(uint64_t a1)
{
  return sub_20A5A395C(0.75, a1, 0xD000000000000037, 0x800000020A9023C0, &qword_26763C2C0);
}

uint64_t static Settings.Welcome.Animations.Page2FadeIns.controlTwoX.getter()
{
  return sub_20A454F34(&qword_267639A68);
}

uint64_t sub_20A5A4B84(uint64_t a1)
{
  return sub_20A5A395C(1.0, a1, 0xD000000000000037, 0x800000020A902380, &qword_26763C2C8);
}

uint64_t static Settings.Welcome.Animations.Page2FadeIns.controlTwoY.getter()
{
  return sub_20A454F34(&qword_267639A70);
}

uint64_t sub_20A5A4BD0(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639A50);
}

uint64_t sub_20A5A4BF4(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639A58);
}

uint64_t sub_20A5A4C18(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639A60);
}

uint64_t sub_20A5A4C3C(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639A68);
}

uint64_t sub_20A5A4C60(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639A70);
}

uint64_t sub_20A5A4C84(uint64_t a1)
{
  unint64_t v2 = sub_20A5A5458();

  return MEMORY[0x270F7B4B8](a1, v2);
}

uint64_t sub_20A5A4CC0(uint64_t a1)
{
  unint64_t v2 = sub_20A5A5458();

  return MEMORY[0x270F7B4C0](a1, v2);
}

uint64_t sub_20A5A4CFC(uint64_t a1)
{
  return sub_20A5A395C(0.2, a1, 0xD00000000000002FLL, 0x800000020A902350, &qword_26763C2D0);
}

uint64_t static Settings.Welcome.Animations.DismissFade.duration.getter()
{
  return sub_20A454F34(&qword_267639A78);
}

uint64_t sub_20A5A4D4C(uint64_t a1)
{
  return sub_20A5A395C(0.25, a1, 0xD000000000000034, 0x800000020A902310, &qword_26763C2D8);
}

uint64_t static Settings.Welcome.Animations.DismissFade.controlOneX.getter()
{
  return sub_20A454F34(&qword_267639A80);
}

uint64_t sub_20A5A4D98(uint64_t a1)
{
  return sub_20A5A395C(0.1, a1, 0xD000000000000034, 0x800000020A9022D0, &qword_26763C2E0);
}

uint64_t static Settings.Welcome.Animations.DismissFade.controlOneY.getter()
{
  return sub_20A454F34(&qword_267639A88);
}

uint64_t sub_20A5A4DE8(uint64_t a1)
{
  return sub_20A5A395C(0.75, a1, 0xD000000000000034, 0x800000020A902290, &qword_26763C2E8);
}

uint64_t static Settings.Welcome.Animations.DismissFade.controlTwoX.getter()
{
  return sub_20A454F34(&qword_267639A90);
}

uint64_t sub_20A5A4E34(uint64_t a1)
{
  return sub_20A5A395C(1.0, a1, 0xD000000000000034, 0x800000020A902250, &qword_26763C2F0);
}

uint64_t static Settings.Welcome.Animations.DismissFade.controlTwoY.getter()
{
  return sub_20A454F34(&qword_267639A98);
}

uint64_t sub_20A5A4E80(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639A78);
}

uint64_t sub_20A5A4EA4(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639A80);
}

uint64_t sub_20A5A4EC8(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639A88);
}

uint64_t sub_20A5A4EEC(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639A90);
}

uint64_t sub_20A5A4F10(uint64_t a1, uint64_t a2)
{
  return sub_20A5A4F34(a1, a2, &qword_267639A98);
}

uint64_t sub_20A5A4F34(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_20A5A4F84(uint64_t a1)
{
  unint64_t v2 = sub_20A5A5404();

  return MEMORY[0x270F7B4B8](a1, v2);
}

uint64_t sub_20A5A4FC0(uint64_t a1)
{
  unint64_t v2 = sub_20A5A5404();

  return MEMORY[0x270F7B4C0](a1, v2);
}

BOOL _s11TeaSettings0B0C8StocksUIE7WelcomeV7VersionV14isBrandNewUserSbvgZ_0()
{
  sub_20A8C4250();
  sub_20A8C4230();
  if (qword_26AC67678 != -1) {
    swift_once();
  }
  sub_20A8C4220();
  swift_release();
  uint64_t v0 = v2;
  if (v2 < 0)
  {
    sub_20A8C4230();
    if (qword_26AC69190 != -1) {
      swift_once();
    }
    sub_20A8C4220();
    swift_release();
    uint64_t v0 = v2;
  }
  return v0 == 0;
}

unint64_t sub_20A5A50EC()
{
  unint64_t result = qword_26763C2F8;
  if (!qword_26763C2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C2F8);
  }
  return result;
}

unint64_t sub_20A5A5144()
{
  unint64_t result = qword_26763C300;
  if (!qword_26763C300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C300);
  }
  return result;
}

unint64_t sub_20A5A519C()
{
  unint64_t result = qword_26763C308;
  if (!qword_26763C308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C308);
  }
  return result;
}

unint64_t sub_20A5A51F4()
{
  unint64_t result = qword_26763C310;
  if (!qword_26763C310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C310);
  }
  return result;
}

unint64_t sub_20A5A524C()
{
  unint64_t result = qword_26763C318;
  if (!qword_26763C318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C318);
  }
  return result;
}

unint64_t sub_20A5A52A4()
{
  unint64_t result = qword_26763C320;
  if (!qword_26763C320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C320);
  }
  return result;
}

unint64_t sub_20A5A52FC()
{
  unint64_t result = qword_26763C328;
  if (!qword_26763C328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C328);
  }
  return result;
}

ValueMetadata *type metadata accessor for Settings.Welcome()
{
  return &type metadata for Settings.Welcome;
}

ValueMetadata *type metadata accessor for Settings.Welcome.Version()
{
  return &type metadata for Settings.Welcome.Version;
}

ValueMetadata *type metadata accessor for Settings.Welcome.Animations()
{
  return &type metadata for Settings.Welcome.Animations;
}

ValueMetadata *type metadata accessor for Settings.Welcome.Animations.WelcomeToStocksScaleUp()
{
  return &type metadata for Settings.Welcome.Animations.WelcomeToStocksScaleUp;
}

ValueMetadata *type metadata accessor for Settings.Welcome.Animations.WelcomeToStocksFadeIn()
{
  return &type metadata for Settings.Welcome.Animations.WelcomeToStocksFadeIn;
}

ValueMetadata *type metadata accessor for Settings.Welcome.Animations.ActivityIndicatorFadeIn()
{
  return &type metadata for Settings.Welcome.Animations.ActivityIndicatorFadeIn;
}

ValueMetadata *type metadata accessor for Settings.Welcome.Animations.SpinnerFadeOut()
{
  return &type metadata for Settings.Welcome.Animations.SpinnerFadeOut;
}

ValueMetadata *type metadata accessor for Settings.Welcome.Animations.AppIconFadeOut()
{
  return &type metadata for Settings.Welcome.Animations.AppIconFadeOut;
}

ValueMetadata *type metadata accessor for Settings.Welcome.Animations.Page2Moves()
{
  return &type metadata for Settings.Welcome.Animations.Page2Moves;
}

ValueMetadata *type metadata accessor for Settings.Welcome.Animations.Page2FadeIns()
{
  return &type metadata for Settings.Welcome.Animations.Page2FadeIns;
}

ValueMetadata *type metadata accessor for Settings.Welcome.Animations.DismissFade()
{
  return &type metadata for Settings.Welcome.Animations.DismissFade;
}

unint64_t sub_20A5A5404()
{
  unint64_t result = qword_26763C330;
  if (!qword_26763C330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C330);
  }
  return result;
}

unint64_t sub_20A5A5458()
{
  unint64_t result = qword_26763C338;
  if (!qword_26763C338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C338);
  }
  return result;
}

unint64_t sub_20A5A54AC()
{
  unint64_t result = qword_26763C340;
  if (!qword_26763C340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C340);
  }
  return result;
}

unint64_t sub_20A5A5500()
{
  unint64_t result = qword_26763C348;
  if (!qword_26763C348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C348);
  }
  return result;
}

unint64_t sub_20A5A5554()
{
  unint64_t result = qword_26763C350;
  if (!qword_26763C350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C350);
  }
  return result;
}

unint64_t sub_20A5A55A8()
{
  unint64_t result = qword_26763C358;
  if (!qword_26763C358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C358);
  }
  return result;
}

unint64_t sub_20A5A55FC()
{
  unint64_t result = qword_26763C360;
  if (!qword_26763C360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C360);
  }
  return result;
}

unint64_t sub_20A5A5650()
{
  unint64_t result = qword_26763C368;
  if (!qword_26763C368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C368);
  }
  return result;
}

uint64_t sub_20A5A56A8(uint64_t a1)
{
  return sub_20A5A5810(a1, 0xD00000000000001DLL, 0x800000020A902D60, &qword_26AC9E9D8);
}

uint64_t sub_20A5A56CC()
{
  sub_20A5A8AB8(0, (unint64_t *)&qword_26AC6AB40, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F7E060]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v6 - v3;
  sub_20A5A88D4();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F7E058], v1);
  uint64_t result = sub_20A8CB5C0();
  qword_26AC9EC38 = result;
  return result;
}

uint64_t sub_20A5A57EC(uint64_t a1)
{
  return sub_20A5A5810(a1, 0xD000000000000020, 0x800000020A902D30, &qword_26AC9E9E0);
}

uint64_t sub_20A5A5810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = MEMORY[0x263F8EE60] + 8;
  sub_20A5A8AB8(0, (unint64_t *)&qword_26AC6AB40, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F7E060]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v12 - v9;
  sub_20A5A8AB8(0, (unint64_t *)&unk_26AC6AB78, v5, MEMORY[0x263F7E068]);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7E058], v7);
  uint64_t result = sub_20A8CB5C0();
  *a4 = result;
  return result;
}

uint64_t sub_20A5A595C(uint64_t a1)
{
  return sub_20A5A5810(a1, 0xD00000000000001ELL, 0x800000020A902D80, &qword_26AC9E8D0);
}

uint64_t sub_20A5A5980()
{
  uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AFD8];
  sub_20A5A8870(0, (unint64_t *)&unk_26AC6AB30, MEMORY[0x263F7AFD8], MEMORY[0x263F7E060]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v7 - v4;
  sub_20A5A8870(0, &qword_26AC6AB68, v0, MEMORY[0x263F7E068]);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F7E058], v2);
  uint64_t result = sub_20A8CB5C0();
  qword_26AC9E9E8 = result;
  return result;
}

uint64_t sub_20A5A5ACC(uint64_t a1)
{
  return sub_20A5A5AF0(a1, 0xD000000000000023, 0x800000020A902E00, &qword_26AC9EC00);
}

uint64_t sub_20A5A5AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_20A5A8870(0, &qword_26AC81100, type metadata accessor for StocksActivity, MEMORY[0x263F7E060]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  sub_20A5A8870(0, &qword_26AC81108, type metadata accessor for StocksActivity, MEMORY[0x263F7E068]);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F7E058], v6);
  uint64_t result = sub_20A8CB5C0();
  *a4 = result;
  return result;
}

uint64_t sub_20A5A5C44(uint64_t a1)
{
  return sub_20A5A5AF0(a1, 0xD000000000000020, 0x800000020A902F20, &qword_26AC9EBF0);
}

uint64_t sub_20A5A5C68(uint64_t a1)
{
  return sub_20A5A5810(a1, 0xD000000000000021, 0x800000020A902DD0, &qword_26AC9EBF8);
}

uint64_t sub_20A5A5C8C(uint64_t a1, void *a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10)
{
  uint64_t v57 = a7;
  uint64_t v58 = a8;
  uint64_t v55 = a4;
  uint64_t v53 = a2;
  uint64_t v61 = a1;
  uint64_t v50 = sub_20A8C8F40();
  uint64_t v49 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v51 = (char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for StocksActivity(0);
  uint64_t v59 = *(void *)(v15 - 8);
  uint64_t v60 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v47 = (uint64_t)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v48 = (uint64_t)v45 - v18;
  sub_20A5A8870(0, (unint64_t *)&qword_26AC6C780, type metadata accessor for StocksActivity, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v56 = (uint64_t)v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v54 = (void *)((char *)v45 - v22);
  unint64_t v62 = a5;
  uint64_t v63 = a6;
  unint64_t v64 = a9;
  uint64_t v65 = a10;
  uint64_t v23 = sub_20A8C8610();
  uint64_t v52 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  char v25 = (char *)v45 - v24;
  id v26 = objc_msgSend(self, sel_currentDevice);
  id v27 = objc_msgSend(v26, sel_userInterfaceIdiom);

  if (!v27) {
    return 0;
  }
  v45[1] = v10;
  unint64_t v62 = a3;
  uint64_t v28 = v55;
  uint64_t v63 = v55;
  unint64_t v64 = a5;
  uint64_t v65 = a6;
  uint64_t v46 = a6;
  uint64_t v30 = v57;
  uint64_t v29 = v58;
  uint64_t v66 = v57;
  uint64_t v67 = v58;
  unint64_t v68 = a9;
  uint64_t v69 = a10;
  sub_20A8C7E50();
  uint64_t v31 = sub_20A8C7E10();
  uint64_t v53 = v45;
  MEMORY[0x270FA5388](v31);
  v45[-8] = a3;
  v45[-7] = v28;
  uint64_t v32 = v46;
  v45[-6] = a5;
  v45[-5] = v32;
  v45[-4] = v30;
  v45[-3] = v29;
  unint64_t v43 = a9;
  uint64_t v44 = a10;
  sub_20A5A8AB8(0, (unint64_t *)&qword_26AC7F800, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  swift_getWitnessTable();
  sub_20A5A8B04();
  uint64_t v33 = sub_20A8CE530();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v25, v23);
  uint64_t v34 = v54;
  sub_20A5A67A0(v61, v33, 2, v54);
  swift_bridgeObjectRelease();
  uint64_t v35 = v56;
  sub_20A5A8B80((uint64_t)v34, v56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v35, 1, v60) == 1)
  {
    uint64_t v36 = MEMORY[0x263F8D8F0];
    sub_20A5A8CE4((uint64_t)v34, (uint64_t)&qword_26AC6C780, (uint64_t)type metadata accessor for StocksActivity, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A5A8870);
    sub_20A5A8CE4(v35, (uint64_t)&qword_26AC6C780, (uint64_t)type metadata accessor for StocksActivity, v36, (uint64_t (*)(void))sub_20A5A8870);
    return 0;
  }
  uint64_t v38 = v48;
  sub_20A491064(v35, v48);
  if (qword_26AC81128 != -1) {
    swift_once();
  }
  sub_20A5A7D60(v38, v47, type metadata accessor for StocksActivity);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v40 = self;
  swift_retain();
  id v41 = objc_msgSend(v40, sel_bundleForClass_, ObjCClassFromMetadata);
  unint64_t v43 = 0x800000020A902E50;
  sub_20A8C2370();

  sub_20A8CB580();
  sub_20A8CB570();
  (*(void (**)(char *, void, uint64_t))(v49 + 104))(v51, *MEMORY[0x263F7D600], v50);
  swift_allocObject();
  uint64_t v37 = sub_20A8C86B0();
  sub_20A5A7DC8(v38, type metadata accessor for StocksActivity);
  sub_20A5A8CE4((uint64_t)v34, (uint64_t)&qword_26AC6C780, (uint64_t)type metadata accessor for StocksActivity, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A5A8870);
  return v37;
}

uint64_t sub_20A5A6384@<X0>(uint64_t *a1@<X8>)
{
  sub_20A8C9870();
  sub_20A5A8AB8(0, (unint64_t *)&qword_26AC7F800, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  swift_getWitnessTable();
  sub_20A5A8B04();
  uint64_t result = sub_20A8CE530();
  *a1 = result;
  return result;
}

uint64_t sub_20A5A6478@<X0>(void *a1@<X8>)
{
  uint64_t v32 = sub_20A8C5920();
  uint64_t v3 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  sub_20A8C9160();
  sub_20A8C9150();
  sub_20A43F7E0(0, &qword_26763C3B0);
  if (swift_dynamicCast())
  {
    sub_20A42BEBC(v29, (uint64_t)v31);
    __swift_project_boxed_opaque_existential_1(v31, v31[3]);
    uint64_t v7 = sub_20A8C5060();
    int64_t v8 = *(void *)(v7 + 16);
    if (v8)
    {
      uint64_t v24 = a1;
      uint64_t v25 = v1;
      *(void *)&v29[0] = MEMORY[0x263F8EE78];
      sub_20A68C494(0, v8, 0);
      uint64_t v9 = v3 + 16;
      uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
      uint64_t v11 = *(unsigned __int8 *)(v3 + 80);
      uint64_t v23 = v7;
      uint64_t v12 = v7 + ((v11 + 32) & ~v11);
      uint64_t v26 = *(void *)(v9 + 56);
      id v27 = v10;
      uint64_t v28 = v9;
      uint64_t v13 = (void (**)(char *, uint64_t))(v9 - 8);
      do
      {
        uint64_t v14 = v32;
        v27(v5, v12, v32);
        uint64_t v15 = sub_20A8C58E0();
        uint64_t v17 = v16;
        (*v13)(v5, v14);
        uint64_t v18 = *(void *)&v29[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_20A68C494(0, *(void *)(v18 + 16) + 1, 1);
          uint64_t v18 = *(void *)&v29[0];
        }
        unint64_t v20 = *(void *)(v18 + 16);
        unint64_t v19 = *(void *)(v18 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_20A68C494(v19 > 1, v20 + 1, 1);
          uint64_t v18 = *(void *)&v29[0];
        }
        *(void *)(v18 + 16) = v20 + 1;
        uint64_t v21 = v18 + 16 * v20;
        *(void *)(v21 + 32) = v15;
        *(void *)(v21 + 40) = v17;
        v12 += v26;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
      a1 = v24;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = MEMORY[0x263F8EE78];
    }
    *a1 = v18;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  }
  else
  {
    uint64_t v30 = 0;
    memset(v29, 0, sizeof(v29));
    uint64_t result = sub_20A5A8CE4((uint64_t)v29, (uint64_t)&unk_26763C3B8, (uint64_t)&qword_26763C3B0, MEMORY[0x263F58BF0], (uint64_t (*)(void))sub_20A491224);
    *a1 = MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_20A5A67A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v54 = a3;
  uint64_t v6 = sub_20A8C2530();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5A8870(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v50 - v14;
  uint64_t v16 = sub_20A8C4020();
  uint64_t v17 = *(void *)(v16 - 8);
  double v18 = MEMORY[0x270FA5388](v16);
  unint64_t v20 = (void **)((char *)v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void **, uint64_t, uint64_t, double))(v17 + 16))(v20, a1, v16, v18);
  int v21 = (*(uint64_t (**)(void **, uint64_t))(v17 + 88))(v20, v16);
  if (v21 == *MEMORY[0x263F7AF48])
  {
    (*(void (**)(void **, uint64_t))(v17 + 96))(v20, v16);
    uint64_t v22 = *v20;
    sub_20A45494C();
    uint64_t v24 = (char *)v20 + *(int *)(v23 + 48);
    id v25 = objc_msgSend(v22, sel_routeURL);
    if (!v25)
    {
      uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      uint64_t v52 = v24;
      v51(v15, 1, 1, v6);
      goto LABEL_8;
    }
    uint64_t v26 = v25;
    sub_20A8C24E0();

    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v9, v6);
    id v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v27(v15, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
    {
      uint64_t v51 = v27;
      uint64_t v52 = v24;
LABEL_8:
      sub_20A5A8CE4((uint64_t)v15, (uint64_t)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A5A8870);
      v50[2] = sub_20A8C5770();
      id v30 = objc_msgSend(v22, sel_identifier);
      uint64_t v31 = sub_20A8CE280();
      v50[0] = v32;
      v50[1] = v31;

      sub_20A5A8870(0, &qword_26763C398, (uint64_t (*)(uint64_t))sub_20A5A8C14, MEMORY[0x263F8E0F8]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_20A8D3DC0;
      swift_bridgeObjectRetain();
      id v34 = objc_msgSend(v22, sel_identifier);
      uint64_t v35 = sub_20A8CE280();
      uint64_t v37 = v36;

      *(void *)(inited + 32) = v35;
      *(void *)(inited + 40) = v37;
      *(void *)(inited + 48) = v22;
      swift_unknownObjectRetain();
      sub_20A4D0220(inited);
      v51(v12, 1, 1, v6);
      uint64_t v38 = sub_20A8C5730();
      swift_unknownObjectRelease();
      sub_20A42FC8C();
      uint64_t v40 = *(int *)(v39 + 48);
      id v41 = (char *)a4 + *(int *)(v39 + 64);
      sub_20A42FEC8();
      unint64_t v43 = (char *)a4 + *(int *)(v42 + 48);
      *a4 = v38;
      uint64_t v44 = *MEMORY[0x263F58CD8];
      uint64_t v45 = sub_20A8C5390();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 104))(v43, v44, v45);
      sub_20A8C4DA0();
      swift_storeEnumTagMultiPayload();
      *(void *)((char *)a4 + v40) = v54;
      type metadata accessor for StocksActivity.Article(0);
      *(_OWORD *)id v41 = 0u;
      *((_OWORD *)v41 + 1) = 0u;
      *((void *)v41 + 4) = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = type metadata accessor for StocksActivity(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(a4, 0, 1, v46);
      uint64_t v47 = sub_20A8C33A0();
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v47 - 8) + 8))(v52, v47);
    }
    swift_unknownObjectRelease();
    sub_20A5A8CE4((uint64_t)v15, (uint64_t)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A5A8870);
    uint64_t v48 = type metadata accessor for StocksActivity(0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(a4, 1, 1, v48);
    uint64_t v49 = sub_20A8C33A0();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v49 - 8) + 8))(v24, v49);
  }
  else if (v21 == *MEMORY[0x263F7AF38])
  {
    (*(void (**)(void **, uint64_t))(v17 + 96))(v20, v16);
    *a4 = *v20;
    type metadata accessor for StocksActivity.Article(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = type metadata accessor for StocksActivity(0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a4, 0, 1, v28);
  }
  else
  {
    uint64_t result = sub_20A8CF750();
    __break(1u);
  }
  return result;
}

uint64_t sub_20A5A6ED0(uint64_t a1, void *a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10)
{
  uint64_t v46 = a7;
  uint64_t v47 = a8;
  uint64_t v45 = a4;
  unint64_t v43 = a2;
  uint64_t v48 = a1;
  uint64_t v14 = sub_20A8C8F40();
  uint64_t v52 = *(void *)(v14 - 8);
  uint64_t v53 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v54 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v49);
  uint64_t v50 = (uint64_t)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v51 = (char *)v42 - v18;
  unint64_t v55 = a5;
  uint64_t v56 = a6;
  unint64_t v57 = a9;
  uint64_t v58 = a10;
  uint64_t v19 = sub_20A8C8610();
  uint64_t v44 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  int v21 = (char *)v42 - v20;
  id v22 = objc_msgSend(self, sel_currentDevice);
  id v23 = objc_msgSend(v22, sel_userInterfaceIdiom);

  if (!v23) {
    return 0;
  }
  v42[1] = v10;
  unint64_t v55 = a3;
  v42[0] = a3;
  uint64_t v24 = v45;
  uint64_t v25 = v46;
  uint64_t v56 = v45;
  unint64_t v57 = a5;
  uint64_t v58 = a6;
  uint64_t v59 = v46;
  uint64_t v26 = v47;
  uint64_t v60 = v47;
  unint64_t v61 = a9;
  uint64_t v62 = a10;
  sub_20A8C7E50();
  uint64_t v27 = sub_20A8C7E10();
  unint64_t v43 = v42;
  MEMORY[0x270FA5388](v27);
  v42[-8] = v42[0];
  v42[-7] = v24;
  v42[-6] = a5;
  v42[-5] = a6;
  v42[-4] = v25;
  v42[-3] = v26;
  unint64_t v40 = a9;
  uint64_t v41 = a10;
  sub_20A5A8870(0, &qword_26AC7F6D0, MEMORY[0x263F7AF08], MEMORY[0x263F8D488]);
  swift_getWitnessTable();
  sub_20A5A8968();
  uint64_t v28 = sub_20A8CE530();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v21, v19);
  if (*(void *)(v28 + 16))
  {
    uint64_t v29 = sub_20A8C3F00();
    uint64_t v30 = (uint64_t)v51;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v51, v48, v29);
    *(void *)(v30 + *(int *)(type metadata accessor for StocksActivity.StockFeed.Series(0) + 20)) = v28;
    sub_20A5A89F0(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
    *(void *)(v30 + *(int *)(v31 + 48)) = 2;
    type metadata accessor for StocksActivity.StockFeed(0);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_20A5A89F0(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
    uint64_t v34 = *(int *)(v33 + 48);
    uint64_t v35 = sub_20A8C3F00();
    uint64_t v30 = (uint64_t)v51;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v51, v48, v35);
    *(void *)(v30 + v34) = 2;
    type metadata accessor for StocksActivity.StockFeed(0);
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRelease();
  if (qword_26AC81128 != -1) {
    swift_once();
  }
  sub_20A5A7D60(v30, v50, type metadata accessor for StocksActivity);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v37 = self;
  swift_retain();
  id v38 = objc_msgSend(v37, sel_bundleForClass_, ObjCClassFromMetadata);
  unint64_t v40 = 0x800000020A902E50;
  sub_20A8C2370();

  sub_20A8CB580();
  sub_20A8CB570();
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v54, *MEMORY[0x263F7D600], v53);
  swift_allocObject();
  uint64_t v32 = sub_20A8C86B0();
  sub_20A5A7DC8(v30, type metadata accessor for StocksActivity);
  return v32;
}

uint64_t sub_20A5A7514@<X0>(uint64_t *a1@<X8>)
{
  sub_20A8C9870();
  sub_20A8C3F00();
  swift_getWitnessTable();
  uint64_t result = sub_20A8CE510();
  *a1 = result;
  return result;
}

uint64_t sub_20A5A75D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x270FA5388](a1);
  sub_20A8C9160();
  sub_20A8C9150();
  sub_20A43F7E0(0, &qword_26763C380);
  if (swift_dynamicCast())
  {
    sub_20A42BEBC(v5, (uint64_t)v7);
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    sub_20A8C3420();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    uint64_t v6 = 0;
    memset(v5, 0, sizeof(v5));
    sub_20A5A8CE4((uint64_t)v5, (uint64_t)&unk_26763C388, (uint64_t)&qword_26763C380, MEMORY[0x263F7ABB0], (uint64_t (*)(void))sub_20A491224);
    uint64_t v4 = sub_20A8C3F00();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, 1, 1, v4);
  }
}

uint64_t static ContextMenuItem.openInNewTab(headline:)(uint64_t a1)
{
  v31[1] = a1;
  uint64_t v1 = sub_20A8C8F40();
  uint64_t v34 = *(void *)(v1 - 8);
  uint64_t v35 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v36 = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v32);
  uint64_t v33 = (uint64_t)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v31 - v5;
  uint64_t v7 = sub_20A8C5390();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[0] = MEMORY[0x263F06EA8];
  uint64_t v11 = MEMORY[0x263F8D8F0];
  sub_20A5A8870(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v31 - v13;
  uint64_t v15 = sub_20A8C5920();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_20A8C4DA0();
  MEMORY[0x270FA5388](v19 - 8);
  int v21 = (char *)v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectRetain();
  sub_20A8C58F0();
  uint64_t v22 = sub_20A8C2530();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v14, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F58CD8], v7);
  sub_20A8C4D60();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_20A5A8CE4((uint64_t)v14, (uint64_t)&unk_26AC68C70, v31[0], v11, (uint64_t (*)(void))sub_20A5A8870);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  sub_20A42FC8C();
  uint64_t v24 = *(int *)(v23 + 48);
  uint64_t v25 = &v6[*(int *)(v23 + 64)];
  sub_20A5A7D60((uint64_t)v21, (uint64_t)v6, MEMORY[0x263F58AA8]);
  *(void *)&v6[v24] = 2;
  type metadata accessor for StocksActivity.Article(0);
  *(_OWORD *)uint64_t v25 = 0u;
  *((_OWORD *)v25 + 1) = 0u;
  *((void *)v25 + 4) = 0;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  if (qword_26AC81110 != -1) {
    swift_once();
  }
  sub_20A5A7D60((uint64_t)v6, v33, type metadata accessor for StocksActivity);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v27 = self;
  swift_retain();
  id v28 = objc_msgSend(v27, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  sub_20A8CB580();
  sub_20A8CB560();
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v36, *MEMORY[0x263F7D600], v35);
  swift_allocObject();
  uint64_t v29 = sub_20A8C86B0();
  sub_20A5A7DC8((uint64_t)v6, type metadata accessor for StocksActivity);
  sub_20A5A7DC8((uint64_t)v21, MEMORY[0x263F58AA8]);
  return v29;
}

uint64_t sub_20A5A7D60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A5A7DC8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A5A7E30(uint64_t *a1@<X8>)
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = sub_20A8C2370();
  uint64_t v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

void sub_20A5A7EFC(void *a1@<X8>)
{
  uint64_t v2 = (void *)sub_20A8CE240();
  id v3 = objc_msgSend(self, sel_systemImageNamed_, v2);

  if (v3) {
    *a1 = v3;
  }
  else {
    __break(1u);
  }
}

uint64_t _s5TeaUI15ContextMenuItemC06StocksB0E15openInNewWindow8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(uint64_t a1)
{
  uint64_t v33 = a1;
  uint64_t v1 = sub_20A8C8F40();
  uint64_t v36 = *(void *)(v1 - 8);
  uint64_t v37 = v1;
  MEMORY[0x270FA5388](v1);
  id v38 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v34);
  uint64_t v35 = (uint64_t)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v31 - v5;
  uint64_t v7 = sub_20A8C5390();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5A8870(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v31 - v12;
  uint64_t v32 = sub_20A8C5920();
  uint64_t v14 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8C4DA0();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = objc_msgSend(self, sel_sharedApplication);
  unsigned int v21 = objc_msgSend(v20, sel_supportsMultipleScenes);

  uint64_t v22 = 0;
  if (v21)
  {
    swift_unknownObjectRetain();
    sub_20A8C58F0();
    uint64_t v23 = sub_20A8C2530();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v13, 1, 1, v23);
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F58CD8], v7);
    sub_20A8C4D60();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_20A5A8CE4((uint64_t)v13, (uint64_t)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A5A8870);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v32);
    sub_20A42FC8C();
    uint64_t v25 = *(int *)(v24 + 48);
    uint64_t v26 = &v6[*(int *)(v24 + 64)];
    sub_20A5A7D60((uint64_t)v19, (uint64_t)v6, MEMORY[0x263F58AA8]);
    *(void *)&v6[v25] = 2;
    type metadata accessor for StocksActivity.Article(0);
    *(_OWORD *)uint64_t v26 = 0u;
    *((_OWORD *)v26 + 1) = 0u;
    *((void *)v26 + 4) = 0;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    if (qword_26AC81128 != -1) {
      swift_once();
    }
    sub_20A5A7D60((uint64_t)v6, v35, type metadata accessor for StocksActivity);
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v28 = self;
    swift_retain();
    id v29 = objc_msgSend(v28, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_20A8C2370();

    sub_20A8CB580();
    sub_20A8CB570();
    (*(void (**)(char *, void, uint64_t))(v36 + 104))(v38, *MEMORY[0x263F7D600], v37);
    sub_20A8C8720();
    swift_allocObject();
    uint64_t v22 = sub_20A8C86B0();
    sub_20A5A7DC8((uint64_t)v6, type metadata accessor for StocksActivity);
    sub_20A5A7DC8((uint64_t)v19, MEMORY[0x263F58AA8]);
  }
  return v22;
}

uint64_t _s5TeaUI15ContextMenuItemC06StocksB0E15provideFeedbackACyFZ_0()
{
  sub_20A5A8D44();
  MEMORY[0x270FA5388](v0 - 8);
  sub_20A5A8870(0, &qword_26763C3C8, (uint64_t (*)(uint64_t))sub_20A5A8DA0, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v7[-v2];
  sub_20A5A8E0C();
  MEMORY[0x270FA5388](v4 - 8);
  if (qword_26AC6ABC8 != -1) {
    swift_once();
  }
  v7[15] = 1;
  sub_20A4AE404();
  swift_retain();
  sub_20A8CA040();
  v7[14] = 1;
  sub_20A45A06C();
  sub_20A8C8E20();
  sub_20A5A8DA0();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 0, 1, v5);
  v7[13] = 1;
  sub_20A8C9280();
  sub_20A8C8720();
  swift_allocObject();
  return sub_20A8C8670();
}

void sub_20A5A8870(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A5A88D4()
{
  if (!qword_26AC812E0)
  {
    sub_20A4AE404();
    unint64_t v0 = sub_20A8C82B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC812E0);
    }
  }
}

uint64_t sub_20A5A893C(uint64_t a1)
{
  return sub_20A5A8CA8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void))sub_20A5A7514);
}

unint64_t sub_20A5A8968()
{
  unint64_t result = qword_26763C378;
  if (!qword_26763C378)
  {
    sub_20A5A8870(255, &qword_26AC7F6D0, MEMORY[0x263F7AF08], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C378);
  }
  return result;
}

void sub_20A5A89F0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_20A5A8A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A5A75D8(a1, a2);
}

uint64_t sub_20A5A8A8C(uint64_t a1)
{
  return sub_20A5A8CA8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void))sub_20A5A6384);
}

void sub_20A5A8AB8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_20A5A8B04()
{
  unint64_t result = qword_26AC7F820;
  if (!qword_26AC7F820)
  {
    sub_20A5A8AB8(255, (unint64_t *)&qword_26AC7F800, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7F820);
  }
  return result;
}

uint64_t sub_20A5A8B80(uint64_t a1, uint64_t a2)
{
  sub_20A5A8870(0, (unint64_t *)&qword_26AC6C780, type metadata accessor for StocksActivity, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_20A5A8C14()
{
  if (!qword_26763C3A0)
  {
    sub_20A4549BC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763C3A0);
    }
  }
}

uint64_t sub_20A5A8C7C(uint64_t a1)
{
  return sub_20A5A8CA8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void))sub_20A5A6478);
}

uint64_t sub_20A5A8CA8(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9]);
}

uint64_t sub_20A5A8CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_20A5A8D44()
{
  if (!qword_26763C3C0)
  {
    sub_20A4AE404();
    unint64_t v0 = sub_20A8C92B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763C3C0);
    }
  }
}

void sub_20A5A8DA0()
{
  if (!qword_26763C3D0)
  {
    sub_20A45A06C();
    sub_20A4AE404();
    unint64_t v0 = sub_20A8C8E40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763C3D0);
    }
  }
}

void sub_20A5A8E0C()
{
  if (!qword_26763C3E0)
  {
    sub_20A4AE404();
    unint64_t v0 = sub_20A8CA060();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763C3E0);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for FeatureControlState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A5A8F58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureControlState()
{
  return &type metadata for FeatureControlState;
}

unint64_t sub_20A5A8F94()
{
  unint64_t result = qword_26763C3E8;
  if (!qword_26763C3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C3E8);
  }
  return result;
}

id sub_20A5A8FE8(void *a1, void *a2, void *a3)
{
  unsigned int v4 = v3;
  void v42[2] = a2;
  v42[1] = a1;
  uint64_t v6 = sub_20A8C43D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F81650]), sel_init);
  v42[0] = a3;
  if (objc_msgSend(a3, sel_horizontalSizeClass) == (id)2) {
    objc_msgSend(v10, sel_setLineSpacing_, 41.0);
  }
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  uint64_t v12 = (void **)MEMORY[0x263F814F0];
  *(_OWORD *)(inited + 16) = xmmword_20A8D7FF0;
  uint64_t v13 = *v12;
  *(void *)(inited + 32) = *v12;
  uint64_t v14 = self;
  sub_20A8CD010();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F7D1A8], v6);
  id v15 = v13;
  sub_20A8CD000();
  double v17 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  id v18 = objc_msgSend(v14, sel_systemFontOfSize_weight_, v17, *MEMORY[0x263F81800]);
  uint64_t v19 = sub_20A8CEE40();

  uint64_t v20 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v19;
  unsigned int v21 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v20;
  *(void *)(inited + 72) = v21;
  uint64_t v22 = v4[5];
  uint64_t v23 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v22);
  uint64_t v24 = *(void *)(v23 + 16);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 224);
  id v26 = v21;
  uint64_t v27 = v25(v22, v24);
  uint64_t v28 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v27;
  id v29 = (void *)*MEMORY[0x263F81540];
  *(void *)(inited + 104) = v28;
  *(void *)(inited + 112) = v29;
  uint64_t v30 = sub_20A42CFF0(0, &qword_26AC7FA48);
  *(void *)(inited + 120) = v10;
  uint64_t v31 = (void *)*MEMORY[0x263F81510];
  *(void *)(inited + 144) = v30;
  *(void *)(inited + 152) = v31;
  id v32 = v29;
  id v33 = v10;
  id v34 = v31;
  id v35 = objc_msgSend(v42[0], sel_horizontalSizeClass);
  double v36 = -0.37;
  if (v35 != (id)2) {
    double v36 = 0.0;
  }
  *(void *)(inited + 184) = MEMORY[0x263F8D538];
  *(double *)(inited + 160) = v36;
  sub_20A4CF8B0(inited);
  id v37 = objc_allocWithZone(MEMORY[0x263F086A0]);
  swift_bridgeObjectRetain();
  id v38 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v39 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v40 = objc_msgSend(v37, sel_initWithString_attributes_, v38, v39);

  return v40;
}

id sub_20A5A93C4(void *a1, void *a2, void *a3)
{
  unsigned int v4 = v3;
  void v42[2] = a2;
  v42[1] = a1;
  uint64_t v6 = sub_20A8C43D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F81650]), sel_init);
  v42[0] = a3;
  if (objc_msgSend(a3, sel_horizontalSizeClass) == (id)2) {
    objc_msgSend(v10, sel_setLineSpacing_, 41.0);
  }
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  uint64_t v12 = (void **)MEMORY[0x263F814F0];
  *(_OWORD *)(inited + 16) = xmmword_20A8D7FF0;
  uint64_t v13 = *v12;
  *(void *)(inited + 32) = *v12;
  uint64_t v14 = self;
  sub_20A8CD010();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F7D1A8], v6);
  id v15 = v13;
  sub_20A8CD000();
  double v17 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  id v18 = objc_msgSend(v14, sel_systemFontOfSize_weight_, v17, *MEMORY[0x263F81800]);
  uint64_t v19 = sub_20A8CEE40();

  uint64_t v20 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v19;
  unsigned int v21 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v20;
  *(void *)(inited + 72) = v21;
  uint64_t v22 = v4[5];
  uint64_t v23 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v22);
  uint64_t v24 = *(void *)(v23 + 16);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 232);
  id v26 = v21;
  uint64_t v27 = v25(v22, v24);
  uint64_t v28 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v27;
  id v29 = (void *)*MEMORY[0x263F81540];
  *(void *)(inited + 104) = v28;
  *(void *)(inited + 112) = v29;
  uint64_t v30 = sub_20A42CFF0(0, &qword_26AC7FA48);
  *(void *)(inited + 120) = v10;
  uint64_t v31 = (void *)*MEMORY[0x263F81510];
  *(void *)(inited + 144) = v30;
  *(void *)(inited + 152) = v31;
  id v32 = v29;
  id v33 = v10;
  id v34 = v31;
  id v35 = objc_msgSend(v42[0], sel_horizontalSizeClass);
  double v36 = -0.37;
  if (v35 != (id)2) {
    double v36 = 0.0;
  }
  *(void *)(inited + 184) = MEMORY[0x263F8D538];
  *(double *)(inited + 160) = v36;
  sub_20A4CF8B0(inited);
  id v37 = objc_allocWithZone(MEMORY[0x263F086A0]);
  swift_bridgeObjectRetain();
  id v38 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v39 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v40 = objc_msgSend(v37, sel_initWithString_attributes_, v38, v39);

  return v40;
}

uint64_t sub_20A5A97A0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MastheadViewStyler()
{
  return self;
}

uint64_t sub_20A5A97FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 40);
  uint64_t v8 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  id v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  uint64_t v12 = v10(a1, v7, v9);
  double v13 = MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A5A9948((uint64_t)v15, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

uint64_t sub_20A5A9948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 56) = xmmword_20A8E02E0;
  sub_20A42BEBC(&v9, v7 + 16);
  return v7;
}

ValueMetadata *type metadata accessor for EmptyListViewModel()
{
  return &type metadata for EmptyListViewModel;
}

uint64_t sub_20A5A99FC(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_unknownObjectWeakInit();
  uint64_t v4 = v1 + OBJC_IVAR____TtC8StocksUI20ShareMenuItemManager_currentItem;
  uint64_t v5 = sub_20A8CB920();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(void *)(v2 + 16) = a1;
  uint64_t v6 = self;
  swift_retain();
  id v7 = objc_msgSend(v6, sel_defaultCenter);
  sub_20A5AA208();
  swift_retain();
  uint64_t v8 = (void *)sub_20A8CF150();
  objc_msgSend(v7, sel_addObserver_selector_name_object_, v2, sel_didBecomeKeyWindowScene_, v8, 0);

  swift_release();
  swift_release();
  return v2;
}

void sub_20A5A9B20()
{
  sub_20A5AA06C();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v19[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_20A8CB920();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = v0 + OBJC_IVAR____TtC8StocksUI20ShareMenuItemManager_currentItem;
  swift_beginAccess();
  sub_20A5AA2AC(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_20A5AA310((uint64_t)v3);
    return;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v7, v3, v4);
  long long v9 = (void *)MEMORY[0x2105289B0](v0 + 24);
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = objc_msgSend(v9, sel_view);

    if (!v11)
    {
      __break(1u);
      return;
    }
    id v12 = objc_msgSend(v11, sel_window);

    if (v12)
    {
      double v13 = self;
      id v14 = v12;
      id v15 = objc_msgSend(v13, sel_sharedApplication);
      id v16 = objc_msgSend(v15, sel_key_window);

      if (!v16 || (v16, v14 != v16))
      {
        (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);

        return;
      }
      uint64_t v17 = *(void *)(v0 + 16) + OBJC_IVAR____TtC8StocksUI28ShareDynamicMenuItemProvider_menuItem;
      swift_beginAccess();
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 24))(v17, v7, v4);
      swift_endAccess();
      id v18 = objc_msgSend(self, sel_mainSystem);
      objc_msgSend(v18, sel_setNeedsRebuild);
    }
  }
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_20A5A9EFC()
{
  swift_release();
  swift_unknownObjectWeakDestroy();
  sub_20A5AA310(v0 + OBJC_IVAR____TtC8StocksUI20ShareMenuItemManager_currentItem);

  return swift_deallocClassInstance();
}

uint64_t sub_20A5A9F70()
{
  return type metadata accessor for ShareMenuItemManager();
}

uint64_t type metadata accessor for ShareMenuItemManager()
{
  uint64_t result = qword_26AC71CA8;
  if (!qword_26AC71CA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A5A9FC4()
{
  sub_20A5AA06C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_20A5AA06C()
{
  if (!qword_26AC6AC78)
  {
    sub_20A8CB920();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6AC78);
    }
  }
}

void sub_20A5AA0C4(uint64_t a1)
{
  sub_20A5AA06C();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  uint64_t v7 = sub_20A8CB920();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v5, a1, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  uint64_t v9 = v6 + OBJC_IVAR____TtC8StocksUI20ShareMenuItemManager_currentItem;
  swift_beginAccess();
  sub_20A5AA248((uint64_t)v5, v9);
  swift_endAccess();
  swift_unknownObjectWeakAssign();
  sub_20A5A9B20();
}

unint64_t sub_20A5AA208()
{
  unint64_t result = qword_26AC823A0;
  if (!qword_26AC823A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC823A0);
  }
  return result;
}

uint64_t sub_20A5AA248(uint64_t a1, uint64_t a2)
{
  sub_20A5AA06C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A5AA2AC(uint64_t a1, uint64_t a2)
{
  sub_20A5AA06C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A5AA310(uint64_t a1)
{
  sub_20A5AA06C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for EmptyListViewLayoutAttributesFactory()
{
  return self;
}

uint64_t sub_20A5AA390(void *a1, uint64_t a2)
{
  sub_20A5AAAD8();
  uint64_t v5 = v4 - 8;
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v9 = objc_msgSend(a1, sel_horizontalSizeClass, v6);
  uint64_t v10 = (char *)v8 + *(int *)(v5 + 56);
  *uint64_t v8 = v9;
  uint64_t v11 = sub_20A8C97A0();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a2, v11);
  if (!v9) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  if (v9 != (id)2)
  {
    if (v9 != (id)1)
    {
      uint64_t result = sub_20A8CF520();
      __break(1u);
      return result;
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v10, v11);
    if (result == *MEMORY[0x263F7D830]) {
      return result;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v10, v11);
  if (result != *MEMORY[0x263F7D830]) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  return result;
}

double sub_20A5AA61C@<D0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, CGFloat a5@<D0>, CGFloat a6@<D1>, CGFloat a7@<D2>, CGFloat a8@<D3>, double a9@<D5>, double a10@<D7>)
{
  uint64_t v20 = v10[5];
  uint64_t v21 = v10[6];
  __swift_project_boxed_opaque_existential_1(v10 + 2, v20);
  uint64_t v22 = *(void *)(v21 + 8);
  uint64_t v23 = *(void (**)(void *, uint64_t, uint64_t))(v22 + 8);
  v77[3] = v20;
  v77[4] = v21;
  __swift_allocate_boxed_opaque_existential_1(v77);
  v23(a1, v20, v22);
  v78.origin.x = a5;
  v78.origin.y = a6;
  v78.size.width = a7;
  v78.size.height = a8;
  CGFloat v24 = CGRectGetWidth(v78) - a10 - a9;
  sub_20A5AA390(a1, a2);
  double v26 = v25 * v24;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v28 = self;
  id v29 = objc_msgSend(v28, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v30 = sub_20A8C2370();
  uint64_t v32 = v31;

  id v33 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 16))(v30, v32, v20, v21);
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(v28, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A903070);
  uint64_t v35 = sub_20A8C2370();
  uint64_t v37 = v36;

  id v38 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 24))(v35, v37, v20, v21);
  swift_bridgeObjectRelease();
  sub_20A8CEDD0();
  objc_msgSend(v33, sel_boundingRectWithSize_options_context_, 1, 0, 0x800000020A903130);
  CGFloat v67 = v40;
  CGFloat v69 = v39;
  CGFloat v42 = v41;
  CGFloat v65 = v43;
  double v63 = v26;
  sub_20A8CEDD0();
  objc_msgSend(v38, sel_boundingRectWithSize_options_context_, 1, 0);
  CGFloat v45 = v44;
  CGFloat v61 = v44;
  CGFloat v62 = v46;
  CGFloat v59 = v47;
  CGFloat v60 = a7;
  CGFloat rect = v48;
  CGFloat v49 = v46;
  v79.origin.x = a5;
  v79.origin.y = a6;
  v79.size.width = a7;
  v79.size.height = a8;
  double v74 = (CGRectGetWidth(v79) - v26) * 0.5;
  sub_20A8CED80();
  double v51 = v50;
  v80.origin.x = v69;
  v80.origin.y = v42;
  v80.size.width = v67;
  v80.size.height = v65;
  double Height = CGRectGetHeight(v80);
  v81.origin.x = v45;
  v81.origin.y = v59;
  v81.size.width = rect;
  v81.size.height = v49;
  double v53 = v51 - (Height + CGRectGetHeight(v81)) * 0.5;
  if (v53 > 0.0) {
    double v54 = v53;
  }
  else {
    double v54 = 0.0;
  }
  double v71 = v54;
  v82.origin.x = v69;
  v82.origin.y = v42;
  v82.size.width = v67;
  v82.size.height = v65;
  CGFloat v70 = ceil(CGRectGetHeight(v82));
  v83.origin.x = a5;
  v83.size.height = a8;
  v83.origin.y = a6;
  v83.size.width = v60;
  double v68 = (CGRectGetWidth(v83) - v63) * 0.5;
  v84.origin.x = v74;
  v84.origin.y = v54;
  v84.size.width = v63;
  v84.size.height = v70;
  double v66 = CGRectGetMaxY(v84) + 4.0;
  v85.origin.x = v61;
  v85.origin.y = v59;
  v85.size.width = rect;
  v85.size.height = v62;
  v86.size.height = ceil(CGRectGetHeight(v85));
  double v64 = v86.size.height;
  v86.origin.x = v68;
  v86.origin.y = v66;
  v86.size.width = v63;
  double v55 = CGRectGetMaxY(v86) + 8.0;
  v87.origin.x = v61;
  v87.origin.y = v59;
  v87.size.width = rect;
  v87.size.height = v62;
  double v56 = CGRectGetHeight(v87);
  v88.origin.x = a5;
  v88.size.height = a8;
  v88.origin.y = a6;
  v88.size.width = v60;
  double v57 = CGRectGetHeight(v88);

  if (v57 <= v55 + v56) {
    double v57 = v55 + v56;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
  *(CGFloat *)a4 = a5;
  *(CGFloat *)(a4 + 8) = a6;
  *(CGFloat *)(a4 + 16) = v60;
  *(double *)(a4 + 24) = v57;
  *(double *)(a4 + 32) = v55;
  *(double *)(a4 + 40) = v56;
  *(double *)(a4 + 48) = v74;
  *(double *)(a4 + 56) = v71;
  *(double *)(a4 + 64) = v63;
  *(CGFloat *)(a4 + 72) = v70;
  *(double *)(a4 + 80) = v68;
  *(double *)(a4 + 88) = v66;
  double result = v64;
  *(double *)(a4 + 96) = v63;
  *(double *)(a4 + 104) = v64;
  *(unsigned char *)(a4 + 112) = a3;
  return result;
}

void sub_20A5AAAD8()
{
  if (!qword_26AC81030)
  {
    type metadata accessor for UIUserInterfaceSizeClass(255);
    sub_20A8C97A0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC81030);
    }
  }
}

uint64_t type metadata accessor for AppConfigurationRefreshManager()
{
  return self;
}

uint64_t sub_20A5AAB6C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A5AABD8()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_20A8C3AE0();
}

uint64_t EndOfArticleModel.contextMenu(contextMenu:model:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C4E60();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a2, v4, v6);
  int v9 = (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 88))(v8, v4);
  int v10 = *MEMORY[0x263F58AF0];
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  if (v9 == v10 && (uint64_t v11 = sub_20A8C4E50()) != 0)
  {
    uint64_t v12 = v11;
    uint64_t v21 = sub_20A8C8090();
    uint64_t v13 = _s5TeaUI15ContextMenuItemC06StocksB0E15openInNewWindow8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(v12);
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v19 = sub_20A8C8720();
      uint64_t v20 = MEMORY[0x263F7D410];
      *(void *)&long long v18 = v14;
      sub_20A42BEBC(&v18, (uint64_t)v17);
      sub_20A5AB0E4(0, 0, (uint64_t)v17);
    }
    sub_20A8C80C0();
    swift_allocObject();
    swift_retain();
    a1 = sub_20A8C8040();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_retain();
  }
  return a1;
}

uint64_t sub_20A5AAE0C(uint64_t a1, uint64_t a2)
{
  return EndOfArticleModel.contextMenu(contextMenu:model:)(a1, a2);
}

uint64_t sub_20A5AAE24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A5AAEB4(a1, a2, a3, (uint64_t (*)(void))sub_20A46D41C, (uint64_t (*)(void))sub_20A42BED4, &qword_26AC7FCD0, (void (*)(uint64_t))sub_20A42BED4);
}

uint64_t sub_20A5AAE6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A5AAEB4(a1, a2, a3, (uint64_t (*)(void))sub_20A46DE74, (uint64_t (*)(void))sub_20A42D240, &qword_26AC686E8, (void (*)(uint64_t))sub_20A42D240);
}

uint64_t sub_20A5AAEB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), unint64_t *a6, void (*a7)(uint64_t))
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v9 = *v7;
  uint64_t v10 = *(void *)(*v7 + 16);
  if (v10 < a2)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v12 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v13 = 1 - v12;
  if (__OFSUB__(1, v12))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (__OFADD__(v10, v13))
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v7 = v9;
  if (!isUniquelyReferenced_nonNull_native || v10 + v13 > *(void *)(v9 + 24) >> 1)
  {
    uint64_t v9 = a4();
    *uint64_t v7 = v9;
  }
  uint64_t v17 = a5(0);
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v19 = v9 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  uint64_t v20 = *(void *)(v18 + 72);
  unint64_t v21 = v19 + v20 * a1;
  swift_arrayDestroy();
  if (!v13) {
    goto LABEL_22;
  }
  uint64_t v22 = *(void *)(v9 + 16);
  uint64_t v23 = v22 - a2;
  if (__OFSUB__(v22, a2)) {
    goto LABEL_30;
  }
  if (v23 < 0)
  {
LABEL_32:
    uint64_t result = sub_20A8CF590();
    __break(1u);
    return result;
  }
  unint64_t v24 = v21 + v20;
  unint64_t v25 = v19 + v20 * a2;
  if (v21 + v20 < v25 || v24 >= v25 + v23 * v20)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v24 != v25)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v27 = *(void *)(v9 + 16);
  BOOL v28 = __OFADD__(v27, v13);
  uint64_t v29 = v27 + v13;
  if (v28)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  *(void *)(v9 + 16) = v29;
LABEL_22:
  if (v20 >= 1) {
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 16))(v21, a3, v17);
  }
  return sub_20A5AB490(a3, a6, a7);
}

uint64_t sub_20A5AB0E4(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    uint64_t v5 = sub_20A46E1B0(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *(void *)uint64_t v3 = v5;
  }
  uint64_t v14 = (uint64_t)&v5[5 * a1 + 4];
  sub_20A564D04();
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v15 = v5[2];
  BOOL v16 = __OFSUB__(v15, a2);
  uint64_t v17 = v15 - a2;
  if (v16) {
    goto LABEL_26;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = (char *)(v14 + 40);
    unint64_t v19 = (char *)&v5[5 * a2 + 4];
    if ((char *)(v14 + 40) != v19 || v18 >= &v19[40 * v17]) {
      memmove(v18, v19, 40 * v17);
    }
    uint64_t v20 = v5[2];
    BOOL v16 = __OFADD__(v20, v9);
    uint64_t v21 = v20 + v9;
    if (!v16)
    {
      long long v5[2] = v21;
LABEL_20:
      sub_20A4342F4(a3, v14);
      return sub_20A5AB490(a3, (unint64_t *)&unk_26763C3F0, (void (*)(uint64_t))sub_20A564D04);
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A5AB2A4(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_20A46D718(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(sub_20A8C2800() - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A5AB490(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A5AB4EC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_20A5AB4EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF440();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for TickerCollectionModel(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TickerCollectionModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TickerCollectionModel()
{
  return &type metadata for TickerCollectionModel;
}

uint64_t type metadata accessor for ManageWatchlistsBlueprintViewHeaderFooterProvider()
{
  return self;
}

void *initializeBufferWithCopyOfBuffer for StockFeedNewsRefreshData(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for StockFeedNewsRefreshData()
{
  return swift_release();
}

void *assignWithCopy for StockFeedNewsRefreshData(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for StockFeedNewsRefreshData(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for StocksActivity.Tip(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7C && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 124);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 4) | (8 * ((*(void *)a1 >> 57) & 8 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7B) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for StocksActivity.Tip(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7B)
  {
    *(void *)__n128 result = a2 - 124;
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(void *)__n128 result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedNewsRefreshData()
{
  return &type metadata for StockFeedNewsRefreshData;
}

uint64_t destroy for StockFeedNewsExpandData()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

void *_s8StocksUI23StockFeedNewsExpandDataVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for StockFeedNewsExpandData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for StockFeedNewsExpandData(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for StockFeedNewsExpandData()
{
  return &type metadata for StockFeedNewsExpandData;
}

uint64_t destroy for StockFeedNewsFailedData()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

void *_s8StocksUI23StockFeedNewsFailedDataVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for StockFeedNewsFailedData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for StockFeedNewsFailedData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for StockFeedNewsFailedData()
{
  return &type metadata for StockFeedNewsFailedData;
}

uint64_t sub_20A5ABA3C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *(void *)a1 = *a2;
    a1 = v22 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    long long v8 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v8;
    uint64_t v9 = v8;
    int64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
    swift_bridgeObjectRetain();
    v10(a1 + 16, (uint64_t)(a2 + 2), v9);
    long long v11 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 80) = v11;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 56, (uint64_t)(a2 + 7));
    long long v12 = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(a1 + 120) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 96, (uint64_t)(a2 + 12));
    uint64_t v13 = a3[8];
    uint64_t v14 = a1 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    uint64_t v16 = sub_20A8C3410();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[9];
    long long v18 = *(_OWORD *)((char *)a2 + v17 + 24);
    *(_OWORD *)(a1 + v17 + 24) = v18;
    (**(void (***)(void))(v18 - 8))();
    uint64_t v19 = a3[10];
    uint64_t v20 = a1 + v19;
    uint64_t v21 = (uint64_t)a2 + v19;
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    *(unsigned char *)(v20 + 16) = *(unsigned char *)(v21 + 16);
  }
  return a1;
}

uint64_t sub_20A5ABC7C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  __swift_destroy_boxed_opaque_existential_1(a1 + 96);
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 36);

  return __swift_destroy_boxed_opaque_existential_1(v6);
}

uint64_t sub_20A5ABD20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2 + 16;
  long long v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  uint64_t v9 = v8;
  int64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  v10(a1 + 16, v7, v9);
  long long v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 56, a2 + 56);
  long long v12 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 96, a2 + 96);
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[9];
  long long v18 = *(_OWORD *)(a2 + v17 + 24);
  *(_OWORD *)(a1 + v17 + 24) = v18;
  (**(void (***)(void))(v18 - 8))();
  uint64_t v19 = a3[10];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v21 + 16);
  return a1;
}

uint64_t *sub_20A5ABF10(uint64_t *a1, uint64_t *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  __swift_assign_boxed_opaque_existential_1(a1 + 7, a2 + 7);
  __swift_assign_boxed_opaque_existential_1(a1 + 12, a2 + 12);
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C3410();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)a1 + a3[9]), (uint64_t *)((char *)a2 + a3[9]));
  uint64_t v10 = a3[10];
  long long v11 = (char *)a1 + v10;
  long long v12 = (char *)a2 + v10;
  *(void *)long long v11 = *(void *)v12;
  *((void *)v11 + 1) = *((void *)v12 + 1);
  v11[16] = v12[16];
  return a1;
}

uint64_t sub_20A5AC00C(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  long long v7 = *(_OWORD *)(a2 + 112);
  uint64_t v8 = a3[8];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  uint64_t v11 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[9];
  uint64_t v13 = a3[10];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  long long v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  uint64_t v17 = a1 + v13;
  uint64_t v18 = a2 + v13;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v18 + 16);
  return a1;
}

uint64_t sub_20A5AC104(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  __swift_destroy_boxed_opaque_existential_1(a1 + 96);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = a3[9];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  __swift_destroy_boxed_opaque_existential_1(a1 + v13);
  long long v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  *(void *)(v18 + 8) = *(void *)(v19 + 8);
  *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
  return a1;
}

uint64_t sub_20A5AC230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A5AC244);
}

uint64_t sub_20A5AC244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C3410();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_20A5AC2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A5AC308);
}

uint64_t sub_20A5AC308(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_20A8C3410();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for TickerPrewarmBlueprintModifier()
{
  uint64_t result = qword_26AC68258;
  if (!qword_26AC68258) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A5AC3FC()
{
  uint64_t result = sub_20A8C3410();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_20A5AC4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v4 = type metadata accessor for TickerPrewarmBlueprintModifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v3;
  uint64_t v18 = v3;
  sub_20A5AF7BC(0, &qword_26AC7F6D0, MEMORY[0x263F7AF08], MEMORY[0x263F8D488]);
  sub_20A8C6670();
  sub_20A5AF754(v3, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TickerPrewarmBlueprintModifier);
  uint64_t v8 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  sub_20A5AF6EC((uint64_t)v7, v9 + ((v8 + 16) & ~v8), (uint64_t (*)(void))type metadata accessor for TickerPrewarmBlueprintModifier);
  uint64_t v10 = (void *)sub_20A8C6450();
  sub_20A8C64F0();
  swift_release();
  swift_release();

  sub_20A5AF754(v18, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TickerPrewarmBlueprintModifier);
  uint64_t v11 = swift_allocObject();
  uint64_t v13 = v19;
  uint64_t v12 = v20;
  *(void *)(v11 + 16) = v19;
  *(void *)(v11 + 24) = v12;
  sub_20A5AF6EC((uint64_t)v7, v11 + ((v8 + 32) & ~v8), (uint64_t (*)(void))type metadata accessor for TickerPrewarmBlueprintModifier);
  swift_retain();
  uint64_t v14 = (void *)sub_20A8C6450();
  sub_20A8C6500();
  swift_release();
  swift_release();

  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  *(void *)(v15 + 24) = v12;
  swift_retain();
  long long v16 = (void *)sub_20A8C6450();
  sub_20A8C6550();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_20A5AC77C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TickerPrewarmBlueprintModifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = *a1;
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 56), *(void *)(a2 + 80));
  sub_20A8C39E0();
  sub_20A5AF754(a2, (uint64_t)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for TickerPrewarmBlueprintModifier);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  sub_20A5AF6EC((uint64_t)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, (uint64_t (*)(void))type metadata accessor for TickerPrewarmBlueprintModifier);
  *(void *)(v9 + ((v6 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v7;
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)sub_20A8C6450();
  uint64_t v11 = sub_20A8C6500();
  swift_release();
  swift_release();

  return v11;
}

uint64_t sub_20A5AC928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v18 = a3;
  uint64_t v20 = a4;
  uint64_t v19 = sub_20A8C34C0();
  uint64_t v16 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C40E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4342F4(a2 + 96, (uint64_t)v21);
  v15[1] = v21[4];
  __swift_project_boxed_opaque_existential_1(v21, v21[3]);
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 16), *(void *)(a2 + 40));
  sub_20A8C3600();
  sub_20A8C40D0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v11 = sub_20A8C3B10();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  uint64_t v12 = sub_20A8C2EE0();
  uint64_t result = sub_20A8C2EC0();
  uint64_t v14 = v20;
  *uint64_t v20 = v11;
  v14[1] = v12;
  v14[2] = result;
  return result;
}

uint64_t sub_20A5ACB3C(void *a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v224 = a4;
  uint64_t v198 = a3;
  sub_20A5AF4DC(0, &qword_26AC6A418, MEMORY[0x263F7D950]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v181 - v9;
  sub_20A5AF4DC(0, (unint64_t *)&qword_26AC6AC90, MEMORY[0x263F7E0A8]);
  uint64_t v186 = v11;
  uint64_t v185 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  v184 = (char *)&v181 - v12;
  uint64_t v226 = type metadata accessor for TickerModel();
  MEMORY[0x270FA5388](v226);
  v220 = (uint64_t *)((char *)&v181 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_20A8C4030();
  MEMORY[0x270FA5388](v14 - 8);
  v219 = (char *)&v181 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v218 = (uint64_t)&v181 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v217 = sub_20A8C3410();
  v232 = *(uint64_t (**)(uint64_t))(v217 - 8);
  MEMORY[0x270FA5388](v217);
  v238 = (char *)&v181 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v216 = type metadata accessor for StockViewModel();
  MEMORY[0x270FA5388](v216);
  v215 = (char *)&v181 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v214 = (uint64_t)&v181 - v21;
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A5AF7BC(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v237 = (uint64_t)&v181 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v236 = (uint64_t)&v181 - v26;
  sub_20A5AF7BC(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], v22);
  MEMORY[0x270FA5388](v27 - 8);
  v211 = (char *)&v181 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v213 = (uint64_t)&v181 - v30;
  MEMORY[0x270FA5388](v31);
  uint64_t v239 = (uint64_t)&v181 - v32;
  MEMORY[0x270FA5388](v33);
  v210 = (char *)&v181 - v34;
  uint64_t v240 = sub_20A8C3F00();
  uint64_t v197 = *(void *)(v240 - 8);
  MEMORY[0x270FA5388](v240);
  v234 = (uint64_t (*)(uint64_t))((char *)&v181 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v36);
  v235 = (char *)&v181 - v37;
  MEMORY[0x270FA5388](v38);
  v233 = ((char *)&v181 - v39);
  sub_20A44DF90(0);
  uint64_t v225 = v40;
  uint64_t v221 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  v230 = (char *)&v181 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  v229 = (char *)&v181 - v43;
  sub_20A494C14();
  MEMORY[0x270FA5388](v44 - 8);
  v191 = (uint64_t (**)(int64_t, uint64_t))((char *)&v181 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v46);
  v199 = (char *)&v181 - v47;
  sub_20A5AF4DC(0, (unint64_t *)&qword_26AC69EE0, MEMORY[0x263F7D450]);
  uint64_t v49 = v48;
  v231 = *(char **)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  int64_t v190 = (int64_t)&v181 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v51);
  int64_t v192 = (int64_t)&v181 - v52;
  sub_20A4949B4();
  uint64_t v203 = v53;
  uint64_t v187 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  v183 = (char *)&v181 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v56 = MEMORY[0x270FA5388](v55);
  uint64_t v58 = (char *)&v181 - v57;
  uint64_t v59 = *a1;
  if (!*(void *)(*a1 + 16))
  {
    (*(void (**)(char *, void, uint64_t, double))(v8 + 104))(v10, *MEMORY[0x263F7D948], v7, v56);
    a2(v10);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v196 = v10;
  uint64_t v182 = v8;
  uint64_t v222 = a1[1];
  uint64_t v212 = a1[2];
  sub_20A5AF59C(&qword_26AC69ED0);
  sub_20A5AF59C(&qword_26AC69EC8);
  v201 = v58;
  uint64_t v200 = v49;
  sub_20A8C5F70();
  uint64_t v223 = v59;
  uint64_t v202 = *(void *)(v59 + 16);
  uint64_t v195 = type metadata accessor for TickerPrewarmBlueprintModifier();
  uint64_t v60 = v224 + *(int *)(v195 + 40);
  uint64_t v61 = *(void *)(v60 + 8);
  int v62 = *(unsigned __int8 *)(v60 + 16);
  BOOL IsVoiceOverRunning = UIAccessibilityIsVoiceOverRunning();
  if (v62) {
    uint64_t v61 = 0;
  }
  if (IsVoiceOverRunning) {
    uint64_t v64 = 0;
  }
  else {
    uint64_t v64 = v61;
  }
  double v65 = *(double *)v60;
  uint64_t result = UIAccessibilityIsVoiceOverRunning();
  double v67 = 1.0;
  if (((result | v62) & 1) == 0) {
    double v67 = v65;
  }
  if ((~*(void *)&v67 & 0x7FF0000000000000) == 0) {
    goto LABEL_65;
  }
  if (v67 <= -9.22337204e18)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  if (v67 >= 9.22337204e18)
  {
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  uint64_t v68 = (uint64_t)v67;
  uint64_t v69 = v202;
  uint64_t v194 = v7;
  v193 = a2;
  uint64_t v189 = (uint64_t)v67;
  if (v202 >= v64)
  {
    if (v68 < 0)
    {
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    if (v68)
    {
      v122 = 0;
      int64_t v190 = v202 & ~(v202 >> 63);
      v230 = (char *)(v197 + 16);
      v207 = (char *)v232 + 16;
      v206 = (void (**)(char *, uint64_t))((char *)v232 + 8);
      v205 = (void (**)(char *, uint64_t))(v197 + 8);
      uint64_t v204 = v221 + 32;
      v191 = (uint64_t (**)(int64_t, uint64_t))(v231 + 8);
      uint64_t v77 = v196;
      while (v122 != (char *)v68)
      {
        v211 = v122;
        v242 = v122;
        uint64_t v127 = v202;
        if (v202)
        {
          uint64_t v241 = MEMORY[0x263F8EE78];
          uint64_t v128 = v223;
          swift_bridgeObjectRetain();
          uint64_t result = sub_20A68C6D4(0, v190, 0);
          if (v127 < 1) {
            goto LABEL_64;
          }
          uint64_t v129 = v127;
          uint64_t v209 = v224 + *(int *)(v195 + 32);
          uint64_t v130 = v128 + ((*(unsigned __int8 *)(v197 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v197 + 80));
          uint64_t v208 = *(void *)(v197 + 72);
          v231 = *(char **)(v197 + 16);
          uint64_t v131 = v222;
          uint64_t v132 = (uint64_t)v210;
          do
          {
            uint64_t v227 = v129;
            ((void (*)(NSObject *, uint64_t, uint64_t))v231)(v233, v130, v240);
            uint64_t v133 = sub_20A8C3EC0();
            uint64_t v135 = *(void *)(v131 + 16);
            uint64_t v228 = v130;
            if (v135 && (unint64_t v136 = sub_20A4D1B24(v133, v134), (v137 & 1) != 0))
            {
              unint64_t v138 = v136;
              uint64_t v139 = *(void *)(v131 + 56);
              uint64_t v140 = sub_20A8C3E10();
              uint64_t v141 = *(void *)(v140 - 8);
              (*(void (**)(uint64_t, unint64_t, uint64_t))(v141 + 16))(v132, v139 + *(void *)(v141 + 72) * v138, v140);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v141 + 56))(v132, 0, 1, v140);
            }
            else
            {
              uint64_t v142 = sub_20A8C3E10();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v142 - 8) + 56))(v132, 1, 1, v142);
            }
            swift_bridgeObjectRelease();
            uint64_t v143 = v236;
            uint64_t v144 = v233;
            sub_20A5AE778(v212, v233, v224, v132, v236);
            uint64_t v145 = v235;
            uint64_t v146 = (void (*)(char *, char *, uint64_t))v231;
            ((void (*)(char *, NSObject *, uint64_t))v231)(v235, v144, v240);
            v234 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AEF0];
            sub_20A5AF5FC(v132, v239, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
            v232 = type metadata accessor for StockSparklineViewModel;
            uint64_t v147 = v237;
            sub_20A5AF5FC(v143, v237, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel);
            uint64_t v148 = *(void (**)(char *, char *, uint64_t))v207;
            uint64_t v149 = v217;
            (*(void (**)(char *, uint64_t, uint64_t))v207)(v238, v209, v217);
            uint64_t v150 = v215;
            v146(v215, v145, v240);
            uint64_t v151 = (int *)v216;
            uint64_t v152 = v239;
            v153 = v234;
            sub_20A5AF5FC(v239, (uint64_t)&v150[*(int *)(v216 + 20)], &qword_26AC68FB0, v234);
            sub_20A5AF5FC(v147, (uint64_t)&v150[v151[6]], &qword_26AC754A0, v232);
            v154 = v238;
            v148(&v150[v151[8]], v238, v149);
            v150[v151[9]] = 0;
            uint64_t v155 = v152;
            uint64_t v156 = v213;
            v157 = v153;
            sub_20A5AF5FC(v155, v213, &qword_26AC68FB0, v153);
            v158 = v219;
            v159 = v235;
            sub_20A8C3E70();
            uint64_t v160 = v218;
            sub_20A5EC850(v156, v158, 9666786, 0xA300000000000000, v218);
            uint64_t v161 = v240;
            (*v206)(v154, v149);
            v162 = v232;
            sub_20A5AF67C(v237, &qword_26AC754A0, v232);
            sub_20A5AF67C(v239, &qword_26AC68FB0, v157);
            v163 = *v205;
            (*v205)(v159, v161);
            uint64_t v164 = v151[7];
            uint64_t v132 = (uint64_t)v210;
            sub_20A5AF6EC(v160, (uint64_t)&v150[v164], (uint64_t (*)(void))type metadata accessor for PriceViewModel);
            uint64_t v165 = (uint64_t)v150;
            uint64_t v166 = v214;
            sub_20A5AF6EC(v165, v214, (uint64_t (*)(void))type metadata accessor for StockViewModel);
            sub_20A494D04();
            uint64_t v168 = (uint64_t)v220 + *(int *)(v167 + 48);
            void *v220 = v211;
            sub_20A5AF754(v166, v168, (uint64_t (*)(void))type metadata accessor for StockViewModel);
            sub_20A5AF130(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
            sub_20A8C8320();
            sub_20A4C88D8(v166);
            sub_20A5AF67C(v236, &qword_26AC754A0, v162);
            sub_20A5AF67C(v132, &qword_26AC68FB0, v234);
            v163((char *)v233, v161);
            uint64_t v169 = v241;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_20A68C6D4(0, *(void *)(v169 + 16) + 1, 1);
              uint64_t v169 = v241;
            }
            uint64_t v170 = v228;
            unint64_t v172 = *(void *)(v169 + 16);
            unint64_t v171 = *(void *)(v169 + 24);
            uint64_t v131 = v222;
            if (v172 >= v171 >> 1)
            {
              sub_20A68C6D4(v171 > 1, v172 + 1, 1);
              uint64_t v169 = v241;
            }
            *(void *)(v169 + 16) = v172 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v221 + 32))(v169+ ((*(unsigned __int8 *)(v221 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v221 + 80))+ *(void *)(v221 + 72) * v172, v229, v225);
            uint64_t v241 = v169;
            uint64_t v130 = v170 + v208;
            uint64_t v129 = v227 - 1;
          }
          while (v227 != 1);
          swift_bridgeObjectRelease();
          uint64_t v7 = v194;
          a2 = v193;
          uint64_t v77 = v196;
        }
        else
        {
          uint64_t v169 = MEMORY[0x263F8EE78];
        }
        uint64_t v123 = v211 + 1;
        uint64_t v124 = sub_20A5AF130(&qword_26AC69D58, sub_20A44DF90);
        uint64_t v125 = sub_20A5AF130(&qword_26AC69D50, sub_20A44DF90);
        MEMORY[0x21051E250](v169, v225, v124, v125);
        sub_20A44DD30();
        sub_20A5AF130(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
        int64_t v126 = v192;
        v122 = v123;
        sub_20A8C8810();
        sub_20A8C5F60();
        uint64_t result = (*v191)(v126, v200);
        uint64_t v68 = v189;
        if (v123 == (char *)v189) {
          goto LABEL_60;
        }
      }
      __break(1u);
      goto LABEL_62;
    }
  }
  else
  {
    uint64_t result = UIAccessibilityIsVoiceOverRunning();
    if (result) {
      uint64_t v70 = 0;
    }
    else {
      uint64_t v70 = v61;
    }
    if (!v69) {
      goto LABEL_68;
    }
    if (v70 == 0x8000000000000000 && v202 == -1) {
      goto LABEL_72;
    }
    uint64_t v71 = v70 / v202;
    if (v71 <= 2) {
      uint64_t v71 = 2;
    }
    uint64_t v72 = v189 * v71;
    if ((unsigned __int128)(v189 * (__int128)v71) >> 64 != (v189 * v71) >> 63) {
      goto LABEL_70;
    }
    if (v72 < 0)
    {
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      return result;
    }
    if (v72)
    {
      uint64_t v73 = 0;
      int64_t v192 = v202 & ~(v202 >> 63);
      v229 = (char *)(v197 + 16);
      v207 = (char *)v232 + 16;
      v206 = (void (**)(char *, uint64_t))((char *)v232 + 8);
      v205 = (void (**)(char *, uint64_t))(v197 + 8);
      uint64_t v204 = v221 + 32;
      uint64_t v189 = (uint64_t)(v231 + 8);
      v188 = (char *)v72;
      while (v73 != (char *)v72)
      {
        v242 = v73;
        uint64_t v241 = MEMORY[0x263F8EE78];
        uint64_t v78 = v223;
        swift_bridgeObjectRetain();
        uint64_t result = sub_20A68C6D4(0, v192, 0);
        uint64_t v79 = v202;
        if (v202 < 1) {
          goto LABEL_63;
        }
        v210 = v73;
        v199 = v73 + 1;
        uint64_t v209 = v224 + *(int *)(v195 + 32);
        uint64_t v80 = v78 + ((*(unsigned __int8 *)(v197 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v197 + 80));
        uint64_t v208 = *(void *)(v197 + 72);
        v231 = *(char **)(v197 + 16);
        uint64_t v81 = v222;
        uint64_t v82 = (uint64_t)v211;
        do
        {
          uint64_t v227 = v79;
          ((void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t))v231)(v234, v80, v240);
          uint64_t v83 = sub_20A8C3EC0();
          uint64_t v85 = *(void *)(v81 + 16);
          uint64_t v228 = v80;
          if (v85 && (unint64_t v86 = sub_20A4D1B24(v83, v84), (v87 & 1) != 0))
          {
            unint64_t v88 = v86;
            uint64_t v89 = *(void *)(v81 + 56);
            uint64_t v90 = sub_20A8C3E10();
            uint64_t v91 = *(void *)(v90 - 8);
            (*(void (**)(uint64_t, unint64_t, uint64_t))(v91 + 16))(v82, v89 + *(void *)(v91 + 72) * v88, v90);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v91 + 56))(v82, 0, 1, v90);
          }
          else
          {
            uint64_t v92 = sub_20A8C3E10();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v82, 1, 1, v92);
          }
          swift_bridgeObjectRelease();
          uint64_t v93 = v236;
          uint64_t v94 = v234;
          sub_20A5AE778(v212, v234, v224, v82, v236);
          uint64_t v95 = v235;
          uint64_t v96 = (void (*)(char *, char *, uint64_t))v231;
          ((void (*)(char *, uint64_t (*)(uint64_t), uint64_t))v231)(v235, v94, v240);
          v233 = MEMORY[0x263F7AEF0];
          sub_20A5AF5FC(v82, v239, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
          v232 = type metadata accessor for StockSparklineViewModel;
          uint64_t v97 = v237;
          sub_20A5AF5FC(v93, v237, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel);
          uint64_t v98 = *(void (**)(char *, char *, uint64_t))v207;
          uint64_t v99 = v217;
          (*(void (**)(char *, uint64_t, uint64_t))v207)(v238, v209, v217);
          uint64_t v100 = v215;
          v96(v215, v95, v240);
          uint64_t v101 = (int *)v216;
          uint64_t v102 = v239;
          uint64_t v103 = (uint64_t (*)(uint64_t))v233;
          sub_20A5AF5FC(v239, (uint64_t)&v100[*(int *)(v216 + 20)], &qword_26AC68FB0, (uint64_t (*)(uint64_t))v233);
          sub_20A5AF5FC(v97, (uint64_t)&v100[v101[6]], &qword_26AC754A0, v232);
          uint64_t v104 = v238;
          v98(&v100[v101[8]], v238, v99);
          v100[v101[9]] = 0;
          uint64_t v105 = v213;
          uint64_t v106 = v103;
          sub_20A5AF5FC(v102, v213, &qword_26AC68FB0, v103);
          uint64_t v107 = v219;
          uint64_t v108 = v235;
          sub_20A8C3E70();
          uint64_t v109 = v218;
          sub_20A5EC850(v105, v107, 9666786, 0xA300000000000000, v218);
          uint64_t v110 = v240;
          (*v206)(v104, v99);
          uint64_t v111 = v232;
          sub_20A5AF67C(v237, &qword_26AC754A0, v232);
          sub_20A5AF67C(v239, &qword_26AC68FB0, v106);
          int v112 = *v205;
          (*v205)(v108, v110);
          uint64_t v113 = v101[7];
          uint64_t v82 = (uint64_t)v211;
          sub_20A5AF6EC(v109, (uint64_t)&v100[v113], (uint64_t (*)(void))type metadata accessor for PriceViewModel);
          uint64_t v114 = (uint64_t)v100;
          uint64_t v115 = v214;
          sub_20A5AF6EC(v114, v214, (uint64_t (*)(void))type metadata accessor for StockViewModel);
          sub_20A494D04();
          uint64_t v117 = (uint64_t)v220 + *(int *)(v116 + 48);
          void *v220 = v210;
          sub_20A5AF754(v115, v117, (uint64_t (*)(void))type metadata accessor for StockViewModel);
          sub_20A5AF130(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
          sub_20A8C8320();
          sub_20A4C88D8(v115);
          sub_20A5AF67C(v236, &qword_26AC754A0, v111);
          sub_20A5AF67C(v82, &qword_26AC68FB0, (uint64_t (*)(uint64_t))v233);
          v112((char *)v234, v110);
          uint64_t v118 = v241;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_20A68C6D4(0, *(void *)(v118 + 16) + 1, 1);
            uint64_t v118 = v241;
          }
          uint64_t v119 = v228;
          unint64_t v121 = *(void *)(v118 + 16);
          unint64_t v120 = *(void *)(v118 + 24);
          uint64_t v81 = v222;
          if (v121 >= v120 >> 1)
          {
            sub_20A68C6D4(v120 > 1, v121 + 1, 1);
            uint64_t v118 = v241;
          }
          *(void *)(v118 + 16) = v121 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v221 + 32))(v118+ ((*(unsigned __int8 *)(v221 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v221 + 80))+ *(void *)(v221 + 72) * v121, v230, v225);
          uint64_t v241 = v118;
          uint64_t v80 = v119 + v208;
          uint64_t v79 = v227 - 1;
        }
        while (v227 != 1);
        swift_bridgeObjectRelease();
        uint64_t v74 = sub_20A5AF130(&qword_26AC69D58, sub_20A44DF90);
        uint64_t v75 = sub_20A5AF130(&qword_26AC69D50, sub_20A44DF90);
        MEMORY[0x21051E250](v118, v225, v74, v75);
        sub_20A44DD30();
        int64_t v76 = v190;
        sub_20A8C8810();
        sub_20A8C5F60();
        uint64_t result = (*(uint64_t (**)(int64_t, uint64_t))v189)(v76, v200);
        uint64_t v73 = v199;
        uint64_t v72 = (uint64_t)v188;
        uint64_t v7 = v194;
        a2 = v193;
        uint64_t v77 = v196;
        if (v199 == v188) {
          goto LABEL_60;
        }
      }
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
  }
  uint64_t v77 = v196;
LABEL_60:
  (*(void (**)(char *, char *, uint64_t))(v187 + 16))(v183, v201, v203);
  sub_20A44DD30();
  sub_20A5AF130(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
  v173 = v184;
  sub_20A8CBB20();
  sub_20A49F6B4();
  v175 = &v77[*(int *)(v174 + 48)];
  uint64_t v176 = v185;
  uint64_t v177 = v186;
  (*(void (**)(char *, char *, uint64_t))(v185 + 16))(v77, v173, v186);
  uint64_t v178 = *MEMORY[0x263F7D528];
  uint64_t v179 = sub_20A8C8B80();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v179 - 8) + 104))(v175, v178, v179);
  uint64_t v180 = v182;
  (*(void (**)(char *, void, uint64_t))(v182 + 104))(v77, *MEMORY[0x263F7D938], v7);
  a2(v77);
  (*(void (**)(char *, uint64_t))(v180 + 8))(v77, v7);
  (*(void (**)(char *, uint64_t))(v176 + 8))(v173, v177);
  return (*(uint64_t (**)(char *, uint64_t))(v187 + 8))(v201, v203);
}

uint64_t sub_20A5AE778@<X0>(uint64_t a1@<X2>, NSObject *a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v67 = a4;
  uint64_t v62 = a3;
  uint64_t v69 = a5;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A5AF7BC(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v61 = &v56[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v56[-v11];
  sub_20A5AF7BC(0, &qword_26AC7F4E0, MEMORY[0x263F7CB28], v7);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = &v56[-v14];
  uint64_t v68 = sub_20A8CDCD0();
  uint64_t v66 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  double v65 = &v56[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v17);
  double v63 = &v56[-v18];
  sub_20A5AF7BC(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], v7);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = &v56[-v20];
  uint64_t v22 = sub_20A8C3D00();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v64 = &v56[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = &v56[-v26];
  uint64_t v28 = sub_20A8C3EC0();
  if (*(void *)(a1 + 16) && (unint64_t v30 = sub_20A4D1B24(v28, v29), (v31 & 1) != 0))
  {
    (*(void (**)(unsigned char *, unint64_t, uint64_t))(v23 + 16))(v21, *(void *)(a1 + 56) + *(void *)(v23 + 72) * v30, v22);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v22);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    uint64_t v32 = (unint64_t *)&unk_26AC68F80;
    uint64_t v33 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AEB8];
    uint64_t v34 = (uint64_t)v21;
LABEL_9:
    sub_20A5AF67C(v34, v32, v33);
    uint64_t v39 = type metadata accessor for StockSparklineViewModel(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v69, 1, 1, v39);
  }
  uint64_t v60 = *(void (**)(char *, unsigned char *, uint64_t))(v23 + 32);
  v60(v27, v21, v22);
  uint64_t v35 = type metadata accessor for TickerPrewarmBlueprintModifier();
  __swift_project_boxed_opaque_existential_1((void *)(v62 + *(int *)(v35 + 36)), *(void *)(v62 + *(int *)(v35 + 36) + 24));
  uint64_t v36 = v67;
  sub_20A61E8FC(v27, v67, a2, (uint64_t)v15, 0.02);
  uint64_t v37 = v66;
  uint64_t v38 = v68;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v66 + 48))(v15, 1, v68) == 1)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
    uint64_t v32 = &qword_26AC7F4E0;
    uint64_t v33 = (uint64_t (*)(uint64_t))MEMORY[0x263F7CB28];
    uint64_t v34 = (uint64_t)v15;
    goto LABEL_9;
  }
  uint64_t v41 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v37 + 32);
  uint64_t v42 = v63;
  uint64_t v62 = v37 + 32;
  uint64_t v59 = v41;
  v41((uint64_t)v63, v15, v38);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v37 + 16))(v65, v42, v38);
  (*(void (**)(unsigned char *, char *, uint64_t))(v23 + 16))(v64, v27, v22);
  sub_20A5AF5FC(v36, (uint64_t)v12, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  uint64_t v43 = sub_20A8C3E10();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v44 + 48);
  if (v45(v12, 1, v43) == 1)
  {
    sub_20A5AF67C((uint64_t)v12, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    uint64_t v58 = 0;
    int v57 = 1;
  }
  else
  {
    uint64_t v58 = sub_20A8C3E00();
    int v57 = v46 & 1;
    (*(void (**)(unsigned char *, uint64_t))(v44 + 8))(v12, v43);
  }
  uint64_t v47 = v61;
  sub_20A5AF5FC(v67, (uint64_t)v61, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  if (v45(v47, 1, v43) == 1)
  {
    uint64_t v48 = v68;
    (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v63, v68);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
    sub_20A5AF67C((uint64_t)v47, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    uint64_t v49 = 0;
    char v50 = 1;
  }
  else
  {
    uint64_t v49 = sub_20A8C3D10();
    char v50 = v51 & 1;
    uint64_t v48 = v68;
    (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v63, v68);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
    (*(void (**)(unsigned char *, uint64_t))(v44 + 8))(v47, v43);
  }
  uint64_t v52 = v69;
  v59(v69, v65, v48);
  uint64_t v53 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v60((char *)(v52 + v53[8]), v64, v22);
  uint64_t v54 = v52 + v53[5];
  *(void *)uint64_t v54 = v58;
  *(unsigned char *)(v54 + 8) = v57;
  uint64_t v55 = v52 + v53[6];
  *(void *)uint64_t v55 = v49;
  *(unsigned char *)(v55 + 8) = v50;
  *(unsigned char *)(v52 + v53[7]) = 0;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v53 - 1) + 56))(v52, 0, 1, v53);
}

uint64_t sub_20A5AEF78(void *a1, void (*a2)(char *))
{
  sub_20A5AF4DC(0, &qword_26AC6A418, MEMORY[0x263F7D950]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  double v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v12 - v8;
  *(uint64_t *)((char *)&v12 - v8) = (uint64_t)a1;
  (*(void (**)(char *, void, uint64_t, double))(v6 + 104))((char *)&v12 - v8, *MEMORY[0x263F7D930], v5, v7);
  id v10 = a1;
  a2(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_20A5AF0A0()
{
  return sub_20A5AF130((unint64_t *)&unk_26AC7A3B0, (void (*)(uint64_t))type metadata accessor for TickerPrewarmBlueprintModifier);
}

uint64_t sub_20A5AF0E8()
{
  return sub_20A5AF130(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
}

uint64_t sub_20A5AF130(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A5AF178()
{
  unint64_t v1 = (int *)(type metadata accessor for TickerPrewarmBlueprintModifier() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  __swift_destroy_boxed_opaque_existential_1(v2 + 56);
  __swift_destroy_boxed_opaque_existential_1(v2 + 96);
  uint64_t v3 = v2 + v1[10];
  uint64_t v4 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[11]);

  return swift_deallocObject();
}

uint64_t sub_20A5AF290(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TickerPrewarmBlueprintModifier() - 8);
  return sub_20A5AC77C(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_20A5AF2FC()
{
  uint64_t v1 = (int *)(type metadata accessor for TickerPrewarmBlueprintModifier() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  uint64_t v3 = v0 + v2;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v2 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + v2 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + v2 + 96);
  unint64_t v4 = v0 + v2 + v1[10];
  uint64_t v5 = sub_20A8C3410();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[11]);

  return swift_deallocObject();
}

uint64_t sub_20A5AF41C(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TickerPrewarmBlueprintModifier() - 8);
  return sub_20A5ACB3C(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_20A5AF49C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A5AF4D4(void *a1)
{
  return sub_20A5AEF78(a1, *(void (**)(char *))(v1 + 16));
}

void sub_20A5AF4DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for TickerSectionDescriptor;
    v8[1] = type metadata accessor for TickerModel();
    v8[2] = sub_20A44DD30();
    v8[3] = sub_20A5AF130(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A5AF59C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A5AF4DC(255, (unint64_t *)&qword_26AC69EE0, MEMORY[0x263F7D450]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A5AF5FC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_20A5AF7BC(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A5AF67C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A5AF7BC(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A5AF6EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A5AF754(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_20A5AF7BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A5AF820()
{
  uint64_t v1 = (int *)(type metadata accessor for TickerPrewarmBlueprintModifier() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  __swift_destroy_boxed_opaque_existential_1(v2 + 56);
  __swift_destroy_boxed_opaque_existential_1(v2 + 96);
  uint64_t v3 = v2 + v1[10];
  uint64_t v4 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[11]);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A5AF954@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for TickerPrewarmBlueprintModifier() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_20A5AC928(a1, v2 + v6, *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)), a2);
}

ValueMetadata *type metadata accessor for TickerPrewarmBlueprintModifier.Results()
{
  return &type metadata for TickerPrewarmBlueprintModifier.Results;
}

uint64_t StockChartLoadingState.$state.getter()
{
  swift_retain();
  uint64_t v0 = sub_20A8C61A0();
  swift_release();
  return v0;
}

uint64_t StockChartLoadingState.state.getter()
{
  swift_retain();
  sub_20A8C6180();
  swift_release();
  return v1;
}

uint64_t sub_20A5AFA8C@<X0>(void *a1@<X8>)
{
  swift_retain();
  sub_20A8C6180();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_20A5AFADC(id *a1)
{
  return swift_release();
}

uint64_t StockChartLoadingState.state.setter(void *a1)
{
  return swift_release();
}

id sub_20A5AFB84(id result)
{
  if ((unint64_t)result >= 3) {
    return result;
  }
  return result;
}

void sub_20A5AFB94(id a1)
{
  if ((unint64_t)a1 >= 3) {
}
  }

void (*StockChartLoadingState.state.modify(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = *(void *)(v1 + 16);
  swift_retain();
  v3[5] = sub_20A8C6170();
  return sub_20A5AFC10;
}

void sub_20A5AFC10(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_release();

  free(v1);
}

uint64_t StockChartLoadingState.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  sub_20A5AFD1C();
  swift_allocObject();
  *(void *)(v0 + 16) = sub_20A8C6160();
  return v0;
}

uint64_t StockChartLoadingState.init()()
{
  sub_20A5AFD1C();
  swift_allocObject();
  *(void *)(v0 + 16) = sub_20A8C6160();
  return v0;
}

void sub_20A5AFD1C()
{
  if (!qword_26AC69790)
  {
    unint64_t v0 = sub_20A8C61C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69790);
    }
  }
}

uint64_t StockChartLoadingState.deinit()
{
  swift_release();
  return v0;
}

uint64_t StockChartLoadingState.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t StockChartLoadingState.description.getter()
{
  swift_retain();
  sub_20A8C6180();
  swift_release();
  if (!v2)
  {
    unsigned int v1 = 1953063287;
    return v1 | 0x676E6900000000;
  }
  if (v2 == (void *)1)
  {
    unsigned int v1 = 1684107116;
    return v1 | 0x676E6900000000;
  }
  if (v2 == (void *)2) {
    return 0x64656873696E6966;
  }
  sub_20A5AFB94(v2);
  return 0x64656C696166;
}

uint64_t sub_20A5AFE78()
{
  return StockChartLoadingState.description.getter();
}

uint64_t type metadata accessor for StockChartLoadingState()
{
  return self;
}

uint64_t method lookup function for StockChartLoadingState(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StockChartLoadingState);
}

uint64_t dispatch thunk of StockChartLoadingState.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

void *initializeBufferWithCopyOfBuffer for StockChartLoadingState.State(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for StockChartLoadingState.State(void **a1)
{
  unsigned int v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **assignWithCopy for StockChartLoadingState.State(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF) {
      id v7 = v4;
    }
    *a1 = v4;
  }
  else if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    *a1 = *a2;
  }
  else
  {
    id v5 = v4;
    unint64_t v6 = *a1;
    *a1 = v4;
  }
  return a1;
}

void **assignWithTake for StockChartLoadingState.State(void **a1, unint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for StockChartLoadingState.State(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for StockChartLoadingState.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_20A5B00EC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_20A5B0104(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for StockChartLoadingState.State()
{
  return &type metadata for StockChartLoadingState.State;
}

double sub_20A5B0138@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_20A8CADF0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGFloat v12 = 0.0;
  BOOL v13 = *(unsigned char *)(a2 + *(int *)(type metadata accessor for StockListSectionHeaderViewLayoutOptions() + 20)) == 1;
  uint64_t v41 = v8;
  if (v13)
  {
    uint64_t v14 = (void *)sub_20A8C9790();
    unint64_t v15 = (unint64_t)objc_msgSend(v14, sel_horizontalSizeClass);

    if (v15 <= 2) {
      CGFloat v12 = dbl_20A8E08F8[v15];
    }
  }
  __swift_project_boxed_opaque_existential_1((void *)(v4 + 16), *(void *)(v4 + 40));
  uint64_t v16 = *(void *)a1;
  unint64_t v17 = *(void *)(a1 + 8);
  v50[0] = *(_OWORD *)(a1 + 16);
  uint64_t v49 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_20A455C74((uint64_t)v50);
  sub_20A455CA0((uint64_t)&v49);
  sub_20A45F71C((uint64_t)v47);
  sub_20A66EB78(v16, v17, v47, v48);
  sub_20A5B0648((uint64_t)v47);
  swift_bridgeObjectRelease();
  sub_20A5B0678((uint64_t)v50);
  sub_20A5B06A4((uint64_t)&v49);
  double v18 = *(double *)&v48[5];
  sub_20A8C9710();
  double v20 = v19;
  uint64_t v21 = (void *)sub_20A8C9790();
  id v22 = objc_msgSend(v21, (SEL)&selRef_CGImage);

  double v23 = 16.0;
  if (v22 != (id)2) {
    double v23 = v20;
  }
  CGFloat v24 = v23 - v18;
  CGFloat v25 = *(double *)&v48[2];
  CGFloat v26 = *(double *)&v48[3];
  sub_20A8C96E0();
  sub_20A8CADC0();
  double v28 = v27;
  double v30 = v29;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v41);
  sub_20A8C9720();
  double v32 = v31 - (v28 + v30);
  v51.origin.x = v24;
  v51.origin.y = v12;
  v51.size.width = v25;
  v51.size.height = v26;
  CGRectGetHeight(v51);
  MEMORY[0x270FA5388](v33);
  *(&v40 - 10) = 0;
  *(&v40 - 9) = 0;
  *((double *)&v40 - 8) = v32;
  *(&v40 - 7) = v34;
  *((CGFloat *)&v40 - 6) = v24;
  *((CGFloat *)&v40 - 5) = v12;
  *((CGFloat *)&v40 - 4) = v25;
  *((CGFloat *)&v40 - 3) = v26;
  *(&v40 - 2) = a2;
  sub_20A8C96A0();
  uint64_t v35 = v46;
  double result = *(double *)&v42;
  long long v37 = v43;
  long long v38 = v44;
  long long v39 = v45;
  *(_OWORD *)a3 = v42;
  *(_OWORD *)(a3 + 16) = v37;
  *(_OWORD *)(a3 + 32) = v38;
  *(_OWORD *)(a3 + 48) = v39;
  *(void *)(a3 + 64) = v35;
  return result;
}

uint64_t sub_20A5B0444@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_20A8C8180();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *MEMORY[0x263F7D268];
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t, double))(v3 + 104);
  v8(v6, v7, v2, v4);
  sub_20A8C8170();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  unint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v6, v2);
  ((void (*)(char *, uint64_t, uint64_t))v8)(v6, v7, v2);
  sub_20A8C8170();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  v17(v6, v2);
  uint64_t result = sub_20A8C9790();
  *a1 = v10;
  a1[1] = v12;
  a1[2] = v14;
  a1[3] = v16;
  a1[4] = v19;
  a1[5] = v21;
  a1[6] = v23;
  a1[7] = v25;
  a1[8] = result;
  return result;
}

uint64_t type metadata accessor for StockListSectionHeaderViewLayoutAttributesFactory()
{
  return self;
}

uint64_t sub_20A5B0648(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);

  return a1;
}

uint64_t sub_20A5B0678(uint64_t a1)
{
  return a1;
}

uint64_t sub_20A5B06A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_20A5B06D0@<X0>(void *a1@<X8>)
{
  return sub_20A5B0444(a1);
}

char *sub_20A5B06E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_20A8C2530();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR____TtC8StocksUI24WebViewControllerFactory_resolver), *(void *)(v2 + OBJC_IVAR____TtC8StocksUI24WebViewControllerFactory_resolver + 24));
  sub_20A43F7E0(0, &qword_26AC782C0);
  uint64_t result = (char *)sub_20A8C5BB0();
  if (v32)
  {
    sub_20A42BEBC(&v31, (uint64_t)v33);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    sub_20A4342F4((uint64_t)v33, (uint64_t)&v31);
    uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v31, v32);
    double v12 = MEMORY[0x270FA5388](v11);
    uint64_t v14 = (void *)((char *)&v28[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v15 + 16))(v14, v12);
    uint64_t v16 = *v14;
    uint64_t v29 = type metadata accessor for WebViewControllerStyler();
    double v30 = &off_26BE635D0;
    v28[0] = v16;
    unint64_t v17 = (char *)objc_allocWithZone((Class)type metadata accessor for WebViewController());
    uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v28, v29);
    double v19 = MEMORY[0x270FA5388](v18);
    uint64_t v21 = (void *)((char *)&v28[-1] - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v22 + 16))(v21, v19);
    uint64_t v23 = (char *)sub_20A5B0C8C((uint64_t)v9, *v21, v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
    uint64_t result = (char *)objc_msgSend(v23, sel_view);
    if (result)
    {
      uint64_t v24 = result;
      objc_msgSend(result, sel_setAutoresizingMask_, 18);

      uint64_t v25 = (uint64_t)&v23[OBJC_IVAR____TtC8StocksUI17WebViewController_webViewCoordinator];
      swift_beginAccess();
      sub_20A5B0E0C(a2, v25);
      swift_endAccess();
      *(void *)&v23[OBJC_IVAR____TtC8StocksUI17WebViewController_navigator] = *(void *)(v3
                                                                                          + OBJC_IVAR____TtC8StocksUI24WebViewControllerFactory_navigator);
      swift_retain();
      swift_release();
      __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR____TtC8StocksUI24WebViewControllerFactory_sceneStateManager), *(void *)(v3 + OBJC_IVAR____TtC8StocksUI24WebViewControllerFactory_sceneStateManager + 24));
      sub_20A5B0E70();
      CGFloat v26 = v23;
      sub_20A8C62B0();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
      return v26;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for WebViewControllerFactory()
{
  return self;
}

id sub_20A5B0C8C(uint64_t a1, uint64_t a2, char *a3)
{
  ObjectType = (objc_class *)swift_getObjectType();
  v16[3] = type metadata accessor for WebViewControllerStyler();
  v16[4] = &off_26BE635D0;
  v16[0] = a2;
  uint64_t v7 = &a3[OBJC_IVAR____TtC8StocksUI17WebViewController_webViewCoordinator];
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((void *)v7 + 4) = 0;
  *(void *)&a3[OBJC_IVAR____TtC8StocksUI17WebViewController_navigator] = 0;
  uint64_t v8 = &a3[OBJC_IVAR____TtC8StocksUI17WebViewController_session];
  uint64_t v9 = type metadata accessor for WebViewSession();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_20A4342F4((uint64_t)v16, (uint64_t)&a3[OBJC_IVAR____TtC8StocksUI17WebViewController_styler]);
  uint64_t v10 = (void *)sub_20A8C24D0();
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F16988]), sel_init);
  v15.receiver = a3;
  v15.super_class = ObjectType;
  id v12 = objc_msgSendSuper2(&v15, sel_initWithURL_configuration_, v10, v11);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  uint64_t v13 = sub_20A8C2530();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
  return v12;
}

uint64_t sub_20A5B0E0C(uint64_t a1, uint64_t a2)
{
  sub_20A54A718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_20A5B0E70()
{
  unint64_t result = qword_26763C428;
  if (!qword_26763C428)
  {
    type metadata accessor for WebViewController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C428);
  }
  return result;
}

uint64_t sub_20A5B0EC8()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A5B0F98()
{
  sub_20A8CE360();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A5B1050()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A5B111C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_20A5B13DC();
  *a1 = result;
  return result;
}

void sub_20A5B114C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEA00000000007365;
  uint64_t v3 = 0x69726F7453706F74;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6B636F7473;
      goto LABEL_3;
    case 2:
      *a1 = 0x64657461727563;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 25697;
      a1[1] = 0xE200000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_20A5B11E0()
{
  unint64_t result = qword_26AC70FD8;
  if (!qword_26AC70FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC70FD8);
  }
  return result;
}

uint64_t sub_20A5B1234(unsigned __int8 *a1, char *a2)
{
  return sub_20A44F5E4(*a1, *a2);
}

uint64_t sub_20A5B1240()
{
  return sub_20A8CE5A0();
}

uint64_t sub_20A5B12A0()
{
  return sub_20A8CE580();
}

unint64_t sub_20A5B12F0()
{
  unint64_t result = qword_26AC70FE0;
  if (!qword_26AC70FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC70FE0);
  }
  return result;
}

void sub_20A5B1344(void *a1@<X8>)
{
  *a1 = &unk_26BE5ECD8;
}

uint64_t sub_20A5B1354()
{
  uint64_t result = 0x726F745320706F54;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6B636F7453;
      break;
    case 2:
      uint64_t result = 0x64657461727543;
      break;
    case 3:
      uint64_t result = 25665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A5B13DC()
{
  unint64_t v0 = sub_20A8CF5B0();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t getEnumTagSinglePayload for ForYouFeedGroupKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ForYouFeedGroupKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A5B1584);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedGroupKind()
{
  return &type metadata for ForYouFeedGroupKind;
}

unint64_t sub_20A5B15C0()
{
  unint64_t result = qword_26763C430;
  if (!qword_26763C430)
  {
    sub_20A5B1618();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C430);
  }
  return result;
}

void sub_20A5B1618()
{
  if (!qword_26763C438)
  {
    unint64_t v0 = sub_20A8CE6C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763C438);
    }
  }
}

uint64_t sub_20A5B1670(unint64_t a1, uint64_t a2, void *a3)
{
  double v4 = v3;
  int v8 = *(void **)((char *)a3 + OBJC_IVAR____TtC8StocksUI15QuoteDetailView_scrollView);
  objc_msgSend(v8, sel_setFrame_, *(double *)(a2 + 32), *(double *)(a2 + 40), *(double *)(a2 + 48), *(double *)(a2 + 56));
  double v9 = *(double *)(a2 + 200);
  double v10 = *(double *)(a2 + 208);
  objc_msgSend(v8, sel_setContentSize_, v9, v10);
  objc_msgSend(v8, sel_setContentInset_, *(double *)(a2 + 216), *(double *)(a2 + 224), *(double *)(a2 + 232), *(double *)(a2 + 240));
  if (*(unsigned char *)(a2 + 264))
  {
    uint64_t v11 = *(void *)&v4 + OBJC_IVAR____TtC8StocksUI23QuoteDetailViewRenderer_lastKnownContentOffset;
    *(void *)uint64_t v11 = 0;
    *(void *)(v11 + 8) = 0;
    *(unsigned char *)(v11 + 16) = 1;
  }
  id v12 = (double *)(*(void *)&v4 + OBJC_IVAR____TtC8StocksUI23QuoteDetailViewRenderer_lastKnownContentOffset);
  char v13 = *(unsigned char *)(*(void *)&v4 + OBJC_IVAR____TtC8StocksUI23QuoteDetailViewRenderer_lastKnownContentOffset + 16);
  uint64_t v104 = a3;
  unint64_t v105 = a1;
  if (v13)
  {
    objc_msgSend(v8, sel_contentOffset);
    sub_20A8CEEB0();
  }
  else
  {
    double v14 = *v12;
    double v15 = v12[1];
  }
  objc_msgSend(v8, sel_setContentOffset_, v14, v15);
  double v102 = v4;
  objc_msgSend(v8, sel_setDelegate_, *(void *)&v4);
  uint64_t v16 = *(unsigned __int8 *)(a2 + 64);
  id v106 = v8;
  objc_msgSend(v8, sel_setScrollEnabled_, v16);
  double v103 = *(double *)&a2;
  uint64_t v101 = *(void *)(a2 + 88);
  uint64_t v17 = *(void *)(v101 + 16);
  double v112 = MEMORY[0x263F8EE78];
  uint64_t v18 = (objc_class *)type metadata accessor for QuoteDetailColumnAccessibilityElement();
  uint64_t v19 = v17 + 1;
  do
  {
    id v20 = objc_msgSend(objc_allocWithZone(v18), sel_initWithAccessibilityContainer_, v106);
    objc_msgSend(v20, sel_setIsAccessibilityElement_, 0);
    objc_msgSend(v20, sel_setShouldGroupAccessibilityChildren_, 1);
    id v21 = v20;
    objc_msgSend(v106, sel_bounds);
    objc_msgSend(v21, sel_setAccessibilityFrameInContainerSpace_);

    uint64_t v22 = (void *)sub_20A8CE5D0();
    v111.receiver = v21;
    v111.super_class = v18;
    objc_msgSendSuper2(&v111, sel_setAccessibilityElements_, v22);

    id v23 = v21;
    MEMORY[0x2105268E0]();
    if (*(void *)((*(void *)&v112 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)&v112 & 0xFFFFFFFFFFFFFF8)
                                                                                   + 0x18) >> 1)
      sub_20A8CE690();
    sub_20A8CE6B0();
    sub_20A8CE620();

    --v19;
  }
  while (v19);
  uint64_t v110 = MEMORY[0x263F8EE80];
  MEMORY[0x270FA5388](v24);
  double v25 = v102;
  double v26 = v103;
  *(double *)uint64_t v96 = v103;
  v96[1] = &v112;
  double v28 = v104;
  unint64_t v27 = v105;
  double v97 = v102;
  uint64_t v98 = v104;
  unint64_t v99 = v105;
  double v100 = COERCE_DOUBLE(&v110);
  sub_20A6DF34C((void (*)(uint64_t, id))sub_20A5B3ACC, (uint64_t)&v95);
  MEMORY[0x270FA5388](v29);
  double v97 = v26;
  uint64_t v98 = &v110;
  unint64_t v99 = v27;
  double v100 = v25;
  sub_20A6DF358((void (*)(uint64_t, id))sub_20A5B3ADC, (uint64_t)v96);
  double v30 = *(void **)((char *)v28 + OBJC_IVAR____TtC8StocksUI15QuoteDetailView_separatorsView);
  objc_msgSend(v30, sel_setFrame_, 0.0, 0.0, v9, v10);
  long long v31 = (void *)(*(void *)&v25 + OBJC_IVAR____TtC8StocksUI23QuoteDetailViewRenderer_styler);
  swift_beginAccess();
  uint64_t v32 = __swift_project_boxed_opaque_existential_1(v31, v31[3]);
  uint64_t v34 = *(void *)(*v32 + 40);
  uint64_t v33 = *(void *)(*v32 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v32 + 16), v34);
  uint64_t v35 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v33 + 16) + 136))(v34);
  id v36 = objc_msgSend(v30, sel_layer);
  self;
  long long v37 = (void *)swift_dynamicCastObjCClassUnconditional();
  id v38 = objc_msgSend(v35, sel_CGColor);
  objc_msgSend(v37, sel_setFillColor_, v38);

  sub_20A42CFF0(0, (unint64_t *)&unk_26AC7F8B0);
  uint64_t v39 = swift_bridgeObjectRetain();
  id v40 = sub_20A5B2B88(v39);
  id v41 = objc_msgSend(v30, sel_layer);
  self;
  long long v42 = (void *)swift_dynamicCastObjCClassUnconditional();
  id v43 = objc_msgSend(v40, sel_CGPath);
  objc_msgSend(v42, sel_setPath_, v43);

  sub_20A5B3AE8(*(void *)&v26 + 96, (uint64_t)v113);
  sub_20A5B3AE8((uint64_t)v113, (uint64_t)v114);
  if (v115)
  {
    objc_msgSend(*(id *)((char *)v28 + OBJC_IVAR____TtC8StocksUI15QuoteDetailView_attributionButton), sel_setHidden_, 1);
  }
  else
  {
    double v44 = *(double *)v114;
    double v45 = *(double *)&v114[1];
    double v46 = *(double *)&v114[2];
    double v47 = *(double *)&v114[3];
    double v48 = *(double *)&v114[4];
    double v49 = *(double *)&v114[5];
    double v50 = *(double *)&v114[6];
    double v51 = *(double *)&v114[7];
    double v102 = *(double *)&v114[9];
    double v103 = *(double *)&v114[11];
    uint64_t v52 = (unint64_t *)(v105 + *(int *)(type metadata accessor for QuoteDetailViewModel() + 24));
    unint64_t v105 = *v52;
    objc_msgSend(*(id *)((char *)v28 + OBJC_IVAR____TtC8StocksUI15QuoteDetailView_attributionButtonContainerView), sel_setFrame_, v48, v49, v50, v51);
    uint64_t v53 = *(void **)((char *)v28 + OBJC_IVAR____TtC8StocksUI15QuoteDetailView_attributionButton);
    objc_msgSend(v53, sel_setFrame_, v44, v45, v46, v47);
    uint64_t v54 = (void *)v52[2];
    if (v54)
    {
      id v55 = v54;
      objc_msgSend(v53, sel_setImage_forState_, v55, 0);
      v116.origin.x = v44;
      v116.origin.y = v45;
      v116.size.width = v46;
      v116.size.height = v47;
      double Height = CGRectGetHeight(v116);
      objc_msgSend(v55, sel_size);
      objc_msgSend(v53, sel_setImageEdgeInsets_, (Height - v57) * 0.5, v102, (Height - v57) * 0.5, v103);
      objc_msgSend(v53, sel_setSemanticContentAttribute_, 4);
    }
    sub_20A84B2B4(v53);
    uint64_t v58 = (void *)*__swift_project_boxed_opaque_existential_1(v31, v31[3]);
    sub_20A42CF04();
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = xmmword_20A8D4540;
    uint64_t v60 = (void *)*MEMORY[0x263F814F0];
    *(void *)(v59 + 32) = *MEMORY[0x263F814F0];
    uint64_t v61 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
    swift_bridgeObjectRetain();
    id v62 = v60;
    *(void *)(v59 + 40) = sub_20A8CEE20();
    double v63 = (void *)*MEMORY[0x263F81500];
    *(void *)(v59 + 64) = v61;
    *(void *)(v59 + 72) = v63;
    uint64_t v64 = v58 + 2;
    uint64_t v65 = v58[5];
    uint64_t v66 = v58[6];
    __swift_project_boxed_opaque_existential_1(v64, v65);
    uint64_t v67 = *(void *)(v66 + 16);
    uint64_t v68 = *(uint64_t (**)(uint64_t, uint64_t))(v67 + 96);
    id v69 = v63;
    uint64_t v70 = v68(v65, v67);
    *(void *)(v59 + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
    *(void *)(v59 + 80) = v70;
    sub_20A4CF8B0(v59);
    id v71 = objc_allocWithZone(MEMORY[0x263F086A0]);
    uint64_t v72 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_20A5B3BA4((unint64_t *)&qword_26AC7F9F8, 255, type metadata accessor for Key);
    uint64_t v73 = (void *)sub_20A8CE170();
    swift_bridgeObjectRelease();
    id v74 = objc_msgSend(v71, sel_initWithString_attributes_, v72, v73);

    objc_msgSend(v53, sel_setAttributedTitle_forState_, v74, 0);
    objc_msgSend(v53, sel_setHidden_, 0);
  }
  double v75 = v112;
  if (*(void *)&v112 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain_n();
    uint64_t v76 = sub_20A8CF540();
    swift_bridgeObjectRelease();
    if (v76) {
      goto LABEL_17;
    }
LABEL_38:
    swift_bridgeObjectRelease_n();
    unint64_t v92 = swift_bridgeObjectRetain();
    sub_20A4A64DC(v92);
    swift_bridgeObjectRelease();
    uint64_t v93 = (void *)sub_20A8CE5D0();
    swift_bridgeObjectRelease();
    objc_msgSend(v106, sel_setAccessibilityElements_, v93);

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v76 = *(void *)((*(void *)&v112 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v76) {
    goto LABEL_38;
  }
LABEL_17:
  uint64_t v77 = 0;
  uint64_t v104 = 0;
  unint64_t v105 = *(void *)&v75 & 0xC000000000000001;
  uint64_t v101 = *(void *)&v75 + 32;
  double v102 = v75;
  *(void *)&double v103 = MEMORY[0x263F8EE58] + 8;
  while (1)
  {
    while (1)
    {
      if (v105) {
        id v78 = (id)MEMORY[0x210527700](v77, *(void *)&v75);
      }
      else {
        id v78 = *(id *)(v101 + 8 * v77);
      }
      uint64_t v79 = v78;
      if (__OFADD__(v77++, 1))
      {
        __break(1u);
        goto LABEL_37;
      }
      id v81 = objc_msgSend(v78, sel_accessibilityElements);
      if (v81) {
        break;
      }

LABEL_19:
      if (v77 == v76) {
        goto LABEL_38;
      }
    }
    uint64_t v82 = v81;
    uint64_t v83 = v76;
    uint64_t v84 = sub_20A8CE5E0();

    unint64_t v109 = MEMORY[0x263F8EE78];
    sub_20A8CF470();
    uint64_t v85 = *(void *)(v84 + 16);
    if (v85)
    {
      uint64_t v86 = v84 + 32;
      while (1)
      {
        sub_20A4ED764(v86, (uint64_t)v108);
        sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FA30);
        if (!swift_dynamicCast()) {
          break;
        }
        sub_20A8CF450();
        sub_20A8CF480();
        sub_20A8CF490();
        sub_20A8CF460();
        v86 += 32;
        if (!--v85) {
          goto LABEL_29;
        }
      }
      uint64_t v107 = 0;
      swift_release();
      uint64_t v91 = v107;

      swift_bridgeObjectRelease();
      double v75 = v102;
      uint64_t v76 = v83;
      goto LABEL_19;
    }
LABEL_29:
    unint64_t v87 = v109;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v76 = v83;
    if ((v87 & 0x8000000000000000) != 0 || (unint64_t v88 = (void *)v87, (v87 & 0x4000000000000000) != 0))
    {
      unint64_t v88 = sub_20A75C6CC(v87);
      swift_release();
    }
    v108[0] = (uint64_t)v88;
    uint64_t v89 = v104;
    sub_20A5B2EC0(v108);
    uint64_t v104 = v89;
    if (v89) {
      break;
    }
    swift_release();
    sub_20A4A64DC(v108[0]);
    swift_release();
    uint64_t v90 = (void *)sub_20A8CE5D0();
    swift_bridgeObjectRelease();
    objc_msgSend(v79, sel_setAccessibilityElements_, v90);

    double v75 = v102;
    if (v77 == v76) {
      goto LABEL_38;
    }
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_20A5B2204(unsigned __int8 a1, void *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  unint64_t v13 = *(void *)(a3 + 72);
  if (!*(void *)(v13 + 16))
  {
    __break(1u);
    goto LABEL_15;
  }
  double v10 = a8;
  uint64_t v11 = a5;
  int v8 = a2;
  unsigned __int8 v12 = a1;
  unint64_t v15 = sub_20A4D1C34(a1);
  if ((v16 & 1) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v17 = *(void *)(v13 + 56) + 48 * v15;
  double v18 = *(double *)v17;
  double v19 = *(double *)(v17 + 8);
  double v20 = *(double *)(v17 + 16);
  double v21 = *(double *)(v17 + 24);
  unint64_t v13 = *(void *)(v17 + 40);
  id v9 = *(id *)(v17 + 32);
  objc_msgSend(v8, sel_setFrame_, v18, v19, v20, v21);
  objc_msgSend(v8, sel_setIsAccessibilityElement_, 0);
  uint64_t v22 = *a4;
  if ((*a4 & 0xC000000000000001) == 0)
  {
    if ((v13 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v13 < *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v23 = *(id *)(v22 + 8 * v13 + 32);
      goto LABEL_7;
    }
    __break(1u);
LABEL_19:
    unint64_t v13 = (unint64_t)sub_20A46E07C(0, *(void *)(v13 + 16) + 1, 1, (void *)v13);
    goto LABEL_9;
  }
LABEL_16:
  id v23 = (id)MEMORY[0x210527700](v13);
LABEL_7:
  uint64_t v24 = v23;
  double v25 = (objc_class *)type metadata accessor for QuoteDetailViewLabelAccessibilityElement();
  double v26 = (char *)objc_msgSend(objc_allocWithZone(v25), sel_initWithAccessibilityContainer_, v24);
  *(void *)&v26[OBJC_IVAR____TtC8StocksUI40QuoteDetailViewLabelAccessibilityElement_delegate + 8] = &off_26BE66338;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  unint64_t v27 = v26;
  sub_20A5766F0(v12);
  swift_bridgeObjectRelease();
  double v28 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_setAccessibilityLabel_, v28);

  uint64_t v29 = v27;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v61 = *v10;
  *double v10 = 0x8000000000000000;
  sub_20A7A45BC((uint64_t)v29, v12, isUniquelyReferenced_nonNull_native);
  *double v10 = v61;
  swift_bridgeObjectRelease();
  double v10 = v24;
  id v31 = objc_msgSend(v10, sel_accessibilityElements);
  uint64_t v59 = v29;
  id v60 = v8;
  if (!v31)
  {
    objc_msgSend(v10, sel_setAccessibilityElements_, 0);

    goto LABEL_13;
  }
  uint64_t v32 = v31;
  unint64_t v13 = sub_20A8CE5E0();

  id v62 = v25;
  *(void *)&long long v61 = v29;
  uint64_t v33 = v29;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_19;
  }
LABEL_9:
  unint64_t v35 = *(void *)(v13 + 16);
  unint64_t v34 = *(void *)(v13 + 24);
  if (v35 >= v34 >> 1) {
    unint64_t v13 = (unint64_t)sub_20A46E07C((void *)(v34 > 1), v35 + 1, 1, (void *)v13);
  }
  *(void *)(v13 + 16) = v35 + 1;
  sub_20A441D28(&v61, (_OWORD *)(v13 + 32 * v35 + 32));
  id v36 = (void *)sub_20A8CE5D0();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setAccessibilityElements_, v36);

LABEL_13:
  uint64_t v37 = v11 + OBJC_IVAR____TtC8StocksUI23QuoteDetailViewRenderer_styler;
  swift_beginAccess();
  sub_20A4342F4(v37, (uint64_t)&v61);
  id v38 = __swift_project_boxed_opaque_existential_1(&v61, (uint64_t)v62);
  id v39 = objc_msgSend(v9, sel_string);
  sub_20A8CE280();

  id v40 = (void *)*v38;
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v58 = v9;
  long long v42 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  uint64_t v43 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  swift_bridgeObjectRetain();
  id v44 = v42;
  *(void *)(inited + 40) = sub_20A8CEE20();
  double v45 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v43;
  *(void *)(inited + 72) = v45;
  double v46 = v40 + 2;
  uint64_t v47 = v40[5];
  uint64_t v48 = v40[6];
  __swift_project_boxed_opaque_existential_1(v46, v47);
  uint64_t v49 = *(void *)(v48 + 16);
  double v50 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 184);
  id v51 = v45;
  uint64_t v52 = v50(v47, v49);
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v52;
  sub_20A4CF8B0(inited);
  id v53 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v54 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A5B3BA4((unint64_t *)&qword_26AC7F9F8, 255, type metadata accessor for Key);
  id v55 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v56 = objc_msgSend(v53, sel_initWithString_attributes_, v54, v55);
  swift_bridgeObjectRelease();

  objc_msgSend(v60, sel_setAttributedText_, v56);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v61);
}

unint64_t sub_20A5B27C4(unint64_t result, void *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = *(void *)(a3 + 80);
  if (!*(void *)(v6 + 16))
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v10 = result;
  uint64_t result = sub_20A4D1C34(result);
  if ((v11 & 1) == 0)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  uint64_t v12 = *(void *)(v6 + 56) + 48 * result;
  double v13 = *(double *)v12;
  double v14 = *(double *)(v12 + 8);
  double v15 = *(double *)(v12 + 16);
  double v16 = *(double *)(v12 + 24);
  id v17 = *(id *)(v12 + 32);
  objc_msgSend(a2, sel_setFrame_, v13, v14, v15, v16);
  objc_msgSend(a2, sel_setIsAccessibilityElement_, 0);
  uint64_t v18 = *a4;
  if (*(void *)(*a4 + 16))
  {
    unint64_t v19 = sub_20A4D1C34(v10);
    if (v20)
    {
      double v21 = *(void **)(*(void *)(v18 + 56) + 8 * v19);
      swift_unknownObjectWeakAssign();
      id v22 = v21;
      sub_20A577278(v10, 1);
      id v23 = (void *)sub_20A8CE240();
      swift_bridgeObjectRelease();
      objc_msgSend(v22, sel_setAccessibilityValue_, v23);
    }
  }
  uint64_t v24 = a6 + OBJC_IVAR____TtC8StocksUI23QuoteDetailViewRenderer_styler;
  swift_beginAccess();
  sub_20A4342F4(v24, (uint64_t)v45);
  double v25 = __swift_project_boxed_opaque_existential_1(v45, v45[3]);
  id v26 = objc_msgSend(v17, sel_string);
  sub_20A8CE280();

  unint64_t v27 = (void *)*v25;
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v29 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  uint64_t v30 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  swift_bridgeObjectRetain();
  id v31 = v29;
  *(void *)(inited + 40) = sub_20A8CEE30();
  uint64_t v32 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v30;
  *(void *)(inited + 72) = v32;
  uint64_t v33 = v27 + 2;
  uint64_t v34 = v27[5];
  uint64_t v35 = v27[6];
  __swift_project_boxed_opaque_existential_1(v33, v34);
  uint64_t v36 = *(void *)(v35 + 16);
  id v44 = v17;
  uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 40);
  id v38 = v32;
  uint64_t v39 = v37(v34, v36);
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v39;
  sub_20A4CF8B0(inited);
  id v40 = objc_allocWithZone(MEMORY[0x263F086A0]);
  id v41 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A5B3BA4((unint64_t *)&qword_26AC7F9F8, 255, type metadata accessor for Key);
  long long v42 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v43 = objc_msgSend(v40, sel_initWithString_attributes_, v41, v42);
  swift_bridgeObjectRelease();

  objc_msgSend(a2, sel_setAttributedText_, v43);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
}

id sub_20A5B2B88(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824C0]), sel_init);
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    double v4 = self;
    uint64_t v5 = (double *)(a1 + 56);
    do
    {
      id v6 = objc_msgSend(v4, sel_bezierPathWithRect_, *(v5 - 3), *(v5 - 2), *(v5 - 1), *v5);
      objc_msgSend(v2, sel_appendPath_, v6);

      v5 += 4;
      --v3;
    }
    while (v3);
  }
  swift_bridgeObjectRelease();
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v8 = objc_msgSend(v2, sel_CGPath);
  id v9 = objc_msgSend(ObjCClassFromMetadata, sel_bezierPathWithCGPath_, v8);

  return v9;
}

uint64_t type metadata accessor for QuoteDetailViewRenderer()
{
  return self;
}

uint64_t sub_20A5B2D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC8StocksUI23QuoteDetailViewRenderer_styler;
  swift_beginAccess();
  sub_20A4342F4(v4, (uint64_t)v13);
  uint64_t v5 = v14;
  uint64_t v6 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  uint64_t v7 = *(void *)(v6 + 8);
  id v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8);
  uint64_t v11 = v5;
  uint64_t v12 = v6;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v10);
  v8(a2, v5, v7);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v4);
  sub_20A42BEBC(&v10, v4);
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_20A5B2E68(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_20A5B3BA4(&qword_26AC74CA8, a2, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewRenderer);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_20A5B2EC0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_20A7A8468();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_20A5B2F3C(v6);
  return sub_20A8CF460();
}

void sub_20A5B2F3C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t v5 = sub_20A8CF710();
  if (v5 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_132;
    }
    if (v4) {
      sub_20A5B36A8(0, v4, 1, a1);
    }
    return;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_140;
  }
  uint64_t v7 = v5;
  uint64_t v110 = a1;
  if (v4 < 2)
  {
    long long v10 = (char *)MEMORY[0x263F8EE78];
    uint64_t v119 = MEMORY[0x263F8EE78];
    uint64_t v118 = (void **)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_98:
      double v102 = v10;
      if (v13 >= 2)
      {
        uint64_t v103 = *v110;
        do
        {
          unint64_t v104 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_127;
          }
          if (!v103) {
            goto LABEL_139;
          }
          unint64_t v105 = v102;
          uint64_t v106 = *(void *)&v102[16 * v104 + 32];
          uint64_t v107 = *(void *)&v102[16 * v13 + 24];
          sub_20A5B37A0((void **)(v103 + 8 * v106), (id *)(v103 + 8 * *(void *)&v102[16 * v13 + 16]), v103 + 8 * v107, v118);
          if (v2) {
            break;
          }
          if (v107 < v106) {
            goto LABEL_128;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v105 = sub_20A7A8278((uint64_t)v105);
          }
          if (v104 >= *((void *)v105 + 2)) {
            goto LABEL_129;
          }
          uint64_t v108 = &v105[16 * v104 + 32];
          *(void *)uint64_t v108 = v106;
          *((void *)v108 + 1) = v107;
          unint64_t v109 = *((void *)v105 + 2);
          if (v13 > v109) {
            goto LABEL_130;
          }
          memmove(&v105[16 * v13 + 16], &v105[16 * v13 + 32], 16 * (v109 - v13));
          double v102 = v105;
          *((void *)v105 + 2) = v109 - 1;
          unint64_t v13 = v109 - 1;
        }
        while (v109 > 2);
      }
LABEL_95:
      swift_bridgeObjectRelease();
      *(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_20A8CE620();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v8 = v6 >> 1;
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FA30);
    uint64_t v9 = sub_20A8CE6A0();
    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    uint64_t v118 = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v119 = v9;
  }
  uint64_t v114 = v7;
  uint64_t v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v111 = *a1 - 8;
  uint64_t v112 = *a1 + 16;
  long long v10 = (char *)MEMORY[0x263F8EE78];
  uint64_t v115 = v4;
  while (1)
  {
    uint64_t v14 = v11++;
    uint64_t v116 = v14;
    if (v11 < v4)
    {
      uint64_t v15 = *(void **)(v12 + 8 * v14);
      id v16 = *(id *)(v12 + 8 * v11);
      id v17 = v15;
      objc_msgSend(v16, sel_accessibilityFrameInContainerSpace);
      double v19 = v18;
      objc_msgSend(v17, sel_accessibilityFrameInContainerSpace);
      double v21 = v20;

      uint64_t v11 = v14 + 2;
      if (v14 + 2 < v4)
      {
        id v22 = (id *)(v112 + 8 * v14);
        while (1)
        {
          id v23 = *(v22 - 1);
          id v24 = *v22;
          id v25 = v23;
          objc_msgSend(v24, sel_accessibilityFrameInContainerSpace);
          double v27 = v26;
          objc_msgSend(v25, sel_accessibilityFrameInContainerSpace);
          double v29 = v28;

          if (v19 < v21 == v27 >= v29) {
            break;
          }
          ++v11;
          ++v22;
          if (v4 == v11)
          {
            uint64_t v11 = v4;
            break;
          }
        }
        uint64_t v14 = v116;
      }
      if (v19 < v21)
      {
        if (v11 < v14) {
          goto LABEL_133;
        }
        if (v14 < v11)
        {
          uint64_t v30 = (uint64_t *)(v111 + 8 * v11);
          uint64_t v31 = v11;
          uint64_t v32 = v14;
          uint64_t v33 = (uint64_t *)(v12 + 8 * v14);
          do
          {
            if (v32 != --v31)
            {
              if (!v12) {
                goto LABEL_138;
              }
              uint64_t v34 = *v33;
              *uint64_t v33 = *v30;
              *uint64_t v30 = v34;
            }
            ++v32;
            --v30;
            ++v33;
          }
          while (v32 < v31);
        }
      }
    }
    if (v11 >= v4) {
      goto LABEL_47;
    }
    if (__OFSUB__(v11, v14)) {
      goto LABEL_131;
    }
    if (v11 - v14 >= v114) {
      goto LABEL_47;
    }
    if (__OFADD__(v14, v114)) {
      goto LABEL_134;
    }
    uint64_t v35 = v14 + v114 >= v4 ? v4 : v14 + v114;
    if (v35 < v14) {
      break;
    }
    if (v11 != v35)
    {
      uint64_t v113 = v10;
      uint64_t v36 = v111 + 8 * v11;
      do
      {
        uint64_t v37 = *(void **)(v12 + 8 * v11);
        uint64_t v38 = v14;
        uint64_t v39 = v36;
        do
        {
          id v40 = *(void **)v39;
          id v41 = v37;
          id v42 = v40;
          objc_msgSend(v41, sel_accessibilityFrameInContainerSpace);
          double v44 = v43;
          objc_msgSend(v42, sel_accessibilityFrameInContainerSpace);
          double v46 = v45;

          if (v44 >= v46) {
            break;
          }
          if (!v12) {
            goto LABEL_136;
          }
          uint64_t v47 = *(void **)v39;
          uint64_t v37 = *(void **)(v39 + 8);
          *(void *)uint64_t v39 = v37;
          *(void *)(v39 + 8) = v47;
          v39 -= 8;
          ++v38;
        }
        while (v11 != v38);
        ++v11;
        v36 += 8;
        uint64_t v14 = v116;
      }
      while (v11 != v35);
      uint64_t v11 = v35;
      long long v10 = v113;
    }
LABEL_47:
    if (v11 < v14) {
      goto LABEL_126;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v10 = sub_20A7A7EA8(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v49 = *((void *)v10 + 2);
    unint64_t v48 = *((void *)v10 + 3);
    unint64_t v13 = v49 + 1;
    if (v49 >= v48 >> 1) {
      long long v10 = sub_20A7A7EA8((char *)(v48 > 1), v49 + 1, 1, v10);
    }
    *((void *)v10 + 2) = v13;
    double v50 = v10 + 32;
    id v51 = &v10[16 * v49 + 32];
    *(void *)id v51 = v14;
    *((void *)v51 + 1) = v11;
    if (v49)
    {
      uint64_t v117 = v11;
      while (1)
      {
        unint64_t v52 = v13 - 1;
        if (v13 >= 4)
        {
          double v57 = &v50[16 * v13];
          uint64_t v58 = *((void *)v57 - 8);
          uint64_t v59 = *((void *)v57 - 7);
          BOOL v63 = __OFSUB__(v59, v58);
          uint64_t v60 = v59 - v58;
          if (v63) {
            goto LABEL_115;
          }
          uint64_t v62 = *((void *)v57 - 6);
          uint64_t v61 = *((void *)v57 - 5);
          BOOL v63 = __OFSUB__(v61, v62);
          uint64_t v55 = v61 - v62;
          char v56 = v63;
          if (v63) {
            goto LABEL_116;
          }
          unint64_t v64 = v13 - 2;
          uint64_t v65 = &v50[16 * v13 - 32];
          uint64_t v67 = *(void *)v65;
          uint64_t v66 = *((void *)v65 + 1);
          BOOL v63 = __OFSUB__(v66, v67);
          uint64_t v68 = v66 - v67;
          if (v63) {
            goto LABEL_118;
          }
          BOOL v63 = __OFADD__(v55, v68);
          uint64_t v69 = v55 + v68;
          if (v63) {
            goto LABEL_121;
          }
          if (v69 >= v60)
          {
            unint64_t v87 = &v50[16 * v52];
            uint64_t v89 = *(void *)v87;
            uint64_t v88 = *((void *)v87 + 1);
            BOOL v63 = __OFSUB__(v88, v89);
            uint64_t v90 = v88 - v89;
            if (v63) {
              goto LABEL_125;
            }
            BOOL v80 = v55 < v90;
            goto LABEL_85;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v81 = *((void *)v10 + 4);
            uint64_t v82 = *((void *)v10 + 5);
            BOOL v63 = __OFSUB__(v82, v81);
            uint64_t v74 = v82 - v81;
            char v75 = v63;
            goto LABEL_79;
          }
          uint64_t v54 = *((void *)v10 + 4);
          uint64_t v53 = *((void *)v10 + 5);
          BOOL v63 = __OFSUB__(v53, v54);
          uint64_t v55 = v53 - v54;
          char v56 = v63;
        }
        if (v56) {
          goto LABEL_117;
        }
        unint64_t v64 = v13 - 2;
        uint64_t v70 = &v50[16 * v13 - 32];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v73 = __OFSUB__(v71, v72);
        uint64_t v74 = v71 - v72;
        char v75 = v73;
        if (v73) {
          goto LABEL_120;
        }
        uint64_t v76 = &v50[16 * v52];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        BOOL v63 = __OFSUB__(v77, v78);
        uint64_t v79 = v77 - v78;
        if (v63) {
          goto LABEL_123;
        }
        if (__OFADD__(v74, v79)) {
          goto LABEL_124;
        }
        if (v74 + v79 >= v55)
        {
          BOOL v80 = v55 < v79;
LABEL_85:
          if (v80) {
            unint64_t v52 = v64;
          }
          goto LABEL_87;
        }
LABEL_79:
        if (v75) {
          goto LABEL_119;
        }
        uint64_t v83 = &v50[16 * v52];
        uint64_t v85 = *(void *)v83;
        uint64_t v84 = *((void *)v83 + 1);
        BOOL v63 = __OFSUB__(v84, v85);
        uint64_t v86 = v84 - v85;
        if (v63) {
          goto LABEL_122;
        }
        if (v86 < v74) {
          goto LABEL_14;
        }
LABEL_87:
        unint64_t v91 = v52 - 1;
        if (v52 - 1 >= v13)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        uint64_t v92 = v12;
        if (!v12) {
          goto LABEL_137;
        }
        uint64_t v93 = v10;
        uint64_t v94 = &v50[16 * v91];
        uint64_t v95 = *(void *)v94;
        uint64_t v96 = v50;
        unint64_t v97 = v52;
        uint64_t v98 = &v50[16 * v52];
        uint64_t v99 = *((void *)v98 + 1);
        uint64_t v100 = v92;
        sub_20A5B37A0((void **)(v92 + 8 * *(void *)v94), (id *)(v92 + 8 * *(void *)v98), v92 + 8 * v99, v118);
        if (v1) {
          goto LABEL_95;
        }
        if (v99 < v95) {
          goto LABEL_112;
        }
        if (v97 > *((void *)v93 + 2)) {
          goto LABEL_113;
        }
        *(void *)uint64_t v94 = v95;
        *(void *)&v96[16 * v91 + 8] = v99;
        unint64_t v101 = *((void *)v93 + 2);
        if (v97 >= v101) {
          goto LABEL_114;
        }
        long long v10 = v93;
        unint64_t v13 = v101 - 1;
        memmove(v98, v98 + 16, 16 * (v101 - 1 - v97));
        double v50 = v96;
        *((void *)v93 + 2) = v101 - 1;
        uint64_t v12 = v100;
        uint64_t v11 = v117;
        if (v101 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_14:
    uint64_t v4 = v115;
    if (v11 >= v115)
    {
      uint64_t v2 = v1;
      goto LABEL_98;
    }
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  sub_20A8CF510();
  __break(1u);
}

void sub_20A5B36A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    uint64_t v7 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v8 = *(void **)(v6 + 8 * v4);
    uint64_t v9 = a1;
    uint64_t v10 = v7;
    while (1)
    {
      uint64_t v11 = *(void **)v10;
      id v12 = v8;
      id v13 = v11;
      objc_msgSend(v12, sel_accessibilityFrameInContainerSpace);
      double v15 = v14;
      objc_msgSend(v13, sel_accessibilityFrameInContainerSpace);
      double v17 = v16;

      if (v15 >= v17)
      {
LABEL_4:
        ++v4;
        v7 += 8;
        if (v4 == a2) {
          return;
        }
        goto LABEL_5;
      }
      if (!v6) {
        break;
      }
      double v18 = *(void **)v10;
      uint64_t v8 = *(void **)(v10 + 8);
      *(void *)uint64_t v10 = v8;
      *(void *)(v10 + 8) = v18;
      v10 -= 8;
      if (v4 == ++v9) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_20A5B37A0(void **__src, id *a2, unint64_t a3, void **a4)
{
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = (char *)a2 - (char *)__src;
  int64_t v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v8 = (char *)a2 - (char *)__src;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v39 = __src;
  uint64_t v38 = a4;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7) {
      goto LABEL_46;
    }
    if (a4 != a2 || &a2[v12] <= a4) {
      memmove(a4, a2, 8 * v12);
    }
    id v23 = &a4[v12];
    uint64_t v37 = (char *)v23;
    uint64_t v39 = v5;
    if (v6 >= v5 || v10 < 8) {
      goto LABEL_45;
    }
    id v24 = (id *)(a3 - 8);
    id v25 = v5;
    while (1)
    {
      double v26 = v24 + 1;
      double v27 = v23 - 1;
      double v28 = *--v25;
      id v29 = *(v23 - 1);
      id v30 = v28;
      objc_msgSend(v29, sel_accessibilityFrameInContainerSpace);
      double v32 = v31;
      objc_msgSend(v30, sel_accessibilityFrameInContainerSpace);
      double v34 = v33;

      if (v32 < v34) {
        break;
      }
      uint64_t v37 = (char *)(v23 - 1);
      if (v26 < v23 || v24 >= v23)
      {
        id *v24 = *v27;
        id v25 = v5;
        --v23;
        goto LABEL_43;
      }
      if (v26 != v23) {
        id *v24 = *v27;
      }
      id v25 = v5;
      --v23;
      if (v5 <= v6) {
        goto LABEL_45;
      }
LABEL_44:
      --v24;
      uint64_t v5 = v25;
      if (v23 <= a4) {
        goto LABEL_45;
      }
    }
    if (v26 != v5 || v24 >= v5) {
      id *v24 = *v25;
    }
    uint64_t v39 = v25;
LABEL_43:
    if (v25 <= v6) {
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  if (v7 >= -7)
  {
    if (a4 != __src || &__src[v9] <= a4) {
      memmove(a4, __src, 8 * v9);
    }
    id v13 = &a4[v9];
    uint64_t v37 = (char *)v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      double v14 = a4;
      do
      {
        double v15 = *v14;
        id v16 = *v5;
        id v17 = v15;
        objc_msgSend(v16, sel_accessibilityFrameInContainerSpace);
        double v19 = v18;
        objc_msgSend(v17, sel_accessibilityFrameInContainerSpace);
        double v21 = v20;

        if (v19 >= v21)
        {
          if (v6 != v14) {
            *uint64_t v6 = *v14;
          }
          uint64_t v38 = ++v14;
          id v22 = v5;
        }
        else
        {
          id v22 = v5 + 1;
          if (v6 < v5 || v6 >= v22 || v6 != v5) {
            *uint64_t v6 = *v5;
          }
        }
        ++v6;
        if (v14 >= v13) {
          break;
        }
        uint64_t v5 = v22;
      }
      while ((unint64_t)v22 < a3);
      uint64_t v39 = v6;
    }
LABEL_45:
    sub_20A7A7FA0(&v39, &v38, &v37);
    return 1;
  }
LABEL_46:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A5B3ACC(unsigned __int8 a1, void *a2)
{
  return sub_20A5B2204(a1, a2, *(void *)(v2 + 16), *(uint64_t **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void **)(v2 + 56));
}

unint64_t sub_20A5B3ADC(unint64_t a1, void *a2)
{
  return sub_20A5B27C4(a1, a2, *(void *)(v2 + 16), *(uint64_t **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_20A5B3AE8(uint64_t a1, uint64_t a2)
{
  sub_20A5B3B4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20A5B3B4C()
{
  if (!qword_26AC7A728)
  {
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7A728);
    }
  }
}

uint64_t sub_20A5B3BA4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A5B3BEC(char *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  id v43 = (id)MEMORY[0x2105289B0](&a1[OBJC_IVAR____TtC8StocksUI40QuoteDetailViewLabelAccessibilityElement_scrollView]);
  if (v43)
  {
    uint64_t v3 = &a1[OBJC_IVAR____TtC8StocksUI40QuoteDetailViewLabelAccessibilityElement_nameLabel];
    uint64_t v4 = MEMORY[0x2105289B0](&a1[OBJC_IVAR____TtC8StocksUI40QuoteDetailViewLabelAccessibilityElement_nameLabel]);
    if (v4)
    {
      uint64_t v5 = (void *)v4;
      sub_20A8CE9A0();
      CGFloat v7 = v6;
      CGFloat v9 = v8;
      CGFloat v11 = v10;
      uint64_t v13 = v12;
      uint64_t v14 = MEMORY[0x2105289B0](v3);
      uint64_t rect = v13;
      if (v14)
      {
        double v15 = (void *)v14;
        uint64_t v16 = MEMORY[0x2105289B0](&a1[OBJC_IVAR____TtC8StocksUI40QuoteDetailViewLabelAccessibilityElement_valueLabel]);
        if (v16)
        {
          id v17 = (void *)v16;
          objc_msgSend(v15, sel_accessibilityFrame);
          CGFloat v19 = v18;
          CGFloat v21 = v20;
          CGFloat v23 = v22;
          CGFloat v25 = v24;
          objc_msgSend(v17, sel_accessibilityFrame);
          v52.origin.CGFloat x = v26;
          v52.origin.CGFloat y = v27;
          v52.size.CGFloat width = v28;
          v52.size.CGFloat height = v29;
          v46.origin.CGFloat x = v19;
          v46.origin.CGFloat y = v21;
          v46.size.CGFloat width = v23;
          v46.size.CGFloat height = v25;
          CGRect v47 = CGRectUnion(v46, v52);
          CGFloat x = v47.origin.x;
          CGFloat y = v47.origin.y;
          CGFloat width = v47.size.width;
          CGFloat height = v47.size.height;

LABEL_11:
          objc_msgSend(v5, sel_frame, rect);
          double MinX = CGRectGetMinX(v48);
          v49.origin.CGFloat x = v7;
          v49.origin.CGFloat y = v9;
          v49.size.CGFloat width = v11;
          v49.size.CGFloat height = recta;
          double MinY = CGRectGetMinY(v49);
          v50.origin.CGFloat x = x;
          v50.origin.CGFloat y = y;
          v50.size.CGFloat width = width;
          v50.size.CGFloat height = height;
          double v40 = CGRectGetWidth(v50);
          v51.origin.CGFloat x = x;
          v51.origin.CGFloat y = y;
          v51.size.CGFloat width = width;
          v51.size.CGFloat height = height;
          objc_msgSend(v43, sel_scrollRectToVisible_animated_, 0, MinX, MinY, v40, CGRectGetHeight(v51));

          return;
        }
      }
      v44.receiver = a1;
      v44.super_class = ObjectType;
      objc_msgSendSuper2(&v44, sel_accessibilityFrame, v13);
      CGFloat x = v34;
      CGFloat y = v35;
      CGFloat width = v36;
      CGFloat height = v37;
      goto LABEL_11;
    }
  }
}

id sub_20A5B3E2C(uint64_t a1, uint64_t a2)
{
  if (a2 == 1)
  {
    uint64_t v12 = (void *)MEMORY[0x2105289B0](a1 + OBJC_IVAR____TtC8StocksUI40QuoteDetailViewLabelAccessibilityElement_scrollView);
    if (v12)
    {
      uint64_t v3 = v12;
      objc_msgSend(v12, sel_contentOffset);
      double v14 = v13;
      objc_msgSend(v3, sel_contentInset);
      if (v14 != -v15)
      {
        CGFloat v11 = &selRef_accessibilityScrollRightPage;
        goto LABEL_11;
      }
LABEL_8:
      id v16 = 0;
LABEL_12:

      return v16;
    }
  }
  else if (a2 == 2)
  {
    uint64_t v2 = (void *)MEMORY[0x2105289B0](a1 + OBJC_IVAR____TtC8StocksUI40QuoteDetailViewLabelAccessibilityElement_scrollView);
    if (v2)
    {
      uint64_t v3 = v2;
      objc_msgSend(v2, sel_contentOffset);
      double v5 = v4;
      objc_msgSend(v3, sel_visibleSize);
      double v7 = v5 + v6;
      objc_msgSend(v3, sel_contentInset);
      double v9 = v7 - v8;
      objc_msgSend(v3, sel_contentSize);
      if (v9 != v10)
      {
        CGFloat v11 = &selRef_accessibilityScrollLeftPage;
LABEL_11:
        id v16 = [v3 *v11];
        goto LABEL_12;
      }
      goto LABEL_8;
    }
  }
  return 0;
}

ValueMetadata *type metadata accessor for Settings.AppState()
{
  return &type metadata for Settings.AppState;
}

uint64_t sub_20A5B3F60()
{
  uint64_t v0 = sub_20A8C4260();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C4270();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  double v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C2800();
  MEMORY[0x270FA5388](v8 - 8);
  sub_20A8C2700();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F7D110], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D100], v0);
  sub_20A5B4164();
  swift_allocObject();
  uint64_t result = sub_20A8C42E0();
  qword_267652D90 = result;
  return result;
}

void sub_20A5B4164()
{
  if (!qword_26AC692D0)
  {
    sub_20A8C2800();
    sub_20A5B41C8();
    unint64_t v0 = sub_20A8C42D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC692D0);
    }
  }
}

unint64_t sub_20A5B41C8()
{
  unint64_t result = qword_26AC68C98;
  if (!qword_26AC68C98)
  {
    sub_20A8C2800();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC68C98);
  }
  return result;
}

uint64_t type metadata accessor for StockChartViewRenderer()
{
  return self;
}

unint64_t sub_20A5B4244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A5B484C();
  uint64_t v60 = v5;
  double v6 = MEMORY[0x270FA5388](v5);
  uint64_t v59 = (SEL **)((char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(a3 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_lineChartViewController);
  unint64_t result = (unint64_t)objc_msgSend(v8, sel_view, v6);
  if (!result)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v10 = (void *)result;
  objc_msgSend((id)result, sel_setAutoresizingMask_, 0);

  unint64_t result = (unint64_t)objc_msgSend(v8, sel_view);
  if (!result)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  CGFloat v11 = (void *)result;
  uint64_t v12 = &off_263FDE000;
  objc_msgSend((id)result, sel_setFrame_, *(double *)(a2 + 32), *(double *)(a2 + 40), *(double *)(a2 + 48), *(double *)(a2 + 56));

  double v13 = *(void **)(a3 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_columnChartViewController);
  unint64_t result = (unint64_t)objc_msgSend(v13, sel_view);
  if (!result)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  double v14 = (void *)result;
  objc_msgSend((id)result, sel_setAutoresizingMask_, 0);

  unint64_t result = (unint64_t)objc_msgSend(v13, sel_view);
  if (!result)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  double v15 = (void *)result;
  CGFloat v16 = *(double *)(a2 + 64);
  CGFloat v17 = *(double *)(a2 + 72);
  CGFloat v18 = *(double *)(a2 + 80);
  CGFloat v19 = *(double *)(a2 + 88);
  v62.origin.CGFloat x = v16;
  v62.origin.CGFloat y = v17;
  v62.size.CGFloat width = v18;
  v62.size.CGFloat height = v19;
  double MinX = CGRectGetMinX(v62);
  v63.origin.CGFloat x = v16;
  v63.origin.CGFloat y = v17;
  v63.size.CGFloat width = v18;
  v63.size.CGFloat height = v19;
  double MinY = CGRectGetMinY(v63);
  unint64_t result = (unint64_t)objc_msgSend(v13, sel_view);
  if (result)
  {
    double v20 = (void *)result;
    CGFloat v21 = (SEL *)&off_263FDE000;
    objc_msgSend((id)result, sel_frame);
    CGFloat v23 = v22;
    CGFloat v25 = v24;
    CGFloat v27 = v26;
    CGFloat v29 = v28;

    v64.origin.CGFloat x = v23;
    v64.origin.CGFloat y = v25;
    v64.size.CGFloat width = v27;
    v64.size.CGFloat height = v29;
    double Width = CGRectGetWidth(v64);
    v65.origin.CGFloat x = v16;
    v65.origin.CGFloat y = v17;
    v65.size.CGFloat width = v18;
    v65.size.CGFloat height = v19;
    objc_msgSend(v15, sel_setFrame_, MinX, MinY, Width, CGRectGetHeight(v65));

    objc_msgSend(*(id *)(a3 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_topDateRangePickerSeparator), sel_setFrame_, *(double *)(a2 + 168), *(double *)(a2 + 176), *(double *)(a2 + 184), *(double *)(a2 + 192));
    objc_msgSend(*(id *)(a3 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_interactionDisplayView), sel_setFrame_, *(double *)(a2 + 96), *(double *)(a2 + 104), *(double *)(a2 + 112), *(double *)(a2 + 120));
    double v31 = *(char **)(a3 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_dateRangePicker);
    objc_msgSend(v31, sel_setContentSize_, *(double *)(a2 + 128), *(double *)(a2 + 136));
    objc_msgSend(v31, sel_setContentOffset_, *(double *)(a2 + 144), *(double *)(a2 + 152));
    double MinX = *(double *)&v31;
    id v32 = *(id *)&v31[OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl];
    sub_20A549C90();
    sub_20A8C8B40();
    unint64_t v33 = sub_20A8C8B10();
    id v56 = v32;
    uint64_t v34 = sub_20A8C8B30();
    if (v33 >> 62) {
      goto LABEL_19;
    }
    uint64_t v35 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v35)
    {
      uint64_t v55 = a2;
      unint64_t v36 = 0;
      double v37 = *(double *)(v34 + 16);
      unint64_t v57 = v33 & 0xC000000000000001;
      double MinY = v37;
      while (1)
      {
        if (v57) {
          uint64_t v38 = (SEL *)MEMORY[0x210527700](v36, v33);
        }
        else {
          uint64_t v38 = (SEL *)*(id *)(v33 + 8 * v36 + 32);
        }
        CGFloat v21 = v38;
        if (*(void *)&MinY == v36)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          goto LABEL_17;
        }
        if (v36 >= *(void *)(v34 + 16)) {
          break;
        }
        unint64_t v39 = v36 + 1;
        uint64_t v12 = (__objc2_class **)sub_20A8C2BC0();
        uint64_t v40 = (uint64_t)*(v12 - 1);
        uint64_t v41 = v40;
        unint64_t v42 = v34
            + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))
            + *(void *)(v40 + 72) * v36;
        id v43 = (char *)v59 + *(int *)(v60 + 48);
        *uint64_t v59 = v21;
        (*(void (**)(char *, unint64_t, __objc2_class **))(v40 + 16))(v43, v42, v12);
        objc_super v44 = v21;
        ChartRange.accessibilityLabel.getter();
        a2 = v35;
        unint64_t v45 = v33;
        CGRect v46 = (void *)sub_20A8CE240();
        swift_bridgeObjectRelease();
        [(SEL *)v44 setAccessibilityLabel:v46];

        unint64_t v33 = v45;
        uint64_t v35 = a2;
        (*(void (**)(char *, __objc2_class **))(v41 + 8))(v43, v12);
        unint64_t v36 = v39;
        if (a2 == v39)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_17:
          uint64_t v12 = &off_263FDE000;
          a2 = v55;
          CGFloat v21 = (SEL *)&off_263FDE000;
          goto LABEL_21;
        }
      }
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_20A8CF540();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_21:
    unint64_t result = sub_20A8C8B10();
    unint64_t v47 = result;
    if (result >> 62)
    {
      unint64_t result = sub_20A8CF540();
      uint64_t v48 = result;
      if (result) {
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v48 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v48)
      {
LABEL_23:
        if (v48 < 1)
        {
          __break(1u);
        }
        else
        {
          uint64_t v49 = *(void *)(a2 + 160);
          if ((unint64_t)(v48 - 1) < *(void *)(v49 + 16))
          {
            uint64_t v50 = 0;
            CGRect v51 = (double *)(v49 + 56);
            do
            {
              if ((v47 & 0xC000000000000001) != 0) {
                id v52 = (id)MEMORY[0x210527700](v50, v47);
              }
              else {
                id v52 = *(id *)(v47 + 8 * v50 + 32);
              }
              uint64_t v53 = v52;
              objc_msgSend(v52, (SEL)v12[436], *(v51 - 3), *(v51 - 2), *(v51 - 1), *v51);
              if (objc_msgSend(v53, sel_isSelected))
              {
                [v53 v21[439]];
                objc_msgSend(*(id *)&MinX, sel_scrollRectToVisible_animated_, 0);
              }
              ++v50;

              v51 += 4;
            }
            while (v48 != v50);
            goto LABEL_33;
          }
        }
        __break(1u);
        goto LABEL_36;
      }
    }
LABEL_33:

    return swift_bridgeObjectRelease();
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_20A5B484C()
{
  if (!qword_26AC6A388)
  {
    sub_20A8C9A60();
    sub_20A8C2BC0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC6A388);
    }
  }
}

void sub_20A5B48BC(uint64_t *a1, double *a2, char *a3)
{
  objc_msgSend(a3, sel_setFrame_, *a2, a2[1], a2[2], a2[3]);
  swift_beginAccess();
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
  sub_20A5685DC(a3);
  CGRect v46 = a3;
  uint64_t v7 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI15ForYouTitleView_headingLabel];
  objc_msgSend(v7, sel_setFrame_, a2[4], a2[5], a2[6], a2[7]);
  uint64_t v47 = v3;
  unint64_t v45 = (void *)(v3 + 16);
  uint64_t v8 = __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
  uint64_t v43 = *a1;
  objc_super v44 = a1;
  double v9 = (void *)*v8;
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  CGFloat v11 = (void **)MEMORY[0x263F814F0];
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v12 = *v11;
  *(void *)(inited + 32) = *v11;
  uint64_t v13 = v9[12];
  double v14 = (uint64_t (*)(uint64_t))v9[13];
  swift_bridgeObjectRetain();
  id v15 = v12;
  uint64_t v16 = v14(v13);
  uint64_t v17 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v16;
  CGFloat v18 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v17;
  *(void *)(inited + 72) = v18;
  CGFloat v19 = v9 + 2;
  uint64_t v21 = v9[5];
  uint64_t v20 = v9[6];
  __swift_project_boxed_opaque_existential_1(v19, v21);
  uint64_t v22 = *(void *)(v20 + 16);
  CGFloat v23 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 224);
  id v24 = v18;
  uint64_t v25 = v23(v21, v22);
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v25;
  sub_20A4CF8B0(inited);
  id v26 = objc_allocWithZone(MEMORY[0x263F086A0]);
  CGFloat v27 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A5B4E20((unint64_t *)&qword_26AC7F9F8, 255, type metadata accessor for Key);
  double v28 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v29 = objc_msgSend(v26, sel_initWithString_attributes_, v27, v28);

  objc_msgSend(v7, sel_setAttributedText_, v29);
  unint64_t v30 = (unint64_t)objc_msgSend(v7, sel_accessibilityTraits);
  unint64_t v31 = v30;
  uint64_t v32 = *MEMORY[0x263F83268];
  if (v30)
  {
    if ((v32 & ~v30) == 0) {
      goto LABEL_7;
    }
  }
  else if (!v32)
  {
    unint64_t v31 = 0;
    goto LABEL_7;
  }
  unint64_t v31 = v32 | v30;
LABEL_7:
  objc_msgSend(v7, sel_setAccessibilityTraits_, v31, v43);
  unint64_t v33 = *(void **)&v46[OBJC_IVAR____TtC8StocksUI15ForYouTitleView_subheadingLabel];
  objc_msgSend(v33, sel_setFrame_, a2[8], a2[9], a2[10], a2[11]);
  __swift_project_boxed_opaque_existential_1(v45, *(void *)(v47 + 40));
  id v34 = sub_20A568908(v44[2], v44[3], (void *)v44[4]);
  objc_msgSend(v33, sel_setAttributedText_, v34);

  uint64_t v35 = *(void **)&v46[OBJC_IVAR____TtC8StocksUI15ForYouTitleView_premiumSealView];
  uint64_t v36 = type metadata accessor for ForYouTitleViewLayoutAttributes();
  objc_msgSend(v35, sel_setFrame_, *(double *)((char *)a2 + *(int *)(v36 + 36)), *(double *)((char *)a2 + *(int *)(v36 + 36) + 8), *(double *)((char *)a2 + *(int *)(v36 + 36) + 16), *(double *)((char *)a2 + *(int *)(v36 + 36) + 24));
  if ((sub_20A60A7C0() & 1) == 0) {
    goto LABEL_12;
  }
  sub_20A8C4250();
  sub_20A8C4230();
  if (qword_26AC82DB0 != -1) {
    swift_once();
  }
  sub_20A8C4220();
  swift_release();
  if (v48 == 1)
  {
    objc_msgSend(v35, sel_setHidden_, 0);
    sub_20A8C7920();
    *(unsigned char *)(*(void *)(v47 + 56) + 16) = 0;
  }
  else
  {
LABEL_12:
    objc_msgSend(v35, sel_setHidden_, 1);
  }
  double v37 = *(void **)&v46[OBJC_IVAR____TtC8StocksUI15ForYouTitleView_separatorLayer];
  objc_msgSend(v37, sel_setFrame_, a2[12], a2[13], a2[14], a2[15]);
  uint64_t v38 = __swift_project_boxed_opaque_existential_1(v45, *(void *)(v47 + 40));
  uint64_t v39 = *(void *)(*v38 + 40);
  uint64_t v40 = *(void *)(*v38 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v38 + 16), v39);
  uint64_t v41 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v40 + 16) + 136))(v39);
  id v42 = objc_msgSend(v41, sel_CGColor);

  objc_msgSend(v37, sel_setBackgroundColor_, v42);
}

uint64_t type metadata accessor for ForYouTitleViewRenderer()
{
  return self;
}

uint64_t sub_20A5B4DC8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_20A5B4E20(&qword_26AC74B10, a2, (void (*)(uint64_t))type metadata accessor for ForYouTitleViewRenderer);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_20A5B4E20(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A5B4E68(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC6CF90 != -1) {
    swift_once();
  }
  id v8 = (id)qword_26AC6CF88;
  sub_20A8CEA00();
  uint64_t v9 = MEMORY[0x263F8EE78];
  sub_20A8C7D90();

  uint64_t v10 = type metadata accessor for StockFeedServiceConfig();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1 + *(int *)(v10 + 40), v4);
  sub_20A4342F4(v2 + 56, (uint64_t)v17);
  __swift_project_boxed_opaque_existential_1(v17, v19);
  char v11 = sub_20A8C3800() ^ 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 56), *(void *)(v2 + 80));
  uint64_t v12 = sub_20A8C3850();
  if (v12)
  {
    LOBYTE(v17[0]) = v11 & 1;
    v17[1] = v9;
    char v18 = 0;
    sub_20A5B541C();
    swift_allocObject();
    uint64_t v13 = sub_20A8C6580();
  }
  else
  {
    MEMORY[0x270FA5388](v12);
    *(&v16 - 2) = v2;
    *(&v16 - 1) = (uint64_t)v7;
    sub_20A5B5354();
    sub_20A8C6670();
    *(unsigned char *)(swift_allocObject() + 16) = v11 & 1;
    double v14 = (void *)sub_20A8C6450();
    uint64_t v13 = sub_20A8C6500();
    swift_release();
    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v13;
}

uint64_t sub_20A5B5144@<X0>(uint64_t *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  char v6 = *((unsigned char *)a1 + 8);
  if (qword_26AC6CF90 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_26AC6CF88;
  sub_20A5B5474(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_20A8D3DC0;
  uint64_t v9 = *(void *)(v5 + 16);
  uint64_t v10 = MEMORY[0x263F8D750];
  *(void *)(v8 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v8 + 64) = v10;
  *(void *)(v8 + 32) = v9;
  id v11 = v7;
  sub_20A8CEA00();
  sub_20A8C7D90();

  swift_bridgeObjectRelease();
  *(unsigned char *)a3 = a2 & 1;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = v6;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for StockFeedPoolService()
{
  return self;
}

uint64_t sub_20A5B52B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_20A5B4E68(a1);
  *a2 = result;
  return result;
}

uint64_t sub_20A5B52E4()
{
  return sub_20A8CC930();
}

uint64_t sub_20A5B52FC()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 16) + 16), *(void *)(*(void *)(v0 + 16) + 40));
  return sub_20A8C3590();
}

void sub_20A5B5354()
{
  if (!qword_26AC7F6E0)
  {
    sub_20A5B5474(255, &qword_26AC7F6E8, MEMORY[0x263F7AF50], MEMORY[0x263F8D488]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC7F6E0);
    }
  }
}

uint64_t sub_20A5B53F0()
{
  return swift_deallocObject();
}

uint64_t sub_20A5B5400@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A5B5144(a1, *(unsigned char *)(v2 + 16), a2);
}

void sub_20A5B541C()
{
  if (!qword_26763C450)
  {
    unint64_t v0 = sub_20A8C65F0();
    if (!v1) {
      atomic_store(v0, &qword_26763C450);
    }
  }
}

void sub_20A5B5474(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A5B54D8()
{
  uint64_t v0 = sub_20A8C4270();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_20A8C4260();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v8 = objc_msgSend(self, sel_currentDevice);
  id v9 = objc_msgSend(v8, sel_userInterfaceIdiom);

  char v10 = (_BYTE)v9 + 1;
  if (unint64_t)v9 + 1 < 7 && ((0x5Fu >> v10))
  {
    unsigned int v11 = (0x64u >> v10) & 1;
    (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F7D100], v4);
    (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D110], v0);
    v13[15] = v11;
    sub_20A4B00C0();
    swift_allocObject();
    uint64_t result = sub_20A8C42E0();
    qword_26AC69090 = result;
  }
  else
  {
    uint64_t result = sub_20A8CF520();
    __break(1u);
  }
  return result;
}

uint64_t isMastheadEnabled.getter()
{
  id v0 = objc_msgSend(self, sel_currentDevice);
  id v1 = objc_msgSend(v0, sel_userInterfaceIdiom);

  char v2 = (_BYTE)v1 + 1;
  if (unint64_t)v1 + 1 < 7 && ((0x5Fu >> v2)) {
    return (0x64u >> v2) & 1;
  }
  uint64_t result = sub_20A8CF520();
  __break(1u);
  return result;
}

uint64_t static Settings.ForYouFeedMasthead.mastheadEnabled.getter()
{
  return sub_20A454F34(&qword_26AC69098);
}

uint64_t sub_20A5B583C()
{
  uint64_t v0 = sub_20A8C4270();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_20A8C4260();
  double v5 = MEMORY[0x270FA5388](v4);
  (*(void (**)(unsigned char *, void, double))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F7D100], v5);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D110], v0);
  v9[15] = 1;
  sub_20A4B00C0();
  swift_allocObject();
  uint64_t result = sub_20A8C42E0();
  qword_26AC82F38 = result;
  return result;
}

uint64_t static Settings.ForYouFeedMasthead.premiumSealEnabled.getter()
{
  return sub_20A454F34(&qword_26AC82DB0);
}

ValueMetadata *type metadata accessor for Settings.ForYouFeedMasthead()
{
  return &type metadata for Settings.ForYouFeedMasthead;
}

uint64_t sub_20A5B5A20(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for StockFeedPage();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v27 = (uint64_t)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StockFeedViewerPage();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v26 = (uint64_t)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C3F00();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unsigned int v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (v12)
  {
    v23[1] = v1;
    uint64_t v28 = MEMORY[0x263F8EE78];
    sub_20A68C89C(0, v12, 0);
    uint64_t v13 = v28;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v24 = *(void *)(v6 + 72);
    uint64_t v25 = v9;
    id v15 = (void (**)(char *, uint64_t, uint64_t))(v9 + 32);
    do
    {
      uint64_t v16 = v26;
      sub_20A4C9484(v14, v26);
      uint64_t v17 = v16;
      uint64_t v18 = v27;
      sub_20A5B7860(v17, v27, (uint64_t (*)(void))type metadata accessor for StockFeedPage);
      uint64_t v19 = *v15;
      (*v15)(v11, v18, v8);
      uint64_t v28 = v13;
      unint64_t v21 = *(void *)(v13 + 16);
      unint64_t v20 = *(void *)(v13 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_20A68C89C(v20 > 1, v21 + 1, 1);
        uint64_t v13 = v28;
      }
      *(void *)(v13 + 16) = v21 + 1;
      v19((char *)(v13+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v21), (uint64_t)v11, v8);
      v14 += v24;
      --v12;
    }
    while (v12);
  }
  return v13;
}

uint64_t sub_20A5B5CC4()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedViewerDataManager()
{
  return self;
}

uint64_t sub_20A5B5D40(void *a1, uint64_t a2, uint64_t a3)
{
  sub_20A5B74EC();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v9 - 8);
  unsigned int v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8C3F00();
  uint64_t v13 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v12 - 8);
  uint64_t v62 = v12;
  CGRect v63 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v61 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  CGRect v64 = (char *)&v49 - v16;
  uint64_t v17 = sub_20A8C40E0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v59 = v19;
  unint64_t v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_20A8C2E10();
  if (sub_20A8C2E70())
  {
    return swift_bridgeObjectRelease();
  }
  uint64_t v60 = v21;
  unint64_t v57 = v8;
  uint64_t v58 = v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C3600();
  char v23 = MEMORY[0x21051C3A0](a3, v20);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if ((v23 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v24 = v58;
  sub_20A8C5D50();
  uint64_t v25 = v62;
  uint64_t v26 = v63;
  if (v63[6](v11, 2, v62))
  {
    swift_bridgeObjectRelease();
    return sub_20A5B7720((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
  }
  uint64_t v27 = v64;
  v26[4](v64, (uint64_t)v11, v25);
  uint64_t v28 = v60;
  uint64_t v56 = *(void *)(v60 + 16);
  if (!v56)
  {
    ((void (*)(char *, uint64_t))v26[1])(v27, v25);
    return swift_bridgeObjectRelease();
  }
  uint64_t v50 = v18;
  uint64_t v51 = v17;
  uint64_t v52 = a3;
  unint64_t v29 = (*((unsigned __int8 *)v26 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v26 + 80);
  unint64_t v30 = v61;
  uint64_t v54 = v26[2];
  v54(v61, v60 + v29, v25);
  uint64_t v31 = sub_20A5B7818((unint64_t *)&qword_26AC68FC8, 255, MEMORY[0x263F7AF08]);
  swift_bridgeObjectRetain();
  uint64_t v53 = v31;
  char v32 = sub_20A8CE210();
  unint64_t v33 = (unsigned int (**)(char *, uint64_t, uint64_t))v26[1];
  ((void (*)(char *, uint64_t))v33)(v30, v25);
  if (v32)
  {
    uint64_t v55 = v26 + 1;
    CGRect v63 = v33;
    swift_bridgeObjectRelease();
LABEL_24:
    uint64_t v40 = sub_20A8CE720();
    uint64_t v41 = (uint64_t)v57;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v57, 1, 1, v40);
    uint64_t v42 = v50;
    uint64_t v43 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v20, v52, v51);
    sub_20A8CE700();
    swift_retain();
    uint64_t v44 = sub_20A8CE6F0();
    unint64_t v45 = (*(unsigned __int8 *)(v42 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    CGRect v46 = (char *)swift_allocObject();
    uint64_t v47 = MEMORY[0x263F8F500];
    *((void *)v46 + 2) = v44;
    *((void *)v46 + 3) = v47;
    uint64_t v48 = v60;
    *((void *)v46 + 4) = v24;
    *((void *)v46 + 5) = v48;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(&v46[v45], v20, v43);
    sub_20A5B6D84(v41, (uint64_t)&unk_26763C460, (uint64_t)v46);
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v63)(v64, v25);
  }
  if (v56 == 1)
  {
    swift_bridgeObjectRelease();
    id v34 = v64;
LABEL_21:
    ((void (*)(char *, uint64_t))v33)(v34, v25);
    return swift_bridgeObjectRelease();
  }
  uint64_t v49 = (unint64_t)(v26 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v55 = v26 + 1;
  uint64_t v35 = v63[9];
  unint64_t v36 = (unint64_t)v35 + v28 + v29;
  uint64_t v37 = 1;
  while (1)
  {
    uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v54)(v30, v36, v25);
    uint64_t v38 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    char v39 = sub_20A8CE210();
    ((void (*)(char *, uint64_t))v33)(v30, v25);
    if (v39)
    {
      CGRect v63 = v33;
      swift_bridgeObjectRelease();
      uint64_t v24 = v58;
      goto LABEL_24;
    }
    ++v37;
    v36 += (unint64_t)v35;
    id v34 = v64;
    if (v38 == v56)
    {
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_20A5B635C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  uint64_t v6[2] = a4;
  uint64_t v7 = sub_20A8C34C0();
  v6[5] = v7;
  v6[6] = *(void *)(v7 - 8);
  v6[7] = swift_task_alloc();
  uint64_t v8 = sub_20A8C2EF0();
  v6[8] = v8;
  v6[9] = *(void *)(v8 - 8);
  v6[10] = swift_task_alloc();
  sub_20A8CE700();
  v6[11] = sub_20A8CE6F0();
  uint64_t v10 = sub_20A8CE6E0();
  v6[12] = v10;
  v6[13] = v9;
  return MEMORY[0x270FA2498](sub_20A5B64B0, v10, v9);
}

uint64_t sub_20A5B64B0()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0[2] + 24), *(void *)(v0[2] + 48));
  v0[14] = sub_20A8C39E0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_20A5B6584;
  uint64_t v2 = v0[10];
  return MEMORY[0x270F7A5E8](v2);
}

uint64_t sub_20A5B6584()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 96);
    uint64_t v4 = *(void *)(v2 + 104);
    uint64_t v5 = sub_20A5B67CC;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 96);
    uint64_t v4 = *(void *)(v2 + 104);
    uint64_t v5 = sub_20A5B66A0;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_20A5B66A0()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v9 = v0[5];
  uint64_t v10 = v0[8];
  uint64_t v5 = v0[2];
  swift_release();
  __swift_project_boxed_opaque_existential_1((void *)(v5 + 112), *(void *)(v5 + 136));
  sub_20A8C40D0();
  uint64_t v6 = sub_20A8C3B10();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v9);
  sub_20A5B6858(v6);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_20A5B67CC()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_20A5B6858(uint64_t a1)
{
  sub_20A442C1C();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C3F00();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for StockFeedViewerPage();
  uint64_t v38 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v39 = (uint64_t)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5B7780();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v36 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = MEMORY[0x263F8EE78];
  if (v15)
  {
    uint64_t v31 = v1;
    uint64_t v32 = v13;
    uint64_t v33 = v12;
    id v34 = v5;
    uint64_t v40 = MEMORY[0x263F8EE78];
    sub_20A68C4D4(0, v15, 0);
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v17 = v7 + 16;
    uint64_t v18 = v19;
    uint64_t v20 = a1 + ((*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64));
    uint64_t v37 = *(void *)(v17 + 56);
    uint64_t v21 = (void (**)(char *, uint64_t))(v17 - 8);
    uint64_t v22 = v39;
    do
    {
      v18(v9, v20, v6);
      v18((char *)v22, (uint64_t)v9, v6);
      (*v21)(v9, v6);
      uint64_t v16 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C4D4(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v40;
      }
      unint64_t v24 = *(void *)(v16 + 16);
      unint64_t v23 = *(void *)(v16 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_20A68C4D4(v23 > 1, v24 + 1, 1);
        uint64_t v16 = v40;
      }
      *(void *)(v16 + 16) = v24 + 1;
      uint64_t v22 = v39;
      sub_20A5B7860(v39, v16+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v24, (uint64_t (*)(void))type metadata accessor for StockFeedViewerPage);
      v20 += v37;
      --v15;
    }
    while (v15);
    uint64_t v12 = v33;
    uint64_t v13 = v32;
  }
  sub_20A8C9560();
  uint64_t v25 = v36;
  sub_20A8C5D50();
  swift_release();
  sub_20A5B7818(&qword_26763C468, 255, (void (*)(uint64_t))sub_20A5B7780);
  uint64_t v26 = sub_20A8CE4F0();
  char v27 = sub_20A4C8FA8(v16, v26);
  swift_release();
  if (v27) {
    return swift_bridgeObjectRelease();
  }
  sub_20A8C9560();
  uint64_t v29 = sub_20A5B7818(&qword_26AC71348, 255, (void (*)(uint64_t))type metadata accessor for StockFeedViewerPage);
  uint64_t v30 = sub_20A5B7818(&qword_26AC71330, 255, (void (*)(uint64_t))type metadata accessor for StockFeedViewerPage);
  MEMORY[0x21051E250](v16, v35, v29, v30);
  sub_20A5B7818(&qword_26AC71328, 255, (void (*)(uint64_t))type metadata accessor for StockFeedViewerPage);
  sub_20A8C83B0();
  sub_20A5B7818(&qword_26763C470, 255, (void (*)(uint64_t))sub_20A5B7780);
  sub_20A8C5D80();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v25, v12);
}

uint64_t sub_20A5B6D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_20A8CE720();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_20A8CE710();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_20A5B7720(a1, (uint64_t (*)(void))sub_20A5B74EC);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_20A8CE6E0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_20A5B6F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a2;
  sub_20A5B7780();
  v28[1] = v3;
  MEMORY[0x270FA5388](v3);
  v28[0] = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C40E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C34C0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  int64_t v15 = (char *)v28 - v14;
  uint64_t v16 = *(void *)(v2 + 96);
  uint64_t v29 = v2;
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 72), v16);
  sub_20A8C3600();
  sub_20A8C40D0();
  uint64_t v17 = v8;
  uint64_t v18 = v9;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
  int v19 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v19 == *MEMORY[0x263F7ABB8] || v19 == *MEMORY[0x263F7ABC8] || v19 == *MEMORY[0x263F7AC00])
  {
    uint64_t v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    uint64_t v23 = v29;
    sub_20A8C9560();
    sub_20A8C5D50();
    swift_release();
    sub_20A5B7818(&qword_26763C468, 255, (void (*)(uint64_t))sub_20A5B7780);
    uint64_t v24 = sub_20A8CE4F0();
    sub_20A5B5A20(v24);
    swift_release();
    __swift_project_boxed_opaque_existential_1((void *)(v23 + 112), *(void *)(v23 + 136));
    uint64_t v25 = sub_20A8C3B10();
    swift_bridgeObjectRelease();
    sub_20A5B6858(v25);
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(char *, uint64_t))v22)(v15, v18);
  }
  else if (v19 == *MEMORY[0x263F7ABF8] || v19 == *MEMORY[0x263F7ABD0])
  {
    char v27 = *(void (**)(char *, uint64_t))(v10 + 8);
    v27(v15, v9);
    return ((uint64_t (*)(char *, uint64_t))v27)(v12, v9);
  }
  else if (v19 == *MEMORY[0x263F7ABF0])
  {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  else
  {
    uint64_t result = sub_20A8CF520();
    __break(1u);
  }
  return result;
}

uint64_t sub_20A5B7364(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  *(void *)(v6 + 16) = a1;
  sub_20A4342F4((uint64_t)a2, v6 + 24);
  *(void *)(v6 + 64) = a3;
  sub_20A4342F4((uint64_t)a4, v6 + 72);
  sub_20A4342F4(a5, v6 + 112);
  __swift_project_boxed_opaque_existential_1(a4, a4[3]);
  sub_20A5B7818(&qword_26AC82B98, v11, (void (*)(uint64_t))type metadata accessor for StockFeedViewerDataManager);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_20A8C3670();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A5B7818(&qword_26AC82BA0, v12, (void (*)(uint64_t))type metadata accessor for StockFeedViewerDataManager);
  swift_retain();
  sub_20A8C39C0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v6;
}

void sub_20A5B74EC()
{
  if (!qword_26AC7F850)
  {
    sub_20A8CE720();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7F850);
    }
  }
}

uint64_t sub_20A5B7544()
{
  uint64_t v1 = sub_20A8C40E0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_20A5B7620(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_20A8C40E0() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_20A490F70;
  return sub_20A5B635C(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_20A5B7720(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A5B7780()
{
  if (!qword_26AC69DF0)
  {
    type metadata accessor for StockFeedViewerPage();
    sub_20A5B7818(&qword_26AC71328, 255, (void (*)(uint64_t))type metadata accessor for StockFeedViewerPage);
    unint64_t v0 = sub_20A8C83C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69DF0);
    }
  }
}

uint64_t sub_20A5B7818(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A5B7860(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A5B78C8@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + 40) = 0;
  *(_OWORD *)(a2 + 48) = xmmword_20A8E0DF0;
  uint64_t v3 = self;
  *(void *)(a2 + 64) = objc_msgSend(v3, sel_blackColor);
  *(void *)(a2 + 72) = objc_msgSend(v3, sel_whiteColor);
  sub_20A53D49C();
  *(void *)(a2 + 80) = sub_20A8CEEE0();
  *(void *)(a2 + 88) = objc_msgSend(v3, sel_systemWhiteColor);
  *(void *)(a2 + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.490196078, 0.498039216, 0.498039216, 1.0);
  *(void *)(a2 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.8, 0.8, 0.8, 1.0);
  *(void *)(a2 + 112) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.882352941, 0.960784314, 0.905882353, 1.0);
  *(void *)(a2 + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 0.490196078, 0.105882353, 1.0);
  *(void *)(a2 + 128) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.203921569, 0.780392157, 0.349019608, 1.0);
  *(void *)(a2 + 136) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.247058824, 0.941176471, 0.419607843, 1.0);
  *(void *)(a2 + 144) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.870588235, 0.0274509804, 0.109803922, 1.0);
  *(void *)(a2 + 152) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.231372549, 0.188235294, 1.0);
  *(void *)(a2 + 160) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.231372549, 0.588235294, 0.97254902, 1.0);
  *(void *)(a2 + 168) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.501960784, 0.501960784, 0.501960784, 1.0);
  *(void *)(a2 + 176) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.329411765, 0.329411765, 0.329411765, 1.0);
  *(void *)(a2 + 184) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.556862745, 0.556862745, 0.576470588, 1.0);
  *(void *)(a2 + 192) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.556862745, 0.556862745, 0.576470588, 0.12);
  *(void *)(a2 + 200) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.298039216, 0.850980392, 0.392156863, 1.0);
  *(void *)(a2 + 208) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.352941176, 0.784313725, 0.980392157, 1.0);
  *(void *)(a2 + 216) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 0.592156863, 1.0, 1.0);
  *(void *)(a2 + 224) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.552941176, 0.294117647, 1.0, 1.0);
  *(void *)(a2 + 232) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.407843137, 0.0, 1.0, 1.0);
  *(unsigned char *)(a2 + 240) = 1;
  *(void *)(a2 + 248) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 0.670588235, 1.0);
  id v4 = objc_msgSend(v3, sel_blackColor);
  id v5 = objc_msgSend(v4, sel_colorWithAlphaComponent_, 0.25);

  *(void *)(a2 + 256) = v5;
  id v6 = objc_msgSend(v3, sel_blackColor);
  id v7 = objc_msgSend(v6, sel_colorWithAlphaComponent_, 0.25);

  *(void *)(a2 + 264) = v7;
  id v8 = objc_msgSend(v3, sel_blackColor);
  id v9 = objc_msgSend(v8, sel_colorWithAlphaComponent_, 0.6);

  *(void *)(a2 + 272) = v9;
  id v10 = objc_msgSend(v3, sel_grayColor);
  id v11 = objc_msgSend(v10, sel_colorWithAlphaComponent_, 0.3);

  *(void *)(a2 + 280) = v11;
  *(void *)(a2 + 288) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.365, 0.365, 0.365, 1.0);
  *(void *)(a2 + 296) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.556862745, 0.556862745, 0.576470588, 1.0);
  *(void *)(a2 + 304) = objc_msgSend(v3, sel_whiteColor);
  *(void *)(a2 + 312) = sub_20A8CEEE0();
  *(void *)(a2 + 320) = objc_msgSend(v3, sel_secondaryLabelColor);
  id v12 = objc_msgSend(v3, sel_whiteColor);
  id v13 = objc_msgSend(v3, sel_secondarySystemBackgroundColor);
  id v14 = objc_msgSend(v3, sel_ts_dynamicColor_withDarkStyleVariant_, v12, v13);

  *(void *)(a2 + 328) = v14;
  *(void *)(a2 + 336) = objc_msgSend(v3, sel_secondaryLabelColor);
  *(void *)(a2 + 344) = objc_msgSend(v3, sel_labelColor);
  *(void *)(a2 + 352) = objc_msgSend(v3, sel_systemBackgroundColor);
  *(void *)(a2 + 360) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.933333333, 0.933333333, 0.937254902, 1.0);
  *(void *)(a2 + 368) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.556862745, 0.556862745, 0.576470588, 1.0);
  *(void *)(a2 + 376) = objc_msgSend(v3, sel_separatorColor);
  *(void *)(a2 + 384) = objc_msgSend(v3, sel_secondaryLabelColor);
  *(void *)(a2 + 392) = objc_msgSend(v3, sel_labelColor);

  return sub_20A42BEBC(a1, a2);
}

void destroy for LightTheme(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);

  uint64_t v2 = *(void **)(a1 + 392);
}

uint64_t initializeWithCopy for LightTheme(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  id v5 = *(void **)(a2 + 64);
  id v6 = *(void **)(a2 + 72);
  *(void *)(a1 + 64) = v5;
  *(void *)(a1 + 72) = v6;
  id v8 = *(void **)(a2 + 80);
  id v7 = *(void **)(a2 + 88);
  *(void *)(a1 + 80) = v8;
  *(void *)(a1 + 88) = v7;
  id v10 = *(void **)(a2 + 96);
  id v9 = *(void **)(a2 + 104);
  *(void *)(a1 + 96) = v10;
  *(void *)(a1 + 104) = v9;
  id v12 = *(void **)(a2 + 112);
  id v11 = *(void **)(a2 + 120);
  *(void *)(a1 + 112) = v12;
  *(void *)(a1 + 120) = v11;
  id v14 = *(void **)(a2 + 128);
  id v13 = *(void **)(a2 + 136);
  *(void *)(a1 + 128) = v14;
  *(void *)(a1 + 136) = v13;
  uint64_t v72 = v13;
  BOOL v73 = *(void **)(a2 + 144);
  int64_t v15 = *(void **)(a2 + 152);
  *(void *)(a1 + 144) = v73;
  *(void *)(a1 + 152) = v15;
  uint64_t v74 = v15;
  char v75 = *(void **)(a2 + 160);
  uint64_t v16 = *(void **)(a2 + 168);
  *(void *)(a1 + 160) = v75;
  *(void *)(a1 + 168) = v16;
  uint64_t v76 = v16;
  uint64_t v77 = *(void **)(a2 + 176);
  uint64_t v17 = *(void **)(a2 + 184);
  *(void *)(a1 + 176) = v77;
  *(void *)(a1 + 184) = v17;
  uint64_t v78 = v17;
  uint64_t v79 = *(void **)(a2 + 192);
  uint64_t v18 = *(void **)(a2 + 200);
  *(void *)(a1 + 192) = v79;
  *(void *)(a1 + 200) = v18;
  BOOL v80 = v18;
  uint64_t v81 = *(void **)(a2 + 208);
  int v19 = *(void **)(a2 + 216);
  *(void *)(a1 + 208) = v81;
  *(void *)(a1 + 216) = v19;
  uint64_t v82 = v19;
  uint64_t v83 = *(void **)(a2 + 224);
  uint64_t v85 = *(void **)(a2 + 232);
  *(void *)(a1 + 224) = v83;
  *(void *)(a1 + 232) = v85;
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  uint64_t v20 = *(void **)(a2 + 256);
  uint64_t v84 = *(void **)(a2 + 248);
  *(void *)(a1 + 248) = v84;
  *(void *)(a1 + 256) = v20;
  uint64_t v86 = v20;
  unint64_t v87 = *(void **)(a2 + 264);
  uint64_t v21 = *(void **)(a2 + 272);
  *(void *)(a1 + 264) = v87;
  *(void *)(a1 + 272) = v21;
  uint64_t v88 = v21;
  uint64_t v89 = *(void **)(a2 + 280);
  uint64_t v22 = *(void **)(a2 + 288);
  *(void *)(a1 + 280) = v89;
  *(void *)(a1 + 288) = v22;
  uint64_t v90 = v22;
  unint64_t v91 = *(void **)(a2 + 296);
  uint64_t v23 = *(void **)(a2 + 304);
  *(void *)(a1 + 296) = v91;
  *(void *)(a1 + 304) = v23;
  uint64_t v92 = v23;
  uint64_t v93 = *(void **)(a2 + 312);
  uint64_t v24 = *(void **)(a2 + 320);
  *(void *)(a1 + 312) = v93;
  *(void *)(a1 + 320) = v24;
  uint64_t v94 = v24;
  uint64_t v95 = *(void **)(a2 + 328);
  uint64_t v25 = *(void **)(a2 + 336);
  *(void *)(a1 + 328) = v95;
  *(void *)(a1 + 336) = v25;
  uint64_t v96 = v25;
  unint64_t v97 = *(void **)(a2 + 344);
  uint64_t v26 = *(void **)(a2 + 352);
  *(void *)(a1 + 344) = v97;
  *(void *)(a1 + 352) = v26;
  uint64_t v98 = v26;
  uint64_t v99 = *(void **)(a2 + 360);
  char v27 = *(void **)(a2 + 368);
  *(void *)(a1 + 360) = v99;
  *(void *)(a1 + 368) = v27;
  uint64_t v100 = v27;
  unint64_t v101 = *(void **)(a2 + 376);
  uint64_t v28 = *(void **)(a2 + 384);
  uint64_t v29 = *(void **)(a2 + 392);
  double v102 = v28;
  *(void *)(a1 + 376) = v101;
  *(void *)(a1 + 384) = v28;
  *(void *)(a1 + 392) = v29;
  id v30 = v5;
  id v31 = v6;
  id v32 = v8;
  id v33 = v7;
  id v34 = v10;
  id v35 = v9;
  id v36 = v12;
  id v37 = v11;
  id v38 = v14;
  id v39 = v72;
  id v40 = v73;
  id v41 = v74;
  id v42 = v75;
  id v43 = v76;
  id v44 = v77;
  id v45 = v78;
  id v46 = v79;
  id v47 = v80;
  id v48 = v81;
  id v49 = v82;
  id v50 = v83;
  id v51 = v85;
  id v52 = v84;
  id v53 = v86;
  id v54 = v87;
  id v55 = v88;
  id v56 = v89;
  id v57 = v90;
  id v58 = v91;
  id v59 = v92;
  id v60 = v93;
  id v61 = v94;
  id v62 = v95;
  id v63 = v96;
  id v64 = v97;
  id v65 = v98;
  id v66 = v99;
  id v67 = v100;
  id v68 = v101;
  id v69 = v102;
  id v70 = v29;
  return a1;
}

uint64_t assignWithCopy for LightTheme(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  long long v4 = *(void **)(a2 + 64);
  id v5 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v4;
  id v6 = v4;

  id v7 = *(void **)(a2 + 72);
  id v8 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = v7;
  id v9 = v7;

  id v10 = *(void **)(a2 + 80);
  id v11 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = v10;
  id v12 = v10;

  id v13 = *(void **)(a2 + 88);
  id v14 = *(void **)(a1 + 88);
  *(void *)(a1 + 88) = v13;
  id v15 = v13;

  uint64_t v16 = *(void **)(a2 + 96);
  uint64_t v17 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = v16;
  id v18 = v16;

  int v19 = *(void **)(a2 + 104);
  uint64_t v20 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = v19;
  id v21 = v19;

  uint64_t v22 = *(void **)(a2 + 112);
  uint64_t v23 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = v22;
  id v24 = v22;

  uint64_t v25 = *(void **)(a2 + 120);
  uint64_t v26 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = v25;
  id v27 = v25;

  uint64_t v28 = *(void **)(a2 + 128);
  uint64_t v29 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = v28;
  id v30 = v28;

  id v31 = *(void **)(a2 + 136);
  id v32 = *(void **)(a1 + 136);
  *(void *)(a1 + 136) = v31;
  id v33 = v31;

  id v34 = *(void **)(a2 + 144);
  id v35 = *(void **)(a1 + 144);
  *(void *)(a1 + 144) = v34;
  id v36 = v34;

  id v37 = *(void **)(a2 + 152);
  id v38 = *(void **)(a1 + 152);
  *(void *)(a1 + 152) = v37;
  id v39 = v37;

  id v40 = *(void **)(a2 + 160);
  id v41 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = v40;
  id v42 = v40;

  id v43 = *(void **)(a2 + 168);
  id v44 = *(void **)(a1 + 168);
  *(void *)(a1 + 168) = v43;
  id v45 = v43;

  id v46 = *(void **)(a2 + 176);
  id v47 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = v46;
  id v48 = v46;

  id v49 = *(void **)(a2 + 184);
  id v50 = *(void **)(a1 + 184);
  *(void *)(a1 + 184) = v49;
  id v51 = v49;

  id v52 = *(void **)(a2 + 192);
  id v53 = *(void **)(a1 + 192);
  *(void *)(a1 + 192) = v52;
  id v54 = v52;

  id v55 = *(void **)(a2 + 200);
  id v56 = *(void **)(a1 + 200);
  *(void *)(a1 + 200) = v55;
  id v57 = v55;

  id v58 = *(void **)(a2 + 208);
  id v59 = *(void **)(a1 + 208);
  *(void *)(a1 + 208) = v58;
  id v60 = v58;

  id v61 = *(void **)(a2 + 216);
  id v62 = *(void **)(a1 + 216);
  *(void *)(a1 + 216) = v61;
  id v63 = v61;

  id v64 = *(void **)(a2 + 224);
  id v65 = *(void **)(a1 + 224);
  *(void *)(a1 + 224) = v64;
  id v66 = v64;

  id v67 = *(void **)(a2 + 232);
  id v68 = *(void **)(a1 + 232);
  *(void *)(a1 + 232) = v67;
  id v69 = v67;

  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  id v70 = *(void **)(a2 + 248);
  uint64_t v71 = *(void **)(a1 + 248);
  *(void *)(a1 + 248) = v70;
  id v72 = v70;

  BOOL v73 = *(void **)(a2 + 256);
  uint64_t v74 = *(void **)(a1 + 256);
  *(void *)(a1 + 256) = v73;
  id v75 = v73;

  uint64_t v76 = *(void **)(a2 + 264);
  uint64_t v77 = *(void **)(a1 + 264);
  *(void *)(a1 + 264) = v76;
  id v78 = v76;

  uint64_t v79 = *(void **)(a2 + 272);
  BOOL v80 = *(void **)(a1 + 272);
  *(void *)(a1 + 272) = v79;
  id v81 = v79;

  uint64_t v82 = *(void **)(a2 + 280);
  uint64_t v83 = *(void **)(a1 + 280);
  *(void *)(a1 + 280) = v82;
  id v84 = v82;

  uint64_t v85 = *(void **)(a2 + 288);
  uint64_t v86 = *(void **)(a1 + 288);
  *(void *)(a1 + 288) = v85;
  id v87 = v85;

  uint64_t v88 = *(void **)(a2 + 296);
  uint64_t v89 = *(void **)(a1 + 296);
  *(void *)(a1 + 296) = v88;
  id v90 = v88;

  unint64_t v91 = *(void **)(a2 + 304);
  uint64_t v92 = *(void **)(a1 + 304);
  *(void *)(a1 + 304) = v91;
  id v93 = v91;

  uint64_t v94 = *(void **)(a2 + 312);
  uint64_t v95 = *(void **)(a1 + 312);
  *(void *)(a1 + 312) = v94;
  id v96 = v94;

  unint64_t v97 = *(void **)(a2 + 320);
  uint64_t v98 = *(void **)(a1 + 320);
  *(void *)(a1 + 320) = v97;
  id v99 = v97;

  uint64_t v100 = *(void **)(a2 + 328);
  unint64_t v101 = *(void **)(a1 + 328);
  *(void *)(a1 + 328) = v100;
  id v102 = v100;

  uint64_t v103 = *(void **)(a2 + 336);
  unint64_t v104 = *(void **)(a1 + 336);
  *(void *)(a1 + 336) = v103;
  id v105 = v103;

  uint64_t v106 = *(void **)(a2 + 344);
  uint64_t v107 = *(void **)(a1 + 344);
  *(void *)(a1 + 344) = v106;
  id v108 = v106;

  unint64_t v109 = *(void **)(a2 + 352);
  uint64_t v110 = *(void **)(a1 + 352);
  *(void *)(a1 + 352) = v109;
  id v111 = v109;

  uint64_t v112 = *(void **)(a2 + 360);
  uint64_t v113 = *(void **)(a1 + 360);
  *(void *)(a1 + 360) = v112;
  id v114 = v112;

  uint64_t v115 = *(void **)(a2 + 368);
  uint64_t v116 = *(void **)(a1 + 368);
  *(void *)(a1 + 368) = v115;
  id v117 = v115;

  uint64_t v118 = *(void **)(a2 + 376);
  uint64_t v119 = *(void **)(a1 + 376);
  *(void *)(a1 + 376) = v118;
  id v120 = v118;

  unint64_t v121 = *(void **)(a2 + 384);
  v122 = *(void **)(a1 + 384);
  *(void *)(a1 + 384) = v121;
  id v123 = v121;

  uint64_t v124 = *(void **)(a2 + 392);
  uint64_t v125 = *(void **)(a1 + 392);
  *(void *)(a1 + 392) = v124;
  id v126 = v124;

  return a1;
}

void *__swift_memcpy400_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x190uLL);
}

uint64_t assignWithTake for LightTheme(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  id v5 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  id v6 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);

  id v7 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);

  id v8 = *(void **)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);

  id v9 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);

  id v10 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);

  id v11 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);

  id v12 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);

  id v13 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);

  id v14 = *(void **)(a1 + 136);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);

  id v15 = *(void **)(a1 + 144);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);

  uint64_t v16 = *(void **)(a1 + 152);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);

  uint64_t v17 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);

  id v18 = *(void **)(a1 + 168);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);

  int v19 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);

  uint64_t v20 = *(void **)(a1 + 184);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);

  id v21 = *(void **)(a1 + 192);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);

  uint64_t v22 = *(void **)(a1 + 200);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);

  uint64_t v23 = *(void **)(a1 + 208);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);

  id v24 = *(void **)(a1 + 216);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);

  uint64_t v25 = *(void **)(a1 + 224);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);

  uint64_t v26 = *(void **)(a1 + 232);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);

  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  id v27 = *(void **)(a1 + 248);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);

  uint64_t v28 = *(void **)(a1 + 256);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);

  uint64_t v29 = *(void **)(a1 + 264);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);

  id v30 = *(void **)(a1 + 272);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);

  id v31 = *(void **)(a1 + 280);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);

  id v32 = *(void **)(a1 + 288);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);

  id v33 = *(void **)(a1 + 296);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);

  id v34 = *(void **)(a1 + 304);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);

  id v35 = *(void **)(a1 + 312);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);

  id v36 = *(void **)(a1 + 320);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);

  id v37 = *(void **)(a1 + 328);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);

  id v38 = *(void **)(a1 + 336);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);

  id v39 = *(void **)(a1 + 344);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);

  id v40 = *(void **)(a1 + 352);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);

  id v41 = *(void **)(a1 + 360);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);

  id v42 = *(void **)(a1 + 368);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);

  id v43 = *(void **)(a1 + 376);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);

  id v44 = *(void **)(a1 + 384);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);

  id v45 = *(void **)(a1 + 392);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);

  return a1;
}

uint64_t getEnumTagSinglePayload for LightTheme(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 400)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LightTheme(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 392) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 400) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 400) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LightTheme()
{
  return &type metadata for LightTheme;
}

void sub_20A5B8BC0(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40);
}

id sub_20A5B8BCC()
{
  return *(id *)(v0 + 64);
}

id sub_20A5B8BD4()
{
  return *(id *)(v0 + 72);
}

id sub_20A5B8BDC(uint64_t a1, uint64_t a2)
{
  return sub_20A5B8CB0(a1, a2, (SEL *)&selRef_systemGroupedBackgroundColor);
}

id sub_20A5B8BE8()
{
  return *(id *)(v0 + 80);
}

id sub_20A5B8BF0()
{
  return *(id *)(v0 + 88);
}

uint64_t sub_20A5B8BF8()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
}

uint64_t sub_20A5B8C50()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

id sub_20A5B8CA4(uint64_t a1, uint64_t a2)
{
  return sub_20A5B8CB0(a1, a2, (SEL *)&selRef_whiteColor);
}

id sub_20A5B8CB0(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v3 = [self *a3];

  return v3;
}

id sub_20A5B8CF8()
{
  return *(id *)(v0 + 96);
}

id sub_20A5B8D00()
{
  return *(id *)(v0 + 104);
}

id sub_20A5B8D08()
{
  BOOL v1 = UIAccessibilityDarkerSystemColorsEnabled();
  uint64_t v2 = 128;
  if (v1) {
    uint64_t v2 = 120;
  }
  id v3 = *(void **)(v0 + v2);

  return v3;
}

id sub_20A5B8D44()
{
  return *(id *)(v0 + 112);
}

id sub_20A5B8D4C()
{
  BOOL v1 = UIAccessibilityDarkerSystemColorsEnabled();
  uint64_t v2 = 152;
  if (v1) {
    uint64_t v2 = 144;
  }
  id v3 = *(void **)(v0 + v2);

  return v3;
}

id sub_20A5B8D88()
{
  return *(id *)(v0 + 160);
}

id sub_20A5B8D90()
{
  return *(id *)(v0 + 168);
}

id sub_20A5B8D98()
{
  if (UIAccessibilityDarkerSystemColorsEnabled())
  {
    BOOL v1 = v0 + 17;
  }
  else
  {
    BOOL v2 = UIAccessibilityDarkerSystemColorsEnabled();
    BOOL v1 = v0 + 15;
    if (!v2) {
      BOOL v1 = v0 + 16;
    }
  }
  id v3 = *v1;

  return v3;
}

id sub_20A5B8DE4()
{
  return *(id *)(v0 + 152);
}

id sub_20A5B8DF0()
{
  return *(id *)(v0 + 176);
}

id sub_20A5B8DF8()
{
  return *(id *)(v0 + 184);
}

id sub_20A5B8E00()
{
  return *(id *)(v0 + 192);
}

id sub_20A5B8E08()
{
  return *(id *)(v0 + 352);
}

id sub_20A5B8E10()
{
  return *(id *)(v0 + 360);
}

id sub_20A5B8E1C()
{
  if (UIAccessibilityDarkerSystemColorsEnabled())
  {
    BOOL v1 = UIAccessibilityDarkerSystemColorsEnabled();
    BOOL v2 = v0 + 15;
    if (!v1) {
      BOOL v2 = v0 + 16;
    }
  }
  else
  {
    BOOL v2 = v0 + 25;
  }
  id v3 = *v2;

  return v3;
}

id sub_20A5B8E68()
{
  return *(id *)(v0 + 208);
}

id sub_20A5B8E70()
{
  return *(id *)(v0 + 216);
}

id sub_20A5B8E78()
{
  return *(id *)(v0 + 224);
}

id sub_20A5B8E80()
{
  return *(id *)(v0 + 232);
}

id sub_20A5B8E88()
{
  return *(id *)(v0 + 248);
}

void sub_20A5B8E90(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 240);
}

id sub_20A5B8E9C()
{
  return *(id *)(v0 + 256);
}

id sub_20A5B8EA4()
{
  return *(id *)(v0 + 264);
}

id sub_20A5B8EAC()
{
  return *(id *)(v0 + 272);
}

id sub_20A5B8EB4()
{
  return *(id *)(v0 + 280);
}

id sub_20A5B8EBC()
{
  return *(id *)(v0 + 288);
}

id sub_20A5B8EC4()
{
  return *(id *)(v0 + 296);
}

id sub_20A5B8ECC()
{
  return *(id *)(v0 + 304);
}

id sub_20A5B8ED4()
{
  return *(id *)(v0 + 312);
}

id sub_20A5B8EDC()
{
  return *(id *)(v0 + 320);
}

id sub_20A5B8EE4()
{
  return *(id *)(v0 + 328);
}

id sub_20A5B8EEC()
{
  return *(id *)(v0 + 336);
}

id sub_20A5B8EF4()
{
  return *(id *)(v0 + 344);
}

uint64_t sub_20A5B8EFC()
{
  return sub_20A8CEEE0();
}

id sub_20A5B8F28()
{
  return *(id *)(v0 + 368);
}

id sub_20A5B8F30()
{
  return *(id *)(v0 + 376);
}

id sub_20A5B8F38()
{
  return *(id *)(v0 + 384);
}

id sub_20A5B8F40()
{
  return *(id *)(v0 + 392);
}

uint64_t sub_20A5B8F48()
{
  return *(void *)(v0 + 48);
}

uint64_t sub_20A5B8F50()
{
  return *(void *)(v0 + 56);
}

char *sub_20A5B8F60(double a1, double a2, double a3, double a4)
{
  id v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC8StocksUI10ReaderView_contentMaxWidth] = 0x408EF00000000000;
  uint64_t v11 = OBJC_IVAR____TtC8StocksUI10ReaderView_contentBackgroundColor;
  id v12 = self;
  id v13 = v5;
  *(void *)&v5[v11] = objc_msgSend(v12, sel_whiteColor);
  uint64_t v14 = OBJC_IVAR____TtC8StocksUI10ReaderView_contentView;
  *(void *)&v13[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v30.receiver = v13;
  v30.super_class = ObjectType;
  id v15 = objc_msgSendSuper2(&v30, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v15, sel_setPreservesSuperviewLayoutMargins_, 1);
  id v16 = objc_allocWithZone(MEMORY[0x263F825C8]);
  uint64_t v17 = (char *)v15;
  id v18 = objc_msgSend(v16, sel_initWithWhite_alpha_, 0.929411765, 1.0);
  objc_msgSend(v17, sel_setBackgroundColor_, v18);

  uint64_t v19 = OBJC_IVAR____TtC8StocksUI10ReaderView_contentView;
  uint64_t v20 = *(void **)&v17[OBJC_IVAR____TtC8StocksUI10ReaderView_contentView];
  objc_msgSend(v17, sel_addSubview_, v20);
  objc_msgSend(v20, sel_setBackgroundColor_, *(void *)&v17[OBJC_IVAR____TtC8StocksUI10ReaderView_contentBackgroundColor]);
  id v21 = objc_msgSend(v20, sel_layer);
  id v22 = objc_msgSend(v12, sel_blackColor);
  id v23 = objc_msgSend(v22, sel_colorWithAlphaComponent_, 0.27);

  id v24 = objc_msgSend(v23, sel_CGColor);
  objc_msgSend(v21, sel_setShadowColor_, v24);

  id v25 = objc_msgSend(*(id *)&v17[v19], sel_layer);
  objc_msgSend(v25, sel_setShadowOffset_, 0.0, -2.0);

  id v26 = objc_msgSend(*(id *)&v17[v19], sel_layer);
  LODWORD(v27) = 1049247089;
  objc_msgSend(v26, sel_setShadowOpacity_, v27);

  id v28 = objc_msgSend(*(id *)&v17[v19], sel_layer);
  objc_msgSend(v28, sel_setShadowRadius_, 4.0);

  return v17;
}

void sub_20A5B9288()
{
  v26.receiver = v0;
  v26.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v26, sel_layoutSubviews);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8StocksUI10ReaderView_contentView];
  objc_msgSend(v0, sel_bounds);
  double Width = CGRectGetWidth(v27);
  uint64_t v3 = OBJC_IVAR____TtC8StocksUI10ReaderView_contentMaxWidth;
  double v4 = *(double *)&v0[OBJC_IVAR____TtC8StocksUI10ReaderView_contentMaxWidth];
  objc_msgSend(v0, sel_layoutMargins);
  double v6 = v4 + v5;
  objc_msgSend(v0, sel_layoutMargins);
  if ((Width - (v6 + v7)) * 0.5 < 0.0) {
    double v8 = 0.0;
  }
  else {
    double v8 = (Width - (v6 + v7)) * 0.5;
  }
  objc_msgSend(v0, sel_bounds);
  double v9 = CGRectGetWidth(v28);
  double v10 = *(double *)&v0[v3];
  objc_msgSend(v0, sel_layoutMargins);
  double v12 = v10 + v11;
  objc_msgSend(v0, sel_layoutMargins);
  if (v12 + v13 < v9) {
    double v9 = v12 + v13;
  }
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_, v8, 0.0, v9, CGRectGetHeight(v29));
  id v14 = objc_msgSend(v1, sel_layer);
  id v15 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v15, sel_bounds);
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;

  id v24 = objc_msgSend(self, sel_bezierPathWithRect_, v17, v19, v21, v23);
  id v25 = objc_msgSend(v24, sel_CGPath);

  objc_msgSend(v14, sel_setShadowPath_, v25);
}

uint64_t type metadata accessor for ReaderView()
{
  return self;
}

void sub_20A5B9538()
{
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI10ReaderView_contentMaxWidth] = 0x408EF00000000000;
  uint64_t v1 = OBJC_IVAR____TtC8StocksUI10ReaderView_contentBackgroundColor;
  *(void *)&v0[v1] = objc_msgSend(self, sel_whiteColor);
  uint64_t v2 = OBJC_IVAR____TtC8StocksUI10ReaderView_contentView;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_20A8CF520();
  __break(1u);
}

uint64_t sub_20A5B9610()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CopyArticleCommandHandler()
{
  return self;
}

uint64_t sub_20A5B9674(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  return sub_20A5B96A8(*a4);
}

uint64_t sub_20A5B967C(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  return sub_20A5B9A3C(*a4) & 1;
}

uint64_t sub_20A5B96A8(void *a1)
{
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v2 - 8);
  double v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  double v7 = (char *)&v26 - v6;
  uint64_t v8 = sub_20A8C2530();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  double v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  CGRect v27 = (char *)&v26 - v13;
  uint64_t ObjectType = swift_getObjectType();
  CGRect v29 = a1;
  id v14 = objc_msgSend(a1, sel_routeURL);
  if (v14)
  {
    id v15 = v14;
    sub_20A8C24E0();

    double v16 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v16(v4, v11, v8);
    double v17 = *(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56);
    v17(v4, 0, 1, v8);
    double v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    if (v18(v4, 1, v8) != 1)
    {
      v16(v7, v4, v8);
      v17(v7, 0, 1, v8);
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4, 1, 1, v8);
  }
  sub_20A8CECA0();
  sub_20A5B9E98((uint64_t)v4, (uint64_t (*)(void))sub_20A4845D0);
  double v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
LABEL_6:
  if (v18(v7, 1, v8) == 1) {
    return sub_20A5B9E98((uint64_t)v7, (uint64_t (*)(void))sub_20A4845D0);
  }
  double v20 = v27;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v27, v7, v8);
  double v21 = self;
  id v22 = objc_msgSend(v21, sel_generalPasteboard);
  double v23 = (void *)sub_20A8C24D0();
  objc_msgSend(v22, sel_setURL_, v23);

  id v24 = objc_msgSend(v21, sel_generalPasteboard);
  sub_20A8C24C0();
  id v25 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_setString_, v25);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v20, v8);
}

uint64_t sub_20A5B9A3C(void *a1)
{
  uint64_t result = (uint64_t)objc_msgSend(a1, sel_sourceChannel);
  if (result)
  {
    double v4 = (void *)result;
    uint64_t v5 = *(void **)(v1 + 24);
    swift_unknownObjectRetain();
    id v6 = objc_msgSend(v5, sel_purchaseProvider);
    if (objc_msgSend((id)swift_unknownObjectRetain(), sel_tagType) == (id)3)
    {
      id v7 = objc_msgSend(v4, sel_asSection);
      if (!v7
        || (id v8 = objc_msgSend(v7, sel_parentID), swift_unknownObjectRelease(), !v8))
      {
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        goto LABEL_9;
      }
    }
    else
    {
      id v8 = objc_msgSend(v4, sel_identifier);
    }
    uint64_t v9 = sub_20A8CE280();
    uint64_t v11 = v10;

    id v12 = objc_msgSend(v6, sel_purchasedTagIDs);
    uint64_t v13 = sub_20A8CE7F0();

    LOBYTE(v9) = sub_20A4443F8(v9, v11, v13);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v9)
    {
      swift_unknownObjectRelease_n();
      return 1;
    }
LABEL_9:
    id v14 = (char *)objc_msgSend(objc_msgSend(v5, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    if (objc_getAssociatedObject(v14, v14 + 1))
    {
      sub_20A8CF270();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v25 = 0u;
      long long v26 = 0u;
    }
    sub_20A443438((uint64_t)&v25, (uint64_t)v27);
    if (v28)
    {
      sub_20A4434F8();
      if (swift_dynamicCast())
      {
        id v15 = v24;
        id v16 = objc_msgSend(v24, sel_integerValue);
        if (v16 == (id)-1)
        {

          goto LABEL_29;
        }
        unint64_t v17 = (unint64_t)v16;
LABEL_18:
        if (objc_getAssociatedObject(v14, (const void *)~v17))
        {
          sub_20A8CF270();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v25 = 0u;
          long long v26 = 0u;
        }
        sub_20A443438((uint64_t)&v25, (uint64_t)v27);
        if (v28)
        {
          sub_20A4434F8();
          if (swift_dynamicCast())
          {
            id v18 = v24;
            unsigned int v19 = objc_msgSend(v18, sel_integerValue);

            if (((v19 + 1) ^ (v17 + 1)))
            {
LABEL_29:
              id v20 = objc_msgSend(objc_msgSend(v5, sel_bundleSubscriptionProvider), sel_bundleSubscription);
              swift_unknownObjectRelease();
              id v21 = objc_msgSend(v4, sel_identifier);
              if (!v21)
              {
                sub_20A8CE280();
                id v21 = (id)sub_20A8CE240();
                swift_bridgeObjectRelease();
              }
              unsigned int v22 = objc_msgSend(v20, sel_containsTagID_, v21);
              swift_unknownObjectRelease();

              if (v22)
              {
                swift_unknownObjectRelease();
                return 1;
              }
              goto LABEL_34;
            }
LABEL_27:
            swift_unknownObjectRelease();
LABEL_34:
            unsigned int v23 = objc_msgSend(a1, sel_isPaid);
            swift_unknownObjectRelease();
            return v23 ^ 1;
          }
        }
        else
        {
          sub_20A5B9E98((uint64_t)v27, (uint64_t (*)(void))sub_20A42F348);
        }

        if (v17) {
          goto LABEL_29;
        }
        goto LABEL_27;
      }
    }
    else
    {
      sub_20A5B9E98((uint64_t)v27, (uint64_t (*)(void))sub_20A42F348);
    }
    id v15 = 0;
    unint64_t v17 = 0;
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_20A5B9E98(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A5B9EF8()
{
  sub_20A4380C4(v0 + 16);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManageWatchlistsEventHandler()
{
  return self;
}

uint64_t sub_20A5B9F6C(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x2105289B0](a2 + 16);
  if (result)
  {
    sub_20A5BA024();
    sub_20A8CB470();
    swift_allocObject();
    sub_20A8CB420();
    sub_20A8CB430();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

unint64_t sub_20A5BA024()
{
  unint64_t result = qword_26763C490;
  if (!qword_26763C490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C490);
  }
  return result;
}

__n128 sub_20A5BA078@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for StockViewLayoutOptions();
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v31 - v10;
  sub_20A8C9720();
  double v13 = v12;
  sub_20A8C9720();
  double v15 = v14;
  sub_20A5BDE0C(a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StockViewLayoutOptions);
  id v16 = (void *)sub_20A8C97B0();
  char v17 = sub_20A8CECD0();

  if (v17)
  {
    sub_20A5BDE0C((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockViewLayoutOptions);
    int v18 = sub_20A5BD948((uint64_t)v8) & 1;
    sub_20A5BDDAC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StockViewLayoutOptions);
    sub_20A5BA308(a1, a2, v18, v33, v13, v15);
  }
  else
  {
    sub_20A5BDDAC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StockViewLayoutOptions);
    sub_20A5BB8B8(a1, a2, v33, v13, v15);
  }
  uint64_t v20 = v56;
  uint64_t v19 = v57;
  uint64_t v21 = v52;
  uint64_t v22 = v54;
  uint64_t v23 = v50;
  uint64_t v24 = v51;
  uint64_t v25 = v38;
  uint64_t v26 = v34;
  char v27 = v35;
  char v32 = v55;
  long long v28 = v33[1];
  *(_OWORD *)a3 = v33[0];
  *(_OWORD *)(a3 + 16) = v28;
  *(void *)(a3 + 32) = v26;
  *(unsigned char *)(a3 + 40) = v27;
  long long v29 = v37;
  *(_OWORD *)(a3 + 48) = v36;
  *(_OWORD *)(a3 + 64) = v29;
  *(void *)(a3 + 80) = v25;
  *(_OWORD *)(a3 + 88) = v39;
  *(_OWORD *)(a3 + 104) = v40;
  *(_OWORD *)(a3 + 120) = v41;
  *(_OWORD *)(a3 + 136) = v42;
  *(_OWORD *)(a3 + 152) = v43;
  *(_OWORD *)(a3 + 168) = v44;
  *(_OWORD *)(a3 + 184) = v45;
  *(_OWORD *)(a3 + 200) = v46;
  *(_OWORD *)(a3 + 216) = v47;
  *(_OWORD *)(a3 + 232) = v48;
  *(_OWORD *)(a3 + 248) = v49;
  *(void *)(a3 + 264) = v23;
  *(void *)(a3 + 272) = v24;
  *(void *)(a3 + 280) = v21;
  __n128 result = v53;
  *(__n128 *)(a3 + 288) = v53;
  *(void *)(a3 + 304) = v22;
  *(unsigned char *)(a3 + 312) = v32;
  *(void *)(a3 + 320) = v20;
  *(void *)(a3 + 328) = v19;
  return result;
}

void *sub_20A5BA308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  double v7 = v6;
  LODWORD(v250) = a3;
  double v279 = a5;
  v262 = a4;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A5BDA88(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  *(void *)&double v267 = (char *)&v237 - v13;
  sub_20A5BDA88(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, v11);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v254 = (uint64_t)&v237 - v15;
  *(double *)&uint64_t v16 = COERCE_DOUBLE(type metadata accessor for StockSparklineViewModel(0));
  CGFloat v252 = *(double *)(v16 - 8);
  CGFloat v253 = *(double *)&v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v239 = (uint64_t)&v237 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v276 = COERCE_DOUBLE(sub_20A8C4030());
  CGFloat v273 = *(double *)(*(void *)&v276 - 8);
  MEMORY[0x270FA5388](*(void *)&v276);
  uint64_t v19 = (char *)&v237 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v20);
  *(void *)&double v274 = (char *)&v237 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v237 - v23;
  uint64_t v25 = sub_20A8CADF0();
  uint64_t v260 = *(void *)(v25 - 8);
  uint64_t v261 = v25;
  MEMORY[0x270FA5388](v25);
  char v27 = (char *)&v237 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C9710();
  double v257 = v28;
  double v30 = v29;
  uint64_t v31 = (void *)sub_20A8C9790();
  double v32 = COERCE_DOUBLE(objc_msgSend(v31, sel_horizontalSizeClass));

  CGFloat v255 = v32;
  double v33 = 12.0;
  if (*(void *)&v32 != 2) {
    double v33 = v30;
  }
  double v282 = v33;
  sub_20A8C96E0();
  sub_20A8CADC0();
  double v35 = v34;
  v259 = v27;
  sub_20A8CADC0();
  double v37 = v36;
  double v275 = v7;
  uint64_t v38 = *(void *)(*(void *)&v7 + 40);
  v281 = (void *)(*(void *)&v7 + 16);
  long long v39 = __swift_project_boxed_opaque_existential_1((void *)(*(void *)&v7 + 16), v38);
  *(double *)&uint64_t v40 = COERCE_DOUBLE(type metadata accessor for StockViewModel());
  uint64_t v41 = *(int *)(v40 + 28);
  uint64_t v278 = a1;
  uint64_t v42 = a1 + v41;
  sub_20A8C4250();
  sub_20A8C4230();
  if (qword_26AC69070 != -1) {
    swift_once();
  }
  double v277 = v35 + v37;
  sub_20A8C4220();
  swift_release();
  char v43 = *(unsigned char *)(v42 + 8);
  uint64_t v280 = a2;
  CGFloat v251 = *(double *)&v40;
  if (v43)
  {
    double v276 = *(double *)(v42 + 64);
    swift_bridgeObjectRetain();
    goto LABEL_21;
  }
  char v44 = v283[0];
  double v45 = *(double *)v42;
  sub_20A5BDE0C(v42, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  if (v44)
  {
    CGFloat v46 = v273;
    double v47 = v276;
    (*(void (**)(char *, char *, double))(*(void *)&v273 + 16))(v19, &v24[*(int *)(v20 + 40)], COERCE_DOUBLE(*(void *)&v276));
    int v48 = (*(uint64_t (**)(char *, double))(*(void *)&v46 + 88))(v19, COERCE_DOUBLE(*(void *)&v47));
    char v49 = 2;
    if (v48 == *MEMORY[0x263F7AF90]
      || v48 == *MEMORY[0x263F7AF98]
      || v48 == *MEMORY[0x263F7AF68]
      || v48 == *MEMORY[0x263F7AF80]
      || v48 == *MEMORY[0x263F7AF70]
      || v48 == *MEMORY[0x263F7AF88])
    {
      goto LABEL_16;
    }
    if (v48 != *MEMORY[0x263F7AF78])
    {
      if (v48 != *MEMORY[0x263F7AF60]) {
        (*(void (**)(char *, double))(*(void *)&v46 + 8))(v19, COERCE_DOUBLE(*(void *)&v47));
      }
      char v49 = 2;
      goto LABEL_16;
    }
  }
  char v49 = 0;
LABEL_16:
  sub_20A5BDDAC((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  if (qword_26AC6D680 != -1) {
    swift_once();
  }
  *(double *)&uint64_t v50 = COERCE_DOUBLE(sub_20A6573EC(*(void *)(v42 + 48), *(void *)(v42 + 56), 5, 1, v49, v45));
  uint64_t v52 = v51;
  uint64_t v53 = *(void *)&v274;
  sub_20A5BDE0C(v42, *(uint64_t *)&v274, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  if (!v52)
  {
    uint64_t v50 = *(uint64_t *)(v53 + 64);
    swift_bridgeObjectRetain();
  }
  double v276 = *(double *)&v50;
  sub_20A5BDDAC(v53, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
LABEL_21:
  CGFloat v270 = -5.98008217e197;
  CGFloat v269 = 1.30355344e-76;
  uint64_t v54 = (void *)*v39;
  sub_20A5BDA88(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
  id v249 = v55;
  uint64_t inited = swift_initStackObject();
  long long v247 = xmmword_20A8D4540;
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v57 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  swift_bridgeObjectRetain();
  double v246 = COERCE_DOUBLE(v57);
  uint64_t v58 = sub_20A8C7F80();
  *(double *)&uint64_t v59 = COERCE_DOUBLE(sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80));
  *(void *)(inited + 40) = v58;
  id v60 = (void *)*MEMORY[0x263F81500];
  double v245 = *(double *)&v59;
  *(double *)(inited + 64) = *(double *)&v59;
  *(void *)(inited + 72) = v60;
  id v61 = v54 + 8;
  uint64_t v62 = v54[11];
  uint64_t v63 = v54[12];
  __swift_project_boxed_opaque_existential_1(v61, v62);
  uint64_t v64 = *(void *)(v63 + 16);
  id v65 = *(uint64_t (**)(uint64_t, uint64_t))(v64 + 40);
  CGFloat v244 = COERCE_DOUBLE(v60);
  uint64_t v66 = v65(v62, v64);
  CGFloat v243 = COERCE_DOUBLE(sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0));
  *(CGFloat *)(inited + 104) = v243;
  *(void *)(inited + 80) = v66;
  sub_20A4CF8B0(inited);
  id v67 = objc_allocWithZone(MEMORY[0x263F086A0]);
  id v68 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  double v70 = v69;
  CGFloat v241 = COERCE_DOUBLE(sub_20A5BDBDC((unint64_t *)&qword_26AC7F9F8, type metadata accessor for Key));
  CGFloat v242 = v70;
  uint64_t v240 = MEMORY[0x263F8EE58] + 8;
  uint64_t v71 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v72 = objc_msgSend(v67, sel_initWithString_attributes_, v68, v71);
  swift_bridgeObjectRelease();

  double v73 = v279;
  objc_msgSend(v72, sel_boundingRectWithSize_options_context_, 1, 0, v279, a6);
  CGFloat v75 = v74;
  double v276 = v76;
  CGFloat v272 = v78;
  CGFloat v273 = v77;
  uint64_t v79 = *(uint64_t **)&v275;
  BOOL v80 = v281;
  __swift_project_boxed_opaque_existential_1(v281, *(void *)(*(void *)&v275 + 40));
  if (*(unsigned char *)(v42 + 24)) {
    char v81 = 2;
  }
  else {
    char v81 = *(double *)(v42 + 16) < 0.0;
  }
  id v82 = sub_20A4E7EB8(0x4D30302E303030, 0xE700000000000000, v81);
  CGFloat v268 = a6;
  double v83 = sub_20A5BC7A4(v82, 1, v73, a6);
  double v85 = v84;
  uint64_t v86 = type metadata accessor for StockViewLayoutOptions();
  uint64_t v87 = v280;
  CGFloat v266 = *(double *)(v280 + *(int *)(v86 + 32));
  sub_20A8CE970();
  CGFloat v271 = v83 + v88;
  sub_20A8CE980();
  double v274 = v85 + v89;
  __swift_project_boxed_opaque_existential_1(v80, v79[5]);
  id v90 = (void *)sub_20A8C7F80();
  objc_msgSend(v90, sel_ascender);
  double v92 = v91;

  double v93 = v92 + 14.0;
  CGFloat v94 = v276;
  double v95 = v73 - v277;
  CGFloat v96 = v75;
  v285.origin.double x = v75;
  v285.origin.double y = v276;
  CGFloat v97 = v272;
  CGFloat v98 = v273;
  v285.size.CGFloat width = v273;
  v285.size.CGFloat height = v272;
  CGFloat Width = CGRectGetWidth(v285);
  double v100 = v282;
  CGFloat v265 = v95 - Width - v282;
  unint64_t v101 = (void *)sub_20A8CEC60();
  objc_msgSend(v101, sel_ascender);
  double v103 = v102;

  CGFloat v104 = v93 - v103;
  v286.origin.double x = v96;
  v286.origin.double y = v94;
  v286.size.CGFloat width = v98;
  v286.size.CGFloat height = v97;
  CGFloat v105 = CGRectGetWidth(v286);
  v287.origin.double x = v96;
  v287.origin.double y = v94;
  v287.size.CGFloat width = v98;
  v287.size.CGFloat height = v97;
  v288.size.CGFloat height = CGRectGetHeight(v287);
  v288.origin.double x = v265;
  v288.origin.double y = v104;
  v288.size.CGFloat width = v105;
  CGRect v289 = CGRectIntegral(v288);
  double x = v289.origin.x;
  double y = v289.origin.y;
  CGFloat v108 = v289.size.width;
  CGFloat height = v289.size.height;
  double v276 = v95;
  double v110 = v271;
  v290.origin.double y = CGRectGetMaxY(v289) + 2.0;
  v290.origin.double x = v95 - v110 - v100;
  v290.size.CGFloat width = v110;
  v290.size.CGFloat height = v274;
  CGRect v291 = CGRectIntegral(v290);
  CGFloat v273 = v291.origin.y;
  double v274 = v291.origin.x;
  CGFloat v271 = v291.size.height;
  CGFloat v272 = v291.size.width;
  double v111 = v266 + CGRectGetMinY(v291);
  id v256 = v82;
  uint64_t v112 = (void *)sub_20A8CEC60();
  objc_msgSend(v112, sel_ascender);
  double v114 = v113;

  uint64_t v115 = (void *)sub_20A8CEC60();
  objc_msgSend(v115, sel_ascender);
  double v238 = v116;

  id v258 = v72;
  id v117 = (void *)sub_20A8CEC60();
  objc_msgSend(v117, sel_capHeight);
  double v119 = v118;

  sub_20A8C9720();
  if (v120 > 320.0) {
    double v121 = 68.0;
  }
  else {
    double v121 = 44.0;
  }
  CGFloat v265 = y;
  CGFloat v266 = x;
  v292.origin.double x = x;
  v292.origin.double y = y;
  CGFloat v263 = height;
  CGFloat v264 = v108;
  v292.size.CGFloat width = v108;
  v292.size.CGFloat height = height;
  double MinY = CGRectGetMinY(v292);
  id v123 = (double *)(v87 + *(int *)(v86 + 20));
  CGFloat v124 = v123[1];
  if (v124 != 0.0)
  {
    CGFloat v125 = *v123;
    swift_bridgeObjectRetain();
    uint64_t v126 = sub_20A8CE390();
    if (v126 >= sub_20A8CE390())
    {
      CGFloat v269 = v125;
      CGFloat v270 = v124;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  double v127 = v268;
  double v128 = v111 + v114;
  uint64_t v129 = (void *)*__swift_project_boxed_opaque_existential_1(v281, v79[5]);
  uint64_t v130 = swift_initStackObject();
  *(_OWORD *)(v130 + 16) = v247;
  double v131 = v246;
  *(double *)(v130 + 32) = v246;
  swift_bridgeObjectRetain();
  id v132 = *(id *)&v131;
  *(void *)(v130 + 40) = sub_20A8C7F80();
  CGFloat v133 = v244;
  *(double *)(v130 + 64) = v245;
  *(CGFloat *)(v130 + 72) = v133;
  uint64_t v134 = v129 + 8;
  uint64_t v135 = v129[11];
  uint64_t v136 = v129[12];
  __swift_project_boxed_opaque_existential_1(v134, v135);
  uint64_t v137 = *(void *)(v136 + 16);
  unint64_t v138 = *(uint64_t (**)(uint64_t, uint64_t))(v137 + 40);
  id v139 = *(id *)&v133;
  uint64_t v140 = v138(v135, v137);
  *(CGFloat *)(v130 + 104) = v243;
  *(void *)(v130 + 80) = v140;
  sub_20A4CF8B0(v130);
  id v141 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v142 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  uint64_t v143 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v144 = objc_msgSend(v141, sel_initWithString_attributes_, v142, v143);
  swift_bridgeObjectRelease();

  id v249 = v144;
  double v145 = sub_20A5BC7A4(v144, 1, v279, v127);
  CGFloat v147 = v146;
  double v148 = 0.0;
  CGFloat v150 = v271;
  CGFloat v149 = v272;
  CGFloat v151 = 0.0;
  CGFloat v153 = v273;
  double v152 = v274;
  double v154 = 0.0;
  double v155 = 0.0;
  if (LOBYTE(v250))
  {
    double v156 = v238 - v119;
    v293.origin.double x = v276 - v145 - v282;
    CGFloat v157 = v265;
    v293.origin.double y = v265;
    v293.size.CGFloat width = v145;
    v293.size.CGFloat height = v147;
    CGFloat v158 = CGRectGetMinX(v293) - v121 + -10.0;
    v294.origin.double x = v266;
    v294.origin.double y = v157;
    v294.size.CGFloat height = v263;
    v294.size.CGFloat width = v264;
    v295.origin.double y = v156 + CGRectGetMinY(v294);
    v295.origin.double x = v158;
    v295.size.CGFloat width = v121;
    v295.size.CGFloat height = v128 - MinY - v156;
    *(CGRect *)&double v152 = CGRectIntegral(v295);
    double v148 = v152;
    CGFloat v151 = v153;
    double v154 = v149;
    double v155 = v150;
  }
  CGFloat v268 = v153;
  CGFloat v269 = v149;
  CGFloat v159 = v152;
  CGFloat v270 = v150;
  *(CGFloat *)&long long v247 = v151;
  double v250 = v148;
  CGFloat v160 = v251;
  uint64_t v161 = v254;
  sub_20A5BDAEC(v278 + *(int *)(*(void *)&v251 + 24), v254, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel);
  int v162 = (*(uint64_t (**)(uint64_t, uint64_t, CGFloat))(*(void *)&v252 + 48))(v161, 1, COERCE_CGFLOAT(*(void *)&v253));
  uint64_t v163 = *(void *)&v267;
  if (v162 == 1)
  {
    sub_20A5BDB6C(v161, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel);
    uint64_t v254 = 1;
  }
  else
  {
    uint64_t v164 = v161;
    uint64_t v165 = v239;
    sub_20A458E3C(v164, v239);
    sub_20A8C9700();
    uint64_t v166 = __swift_project_boxed_opaque_existential_1(v79 + 7, v79[10]);
    uint64_t v254 = (uint64_t)sub_20A7E0068(v165, (void *)*v166, v154, v155);
    sub_20A5BDDAC(v165, type metadata accessor for StockSparklineViewModel);
  }
  v283[3] = sub_20A8CA540();
  v283[4] = sub_20A5BDBDC((unint64_t *)&unk_26AC6A638, MEMORY[0x263F7DC70]);
  __swift_allocate_boxed_opaque_existential_1(v283);
  sub_20A8CA530();
  sub_20A8C9810();
  double v168 = v167;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v283);
  sub_20A4342F4((uint64_t)v281, (uint64_t)v284);
  __swift_project_boxed_opaque_existential_1(v284, v284[3]);
  uint64_t v169 = v278 + *(int *)(*(void *)&v160 + 20);
  sub_20A5BDAEC(v169, v163, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  uint64_t v170 = sub_20A8C3E10();
  uint64_t v171 = *(void *)(v170 - 8);
  int v172 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v171 + 48))(v163, 1, v170);
  double v248 = v128;
  double v245 = v155;
  double v246 = v154;
  if (v172 == 1)
  {
    sub_20A5BDB6C(v163, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  }
  else
  {
    uint64_t v173 = sub_20A8C3D30();
    uint64_t v175 = v174;
    (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v163, v170);
    if (v175) {
      goto LABEL_40;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v173 = 0;
  uint64_t v175 = 0xE000000000000000;
LABEL_40:
  double v176 = v275;
  double v275 = v168 + 12.0 + 21.0;
  if (*(void *)&v255 == 2) {
    double v177 = 16.0;
  }
  else {
    double v177 = v257;
  }
  double v178 = COERCE_DOUBLE(sub_20A4E7894(v173, v175, 0));
  double v257 = v178;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v284);
  double v179 = v279;
  sub_20A8CE970();
  double v180 = v127;
  sub_20A8CEDD0();
  sub_20A5BC7A4(*(void **)&v178, 0, v181, v182);
  v183 = v281;
  __swift_project_boxed_opaque_existential_1(v281, *(void *)(*(void *)&v176 + 40));
  sub_20A8C3EF0();
  id v184 = sub_20A4E86A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v184, sel_boundingRectWithSize_options_context_, 1, 0, v179, v127);
  CGFloat v244 = v159;
  sub_20A5BDC24(v159, v268, v269, v270);
  CGFloat v186 = v185;
  __swift_project_boxed_opaque_existential_1(v183, *(void *)(*(void *)&v176 + 40));
  uint64_t v187 = (void *)sub_20A8C7F80();
  objc_msgSend(v187, sel_lineHeight);
  CGFloat v189 = v188;

  v296.origin.double y = 14.0;
  v296.origin.double x = v177;
  double v267 = v177;
  v296.size.CGFloat width = v186;
  v296.size.CGFloat height = v189;
  CGRect v297 = CGRectIntegral(v296);
  CGFloat v190 = v297.origin.x;
  CGFloat v191 = v297.origin.y;
  CGFloat v192 = v297.size.width;
  CGFloat v193 = v297.size.height;
  __swift_project_boxed_opaque_existential_1(v183, *(void *)(*(void *)&v176 + 40));
  uint64_t v194 = sub_20A817594(v169);
  id v196 = sub_20A4E7CAC(v194, v195, 0);
  swift_bridgeObjectRelease();
  sub_20A8CE970();
  sub_20A8CEDD0();
  double v199 = sub_20A5BC7A4(v196, 0, v197, v198);
  double v277 = v200;
  CGFloat v201 = v190;
  CGFloat v255 = v190;
  v298.origin.double x = v190;
  CGFloat v202 = v191;
  CGFloat v252 = v192;
  CGFloat v253 = v191;
  v298.origin.double y = v191;
  CGFloat v203 = v192;
  v298.size.CGFloat width = v192;
  CGFloat v251 = v193;
  v298.size.CGFloat height = v193;
  CGFloat v204 = CGRectGetMaxX(v298) + 12.0;
  v299.origin.double x = v201;
  v299.origin.double y = v202;
  v299.size.CGFloat width = v203;
  v299.size.CGFloat height = v193;
  double v205 = CGRectGetMinY(v299);
  __swift_project_boxed_opaque_existential_1(v183, *(void *)(*(void *)&v176 + 40));
  v206 = (void *)sub_20A8C7F80();
  objc_msgSend(v206, sel_ascender);
  double v208 = v207;

  double v209 = v205 + v208;
  __swift_project_boxed_opaque_existential_1(v183, *(void *)(*(void *)&v176 + 40));
  v210 = (void *)sub_20A8C7F80();
  objc_msgSend(v210, sel_ascender);
  double v212 = v211;

  v300.origin.double y = v209 - v212;
  v300.origin.double x = v204;
  v300.size.CGFloat width = v199;
  v300.size.CGFloat height = v277;
  CGRect v301 = CGRectIntegral(v300);
  double v277 = v301.origin.x;
  CGFloat v242 = v301.size.width;
  CGFloat v243 = v301.origin.y;
  CGFloat v241 = v301.size.height;
  __swift_project_boxed_opaque_existential_1(v183, *(void *)(*(void *)&v176 + 40));
  uint64_t v213 = sub_20A8C3E60();
  id v215 = sub_20A4E7AA0(v213, v214, 0);
  swift_bridgeObjectRelease();
  objc_msgSend(v215, sel_boundingRectWithSize_options_context_, 0, 0, v179, v180);
  CGRect v303 = CGRectIntegral(v302);
  CGFloat v216 = v303.size.height;
  __swift_project_boxed_opaque_existential_1(v183, *(void *)(*(void *)&v176 + 40));
  uint64_t v217 = (void *)sub_20A8C7F80();
  objc_msgSend(v217, sel_ascender);
  double v219 = v218;

  CGFloat v220 = v248 - v219;
  v304.origin.double x = v244;
  v304.origin.double y = v268;
  v304.size.CGFloat width = v269;
  v304.size.CGFloat height = v270;
  v305.size.CGFloat width = CGRectGetMinX(v304) - v267 + -12.0;
  v305.origin.double x = v267;
  v305.origin.double y = v220;
  v305.size.CGFloat height = v216;
  CGRect v306 = CGRectIntegral(v305);
  CGFloat v221 = v306.origin.x;
  CGFloat v222 = v306.origin.y;
  CGFloat v223 = v306.size.width;
  CGFloat v224 = v306.size.height;
  sub_20A8CE970();
  sub_20A8CEDD0();
  objc_msgSend(v215, sel_boundingRectWithSize_options_context_, 0, 0);
  CGRectIntegral(v307);
  sub_20A8CED40();
  CGRect v309 = CGRectIntegral(v308);
  CGFloat v225 = v309.origin.x;
  CGFloat v226 = v309.origin.y;
  CGFloat v227 = v309.size.width;
  CGFloat v228 = v309.size.height;
  v309.origin.double x = v221;
  v309.origin.double y = v222;
  v309.size.CGFloat width = v223;
  v309.size.CGFloat height = v224;
  v310.size.CGFloat height = round(CGRectGetMaxY(v309) + 14.0);
  v310.origin.double x = 0.0;
  v310.origin.double y = 0.0;
  v310.size.CGFloat width = v276;
  CGRectIntegral(v310);
  double v230 = MEMORY[0x270FA5388](v229);
  v231 = (CGFloat *)(&v237 - 42);
  v231[6] = v225;
  v231[7] = v226;
  v231[8] = v227;
  v231[9] = v228;
  *((double *)&v237 - 31) = v267;
  *((double *)&v237 - 29) = v282;
  *((CGFloat *)&v237 - 28) = v255;
  *((CGFloat *)&v237 - 27) = v253;
  *((CGFloat *)&v237 - 26) = v252;
  *((CGFloat *)&v237 - 25) = v251;
  *((CGFloat *)&v237 - 23) = v221;
  *((CGFloat *)&v237 - 22) = v222;
  *((CGFloat *)&v237 - 21) = v223;
  *((CGFloat *)&v237 - 20) = v224;
  *((double *)&v237 - 19) = v277;
  *((CGFloat *)&v237 - 18) = v243;
  *((CGFloat *)&v237 - 17) = v242;
  *((CGFloat *)&v237 - 16) = v241;
  *((CGFloat *)&v237 - 15) = v266;
  *((CGFloat *)&v237 - 14) = v265;
  *((CGFloat *)&v237 - 13) = v264;
  *((CGFloat *)&v237 - 12) = v263;
  *((double *)&v237 - 11) = v274;
  *((CGFloat *)&v237 - 10) = v273;
  *((CGFloat *)&v237 - 9) = v272;
  *((CGFloat *)&v237 - 8) = v271;
  *((double *)&v237 - 6) = v250;
  *(&v237 - 5) = v247;
  *((double *)&v237 - 4) = v246;
  *((double *)&v237 - 3) = v245;
  v231[2] = v230;
  *((void *)v231 + 3) = v232;
  *((void *)v231 + 4) = v233;
  *((void *)v231 + 5) = v234;
  *(&v237 - 32) = 0x402C000000000000;
  *(&v237 - 30) = 0x402C000000000000;
  *(&v237 - 24) = (uint64_t)v215;
  *(&v237 - 7) = v280;
  v235 = (void *)v254;
  *(&v237 - 2) = v254;
  sub_20A8C96A0();

  (*(void (**)(char *, uint64_t))(v260 + 8))(v259, v261);
  sub_20A458E2C(v235);
  return memcpy(v262, v283, 0x150uLL);
}

void *sub_20A5BB8B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  double v6 = v5;
  double v191 = a5;
  CGFloat v189 = a3;
  sub_20A5BDA88(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v183 = (uint64_t)&v159 - v11;
  uint64_t v12 = type metadata accessor for StockSparklineViewModel(0);
  uint64_t v180 = *(void *)(v12 - 8);
  uint64_t v181 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v160 = (uint64_t)&v159 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = sub_20A8CADF0();
  uint64_t v186 = *(void *)(v188 - 8);
  MEMORY[0x270FA5388](v188);
  double v185 = (char *)&v159 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v190 = COERCE_DOUBLE(sub_20A8C4030());
  CGFloat y = *(double *)(*(void *)&v190 - 8);
  MEMORY[0x270FA5388](*(void *)&v190);
  *(void *)&CGFloat width = (char *)&v159 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGFloat height = COERCE_DOUBLE(type metadata accessor for PriceViewModel());
  MEMORY[0x270FA5388](*(void *)&height);
  *(void *)&CGFloat v192 = (char *)&v159 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  *(void *)&CGFloat v193 = (char *)&v159 - v18;
  sub_20A8C9710();
  double v20 = v19;
  double v22 = v21;
  uint64_t v23 = (void *)sub_20A8C9790();
  id v24 = objc_msgSend(v23, sel_horizontalSizeClass);

  if (v24 == (id)2) {
    double v25 = 16.0;
  }
  else {
    double v25 = v20;
  }
  if (v24 == (id)2) {
    double v26 = 12.0;
  }
  else {
    double v26 = v22;
  }
  __swift_project_boxed_opaque_existential_1(v6 + 2, v6[5]);
  sub_20A8C3EF0();
  id v27 = sub_20A4E86A0();
  swift_bridgeObjectRelease();
  sub_20A8C9720();
  if (v28 > 320.0) {
    double v29 = 68.0;
  }
  else {
    double v29 = 44.0;
  }
  double v30 = a4 - v29;
  CGFloat v175 = COERCE_DOUBLE(type metadata accessor for StockViewLayoutOptions());
  double v31 = *(double *)(a2 + *(int *)(*(void *)&v175 + 28));
  sub_20A8CE970();
  double v33 = v30 - v31 - v32;
  double v34 = v191;
  objc_msgSend(v27, sel_boundingRectWithSize_options_context_, 1, 0, v33, v191);
  double v196 = v36;
  CGFloat v197 = v35;

  uint64_t v37 = sub_20A5BCFE0(a1);
  uint64_t v39 = v38;
  __swift_project_boxed_opaque_existential_1(v6 + 2, v6[5]);
  id v40 = sub_20A4E7AA0(v37, v39, 0);
  swift_bridgeObjectRelease();
  uint64_t v187 = a2;
  sub_20A8C9720();
  if (v41 > 320.0) {
    double v42 = 68.0;
  }
  else {
    double v42 = 44.0;
  }
  double v43 = a4 - v42 - v31;
  sub_20A8CE970();
  objc_msgSend(v40, sel_boundingRectWithSize_options_context_, 1, 0, v43 - v44, v34);
  double v194 = v46;
  double v195 = v45;
  sub_20A8CE970();
  sub_20A8CEDD0();
  id v177 = v40;
  objc_msgSend(v40, sel_boundingRectWithSize_options_context_, 1, 0);
  CGFloat x = v48;
  CGFloat v171 = v47;
  __swift_project_boxed_opaque_existential_1(v6 + 2, v6[5]);
  uint64_t v49 = sub_20A8C3EE0();
  id v51 = sub_20A4E7CAC(v49, v50, 0);
  swift_bridgeObjectRelease();
  double v178 = v26;
  sub_20A8CE970();
  sub_20A8CEDD0();
  id v176 = v51;
  double v54 = sub_20A5BC7A4(v51, 1, v52, v53);
  uint64_t v173 = v55;
  double v174 = v54;
  id v184 = v6;
  uint64_t v56 = v6[5];
  *(void *)&double v179 = v6 + 2;
  uint64_t v57 = __swift_project_boxed_opaque_existential_1(v6 + 2, v56);
  uint64_t v172 = type metadata accessor for StockViewModel();
  uint64_t v58 = *(int *)(v172 + 28);
  uint64_t v182 = a1;
  uint64_t v59 = a1 + v58;
  sub_20A8C4250();
  sub_20A8C4230();
  if (qword_26AC69070 != -1) {
    swift_once();
  }
  sub_20A8C4220();
  swift_release();
  if (*(unsigned char *)(v59 + 8))
  {
    CGFloat v193 = *(double *)(v59 + 64);
    swift_bridgeObjectRetain();
    goto LABEL_31;
  }
  char v60 = v198[0];
  double v61 = *(double *)v59;
  uint64_t v62 = *(void *)&v193;
  sub_20A5BDE0C(v59, *(uint64_t *)&v193, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  if (v60)
  {
    CGFloat v63 = width;
    CGFloat v64 = y;
    double v65 = v190;
    (*(void (**)(CGFloat, uint64_t, double))(*(void *)&y + 16))(COERCE_CGFLOAT(*(void *)&width), v62 + *(int *)(*(void *)&height + 40), COERCE_DOUBLE(*(void *)&v190));
    int v66 = (*(uint64_t (**)(CGFloat, double))(*(void *)&v64 + 88))(COERCE_CGFLOAT(*(void *)&v63), COERCE_DOUBLE(*(void *)&v65));
    char v67 = 2;
    if (v66 == *MEMORY[0x263F7AF90]
      || v66 == *MEMORY[0x263F7AF98]
      || v66 == *MEMORY[0x263F7AF68]
      || v66 == *MEMORY[0x263F7AF80]
      || v66 == *MEMORY[0x263F7AF70]
      || v66 == *MEMORY[0x263F7AF88])
    {
      goto LABEL_26;
    }
    if (v66 != *MEMORY[0x263F7AF78])
    {
      if (v66 != *MEMORY[0x263F7AF60]) {
        (*(void (**)(CGFloat, double))(*(void *)&v64 + 8))(COERCE_CGFLOAT(*(void *)&v63), COERCE_DOUBLE(*(void *)&v65));
      }
      char v67 = 2;
      goto LABEL_26;
    }
  }
  char v67 = 0;
LABEL_26:
  sub_20A5BDDAC(v62, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  if (qword_26AC6D680 != -1) {
    swift_once();
  }
  *(double *)&uint64_t v68 = COERCE_DOUBLE(sub_20A6573EC(*(void *)(v59 + 48), *(void *)(v59 + 56), 5, 1, v67, v61));
  uint64_t v70 = v69;
  uint64_t v71 = *(void *)&v192;
  sub_20A5BDE0C(v59, *(uint64_t *)&v192, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  if (!v70)
  {
    uint64_t v68 = *(uint64_t *)(v71 + 64);
    swift_bridgeObjectRetain();
  }
  CGFloat v193 = *(double *)&v68;
  sub_20A5BDDAC(v71, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
LABEL_31:
  id v72 = (void *)*v57;
  sub_20A5BDA88(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  double v74 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  swift_bridgeObjectRetain();
  id v75 = v74;
  uint64_t v76 = sub_20A8C7F80();
  uint64_t v77 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v76;
  double v78 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v77;
  *(void *)(inited + 72) = v78;
  uint64_t v79 = v72 + 8;
  uint64_t v81 = v72[11];
  uint64_t v80 = v72[12];
  __swift_project_boxed_opaque_existential_1(v79, v81);
  uint64_t v82 = *(void *)(v80 + 16);
  double v83 = *(uint64_t (**)(uint64_t, uint64_t))(v82 + 40);
  id v84 = v78;
  uint64_t v85 = v83(v81, v82);
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v85;
  sub_20A4CF8B0(inited);
  id v86 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v87 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A5BDBDC((unint64_t *)&qword_26AC7F9F8, type metadata accessor for Key);
  double v88 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v89 = objc_msgSend(v86, sel_initWithString_attributes_, v87, v88);
  swift_bridgeObjectRelease();

  objc_msgSend(v89, sel_boundingRectWithSize_options_context_, 1, 0, a4, v34);
  CGFloat v192 = v91;
  CGFloat v193 = v90;

  double v92 = v184;
  double v93 = v179;
  __swift_project_boxed_opaque_existential_1(*(void **)&v179, v184[5]);
  if (*(unsigned char *)(v59 + 24)) {
    char v94 = 2;
  }
  else {
    char v94 = *(double *)(v59 + 16) < 0.0;
  }
  id v95 = sub_20A4E7EB8(0x4D30302E303030, 0xE700000000000000, v94);
  double v165 = sub_20A5BC7A4(v95, 1, a4, v34);
  double v166 = v96;
  uint64_t v97 = v187;
  sub_20A8C9720();
  BOOL v99 = v98 > 320.0;
  double v100 = 68.0;
  if (!v99) {
    double v100 = 44.0;
  }
  double v191 = v100;
  __swift_project_boxed_opaque_existential_1(*(void **)&v93, v92[5]);
  unint64_t v101 = (void *)sub_20A8C7F80();
  objc_msgSend(v101, sel_ascender);
  double v103 = v102;

  __swift_project_boxed_opaque_existential_1(*(void **)&v93, v92[5]);
  CGFloat v104 = (void *)sub_20A8C7F80();
  objc_msgSend(v104, sel_capHeight);
  double v106 = v105;

  CGFloat v107 = v196;
  double v108 = v196 - (v103 - v106);
  __swift_project_boxed_opaque_existential_1(*(void **)&v93, v92[5]);
  unint64_t v109 = (void *)sub_20A8C7F80();
  objc_msgSend(v109, sel_lineHeight);
  double v111 = v110;

  double v112 = v108 + v111;
  __swift_project_boxed_opaque_existential_1(*(void **)&v93, v92[5]);
  double v113 = (void *)sub_20A8C7F80();
  objc_msgSend(v113, sel_descender);
  double v115 = v114;

  double v190 = v112 - fabs(v115);
  v199.origin.CGFloat y = 11.0;
  v199.origin.CGFloat x = v25;
  CGFloat v116 = v197;
  v199.size.CGFloat width = v197;
  v199.size.CGFloat height = v107;
  CGFloat MaxY = CGRectGetMaxY(v199);
  CGFloat v118 = v194;
  CGFloat v119 = v195;
  sub_20A8CED40();
  CGFloat y = v200.origin.y;
  CGFloat x = v200.origin.x;
  CGFloat height = v200.size.height;
  CGFloat width = v200.size.width;
  CGFloat v164 = CGRectGetMaxY(v200);
  v201.origin.CGFloat y = 11.0;
  v201.origin.CGFloat x = v25;
  v201.size.CGFloat width = v116;
  v201.size.CGFloat height = v107;
  CGFloat MinY = CGRectGetMinY(v201);
  __swift_project_boxed_opaque_existential_1(*(void **)&v93, v92[5]);
  double v120 = (void *)sub_20A8C7F80();
  objc_msgSend(v120, sel_ascender);
  uint64_t v162 = v121;

  __swift_project_boxed_opaque_existential_1(*(void **)&v93, v92[5]);
  v122 = (void *)sub_20A8C7F80();
  objc_msgSend(v122, sel_capHeight);
  uint64_t v161 = v123;

  v202.origin.CGFloat x = v25;
  CGFloat v171 = MaxY;
  v202.origin.CGFloat y = MaxY;
  v202.size.CGFloat width = v119;
  v202.size.CGFloat height = v118;
  v203.origin.CGFloat y = CGRectGetMaxY(v202) + 11.0;
  CGFloat v124 = (double *)(v97 + *(int *)(*(void *)&v175 + 32));
  double v125 = v165 + v124[1] + v124[3];
  double v126 = v166 + *v124 + v124[2];
  v203.origin.CGFloat x = v25;
  CGFloat v175 = v203.origin.y;
  v203.size.CGFloat height = v192;
  v203.size.CGFloat width = v193;
  double v127 = CGRectGetMaxY(v203) + 11.0;
  double v128 = v185;
  sub_20A8C96E0();
  sub_20A8CADC0();
  double v130 = v129;
  sub_20A8CADC0();
  CGFloat v132 = a4 - (v130 + v131);
  double v179 = v25;
  v204.origin.CGFloat x = v25;
  v204.origin.CGFloat y = v127;
  v204.size.CGFloat width = v125;
  v204.size.CGFloat height = v126;
  v205.size.CGFloat height = CGRectGetMaxY(v204) + 11.0;
  v205.origin.CGFloat x = 0.0;
  v205.origin.CGFloat y = 0.0;
  v205.size.CGFloat width = v132;
  CGRect v206 = CGRectIntegral(v205);
  CGFloat v133 = v206.origin.x;
  CGFloat v134 = v206.origin.y;
  CGFloat v135 = v206.size.width;
  CGFloat v136 = v206.size.height;
  uint64_t v137 = v183;
  sub_20A5BDAEC(v182 + *(int *)(v172 + 24), v183, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v180 + 48))(v137, 1, v181) == 1)
  {
    uint64_t v138 = sub_20A5BDB6C(v137, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel);
    uint64_t v139 = 1;
  }
  else
  {
    uint64_t v140 = v160;
    sub_20A458E3C(v137, v160);
    sub_20A8C9700();
    id v141 = __swift_project_boxed_opaque_existential_1(v92 + 7, v92[10]);
    uint64_t v139 = (uint64_t)sub_20A7E0068(v140, (void *)*v141, v191, v190);
    uint64_t v138 = sub_20A5BDDAC(v140, type metadata accessor for StockSparklineViewModel);
  }
  double v142 = MEMORY[0x270FA5388](v138);
  uint64_t v143 = (CGFloat *)(&v159 - 38);
  v143[2] = v133;
  v143[3] = v134;
  v143[4] = v135;
  v143[5] = v136;
  double v144 = v179;
  CGFloat v145 = v164;
  *((double *)&v159 - 32) = v179;
  *((CGFloat *)&v159 - 31) = v145;
  uint64_t v146 = v173;
  *((double *)&v159 - 30) = v174;
  *(&v159 - 29) = v146;
  *(&v159 - 28) = v97;
  *((double *)&v159 - 27) = v144;
  *(&v159 - 26) = 0x4026000000000000;
  double v147 = v196;
  *((CGFloat *)&v159 - 25) = v197;
  *((double *)&v159 - 24) = v147;
  double v148 = v177;
  *(&v159 - 23) = (uint64_t)v177;
  CGFloat v149 = v171;
  *((double *)&v159 - 22) = v144;
  *((CGFloat *)&v159 - 21) = v149;
  double v150 = v194;
  *((double *)&v159 - 20) = v195;
  *((double *)&v159 - 19) = v150;
  CGFloat v151 = y;
  *((CGFloat *)&v159 - 18) = x;
  *((CGFloat *)&v159 - 17) = v151;
  CGFloat v152 = height;
  *((CGFloat *)&v159 - 16) = width;
  *((CGFloat *)&v159 - 15) = v152;
  CGFloat v153 = v175;
  *((double *)&v159 - 14) = v144;
  *((CGFloat *)&v159 - 13) = v153;
  CGFloat v154 = v192;
  *((CGFloat *)&v159 - 12) = v193;
  *((CGFloat *)&v159 - 11) = v154;
  *((double *)&v159 - 10) = v144;
  *((double *)&v159 - 9) = v127;
  *((double *)&v159 - 8) = v125;
  *((double *)&v159 - 7) = v126;
  *((double *)&v159 - 6) = v142;
  *(&v159 - 5) = v155;
  double v156 = v190;
  *(&v159 - 4) = v157;
  *((double *)&v159 - 3) = v156;
  *(&v159 - 2) = v139;
  sub_20A8C96A0();

  (*(void (**)(char *, uint64_t))(v186 + 8))(v128, v188);
  sub_20A458E2C((id)v139);
  return memcpy(v189, v198, 0x150uLL);
}

double sub_20A5BC7A4(void *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v9 = (uint64_t *)(v4 + 96);
  swift_beginAccess();
  uint64_t v10 = *(void *)(v4 + 96);
  if (!*(void *)(v10 + 16)) {
    goto LABEL_5;
  }
  id v11 = a1;
  unint64_t v12 = sub_20A4D1D74((uint64_t)v11);
  if ((v13 & 1) == 0)
  {

LABEL_5:
    swift_endAccess();
    objc_msgSend(a1, sel_boundingRectWithSize_options_context_, a2, 0, a3, a4);
    double v14 = v15;
    double v17 = v16;
    swift_beginAccess();
    id v18 = a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v9;
    *uint64_t v9 = 0x8000000000000000;
    sub_20A7A4444(v18, isUniquelyReferenced_nonNull_native, v14, v17);
    *uint64_t v9 = v21;

    swift_bridgeObjectRelease();
    swift_endAccess();
    return v14;
  }
  double v14 = *(double *)(*(void *)(v10 + 56) + 16 * v12);
  swift_endAccess();

  return v14;
}

double sub_20A5BC8E8@<D0>(void *a1@<X1>, uint64_t a2@<X2>, void *a3@<X3>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, CGFloat a9@<D4>, CGFloat a10@<D5>, CGFloat a11@<D6>, CGFloat a12@<D7>, uint64_t a13, uint64_t a14, double a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,double a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  id v126 = a3;
  uint64_t v123 = a2;
  double v127 = a7;
  double v128 = a8;
  double v124 = a5;
  double v125 = a6;
  uint64_t v122 = a37;
  uint64_t v121 = a38;
  uint64_t v120 = a39;
  uint64_t v119 = a40;
  uint64_t v113 = a33;
  uint64_t v112 = a34;
  v111[0] = a35;
  uint64_t v110 = a36;
  uint64_t v104 = a29;
  uint64_t v103 = a30;
  uint64_t v102 = a31;
  uint64_t v101 = a32;
  uint64_t v96 = a25;
  uint64_t v95 = a26;
  uint64_t v94 = a27;
  uint64_t v93 = a28;
  uint64_t v108 = a21;
  uint64_t v107 = a22;
  uint64_t v106 = a23;
  uint64_t v105 = a24;
  uint64_t v117 = a17;
  uint64_t v46 = sub_20A8C8180();
  uint64_t v47 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v49 = (char *)&v93 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132.origin.CGFloat x = a9;
  v132.origin.CGFloat y = a10;
  v132.size.CGFloat width = a11;
  v132.size.CGFloat height = a12;
  double v118 = round(CGRectGetMaxY(v132) + a15);
  uint64_t v50 = *MEMORY[0x263F7D268];
  id v51 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 104);
  v51(v49, v50, v46);
  sub_20A8C8170();
  uint64_t v117 = v52;
  uint64_t v116 = v53;
  uint64_t v115 = v54;
  uint64_t v114 = v55;
  uint64_t v56 = *(void (**)(char *, uint64_t))(v47 + 8);
  v56(v49, v46);
  v51(v49, v50, v46);
  id v109 = a1;
  sub_20A8C8170();
  uint64_t v108 = v57;
  uint64_t v107 = v58;
  uint64_t v106 = v59;
  uint64_t v105 = v60;
  v56(v49, v46);
  v51(v49, v50, v46);
  sub_20A8C8170();
  uint64_t v100 = v61;
  uint64_t v99 = v62;
  uint64_t v98 = v63;
  uint64_t v97 = v64;
  v56(v49, v46);
  v51(v49, v50, v46);
  sub_20A8C8170();
  uint64_t v96 = v65;
  uint64_t v95 = v66;
  uint64_t v94 = v67;
  uint64_t v93 = v68;
  v56(v49, v46);
  v51(v49, v50, v46);
  sub_20A8C8170();
  uint64_t v104 = v69;
  uint64_t v103 = v70;
  uint64_t v102 = v71;
  uint64_t v101 = v72;
  v56(v49, v46);
  v51(v49, v50, v46);
  sub_20A8C8170();
  uint64_t v113 = v73;
  uint64_t v112 = v74;
  uint64_t v76 = v75;
  uint64_t v78 = v77;
  v56(v49, v46);
  uint64_t v79 = v123 + *(int *)(type metadata accessor for StockViewLayoutOptions() + 32);
  *(_OWORD *)double v111 = *(_OWORD *)v79;
  uint64_t v80 = *(void *)(v79 + 16);
  uint64_t v81 = *(void *)(v79 + 24);
  v51(v49, v50, v46);
  sub_20A8C8170();
  uint64_t v83 = v82;
  uint64_t v85 = v84;
  uint64_t v87 = v86;
  uint64_t v89 = v88;
  v56(v49, v46);
  id v90 = v126;
  sub_20A458F64(v126);
  uint64_t v91 = sub_20A8C9790();
  *(double *)a4 = v124;
  *(double *)(a4 + 8) = v125;
  *(double *)(a4 + 16) = v127;
  *(double *)(a4 + 24) = v128;
  char v130 = 0;
  *(double *)(a4 + 32) = v118;
  *(unsigned char *)(a4 + 40) = 0;
  *(_DWORD *)(a4 + 41) = *(_DWORD *)v131;
  *(_DWORD *)(a4 + 44) = *(_DWORD *)&v131[3];
  *(void *)(a4 + 48) = v117;
  *(void *)(a4 + 56) = v116;
  *(void *)(a4 + 64) = v115;
  *(void *)(a4 + 72) = v114;
  *(void *)(a4 + 80) = v109;
  *(void *)(a4 + 88) = v108;
  *(void *)(a4 + 96) = v107;
  *(void *)(a4 + 104) = v106;
  *(void *)(a4 + 112) = v105;
  *(void *)(a4 + 120) = v100;
  *(void *)(a4 + 128) = v99;
  *(void *)(a4 + 136) = v98;
  *(void *)(a4 + 144) = v97;
  *(void *)(a4 + 152) = v96;
  *(void *)(a4 + 160) = v95;
  *(void *)(a4 + 168) = v94;
  *(void *)(a4 + 176) = v93;
  *(void *)(a4 + 184) = v104;
  *(void *)(a4 + 192) = v103;
  *(void *)(a4 + 200) = v102;
  *(void *)(a4 + 208) = v101;
  *(void *)(a4 + 216) = v113;
  *(void *)(a4 + 224) = v112;
  *(void *)(a4 + 232) = v76;
  *(void *)(a4 + 240) = v78;
  double result = v111[0];
  *(_OWORD *)(a4 + 248) = *(_OWORD *)v111;
  *(void *)(a4 + 264) = v80;
  *(void *)(a4 + 272) = v81;
  *(void *)(a4 + 280) = v83;
  *(void *)(a4 + 288) = v85;
  *(void *)(a4 + 296) = v87;
  *(void *)(a4 + 304) = v89;
  *(unsigned char *)(a4 + 312) = v130;
  *(_DWORD *)(a4 + 313) = *(_DWORD *)v129;
  *(_DWORD *)(a4 + 316) = *(_DWORD *)&v129[3];
  *(void *)(a4 + 320) = v90;
  *(void *)(a4 + 328) = v91;
  return result;
}

uint64_t sub_20A5BCFE0(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AEF0];
  sub_20A5BDA88(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v13 - v4;
  uint64_t v6 = type metadata accessor for StockViewModel();
  sub_20A5BDAEC(a1 + *(int *)(v6 + 20), (uint64_t)v5, &qword_26AC68FB0, v2);
  uint64_t v7 = sub_20A8C3E10();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
  {
    sub_20A5BDB6C((uint64_t)v5, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  }
  else
  {
    sub_20A8C3D30();
    uint64_t v10 = v9;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    if (v10)
    {
      sub_20A8C4250();
      sub_20A8C4230();
      if (qword_26AC69070 != -1) {
        swift_once();
      }
      sub_20A8C4220();
      swift_release();
      if (LOBYTE(v13[0]) == 1)
      {
        v13[0] = sub_20A8C3E60();
        v13[1] = v11;
        swift_bridgeObjectRetain();
        sub_20A8CE3D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_20A8CE3D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v13[0];
      }
      swift_bridgeObjectRelease();
    }
  }
  return sub_20A8C3E60();
}

double sub_20A5BD240@<D0>(uint64_t a1@<X1>, void *a2@<X2>, void *a3@<X3>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, CGFloat a9@<D4>, CGFloat a10@<D5>, CGFloat a11@<D6>, CGFloat a12@<D7>, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,double a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  id v122 = a3;
  uint64_t v115 = a1;
  double v123 = a7;
  double v124 = a8;
  double v120 = a5;
  double v121 = a6;
  uint64_t v119 = a33;
  uint64_t v118 = a34;
  uint64_t v117 = a35;
  uint64_t v116 = a36;
  uint64_t v109 = a29;
  uint64_t v108 = a30;
  v107[0] = a31;
  uint64_t v106 = a32;
  uint64_t v100 = a25;
  uint64_t v99 = a26;
  uint64_t v98 = a27;
  uint64_t v97 = a28;
  uint64_t v96 = a21;
  uint64_t v95 = a22;
  uint64_t v94 = a23;
  uint64_t v93 = a24;
  uint64_t v104 = a17;
  uint64_t v103 = a18;
  uint64_t v102 = a19;
  uint64_t v101 = a20;
  uint64_t v42 = sub_20A8C8180();
  uint64_t v43 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  double v45 = (char *)&v89 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128.origin.CGFloat x = a9;
  v128.origin.CGFloat y = a10;
  v128.size.CGFloat width = a11;
  v128.size.CGFloat height = a12;
  CGFloat v114 = CGRectGetMaxY(v128) + 11.0;
  uint64_t v46 = *MEMORY[0x263F7D268];
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 104);
  v47(v45, v46, v42);
  sub_20A8C8170();
  uint64_t v113 = v48;
  uint64_t v112 = v49;
  uint64_t v111 = v50;
  uint64_t v110 = v51;
  uint64_t v52 = *(void (**)(char *, uint64_t))(v43 + 8);
  v52(v45, v42);
  v47(v45, v46, v42);
  id v105 = a2;
  sub_20A8C8170();
  uint64_t v104 = v53;
  uint64_t v103 = v54;
  uint64_t v102 = v55;
  uint64_t v101 = v56;
  v52(v45, v42);
  v47(v45, v46, v42);
  sub_20A8C8170();
  uint64_t v96 = v57;
  uint64_t v95 = v58;
  uint64_t v94 = v59;
  uint64_t v93 = v60;
  v52(v45, v42);
  v47(v45, v46, v42);
  sub_20A8C8170();
  uint64_t v92 = v61;
  uint64_t v91 = v62;
  uint64_t v90 = v63;
  uint64_t v89 = v64;
  v52(v45, v42);
  v47(v45, v46, v42);
  sub_20A8C8170();
  uint64_t v100 = v65;
  uint64_t v99 = v66;
  uint64_t v98 = v67;
  uint64_t v97 = v68;
  v52(v45, v42);
  v47(v45, v46, v42);
  sub_20A8C8170();
  uint64_t v109 = v69;
  uint64_t v108 = v70;
  uint64_t v72 = v71;
  uint64_t v74 = v73;
  v52(v45, v42);
  uint64_t v75 = v115 + *(int *)(type metadata accessor for StockViewLayoutOptions() + 32);
  *(_OWORD *)uint64_t v107 = *(_OWORD *)v75;
  uint64_t v76 = *(void *)(v75 + 16);
  uint64_t v77 = *(void *)(v75 + 24);
  v47(v45, v46, v42);
  sub_20A8C8170();
  uint64_t v79 = v78;
  uint64_t v81 = v80;
  uint64_t v83 = v82;
  uint64_t v85 = v84;
  v52(v45, v42);
  id v86 = v122;
  sub_20A458F64(v122);
  uint64_t v87 = sub_20A8C9790();
  *(double *)a4 = v120;
  *(double *)(a4 + 8) = v121;
  *(double *)(a4 + 16) = v123;
  *(double *)(a4 + 24) = v124;
  char v126 = 0;
  *(CGFloat *)(a4 + 32) = v114;
  *(unsigned char *)(a4 + 40) = 0;
  *(_DWORD *)(a4 + 41) = *(_DWORD *)v127;
  *(_DWORD *)(a4 + 44) = *(_DWORD *)&v127[3];
  *(void *)(a4 + 48) = v113;
  *(void *)(a4 + 56) = v112;
  *(void *)(a4 + 64) = v111;
  *(void *)(a4 + 72) = v110;
  *(void *)(a4 + 80) = v105;
  *(void *)(a4 + 88) = v104;
  *(void *)(a4 + 96) = v103;
  *(void *)(a4 + 104) = v102;
  *(void *)(a4 + 112) = v101;
  *(void *)(a4 + 120) = v96;
  *(void *)(a4 + 128) = v95;
  *(void *)(a4 + 136) = v94;
  *(void *)(a4 + 144) = v93;
  *(void *)(a4 + 152) = v92;
  *(void *)(a4 + 160) = v91;
  *(void *)(a4 + 168) = v90;
  *(void *)(a4 + 176) = v89;
  *(void *)(a4 + 184) = v100;
  *(void *)(a4 + 192) = v99;
  *(void *)(a4 + 200) = v98;
  *(void *)(a4 + 208) = v97;
  *(void *)(a4 + 216) = v109;
  *(void *)(a4 + 224) = v108;
  *(void *)(a4 + 232) = v72;
  *(void *)(a4 + 240) = v74;
  double result = v107[0];
  *(_OWORD *)(a4 + 248) = *(_OWORD *)v107;
  *(void *)(a4 + 264) = v76;
  *(void *)(a4 + 272) = v77;
  *(void *)(a4 + 280) = v79;
  *(void *)(a4 + 288) = v81;
  *(void *)(a4 + 296) = v83;
  *(void *)(a4 + 304) = v85;
  *(unsigned char *)(a4 + 312) = v126;
  *(_DWORD *)(a4 + 313) = *(_DWORD *)v125;
  *(_DWORD *)(a4 + 316) = *(_DWORD *)&v125[3];
  *(void *)(a4 + 320) = v86;
  *(void *)(a4 + 328) = v87;
  return result;
}

uint64_t type metadata accessor for StockViewLayoutAttributesFactory()
{
  return self;
}

uint64_t sub_20A5BD948(uint64_t a1)
{
  sub_20A8C4250();
  sub_20A8C4230();
  if (qword_26AC69070 != -1) {
    swift_once();
  }
  sub_20A8C4220();
  swift_release();
  if (v7 == 1)
  {
    sub_20A8C9820();
    if (v2 <= 320.0)
    {
      sub_20A5BDDAC(a1, (uint64_t (*)(void))type metadata accessor for StockViewLayoutOptions);
      char v5 = 0;
    }
    else
    {
      uint64_t v3 = (void *)sub_20A8C97B0();
      char v4 = sub_20A8CECC0();

      sub_20A5BDDAC(a1, (uint64_t (*)(void))type metadata accessor for StockViewLayoutOptions);
      char v5 = v4 ^ 1;
    }
  }
  else
  {
    sub_20A5BDDAC(a1, (uint64_t (*)(void))type metadata accessor for StockViewLayoutOptions);
    char v5 = 1;
  }
  return v5 & 1;
}

void sub_20A5BDA88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A5BDAEC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_20A5BDA88(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A5BDB6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A5BDA88(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A5BDBDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A5BDC24(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  sub_20A8C4250();
  sub_20A8C4230();
  if (qword_26AC69070 != -1) {
    swift_once();
  }
  sub_20A8C4220();
  swift_release();
  v8.origin.CGFloat x = a1;
  v8.origin.CGFloat y = a2;
  v8.size.CGFloat width = a3;
  v8.size.CGFloat height = a4;
  CGRectGetMinX(v8);
}

double sub_20A5BDD1C@<D0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 248);
  uint64_t v2 = v1 + 248;
  long long v5 = *(_OWORD *)(v2 + 16);
  long long v6 = *(_OWORD *)(v2 + 40);
  return sub_20A5BC8E8(*(void **)(v2 - 104), *(void *)(v2 + 32), *(void **)(v2 + 72), a1, *(double *)(v2 - 232), *(double *)(v2 - 224), *(double *)(v2 - 216), *(double *)(v2 - 208), *(CGFloat *)(v2 - 200), *(CGFloat *)(v2 - 192), *(CGFloat *)(v2 - 184), *(CGFloat *)(v2 - 176), *(void *)(v2 - 168), *(void *)(v2 - 160), *(double *)(v2 - 152), *(void *)(v2 - 144), *(void *)(v2 - 136), *(void *)(v2 - 128), *(void *)(v2 - 120),
           *(void *)(v2 - 112),
           *(void *)(v2 - 96),
           *(void *)(v2 - 88),
           *(void *)(v2 - 80),
           *(void *)(v2 - 72),
           *(void *)(v2 - 64),
           *(void *)(v2 - 56),
           *(void *)(v2 - 48),
           *(void *)(v2 - 40),
           *(void *)(v2 - 32),
           *(void *)(v2 - 24),
           *(void *)(v2 - 16),
           *(void *)(v2 - 8),
           v3,
           *((uint64_t *)&v3 + 1),
           *(double *)&v5,
           *((uint64_t *)&v5 + 1),
           v6,
           *((uint64_t *)&v6 + 1),
           *(void *)(v2 + 56),
           *(void *)(v2 + 64));
}

uint64_t sub_20A5BDDAC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A5BDE0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

double sub_20A5BDE74@<D0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 240);
  return sub_20A5BD240(*(void *)(v1 + 80), *(void **)(v1 + 120), *(void **)(v1 + 288), a1, *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(CGFloat *)(v1 + 48), *(CGFloat *)(v1 + 56), *(CGFloat *)(v1 + 64), *(CGFloat *)(v1 + 72), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 128), *(void *)(v1 + 136), *(void *)(v1 + 144),
           *(void *)(v1 + 152),
           *(void *)(v1 + 160),
           *(void *)(v1 + 168),
           *(void *)(v1 + 176),
           *(void *)(v1 + 184),
           *(void *)(v1 + 192),
           *(void *)(v1 + 200),
           *(void *)(v1 + 208),
           *(void *)(v1 + 216),
           *(void *)(v1 + 224),
           *(void *)(v1 + 232),
           *(double *)&v3,
           *((uint64_t *)&v3 + 1),
           *(void *)(v1 + 256),
           *(void *)(v1 + 264),
           *(void *)(v1 + 272),
           *(void *)(v1 + 280));
}

uint64_t type metadata accessor for PlacardView()
{
  return self;
}

void sub_20A5BE0BC()
{
  sub_20A5BE148(&qword_26AC6CBC0);

  JUMPOUT(0x210523C60);
}

uint64_t sub_20A5BE114()
{
  return sub_20A5BE148(&qword_26AC6CBB8);
}

uint64_t sub_20A5BE148(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for PlacardView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A5BE384()
{
  return type metadata accessor for HiddenCardViewController();
}

uint64_t type metadata accessor for HiddenCardViewController()
{
  uint64_t result = qword_26763C4A0;
  if (!qword_26763C4A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A5BE3D8()
{
  uint64_t result = sub_20A8C8EE0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20A8C89A0();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_20A5BE4A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F7DB30];
  uint64_t v3 = sub_20A8CA180();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = *MEMORY[0x263F7DB10];
  uint64_t v5 = sub_20A8CA140();
  long long v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(a1, v4, v5);
}

uint64_t sub_20A5BE560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C3F0](a1, a2, ObjectType, a4);
}

uint64_t sub_20A5BE5B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C3F0](a1, a2, ObjectType, a4);
}

uint64_t sub_20A5BE610@<X0>(uint64_t a1@<X8>)
{
  return sub_20A5BE650(&OBJC_IVAR____TtC8StocksUI24HiddenCardViewController_cardViewAppearance, MEMORY[0x263F7D5E0], a1);
}

uint64_t sub_20A5BE630@<X0>(uint64_t a1@<X8>)
{
  return sub_20A5BE650(&OBJC_IVAR____TtC8StocksUI24HiddenCardViewController_cardViewBehavior, MEMORY[0x263F7D4C8], a1);
}

uint64_t sub_20A5BE650@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5 = *v3 + *a1;
  uint64_t v6 = a2(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);

  return v7(a3, v5, v6);
}

uint64_t sub_20A5BE6C8()
{
  unint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40))(v2, v3);
}

BOOL static ThemingStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ThemingStyle.hash(into:)()
{
  return sub_20A8CF890();
}

uint64_t ThemingStyle.hashValue.getter()
{
  return sub_20A8CF8C0();
}

unint64_t sub_20A5BE7BC()
{
  unint64_t result = qword_26763C4B0;
  if (!qword_26763C4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C4B0);
  }
  return result;
}

uint64_t dispatch thunk of StatusBarTheming.statusBarStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of KeyboardTheming.keyboardAppearance.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unsigned char *storeEnumTagSinglePayload for ThemingStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A5BE904);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ThemingStyle()
{
  return &type metadata for ThemingStyle;
}

uint64_t dispatch thunk of Theming.style.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Theming.sidebarAppearance.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of Theming.foregroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of Theming.backgroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of Theming.sidebarBackgroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of Theming.detailBackgroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of Theming.cellSelectionColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of Theming.cellSelectionKeyColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of Theming.cellSelectionSecondaryTextColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of Theming.keyColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of Theming.darkenedKeyColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of Theming.addButtonColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of Theming.addButtonTitleColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of Theming.offlineTextColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of Theming.separatorBarColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of Theming.sidebarSeparatorBarColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of Theming.paletteGreen.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of Theming.paletteLightGreen.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of Theming.paletteRed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of Theming.paletteBlue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of Theming.paletteLightGray.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of Theming.paletteGreenForContrastAgainstLightColors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of Theming.paletteRedForContrastAgainstLightColors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of Theming.paletteGreenForContrastAgainstDarkColors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of Theming.paletteRedForContrastAgainstDarkColors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 216))();
}

uint64_t dispatch thunk of Theming.labelColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of Theming.secondaryLabelColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t dispatch thunk of Theming.tertiaryLabelColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 240))();
}

uint64_t dispatch thunk of Theming.toolbarLabelColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of Theming.searchBarBackgroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t dispatch thunk of Theming.addToCalendarButtonColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 264))();
}

uint64_t dispatch thunk of Theming.addToCalendarButtonHighlightColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 272))();
}

uint64_t dispatch thunk of Theming.greenChartStrokeColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 280))();
}

uint64_t dispatch thunk of Theming.greenChartFillColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 288))();
}

uint64_t dispatch thunk of Theming.redChartStrokeColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 296))();
}

uint64_t dispatch thunk of Theming.redChartFillColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 304))();
}

uint64_t dispatch thunk of Theming.neutralChartStrokeColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 312))();
}

uint64_t dispatch thunk of Theming.neutralChartFillColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 320))();
}

uint64_t dispatch thunk of Theming.afterHoursChartStrokeColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 328))();
}

uint64_t dispatch thunk of Theming.afterHoursChartFillColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 336))();
}

uint64_t dispatch thunk of Theming.previousCloseStrokeColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 344))();
}

uint64_t dispatch thunk of Theming.chartHighlightStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 352))();
}

uint64_t dispatch thunk of Theming.volumeColumnColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 360))();
}

uint64_t dispatch thunk of Theming.labelGridColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 368))();
}

uint64_t dispatch thunk of Theming.minorGridColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 376))();
}

uint64_t dispatch thunk of Theming.majorGridColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 384))();
}

uint64_t dispatch thunk of Theming.dateRangeSelectedColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 392))();
}

uint64_t dispatch thunk of Theming.baselineSparklineColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 400))();
}

uint64_t dispatch thunk of Theming.placeholderSparklineColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 408))();
}

uint64_t dispatch thunk of Theming.noChangeFillColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 416))();
}

uint64_t dispatch thunk of Theming.noChangeTextColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 424))();
}

uint64_t dispatch thunk of Theming.cardBarTintColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 432))();
}

uint64_t dispatch thunk of Theming.tipAccessoryColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 440))();
}

uint64_t dispatch thunk of Theming.tipBackgroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 448))();
}

uint64_t dispatch thunk of Theming.tipMessageColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 456))();
}

uint64_t dispatch thunk of Theming.tipTitleColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 464))();
}

uint64_t dispatch thunk of Theming.statusBarColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 472))();
}

uint64_t dispatch thunk of Theming.mastheadSubheadingColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 480))();
}

uint64_t dispatch thunk of Theming.separatorColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 488))();
}

uint64_t dispatch thunk of Theming.premiumSealInnerTintColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 496))();
}

uint64_t dispatch thunk of Theming.premiumSealOuterTintColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 504))();
}

uint64_t dispatch thunk of SystemTheming.tableCellDefaultSelectionTintColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SystemTheming.darkTealColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SystemTheming.keyBlue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SystemTheming.systemGray.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

void sub_20A5BEE50(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  sub_20A45A000();
  uint64_t v58 = *(void *)(v7 - 8);
  uint64_t v59 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v57 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WatchlistCellViewModel(0);
  uint64_t v54 = *(void *)(v9 - 8);
  uint64_t v53 = *(void *)(v54 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v52 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = v3 + 16;
  swift_beginAccess();
  sub_20A4342F4(v3 + 16, (uint64_t)v60);
  uint64_t v49 = __swift_project_boxed_opaque_existential_1(v60, v61);
  id v50 = *(id *)&a3[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_titleLabel];
  id v11 = v50;
  uint64_t v51 = a1;
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isEditing;
  char v15 = a3[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isEditing];
  char v16 = *(unsigned char *)(a1 + 32);
  double v17 = (void (*)(void *, uint64_t, uint64_t, char, char))off_26BE69750;
  type metadata accessor for WatchlistCellViewStyler();
  v17(v11, v12, v13, v15, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  id v18 = (double *)(a2 + 8);
  double v19 = (double *)(a2 + 16);
  double v20 = (double *)(a2 + 24);
  uint64_t v21 = (double *)(a2 + 32);
  if (a3[v14] == 1)
  {
    id v18 = (double *)(a2 + 40);
    double v19 = (double *)(a2 + 48);
    double v20 = (double *)(a2 + 56);
    uint64_t v21 = (double *)(a2 + 64);
  }
  objc_msgSend(v50, sel_setFrame_, *v18, *v19, *v20, *v21);
  uint64_t v23 = v51;
  uint64_t v22 = v52;
  sub_20A5BF6EC(v51, v52);
  unint64_t v24 = (*(unsigned __int8 *)(v54 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  unint64_t v25 = (v53 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v55;
  sub_20A5BF8E0(v22, v26 + v24);
  unint64_t v27 = v26 + v25;
  long long v28 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v27 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v27 + 144) = v28;
  *(void *)(v27 + 160) = *(void *)(a2 + 160);
  long long v29 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v27 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v27 + 80) = v29;
  long long v30 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v27 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v27 + 112) = v30;
  long long v31 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)unint64_t v27 = *(_OWORD *)a2;
  *(_OWORD *)(v27 + 16) = v31;
  long long v32 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v27 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v27 + 48) = v32;
  double v33 = (id (**)(uint64_t, char))&a3[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onEditing];
  uint64_t v34 = *(void *)&a3[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onEditing];
  *double v33 = sub_20A5BF944;
  v33[1] = (id (*)(uint64_t, char))v26;
  swift_retain();
  sub_20A459CA4(v34);
  uint64_t v35 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton;
  objc_msgSend(*(id *)&a3[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton], sel_setFrame_, *(double *)(a2 + 72), *(double *)(a2 + 80), *(double *)(a2 + 88), *(double *)(a2 + 96));
  double v36 = *(void **)&a3[v35];
  LOBYTE(v60[0]) = 0;
  uint64_t v37 = swift_allocObject();
  swift_weakInit();
  uint64_t v38 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v37;
  *(void *)(v39 + 24) = v38;
  sub_20A45A06C();
  sub_20A45A0AC();
  id v40 = v36;
  double v41 = v57;
  sub_20A8C8E20();
  sub_20A8C9080();

  (*(void (**)(char *, uint64_t))(v58 + 8))(v41, v59);
  sub_20A4342F4(v56, (uint64_t)v60);
  __swift_project_boxed_opaque_existential_1(v60, v61);
  uint64_t v42 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_editNameButton];
  id v43 = objc_msgSend(a3, sel_traitCollection);
  id v44 = objc_msgSend(v43, sel_preferredContentSizeCategory);

  sub_20A65BD88();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  objc_msgSend(v42, sel_setFrame_, *(double *)(a2 + 104), *(double *)(a2 + 112), *(double *)(a2 + 120), *(double *)(a2 + 128));
  double v45 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_hairlineView];
  objc_msgSend(v45, sel_setFrame_, *(double *)(a2 + 136), *(double *)(a2 + 144), *(double *)(a2 + 152), *(double *)(a2 + 160));
  id v46 = objc_msgSend(self, sel_secondarySystemFillColor);
  objc_msgSend(v45, sel_setBackgroundColor_, v46);

  uint64_t v47 = *(unsigned __int8 *)(v23 + 32);
  objc_msgSend(v42, sel_setHidden_, v47);
  objc_msgSend(v45, sel_setHidden_, v47);
  uint64_t v48 = (void *)sub_20A8CE240();
  objc_msgSend(a3, sel_setAccessibilityLabel_, v48);
}

id sub_20A5BF3B4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, double *a5)
{
  uint64_t v9 = a3 + 16;
  swift_beginAccess();
  sub_20A4342F4(v9, (uint64_t)v20);
  __swift_project_boxed_opaque_existential_1(v20, v20[3]);
  uint64_t v10 = *(void **)(a1 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_titleLabel);
  uint64_t v11 = *(void *)(a4 + 16);
  uint64_t v12 = *(void *)(a4 + 24);
  LOBYTE(a4) = *(unsigned char *)(a4 + 32);
  uint64_t v13 = (void (*)(void *, uint64_t, uint64_t, char, char))off_26BE69750;
  type metadata accessor for WatchlistCellViewStyler();
  v13(v10, v11, v12, a2, a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  uint64_t v14 = a5 + 1;
  char v15 = a5 + 2;
  char v16 = a5 + 3;
  if (a2)
  {
    uint64_t v14 = a5 + 5;
    char v15 = a5 + 6;
    char v16 = a5 + 7;
  }
  double v17 = *v14;
  id v18 = a5 + 8;
  if ((a2 & 1) == 0) {
    id v18 = a5 + 4;
  }
  return objc_msgSend(v10, sel_setFrame_, v17, *v15, *v16, *v18);
}

void sub_20A5BF4F4(char *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  char v5 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_5;
  }
  uint64_t v7 = Strong;
  swift_beginAccess();
  uint64_t v8 = (void *)MEMORY[0x2105289B0](a2 + 16);
  if (!v8)
  {
    swift_release();
LABEL_5:
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
    goto LABEL_6;
  }
  uint64_t v9 = v8;
  id v10 = objc_msgSend(v8, sel_traitCollection);
  id v11 = objc_msgSend(v10, sel_preferredContentSizeCategory);

  swift_beginAccess();
  __swift_project_boxed_opaque_existential_1((void *)(v7 + 16), *(void *)(v7 + 40));
  id v12 = sub_20A65C108((v5 & 1) == 0);
  swift_release();

LABEL_6:
  *a3 = v12;
}

uint64_t type metadata accessor for WatchlistCellViewRenderer()
{
  return self;
}

unint64_t sub_20A5BF670(uint64_t a1)
{
  unint64_t result = sub_20A5BF698();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_20A5BF698()
{
  unint64_t result = qword_26763C4B8;
  if (!qword_26763C4B8)
  {
    type metadata accessor for WatchlistCellViewRenderer();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C4B8);
  }
  return result;
}

uint64_t sub_20A5BF6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WatchlistCellViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A5BF750()
{
  unint64_t v1 = (int *)(type metadata accessor for WatchlistCellViewModel(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v3 = v0 + v2 + v1[9];
  uint64_t v4 = sub_20A8C40E0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  unint64_t v5 = v0 + v2 + v1[10];
  sub_20A453638();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = sub_20A8C3F00();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
  }

  return swift_deallocObject();
}

uint64_t sub_20A5BF8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WatchlistCellViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_20A5BF944(uint64_t a1, char a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for WatchlistCellViewModel(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = (double *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_20A5BF3B4(a1, a2, v7, v2 + v6, v8);
}

uint64_t sub_20A5BF9F4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A5BFA2C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A5BFA64()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_20A5BFAA4(char *a1@<X0>, void *a2@<X8>)
{
  sub_20A5BF4F4(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_20A5BFAAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v39 = a6;
  uint64_t v38 = a5;
  uint64_t v33 = a4;
  sub_20A5C0A4C(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28]);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12 - 8);
  char v16 = (char *)&v33 - v15;
  uint64_t v44 = v7;
  sub_20A5C0CEC(a7, (uint64_t)&v41, &qword_26AC69600, (unint64_t *)&unk_26AC695F0);
  if (*((void *)&v42 + 1))
  {
    sub_20A42BEBC(&v41, (uint64_t)v43);
    uint64_t v17 = sub_20A480698(v43);
    uint64_t v35 = v19;
    uint64_t v36 = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  }
  else
  {
    sub_20A5C0B3C((uint64_t)&v41, (uint64_t)&qword_26AC69600, (uint64_t)&unk_26AC695F0, MEMORY[0x263F7CDB8], (uint64_t (*)(void))sub_20A491224);
    if (qword_26AC67B18 != -1) {
      swift_once();
    }
    uint64_t v17 = qword_26AC706C8;
    uint64_t v20 = qword_26AC706D0;
    uint64_t v21 = qword_26AC706D8;
    swift_retain();
    uint64_t v35 = v21;
    uint64_t v36 = v20;
    sub_20A480ED4(v20);
  }
  uint64_t v37 = a1;
  uint64_t v34 = v17;
  if (a2)
  {
    *((void *)&v42 + 1) = sub_20A8C4990();
    *(void *)&long long v41 = a2;
  }
  else
  {
    long long v41 = 0u;
    long long v42 = 0u;
  }
  sub_20A5C0C6C(a3, (uint64_t)v16);
  sub_20A5C0CEC(v33, (uint64_t)v43, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
  unint64_t v22 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v23 = (v14 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a2;
  sub_20A5C0D60((uint64_t)v16, v24 + v22);
  sub_20A5C0DE0((uint64_t)v43, v24 + v23, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
  unint64_t v25 = (uint64_t *)(v24 + ((v23 + 47) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v26 = v34;
  uint64_t v27 = v35;
  uint64_t v28 = v36;
  *unint64_t v25 = v34;
  v25[1] = v28;
  v25[2] = v27;
  swift_retain_n();
  swift_retain();
  sub_20A480ED4(v28);
  long long v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F7D3E8];
  sub_20A5C0E54(0, (unint64_t *)&qword_26AC69E60, MEMORY[0x263F7D3E8]);
  sub_20A5C1160((unint64_t *)&qword_26AC69E50, (unint64_t *)&qword_26AC69E60, v29);
  uint64_t v30 = v40;
  sub_20A8CBC80();
  swift_release();
  sub_20A5C0B3C((uint64_t)&v41, (uint64_t)&qword_26AC80170, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A5C0EC0);
  if (v30)
  {
    sub_20A5C0EC0(0, (unint64_t *)&qword_26AC698C0, MEMORY[0x263F8D4F8], MEMORY[0x263F7D028]);
    swift_allocObject();
    uint64_t v31 = sub_20A8C6570();
    swift_release();
    sub_20A459CA4(v28);
    return v31;
  }
  else
  {
    sub_20A459CA4(v28);
  }
  return v26;
}

uint64_t sub_20A5BFF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v39 = a6;
  uint64_t v38 = a5;
  sub_20A5C0A4C(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28]);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12 - 8);
  char v16 = (char *)&v33 - v15;
  sub_20A5C0CEC(a7, (uint64_t)&v40, &qword_26AC69600, (unint64_t *)&unk_26AC695F0);
  uint64_t v35 = a1;
  if (*((void *)&v41 + 1))
  {
    sub_20A42BEBC(&v40, (uint64_t)v42);
    uint64_t v17 = sub_20A480698(v42);
    uint64_t v37 = v18;
    uint64_t v20 = v19;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  }
  else
  {
    sub_20A5C0B3C((uint64_t)&v40, (uint64_t)&qword_26AC69600, (uint64_t)&unk_26AC695F0, MEMORY[0x263F7CDB8], (uint64_t (*)(void))sub_20A491224);
    if (qword_26AC67B18 != -1) {
      swift_once();
    }
    uint64_t v17 = qword_26AC706C8;
    uint64_t v21 = qword_26AC706D0;
    uint64_t v20 = qword_26AC706D8;
    swift_retain();
    uint64_t v37 = v21;
    sub_20A480ED4(v21);
  }
  uint64_t v36 = v20;
  uint64_t v34 = v17;
  if (a2)
  {
    *((void *)&v41 + 1) = sub_20A8C4990();
    *(void *)&long long v40 = a2;
  }
  else
  {
    long long v40 = 0u;
    long long v41 = 0u;
  }
  sub_20A5C0C6C(a3, (uint64_t)v16);
  sub_20A5C0CEC(a4, (uint64_t)v42, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
  unint64_t v22 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v23 = (v14 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a2;
  sub_20A5C0D60((uint64_t)v16, v24 + v22);
  sub_20A5C0DE0((uint64_t)v42, v24 + v23, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
  unint64_t v25 = (uint64_t *)(v24 + ((v23 + 47) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v26 = v34;
  uint64_t v28 = v36;
  uint64_t v27 = v37;
  *unint64_t v25 = v34;
  v25[1] = v27;
  v25[2] = v28;
  swift_retain_n();
  swift_retain();
  sub_20A480ED4(v27);
  long long v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F7D270];
  sub_20A5C0E54(0, (unint64_t *)&qword_26AC69D18, MEMORY[0x263F7D270]);
  sub_20A5C1160(&qword_26AC69D10, (unint64_t *)&qword_26AC69D18, v29);
  uint64_t v30 = v42[6];
  sub_20A8CBC80();
  swift_release();
  sub_20A5C0B3C((uint64_t)&v40, (uint64_t)&qword_26AC80170, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A5C0EC0);
  if (v30)
  {
    sub_20A5C0EC0(0, (unint64_t *)&qword_26AC698C0, MEMORY[0x263F8D4F8], MEMORY[0x263F7D028]);
    swift_allocObject();
    uint64_t v31 = sub_20A8C6570();
    swift_release();
    sub_20A459CA4(v27);
    return v31;
  }
  else
  {
    sub_20A459CA4(v27);
  }
  return v26;
}

uint64_t sub_20A5C0398(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a2;
  uint64_t v33 = a1;
  sub_20A5C0A4C(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v26 - v4;
  uint64_t v36 = sub_20A8C5390();
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5C0A4C(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v8 - 8);
  id v10 = (char *)&v26 - v9;
  uint64_t v31 = sub_20A8C4B90();
  uint64_t v30 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v32);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 112), *(void *)(v2 + 136));
  sub_20A43F7E0(0, (unint64_t *)&unk_26AC695F0);
  sub_20A8C5B70();
  if (*((void *)&v41 + 1))
  {
    sub_20A42BEBC(&v40, (uint64_t)v43);
  }
  else
  {
    sub_20A4342F4(v2 + 112, (uint64_t)v43);
    sub_20A5C0B3C((uint64_t)&v40, (uint64_t)&qword_26AC69600, (uint64_t)&unk_26AC695F0, MEMORY[0x263F7CDB8], (uint64_t (*)(void))sub_20A491224);
  }
  __swift_project_boxed_opaque_existential_1(v43, v44);
  sub_20A5C0E54(0, (unint64_t *)&qword_26AC69E60, MEMORY[0x263F7D3E8]);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v28 = result;
  long long v29 = v5;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v16 = result;
  sub_20A42FC8C();
  uint64_t v27 = *(int *)(v17 + 48);
  uint64_t v18 = (uint64_t)&v14[*(int *)(v17 + 64)];
  uint64_t v19 = sub_20A8C2530();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v10, 1, 1, v19);
  swift_bridgeObjectRetain();
  sub_20A8C4B80();
  v20(v10, 1, 1, v19);
  uint64_t v21 = v34;
  uint64_t v22 = v36;
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v7, *MEMORY[0x263F58CD8], v36);
  sub_20A8C4D30();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
  sub_20A5C0B9C((uint64_t)v10, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v31);
  uint64_t v42 = 0;
  long long v40 = 0u;
  long long v41 = 0u;
  sub_20A5C0DE0((uint64_t)&v40, v18, (unint64_t *)&qword_26AC79B50, (unint64_t *)&unk_26AC79B40);
  *(void *)&v14[v27] = 0;
  type metadata accessor for StocksActivity.Article(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = sub_20A8C6D60();
  uint64_t v24 = (uint64_t)v29;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v29, 1, 1, v23);
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_20A4342F4((uint64_t)v43, (uint64_t)v37);
  swift_retain();
  uint64_t v25 = v45;
  sub_20A5BFAAC((uint64_t)v14, v16, v24, (uint64_t)v38, 0, 0, (uint64_t)v37);
  if (!v25) {
    swift_release();
  }
  swift_release_n();
  sub_20A5C0B3C((uint64_t)v37, (uint64_t)&qword_26AC69600, (uint64_t)&unk_26AC695F0, MEMORY[0x263F7CDB8], (uint64_t (*)(void))sub_20A491224);
  sub_20A5C0B3C((uint64_t)v38, (uint64_t)&qword_26AC6AE80, (uint64_t)&qword_26AC6AE70, MEMORY[0x263F58868], (uint64_t (*)(void))sub_20A491224);
  sub_20A5C0B9C(v24, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28]);
  sub_20A4EF9E0((uint64_t)v14);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
}

void sub_20A5C0A4C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t OpenArticleIntentNavigator.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t OpenArticleIntentNavigator.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_defaultActor_destroy();

  return MEMORY[0x270FA2418](v0);
}

uint64_t OpenArticleIntentNavigator.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_20A5C0B0C()
{
  return v0;
}

uint64_t sub_20A5C0B18(uint64_t a1, uint64_t a2)
{
  return sub_20A5C0398(a1, a2);
}

uint64_t sub_20A5C0B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_20A5C0B9C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A5C0A4C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t type metadata accessor for OpenArticleIntentNavigator()
{
  return self;
}

uint64_t method lookup function for OpenArticleIntentNavigator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for OpenArticleIntentNavigator);
}

uint64_t dispatch thunk of OpenArticleIntentNavigator.navigate(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t sub_20A5C0C6C(uint64_t a1, uint64_t a2)
{
  sub_20A5C0A4C(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A5C0CEC(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  sub_20A491224(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A5C0D60(uint64_t a1, uint64_t a2)
{
  sub_20A5C0A4C(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A5C0DE0(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  sub_20A491224(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_20A5C0E54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for StocksActivity(255);
    uint64_t v7 = sub_20A46A2C8();
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A5C0EC0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t objectdestroyTm_5()
{
  sub_20A5C0A4C(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28]);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  unint64_t v3 = (*(void *)(*(void *)(v1 - 8) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v4 = v0 + v2;
  uint64_t v5 = sub_20A8C6D60();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  if (*(void *)(v0 + v3 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + v3);
  }
  swift_release();
  if (*(void *)(v0 + ((v3 + 47) & 0xFFFFFFFFFFFFFFF8) + 8)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_20A5C1090(uint64_t a1)
{
  sub_20A5C0A4C(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28]);
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = (uint64_t *)(v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = v9[2];

  return sub_20A480C4C(a1, v7, v8, v1 + v6, v10, v11, v12);
}

uint64_t sub_20A5C1160(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A5C0E54(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_20A5C11A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v3 = *(void *)(sub_20A8C31F0() - 8);
  uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain();
  unint64_t v6 = (void *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v8 = sub_20A8C31E0();
    if (v9)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v6 = sub_20A46DEBC(0, v6[2] + 1, 1, v6);
      }
      unint64_t v13 = v6[2];
      unint64_t v12 = v6[3];
      if (v13 >= v12 >> 1) {
        unint64_t v6 = sub_20A46DEBC((void *)(v12 > 1), v13 + 1, 1, v6);
      }
      uint64_t v6[2] = v13 + 1;
      uint64_t v7 = &v6[2 * v13];
      void v7[4] = v10;
      v7[5] = v11;
    }
    v4 += v5;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_20A5C12FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v43 = a1;
  sub_20A5C1ED4(0, &qword_26763C4C0, MEMORY[0x263F7AAC0], MEMORY[0x263F06870]);
  uint64_t v39 = *(char **)(v2 - 8);
  uint64_t v40 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v38 = (char *)&v36 - v3;
  uint64_t v4 = sub_20A8C3210();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A5C1ED4(0, (unint64_t *)&unk_26AC695B8, MEMORY[0x263F58ED0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v36 - v8;
  uint64_t v10 = sub_20A8C4E00();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_20A8C5920();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5C1ED4(0, &qword_26AC69408, MEMORY[0x263F58AD8], v6);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v36 - v19;
  sub_20A8C51B0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
  uint64_t v21 = v1 + OBJC_IVAR____TtC8StocksUI36ArticleSymbolsToolbarFeatureProvider_activePage;
  swift_beginAccess();
  uint64_t v22 = v21;
  uint64_t v23 = v14;
  uint64_t v24 = v15;
  sub_20A5C1E14((uint64_t)v20, v22);
  swift_endAccess();
  sub_20A8C51B0();
  sub_20A8C4DE0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v23) == 1)
  {
    sub_20A5C1FD4((uint64_t)v9, (unint64_t *)&unk_26AC695B8, MEMORY[0x263F58ED0]);
    return sub_20A8C4FD0();
  }
  else
  {
    uint64_t v26 = v17;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v9, v23);
    sub_20A8C5900();
    swift_getObjectType();
    uint64_t v27 = v37;
    sub_20A8CEC90();
    swift_unknownObjectRelease();
    uint64_t v44 = sub_20A8C3200();
    swift_getKeyPath();
    uint64_t v28 = v38;
    sub_20A8C2360();
    long long v29 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D488];
    sub_20A5C1ED4(0, &qword_26763C4C8, MEMORY[0x263F7AAC0], MEMORY[0x263F8D488]);
    sub_20A5C1F38(&qword_26763C4D0, &qword_26763C4C8, v29);
    sub_20A5C1F38(&qword_26763C4D8, &qword_26763C4C0, MEMORY[0x263F06870]);
    uint64_t v30 = v40;
    uint64_t v31 = sub_20A8CE4A0();
    (*((void (**)(char *, uint64_t))v39 + 1))(v28, v30);
    swift_bridgeObjectRelease();
    uint64_t v32 = sub_20A5C11A4(v31);
    swift_bridgeObjectRelease();
    uint64_t v33 = v32[2];
    if (v33)
    {
      uint64_t v39 = v26;
      uint64_t v40 = v24;
      uint64_t v34 = v23;
      uint64_t v44 = MEMORY[0x263F8EE78];
      sub_20A8CF470();
      sub_20A5C1F94();
      uint64_t v35 = v32 + 5;
      do
      {
        swift_bridgeObjectRetain();
        sub_20A8CEA90();
        sub_20A8CF450();
        sub_20A8CF480();
        sub_20A8CF490();
        sub_20A8CF460();
        v35 += 2;
        --v33;
      }
      while (v33);
      swift_bridgeObjectRelease();
      uint64_t v23 = v34;
      uint64_t v26 = v39;
      uint64_t v24 = v40;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_20A8C4FD0();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v42);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  }
}

uint64_t sub_20A5C19B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v21 = a3;
  uint64_t v4 = sub_20A8C4E00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = v3 + OBJC_IVAR____TtC8StocksUI36ArticleSymbolsToolbarFeatureProvider_activePage;
  swift_beginAccess();
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v11, v4);
    uint64_t v12 = sub_20A8C4DD0();
    uint64_t v13 = v14;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  sub_20A8C51B0();
  uint64_t v15 = sub_20A8C4DD0();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v13)
  {
    uint64_t result = swift_bridgeObjectRelease();
    return v21(result);
  }
  if (v12 == v15 && v13 == v17)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  char v19 = sub_20A8CF760();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v19 & 1) == 0) {
    return v21(result);
  }
  return result;
}

uint64_t sub_20A5C1BD8()
{
  sub_20A5C1FD4(v0 + OBJC_IVAR____TtC8StocksUI36ArticleSymbolsToolbarFeatureProvider_activePage, &qword_26AC69408, MEMORY[0x263F58AD8]);

  return swift_deallocClassInstance();
}

uint64_t sub_20A5C1C58()
{
  return type metadata accessor for ArticleSymbolsToolbarFeatureProvider();
}

uint64_t type metadata accessor for ArticleSymbolsToolbarFeatureProvider()
{
  uint64_t result = qword_26AC7D110;
  if (!qword_26AC7D110) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A5C1CAC()
{
  sub_20A5C1ED4(319, &qword_26AC69408, MEMORY[0x263F58AD8], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_20A5C1D6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F58B30];
  uint64_t v3 = sub_20A8C4ED0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_20A5C1DE8(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270F4EED8](a1, a2, *v2);
}

uint64_t sub_20A5C1E14(uint64_t a1, uint64_t a2)
{
  sub_20A5C1ED4(0, &qword_26AC69408, MEMORY[0x263F58AD8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A5C1EA8@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_20A8C31D0();
  *a1 = v3;
  return result;
}

void sub_20A5C1ED4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A5C1F38(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A5C1ED4(255, a2, MEMORY[0x263F7AAC0], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A5C1F94()
{
  unint64_t result = qword_26AC7F8F8;
  if (!qword_26AC7F8F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC7F8F8);
  }
  return result;
}

uint64_t sub_20A5C1FD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A5C1ED4(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A5C2044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A5C2058);
}

uint64_t sub_20A5C2058(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A5C20C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A5C20D8);
}

uint64_t sub_20A5C20D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StockFeedPage()
{
  uint64_t result = qword_26AC6D288;
  if (!qword_26AC6D288) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A5C2194()
{
}

uint64_t sub_20A5C21F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_20A8CB930();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20A5C221C()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A5C2274(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A5C2404(&qword_26763C4F8);

  return MEMORY[0x270F7A6F8](a1, a2, v4);
}

uint64_t sub_20A5C22DC()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A5C2334()
{
  return sub_20A5C2404(&qword_26763C4E0);
}

uint64_t sub_20A5C2368()
{
  return sub_20A5C2404(&qword_26763C4E8);
}

uint64_t sub_20A5C239C()
{
  return sub_20A5C2404(&qword_26763C4F0);
}

uint64_t sub_20A5C23D0()
{
  return sub_20A5C2404(&qword_26763C4F8);
}

uint64_t sub_20A5C2404(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StockFeedPage();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A5C2448()
{
  return MEMORY[0x263F8D338];
}

uint64_t URL.Param.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_20A8CF5B0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t URL.Param.rawValue.getter()
{
  if (*v0) {
    return 0x657370616C6C6F63;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_20A5C2504(char *a1, char *a2)
{
  return sub_20A44FF84(*a1, *a2);
}

unint64_t sub_20A5C2514()
{
  unint64_t result = qword_26763C500;
  if (!qword_26763C500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C500);
  }
  return result;
}

uint64_t sub_20A5C2568()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A5C25FC()
{
  sub_20A8CE360();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A5C267C()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A5C270C@<X0>(char *a1@<X8>)
{
  return URL.Param.init(rawValue:)(a1);
}

void sub_20A5C2718(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000010;
  if (*v1) {
    unint64_t v2 = 0x657370616C6C6F63;
  }
  unint64_t v3 = 0x800000020A8F7FC0;
  if (*v1) {
    unint64_t v3 = 0xEF72616265646953;
  }
  *a1 = v2;
  a1[1] = v3;
}

unsigned char *_s5ParamOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A5C2834);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for URL.Param()
{
  return &type metadata for URL.Param;
}

ValueMetadata *type metadata accessor for WelcomeOfflineModel()
{
  return &type metadata for WelcomeOfflineModel;
}

uint64_t sub_20A5C287C()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_267652DA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_267652DA8);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  unint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A903D20);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A5C2A20()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_267652DC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_267652DC0);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  unint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A903A80);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A5C2BC4()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_267652DD8);
  __swift_project_value_buffer(v0, (uint64_t)qword_267652DD8);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  unint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A903C40);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A5C2D68()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_267652DF0);
  __swift_project_value_buffer(v0, (uint64_t)qword_267652DF0);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  unint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A903B80);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A5C2F08@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639AA8, (uint64_t)qword_267652DA8, a1);
}

uint64_t sub_20A5C2F30@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639AB0, (uint64_t)qword_267652DC0, a1);
}

uint64_t sub_20A5C2F54@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639AB8, (uint64_t)qword_267652DD8, a1);
}

uint64_t sub_20A5C2F78@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639AC0, (uint64_t)qword_267652DF0, a1);
}

uint64_t sub_20A5C2FA0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    sub_20A8CF470();
    uint64_t v4 = *(void *)(sub_20A8C4020() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      sub_20A8C3F80();
      sub_20A8CF450();
      sub_20A8CF480();
      sub_20A8CF490();
      sub_20A8CF460();
      v5 += v6;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t ArticleTopStoriesOptionsProvider.results()()
{
  v1[4] = v0;
  sub_20A5C36A4();
  v1[5] = swift_task_alloc();
  uint64_t v2 = sub_20A8C4C40();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_20A5C31A4, 0, 0);
}

uint64_t sub_20A5C31A4()
{
  __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 32), *(void *)(*(void *)(v0 + 32) + 24));
  *(void *)(v0 + 80) = sub_20A8C3780();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_20A5C3270;
  return MEMORY[0x270F7A5E8](v0 + 16);
}

uint64_t sub_20A5C3270()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_20A5C3618;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_20A5C338C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_20A5C338C()
{
  unint64_t v1 = sub_20A5C2FA0(v0[2]);
  swift_bridgeObjectRelease();
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_20A8CF540();
    uint64_t v2 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_17:
    unint64_t v9 = MEMORY[0x263F8EE78];
    goto LABEL_18;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_17;
  }
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  uint64_t v5 = v0[7];
  unint64_t v6 = v1 & 0xC000000000000001;
  uint64_t v7 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  uint64_t v25 = v5;
  unint64_t v8 = (void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  unint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v23 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  unint64_t v24 = v1 & 0xC000000000000001;
  do
  {
    if (v6) {
      MEMORY[0x210527700](v4, v1);
    }
    else {
      swift_unknownObjectRetain();
    }
    uint64_t v11 = v0[5];
    uint64_t v10 = v0[6];
    sub_20A8C4C30();
    if ((*v7)(v11, 1, v10) == 1)
    {
      sub_20A5C36FC(v0[5]);
    }
    else
    {
      uint64_t v12 = v2;
      unint64_t v13 = v1;
      uint64_t v15 = v0[8];
      uint64_t v14 = v0[9];
      uint64_t v16 = v0[6];
      uint64_t v17 = *v8;
      (*v8)(v14, v0[5], v16);
      v17(v15, v14, v16);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v9 = sub_20A46E1CC(0, *(void *)(v9 + 16) + 1, 1, v9);
      }
      unint64_t v19 = *(void *)(v9 + 16);
      unint64_t v18 = *(void *)(v9 + 24);
      unint64_t v1 = v13;
      if (v19 >= v18 >> 1) {
        unint64_t v9 = sub_20A46E1CC(v18 > 1, v19 + 1, 1, v9);
      }
      uint64_t v2 = v12;
      uint64_t v20 = v0[8];
      uint64_t v21 = v0[6];
      *(void *)(v9 + 16) = v19 + 1;
      v17(v9+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v19, v20, v21);
      uint64_t v7 = v23;
      unint64_t v6 = v24;
    }
    ++v4;
  }
  while (v2 != v4);
LABEL_18:
  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(unint64_t))v0[1];
  return v22(v9);
}

uint64_t sub_20A5C3618()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_20A5C36A4()
{
  if (!qword_26AC81270)
  {
    sub_20A8C4C40();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC81270);
    }
  }
}

uint64_t sub_20A5C36FC(uint64_t a1)
{
  sub_20A5C36A4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A5C3758()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_20A5C37E4;
  return ArticleTopStoriesOptionsProvider.results()();
}

uint64_t sub_20A5C37E4(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

ValueMetadata *type metadata accessor for ArticleTopStoriesOptionsProvider()
{
  return &type metadata for ArticleTopStoriesOptionsProvider;
}

ValueMetadata *type metadata accessor for StockListRelayoutBlueprintModifier()
{
  return &type metadata for StockListRelayoutBlueprintModifier;
}

uint64_t sub_20A5C3904(uint64_t a1, void (*a2)(char *))
{
  sub_20A5C3B2C(0, &qword_26AC6A428, MEMORY[0x263F7D950]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  sub_20A4B9E40();
  uint64_t v10 = &v8[*(int *)(v9 + 48)];
  sub_20A5C3B2C(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v8, a1, v11);
  uint64_t v12 = *MEMORY[0x263F7D528];
  uint64_t v13 = sub_20A8C8B80();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v10, v12, v13);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F7D920], v5);
  a2(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20A5C3AD8()
{
  unint64_t result = qword_26AC7CB90;
  if (!qword_26AC7CB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7CB90);
  }
  return result;
}

void sub_20A5C3B2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for StockListSectionDescriptor;
    v8[1] = type metadata accessor for StockListModel(255);
    v8[2] = sub_20A42D40C();
    v8[3] = sub_20A44D504();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t destroy for StockSearchReplaceQuotesBlueprintModifier()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s8StocksUI41StockSearchReplaceQuotesBlueprintModifierVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for StockSearchReplaceQuotesBlueprintModifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StockSearchReplaceQuotesBlueprintModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StockSearchReplaceQuotesBlueprintModifier()
{
  return &type metadata for StockSearchReplaceQuotesBlueprintModifier;
}

uint64_t sub_20A5C3CFC@<X0>(char *a1@<X0>, void (*a2)(uint64_t)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v200 = a3;
  CGFloat v197 = a2;
  CGRect v199 = (void (*)(uint64_t))sub_20A8C40E0();
  uint64_t v193 = *((void *)v199 - 1);
  MEMORY[0x270FA5388](v199);
  double v198 = (uint64_t (*)(uint64_t))((char *)&v166 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_20A8C4030();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v180 = (char *)&v166 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v181 = (uint64_t)&v166 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = sub_20A8C3410();
  uint64_t v179 = *(void *)(v189 - 8);
  MEMORY[0x270FA5388](v189);
  uint64_t v187 = (char *)&v166 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A579B64(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v185 = (uint64_t)&v166 - v11;
  uint64_t v194 = sub_20A8C3F00();
  uint64_t v188 = *(void *)(v194 - 8);
  MEMORY[0x270FA5388](v194);
  uint64_t v186 = (char *)&v166 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5C6360();
  uint64_t v182 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v175 = (uint64_t)&v166 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v174 = (uint64_t)&v166 - v16;
  sub_20A579B64(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v172 = (uint64_t)&v166 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v183 = (void (*)(char *, char *, uint64_t))((char *)&v166 - v20);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v166 - v22;
  MEMORY[0x270FA5388](v24);
  uint64_t v176 = (uint64_t)&v166 - v25;
  MEMORY[0x270FA5388](v26);
  uint64_t v196 = (uint64_t)&v166 - v27;
  MEMORY[0x270FA5388](v28);
  uint64_t v184 = (uint64_t)&v166 - v29;
  MEMORY[0x270FA5388](v30);
  CGFloat v171 = (void **)((char *)&v166 - v31);
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)&v166 - v33;
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = (char *)&v166 - v36;
  uint64_t v203 = sub_20A8C3E10();
  uint64_t v202 = *(void *)(v203 - 8);
  MEMORY[0x270FA5388](v203);
  uint64_t v39 = (char *)&v166 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  uint64_t v173 = (char *)&v166 - v41;
  MEMORY[0x270FA5388](v42);
  double v190 = (char *)&v166 - v43;
  uint64_t v195 = type metadata accessor for StockViewModel();
  MEMORY[0x270FA5388](v195);
  uint64_t v45 = (char *)&v166 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v46);
  uint64_t v48 = (char *)&v166 - v47;
  uint64_t v49 = type metadata accessor for StockSearchModel();
  MEMORY[0x270FA5388](v49);
  id v177 = (char *)&v166 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v51);
  uint64_t v53 = (char *)&v166 - v52;
  sub_20A44DB30(0);
  double v191 = (uint64_t (*)(uint64_t))v54;
  CGFloat v192 = a1;
  sub_20A8C8330();
  uint64_t v178 = v49;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_20A494EC0((uint64_t)v53, (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for StockViewModel);
    uint64_t v71 = sub_20A8C3EC0();
    uint64_t v73 = v197;
    if (*((void *)v197 + 2))
    {
      unint64_t v74 = sub_20A4D1B24(v71, v72);
      uint64_t v75 = v203;
      if (v76)
      {
        uint64_t v77 = *((void *)v73 + 7);
        uint64_t v78 = v202;
        (*(void (**)(char *, unint64_t, uint64_t))(v202 + 16))(v37, v77 + *(void *)(v202 + 72) * v74, v203);
        uint64_t v79 = *(void (**)(uint64_t))(v78 + 56);
        uint64_t v80 = v37;
        uint64_t v81 = 0;
      }
      else
      {
        uint64_t v78 = v202;
        uint64_t v79 = *(void (**)(uint64_t))(v202 + 56);
        uint64_t v80 = v37;
        uint64_t v81 = 1;
      }
      CGRect v199 = v79;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v79)(v80, v81, 1, v75);
    }
    else
    {
      uint64_t v78 = v202;
      uint64_t v75 = v203;
      CGRect v199 = *(void (**)(uint64_t))(v202 + 56);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v199)(v37, 1, 1, v203);
    }
    swift_bridgeObjectRelease();
    uint64_t v97 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
    if (v97(v37, 1, v75) == 1)
    {
      sub_20A5C63E0((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      sub_20A579C24((uint64_t)v37, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      return (*(uint64_t (**)(uint64_t, char *))(*((void *)v191 - 1) + 16))(v200, v192);
    }
    uint64_t v98 = v190;
    uint64_t v183 = *(void (**)(char *, char *, uint64_t))(v78 + 32);
    v183(v190, v37, v75);
    uint64_t v193 = *(void *)(v78 + 16);
    ((void (*)(char *, char *, uint64_t))v193)(v34, v98, v75);
    CGFloat v197 = (void (*)(uint64_t))(v78 + 16);
    double v198 = (uint64_t (*)(uint64_t))(v78 + 56);
    ((void (*)(char *, void, uint64_t, uint64_t))v199)(v34, 0, 1, v75);
    uint64_t v99 = *(int *)(v195 + 20);
    uint64_t v170 = v48;
    uint64_t v100 = &v48[v99];
    uint64_t v101 = v174;
    uint64_t v102 = v174 + *(int *)(v182 + 48);
    uint64_t v103 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
    sub_20A579BB8((uint64_t)v34, v174, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    uint64_t v104 = (uint64_t)v100;
    uint64_t v105 = v203;
    sub_20A579BB8(v104, v102, &qword_26AC68FB0, v103);
    if (v97((char *)v101, 1, v105) == 1)
    {
      sub_20A579C24((uint64_t)v34, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      if (v97((char *)v102, 1, v105) == 1)
      {
        sub_20A579C24(v101, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
        (*(void (**)(char *, uint64_t))(v202 + 8))(v190, v105);
LABEL_33:
        sub_20A5C63E0((uint64_t)v170, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        return (*(uint64_t (**)(uint64_t, char *))(*((void *)v191 - 1) + 16))(v200, v192);
      }
    }
    else
    {
      uint64_t v108 = (uint64_t)v171;
      sub_20A579BB8(v101, (uint64_t)v171, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      if (v97((char *)v102, 1, v105) != 1)
      {
        uint64_t v138 = v101;
        uint64_t v139 = v173;
        v183(v173, (char *)v102, v203);
        sub_20A5C5980((unint64_t *)&unk_26AC68FA0, MEMORY[0x263F7AEF0]);
        char v140 = sub_20A8CE210();
        id v141 = *(void (**)(char *, uint64_t))(v202 + 8);
        v141(v139, v203);
        uint64_t v142 = v108;
        uint64_t v143 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
        sub_20A579C24((uint64_t)v34, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
        v141((char *)v142, v203);
        uint64_t v144 = v138;
        uint64_t v105 = v203;
        sub_20A579C24(v144, &qword_26AC68FB0, v143);
        if (v140)
        {
          v141(v190, v105);
          goto LABEL_33;
        }
LABEL_35:
        uint64_t v146 = v184;
        ((void (*)(uint64_t, char *, uint64_t))v193)(v184, v190, v105);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v199)(v146, 0, 1, v105);
        double v198 = *(uint64_t (**)(uint64_t))(v188 + 16);
        double v147 = v186;
        uint64_t v148 = (uint64_t)v170;
        uint64_t v149 = v194;
        v198((uint64_t)v186);
        CGRect v199 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
        sub_20A579BB8(v146, v196, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
        uint64_t v150 = type metadata accessor for StockSparklineViewModel(0);
        uint64_t v151 = v185;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v150 - 8) + 56))(v185, 1, 1, v150);
        CGFloat v152 = (int *)v195;
        uint64_t v153 = v148 + *(int *)(v195 + 32);
        uint64_t v154 = v179;
        uint64_t v193 = *(void *)(v179 + 16);
        ((void (*)(char *, uint64_t, uint64_t))v193)(v187, v153, v189);
        LODWORD(v197) = *(unsigned __int8 *)(v148 + v152[9]);
        uint64_t v155 = v177;
        ((void (*)(char *, char *, uint64_t))v198)(v177, v147, v149);
        uint64_t v156 = v196;
        uint64_t v157 = v199;
        sub_20A579BB8(v196, (uint64_t)&v155[v152[5]], &qword_26AC68FB0, v199);
        uint64_t v158 = (uint64_t)&v155[v152[6]];
        double v198 = type metadata accessor for StockSparklineViewModel;
        sub_20A579BB8(v151, v158, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
        uint64_t v159 = v187;
        uint64_t v160 = v189;
        ((void (*)(char *, char *, uint64_t))v193)(&v155[v152[8]], v187, v189);
        v155[v152[9]] = (char)v197;
        uint64_t v161 = v176;
        sub_20A579BB8(v156, v176, &qword_26AC68FB0, v157);
        uint64_t v162 = v180;
        uint64_t v163 = v186;
        sub_20A8C3E70();
        uint64_t v164 = v181;
        sub_20A5EC850(v161, v162, 9666786, 0xA300000000000000, v181);
        (*(void (**)(char *, uint64_t))(v154 + 8))(v159, v160);
        sub_20A579C24(v185, &qword_26AC754A0, (void (*)(uint64_t))v198);
        double v165 = v199;
        sub_20A579C24(v196, &qword_26AC68FB0, v199);
        (*(void (**)(char *, uint64_t))(v188 + 8))(v163, v194);
        sub_20A494EC0(v164, (uint64_t)&v155[v152[7]], (uint64_t (*)(void))type metadata accessor for PriceViewModel);
        sub_20A579C24(v184, &qword_26AC68FB0, v165);
        swift_storeEnumTagMultiPayload();
        sub_20A5C5980(&qword_26AC6F3E0, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
        sub_20A8C8320();
        (*(void (**)(char *, uint64_t))(v202 + 8))(v190, v203);
        uint64_t v137 = &v202;
        return sub_20A5C63E0(*(v137 - 32), (uint64_t (*)(void))type metadata accessor for StockViewModel);
      }
      sub_20A579C24((uint64_t)v34, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v108, v105);
    }
    sub_20A5C63E0(v101, (uint64_t (*)(void))sub_20A5C6360);
    goto LABEL_35;
  }
  double v190 = v39;
  sub_20A5159EC();
  uint64_t v56 = v55;
  uint64_t v57 = &v53[*(int *)(v55 + 48)];
  sub_20A494EC0((uint64_t)v53, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  uint64_t v58 = v193;
  (*(void (**)(uint64_t (*)(uint64_t), char *, void (*)(uint64_t)))(v193 + 32))(v198, v57, v199);
  uint64_t v59 = v45;
  uint64_t v60 = sub_20A8C3EC0();
  uint64_t v62 = v197;
  if (*((void *)v197 + 2) && (unint64_t v63 = sub_20A4D1B24(v60, v61), (v64 & 1) != 0))
  {
    uint64_t v65 = *((void *)v62 + 7);
    uint64_t v66 = (void *)v202;
    uint64_t v67 = v203;
    (*(void (**)(char *, unint64_t, uint64_t))(v202 + 16))(v23, v65 + *(void *)(v202 + 72) * v63, v203);
    uint64_t v68 = (void (*)(uint64_t))v66[7];
    uint64_t v69 = v23;
    uint64_t v70 = 0;
  }
  else
  {
    uint64_t v66 = (void *)v202;
    uint64_t v68 = *(void (**)(uint64_t))(v202 + 56);
    uint64_t v69 = v23;
    uint64_t v70 = 1;
    uint64_t v67 = v203;
  }
  CGFloat v197 = v68;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v68)(v69, v70, 1, v67);
  swift_bridgeObjectRelease();
  uint64_t v82 = (uint64_t (*)(char *, uint64_t, uint64_t))v66[6];
  int v83 = v82(v23, 1, v67);
  uint64_t v84 = (uint64_t)v59;
  uint64_t v85 = v183;
  if (v83 == 1)
  {
    (*(void (**)(uint64_t (*)(uint64_t), void (*)(uint64_t)))(v58 + 8))(v198, v199);
    sub_20A5C63E0(v84, (uint64_t (*)(void))type metadata accessor for StockViewModel);
    sub_20A579C24((uint64_t)v23, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    return (*(uint64_t (**)(uint64_t, char *))(*((void *)v191 - 1) + 16))(v200, v192);
  }
  uint64_t v174 = v56;
  uint64_t v86 = v84;
  uint64_t v87 = v190;
  double v167 = (void (*)(char *, char *, uint64_t))v66[4];
  double v166 = v66 + 4;
  v167(v190, v23, v67);
  double v168 = (void (*)(uint64_t, char *, uint64_t))v66[2];
  v168((uint64_t)v85, v87, v67);
  uint64_t v170 = v66 + 2;
  CGFloat v171 = v66 + 7;
  ((void (*)(void (*)(char *, char *, uint64_t), void, uint64_t, uint64_t))v197)(v85, 0, 1, v67);
  uint64_t v88 = *(int *)(v195 + 20);
  uint64_t v89 = (uint64_t)v85;
  uint64_t v169 = v86;
  uint64_t v90 = v86 + v88;
  uint64_t v91 = v175;
  uint64_t v92 = v175 + *(int *)(v182 + 48);
  uint64_t v93 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
  sub_20A579BB8(v89, v175, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  uint64_t v182 = v92;
  sub_20A579BB8(v90, v92, &qword_26AC68FB0, v93);
  if (v82((char *)v91, 1, v67) == 1)
  {
    sub_20A579C24(v89, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    int v94 = v82((char *)v182, 1, v67);
    uint64_t v95 = v169;
    if (v94 == 1)
    {
      sub_20A579C24(v91, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      uint64_t v96 = *(void (**)(char *, uint64_t))(v202 + 8);
LABEL_29:
      uint64_t v113 = v199;
      uint64_t v114 = v193;
      v96(v190, v67);
      (*(void (**)(uint64_t (*)(uint64_t), void (*)(uint64_t)))(v114 + 8))(v198, v113);
      sub_20A5C63E0(v95, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      return (*(uint64_t (**)(uint64_t, char *))(*((void *)v191 - 1) + 16))(v200, v192);
    }
  }
  else
  {
    uint64_t v106 = v172;
    sub_20A579BB8(v91, v172, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    uint64_t v107 = v182;
    if (v82((char *)v182, 1, v67) != 1)
    {
      uint64_t v109 = v91;
      uint64_t v110 = v173;
      v167(v173, (char *)v107, v67);
      sub_20A5C5980((unint64_t *)&unk_26AC68FA0, MEMORY[0x263F7AEF0]);
      char v111 = sub_20A8CE210();
      uint64_t v96 = *(void (**)(char *, uint64_t))(v202 + 8);
      v96(v110, v67);
      uint64_t v112 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
      sub_20A579C24((uint64_t)v183, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      v96((char *)v106, v67);
      sub_20A579C24(v109, &qword_26AC68FB0, v112);
      uint64_t v95 = v169;
      if (v111) {
        goto LABEL_29;
      }
      goto LABEL_30;
    }
    sub_20A579C24((uint64_t)v183, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v106, v67);
    uint64_t v95 = v169;
  }
  sub_20A5C63E0(v91, (uint64_t (*)(void))sub_20A5C6360);
LABEL_30:
  uint64_t v115 = v177;
  CGFloat v192 = &v177[*(int *)(v174 + 48)];
  uint64_t v116 = v184;
  v168(v184, v190, v67);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v197)(v116, 0, 1, v67);
  double v191 = *(uint64_t (**)(uint64_t))(v188 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v191)(v186, v95, v194);
  CGFloat v197 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
  sub_20A579BB8(v116, v196, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  uint64_t v117 = type metadata accessor for StockSparklineViewModel(0);
  uint64_t v118 = v185;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v185, 1, 1, v117);
  uint64_t v119 = (int *)v195;
  uint64_t v120 = v95 + *(int *)(v195 + 32);
  uint64_t v121 = v95;
  uint64_t v122 = v179;
  uint64_t v123 = v121;
  uint64_t v182 = *(void *)(v179 + 16);
  uint64_t v124 = v189;
  ((void (*)(char *, uint64_t, uint64_t))v182)(v187, v120, v189);
  LODWORD(v183) = *(unsigned __int8 *)(v123 + v119[9]);
  double v125 = v186;
  ((void (*)(char *, char *, uint64_t))v191)(v115, v186, v194);
  uint64_t v126 = v196;
  double v127 = v197;
  sub_20A579BB8(v196, (uint64_t)&v115[v119[5]], &qword_26AC68FB0, v197);
  uint64_t v128 = (uint64_t)&v115[v119[6]];
  double v191 = type metadata accessor for StockSparklineViewModel;
  sub_20A579BB8(v118, v128, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  double v129 = v187;
  ((void (*)(char *, char *, uint64_t))v182)(&v115[v119[8]], v187, v124);
  v115[v119[9]] = (char)v183;
  uint64_t v130 = v176;
  sub_20A579BB8(v126, v176, &qword_26AC68FB0, v127);
  double v131 = v180;
  sub_20A8C3E70();
  uint64_t v132 = v181;
  sub_20A5EC850(v130, v131, 9666786, 0xA300000000000000, v181);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v129, v189);
  sub_20A579C24(v185, &qword_26AC754A0, (void (*)(uint64_t))v191);
  CGFloat v133 = v197;
  sub_20A579C24(v196, &qword_26AC68FB0, v197);
  (*(void (**)(char *, uint64_t))(v188 + 8))(v125, v194);
  sub_20A494EC0(v132, (uint64_t)&v115[v119[7]], (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  sub_20A579C24(v184, &qword_26AC68FB0, v133);
  uint64_t v134 = v193;
  CGFloat v136 = v198;
  CGFloat v135 = v199;
  (*(void (**)(char *, uint64_t (*)(uint64_t), void (*)(uint64_t)))(v193 + 16))(v192, v198, v199);
  swift_storeEnumTagMultiPayload();
  sub_20A5C5980(&qword_26AC6F3E0, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
  sub_20A8C8320();
  (*(void (**)(char *, uint64_t))(v202 + 8))(v190, v203);
  (*(void (**)(uint64_t (*)(uint64_t), void (*)(uint64_t)))(v134 + 8))(v136, v135);
  uint64_t v137 = &v201;
  return sub_20A5C63E0(*(v137 - 32), (uint64_t (*)(void))type metadata accessor for StockViewModel);
}

uint64_t sub_20A5C54F0(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v26 = a3;
  uint64_t v27 = a2;
  sub_20A5C5A0C(0, (unint64_t *)&qword_26AC82498, MEMORY[0x263F7D950]);
  uint64_t v25 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v24 - v7;
  sub_20A4A20C4();
  MEMORY[0x270FA5388](v9 - 8);
  sub_20A5C5A0C(0, (unint64_t *)&qword_26AC6AD38, MEMORY[0x263F7E0A8]);
  uint64_t v24 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v15 = *v3;
  uint64_t v14 = v3[1];
  uint64_t v16 = (void (*)(uint64_t))v3[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_20A5C5E28(a1, v15, v14, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
  sub_20A5C5A0C(0, (unint64_t *)&qword_26AC82470, MEMORY[0x263F7D450]);
  uint64_t v20 = v19;
  uint64_t v21 = sub_20A5C59C8((unint64_t *)&unk_26AC82460, (unint64_t *)&qword_26AC82470, v18);
  uint64_t v22 = sub_20A5C59C8(&qword_26AC82458, (unint64_t *)&qword_26AC82470, v18);
  MEMORY[0x21051E250](v17, v20, v21, v22);
  type metadata accessor for StockSearchSectionDescriptor();
  type metadata accessor for StockSearchModel();
  sub_20A5C5980(&qword_26AC78AC0, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
  sub_20A5C5980(&qword_26AC6F3E0, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
  sub_20A8CBB20();
  sub_20A8C9B40();
  v27(v8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v24);
}

unint64_t sub_20A5C589C()
{
  unint64_t result = qword_26AC82F40;
  if (!qword_26AC82F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC82F40);
  }
  return result;
}

uint64_t sub_20A5C58F0()
{
  return sub_20A5C5980(&qword_26AC78AC0, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
}

uint64_t sub_20A5C5938()
{
  return sub_20A5C5980(&qword_26AC6F3E0, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
}

uint64_t sub_20A5C5980(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A5C59C8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A5C5A0C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A5C5A0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for StockSearchSectionDescriptor();
    v8[1] = type metadata accessor for StockSearchModel();
    v8[2] = sub_20A5C5980(&qword_26AC78AC0, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
    v8[3] = sub_20A5C5980(&qword_26AC6F3E0, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A5C5B00(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5 = v4;
  uint64_t v32 = a3;
  uint64_t v33 = a4;
  uint64_t v31 = a2;
  sub_20A44DB30(0);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v26 - v13;
  uint64_t v15 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
  sub_20A5C5A0C(0, (unint64_t *)&qword_26AC82470, MEMORY[0x263F7D450]);
  uint64_t v17 = v16;
  uint64_t v34 = sub_20A5C59C8(&qword_26763ACA0, (unint64_t *)&qword_26AC82470, v15);
  uint64_t v35 = v17;
  uint64_t v18 = sub_20A8CE880();
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (!v18) {
    return v19;
  }
  uint64_t v20 = v18;
  uint64_t v37 = MEMORY[0x263F8EE78];
  sub_20A68C724(0, v18 & ~(v18 >> 63), 0);
  uint64_t result = sub_20A8CE840();
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v29 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v30 = (void (**)(char *))(v9 + 16);
    v26[1] = v9 + 32;
    uint64_t v27 = v14;
    uint64_t v28 = a1;
    while (1)
    {
      uint64_t v22 = (void (*)(char *, void))sub_20A8CE8C0();
      (*v30)(v11);
      v22(v36, 0);
      sub_20A5C3CFC(v11, v33, (uint64_t)v14);
      if (v5) {
        break;
      }
      uint64_t v5 = 0;
      (*v29)(v11, v8);
      uint64_t v19 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C724(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v37;
      }
      unint64_t v24 = *(void *)(v19 + 16);
      unint64_t v23 = *(void *)(v19 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_20A68C724(v23 > 1, v24 + 1, 1);
        uint64_t v19 = v37;
      }
      *(void *)(v19 + 16) = v24 + 1;
      unint64_t v25 = v19
          + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
          + *(void *)(v9 + 72) * v24;
      uint64_t v14 = v27;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v25, v27, v8);
      uint64_t v37 = v19;
      sub_20A8CE8B0();
      if (!--v20) {
        return v19;
      }
    }
    (*v29)(v11, v8);
    swift_release();
    return v19;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A5C5E28(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5 = v4;
  uint64_t v41 = a3;
  uint64_t v42 = a4;
  uint64_t v40 = a2;
  sub_20A4A22E4();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v39 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for StockSearchSectionDescriptor();
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5C5A0C(0, (unint64_t *)&qword_26AC82470, MEMORY[0x263F7D450]);
  uint64_t v11 = v10;
  uint64_t v43 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v45 = (char *)v32 - v15;
  uint64_t v16 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
  sub_20A5C5A0C(0, (unint64_t *)&qword_26AC6AD38, MEMORY[0x263F7E0A8]);
  uint64_t v17 = sub_20A5C59C8((unint64_t *)&unk_26AC824A0, (unint64_t *)&qword_26AC6AD38, v16);
  uint64_t v18 = sub_20A8CE880();
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (!v18) {
    return v19;
  }
  uint64_t v20 = v18;
  uint64_t v47 = MEMORY[0x263F8EE78];
  sub_20A68C9FC(0, v18 & ~(v18 >> 63), 0);
  uint64_t result = sub_20A8CE840();
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v33 = (void (**)(char *, uint64_t))(v43 + 8);
    uint64_t v34 = (void (**)(char *))(v43 + 16);
    v32[1] = v43 + 32;
    uint64_t v35 = v17;
    uint64_t v36 = a1;
    do
    {
      uint64_t v22 = (void (*)(char *, void))sub_20A8CE8C0();
      (*v34)(v13);
      v22(v46, 0);
      sub_20A8C8820();
      uint64_t v23 = v41;
      swift_bridgeObjectRetain();
      unint64_t v24 = v42;
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_20A5C5B00((uint64_t)v13, v40, v23, v24);
      uint64_t v44 = v5;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_20A44DB30(0);
      uint64_t v27 = v26;
      uint64_t v28 = sub_20A5C5980(&qword_26AC82E00, sub_20A44DB30);
      uint64_t v29 = sub_20A5C5980(&qword_26AC82F30, sub_20A44DB30);
      MEMORY[0x21051E250](v25, v27, v28, v29);
      type metadata accessor for StockSearchModel();
      sub_20A5C5980(&qword_26AC78AC0, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
      sub_20A5C5980(&qword_26AC6F3E0, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
      sub_20A8C8810();
      (*v33)(v13, v11);
      uint64_t v19 = v47;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C9FC(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v47;
      }
      unint64_t v31 = *(void *)(v19 + 16);
      unint64_t v30 = *(void *)(v19 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_20A68C9FC(v30 > 1, v31 + 1, 1);
        uint64_t v19 = v47;
      }
      *(void *)(v19 + 16) = v31 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))(v19+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v31, v45, v11);
      uint64_t v47 = v19;
      sub_20A8CE8B0();
      --v20;
      uint64_t v5 = v44;
    }
    while (v20);
    return v19;
  }
  __break(1u);
  return result;
}

void sub_20A5C6360()
{
  if (!qword_26AC67658)
  {
    sub_20A579B64(255, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC67658);
    }
  }
}

uint64_t sub_20A5C63E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

__n128 __swift_memcpy113_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for EmptyListViewLayoutAttributes(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 113)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 112);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EmptyListViewLayoutAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 112) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 113) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 113) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 112) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmptyListViewLayoutAttributes()
{
  return &type metadata for EmptyListViewLayoutAttributes;
}

uint64_t sub_20A5C6534()
{
  sub_20A5C65C8();

  return sub_20A8CACE0();
}

unint64_t sub_20A5C6574()
{
  unint64_t result = qword_26763C518;
  if (!qword_26763C518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C518);
  }
  return result;
}

unint64_t sub_20A5C65C8()
{
  unint64_t result = qword_26763C520;
  if (!qword_26763C520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C520);
  }
  return result;
}

uint64_t sub_20A5C661C(uint64_t a1, uint64_t a2)
{
  sub_20A556CDC(0);
  MEMORY[0x270FA5388](v5 - 8);
  long long v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v21[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_20A8C3F00();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v14, a1, v15);
  *(void *)&v14[*(int *)(v12 + 28)] = a2;
  sub_20A5C6CB4();
  uint64_t v17 = *(int *)(v16 + 48);
  sub_20A5C6D20((uint64_t)v14, (uint64_t)v10);
  *(void *)&v10[v17] = 0;
  type metadata accessor for StocksActivity.StockFeed(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = *(void *)(v2 + 72);
  uint64_t v19 = sub_20A8C6D60();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v7, 1, 1, v19);
  uint64_t v25 = 0;
  memset(v24, 0, sizeof(v24));
  uint64_t v23 = 0;
  memset(v22, 0, sizeof(v22));
  swift_bridgeObjectRetain();
  swift_retain();
  sub_20A5BFAAC((uint64_t)v10, v18, (uint64_t)v7, (uint64_t)v24, 0, 0, (uint64_t)v22);
  swift_release();
  sub_20A49127C((uint64_t)v22, &qword_26AC69600, (unint64_t *)&unk_26AC695F0);
  sub_20A49127C((uint64_t)v24, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
  sub_20A5C6DCC((uint64_t)v7, (uint64_t (*)(void))sub_20A556CDC);
  sub_20A5C6DCC((uint64_t)v10, type metadata accessor for StocksActivity);
  swift_release();
  return sub_20A5C6DCC((uint64_t)v14, type metadata accessor for StocksActivity.StockFeed.Series);
}

uint64_t sub_20A5C6904(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v5);
  long long v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_20A8C3F00();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, a1, v12);
  *(void *)&v11[*(int *)(v9 + 28)] = a2;
  uint64_t v13 = *(void *)(v2 + 64);
  sub_20A5C6CB4();
  uint64_t v15 = *(int *)(v14 + 48);
  sub_20A5C6D20((uint64_t)v11, (uint64_t)v7);
  *(void *)&v7[v15] = 0;
  type metadata accessor for StocksActivity.StockFeed(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = *(void *)(v2 + 72);
  uint64_t v24 = 0;
  memset(v23, 0, sizeof(v23));
  v22[4] = v13;
  v22[3] = sub_20A8C4990();
  v22[0] = v16;
  sub_20A4B2A1C((uint64_t)v23, (uint64_t)v21);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  sub_20A4B2AE0((uint64_t)v21, v17 + 24);
  sub_20A491334();
  sub_20A4B2B68((unint64_t *)&qword_26AC69E50, (void (*)(uint64_t))sub_20A491334);
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v18 = sub_20A8CBC70();
  swift_release();
  sub_20A5C6DCC((uint64_t)v22, (uint64_t (*)(void))sub_20A42F348);
  sub_20A49127C((uint64_t)v23, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
  sub_20A5C6DCC((uint64_t)v7, type metadata accessor for StocksActivity);
  swift_release();
  sub_20A5C6DCC((uint64_t)v11, type metadata accessor for StocksActivity.StockFeed.Series);
  return v18;
}

uint64_t sub_20A5C6BF8()
{
  swift_unknownObjectWeakDestroy();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockSearchRouter()
{
  return self;
}

uint64_t sub_20A5C6C6C(uint64_t a1, uint64_t a2)
{
  return sub_20A5C661C(a1, a2);
}

uint64_t sub_20A5C6C90(uint64_t a1, uint64_t a2)
{
  return sub_20A5C6904(a1, a2);
}

void sub_20A5C6CB4()
{
  if (!qword_26AC677E0)
  {
    type metadata accessor for StocksActivity.StockFeed.Series(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC677E0);
    }
  }
}

uint64_t sub_20A5C6D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A5C6D84()
{
  swift_release();
  if (*(void *)(v0 + 48)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  }

  return swift_deallocObject();
}

uint64_t sub_20A5C6DCC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A5C6F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  uint64_t v5 = sub_20A8C2530();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C24E0();
  LOBYTE(a4) = a4(v8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return a4 & 1;
}

uint64_t type metadata accessor for LinkActionURLQualifier()
{
  return self;
}

uint64_t sub_20A5C70B4(uint64_t a1)
{
  uint64_t v2 = sub_20A8C2530();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C2510();
  if (!v7) {
    goto LABEL_11;
  }
  uint64_t v8 = v7;
  if (v6 == sub_20A8C24A0() && v8 == v9) {
    int v10 = 1;
  }
  else {
    int v10 = sub_20A8CF760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_20A8C2500();
  uint64_t v13 = v12;
  uint64_t v14 = sub_20A8C2490();
  if (!v13)
  {
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_13;
    }
LABEL_11:
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
LABEL_15:
    uint64_t v19 = (void *)sub_20A8C24D0();
    unsigned int v20 = objc_msgSend(v19, sel_fc_isNewsArticleURL);

    uint64_t v18 = v20 ^ 1;
    goto LABEL_16;
  }
  if (v11 == v14 && v13 == v15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  int v16 = sub_20A8CF760();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (((v10 | v16) & 1) == 0) {
    goto LABEL_11;
  }
LABEL_13:
  char v17 = sub_20A8C24B0();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if ((v17 & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v18 = 0;
LABEL_16:
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v18;
}

id sub_20A5C72D8(uint64_t a1)
{
  uint64_t v2 = sub_20A8C2530();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C2510();
  if (!v7) {
    goto LABEL_11;
  }
  uint64_t v8 = v7;
  if (v6 == sub_20A8C24A0() && v8 == v9) {
    int v10 = 1;
  }
  else {
    int v10 = sub_20A8CF760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_20A8C2500();
  uint64_t v13 = v12;
  uint64_t v14 = sub_20A8C2490();
  if (!v13)
  {
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_13;
    }
LABEL_11:
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    goto LABEL_15;
  }
  if (v11 == v14 && v13 == v15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  int v16 = sub_20A8CF760();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (((v10 | v16) & 1) == 0) {
    goto LABEL_11;
  }
LABEL_13:
  char v17 = sub_20A8C24B0();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    goto LABEL_16;
  }
LABEL_15:
  uint64_t v18 = (void *)sub_20A8C24D0();
  unsigned int v19 = objc_msgSend(v18, sel_fc_isNewsArticleURL);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (!v19) {
    return 0;
  }
LABEL_16:
  id v20 = objc_msgSend(self, sel_sharedApplication);
  id v21 = objc_msgSend(v20, sel_supportsMultipleScenes);

  return v21;
}

uint64_t sub_20A5C7550(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v1 + 10, v1[13]);
  uint64_t result = sub_20A8C3850();
  if ((result & 1) == 0)
  {
    uint64_t v7 = (void *)v1[7];
    if (objc_msgSend(v7, sel_isCollapsed))
    {
LABEL_8:
      sub_20A5C77EC(a1);
      uint64_t v11 = sub_20A8C3F00();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 2, v11);
      sub_20A5C8554((unint64_t *)&qword_26AC75290, (void (*)(uint64_t))type metadata accessor for StockListSelectionModel);
      sub_20A8C5D80();
      return sub_20A5C839C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
    }
    __swift_project_boxed_opaque_existential_1(v1 + 2, v1[5]);
    sub_20A43F7E0(0, (unint64_t *)&unk_26AC71920);
    uint64_t result = sub_20A8C5BB0();
    if (v13)
    {
      sub_20A42BEBC(&v12, (uint64_t)v14);
      __swift_project_boxed_opaque_existential_1(v14, v14[3]);
      sub_20A7FB2D4(&v12);
      uint64_t v8 = (void *)v12;
      id v9 = objc_msgSend((id)v12, sel_parentViewController);

      if (!v9)
      {
LABEL_7:
        objc_msgSend(v7, sel_showViewController_sender_, v8, 0);

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
        goto LABEL_8;
      }
      objc_msgSend(v8, sel_willMoveToParentViewController_, 0);
      uint64_t result = (uint64_t)objc_msgSend(v8, sel_view);
      if (result)
      {
        int v10 = (void *)result;
        objc_msgSend((id)result, sel_removeFromSuperview);

        objc_msgSend(v8, sel_removeFromParentViewController);
        objc_msgSend(v8, sel_didMoveToParentViewController_, 0);
        goto LABEL_7;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

void sub_20A5C77EC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_20A8CA180();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = *(void *)(v1 + 64);
  uint64_t v8 = sub_20A8C9CD0();
  if (v8)
  {
    id v9 = (void *)v8;
    sub_20A5C83FC();
    if (swift_dynamicCastClass()
      || (sub_20A5C845C(), swift_dynamicCastClass())
      || (type metadata accessor for ForYouFeedViewController(), sub_20A8CEB80(), v14, v14))
    {
      uint64_t v10 = qword_26AC798D8;
      *(unsigned char *)(v7 + qword_26AC798D8) = 1;
      sub_20A8C9CB0();

      *(unsigned char *)(v7 + v10) = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
      unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = v2;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
      swift_retain();
      sub_20A8C9CA0();
      swift_release();
    }
  }
}

uint64_t sub_20A5C79EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C3F00();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  int v16 = (char *)&v22 - v15;
  sub_20A5C7C8C(a1, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_20A5C7CF0((uint64_t)v9, (uint64_t)v6);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v6, v10);
    uint64_t v17 = *(void *)&v6[*(int *)(v4 + 20)];
  }
  else
  {
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v18(v13, v9, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v13, v10);
    sub_20A5C7F24();
    unint64_t v19 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_20A8D3DC0;
    v18((char *)(v17 + v19), v13, v10);
  }
  uint64_t v20 = sub_20A5C7D54((uint64_t)v16, v17, a2);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  return v20;
}

uint64_t sub_20A5C7C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StocksActivity.StockFeed(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A5C7CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A5C7D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  sub_20A42F250();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v5);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
  sub_20A43F7E0(0, &qword_26AC76788);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  sub_20A8C5B90();
  uint64_t result = swift_release();
  if (v16)
  {
    sub_20A42BEBC(&v15, (uint64_t)v17);
    __swift_project_boxed_opaque_existential_1(v17, v17[3]);
    sub_20A4422A8(v13, v14, (uint64_t *)&v15);
    uint64_t v12 = v15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_20A5C7F24()
{
  if (!qword_26AC7FEA0)
  {
    sub_20A8C3F00();
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FEA0);
    }
  }
}

uint64_t sub_20A5C7F7C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A42F250();
  sub_20A8CB4C0();
  if (v5)
  {
    sub_20A8C4990();
    swift_dynamicCast();
  }
  else
  {
    sub_20A5C839C((uint64_t)v4, (uint64_t (*)(void))sub_20A42F348);
  }
  sub_20A8C4990();
  sub_20A8C5A00();
  swift_release();
  uint64_t v2 = (void (*)(void *))sub_20A8CB4A0();
  v2(a1);
  return swift_release();
}

uint64_t sub_20A5C809C()
{
  sub_20A42F250();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_20A5C812C(void *a1)
{
  sub_20A42F250();

  return sub_20A5C7F7C(a1);
}

void sub_20A5C819C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_20A8CA180();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v9 = sub_20A8C9CD0();
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    sub_20A5C83FC();
    if (swift_dynamicCastClass()
      || (sub_20A5C845C(), swift_dynamicCastClass())
      || (type metadata accessor for ForYouFeedViewController(), sub_20A8CEB80(), v15, v15))
    {
      uint64_t v11 = qword_26AC798D8;
      *(unsigned char *)(v8 + qword_26AC798D8) = 1;
      sub_20A8C9CB0();

      *(unsigned char *)(v8 + v11) = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v5);
      unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = a2;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13 + v12, (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
      swift_retain();
      sub_20A8C9CA0();
      swift_release();
    }
  }
}

uint64_t sub_20A5C839C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A5C83FC()
{
  if (!qword_26AC7B7A0)
  {
    type metadata accessor for ForYouFeedViewController();
    unint64_t v0 = type metadata accessor for ForYouFeedContainerViewController();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7B7A0);
    }
  }
}

void sub_20A5C845C()
{
  if (!qword_26AC7B778)
  {
    sub_20A5C84C0();
    sub_20A5C859C();
    unint64_t v0 = type metadata accessor for ForYouFeedContainerViewController();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7B778);
    }
  }
}

void sub_20A5C84C0()
{
  if (!qword_26AC6A370)
  {
    type metadata accessor for ForYouFeedViewController();
    sub_20A5C8554(&qword_26AC75A80, (void (*)(uint64_t))type metadata accessor for ForYouFeedViewController);
    unint64_t v0 = sub_20A8C9A40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A370);
    }
  }
}

uint64_t sub_20A5C8554(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A5C859C()
{
  unint64_t result = qword_26AC6A360;
  if (!qword_26AC6A360)
  {
    sub_20A5C84C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6A360);
  }
  return result;
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v1 = sub_20A8CA180();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_20A5C86DC(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_20A8CA180() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_20A5C819C(a1, v4, v5);
}

uint64_t sub_20A5C8750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v28 = sub_20A8C78E0();
  uint64_t v8 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5C8AB8();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_20A8C7CF0();
  uint64_t v15 = *(void *)(v14 - 8);
  double v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_getObjectType();
    v26[1] = a2;
    uint64_t v27 = v14;
    uint64_t v19 = v28;
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F59FA0], v28);
    uint64_t v20 = v27;
    sub_20A8C7A10();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v20) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v20);
      char v21 = sub_20A8C7CC0();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v20);
      if (v21)
      {
LABEL_9:
        uint64_t v22 = (unsigned int *)MEMORY[0x263F79B78];
        goto LABEL_13;
      }
      goto LABEL_4;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v15 + 56))(v13, 1, 1, v14, v16);
  }
  sub_20A5C8B10((uint64_t)v13);
  if (a3 > 4)
  {
LABEL_8:
    uint64_t v22 = (unsigned int *)MEMORY[0x263F79B90];
    goto LABEL_13;
  }
LABEL_4:
  switch(a3)
  {
    case 0uLL:
      uint64_t v22 = (unsigned int *)MEMORY[0x263F79B98];
      break;
    case 1uLL:
      uint64_t v22 = (unsigned int *)MEMORY[0x263F79B80];
      break;
    case 2uLL:
      uint64_t v22 = (unsigned int *)MEMORY[0x263F79B88];
      break;
    case 3uLL:
      goto LABEL_9;
    case 4uLL:
      uint64_t v22 = (unsigned int *)MEMORY[0x263F79BA0];
      break;
    default:
      goto LABEL_8;
  }
LABEL_13:
  uint64_t v23 = *v22;
  uint64_t v24 = sub_20A8C6A40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(a4, v23, v24);
}

void sub_20A5C8AB8()
{
  if (!qword_26AC69C70)
  {
    sub_20A8C7CF0();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69C70);
    }
  }
}

uint64_t sub_20A5C8B10(uint64_t a1)
{
  sub_20A5C8AB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_20A5C8B70()
{
  unint64_t result = qword_26763C528;
  if (!qword_26763C528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C528);
  }
  return result;
}

unint64_t sub_20A5C8BC8()
{
  unint64_t result = qword_26763C530;
  if (!qword_26763C530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C530);
  }
  return result;
}

uint64_t sub_20A5C8C1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20A5C8C38()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_20A5C8C88()
{
  unint64_t result = qword_26763C538;
  if (!qword_26763C538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C538);
  }
  return result;
}

uint64_t sub_20A5C8CDC()
{
  return MEMORY[0x270EEF868](0xD000000000000019, 0x800000020A903EE0);
}

uint64_t sub_20A5C8CF8()
{
  uint64_t v0 = sub_20A8C2420();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C2990();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_20A8CE230();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = sub_20A8C2430();
  __swift_allocate_value_buffer(v6, qword_267652E08);
  __swift_project_value_buffer(v6, (uint64_t)qword_267652E08);
  sub_20A8CE220();
  sub_20A8C2940();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F06D18], v0);
  return sub_20A8C2440();
}

uint64_t sub_20A5C8ED8()
{
  sub_20A8CB5F0();
  sub_20A8C1F00();
  swift_getObjectType();
  char v0 = sub_20A8C8D10();
  swift_unknownObjectRelease();
  if (v0)
  {
    sub_20A8C1F00();
    swift_getObjectType();
    sub_20A8C8D50();
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_20A5C9538();
    swift_allocError();
    swift_willThrow();
    return swift_release();
  }
}

uint64_t sub_20A5C8FD0@<X0>(uint64_t a1@<X8>)
{
  if (qword_267639AC8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20A8C2430();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_267652E08);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_20A5C9084(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_20A5C90A8, 0, 0);
}

uint64_t sub_20A5C90A8()
{
  sub_20A8CE700();
  *(void *)(v0 + 32) = sub_20A8CE6F0();
  uint64_t v2 = sub_20A8CE6E0();
  return MEMORY[0x270FA2498](sub_20A5C913C, v2, v1);
}

uint64_t sub_20A5C913C()
{
  swift_release();
  sub_20A5C8ED8();
  return MEMORY[0x270FA2498](sub_20A5C91F4, 0, 0);
}

uint64_t sub_20A5C91F4()
{
  sub_20A8C1FF0();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_20A5C9258@<X0>(uint64_t *a1@<X8>)
{
  sub_20A5C948C();
  sub_20A8C1F70();
  sub_20A8C1F60();
  uint64_t result = sub_20A8C1F10();
  *a1 = result;
  return result;
}

uint64_t sub_20A5C92C4(uint64_t a1)
{
  unint64_t v2 = sub_20A5C8C88();

  return MEMORY[0x270EE0D28](a1, v2);
}

ValueMetadata *type metadata accessor for DecreaseTextSizeIntent()
{
  return &type metadata for DecreaseTextSizeIntent;
}

unint64_t sub_20A5C9314()
{
  unint64_t result = qword_26763C548;
  if (!qword_26763C548)
  {
    sub_20A5C936C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C548);
  }
  return result;
}

void sub_20A5C936C()
{
  if (!qword_26763C550)
  {
    sub_20A5C93E4();
    sub_20A5C9438();
    unint64_t v0 = sub_20A8C2000();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763C550);
    }
  }
}

unint64_t sub_20A5C93E4()
{
  unint64_t result = qword_26763C558;
  if (!qword_26763C558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C558);
  }
  return result;
}

unint64_t sub_20A5C9438()
{
  unint64_t result = qword_26763C560;
  if (!qword_26763C560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C560);
  }
  return result;
}

void sub_20A5C948C()
{
  if (!qword_26763C568)
  {
    sub_20A5C94E4();
    unint64_t v0 = sub_20A8C1F20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763C568);
    }
  }
}

unint64_t sub_20A5C94E4()
{
  unint64_t result = qword_26AC6A080;
  if (!qword_26AC6A080)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC6A080);
  }
  return result;
}

unint64_t sub_20A5C9538()
{
  unint64_t result = qword_26763C570;
  if (!qword_26763C570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C570);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DecreaseTextSizeIntent.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A5C9628);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DecreaseTextSizeIntent.Error()
{
  return &type metadata for DecreaseTextSizeIntent.Error;
}

unint64_t sub_20A5C9664()
{
  unint64_t result = qword_26763C578;
  if (!qword_26763C578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C578);
  }
  return result;
}

void *sub_20A5C96B8(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      uint64_t v18 = a2[2];
      uint64_t v19 = a2[3];
      a1[2] = v18;
      a1[3] = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = (int *)type metadata accessor for StockViewModel();
      uint64_t v10 = v9[5];
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_20A8C3E10();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_20A42C470(0);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      uint64_t v20 = v9[6];
      char v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = (int *)type metadata accessor for StockSparklineViewModel(0);
      uint64_t v24 = *((void *)v23 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
      {
        sub_20A5CF284(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
        memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        uint64_t v26 = sub_20A8CDCD0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v21, v22, v26);
        uint64_t v27 = v23[5];
        uint64_t v28 = &v21[v27];
        uint64_t v29 = &v22[v27];
        *(void *)uint64_t v28 = *(void *)v29;
        v28[8] = v29[8];
        uint64_t v30 = v23[6];
        unint64_t v31 = &v21[v30];
        uint64_t v32 = &v22[v30];
        *(void *)unint64_t v31 = *(void *)v32;
        v31[8] = v32[8];
        v21[v23[7]] = v22[v23[7]];
        uint64_t v33 = v23[8];
        uint64_t v34 = &v21[v33];
        uint64_t v35 = &v22[v33];
        uint64_t v36 = sub_20A8C3D00();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        (*(void (**)(char *, void, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
      }
      uint64_t v37 = v9[7];
      uint64_t v66 = v9;
      uint64_t v38 = (char *)a1 + v37;
      uint64_t v39 = (char *)a2 + v37;
      *(void *)uint64_t v38 = *(void *)((char *)a2 + v37);
      v38[8] = *((unsigned char *)a2 + v37 + 8);
      *((void *)v38 + 2) = *(void *)((char *)a2 + v37 + 16);
      v38[24] = *((unsigned char *)a2 + v37 + 24);
      *((void *)v38 + 4) = *(void *)((char *)a2 + v37 + 32);
      v38[40] = *((unsigned char *)a2 + v37 + 40);
      uint64_t v40 = *(void *)((char *)a2 + v37 + 56);
      *((void *)v38 + 6) = *(void *)((char *)a2 + v37 + 48);
      *((void *)v38 + 7) = v40;
      uint64_t v41 = *(void *)((char *)a2 + v37 + 72);
      *((void *)v38 + 8) = *(void *)((char *)a2 + v37 + 64);
      *((void *)v38 + 9) = v41;
      uint64_t v42 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v43 = v42[9];
      char v64 = &v39[v43];
      uint64_t v65 = &v38[v43];
      uint64_t v44 = sub_20A8C2EB0();
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45(v65, v64, v44);
      uint64_t v46 = v42[10];
      uint64_t v47 = &v38[v46];
      uint64_t v48 = &v39[v46];
      uint64_t v49 = sub_20A8C4030();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
      uint64_t v50 = v42[11];
      uint64_t v51 = &v38[v50];
      uint64_t v52 = &v39[v50];
      uint64_t v53 = sub_20A8C2990();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
      uint64_t v54 = v66[8];
      uint64_t v55 = (char *)a1 + v54;
      uint64_t v56 = (char *)a2 + v54;
      uint64_t v57 = sub_20A8C3410();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
      *((unsigned char *)a1 + v66[9]) = *((unsigned char *)a2 + v66[9]);
      uint64_t v58 = type metadata accessor for StockListStockModel(0);
      *((unsigned char *)a1 + *(int *)(v58 + 20)) = *((unsigned char *)a2 + *(int *)(v58 + 20));
      uint64_t v59 = *(int *)(v58 + 24);
      uint64_t v60 = (void *)((char *)a1 + v59);
      uint64_t v61 = (void *)((char *)a2 + v59);
      uint64_t v62 = v61[1];
      *uint64_t v60 = *v61;
      v60[1] = v62;
      swift_bridgeObjectRetain();
      goto LABEL_14;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t type metadata accessor for StockListStockModel(uint64_t a1)
{
  return sub_20A4D9778(a1, qword_26AC6B868);
}

uint64_t sub_20A5C9C94(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = sub_20A8C3F00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    unsigned int v4 = (int *)type metadata accessor for StockViewModel();
    uint64_t v5 = a1 + v4[5];
    uint64_t v6 = sub_20A8C3E10();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    uint64_t v8 = a1 + v4[6];
    uint64_t v9 = type metadata accessor for StockSparklineViewModel(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
    {
      uint64_t v10 = sub_20A8CDCD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
      uint64_t v11 = v8 + *(int *)(v9 + 32);
      uint64_t v12 = sub_20A8C3D00();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    }
    uint64_t v13 = a1 + v4[7];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = (int *)type metadata accessor for PriceViewModel();
    uint64_t v15 = v13 + v14[9];
    uint64_t v16 = sub_20A8C2EB0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    uint64_t v17 = v13 + v14[10];
    uint64_t v18 = sub_20A8C4030();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    uint64_t v19 = v13 + v14[11];
    uint64_t v20 = sub_20A8C2990();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
    uint64_t v21 = a1 + v4[8];
    uint64_t v22 = sub_20A8C3410();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
    type metadata accessor for StockListStockModel(0);
  }

  return swift_bridgeObjectRelease();
}

void *sub_20A5C9FC8(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v15 = a2[1];
    *a1 = *a2;
    a1[1] = v15;
    uint64_t v16 = a2[2];
    uint64_t v17 = a2[3];
    a1[2] = v16;
    a1[3] = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = sub_20A8C3F00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for StockViewModel();
    uint64_t v9 = v8[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_20A8C3E10();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      sub_20A42C470(0);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v18 = v8[6];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = (int *)type metadata accessor for StockSparklineViewModel(0);
    uint64_t v22 = *((void *)v21 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
    {
      sub_20A5CF284(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v24 = sub_20A8CDCD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v19, v20, v24);
      uint64_t v25 = v21[5];
      uint64_t v26 = &v19[v25];
      uint64_t v27 = &v20[v25];
      *(void *)uint64_t v26 = *(void *)v27;
      v26[8] = v27[8];
      uint64_t v28 = v21[6];
      uint64_t v29 = &v19[v28];
      uint64_t v30 = &v20[v28];
      *(void *)uint64_t v29 = *(void *)v30;
      v29[8] = v30[8];
      v19[v21[7]] = v20[v21[7]];
      uint64_t v31 = v21[8];
      uint64_t v32 = &v19[v31];
      uint64_t v33 = &v20[v31];
      uint64_t v34 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      (*(void (**)(char *, void, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
    }
    uint64_t v35 = v8[7];
    char v64 = v8;
    uint64_t v36 = (char *)a1 + v35;
    uint64_t v37 = (char *)a2 + v35;
    *(void *)uint64_t v36 = *(void *)((char *)a2 + v35);
    v36[8] = *((unsigned char *)a2 + v35 + 8);
    *((void *)v36 + 2) = *(void *)((char *)a2 + v35 + 16);
    v36[24] = *((unsigned char *)a2 + v35 + 24);
    *((void *)v36 + 4) = *(void *)((char *)a2 + v35 + 32);
    v36[40] = *((unsigned char *)a2 + v35 + 40);
    uint64_t v38 = *(void *)((char *)a2 + v35 + 56);
    *((void *)v36 + 6) = *(void *)((char *)a2 + v35 + 48);
    *((void *)v36 + 7) = v38;
    uint64_t v39 = *(void *)((char *)a2 + v35 + 72);
    *((void *)v36 + 8) = *(void *)((char *)a2 + v35 + 64);
    *((void *)v36 + 9) = v39;
    uint64_t v40 = (int *)type metadata accessor for PriceViewModel();
    uint64_t v41 = v40[9];
    uint64_t v62 = &v37[v41];
    unint64_t v63 = &v36[v41];
    uint64_t v42 = sub_20A8C2EB0();
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43(v63, v62, v42);
    uint64_t v44 = v40[10];
    uint64_t v45 = &v36[v44];
    uint64_t v46 = &v37[v44];
    uint64_t v47 = sub_20A8C4030();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    uint64_t v48 = v40[11];
    uint64_t v49 = &v36[v48];
    uint64_t v50 = &v37[v48];
    uint64_t v51 = sub_20A8C2990();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    uint64_t v52 = v64[8];
    uint64_t v53 = (char *)a1 + v52;
    uint64_t v54 = (char *)a2 + v52;
    uint64_t v55 = sub_20A8C3410();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
    *((unsigned char *)a1 + v64[9]) = *((unsigned char *)a2 + v64[9]);
    uint64_t v56 = type metadata accessor for StockListStockModel(0);
    *((unsigned char *)a1 + *(int *)(v56 + 20)) = *((unsigned char *)a2 + *(int *)(v56 + 20));
    uint64_t v57 = *(int *)(v56 + 24);
    uint64_t v58 = (void *)((char *)a1 + v57);
    uint64_t v59 = (void *)((char *)a2 + v57);
    uint64_t v60 = v59[1];
    *uint64_t v58 = *v59;
    v58[1] = v60;
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_20A5CA540(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_20A5CC9AC((uint64_t)a1, type metadata accessor for StockListModel);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = (int *)type metadata accessor for StockViewModel();
      uint64_t v9 = v8[5];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_20A8C3E10();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_20A42C470(0);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      uint64_t v15 = v8[6];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = (int *)type metadata accessor for StockSparklineViewModel(0);
      uint64_t v19 = *((void *)v18 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
      {
        sub_20A5CF284(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        uint64_t v21 = sub_20A8CDCD0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v16, v17, v21);
        uint64_t v22 = v18[5];
        uint64_t v23 = &v16[v22];
        uint64_t v24 = &v17[v22];
        uint64_t v25 = *(void *)v24;
        v23[8] = v24[8];
        *(void *)uint64_t v23 = v25;
        uint64_t v26 = v18[6];
        uint64_t v27 = &v16[v26];
        uint64_t v28 = &v17[v26];
        LOBYTE(v25) = v28[8];
        *(void *)uint64_t v27 = *(void *)v28;
        v27[8] = v25;
        v16[v18[7]] = v17[v18[7]];
        uint64_t v29 = v18[8];
        uint64_t v30 = &v16[v29];
        uint64_t v31 = &v17[v29];
        uint64_t v32 = sub_20A8C3D00();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
        (*(void (**)(char *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
      }
      uint64_t v33 = v8[7];
      uint64_t v62 = v8;
      uint64_t v34 = (char *)a1 + v33;
      uint64_t v35 = (char *)a2 + v33;
      uint64_t v36 = *(void *)((char *)a2 + v33);
      v34[8] = v35[8];
      *(void *)uint64_t v34 = v36;
      uint64_t v37 = *((void *)v35 + 2);
      v34[24] = v35[24];
      *((void *)v34 + 2) = v37;
      uint64_t v38 = *((void *)v35 + 4);
      v34[40] = v35[40];
      *((void *)v34 + 4) = v38;
      *((void *)v34 + 6) = *((void *)v35 + 6);
      *((void *)v34 + 7) = *((void *)v35 + 7);
      *((void *)v34 + 8) = *((void *)v35 + 8);
      *((void *)v34 + 9) = *((void *)v35 + 9);
      uint64_t v39 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v40 = v39[9];
      uint64_t v60 = &v35[v40];
      uint64_t v61 = &v34[v40];
      uint64_t v41 = sub_20A8C2EB0();
      uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v42(v61, v60, v41);
      uint64_t v43 = v39[10];
      uint64_t v44 = &v34[v43];
      uint64_t v45 = &v35[v43];
      uint64_t v46 = sub_20A8C4030();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
      uint64_t v47 = v39[11];
      uint64_t v48 = &v34[v47];
      uint64_t v49 = &v35[v47];
      uint64_t v50 = sub_20A8C2990();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
      uint64_t v51 = v62[8];
      uint64_t v52 = (char *)a1 + v51;
      uint64_t v53 = (char *)a2 + v51;
      uint64_t v54 = sub_20A8C3410();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
      *((unsigned char *)a1 + v62[9]) = *((unsigned char *)a2 + v62[9]);
      uint64_t v55 = type metadata accessor for StockListStockModel(0);
      *((unsigned char *)a1 + *(int *)(v55 + 20)) = *((unsigned char *)a2 + *(int *)(v55 + 20));
      uint64_t v56 = *(int *)(v55 + 24);
      uint64_t v57 = (void *)((char *)a1 + v56);
      uint64_t v58 = (void *)((char *)a2 + v56);
      *uint64_t v57 = *v58;
      v57[1] = v58[1];
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t type metadata accessor for StockListModel(uint64_t a1)
{
  return sub_20A4D9778(a1, qword_26AC6D978);
}

char *sub_20A5CAB24(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_20A8C3F00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = (int *)type metadata accessor for StockViewModel();
    uint64_t v8 = v7[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_20A8C3E10();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_20A42C470(0);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v14 = v7[6];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = (int *)type metadata accessor for StockSparklineViewModel(0);
    uint64_t v18 = *((void *)v17 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
    {
      sub_20A5CF284(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v20 = sub_20A8CDCD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v15, v16, v20);
      uint64_t v21 = v17[5];
      uint64_t v22 = &v15[v21];
      uint64_t v23 = &v16[v21];
      *(void *)uint64_t v22 = *(void *)v23;
      v22[8] = v23[8];
      uint64_t v24 = v17[6];
      uint64_t v25 = &v15[v24];
      uint64_t v26 = &v16[v24];
      *(void *)uint64_t v25 = *(void *)v26;
      v25[8] = v26[8];
      v15[v17[7]] = v16[v17[7]];
      uint64_t v27 = v17[8];
      uint64_t v28 = &v15[v27];
      uint64_t v29 = &v16[v27];
      uint64_t v30 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      (*(void (**)(char *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v31 = v7[7];
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    *(void *)uint64_t v32 = *(void *)&a2[v31];
    v32[8] = a2[v31 + 8];
    *((void *)v32 + 2) = *(void *)&a2[v31 + 16];
    v32[24] = a2[v31 + 24];
    *((void *)v32 + 4) = *(void *)&a2[v31 + 32];
    v32[40] = a2[v31 + 40];
    long long v34 = *(_OWORD *)&a2[v31 + 64];
    *((_OWORD *)v32 + 3) = *(_OWORD *)&a2[v31 + 48];
    *((_OWORD *)v32 + 4) = v34;
    uint64_t v35 = (int *)type metadata accessor for PriceViewModel();
    uint64_t v36 = v35[9];
    uint64_t v37 = &v32[v36];
    uint64_t v38 = &v33[v36];
    uint64_t v39 = sub_20A8C2EB0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
    uint64_t v40 = v35[10];
    uint64_t v41 = &v32[v40];
    uint64_t v42 = &v33[v40];
    uint64_t v43 = sub_20A8C4030();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
    uint64_t v44 = v35[11];
    uint64_t v45 = &v32[v44];
    uint64_t v46 = &v33[v44];
    uint64_t v47 = sub_20A8C2990();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
    uint64_t v48 = v7[8];
    uint64_t v49 = &a1[v48];
    uint64_t v50 = &a2[v48];
    uint64_t v51 = sub_20A8C3410();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
    a1[v7[9]] = a2[v7[9]];
    uint64_t v52 = type metadata accessor for StockListStockModel(0);
    a1[*(int *)(v52 + 20)] = a2[*(int *)(v52 + 20)];
    *(_OWORD *)&a1[*(int *)(v52 + 24)] = *(_OWORD *)&a2[*(int *)(v52 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_20A5CB02C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_20A5CC9AC((uint64_t)a1, type metadata accessor for StockListModel);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_20A8C3F00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for StockViewModel();
      uint64_t v8 = v7[5];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_20A8C3E10();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_20A42C470(0);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v14 = v7[6];
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = (int *)type metadata accessor for StockSparklineViewModel(0);
      uint64_t v18 = *((void *)v17 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
      {
        sub_20A5CF284(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        uint64_t v20 = sub_20A8CDCD0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v15, v16, v20);
        uint64_t v21 = v17[5];
        uint64_t v22 = &v15[v21];
        uint64_t v23 = &v16[v21];
        *(void *)uint64_t v22 = *(void *)v23;
        v22[8] = v23[8];
        uint64_t v24 = v17[6];
        uint64_t v25 = &v15[v24];
        uint64_t v26 = &v16[v24];
        *(void *)uint64_t v25 = *(void *)v26;
        v25[8] = v26[8];
        v15[v17[7]] = v16[v17[7]];
        uint64_t v27 = v17[8];
        uint64_t v28 = &v15[v27];
        uint64_t v29 = &v16[v27];
        uint64_t v30 = sub_20A8C3D00();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        (*(void (**)(char *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
      }
      uint64_t v31 = v7[7];
      uint64_t v32 = &a1[v31];
      uint64_t v33 = &a2[v31];
      *(void *)uint64_t v32 = *(void *)&a2[v31];
      v32[8] = a2[v31 + 8];
      *((void *)v32 + 2) = *(void *)&a2[v31 + 16];
      v32[24] = a2[v31 + 24];
      *((void *)v32 + 4) = *(void *)&a2[v31 + 32];
      v32[40] = a2[v31 + 40];
      long long v34 = *(_OWORD *)&a2[v31 + 64];
      *((_OWORD *)v32 + 3) = *(_OWORD *)&a2[v31 + 48];
      *((_OWORD *)v32 + 4) = v34;
      uint64_t v35 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v36 = v35[9];
      uint64_t v37 = &v32[v36];
      uint64_t v38 = &v33[v36];
      uint64_t v39 = sub_20A8C2EB0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
      uint64_t v40 = v35[10];
      uint64_t v41 = &v32[v40];
      uint64_t v42 = &v33[v40];
      uint64_t v43 = sub_20A8C4030();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
      uint64_t v44 = v35[11];
      uint64_t v45 = &v32[v44];
      uint64_t v46 = &v33[v44];
      uint64_t v47 = sub_20A8C2990();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
      uint64_t v48 = v7[8];
      uint64_t v49 = &a1[v48];
      uint64_t v50 = &a2[v48];
      uint64_t v51 = sub_20A8C3410();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
      a1[v7[9]] = a2[v7[9]];
      uint64_t v52 = type metadata accessor for StockListStockModel(0);
      a1[*(int *)(v52 + 20)] = a2[*(int *)(v52 + 20)];
      *(_OWORD *)&a1[*(int *)(v52 + 24)] = *(_OWORD *)&a2[*(int *)(v52 + 24)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_20A5CB558()
{
  uint64_t result = type metadata accessor for StockListStockModel(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_20A5CB5E8(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    uint64_t v15 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_20A8C3F00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = (int *)type metadata accessor for StockViewModel();
    uint64_t v8 = v7[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C3E10();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_20A42C470(0);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = v7[6];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = (int *)type metadata accessor for StockSparklineViewModel(0);
    uint64_t v20 = *((void *)v19 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
    {
      sub_20A5CF284(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v22 = sub_20A8CDCD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v18, v22);
      uint64_t v23 = v19[5];
      uint64_t v24 = &v17[v23];
      uint64_t v25 = &v18[v23];
      *(void *)uint64_t v24 = *(void *)v25;
      v24[8] = v25[8];
      uint64_t v26 = v19[6];
      uint64_t v27 = &v17[v26];
      uint64_t v28 = &v18[v26];
      *(void *)uint64_t v27 = *(void *)v28;
      v27[8] = v28[8];
      v17[v19[7]] = v18[v19[7]];
      uint64_t v29 = v19[8];
      uint64_t v30 = &v17[v29];
      uint64_t v31 = &v18[v29];
      uint64_t v32 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      (*(void (**)(char *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
    }
    uint64_t v33 = v7[7];
    long long v34 = (char *)a1 + v33;
    uint64_t v62 = v7;
    uint64_t v35 = (char *)a2 + v33;
    *(void *)long long v34 = *(void *)((char *)a2 + v33);
    v34[8] = *((unsigned char *)a2 + v33 + 8);
    *((void *)v34 + 2) = *(void *)((char *)a2 + v33 + 16);
    v34[24] = *((unsigned char *)a2 + v33 + 24);
    *((void *)v34 + 4) = *(void *)((char *)a2 + v33 + 32);
    v34[40] = *((unsigned char *)a2 + v33 + 40);
    uint64_t v36 = *(void *)((char *)a2 + v33 + 56);
    *((void *)v34 + 6) = *(void *)((char *)a2 + v33 + 48);
    *((void *)v34 + 7) = v36;
    uint64_t v37 = *(void *)((char *)a2 + v33 + 72);
    *((void *)v34 + 8) = *(void *)((char *)a2 + v33 + 64);
    *((void *)v34 + 9) = v37;
    uint64_t v38 = (int *)type metadata accessor for PriceViewModel();
    uint64_t v39 = v38[9];
    uint64_t v60 = &v35[v39];
    uint64_t v61 = &v34[v39];
    uint64_t v40 = sub_20A8C2EB0();
    uint64_t v41 = a2;
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
    uint64_t v15 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42(v61, v60, v40);
    uint64_t v43 = v38[10];
    uint64_t v44 = &v34[v43];
    uint64_t v45 = &v35[v43];
    uint64_t v46 = sub_20A8C4030();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
    uint64_t v47 = v38[11];
    uint64_t v48 = &v34[v47];
    uint64_t v49 = &v35[v47];
    uint64_t v50 = sub_20A8C2990();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    uint64_t v51 = v62[8];
    uint64_t v52 = (char *)a1 + v51;
    uint64_t v53 = (char *)v41 + v51;
    uint64_t v54 = sub_20A8C3410();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
    *((unsigned char *)a1 + v62[9]) = *((unsigned char *)v41 + v62[9]);
    uint64_t v55 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)v41 + *(int *)(a3 + 20));
    uint64_t v56 = (void *)((char *)a1 + v55);
    uint64_t v57 = (void *)((char *)v41 + v55);
    uint64_t v58 = v57[1];
    *uint64_t v56 = *v57;
    v56[1] = v58;
    swift_bridgeObjectRetain();
  }
  return v15;
}

uint64_t sub_20A5CBB34(uint64_t a1)
{
  uint64_t v2 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = (int *)type metadata accessor for StockViewModel();
  uint64_t v4 = a1 + v3[5];
  uint64_t v5 = sub_20A8C3E10();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + v3[6];
  uint64_t v8 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    uint64_t v9 = sub_20A8CDCD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
    uint64_t v10 = v7 + *(int *)(v8 + 32);
    uint64_t v11 = sub_20A8C3D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = a1 + v3[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v14 = v12 + v13[9];
  uint64_t v15 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = v12 + v13[10];
  uint64_t v17 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  uint64_t v18 = v12 + v13[11];
  uint64_t v19 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  uint64_t v20 = a1 + v3[8];
  uint64_t v21 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A5CBE2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  uint64_t v6 = (int *)type metadata accessor for StockViewModel();
  uint64_t v7 = v6[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_20A8C3E10();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_20A42C470(0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = v6[6];
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  uint64_t v16 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v17 = *((void *)v16 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    sub_20A5CF284(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v19 = sub_20A8CDCD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v14, v15, v19);
    uint64_t v20 = v16[5];
    uint64_t v21 = &v14[v20];
    uint64_t v22 = &v15[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v16[6];
    uint64_t v24 = &v14[v23];
    uint64_t v25 = &v15[v23];
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    v14[v16[7]] = v15[v16[7]];
    uint64_t v26 = v16[8];
    uint64_t v27 = &v14[v26];
    uint64_t v28 = &v15[v26];
    uint64_t v29 = sub_20A8C3D00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v30 = v6[7];
  uint64_t v31 = a1 + v30;
  uint64_t v59 = v6;
  uint64_t v32 = a2 + v30;
  *(void *)uint64_t v31 = *(void *)(a2 + v30);
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(a2 + v30 + 8);
  *(void *)(v31 + 16) = *(void *)(a2 + v30 + 16);
  *(unsigned char *)(v31 + 24) = *(unsigned char *)(a2 + v30 + 24);
  *(void *)(v31 + 32) = *(void *)(a2 + v30 + 32);
  *(unsigned char *)(v31 + 40) = *(unsigned char *)(a2 + v30 + 40);
  uint64_t v33 = *(void *)(a2 + v30 + 56);
  *(void *)(v31 + 48) = *(void *)(a2 + v30 + 48);
  *(void *)(v31 + 56) = v33;
  uint64_t v34 = *(void *)(a2 + v30 + 72);
  *(void *)(v31 + 64) = *(void *)(a2 + v30 + 64);
  *(void *)(v31 + 72) = v34;
  uint64_t v35 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v36 = v35[9];
  uint64_t v57 = v32 + v36;
  uint64_t v58 = v31 + v36;
  uint64_t v37 = sub_20A8C2EB0();
  uint64_t v38 = a2;
  uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v39(v58, v57, v37);
  uint64_t v40 = v35[10];
  uint64_t v41 = v31 + v40;
  uint64_t v42 = v32 + v40;
  uint64_t v43 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  uint64_t v44 = v35[11];
  uint64_t v45 = v31 + v44;
  uint64_t v46 = v32 + v44;
  uint64_t v47 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  uint64_t v48 = v59[8];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = v38 + v48;
  uint64_t v51 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
  *(unsigned char *)(a1 + v59[9]) = *(unsigned char *)(v38 + v59[9]);
  uint64_t v52 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(v38 + *(int *)(a3 + 20));
  uint64_t v53 = (void *)(a1 + v52);
  uint64_t v54 = (void *)(v38 + v52);
  uint64_t v55 = v54[1];
  *uint64_t v53 = *v54;
  v53[1] = v55;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20A5CC324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a1, a2, v5);
  uint64_t v6 = (int *)type metadata accessor for StockViewModel();
  uint64_t v7 = v6[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_20A8C3E10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_20A42C470(0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = v6[6];
  uint64_t v17 = (unsigned char *)(a1 + v16);
  uint64_t v18 = (unsigned char *)(a2 + v16);
  uint64_t v19 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v21 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      uint64_t v64 = sub_20A8CDCD0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v64 - 8) + 24))(v17, v18, v64);
      uint64_t v65 = v19[5];
      uint64_t v66 = &v17[v65];
      uint64_t v67 = &v18[v65];
      uint64_t v68 = *(void *)v67;
      v66[8] = v67[8];
      *(void *)uint64_t v66 = v68;
      uint64_t v69 = v19[6];
      uint64_t v70 = &v17[v69];
      uint64_t v71 = &v18[v69];
      LOBYTE(v68) = v71[8];
      *(void *)uint64_t v70 = *(void *)v71;
      v70[8] = v68;
      v17[v19[7]] = v18[v19[7]];
      uint64_t v72 = v19[8];
      uint64_t v73 = &v17[v72];
      unint64_t v74 = &v18[v72];
      uint64_t v75 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 24))(v73, v74, v75);
      goto LABEL_13;
    }
    sub_20A5CC9AC((uint64_t)v17, type metadata accessor for StockSparklineViewModel);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    sub_20A5CF284(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
    memcpy(v17, v18, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v24 = sub_20A8CDCD0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v24 - 8) + 16))(v17, v18, v24);
  uint64_t v25 = v19[5];
  uint64_t v26 = &v17[v25];
  uint64_t v27 = &v18[v25];
  uint64_t v28 = *(void *)v27;
  v26[8] = v27[8];
  *(void *)uint64_t v26 = v28;
  uint64_t v29 = v19[6];
  uint64_t v30 = &v17[v29];
  uint64_t v31 = &v18[v29];
  LOBYTE(v28) = v31[8];
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v28;
  v17[v19[7]] = v18[v19[7]];
  uint64_t v32 = v19[8];
  uint64_t v33 = &v17[v32];
  uint64_t v34 = &v18[v32];
  uint64_t v35 = sub_20A8C3D00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
LABEL_13:
  uint64_t v37 = v6[7];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  uint64_t v40 = *(void *)(a2 + v37);
  *(unsigned char *)(v38 + 8) = *(unsigned char *)(v39 + 8);
  *(void *)uint64_t v38 = v40;
  uint64_t v41 = *(void *)(v39 + 16);
  *(unsigned char *)(v38 + 24) = *(unsigned char *)(v39 + 24);
  *(void *)(v38 + 16) = v41;
  uint64_t v42 = *(void *)(v39 + 32);
  *(unsigned char *)(v38 + 40) = *(unsigned char *)(v39 + 40);
  *(void *)(v38 + 32) = v42;
  *(void *)(v38 + 48) = *(void *)(v39 + 48);
  *(void *)(v38 + 56) = *(void *)(v39 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v38 + 64) = *(void *)(v39 + 64);
  *(void *)(v38 + 72) = *(void *)(v39 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v43 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v44 = v43[9];
  uint64_t v45 = v38 + v44;
  uint64_t v46 = v39 + v44;
  uint64_t v47 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 24))(v45, v46, v47);
  uint64_t v48 = v43[10];
  uint64_t v49 = v38 + v48;
  uint64_t v50 = v39 + v48;
  uint64_t v51 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 24))(v49, v50, v51);
  uint64_t v52 = v43[11];
  uint64_t v53 = v38 + v52;
  uint64_t v54 = v39 + v52;
  uint64_t v55 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 24))(v53, v54, v55);
  uint64_t v56 = v6[8];
  uint64_t v57 = a1 + v56;
  uint64_t v58 = a2 + v56;
  uint64_t v59 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 24))(v57, v58, v59);
  *(unsigned char *)(a1 + v6[9]) = *(unsigned char *)(a2 + v6[9]);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v60 = *(int *)(a3 + 24);
  uint64_t v61 = (void *)(a1 + v60);
  uint64_t v62 = (void *)(a2 + v60);
  *uint64_t v61 = *v62;
  v61[1] = v62[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A5CC9AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A5CCA0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for StockViewModel();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_20A8C3E10();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_20A42C470(0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = v7[6];
  uint64_t v15 = (char *)(a1 + v14);
  uint64_t v16 = (char *)(a2 + v14);
  uint64_t v17 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v18 = *((void *)v17 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
  {
    sub_20A5CF284(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = sub_20A8CDCD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v15, v16, v20);
    uint64_t v21 = v17[5];
    int v22 = &v15[v21];
    int v23 = &v16[v21];
    *(void *)int v22 = *(void *)v23;
    v22[8] = v23[8];
    uint64_t v24 = v17[6];
    uint64_t v25 = &v15[v24];
    uint64_t v26 = &v16[v24];
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    v15[v17[7]] = v16[v17[7]];
    uint64_t v27 = v17[8];
    uint64_t v28 = &v15[v27];
    uint64_t v29 = &v16[v27];
    uint64_t v30 = sub_20A8C3D00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
    (*(void (**)(char *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v31 = v7[7];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(void *)uint64_t v32 = *(void *)(a2 + v31);
  *(unsigned char *)(v32 + 8) = *(unsigned char *)(a2 + v31 + 8);
  *(void *)(v32 + 16) = *(void *)(a2 + v31 + 16);
  *(unsigned char *)(v32 + 24) = *(unsigned char *)(a2 + v31 + 24);
  *(void *)(v32 + 32) = *(void *)(a2 + v31 + 32);
  *(unsigned char *)(v32 + 40) = *(unsigned char *)(a2 + v31 + 40);
  long long v34 = *(_OWORD *)(a2 + v31 + 64);
  *(_OWORD *)(v32 + 48) = *(_OWORD *)(a2 + v31 + 48);
  *(_OWORD *)(v32 + 64) = v34;
  uint64_t v35 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v36 = v35[9];
  uint64_t v37 = v32 + v36;
  uint64_t v38 = v33 + v36;
  uint64_t v39 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
  uint64_t v40 = v35[10];
  uint64_t v41 = v32 + v40;
  uint64_t v42 = v33 + v40;
  uint64_t v43 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
  uint64_t v44 = v35[11];
  uint64_t v45 = v32 + v44;
  uint64_t v46 = v33 + v44;
  uint64_t v47 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
  uint64_t v48 = v7[8];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  uint64_t v51 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
  *(unsigned char *)(a1 + v7[9]) = *(unsigned char *)(a2 + v7[9]);
  uint64_t v52 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v52) = *(_OWORD *)(a2 + v52);
  return a1;
}

uint64_t sub_20A5CCEC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a1, a2, v5);
  uint64_t v6 = (int *)type metadata accessor for StockViewModel();
  uint64_t v7 = v6[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_20A8C3E10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_20A42C470(0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = v6[6];
  uint64_t v17 = (unsigned char *)(a1 + v16);
  uint64_t v18 = (unsigned char *)(a2 + v16);
  uint64_t v19 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v21 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      uint64_t v64 = sub_20A8CDCD0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v64 - 8) + 40))(v17, v18, v64);
      uint64_t v65 = v19[5];
      uint64_t v66 = &v17[v65];
      uint64_t v67 = &v18[v65];
      *(void *)uint64_t v66 = *(void *)v67;
      v66[8] = v67[8];
      uint64_t v68 = v19[6];
      uint64_t v69 = &v17[v68];
      uint64_t v70 = &v18[v68];
      *(void *)uint64_t v69 = *(void *)v70;
      v69[8] = v70[8];
      v17[v19[7]] = v18[v19[7]];
      uint64_t v71 = v19[8];
      uint64_t v72 = &v17[v71];
      uint64_t v73 = &v18[v71];
      uint64_t v74 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 40))(v72, v73, v74);
      goto LABEL_13;
    }
    sub_20A5CC9AC((uint64_t)v17, type metadata accessor for StockSparklineViewModel);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    sub_20A5CF284(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
    memcpy(v17, v18, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v24 = sub_20A8CDCD0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v24 - 8) + 32))(v17, v18, v24);
  uint64_t v25 = v19[5];
  uint64_t v26 = &v17[v25];
  uint64_t v27 = &v18[v25];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = v19[6];
  uint64_t v29 = &v17[v28];
  uint64_t v30 = &v18[v28];
  *(void *)uint64_t v29 = *(void *)v30;
  v29[8] = v30[8];
  v17[v19[7]] = v18[v19[7]];
  uint64_t v31 = v19[8];
  uint64_t v32 = &v17[v31];
  uint64_t v33 = &v18[v31];
  uint64_t v34 = sub_20A8C3D00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
LABEL_13:
  uint64_t v36 = v6[7];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  *(void *)uint64_t v37 = *(void *)(a2 + v36);
  *(unsigned char *)(v37 + 8) = *(unsigned char *)(a2 + v36 + 8);
  *(void *)(v37 + 16) = *(void *)(a2 + v36 + 16);
  *(unsigned char *)(v37 + 24) = *(unsigned char *)(a2 + v36 + 24);
  *(void *)(v37 + 32) = *(void *)(a2 + v36 + 32);
  *(unsigned char *)(v37 + 40) = *(unsigned char *)(a2 + v36 + 40);
  uint64_t v39 = *(void *)(a2 + v36 + 56);
  *(void *)(v37 + 48) = *(void *)(a2 + v36 + 48);
  *(void *)(v37 + 56) = v39;
  swift_bridgeObjectRelease();
  uint64_t v40 = *(void *)(v38 + 72);
  *(void *)(v37 + 64) = *(void *)(v38 + 64);
  *(void *)(v37 + 72) = v40;
  swift_bridgeObjectRelease();
  uint64_t v41 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v42 = v41[9];
  uint64_t v43 = v37 + v42;
  uint64_t v44 = v38 + v42;
  uint64_t v45 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 40))(v43, v44, v45);
  uint64_t v46 = v41[10];
  uint64_t v47 = v37 + v46;
  uint64_t v48 = v38 + v46;
  uint64_t v49 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 40))(v47, v48, v49);
  uint64_t v50 = v41[11];
  uint64_t v51 = v37 + v50;
  uint64_t v52 = v38 + v50;
  uint64_t v53 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 40))(v51, v52, v53);
  uint64_t v54 = v6[8];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  uint64_t v57 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 40))(v55, v56, v57);
  *(unsigned char *)(a1 + v6[9]) = *(unsigned char *)(a2 + v6[9]);
  uint64_t v58 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v59 = (void *)(a1 + v58);
  uint64_t v60 = (uint64_t *)(a2 + v58);
  uint64_t v62 = *v60;
  uint64_t v61 = v60[1];
  *uint64_t v59 = v62;
  v59[1] = v61;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A5CD518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A5CD52C);
}

uint64_t sub_20A5CD52C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StockViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_20A5CD5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A5CD604);
}

uint64_t sub_20A5CD604(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for StockViewModel();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20A5CD6C4()
{
  uint64_t result = type metadata accessor for StockViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_20A5CD768()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5CFB7C(v1, (uint64_t)v7, type metadata accessor for StockListModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = 1633972084;
    }
    else
    {
      uint64_t v9 = 1953525093;
    }
    return v9 & 0xFFFF0000FFFFFFFFLL | 0x7900000000;
  }
  else
  {
    sub_20A470E78((uint64_t)v7, (uint64_t)v4);
    uint64_t v10 = sub_20A8C3E20();
    sub_20A5CC9AC((uint64_t)v4, type metadata accessor for StockListStockModel);
  }
  return v10;
}

uint64_t sub_20A5CD8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A5CD9E4(&qword_26AC6D960, (void (*)(uint64_t))type metadata accessor for StockListModel);

  return MEMORY[0x270F7A6F8](a1, a2, v4);
}

uint64_t sub_20A5CD954()
{
  return sub_20A5CD9E4(&qword_26AC6D970, (void (*)(uint64_t))type metadata accessor for StockListModel);
}

uint64_t sub_20A5CD99C()
{
  return sub_20A5CD9E4(&qword_26AC6D968, (void (*)(uint64_t))type metadata accessor for StockListModel);
}

uint64_t sub_20A5CD9E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A5CDA2C()
{
  return sub_20A5CD9E4(&qword_26AC6D958, (void (*)(uint64_t))type metadata accessor for StockListModel);
}

uint64_t sub_20A5CDA74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v11);
  int v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5CFB7C(v2, (uint64_t)v13, type metadata accessor for StockListModel);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result)
  {
    if (result == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    sub_20A470E78((uint64_t)v13, (uint64_t)v10);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
    *(void *)(a1 + 24) = sub_20A8C2D10();
    *(void *)(a1 + 32) = sub_20A5CD9E4(&qword_26AC67568, MEMORY[0x263F7A960]);
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
    sub_20A8C2D00();
    return sub_20A5CC9AC((uint64_t)v10, type metadata accessor for StockListStockModel);
  }
  return result;
}

uint64_t sub_20A5CDCB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_20A8C2530();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5CFB7C(v1, (uint64_t)v12, type metadata accessor for StockListModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v14 = sub_20A8CB860();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a1, 1, 1, v14);
  }
  else
  {
    sub_20A470E78((uint64_t)v12, (uint64_t)v9);
    sub_20A8C3E30();
    sub_20A8C24D0();
    sub_20A8C3E60();
    sub_20A8CB850();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_20A5CC9AC((uint64_t)v9, type metadata accessor for StockListStockModel);
    uint64_t v16 = sub_20A8CB860();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a1, 0, 1, v16);
  }
}

uint64_t sub_20A5CDF3C()
{
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5CFB7C(v3, (uint64_t)v2, type metadata accessor for StockListModel);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for StockListStockModel;
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1) {
      return EnumCaseMultiPayload;
    }
    uint64_t v6 = 0;
    uint64_t v5 = type metadata accessor for StockListModel;
  }
  else
  {
    uint64_t v6 = 1;
  }
  sub_20A5CC9AC((uint64_t)v2, v5);
  return v6;
}

uint64_t sub_20A5CE03C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A5CE08C(MEMORY[0x263F7D3D8], MEMORY[0x263F7D3E0], MEMORY[0x263F7D3D0], a1);
}

uint64_t sub_20A5CE064@<X0>(uint64_t a1@<X8>)
{
  return sub_20A5CE08C(MEMORY[0x263F7D3B0], MEMORY[0x263F7D3B8], MEMORY[0x263F7D3A8], a1);
}

uint64_t sub_20A5CE08C@<X0>(unsigned int *a1@<X2>, uint64_t (*a2)(void)@<X3>, unsigned int *a3@<X4>, uint64_t a4@<X8>)
{
  MEMORY[0x270FA5388](v4);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5CFB7C(v11, (uint64_t)v10, type metadata accessor for StockListModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_20A5CC9AC((uint64_t)v10, type metadata accessor for StockListModel);
      uint64_t v13 = *a1;
    }
    else
    {
      uint64_t v13 = *a3;
    }
    uint64_t v17 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(a4, v13, v17);
  }
  else
  {
    uint64_t v14 = *a1;
    uint64_t v15 = a2(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(a4, v14, v15);
    return sub_20A5CC9AC((uint64_t)v10, type metadata accessor for StockListStockModel);
  }
}

uint64_t sub_20A5CE214()
{
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5CFB7C(v3, (uint64_t)v2, type metadata accessor for StockListModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for StockListStockModel;
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1) {
      return 0;
    }
    uint64_t v6 = 0;
    uint64_t v5 = type metadata accessor for StockListModel;
  }
  else
  {
    uint64_t v6 = 1;
  }
  sub_20A5CC9AC((uint64_t)v2, v5);
  return v6;
}

unint64_t sub_20A5CE2FC()
{
  uint64_t v1 = sub_20A8C91E0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5CFB7C(v0, (uint64_t)v10, type metadata accessor for StockListModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    unint64_t v12 = 0;
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    uint64_t v85 = v5;
    uint64_t v86 = (uint64_t *)v4;
    sub_20A470E78((uint64_t)v10, (uint64_t)v7);
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
    sub_20A5CF284(0, &qword_26AC82DC0, MEMORY[0x263F7D6E0], MEMORY[0x263F8E0F8]);
    uint64_t v87 = *(void *)(v2 + 72);
    unint64_t v14 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v15 = swift_allocObject();
    long long v103 = xmmword_20A8D4540;
    *(_OWORD *)(v15 + 16) = xmmword_20A8D4540;
    unint64_t v77 = v14;
    unint64_t v84 = v15;
    uint64_t v16 = (uint64_t *)(v15 + v14);
    sub_20A5CF1D8();
    uint64_t v100 = v17;
    uint64_t v18 = (char *)v16 + *(int *)(v17 + 48);
    uint64_t v89 = v2;
    uint64_t v102 = *(int *)(v17 + 64);
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v96 = ObjCClassFromMetadata;
    id v99 = self;
    id v20 = objc_msgSend(v99, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v21 = sub_20A8C2370();
    uint64_t v23 = v22;

    *uint64_t v16 = v21;
    v16[1] = v23;
    uint64_t v24 = *MEMORY[0x263F7D668];
    uint64_t v98 = sub_20A8C91A0();
    uint64_t v25 = *(void *)(v98 - 8);
    uint64_t v97 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 104);
    uint64_t v95 = v25 + 104;
    v97(v18, v24, v98);
    sub_20A5CF284(0, qword_26AC82F58, MEMORY[0x263F7D6D8], v13);
    uint64_t v94 = v26;
    uint64_t v27 = sub_20A8C91D0();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v88 = v7;
    uint64_t v29 = v28;
    uint64_t v30 = *(void *)(v28 + 72);
    uint64_t v31 = *(unsigned __int8 *)(v28 + 80);
    uint64_t v32 = (v31 + 32) & ~v31;
    uint64_t v91 = v32 + 2 * v30;
    uint64_t v82 = v30;
    uint64_t v90 = v31 | 7;
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = v103;
    uint64_t v34 = *(void (**)(void))(v29 + 104);
    ((void (*)(uint64_t, void, uint64_t))v34)(v33 + v32, *MEMORY[0x263F7D6B8], v27);
    uint64_t v35 = (uint64_t *)(v33 + v32 + v30);
    sub_20A8CB580();
    uint64_t *v35 = sub_20A8CB550();
    unsigned int v93 = *MEMORY[0x263F7D6D0];
    v34(v35);
    *(uint64_t *)((char *)v16 + v102) = v33;
    uint64_t v36 = *MEMORY[0x263F7D688];
    uint64_t v38 = v89 + 104;
    uint64_t v37 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v89 + 104);
    uint64_t v101 = v1;
    uint64_t v92 = v37;
    v37(v16, v36, v1);
    uint64_t v39 = (uint64_t *)((char *)v16 + v87);
    uint64_t v40 = (uint64_t *)((char *)v16 + v87 + *(int *)(v100 + 48));
    uint64_t v83 = *(int *)(v100 + 64);
    uint64_t v41 = v27;
    id v42 = objc_msgSend(v99, sel_bundleForClass_, v96);
    uint64_t v43 = sub_20A8C2370();
    uint64_t v45 = v44;

    *uint64_t v39 = v43;
    v39[1] = v45;
    *uint64_t v40 = 0x6D79536572616853;
    v40[1] = 0xEB000000006C6F62;
    unsigned int v80 = *MEMORY[0x263F7D660];
    uint64_t v46 = v82;
    ((void (*)(void *))v97)(v40);
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = v103;
    uint64_t v81 = v32;
    uint64_t v48 = (void *)(v47 + v32);
    id v79 = self;
    *uint64_t v48 = objc_msgSend(v79, sel_systemOrangeColor);
    unsigned int v78 = *MEMORY[0x263F7D6C8];
    uint64_t v102 = v41;
    v34(v47 + v32);
    uint64_t v49 = v46;
    uint64_t v50 = (void *)((char *)v48 + v46);
    if (qword_26AC7F248 != -1) {
      swift_once();
    }
    uint64_t v51 = (void *)qword_26AC9EBC0;
    *uint64_t v50 = qword_26AC9EBC0;
    ((void (*)(void *, void, uint64_t))v34)(v50, v93, v102);
    *(uint64_t *)((char *)v39 + v83) = v47;
    uint64_t v52 = *MEMORY[0x263F7D6B0];
    v92(v39, v52, v101);
    if (v88[*(int *)(v85 + 20)] == 1)
    {
      uint64_t v85 = v38;
      uint64_t v53 = v86;
      uint64_t v54 = (char *)v86 + *(int *)(v100 + 48);
      uint64_t v55 = *(int *)(v100 + 64);
      id v56 = v51;
      id v57 = objc_msgSend(v99, sel_bundleForClass_, v96);
      uint64_t v58 = sub_20A8C2370();
      uint64_t v60 = v59;

      *uint64_t v53 = v58;
      v53[1] = v60;
      uint64_t v61 = v53;
      *(void *)uint64_t v54 = 0x61576567616E614DLL;
      *((void *)v54 + 1) = 0xEF7473696C686374;
      v97(v54, v80, v98);
      uint64_t v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = v103;
      unint64_t v63 = (void *)(v62 + v81);
      *unint64_t v63 = objc_msgSend(v79, sel_systemBlueColor);
      ((void (*)(void *, void, uint64_t))v34)(v63, v78, v102);
      uint64_t v64 = (void *)((char *)v63 + v49);
      unint64_t v12 = v84;
      if (qword_267639910 != -1) {
        swift_once();
      }
      uint64_t v65 = (void *)qword_267652D08;
      void *v64 = qword_267652D08;
      ((void (*)(void *, void, uint64_t))v34)(v64, v93, v102);
      *(uint64_t *)((char *)v61 + v55) = v62;
      uint64_t v66 = v101;
      v92(v61, v52, v101);
      unint64_t v67 = *(void *)(v12 + 16);
      unint64_t v68 = *(void *)(v12 + 24);
      id v69 = v65;
      if (v67 >= v68 >> 1) {
        unint64_t v12 = sub_20A46E214(v68 > 1, v67 + 1, 1, v12);
      }
      uint64_t v71 = (uint64_t)v88;
      uint64_t v70 = v89;
      uint64_t v72 = v86;
      uint64_t v73 = v87;
      unint64_t v74 = v77;
      *(void *)(v12 + 16) = v67 + 1;
      (*(void (**)(unint64_t, uint64_t *, uint64_t))(v70 + 32))(v12 + v74 + v67 * v73, v72, v66);
    }
    else
    {
      uint64_t v71 = (uint64_t)v88;
      id v75 = v51;
      unint64_t v12 = v84;
    }
    sub_20A5CC9AC(v71, type metadata accessor for StockListStockModel);
  }
  return v12;
}

uint64_t sub_20A5CEC2C(void *a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9;
  unint64_t v42 = a8;
  unint64_t v43 = a4;
  uint64_t v45 = a6;
  uint64_t v46 = a7;
  uint64_t v44 = a5;
  uint64_t v14 = type metadata accessor for StockListStockModel(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v41 - v18;
  uint64_t v20 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5CFB7C(v10, (uint64_t)v22, type metadata accessor for StockListModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    uint64_t v24 = 0;
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    uint64_t v41 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_20A470E78((uint64_t)v22, (uint64_t)v19);
    uint64_t v25 = sub_20A8C8720();
    uint64_t v26 = sub_20A5A6ED0((uint64_t)v19, a1, a2, a3, v43, v44, v45, v46, v42, a9);
    sub_20A5CF284(0, (unint64_t *)&qword_26AC7FF90, (uint64_t (*)(uint64_t))sub_20A564C6C, MEMORY[0x263F8E0F8]);
    uint64_t v27 = swift_allocObject();
    uint64_t v28 = (void *)v27;
    *(_OWORD *)(v27 + 16) = xmmword_20A8D7FF0;
    if (v26)
    {
      uint64_t v29 = MEMORY[0x263F7D410];
      uint64_t v30 = v25;
    }
    else
    {
      uint64_t v30 = 0;
      uint64_t v29 = 0;
      *(void *)(v27 + 40) = 0;
      *(void *)(v27 + 48) = 0;
    }
    uint64_t v31 = (uint64_t)v41;
    uint64_t v32 = MEMORY[0x263F7D410];
    *(void *)(v27 + 32) = v26;
    *(void *)(v27 + 56) = v30;
    *(void *)(v27 + 64) = v29;
    swift_retain();
    uint64_t v33 = sub_20A7200A4((uint64_t)v19, 0);
    if (v33)
    {
      uint64_t v34 = MEMORY[0x263F7D410];
      uint64_t v35 = v25;
    }
    else
    {
      uint64_t v35 = 0;
      uint64_t v34 = 0;
      v28[10] = 0;
      v28[11] = 0;
    }
    v28[9] = v33;
    v28[12] = v35;
    v28[13] = v34;
    uint64_t v36 = _s5TeaUI15ContextMenuItemC06StocksB0E8copyLink5stockAC0F4Core5StockV_tFZ_0((uint64_t)v19);
    v28[17] = v25;
    v28[18] = v32;
    v28[14] = v36;
    uint64_t v37 = sub_20A7C7740((uint64_t)v19);
    v28[22] = v25;
    v28[23] = v32;
    v28[19] = v37;
    sub_20A5CFB7C((uint64_t)v19, v31, type metadata accessor for StockListStockModel);
    unint64_t v38 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v39 = swift_allocObject();
    sub_20A470E78(v31, v39 + v38);
    sub_20A8C80C0();
    swift_allocObject();
    uint64_t v24 = sub_20A8C8060();
    swift_release();
    sub_20A5CC9AC((uint64_t)v19, type metadata accessor for StockListStockModel);
  }
  return v24;
}

id sub_20A5CEFB4(uint64_t a1)
{
  sub_20A42C470(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C3F00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StockActivityItemsConfiguration();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  uint64_t v9 = type metadata accessor for StockViewModel();
  sub_20A5CFB7C(a1 + *(int *)(v9 + 20), (uint64_t)v4, (uint64_t (*)(void))sub_20A42C470);
  return StockActivityItemsConfiguration.__allocating_init(stock:quote:)(v8, (uint64_t)v4);
}

uint64_t sub_20A5CF10C(void *a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  return sub_20A5CEC2C(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_20A5CF118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return MEMORY[0x270F7B550](a1, a10, a2, a3, a4, a5, a11, a6, a7, a8, a9);
}

uint64_t sub_20A5CF148()
{
  return sub_20A5CD9E4(&qword_26AC6D960, (void (*)(uint64_t))type metadata accessor for StockListModel);
}

uint64_t sub_20A5CF190()
{
  return sub_20A5CD9E4(&qword_26AC6D940, (void (*)(uint64_t))type metadata accessor for StockListModel);
}

void sub_20A5CF1D8()
{
  if (!qword_26AC82F48)
  {
    sub_20A8C91A0();
    sub_20A5CF284(255, &qword_26AC82F50, MEMORY[0x263F7D6D8], MEMORY[0x263F8D488]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26AC82F48);
    }
  }
}

void sub_20A5CF284(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A5CF2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (uint64_t *)((char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  unint64_t v12 = (char *)&v37 - v11;
  sub_20A5CFBE4();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = &v15[*(int *)(v16 + 56)];
  sub_20A5CFB7C(a1, (uint64_t)v15, type metadata accessor for StockListModel);
  sub_20A5CFB7C(a2, (uint64_t)v17, type metadata accessor for StockListModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_20A5CFB7C((uint64_t)v15, (uint64_t)v12, type metadata accessor for StockListModel);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_20A470E78((uint64_t)v17, (uint64_t)v6);
      if ((sub_20A619588(v12, v6) & 1) != 0 && v12[*(int *)(v4 + 20)] == v6[*(int *)(v4 + 20)])
      {
        uint64_t v31 = *(int *)(v4 + 24);
        uint64_t v32 = *(void *)&v12[v31];
        uint64_t v33 = *(void *)&v12[v31 + 8];
        uint64_t v34 = &v6[v31];
        BOOL v35 = v32 == *(void *)v34 && v33 == *((void *)v34 + 1);
        if (v35 || (sub_20A8CF760() & 1) != 0)
        {
          sub_20A5CC9AC((uint64_t)v6, type metadata accessor for StockListStockModel);
          sub_20A5CC9AC((uint64_t)v12, type metadata accessor for StockListStockModel);
          goto LABEL_31;
        }
      }
      sub_20A5CC9AC((uint64_t)v6, type metadata accessor for StockListStockModel);
      sub_20A5CC9AC((uint64_t)v12, type metadata accessor for StockListStockModel);
LABEL_33:
      uint64_t v30 = 0;
      goto LABEL_34;
    }
    sub_20A5CC9AC((uint64_t)v12, type metadata accessor for StockListStockModel);
LABEL_20:
    uint64_t v30 = 0;
    uint64_t v28 = (uint64_t (*)(void))sub_20A5CFBE4;
    goto LABEL_35;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_20A5CFB7C((uint64_t)v15, (uint64_t)v9, type metadata accessor for StockListModel);
    uint64_t v20 = *v9;
    uint64_t v19 = v9[1];
    uint64_t v22 = v9[2];
    uint64_t v21 = v9[3];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = *((void *)v17 + 2);
      uint64_t v23 = *((void *)v17 + 3);
      BOOL v25 = v20 == *(void *)v17 && v19 == *((void *)v17 + 1);
      if (v25 || (sub_20A8CF760() & 1) != 0)
      {
        if (v22 != v24 || v21 != v23)
        {
          char v27 = sub_20A8CF760();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v28 = type metadata accessor for StockListModel;
          if (v27) {
            goto LABEL_18;
          }
          goto LABEL_33;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
LABEL_31:
        uint64_t v30 = 1;
LABEL_34:
        uint64_t v28 = type metadata accessor for StockListModel;
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_33;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  int v29 = swift_getEnumCaseMultiPayload();
  uint64_t v28 = type metadata accessor for StockListModel;
  if (v29 != 2) {
    goto LABEL_20;
  }
LABEL_18:
  uint64_t v30 = 1;
LABEL_35:
  sub_20A5CC9AC((uint64_t)v15, v28);
  return v30;
}

uint64_t sub_20A5CF710(uint64_t a1, uint64_t a2)
{
  if ((sub_20A6198A0(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for StockListStockModel(0);
  if (*(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v4 + 20))) {
    return 0;
  }
  uint64_t v6 = *(int *)(v4 + 24);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (void *)(a2 + v6);
  if (v7 == *v9 && v8 == v9[1]) {
    return 1;
  }

  return sub_20A8CF760();
}

uint64_t sub_20A5CF7A4()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for StockListStockModel(0) - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  uint64_t v3 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = (int *)type metadata accessor for StockViewModel();
  uint64_t v5 = v2 + v4[5];
  uint64_t v6 = sub_20A8C3E10();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = v2 + v4[6];
  uint64_t v9 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    uint64_t v10 = sub_20A8CDCD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
    uint64_t v11 = v8 + *(int *)(v9 + 32);
    uint64_t v12 = sub_20A8C3D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = v2 + v4[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v15 = v13 + v14[9];
  uint64_t v16 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = v13 + v14[10];
  uint64_t v18 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = v13 + v14[11];
  uint64_t v20 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = v2 + v4[8];
  uint64_t v22 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_20A5CFB1C()
{
  uint64_t v1 = *(void *)(type metadata accessor for StockListStockModel(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_20A5CEFB4(v2);
}

uint64_t sub_20A5CFB7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_20A5CFBE4()
{
  if (!qword_26AC67928)
  {
    type metadata accessor for StockListModel(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC67928);
    }
  }
}

uint64_t type metadata accessor for StockChartEventHandler()
{
  return self;
}

uint64_t StocksActivity.Tip.tipType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_20A8C76A0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104);
  uint64_t v6 = (unsigned int *)MEMORY[0x263F7A5F0];
  if (v3 < 0) {
    uint64_t v6 = (unsigned int *)MEMORY[0x263F7A5E8];
  }
  uint64_t v7 = *v6;

  return v5(a1, v7, v4);
}

void *sub_20A5CFCF0(void *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for StockEarningsModel();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = sub_20A8C3F00();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = v6[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_20A8C2800();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v13(v9, v10, v11);
    uint64_t v14 = v6[6];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = &a2[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
    {
      sub_20A42D040(0);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    uint64_t v19 = v6[7];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = &a2[v19];
    uint64_t v22 = sub_20A8C2AF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    *((unsigned char *)a1 + v6[8]) = a2[v6[8]];
    *((unsigned char *)a1 + v6[9]) = a2[v6[9]];
  }
  return a1;
}

uint64_t sub_20A5CFF28(uint64_t a1)
{
  uint64_t v2 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = (int *)type metadata accessor for StockEarningsModel();
  uint64_t v4 = a1 + v3[5];
  uint64_t v5 = sub_20A8C2800();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  uint64_t v8 = a1 + v3[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }
  uint64_t v9 = a1 + v3[7];
  uint64_t v10 = sub_20A8C2AF0();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t sub_20A5D0088(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = (int *)type metadata accessor for StockEarningsModel();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_20A8C2800();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 16);
  v11(v7, v8, v9);
  uint64_t v12 = v5[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a2 + v12, 1, v9))
  {
    sub_20A42D040(0);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  uint64_t v16 = v5[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_20A8C2AF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  *(unsigned char *)(a1 + v5[8]) = *(unsigned char *)(a2 + v5[8]);
  *(unsigned char *)(a1 + v5[9]) = *(unsigned char *)(a2 + v5[9]);
  return a1;
}

uint64_t sub_20A5D0270(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for StockEarningsModel();
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_20A8C2800();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v12 = *(int *)(v5 + 24);
  uint64_t v13 = (const void *)(a2 + v12);
  uint64_t v14 = *(uint64_t (**)(void))(v10 + 48);
  BOOL v25 = (int *)v5;
  uint64_t v26 = (void *)(a1 + v12);
  LODWORD(v5) = v14();
  int v15 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v14)(v13, 1, v9);
  if (v5)
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v26, v13, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v26, 0, 1, v9);
      goto LABEL_9;
    }
    sub_20A42D040(0);
    size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
    uint64_t v18 = v26;
  }
  else
  {
    if (!v15)
    {
      v11((uint64_t)v26, (uint64_t)v13, v9);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v26, v9);
    sub_20A42D040(0);
    size_t v17 = *(void *)(*(void *)(v19 - 8) + 64);
    uint64_t v18 = v26;
  }
  memcpy(v18, v13, v17);
LABEL_9:
  uint64_t v20 = v25[7];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_20A8C2AF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  *(unsigned char *)(a1 + v25[8]) = *(unsigned char *)(a2 + v25[8]);
  *(unsigned char *)(a1 + v25[9]) = *(unsigned char *)(a2 + v25[9]);
  return a1;
}

uint64_t sub_20A5D04EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = (int *)type metadata accessor for StockEarningsModel();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_20A8C2800();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v12 = v5[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a2 + v12, 1, v9))
  {
    sub_20A42D040(0);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  uint64_t v16 = v5[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_20A8C2AF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  *(unsigned char *)(a1 + v5[8]) = *(unsigned char *)(a2 + v5[8]);
  *(unsigned char *)(a1 + v5[9]) = *(unsigned char *)(a2 + v5[9]);
  return a1;
}

uint64_t sub_20A5D06D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for StockEarningsModel();
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_20A8C2800();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  uint64_t v12 = *(int *)(v5 + 24);
  uint64_t v13 = (const void *)(a2 + v12);
  uint64_t v14 = *(uint64_t (**)(void))(v10 + 48);
  BOOL v25 = (int *)v5;
  uint64_t v26 = (void *)(a1 + v12);
  LODWORD(v5) = v14();
  int v15 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v14)(v13, 1, v9);
  if (v5)
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v26, v13, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v26, 0, 1, v9);
      goto LABEL_9;
    }
    sub_20A42D040(0);
    size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
    uint64_t v18 = v26;
  }
  else
  {
    if (!v15)
    {
      v11((uint64_t)v26, (uint64_t)v13, v9);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v26, v9);
    sub_20A42D040(0);
    size_t v17 = *(void *)(*(void *)(v19 - 8) + 64);
    uint64_t v18 = v26;
  }
  memcpy(v18, v13, v17);
LABEL_9:
  uint64_t v20 = v25[7];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_20A8C2AF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  *(unsigned char *)(a1 + v25[8]) = *(unsigned char *)(a2 + v25[8]);
  *(unsigned char *)(a1 + v25[9]) = *(unsigned char *)(a2 + v25[9]);
  return a1;
}

uint64_t sub_20A5D0950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A5D0964);
}

uint64_t sub_20A5D0964(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockEarningsModel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A5D09D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A5D09E4);
}

uint64_t sub_20A5D09E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockEarningsModel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StockFeedEarningsRefreshBlueprintModifier()
{
  uint64_t result = qword_26763C580;
  if (!qword_26763C580) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A5D0AA0()
{
  uint64_t result = type metadata accessor for StockEarningsModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A5D0B2C(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v72 = a3;
  uint64_t v73 = a2;
  uint64_t v4 = sub_20A8C8B80();
  uint64_t v67 = *(void *)(v4 - 8);
  uint64_t v68 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v66 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5D15C8(0, &qword_26AC6A420, MEMORY[0x263F7D950]);
  uint64_t v71 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)&v48 - v8);
  uint64_t v64 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v64);
  uint64_t v61 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C4A4();
  uint64_t v62 = *(void *)(v11 - 8);
  uint64_t v63 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v60 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C84C();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v58 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v69);
  id v57 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5D15C8(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  uint64_t v17 = v16;
  uint64_t v70 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v48 - v18;
  sub_20A42D9D4();
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5D15C8(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  uint64_t v24 = v23;
  uint64_t v25 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v59 = (char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  int v29 = (char *)&v48 - v28;
  sub_20A8CBAC0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24) == 1)
  {
    sub_20A57DB84((uint64_t)v22);
    sub_20A5D16BC();
    *uint64_t v9 = swift_allocError();
    uint64_t v30 = v71;
    (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F7D930], v71);
    v73(v9);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v30);
  }
  else
  {
    uint64_t v55 = v9;
    uint64_t v56 = v7;
    uint64_t v53 = v25;
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v51 = v24;
    v32(v29, v22, v24);
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v19, a1, v17);
    uint64_t v33 = sub_20A44E664();
    sub_20A8CCAC0();
    sub_20A8CCAB0();
    type metadata accessor for StockFeedServiceConfig();
    sub_20A5D1774(&qword_26AC73FD0, (void (*)(uint64_t))type metadata accessor for StockFeedServiceConfig);
    uint64_t v34 = sub_20A8CCA90();
    swift_release();
    uint64_t v54 = a1;
    uint64_t v52 = v29;
    if (v34)
    {
      *((void *)&v75 + 1) = sub_20A8CC520();
      *(void *)&long long v74 = v34;
    }
    else
    {
      long long v74 = 0u;
      long long v75 = 0u;
    }
    sub_20A8CBB10();
    sub_20A55E55C(v33);
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = sub_20A5D1774(&qword_26AC69D78, (void (*)(uint64_t))sub_20A42C4A4);
    uint64_t v36 = sub_20A5D1774(&qword_26AC69D70, (void (*)(uint64_t))sub_20A42C4A4);
    uint64_t v37 = v63;
    MEMORY[0x21051E240](MEMORY[0x263F8EE78], v63, v35, v36);
    uint64_t v49 = v17;
    uint64_t v48 = v19;
    uint64_t v50 = type metadata accessor for StockFeedSectionDescriptor;
    sub_20A5D1774(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    sub_20A5D1774(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
    unint64_t v38 = v59;
    sub_20A8C8810();
    sub_20A5D1710(v65, v61);
    swift_storeEnumTagMultiPayload();
    uint64_t v39 = v60;
    sub_20A8C8320();
    uint64_t v40 = v51;
    sub_20A8C8880();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v39, v37);
    uint64_t v41 = v52;
    unint64_t v42 = v48;
    sub_20A8CBAB0();
    unint64_t v43 = v66;
    uint64_t v44 = v67;
    uint64_t v45 = v68;
    (*(void (**)(char *, void, uint64_t))(v67 + 104))(v66, *MEMORY[0x263F7D528], v68);
    sub_20A5D1774(&qword_26AC76FA0, (void (*)(uint64_t))v50);
    uint64_t v46 = v55;
    sub_20A8C9B50();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v45);
    v73(v46);
    (*(void (**)(uint64_t *, uint64_t))(v56 + 8))(v46, v71);
    uint64_t v47 = *(void (**)(char *, uint64_t))(v53 + 8);
    v47(v38, v40);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v42, v49);
    return ((uint64_t (*)(char *, uint64_t))v47)(v41, v40);
  }
}

uint64_t sub_20A5D1484(uint64_t a1)
{
  uint64_t v2 = sub_20A5D1774(&qword_26763C5A0, (void (*)(uint64_t))type metadata accessor for StockFeedEarningsRefreshBlueprintModifier);

  return MEMORY[0x270F7B5A8](a1, v2);
}

uint64_t sub_20A5D14F0()
{
  return sub_20A5D1774(&qword_26763C590, (void (*)(uint64_t))type metadata accessor for StockFeedEarningsRefreshBlueprintModifier);
}

uint64_t sub_20A5D1538()
{
  return sub_20A5D1774(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
}

uint64_t sub_20A5D1580()
{
  return sub_20A5D1774(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
}

void sub_20A5D15C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for StockFeedSectionDescriptor();
    v8[1] = type metadata accessor for StockFeedModel();
    v8[2] = sub_20A5D1774(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    v8[3] = sub_20A5D1774(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_20A5D16BC()
{
  unint64_t result = qword_26763C598;
  if (!qword_26763C598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C598);
  }
  return result;
}

uint64_t sub_20A5D1710(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockEarningsModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A5D1774(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StockFeedEarningsRefreshBlueprintModifier.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A5D1858);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedEarningsRefreshBlueprintModifier.Errors()
{
  return &type metadata for StockFeedEarningsRefreshBlueprintModifier.Errors;
}

unint64_t sub_20A5D1894()
{
  unint64_t result = qword_26763C5A8;
  if (!qword_26763C5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C5A8);
  }
  return result;
}

id sub_20A5D18E8(uint64_t a1)
{
  uint64_t v2 = v1;
  v33[1] = a1;
  uint64_t v3 = sub_20A8C43D0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  uint64_t v8 = (void **)MEMORY[0x263F814F0];
  *(_OWORD *)(inited + 16) = xmmword_20A8D5CB0;
  uint64_t v9 = *v8;
  *(void *)(inited + 32) = *v8;
  uint64_t v10 = self;
  sub_20A8CD010();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F7D1A8], v3);
  swift_bridgeObjectRetain();
  id v11 = v9;
  sub_20A8CD000();
  double v13 = v12;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  id v14 = objc_msgSend(v10, sel_systemFontOfSize_weight_, v13, *MEMORY[0x263F81800]);
  uint64_t v15 = sub_20A8CEE40();

  uint64_t v16 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v15;
  uint64_t v17 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v16;
  *(void *)(inited + 72) = v17;
  uint64_t v18 = v2 + 2;
  uint64_t v20 = v2[5];
  uint64_t v19 = v2[6];
  __swift_project_boxed_opaque_existential_1(v18, v20);
  uint64_t v21 = *(void *)(v19 + 16);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 480);
  id v23 = v17;
  uint64_t v24 = v22(v20, v21);
  uint64_t v25 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v24;
  uint64_t v26 = (void *)*MEMORY[0x263F81510];
  *(void *)(inited + 104) = v25;
  *(void *)(inited + 112) = v26;
  *(void *)(inited + 144) = MEMORY[0x263F8D538];
  *(void *)(inited + 120) = 0xBFD3333333333333;
  id v27 = v26;
  sub_20A4CF8B0(inited);
  id v28 = objc_allocWithZone(MEMORY[0x263F086A0]);
  int v29 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v30 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v31 = objc_msgSend(v28, sel_initWithString_attributes_, v29, v30);

  return v31;
}

uint64_t type metadata accessor for ForYouFeedMastheadViewStyler()
{
  return self;
}

id sub_20A5D1C28()
{
  uint64_t v0 = sub_20A8C43D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  uint64_t v5 = (void **)MEMORY[0x263F814F0];
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  unint64_t v6 = *v5;
  *(void *)(inited + 32) = *v5;
  uint64_t v7 = self;
  sub_20A8CD010();
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D1A8], v0);
  swift_bridgeObjectRetain();
  id v8 = v6;
  sub_20A8CD000();
  double v10 = v9;
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  id v11 = objc_msgSend(v7, sel_systemFontOfSize_weight_, v10, *MEMORY[0x263F81800]);
  uint64_t v12 = sub_20A8CEE40();

  uint64_t v13 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v12;
  id v14 = (void *)*MEMORY[0x263F81510];
  *(void *)(inited + 64) = v13;
  *(void *)(inited + 72) = v14;
  *(void *)(inited + 104) = MEMORY[0x263F8D538];
  *(void *)(inited + 80) = 0xBFD3333333333333;
  id v15 = v14;
  sub_20A4CF8B0(inited);
  id v16 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v17 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v18 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18);

  return v19;
}

void sub_20A5D1ED0(uint64_t a1, uint64_t a2, char *a3)
{
  id v99 = *(id *)&a3[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_separatorView];
  objc_msgSend(v99, sel_setHidden_, 0);
  id v97 = *(id *)&a3[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_quoteSummaryView];
  objc_msgSend(v97, (SEL)&off_263FDE498, 0);
  id v107 = *(id *)&a3[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_exchangeLabel];
  long long v103 = a3;
  objc_msgSend(v107, (SEL)&off_263FDE498, 0);
  unint64_t v6 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
  objc_msgSend(a3, sel_setFrame_, *(double *)(a2 + v6[5]), *(double *)(a2 + v6[5] + 8), *(double *)(a2 + v6[5] + 16), *(double *)(a2 + v6[5] + 24));
  id v105 = *(id *)&a3[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_symbolLabel];
  uint64_t v110 = v6;
  uint64_t v101 = a2;
  objc_msgSend(v105, (SEL)&off_263FDE418, *(double *)(a2 + v6[6]), *(double *)(a2 + v6[6] + 8), *(double *)(a2 + v6[6] + 16), *(double *)(a2 + v6[6] + 24));
  uint64_t v98 = v3;
  uint64_t v108 = v3 + 16;
  swift_beginAccess();
  sub_20A4342F4(v3 + 16, (uint64_t)__dst);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(__dst, __dst[3]);
  sub_20A8C3EF0();
  uint64_t v106 = v6[15];
  id v8 = (void *)*v7;
  uint64_t v100 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  double v9 = (void *)sub_20A8CEE20();
  double v10 = (void *)sub_20A8CEE40();

  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  uint64_t v12 = (void **)MEMORY[0x263F814F0];
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v13 = *v12;
  *(void *)(inited + 32) = *v12;
  *(void *)(inited + 40) = v10;
  id v14 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v100;
  *(void *)(inited + 72) = v14;
  id v15 = v8 + 2;
  uint64_t v17 = v8[5];
  uint64_t v16 = v8[6];
  __swift_project_boxed_opaque_existential_1(v15, v17);
  uint64_t v18 = *(void *)(v16 + 16);
  id v19 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 40);
  swift_bridgeObjectRetain();
  id v95 = v13;
  id v20 = v10;
  id v93 = v14;
  uint64_t v21 = v19(v17, v18);
  uint64_t v102 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 104) = v102;
  *(void *)(inited + 80) = v21;
  sub_20A4CF8B0(inited);
  id v22 = objc_allocWithZone(MEMORY[0x263F086A0]);
  id v23 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A5D2CC0((unint64_t *)&qword_26AC7F9F8, 255, type metadata accessor for Key);
  uint64_t v24 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(v22, sel_initWithString_attributes_, v23, v24);
  swift_bridgeObjectRelease();

  objc_msgSend(v105, sel_setAttributedText_, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
  id v26 = Stock.accessibleSymbol.getter();
  objc_msgSend(v105, sel_setAccessibilityAttributedLabel_, v26);

  id v104 = *(id *)&v103[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_nameLabel];
  objc_msgSend(v104, sel_setFrame_, *(double *)(v101 + v110[7]), *(double *)(v101 + v110[7] + 8), *(double *)(v101 + v110[7] + 16), *(double *)(v101 + v110[7] + 24));
  sub_20A4342F4(v108, (uint64_t)__dst);
  id v27 = __swift_project_boxed_opaque_existential_1(__dst, __dst[3]);
  sub_20A8C3E60();
  id v28 = (void *)*v27;
  int v29 = (void *)sub_20A8CEE20();
  uint64_t v30 = swift_initStackObject();
  *(_OWORD *)(v30 + 16) = xmmword_20A8D4540;
  *(void *)(v30 + 32) = v95;
  *(void *)(v30 + 40) = v29;
  *(void *)(v30 + 64) = v100;
  *(void *)(v30 + 72) = v93;
  id v31 = v28 + 2;
  uint64_t v33 = v28[5];
  uint64_t v32 = v28[6];
  __swift_project_boxed_opaque_existential_1(v31, v33);
  uint64_t v34 = *(void *)(v32 + 16);
  uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 184);
  swift_bridgeObjectRetain();
  id v92 = v95;
  id v36 = v29;
  id v94 = v93;
  uint64_t v37 = v35(v33, v34);
  *(void *)(v30 + 104) = v102;
  *(void *)(v30 + 80) = v37;
  sub_20A4CF8B0(v30);
  id v38 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v39 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  uint64_t v40 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v41 = objc_msgSend(v38, sel_initWithString_attributes_, v39, v40);
  swift_bridgeObjectRelease();

  objc_msgSend(v104, sel_setAttributedText_, v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
  objc_msgSend(v107, sel_setFrame_, *(double *)(v101 + v110[14]), *(double *)(v101 + v110[14] + 8), *(double *)(v101 + v110[14] + 16), *(double *)(v101 + v110[14] + 24));
  sub_20A4342F4(v108, (uint64_t)__dst);
  unint64_t v42 = __swift_project_boxed_opaque_existential_1(__dst, __dst[3]);
  uint64_t v96 = (int *)type metadata accessor for StockFeedMastheadModel();
  sub_20A817594(a1 + v96[5]);
  unint64_t v43 = (void *)*v42;
  uint64_t v44 = swift_initStackObject();
  *(_OWORD *)(v44 + 16) = xmmword_20A8D4540;
  *(void *)(v44 + 32) = v92;
  swift_bridgeObjectRetain();
  id v45 = v92;
  *(void *)(v44 + 40) = sub_20A8CEE20();
  *(void *)(v44 + 64) = v100;
  *(void *)(v44 + 72) = v94;
  uint64_t v46 = v43 + 2;
  uint64_t v48 = v43[5];
  uint64_t v47 = v43[6];
  __swift_project_boxed_opaque_existential_1(v46, v48);
  uint64_t v49 = *(void *)(v47 + 16);
  uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 184);
  id v51 = v94;
  uint64_t v52 = v50(v48, v49);
  *(void *)(v44 + 104) = v102;
  *(void *)(v44 + 80) = v52;
  sub_20A4CF8B0(v44);
  id v53 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v54 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  uint64_t v55 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v56 = objc_msgSend(v53, sel_initWithString_attributes_, v54, v55);
  swift_bridgeObjectRelease();

  objc_msgSend(v107, sel_setAttributedText_, v56);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
  id v57 = *(void **)&v103[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_moreOptionsButton];
  uint64_t v58 = (double *)(v101 + v110[8]);
  double v59 = *v58;
  double v60 = v58[1];
  double v61 = v58[2];
  double v62 = v58[3];
  v112.origin.CGFloat x = *v58;
  v112.origin.CGFloat y = v60;
  v112.size.CGFloat width = v61;
  v112.size.CGFloat height = v62;
  objc_msgSend(v57, sel_setHidden_, CGRectIsEmpty(v112));
  objc_msgSend(v57, sel_setFrame_, v59, v60, v61, v62);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v64 = self;
  id v65 = objc_msgSend(v64, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v66 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v57, sel_setAccessibilityLabel_, v66, 0x800000020A904070);

  uint64_t v67 = *(void **)&v103[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_shareButton];
  uint64_t v68 = (double *)(v101 + v110[9]);
  double v69 = *v68;
  double v70 = v68[1];
  double v71 = v68[2];
  double v72 = v68[3];
  v113.origin.CGFloat x = *v68;
  v113.origin.CGFloat y = v70;
  v113.size.CGFloat width = v71;
  v113.size.CGFloat height = v72;
  objc_msgSend(v67, sel_setHidden_, CGRectIsEmpty(v113));
  objc_msgSend(v67, sel_setFrame_, v69, v70, v71, v72);
  id v73 = objc_msgSend(v64, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  long long v74 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v67, sel_setAccessibilityLabel_, v74, 0x800000020A9040C0);

  long long v75 = *(void **)&v103[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_watchStockButton];
  char v76 = (double *)(v101 + v110[10]);
  double v77 = *v76;
  double v78 = v76[1];
  double v79 = v76[2];
  double v80 = v76[3];
  v114.origin.CGFloat x = *v76;
  v114.origin.CGFloat y = v78;
  v114.size.CGFloat width = v79;
  v114.size.CGFloat height = v80;
  objc_msgSend(v75, sel_setHidden_, CGRectIsEmpty(v114));
  objc_msgSend(v75, sel_setFrame_, v77, v78, v79, v80);
  id v81 = objc_msgSend(v103, sel_nextResponder);
  if (v81)
  {
    uint64_t v82 = v81;
    uint64_t v83 = (void *)v108;
    while (1)
    {
      self;
      if (swift_dynamicCastObjCClass()) {
        break;
      }
      id v84 = objc_msgSend(v82, sel_nextResponder);

      uint64_t v82 = v84;
      if (!v84) {
        goto LABEL_8;
      }
    }
    LOBYTE(v84) = sub_20A8CEB70();
  }
  else
  {
    LOBYTE(v84) = 0;
    uint64_t v83 = (void *)v108;
  }
LABEL_8:
  objc_msgSend(v57, sel_setHidden_, v84 & 1);
  id v85 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v103, sel_setBackgroundColor_, v85);

  objc_msgSend(v105, sel_setNumberOfLines_, 0);
  objc_msgSend(v104, sel_setNumberOfLines_, 0);
  __swift_project_boxed_opaque_existential_1(v83, *(void *)(v98 + 40));
  sub_20A852BD8(v67);
  __swift_project_boxed_opaque_existential_1(v83, *(void *)(v98 + 40));
  sub_20A852E70(v75, *(unsigned char *)(a1 + v96[8]) != 2);
  __swift_project_boxed_opaque_existential_1(v83, *(void *)(v98 + 40));
  sub_20A85319C(v57, *(unsigned char *)(v101 + v106));
  uint64_t v86 = *(void *)(v101 + v110[16]);
  if (v86 == 2) {
    goto LABEL_12;
  }
  if (v86 == 1)
  {
    objc_msgSend(v97, sel_setHidden_, 1);
    objc_msgSend(v107, sel_setHidden_, 1);
    objc_msgSend(v99, sel_setFrame_, *(double *)(v101 + v110[13]), *(double *)(v101 + v110[13] + 8), *(double *)(v101 + v110[13] + 16), *(double *)(v101 + v110[13] + 24));
    uint64_t v87 = __swift_project_boxed_opaque_existential_1(v83, *(void *)(v98 + 40));
    uint64_t v88 = *(void *)(*v87 + 40);
    uint64_t v89 = *(void *)(*v87 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(*v87 + 16), v88);
    uint64_t v90 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v89 + 16) + 136))(v88);
    objc_msgSend(v99, sel_setBackgroundColor_, v90);

    return;
  }
  if (v86)
  {
    sub_20A8CF520();
    __break(1u);
  }
  else
  {
LABEL_12:
    objc_msgSend(v99, sel_setHidden_, 1);
    objc_msgSend(v97, sel_setFrame_, *(double *)(v101 + v110[11]), *(double *)(v101 + v110[11] + 8), *(double *)(v101 + v110[11] + 16), *(double *)(v101 + v110[11] + 24));
    uint64_t v91 = a1 + v96[7];
    memcpy(__dst, (const void *)(v101 + v110[12]), 0x1A1uLL);
    sub_20A6BDA14(v91, (uint64_t)__dst, (uint64_t)v97);
  }
}

uint64_t sub_20A5D2BFC()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedMastheadViewRenderer()
{
  return self;
}

uint64_t sub_20A5D2C68(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_20A5D2CC0(&qword_26AC797D0, a2, (void (*)(uint64_t))type metadata accessor for StockFeedMastheadViewRenderer);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_20A5D2CC0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A5D2D08(uint64_t a1)
{
  uint64_t v26 = *v1;
  uint64_t v4 = v1[5];
  uint64_t v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v4);
  uint64_t v25 = v3;
  uint64_t v5 = *(void *)(v3 + 8);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 8);
  void v28[3] = v4;
  v28[4] = v3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
  v6(a1, v4, v5);
  uint64_t v9 = v1[10];
  uint64_t v8 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v9);
  uint64_t v10 = *(void *)(v8 + 8);
  id v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 8);
  v27[3] = v9;
  v27[4] = v8;
  uint64_t v12 = __swift_allocate_boxed_opaque_existential_1(v27);
  uint64_t v13 = v11(a1, v9, v10);
  double v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t *, uint64_t, double))(v17 + 16))(v16, boxed_opaque_existential_1, v4, v14);
  double v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v22 + 16))(v21, v12, v9, v19);
  uint64_t v23 = sub_20A58ED18((uint64_t)v16, (uint64_t)v21, v26, v4, v9, v25, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return v23;
}

id sub_20A5D2F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v32 = a1;
  uint64_t v2 = sub_20A8C43D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  uint64_t v28 = sub_20A8CD010();
  uint64_t v6 = *MEMORY[0x263F7D1A8];
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v7(v5, v6, v2);
  sub_20A8CD000();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  uint64_t v9 = (void *)sub_20A8CEE20();
  id v29 = (id)sub_20A8CEE40();

  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  id v11 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  sub_20A8CD010();
  v7(v5, v6, v2);
  swift_bridgeObjectRetain();
  id v12 = v11;
  uint64_t v13 = sub_20A8CCFF0();
  v8(v5, v2);
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v13;
  double v14 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v27;
  *(void *)(inited + 72) = v14;
  uint64_t v15 = v31[5];
  uint64_t v16 = v31[6];
  __swift_project_boxed_opaque_existential_1(v31 + 2, v15);
  uint64_t v17 = *(void *)(v16 + 16);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 40);
  id v19 = v14;
  uint64_t v20 = v18(v15, v17);
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v20;
  sub_20A4CF8B0(inited);
  id v21 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v22 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v23 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(v21, sel_initWithString_attributes_, v22, v23);

  return v24;
}

uint64_t type metadata accessor for StockTitleViewStyler()
{
  return self;
}

uint64_t sub_20A5D32EC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_20A5D2D08(a1);
  *a2 = result;
  return result;
}

uint64_t sub_20A5D3318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v41 = a3;
  uint64_t v39 = a2;
  uint64_t v38 = a1;
  uint64_t v37 = *(void *)v3;
  sub_20A5D5140(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v40 = (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v45 = (uint64_t)&v32 - v8;
  uint64_t v9 = sub_20A8C3410();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_20A8C2BC0();
  uint64_t v42 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  double v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_20A8C3F00();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = (int *)type metadata accessor for StockFeedPrewarmBlueprintModifier();
  MEMORY[0x270FA5388](v19);
  uint64_t v44 = (uint64_t)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v22 = MEMORY[0x270FA5388](v21);
  id v24 = (char *)&v32 - v23;
  uint64_t v25 = *(void (**)(char *, char *, uint64_t, double))(v16 + 16);
  uint64_t v35 = v18;
  uint64_t v36 = v15;
  v25(v18, &v4[OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_stock], v15, v22);
  sub_20A4342F4((uint64_t)&v4[OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_priceDataManager], (uint64_t)&v49);
  sub_20A4342F4((uint64_t)&v4[OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_quoteDetailManager], (uint64_t)v48);
  sub_20A4342F4((uint64_t)&v4[OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_watchlistManager], (uint64_t)v47);
  uint64_t v26 = qword_26AC69088;
  long long v34 = *(_OWORD *)&v4[OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_chartManager];
  swift_unknownObjectRetain();
  if (v26 != -1) {
    swift_once();
  }
  sub_20A5D5444(&qword_26AC7BED0, (void (*)(uint64_t))type metadata accessor for StockFeedBlueprintModifierFactory);
  uint64_t v33 = v14;
  sub_20A8C41C0();
  sub_20A4342F4((uint64_t)&v4[OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_stockEarningsModelFactory], (uint64_t)v46);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v38, v9);
  uint64_t v38 = v9;
  uint64_t v27 = (void (*)(uint64_t))MEMORY[0x263F07490];
  sub_20A5D50D4(v39, v45, &qword_26AC68CC0, MEMORY[0x263F07490]);
  uint64_t v28 = v40;
  sub_20A5D50D4(v41, v40, &qword_26AC68CC0, v27);
  __swift_project_boxed_opaque_existential_1(&v4[OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_appConfigurationManager], *(void *)&v4[OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_appConfigurationManager + 24]);
  sub_20A8C3AC0();
  char v29 = v4[OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_newsSource];
  sub_20A4342F4((uint64_t)&v4[OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_featureAvailability], (uint64_t)&v24[v19[13]]);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v24, v35, v36);
  sub_20A42BEBC(&v49, (uint64_t)&v24[v19[5]]);
  sub_20A42BEBC(v48, (uint64_t)&v24[v19[6]]);
  sub_20A42BEBC(v47, (uint64_t)&v24[v19[7]]);
  *(_OWORD *)&v24[v19[14]] = v34;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(&v24[v19[15]], v33, v43);
  sub_20A42BEBC(v46, (uint64_t)&v24[v19[16]]);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v24[v19[8]], v12, v38);
  sub_20A4469A8(v45, (uint64_t)&v24[v19[11]]);
  sub_20A4469A8(v28, (uint64_t)&v24[v19[12]]);
  v24[v19[10]] = v29;
  sub_20A5D4D78((uint64_t)v24, v44, (uint64_t (*)(void))type metadata accessor for StockFeedPrewarmBlueprintModifier);
  sub_20A5D4DE0();
  swift_allocObject();
  sub_20A5D5444(&qword_26AC7C090, (void (*)(uint64_t))type metadata accessor for StockFeedPrewarmBlueprintModifier);
  uint64_t v30 = sub_20A8C8BA0();
  sub_20A5D548C((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for StockFeedPrewarmBlueprintModifier);
  return v30;
}

uint64_t sub_20A5D39BC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (int *)type metadata accessor for StockFeedReplaceQuoteDataBlueprintModifier();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  double v14 = (uint64_t *)((char *)&v19 - v13);
  sub_20A5D4D78(a1, (uint64_t)&v19 + *(int *)(v15 + 20) - v13, (uint64_t (*)(void))type metadata accessor for StockFeedQuoteData);
  uint64_t v16 = (void (*)(uint64_t))MEMORY[0x263F07490];
  sub_20A5D50D4(a3, (uint64_t)v14 + v9[7], &qword_26AC68CC0, MEMORY[0x263F07490]);
  sub_20A5D50D4(a4, (uint64_t)v14 + v9[8], &qword_26AC68CC0, v16);
  sub_20A4342F4(v4 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_stockEarningsModelFactory, (uint64_t)v14 + v9[9]);
  sub_20A4342F4(v4 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_featureAvailability, (uint64_t)v14 + v9[10]);
  void *v14 = 0xD000000000000010;
  v14[1] = 0x800000020A904210;
  *((unsigned char *)v14 + v9[6]) = a2;
  sub_20A5D4D78((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StockFeedReplaceQuoteDataBlueprintModifier);
  sub_20A5D4DE0();
  swift_allocObject();
  sub_20A5D5444(&qword_26AC7E840, (void (*)(uint64_t))type metadata accessor for StockFeedReplaceQuoteDataBlueprintModifier);
  uint64_t v17 = sub_20A8C8BA0();
  sub_20A5D548C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StockFeedReplaceQuoteDataBlueprintModifier);
  return v17;
}

uint64_t sub_20A5D3BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A4342F4(v3 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_sectionFactory, (uint64_t)v14);
  uint64_t v7 = *(void **)(v3 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_offlineManager);
  char v8 = *(unsigned char *)(v3 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_newsSource);
  v13[0] = 0x6C6961467377654ELL;
  v13[1] = 0xEA00000000006465;
  void v13[2] = a1;
  void v13[3] = a2;
  v13[4] = a3;
  void v14[5] = v7;
  char v15 = v8;
  sub_20A5D4FD0((uint64_t)v13, (uint64_t)&v12);
  sub_20A5D4DE0();
  swift_allocObject();
  sub_20A5D502C();
  swift_bridgeObjectRetain();
  swift_retain();
  id v9 = v7;
  uint64_t v10 = sub_20A8C8BA0();
  sub_20A5D5080((uint64_t)v13);
  return v10;
}

uint64_t sub_20A5D3CDC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_stock;
  uint64_t v2 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_priceDataManager);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_quoteDetailManager);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_watchlistManager);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_appConfigurationManager);

  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_sectionFactory);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_stockEarningsModelFactory);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_featureAvailability);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_20A5D3DD0()
{
  sub_20A5D3CDC();

  return swift_deallocClassInstance();
}

uint64_t sub_20A5D3E28()
{
  return type metadata accessor for StockFeedBlueprintModifierFactory();
}

uint64_t type metadata accessor for StockFeedBlueprintModifierFactory()
{
  uint64_t result = qword_26AC7BEE0;
  if (!qword_26AC7BEE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A5D3E7C()
{
  uint64_t result = sub_20A8C3F00();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_20A5D3F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A5D3318(a1, a2, a3);
}

uint64_t sub_20A5D3F68()
{
  return sub_20A8C8BA0();
}

uint64_t sub_20A5D3FD4(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_20A4342F4(v3 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_sectionFactory, (uint64_t)v9);
  char v4 = *(unsigned char *)(v3 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_newsSource);
  v8[0] = 0x4468736572666552;
  v8[1] = 0xEB00000000617461;
  v8[2] = a1;
  v9[40] = v4;
  sub_20A5D52EC((uint64_t)v8, (uint64_t)&v7);
  sub_20A5D4DE0();
  swift_allocObject();
  sub_20A5D5348();
  swift_retain();
  uint64_t v5 = sub_20A8C8BA0();
  sub_20A5D539C((uint64_t)v8);
  return v5;
}

uint64_t sub_20A5D40B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A4342F4(*v3 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_sectionFactory, (uint64_t)&v14);
  strcpy(v10, "NewsExpandData");
  v10[15] = -18;
  uint64_t v11 = a1;
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  sub_20A5D51E8((uint64_t)v10, (uint64_t)&v9);
  sub_20A5D4DE0();
  swift_allocObject();
  sub_20A5D5244();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = sub_20A8C8BA0();
  sub_20A5D5298((uint64_t)v10);
  return v7;
}

uint64_t sub_20A5D4194(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for StockFeedPriceChangeDisplayBlueprintModifier();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  char v8 = (uint64_t *)((char *)&v15 - v7);
  uint64_t v9 = *v1;
  uint64_t v11 = (char *)&v15 + *(int *)(v10 + 20) - v7;
  uint64_t v12 = sub_20A8C3410();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, a1, v12);
  sub_20A4342F4(v9 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_featureAvailability, (uint64_t)v8 + *(int *)(v3 + 24));
  *char v8 = 0xD000000000000012;
  v8[1] = 0x800000020A8F8AC0;
  sub_20A5D4D78((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StockFeedPriceChangeDisplayBlueprintModifier);
  sub_20A5D4DE0();
  swift_allocObject();
  sub_20A5D5444(&qword_26AC82058, (void (*)(uint64_t))type metadata accessor for StockFeedPriceChangeDisplayBlueprintModifier);
  uint64_t v13 = sub_20A8C8BA0();
  sub_20A5D548C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockFeedPriceChangeDisplayBlueprintModifier);
  return v13;
}

uint64_t sub_20A5D4350()
{
  return sub_20A8C8BA0();
}

uint64_t sub_20A5D43B8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_20A5D39BC(a1, a2, a3, a4);
}

uint64_t sub_20A5D43DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A5D3BDC(a1, a2, a3);
}

uint64_t sub_20A5D4400(char a1)
{
  sub_20A4342F4(*v1 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_featureAvailability, (uint64_t)&v8);
  v6[0] = 0xD000000000000010;
  v6[1] = 0x800000020A9041F0;
  char v7 = a1;
  sub_20A5D4ECC((uint64_t)v6, (uint64_t)&v5);
  sub_20A5D4DE0();
  swift_allocObject();
  sub_20A5D4F28();
  uint64_t v3 = sub_20A8C8BA0();
  sub_20A5D4F7C((uint64_t)v6);
  return v3;
}

uint64_t sub_20A5D44B0(uint64_t a1)
{
  uint64_t refreshed = type metadata accessor for StockFeedEarningsRefreshBlueprintModifier();
  MEMORY[0x270FA5388](refreshed);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v10 - v6;
  sub_20A5D4D78(a1, (uint64_t)&v10 - v6, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
  sub_20A5D4D78((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StockFeedEarningsRefreshBlueprintModifier);
  sub_20A5D4DE0();
  swift_allocObject();
  sub_20A5D5444(&qword_26763C5A0, (void (*)(uint64_t))type metadata accessor for StockFeedEarningsRefreshBlueprintModifier);
  uint64_t v8 = sub_20A8C8BA0();
  sub_20A5D548C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StockFeedEarningsRefreshBlueprintModifier);
  return v8;
}

uint64_t sub_20A5D4608(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for StockFeedChartUpdateBlueprintModifier();
  MEMORY[0x270FA5388](updated);
  char v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (uint64_t *)((char *)&v17 - v9);
  uint64_t v11 = *v2;
  sub_20A5D50D4(a1, (uint64_t)&v17 + *(int *)(v12 + 20) - v9, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
  uint64_t v13 = (char *)v10 + *(int *)(updated + 24);
  uint64_t v14 = sub_20A8C3410();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v13, a2, v14);
  sub_20A4342F4(v11 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_featureAvailability, (uint64_t)v10 + *(int *)(updated + 28));
  *uint64_t v10 = 0x6470557472616843;
  v10[1] = 0xEB00000000657461;
  sub_20A5D4D78((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StockFeedChartUpdateBlueprintModifier);
  sub_20A5D4DE0();
  swift_allocObject();
  sub_20A5D5444(&qword_26AC7D7B0, (void (*)(uint64_t))type metadata accessor for StockFeedChartUpdateBlueprintModifier);
  uint64_t v15 = sub_20A8C8BA0();
  sub_20A5D548C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StockFeedChartUpdateBlueprintModifier);
  return v15;
}

uint64_t sub_20A5D4800()
{
  return sub_20A5D5444(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
}

uint64_t sub_20A5D4848()
{
  return sub_20A5D5444(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
}

uint64_t sub_20A5D4890(uint64_t a1, long long *a2, long long *a3, long long *a4, uint64_t a5, uint64_t a6, long long *a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v20 = (uint64_t *)(a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_featureAvailability);
  v20[3] = a14;
  v20[4] = a15;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a14 - 8) + 32))(boxed_opaque_existential_1, a12, a14);
  double v22 = (void *)(a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_sectionFactory);
  v22[3] = type metadata accessor for StockFeedSectionFactory();
  v22[4] = &off_26BE6B418;
  void *v22 = a9;
  uint64_t v23 = (void *)(a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_stockEarningsModelFactory);
  v23[3] = type metadata accessor for StockEarningsModelFactory();
  v23[4] = &off_26BE60460;
  void *v23 = a11;
  uint64_t v24 = a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_stock;
  uint64_t v25 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v24, a1, v25);
  sub_20A42BEBC(a2, a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_priceDataManager);
  sub_20A42BEBC(a3, a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_quoteDetailManager);
  sub_20A42BEBC(a4, a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_watchlistManager);
  uint64_t v26 = (void *)(a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_chartManager);
  void *v26 = a5;
  v26[1] = a6;
  sub_20A42BEBC(a7, a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_appConfigurationManager);
  *(void *)(a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_offlineManager) = a8;
  *(unsigned char *)(a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_newsSource) = a10 & 1;
  return a13;
}

uint64_t sub_20A5D4A68(uint64_t a1, long long *a2, long long *a3, long long *a4, uint64_t a5, uint64_t a6, long long *a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  long long v49 = a7;
  uint64_t v50 = a8;
  uint64_t v47 = a5;
  uint64_t v48 = a6;
  uint64_t v45 = a3;
  uint64_t v46 = a4;
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  uint64_t v41 = a12;
  uint64_t v42 = a19;
  uint64_t v19 = *(void *)(a16 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = a14;
  uint64_t v56 = v22;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v54);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a14 - 8) + 32))(boxed_opaque_existential_1, a9, a14);
  uint64_t v52 = a15;
  uint64_t v53 = a18;
  uint64_t v24 = __swift_allocate_boxed_opaque_existential_1(v51);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a15 - 8) + 32))(v24, a11, a15);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v54, v55);
  double v27 = MEMORY[0x270FA5388](v26);
  char v29 = (uint64_t *)((char *)&v40 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v30 + 16))(v29, v27);
  uint64_t v31 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v51, v52);
  double v32 = MEMORY[0x270FA5388](v31);
  long long v34 = (uint64_t *)((char *)&v40 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v35 + 16))(v34, v32);
  uint64_t v36 = *v29;
  uint64_t v37 = *v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v41, a16);
  uint64_t v38 = sub_20A5D4890(v43, v44, v45, v46, v47, v48, v49, v50, v36, a10 & 1, v37, (uint64_t)v21, v25, a16, v42);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  return v38;
}

uint64_t sub_20A5D4D78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_20A5D4DE0()
{
  if (!qword_26AC69FB0)
  {
    type metadata accessor for StockFeedSectionDescriptor();
    type metadata accessor for StockFeedModel();
    sub_20A5D5444(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    sub_20A5D5444(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
    unint64_t v0 = sub_20A8C8BB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69FB0);
    }
  }
}

uint64_t sub_20A5D4ECC(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_20A5D4F28()
{
  unint64_t result = qword_26763C5B0;
  if (!qword_26763C5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C5B0);
  }
  return result;
}

uint64_t sub_20A5D4F7C(uint64_t a1)
{
  return a1;
}

uint64_t sub_20A5D4FD0(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_20A5D502C()
{
  unint64_t result = qword_26AC81DC8;
  if (!qword_26AC81DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC81DC8);
  }
  return result;
}

uint64_t sub_20A5D5080(uint64_t a1)
{
  return a1;
}

uint64_t sub_20A5D50D4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A5D5140(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_20A5D5140(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_20A5D5194()
{
  unint64_t result = qword_26763C5B8;
  if (!qword_26763C5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C5B8);
  }
  return result;
}

uint64_t sub_20A5D51E8(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_20A5D5244()
{
  unint64_t result = qword_26AC7E408;
  if (!qword_26AC7E408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7E408);
  }
  return result;
}

uint64_t sub_20A5D5298(uint64_t a1)
{
  return a1;
}

uint64_t sub_20A5D52EC(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_20A5D5348()
{
  unint64_t result = qword_26763C5C0;
  if (!qword_26763C5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C5C0);
  }
  return result;
}

uint64_t sub_20A5D539C(uint64_t a1)
{
  return a1;
}

unint64_t sub_20A5D53F0()
{
  unint64_t result = qword_26AC80F68;
  if (!qword_26AC80F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC80F68);
  }
  return result;
}

uint64_t sub_20A5D5444(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A5D548C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A5D54EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_20A8C4030();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v2, v4, v6);
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == *MEMORY[0x263F7AF90])
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x263F79A00];
LABEL_17:
    uint64_t v11 = *v10;
    uint64_t v12 = sub_20A8C6810();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(a1, v11, v12);
  }
  if (v9 == *MEMORY[0x263F7AF98])
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x263F79A08];
    goto LABEL_17;
  }
  if (v9 == *MEMORY[0x263F7AF68])
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x263F799E0];
    goto LABEL_17;
  }
  if (v9 == *MEMORY[0x263F7AF80])
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x263F799F0];
    goto LABEL_17;
  }
  if (v9 == *MEMORY[0x263F7AF70])
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x263F799E8];
    goto LABEL_17;
  }
  if (v9 == *MEMORY[0x263F7AF88])
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x263F799F8];
    goto LABEL_17;
  }
  if (v9 == *MEMORY[0x263F7AF78])
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x263F79A10];
    goto LABEL_17;
  }
  if (v9 == *MEMORY[0x263F7AF60])
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x263F799D8];
    goto LABEL_17;
  }
  uint64_t result = sub_20A8CF750();
  __break(1u);
  return result;
}

uint64_t *sub_20A5D5720(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_20A8C3F00();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      sub_20A4B2878();
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 48));
      swift_retain();
    }
    else
    {
      type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        swift_unknownObjectRetain();
      }
      else
      {
        sub_20A8C4DA0();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *a1 = *a2;
        if (EnumCaseMultiPayload == 1)
        {
          swift_retain();
        }
        else
        {
          sub_20A42FEC8();
          uint64_t v11 = *(int *)(v10 + 48);
          uint64_t v23 = (char *)a1 + v11;
          uint64_t v12 = (char *)a2 + v11;
          uint64_t v13 = sub_20A8C5390();
          uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
          swift_retain();
          v14(v23, v12, v13);
        }
        swift_storeEnumTagMultiPayload();
        sub_20A42FC8C();
        *(uint64_t *)((char *)a1 + *(int *)(v15 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v15 + 48));
        uint64_t v16 = *(int *)(v15 + 64);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = *(uint64_t *)((char *)a2 + v16 + 24);
        if (v19)
        {
          uint64_t v20 = *((void *)v18 + 4);
          *((void *)v17 + 3) = v19;
          *((void *)v17 + 4) = v20;
          (**(void (***)(void))(v19 - 8))();
        }
        else
        {
          long long v21 = *((_OWORD *)v18 + 1);
          *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
          *((_OWORD *)v17 + 1) = v21;
          *((void *)v17 + 4) = *((void *)v18 + 4);
        }
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20A5D59A4(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_20A8C3F00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
    sub_20A4B2878();
    return swift_release();
  }
  else
  {
    type metadata accessor for StocksActivity.Article(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      return swift_unknownObjectRelease();
    }
    else
    {
      sub_20A8C4DA0();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      swift_release();
      if (EnumCaseMultiPayload != 1)
      {
        sub_20A42FEC8();
        uint64_t v6 = a1 + *(int *)(v5 + 48);
        uint64_t v7 = sub_20A8C5390();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      }
      sub_20A42FC8C();
      uint64_t result = a1 + *(int *)(v8 + 64);
      if (*(void *)(result + 24))
      {
        return __swift_destroy_boxed_opaque_existential_1(result);
      }
    }
  }
  return result;
}

void *sub_20A5D5B14(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_20A8C3F00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    sub_20A4B2878();
    *(void *)((char *)a1 + *(int *)(v5 + 48)) = *(void *)((char *)a2 + *(int *)(v5 + 48));
    swift_retain();
  }
  else
  {
    type metadata accessor for StocksActivity.Article(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_unknownObjectRetain();
    }
    else
    {
      sub_20A8C4DA0();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
      {
        swift_retain();
      }
      else
      {
        sub_20A42FEC8();
        uint64_t v8 = *(int *)(v7 + 48);
        uint64_t v20 = (char *)a1 + v8;
        int v9 = (char *)a2 + v8;
        uint64_t v10 = sub_20A8C5390();
        uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
        swift_retain();
        v11(v20, v9, v10);
      }
      swift_storeEnumTagMultiPayload();
      sub_20A42FC8C();
      *(void *)((char *)a1 + *(int *)(v12 + 48)) = *(void *)((char *)a2 + *(int *)(v12 + 48));
      uint64_t v13 = *(int *)(v12 + 64);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = *(void *)((char *)a2 + v13 + 24);
      if (v16)
      {
        uint64_t v17 = *((void *)v15 + 4);
        *((void *)v14 + 3) = v16;
        *((void *)v14 + 4) = v17;
        (**(void (***)(void))(v16 - 8))();
      }
      else
      {
        long long v18 = *((_OWORD *)v15 + 1);
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v18;
        *((void *)v14 + 4) = *((void *)v15 + 4);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_20A5D5D48(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_20A5D5F90((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      sub_20A4B2878();
      *(void *)((char *)a1 + *(int *)(v5 + 48)) = *(void *)((char *)a2 + *(int *)(v5 + 48));
      swift_retain();
    }
    else
    {
      type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        swift_unknownObjectRetain();
      }
      else
      {
        sub_20A8C4DA0();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *a1 = *a2;
        if (EnumCaseMultiPayload == 1)
        {
          swift_retain();
        }
        else
        {
          sub_20A42FEC8();
          uint64_t v8 = *(int *)(v7 + 48);
          uint64_t v20 = (char *)a1 + v8;
          int v9 = (char *)a2 + v8;
          uint64_t v10 = sub_20A8C5390();
          uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
          swift_retain();
          v11(v20, v9, v10);
        }
        swift_storeEnumTagMultiPayload();
        sub_20A42FC8C();
        *(void *)((char *)a1 + *(int *)(v12 + 48)) = *(void *)((char *)a2 + *(int *)(v12 + 48));
        uint64_t v13 = *(int *)(v12 + 64);
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = *(void *)((char *)a2 + v13 + 24);
        if (v16)
        {
          *((void *)v14 + 3) = v16;
          *((void *)v14 + 4) = *((void *)v15 + 4);
          (**(void (***)(void))(v16 - 8))();
        }
        else
        {
          long long v17 = *(_OWORD *)v15;
          long long v18 = *((_OWORD *)v15 + 1);
          *((void *)v14 + 4) = *((void *)v15 + 4);
          *(_OWORD *)uint64_t v14 = v17;
          *((_OWORD *)v14 + 1) = v18;
        }
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20A5D5F90(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockFeedRouteModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for StockFeedRouteModel()
{
  uint64_t result = qword_26AC82FD0;
  if (!qword_26AC82FD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_20A5D6038(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_20A8C3F00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    sub_20A4B2878();
    *(void *)((char *)a1 + *(int *)(v5 + 48)) = *(void *)((char *)a2 + *(int *)(v5 + 48));
  }
  else
  {
    uint64_t v6 = type metadata accessor for StocksActivity.Article(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_20A8C4DA0();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        sub_20A42FEC8();
        uint64_t v9 = *(int *)(v8 + 48);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_20A8C5390();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        swift_storeEnumTagMultiPayload();
      }
      sub_20A42FC8C();
      *(void *)((char *)a1 + *(int *)(v13 + 48)) = *(void *)((char *)a2 + *(int *)(v13 + 48));
      uint64_t v14 = *(int *)(v13 + 64);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      *((void *)v15 + 4) = *((void *)v16 + 4);
      long long v17 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v17;
      swift_storeEnumTagMultiPayload();
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_20A5D6220(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_20A5D5F90((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      sub_20A4B2878();
      *(void *)((char *)a1 + *(int *)(v5 + 48)) = *(void *)((char *)a2 + *(int *)(v5 + 48));
    }
    else
    {
      uint64_t v6 = type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        uint64_t v7 = sub_20A8C4DA0();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          sub_20A42FEC8();
          uint64_t v9 = *(int *)(v8 + 48);
          uint64_t v10 = (char *)a1 + v9;
          uint64_t v11 = (char *)a2 + v9;
          uint64_t v12 = sub_20A8C5390();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
          swift_storeEnumTagMultiPayload();
        }
        sub_20A42FC8C();
        *(void *)((char *)a1 + *(int *)(v13 + 48)) = *(void *)((char *)a2 + *(int *)(v13 + 48));
        uint64_t v14 = *(int *)(v13 + 64);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        *((void *)v15 + 4) = *((void *)v16 + 4);
        long long v17 = *((_OWORD *)v16 + 1);
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
        *((_OWORD *)v15 + 1) = v17;
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20A5D6418()
{
  uint64_t result = type metadata accessor for StocksActivity.Article(319);
  if (v1 <= 0x3F)
  {
    v3[4] = *(void *)(result - 8) + 64;
    uint64_t result = sub_20A8C3F00();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v3[5] = v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for PresentationOperationManagerDataStore()
{
  return self;
}

uint64_t sub_20A5D6514()
{
  uint64_t v0 = sub_20A8CE2D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC69210 != -1) {
    swift_once();
  }
  sub_20A5D77B4(&qword_26AC7D660);
  sub_20A8C41C0();
  uint64_t v4 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0) {
    uint64_t v4 = v11 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_20A8CE2C0();
  uint64_t v5 = sub_20A8CE290();
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v7 >> 60 == 15)
  {
LABEL_9:
    uint64_t v11 = MEMORY[0x263F8EE80];
    sub_20A5D78D0(0, &qword_26AC698B0, (uint64_t (*)(uint64_t))sub_20A5D7934, MEMORY[0x263F7D028]);
    swift_allocObject();
    return sub_20A8C6580();
  }
  sub_20A8C5970();
  swift_allocObject();
  sub_20A8C5960();
  sub_20A5D7934();
  sub_20A5D799C();
  sub_20A8C5950();
  swift_release();
  sub_20A5D78D0(0, &qword_26AC698B0, (uint64_t (*)(uint64_t))sub_20A5D7934, MEMORY[0x263F7D028]);
  swift_allocObject();
  uint64_t v9 = sub_20A8C6580();
  sub_20A5D78BC(v5, v7);
  return v9;
}

uint64_t sub_20A5D68B8()
{
  uint64_t v0 = sub_20A8CE2D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC81258 != -1) {
    swift_once();
  }
  sub_20A5D77B4(&qword_26AC7D660);
  sub_20A8C41C0();
  uint64_t v4 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0) {
    uint64_t v4 = v11 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_20A8CE2C0();
  uint64_t v5 = sub_20A8CE290();
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v7 >> 60 == 15)
  {
LABEL_9:
    uint64_t v11 = MEMORY[0x263F8EE80];
    sub_20A5D78D0(0, &qword_26AC698B0, (uint64_t (*)(uint64_t))sub_20A5D7934, MEMORY[0x263F7D028]);
    swift_allocObject();
    return sub_20A8C6580();
  }
  sub_20A8C5970();
  swift_allocObject();
  sub_20A8C5960();
  sub_20A5D7934();
  sub_20A5D799C();
  sub_20A8C5950();
  swift_release();
  sub_20A5D78D0(0, &qword_26AC698B0, (uint64_t (*)(uint64_t))sub_20A5D7934, MEMORY[0x263F7D028]);
  swift_allocObject();
  uint64_t v9 = sub_20A8C6580();
  sub_20A5D78BC(v5, v7);
  return v9;
}

uint64_t sub_20A5D6C5C()
{
  uint64_t v0 = sub_20A8CE2D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC81260 != -1) {
    swift_once();
  }
  sub_20A5D77B4(&qword_26AC7D660);
  sub_20A8C41C0();
  uint64_t v4 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0) {
    uint64_t v4 = v11 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_20A8CE2C0();
  uint64_t v5 = sub_20A8CE290();
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v7 >> 60 == 15)
  {
LABEL_9:
    uint64_t v11 = MEMORY[0x263F8EE88];
    sub_20A5D78D0(0, &qword_26AC81290, (uint64_t (*)(uint64_t))sub_20A5D77F4, MEMORY[0x263F7D028]);
    swift_allocObject();
    return sub_20A8C6580();
  }
  sub_20A8C5970();
  swift_allocObject();
  sub_20A8C5960();
  sub_20A5D77F4();
  sub_20A5D7854();
  sub_20A8C5950();
  swift_release();
  sub_20A5D78D0(0, &qword_26AC81290, (uint64_t (*)(uint64_t))sub_20A5D77F4, MEMORY[0x263F7D028]);
  swift_allocObject();
  uint64_t v9 = sub_20A8C6580();
  sub_20A5D78BC(v5, v7);
  return v9;
}

uint64_t sub_20A5D7000()
{
  if (qword_26AC81260 != -1) {
    swift_once();
  }
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_20A75C810(v0);
  swift_bridgeObjectRelease();
  sub_20A8CE640();
  swift_release();
  sub_20A5D77B4(&qword_26AC7D668);
  sub_20A8C42F0();
  swift_bridgeObjectRelease();
  sub_20A55B23C(0, (unint64_t *)&qword_26AC698E0);
  swift_allocObject();
  return sub_20A8C6580();
}

uint64_t sub_20A5D7154(uint64_t a1, uint64_t a2)
{
  return sub_20A5D71C0(a1, a2, &qword_26AC69220);
}

uint64_t sub_20A5D7178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A5D72A8(a1, a2, a3, &qword_26AC69220);
}

uint64_t sub_20A5D719C(uint64_t a1, uint64_t a2)
{
  return sub_20A5D71C0(a1, a2, &qword_26AC69218);
}

uint64_t sub_20A5D71C0(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3 != -1) {
    swift_once();
  }
  sub_20A5D77B4(&qword_26AC7D660);
  sub_20A8C41C0();
  sub_20A55B23C(0, &qword_26AC698C8);
  swift_allocObject();
  return sub_20A8C6580();
}

uint64_t sub_20A5D7284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A5D72A8(a1, a2, a3, &qword_26AC69218);
}

uint64_t sub_20A5D72A8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (*a4 != -1) {
    swift_once();
  }
  sub_20A5D77B4(&qword_26AC7D668);
  sub_20A8C42F0();
  sub_20A55B23C(0, (unint64_t *)&qword_26AC698E0);
  swift_allocObject();
  return sub_20A8C6580();
}

uint64_t sub_20A5D736C()
{
  return sub_20A5D6514();
}

uint64_t sub_20A5D7390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A5D73FC(a1, a2, a3, &qword_26AC69210);
}

uint64_t sub_20A5D73B4()
{
  return sub_20A5D68B8();
}

uint64_t sub_20A5D73D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A5D73FC(a1, a2, a3, &qword_26AC81258);
}

uint64_t sub_20A5D73FC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (*a4 != -1) {
    swift_once();
  }
  sub_20A8CE190();
  sub_20A5D77B4(&qword_26AC7D668);
  sub_20A8C42F0();
  swift_bridgeObjectRelease();
  sub_20A55B23C(0, (unint64_t *)&qword_26AC698E0);
  swift_allocObject();
  return sub_20A8C6580();
}

uint64_t sub_20A5D74FC()
{
  return sub_20A5D6C5C();
}

uint64_t sub_20A5D7520()
{
  return sub_20A5D7000();
}

uint64_t sub_20A5D7544()
{
  sub_20A42D040(0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_267639AA0 != -1) {
    swift_once();
  }
  sub_20A5D77B4(&qword_26AC7D660);
  sub_20A8C41C0();
  uint64_t v3 = sub_20A8C2800();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 0, 1, v3);
  sub_20A5D78D0(0, &qword_26763C5C8, (uint64_t (*)(uint64_t))sub_20A42D040, MEMORY[0x263F7D028]);
  swift_allocObject();
  return sub_20A8C6580();
}

uint64_t sub_20A5D76B4()
{
  if (qword_267639AA0 != -1) {
    swift_once();
  }
  sub_20A5D77B4(&qword_26AC7D668);
  sub_20A8C42F0();
  sub_20A55B23C(0, (unint64_t *)&qword_26AC698E0);
  swift_allocObject();
  return sub_20A8C6580();
}

uint64_t sub_20A5D7780()
{
  return sub_20A5D77B4(&qword_26AC7D660);
}

uint64_t sub_20A5D77B4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for PresentationOperationManagerDataStore();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A5D77F4()
{
  if (!qword_26AC81810)
  {
    unint64_t v0 = sub_20A8CE820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC81810);
    }
  }
}

unint64_t sub_20A5D7854()
{
  unint64_t result = qword_26AC81818;
  if (!qword_26AC81818)
  {
    sub_20A5D77F4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC81818);
  }
  return result;
}

uint64_t sub_20A5D78BC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_20A531704(a1, a2);
  }
  return a1;
}

void sub_20A5D78D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A5D7934()
{
  if (!qword_26AC7F670)
  {
    unint64_t v0 = sub_20A8CE1A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7F670);
    }
  }
}

unint64_t sub_20A5D799C()
{
  unint64_t result = qword_26AC67610;
  if (!qword_26AC67610)
  {
    sub_20A5D7934();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC67610);
  }
  return result;
}

uint64_t sub_20A5D7A0C@<X0>(uint64_t a1@<X8>)
{
  id v3 = *v1;
  if (!objc_msgSend(*v1, sel_isFullTrackAvailableToAll))
  {
    uint64_t v4 = *(id *)((char *)v1 + *(int *)(type metadata accessor for StocksAudioTrack() + 24));
    if (objc_msgSend(v3, sel_respondsToSelector_, sel_narrativeTrackSample))
    {
      id v5 = v4;
      id v6 = objc_msgSend(v3, sel_narrativeTrackSample);
      if (v6)
      {
        uint64_t v7 = v6;
        sub_20A5D7B38();
        id v8 = v5;
        char v9 = sub_20A8CEF30();

        if (v9)
        {
          uint64_t v10 = (unsigned int *)MEMORY[0x263F79BC0];
          goto LABEL_8;
        }
      }
      else
      {
      }
    }
  }
  uint64_t v10 = (unsigned int *)MEMORY[0x263F79BB8];
LABEL_8:
  uint64_t v11 = *v10;
  uint64_t v12 = sub_20A8C6A60();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104);

  return v13(a1, v11, v12);
}

unint64_t sub_20A5D7B38()
{
  unint64_t result = qword_26763C9C0;
  if (!qword_26763C9C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26763C9C0);
  }
  return result;
}

uint64_t sub_20A5D7B78(uint64_t a1)
{
  return sub_20A5D7BE4(a1, 0xD000000000000033, 0x800000020A904570, &qword_26763C5D0);
}

uint64_t static Settings.Tips.audioQueuedViaArticleViewer.getter()
{
  return sub_20A454F34(&qword_267639AD0);
}

uint64_t sub_20A5D7BC0(uint64_t a1)
{
  return sub_20A5D7BE4(a1, 0xD00000000000002ALL, 0x800000020A904540, &qword_26763C5D8);
}

uint64_t sub_20A5D7BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = sub_20A8C4270();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_20A8C4260();
  double v10 = MEMORY[0x270FA5388](v9);
  (*(void (**)(unsigned char *, void, double))(v12 + 104))(&v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F7D100], v10);
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F7D110], v5);
  v14[15] = 0;
  sub_20A57E3F0(0, (unint64_t *)&qword_26AC692F8);
  swift_allocObject();
  uint64_t result = sub_20A8C42E0();
  *a4 = result;
  return result;
}

uint64_t static Settings.Tips.audioQueuedViaFeed.getter()
{
  return sub_20A454F34(&qword_267639AD8);
}

uint64_t sub_20A5D7DD8(uint64_t a1)
{
  return sub_20A5D7BE4(a1, 0xD00000000000002DLL, 0x800000020A904510, &qword_26763C5E0);
}

uint64_t static Settings.Tips.savedViaArticleViewer.getter()
{
  return sub_20A454F34(&qword_267639AE0);
}

uint64_t sub_20A5D7E20(uint64_t a1)
{
  return sub_20A5D7BE4(a1, 0xD000000000000024, 0x800000020A9044E0, &qword_26763C5E8);
}

uint64_t static Settings.Tips.savedViaFeed.getter()
{
  return sub_20A454F34(&qword_267639AE8);
}

uint64_t sub_20A5D7E68()
{
  uint64_t v0 = sub_20A8C4270();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C4260();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C2800();
  MEMORY[0x270FA5388](v8 - 8);
  sub_20A8C2700();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F7D100], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D110], v0);
  sub_20A5B4164();
  swift_allocObject();
  uint64_t result = sub_20A8C42E0();
  qword_26AC690A0 = result;
  return result;
}

uint64_t static Settings.Tips.Earnings.lastShownDate.getter()
{
  return sub_20A454F34(&qword_26AC690B0);
}

uint64_t sub_20A5D8090(uint64_t a1)
{
  return sub_20A5D810C(a1, MEMORY[0x263F7D100], 0xD000000000000025, 0x800000020A904480, &qword_26AC690B8);
}

uint64_t static Settings.Tips.Earnings.presentedCount.getter()
{
  return sub_20A454F34(&qword_26AC690C8);
}

uint64_t sub_20A5D80E0(uint64_t a1)
{
  return sub_20A5D810C(a1, MEMORY[0x263F7D108], 0xD000000000000029, 0x800000020A904450, &qword_26763C5F0);
}

uint64_t sub_20A5D810C(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_20A8C4270();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8C4260();
  double v12 = MEMORY[0x270FA5388](v11);
  (*(void (**)(char *, void, double))(v14 + 104))((char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), *a2, v12);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7D110], v7);
  v16[1] = 0;
  sub_20A57E3F0(0, (unint64_t *)&qword_26AC69300);
  swift_allocObject();
  uint64_t result = sub_20A8C42E0();
  *a5 = result;
  return result;
}

uint64_t static Settings.Tips.Earnings.ConfigOverrides.tipMaxPresentedCount.getter()
{
  return sub_20A454F34(&qword_267639AF0);
}

uint64_t sub_20A5D82FC()
{
  uint64_t v0 = sub_20A8C4270();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C4260();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A57E3F0(0, &qword_26763C370);
  v10[1] = v8;
  unint64_t v12 = 0xBFF0000000000000;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F7D108], v4);
  sub_20A5D8C68();
  sub_20A5D8CC0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_20A8D8000;
  unint64_t v11 = 0xBFF0000000000000;
  sub_20A8C4280();
  unint64_t v11 = 0x404E000000000000;
  sub_20A8C4280();
  unint64_t v11 = 0x4066800000000000;
  sub_20A8C4280();
  unint64_t v11 = 0x4072C00000000000;
  sub_20A8C4280();
  unint64_t v11 = 0x4082C00000000000;
  sub_20A8C4280();
  unint64_t v11 = 0x408C200000000000;
  sub_20A8C4280();
  unint64_t v11 = 0x4092C00000000000;
  sub_20A8C4280();
  unint64_t v11 = 0x409C200000000000;
  sub_20A8C4280();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D110], v0);
  uint64_t result = sub_20A8C42A0();
  qword_26763C5F8 = result;
  return result;
}

uint64_t static Settings.Tips.Earnings.ConfigOverrides.tipFrequencyInterval.getter()
{
  return sub_20A454F34(&qword_267639AF8);
}

uint64_t Settings.Tips.Earnings.ConfigOverrides.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_20A8C4260();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a4, v5);
  uint64_t v9 = sub_20A8C41F0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t Settings.Tips.Earnings.ConfigOverrides.init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_20A8C4260();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v5, v7);
  uint64_t v9 = sub_20A8C41F0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t Settings.Tips.Earnings.ConfigOverrides.__deallocating_deinit()
{
  _s11TeaSettings0B0C8StocksUIE4TipsV8EarningsV15ConfigOverridesCfd_0();

  return swift_deallocClassInstance();
}

uint64_t sub_20A5D8A1C()
{
  uint64_t v0 = sub_20A8C4260();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v5 = MEMORY[0x270FA5388](v4);
  double v7 = (char *)&v10 - v6;
  (*(void (**)(char *, void, uint64_t, double))(v1 + 104))((char *)&v10 - v6, *MEMORY[0x263F7D108], v0, v5);
  type metadata accessor for Settings.Tips.Earnings.ConfigOverrides();
  swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v7, v0);
  uint64_t v8 = sub_20A8C41F0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v7, v0);
  qword_26AC69108 = v8;
  return result;
}

uint64_t static Settings.Tips.Earnings.configOverrides.getter()
{
  return sub_20A454F34(&qword_26AC69110);
}

ValueMetadata *type metadata accessor for Settings.Tips()
{
  return &type metadata for Settings.Tips;
}

ValueMetadata *type metadata accessor for Settings.Tips.Earnings()
{
  return &type metadata for Settings.Tips.Earnings;
}

uint64_t type metadata accessor for Settings.Tips.Earnings.ConfigOverrides()
{
  uint64_t result = qword_26AC690D0;
  if (!qword_26AC690D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A5D8C20()
{
  return swift_initClassMetadata2();
}

uint64_t sub_20A5D8C60()
{
  return type metadata accessor for Settings.Tips.Earnings.ConfigOverrides();
}

void sub_20A5D8C68()
{
  if (!qword_26763C600)
  {
    sub_20A5D8CC0();
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763C600);
    }
  }
}

void sub_20A5D8CC0()
{
  if (!qword_26763C608)
  {
    unint64_t v0 = sub_20A8C4290();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763C608);
    }
  }
}

char *sub_20A5D8D18(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC8StocksUI19CreateWatchlistView_onTap;
  sub_20A45A1DC();
  id v12 = objc_allocWithZone(v11);
  uint64_t v13 = v4;
  *(void *)&v4[v10] = objc_msgSend(v12, sel_init);
  uint64_t v14 = OBJC_IVAR____TtC8StocksUI19CreateWatchlistView_newWatchlistButton;
  *(void *)&v13[v14] = objc_msgSend(self, sel_buttonWithType_, 1);

  v25.receiver = v13;
  v25.super_class = ObjectType;
  uint64_t v15 = (char *)objc_msgSendSuper2(&v25, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v16 = *(void **)&v15[OBJC_IVAR____TtC8StocksUI19CreateWatchlistView_newWatchlistButton];
  long long v17 = v15;
  objc_msgSend(v17, sel_addSubview_, v16);
  id v18 = *(id *)&v17[OBJC_IVAR____TtC8StocksUI19CreateWatchlistView_onTap];
  id v19 = v16;
  sub_20A8CB530();

  objc_msgSend(v17, sel_setIsAccessibilityElement_, 1);
  uint64_t v20 = *MEMORY[0x263F83260];
  long long v21 = v17;
  unint64_t v22 = (unint64_t)objc_msgSend(v21, sel_accessibilityTraits);
  if ((v20 & ~v22) != 0) {
    uint64_t v23 = v20;
  }
  else {
    uint64_t v23 = 0;
  }
  objc_msgSend(v21, sel_setAccessibilityTraits_, v23 | v22);

  return v21;
}

uint64_t type metadata accessor for CreateWatchlistView()
{
  return self;
}

void sub_20A5D900C()
{
  unint64_t v0 = (void *)sub_20A8CB4F0();
}

void sub_20A5D904C()
{
  sub_20A5D90D8(&qword_26763AD00);

  JUMPOUT(0x210523C60);
}

uint64_t sub_20A5D90A4()
{
  return sub_20A5D90D8((unint64_t *)&unk_26763C620);
}

uint64_t sub_20A5D90D8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CreateWatchlistView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_20A5D9118()
{
  id result = sub_20A5D919C();
  qword_267652E20 = (uint64_t)result;
  return result;
}

id sub_20A5D9144()
{
  id result = sub_20A5D919C();
  qword_267652E28 = (uint64_t)result;
  return result;
}

id sub_20A5D9170()
{
  id result = sub_20A5D919C();
  qword_267652E30 = (uint64_t)result;
  return result;
}

id sub_20A5D919C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  objc_msgSend(v0, sel_setNumberStyle_, 3);
  sub_20A4434F8();
  uint64_t v1 = (void *)sub_20A8CEF00();
  objc_msgSend(v0, sel_setMultiplier_, v1);

  objc_msgSend(v0, sel_setMinimumFractionDigits_, 2);
  objc_msgSend(v0, sel_setMaximumFractionDigits_, 2);
  uint64_t v2 = (void *)sub_20A8CE240();
  objc_msgSend(v0, sel_setPositivePrefix_, v2);

  id v3 = (void *)sub_20A8CE240();
  objc_msgSend(v0, sel_setNegativePrefix_, v3);

  return v0;
}

uint64_t type metadata accessor for PercentChangeFormatter()
{
  return self;
}

uint64_t sub_20A5D92D4(char a1, double a2, double a3)
{
  double v3 = a2 - a3;
  double v4 = a3 / v3;
  if (v3 <= 0.0) {
    double v5 = 0.0;
  }
  else {
    double v5 = v4;
  }
  if (a1)
  {
    if (qword_267639B10 != -1) {
      swift_once();
    }
    uint64_t v6 = (void *)qword_267652E28;
    id v7 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v5);
    id v8 = objc_msgSend(v6, sel_stringFromNumber_, v7);
  }
  else
  {
    if (qword_267639B08 != -1) {
      swift_once();
    }
    uint64_t v9 = (void *)qword_267652E20;
    id v7 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v5);
    id v8 = objc_msgSend(v9, sel_stringFromNumber_, v7);
  }
  id v10 = v8;

  if (!v10) {
    return 0;
  }
  uint64_t v11 = sub_20A8CE280();

  return v11;
}

uint64_t sub_20A5D9434(double a1, double a2)
{
  double v3 = a1 - a2;
  double v4 = a2 / v3;
  if (v3 <= 0.0) {
    double v5 = 0.0;
  }
  else {
    double v5 = v4;
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v7 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  if (a2 >= 0.0) {
    unint64_t v23 = 0x800000020A9046D0;
  }
  else {
    unint64_t v23 = 0x800000020A904660;
  }
  uint64_t v8 = sub_20A8C2370();
  uint64_t v10 = v9;

  if (qword_267639B18 != -1) {
    swift_once();
  }
  uint64_t v11 = (void *)qword_267652E30;
  id v12 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v5, v23);
  id v13 = objc_msgSend(v11, sel_stringFromNumber_, v12);

  if (v13)
  {
    uint64_t v14 = sub_20A8CE280();
    uint64_t v16 = v15;

    id v17 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_20A8C2370();

    sub_20A43F778();
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_20A8D4540;
    uint64_t v19 = MEMORY[0x263F8D310];
    *(void *)(v18 + 56) = MEMORY[0x263F8D310];
    unint64_t v20 = sub_20A43F830();
    *(void *)(v18 + 32) = v8;
    *(void *)(v18 + 40) = v10;
    *(void *)(v18 + 96) = v19;
    *(void *)(v18 + 104) = v20;
    *(void *)(v18 + 64) = v20;
    *(void *)(v18 + 72) = v14;
    *(void *)(v18 + 80) = v16;
    uint64_t v21 = sub_20A8CE250();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v21;
}

uint64_t AttributionProviderType.source.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 8))();
  sub_20A8C5DB0();

  return swift_release();
}

uint64_t dispatch thunk of AttributionProviderType.observableSource.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_20A5D973C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8CE720();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_20A8CE710();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_20A5DD6CC(a1, (unint64_t *)&qword_26AC7F850, MEMORY[0x263F8F520]);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_20A8CE6E0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_20A5D98FC(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for AttributionSource();
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)&v19[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_20A8C6200();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = v2 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_currentSource;
  uint64_t v12 = sub_20A8C3580();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)(v2 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_currentDownloadTask) = 0;
  uint64_t v13 = OBJC_IVAR____TtC8StocksUI19AttributionProvider_imageFetchDeduper;
  v19[0] = MEMORY[0x263F8EE78];
  sub_20A5DD38C(&qword_26AC69798, MEMORY[0x263F7CF38]);
  sub_20A5DDD94(0, (unint64_t *)&qword_26AC7F740, MEMORY[0x263F7CF38], MEMORY[0x263F8D488]);
  sub_20A5DD258();
  sub_20A8CF290();
  sub_20A5DD2E0();
  swift_allocObject();
  *(void *)(v2 + v13) = sub_20A8C5C90();
  sub_20A4342F4((uint64_t)a1, v2 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_attributionProvider);
  sub_20A4342F4(a2, v2 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_attributionAssetManager);
  uint64_t v14 = (char *)v9 + *(int *)(v7 + 28);
  uint64_t v15 = sub_20A8C2530();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *uint64_t v9 = 0;
  v9[1] = 0xE000000000000000;
  *(void *)((char *)v9 + *(int *)(v7 + 32)) = 0;
  sub_20A5DDD94(0, (unint64_t *)&unk_26AC68B08, (uint64_t (*)(uint64_t))type metadata accessor for AttributionSource, MEMORY[0x263F7CE20]);
  swift_allocObject();
  *(void *)(v3 + 16) = sub_20A8C5DA0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C3A70();
  swift_allocObject();
  swift_weakInit();
  uint64_t v16 = (void *)sub_20A8C6450();
  sub_20A8C5DC0();
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_20A5D9C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3580();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  double v7 = MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  sub_20A8C66A0();
  return swift_release();
}

uint64_t sub_20A5D9DC4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_20A5D9E24(a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_20A5D9E24(uint64_t a1)
{
  uint64_t v119 = sub_20A8C3910();
  uint64_t v116 = *(void *)(v119 - 8);
  MEMORY[0x270FA5388](v119);
  uint64_t v115 = (char *)&v111 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A5DDD94(0, (unint64_t *)&qword_26AC7F850, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v121 = (uint64_t)&v111 - v6;
  sub_20A5DDD94(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], v4);
  MEMORY[0x270FA5388](v7 - 8);
  CGRect v114 = (char *)&v111 - v8;
  uint64_t v120 = sub_20A8C38A0();
  uint64_t v123 = *(void *)(v120 - 8);
  MEMORY[0x270FA5388](v120);
  uint64_t v118 = (char *)&v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v122 = (char *)&v111 - v11;
  uint64_t v133 = type metadata accessor for AttributionSource();
  MEMORY[0x270FA5388](v133);
  CGRect v112 = (char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v134 = (uint64_t *)((char *)&v111 - v14);
  sub_20A5DDD94(0, &qword_26AC68AC0, MEMORY[0x263F7AD88], v4);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v132 = (void (*)(char *, uint64_t))((char *)&v111 - v16);
  uint64_t v138 = sub_20A8C3920();
  char v140 = *(void **)(v138 - 8);
  MEMORY[0x270FA5388](v138);
  double v125 = (char *)&v111 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v124 = (char *)&v111 - v19;
  MEMORY[0x270FA5388](v20);
  double v127 = (char *)&v111 - v21;
  MEMORY[0x270FA5388](v22);
  CGFloat v135 = (char *)&v111 - v23;
  uint64_t v24 = sub_20A8C3580();
  objc_super v25 = *(void **)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v113 = v26;
  uint64_t v126 = (char *)&v111 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5DD544();
  uint64_t v28 = v27 - 8;
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v111 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AC30];
  sub_20A5DDD94(0, &qword_26AC68AA0, MEMORY[0x263F7AC30], v4);
  MEMORY[0x270FA5388](v32 - 8);
  double v131 = (char *)&v111 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  uint64_t v128 = (uint64_t)&v111 - v35;
  double v37 = MEMORY[0x270FA5388](v36);
  uint64_t v39 = (char *)&v111 - v38;
  uint64_t v40 = (void (*)(char *, uint64_t, uint64_t))v25[2];
  uint64_t v141 = a1;
  CGFloat v136 = v40;
  uint64_t v137 = v25 + 2;
  ((void (*)(char *, uint64_t, uint64_t, double))v40)((char *)&v111 - v38, a1, v24, v37);
  uint64_t v130 = (void (*)(char *, void, uint64_t, uint64_t))v25[7];
  v130(v39, 0, 1, v24);
  uint64_t v139 = v1;
  uint64_t v41 = v1 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_currentSource;
  swift_beginAccess();
  uint64_t v42 = (uint64_t)&v30[*(int *)(v28 + 56)];
  sub_20A5DDD14((uint64_t)v39, (uint64_t)v30, &qword_26AC68AA0, v31);
  sub_20A5DDD14(v41, v42, &qword_26AC68AA0, v31);
  double v129 = v25;
  uint64_t v43 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v25[6];
  if (v43((uint64_t)v30, 1, v24) == 1)
  {
    sub_20A5DD6CC((uint64_t)v39, &qword_26AC68AA0, MEMORY[0x263F7AC30]);
    if (v43(v42, 1, v24) == 1) {
      return sub_20A5DD6CC((uint64_t)v30, &qword_26AC68AA0, MEMORY[0x263F7AC30]);
    }
  }
  else
  {
    uint64_t v45 = v128;
    sub_20A5DDD14((uint64_t)v30, v128, &qword_26AC68AA0, MEMORY[0x263F7AC30]);
    if (v43(v42, 1, v24) != 1)
    {
      uint64_t v50 = v129;
      id v51 = v126;
      ((void (*)(char *, uint64_t, uint64_t))v129[4])(v126, v42, v24);
      sub_20A5DD38C((unint64_t *)&unk_26AC68A90, MEMORY[0x263F7AC30]);
      char v52 = sub_20A8CE210();
      uint64_t v53 = (void (*)(char *, uint64_t))v50[1];
      v53(v51, v24);
      uint64_t v54 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AC30];
      sub_20A5DD6CC((uint64_t)v39, &qword_26AC68AA0, MEMORY[0x263F7AC30]);
      v53((char *)v45, v24);
      uint64_t result = sub_20A5DD6CC((uint64_t)v30, &qword_26AC68AA0, v54);
      uint64_t v46 = v141;
      if (v52) {
        return result;
      }
      goto LABEL_7;
    }
    sub_20A5DD6CC((uint64_t)v39, &qword_26AC68AA0, MEMORY[0x263F7AC30]);
    ((void (*)(uint64_t, uint64_t))v129[1])(v45, v24);
  }
  sub_20A5DD5D8((uint64_t)v30, (uint64_t (*)(void))sub_20A5DD544);
  uint64_t v46 = v141;
LABEL_7:
  uint64_t v47 = (uint64_t)v131;
  v136(v131, v46, v24);
  v130((char *)v47, 0, 1, v24);
  swift_beginAccess();
  sub_20A5DD638(v47, v41);
  swift_endAccess();
  uint64_t v48 = OBJC_IVAR____TtC8StocksUI19AttributionProvider_currentDownloadTask;
  uint64_t v49 = v139;
  if (*(void *)(v139 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_currentDownloadTask))
  {
    swift_retain();
    sub_20A8CE730();
    swift_release();
  }
  uint64_t v55 = v138;
  uint64_t v56 = (uint64_t)v132;
  *(void *)(v49 + v48) = 0;
  swift_release();
  sub_20A8C3550();
  id v57 = v140;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v140[6])(v56, 1, v55) == 1)
  {
    sub_20A5DD6CC(v56, &qword_26AC68AC0, MEMORY[0x263F7AD88]);
    uint64_t v58 = sub_20A8C3560();
    uint64_t v60 = v59;
    uint64_t v62 = v133;
    double v61 = v134;
    sub_20A8C3570();
    *double v61 = v58;
    v61[1] = v60;
    *(uint64_t *)((char *)v61 + *(int *)(v62 + 24)) = 0;
    sub_20A5DD38C(&qword_26AC68B60, (void (*)(uint64_t))type metadata accessor for AttributionSource);
    sub_20A8C5DD0();
    return sub_20A5DD5D8((uint64_t)v61, (uint64_t (*)(void))type metadata accessor for AttributionSource);
  }
  else
  {
    double v131 = (char *)v48;
    uint64_t v63 = v135;
    ((void (*)(char *, uint64_t, uint64_t))v57[4])(v135, v56, v55);
    uint64_t v64 = (void (*)(char *, char *, uint64_t))v57[2];
    id v65 = v127;
    v64(v127, v63, v55);
    uint64_t v66 = v124;
    v64(v124, v65, v55);
    uint64_t v67 = v125;
    sub_20A8C38B0();
    sub_20A5DD38C((unint64_t *)&unk_26AC81248, MEMORY[0x263F7AD88]);
    char v68 = sub_20A8CE210();
    double v69 = v140;
    char v70 = v68;
    double v71 = (void (*)(char *, uint64_t))v140[1];
    v71(v67, v55);
    uint64_t v132 = v71;
    v71(v66, v55);
    if (v70)
    {
      uint64_t v72 = sub_20A8C3560();
      uint64_t v74 = v73;
      uint64_t v76 = v133;
      long long v75 = v134;
      sub_20A8C3570();
      if (qword_26AC817F0 != -1) {
        swift_once();
      }
      double v77 = (void *)qword_26AC9EC40;
      *long long v75 = v72;
      v75[1] = v74;
      *(uint64_t *)((char *)v75 + *(int *)(v76 + 24)) = (uint64_t)v77;
      sub_20A5DD38C(&qword_26AC68B60, (void (*)(uint64_t))type metadata accessor for AttributionSource);
      id v78 = v77;
      sub_20A8C5DD0();
      sub_20A5DD5D8((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for AttributionSource);
      double v79 = (uint64_t (*)(char *, uint64_t))v132;
      v132(v135, v55);
      return v79(v127, v55);
    }
    else
    {
      int v80 = ((uint64_t (*)(char *, uint64_t))v69[11])(v65, v55);
      if (v80 == *MEMORY[0x263F7AD68])
      {
        ((void (*)(char *, uint64_t))v69[12])(v65, v55);
        id v81 = *(void **)(v123 + 32);
        uint64_t v130 = (void (*)(char *, void, uint64_t, uint64_t))(v123 + 32);
        char v140 = v81;
        ((void (*)(char *, char *, uint64_t))v81)(v122, v65, v120);
        uint64_t v82 = sub_20A8C3560();
        uint64_t v84 = v83;
        uint64_t v85 = (uint64_t)v114;
        sub_20A8C3570();
        uint64_t v86 = (uint64_t)v112;
        sub_20A8C5DB0();
        uint64_t v87 = v133;
        uint64_t v88 = *(void **)(v86 + *(int *)(v133 + 24));
        id v89 = v88;
        sub_20A5DD5D8(v86, (uint64_t (*)(void))type metadata accessor for AttributionSource);
        uint64_t v90 = (uint64_t)v134;
        *uint64_t v134 = v82;
        *(void *)(v90 + 8) = v84;
        sub_20A5A0EE4(v85, v90 + *(int *)(v87 + 20));
        *(void *)(v90 + *(int *)(v87 + 24)) = v88;
        sub_20A5DD38C(&qword_26AC68B60, (void (*)(uint64_t))type metadata accessor for AttributionSource);
        sub_20A8C5DD0();
        sub_20A5DD5D8(v90, (uint64_t (*)(void))type metadata accessor for AttributionSource);
        uint64_t v91 = sub_20A8CE720();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v121, 1, 1, v91);
        uint64_t v92 = swift_allocObject();
        swift_weakInit();
        uint64_t v93 = v123;
        id v94 = v118;
        uint64_t v95 = v120;
        (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v118, v122, v120);
        v136(v126, v141, v24);
        sub_20A8CE700();
        swift_retain();
        uint64_t v96 = sub_20A8CE6F0();
        unint64_t v97 = (*(unsigned __int8 *)(v93 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
        uint64_t v98 = v129;
        unint64_t v99 = (v117 + *((unsigned __int8 *)v129 + 80) + v97) & ~(unint64_t)*((unsigned __int8 *)v129 + 80);
        uint64_t v100 = (char *)swift_allocObject();
        uint64_t v101 = MEMORY[0x263F8F500];
        *((void *)v100 + 2) = v96;
        *((void *)v100 + 3) = v101;
        *((void *)v100 + 4) = v92;
        ((void (*)(char *, char *, uint64_t))v140)(&v100[v97], v94, v95);
        ((void (*)(char *, char *, uint64_t))v98[4])(&v100[v99], v126, v24);
        swift_release();
        uint64_t v102 = sub_20A5D973C(v121, (uint64_t)&unk_26763C638, (uint64_t)v100);
        (*(void (**)(char *, uint64_t))(v123 + 8))(v122, v95);
        v132(v135, v138);
        *(void *)&v131[v139] = v102;
        return swift_release();
      }
      else if (v80 == *MEMORY[0x263F7AD80])
      {
        ((void (*)(char *, uint64_t))v69[12])(v65, v55);
        uint64_t v103 = v116;
        id v104 = v115;
        (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v115, v65, v119);
        char v140 = *(void **)(v49 + 16);
        uint64_t v105 = sub_20A8C3560();
        uint64_t v107 = v106;
        uint64_t v109 = v133;
        uint64_t v108 = v134;
        sub_20A8C3570();
        uint64_t v110 = sub_20A5DCB90();
        *uint64_t v108 = v105;
        v108[1] = v107;
        *(uint64_t *)((char *)v108 + *(int *)(v109 + 24)) = v110;
        sub_20A5DD38C(&qword_26AC68B60, (void (*)(uint64_t))type metadata accessor for AttributionSource);
        sub_20A8C5DD0();
        sub_20A5DD5D8((uint64_t)v108, (uint64_t (*)(void))type metadata accessor for AttributionSource);
        (*(void (**)(char *, uint64_t))(v103 + 8))(v104, v119);
        return ((uint64_t (*)(char *, uint64_t))v132)(v135, v55);
      }
      else
      {
        uint64_t result = sub_20A8CF520();
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_20A5DAF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[17] = a5;
  v6[18] = a6;
  v6[16] = a4;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A5DDD94(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  v6[19] = swift_task_alloc();
  v6[20] = type metadata accessor for AttributionSource();
  v6[21] = swift_task_alloc();
  v6[22] = swift_task_alloc();
  v6[23] = swift_task_alloc();
  uint64_t v8 = sub_20A8C3580();
  v6[24] = v8;
  v6[25] = *(void *)(v8 - 8);
  v6[26] = swift_task_alloc();
  sub_20A5DD544();
  v6[27] = v9;
  v6[28] = swift_task_alloc();
  sub_20A5DDD94(0, &qword_26AC68AA0, MEMORY[0x263F7AC30], v7);
  v6[29] = swift_task_alloc();
  v6[30] = swift_task_alloc();
  v6[31] = swift_task_alloc();
  uint64_t v10 = sub_20A8C5B40();
  v6[32] = v10;
  v6[33] = *(void *)(v10 - 8);
  v6[34] = swift_task_alloc();
  sub_20A5DDD94(0, &qword_26AC68AB8, MEMORY[0x263F7AD78], v7);
  v6[35] = swift_task_alloc();
  v6[36] = swift_task_alloc();
  sub_20A8CE700();
  v6[37] = sub_20A8CE6F0();
  uint64_t v12 = sub_20A8CE6E0();
  v6[38] = v12;
  v6[39] = v11;
  return MEMORY[0x270FA2498](sub_20A5DB25C, v12, v11);
}

uint64_t sub_20A5DB25C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = v0[33];
    uint64_t v2 = v0[34];
    uint64_t v4 = v0[32];
    sub_20A4342F4(Strong + OBJC_IVAR____TtC8StocksUI19AttributionProvider_attributionAssetManager, (uint64_t)(v0 + 2));
    swift_release();
    uint64_t v5 = v0[5];
    uint64_t v6 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
    id v7 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v7, sel_scale);
    unint64_t v9 = v8;

    (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, *MEMORY[0x263F7CDA0], v4);
    uint64_t v10 = (void *)swift_task_alloc();
    v0[40] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_20A5DBB24;
    uint64_t v11 = v0[36];
    uint64_t v12 = v0[34];
    uint64_t v13 = v0[17];
    v14.n128_u64[0] = v9;
    return MEMORY[0x270F78A88](v11, v13, v12, v5, v6, v14);
  }
  uint64_t v15 = v0[36];
  swift_release();
  uint64_t v16 = sub_20A8C3910();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
  swift_beginAccess();
  uint64_t v18 = swift_weakLoadStrong();
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v66 = v17;
    uint64_t v67 = v16;
    uint64_t v21 = v0[30];
    uint64_t v20 = v0[31];
    uint64_t v22 = v0[28];
    uint64_t v68 = v0[27];
    uint64_t v24 = v0[24];
    uint64_t v23 = v0[25];
    (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v20, v0[18], v24);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v24);
    uint64_t v25 = v19 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_currentSource;
    swift_beginAccess();
    uint64_t v26 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AC30];
    sub_20A5DDD14(v25, v21, &qword_26AC68AA0, MEMORY[0x263F7AC30]);
    uint64_t v27 = v22 + *(int *)(v68 + 48);
    sub_20A5DDD14(v20, v22, &qword_26AC68AA0, v26);
    sub_20A5DDD14(v21, v27, &qword_26AC68AA0, v26);
    uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
    if (v28(v22, 1, v24) == 1)
    {
      uint64_t v29 = v0[31];
      uint64_t v30 = v0[24];
      uint64_t v31 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AC30];
      sub_20A5DD6CC(v0[30], &qword_26AC68AA0, MEMORY[0x263F7AC30]);
      sub_20A5DD6CC(v29, &qword_26AC68AA0, v31);
      if (v28(v27, 1, v30) == 1)
      {
        sub_20A5DD6CC(v0[28], &qword_26AC68AA0, MEMORY[0x263F7AC30]);
LABEL_15:
        char v48 = sub_20A8CE740();
        uint64_t v49 = v0[36];
        if ((v48 & 1) == 0)
        {
          uint64_t v51 = v0[35];
          uint64_t v53 = v0[21];
          char v52 = (uint64_t *)v0[22];
          uint64_t v55 = v0[19];
          uint64_t v54 = v0[20];
          sub_20A8C5DB0();
          uint64_t v64 = *v52;
          uint64_t v65 = v52[1];
          swift_bridgeObjectRetain();
          sub_20A5DD5D8((uint64_t)v52, (uint64_t (*)(void))type metadata accessor for AttributionSource);
          sub_20A8C5DB0();
          sub_20A5DDD14(v53 + *(int *)(v54 + 20), v55, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
          sub_20A5DD5D8(v53, (uint64_t (*)(void))type metadata accessor for AttributionSource);
          sub_20A5DDD14(v49, v51, &qword_26AC68AB8, MEMORY[0x263F7AD78]);
          int v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v51, 1, v67);
          uint64_t v57 = v0[35];
          if (v56 == 1)
          {
            sub_20A5DD6CC(v0[35], &qword_26AC68AB8, MEMORY[0x263F7AD78]);
            uint64_t v58 = 0;
          }
          else
          {
            uint64_t v58 = sub_20A5DCB90();
            (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v57, v67);
          }
          uint64_t v59 = v0[36];
          uint64_t v60 = (void *)v0[23];
          uint64_t v61 = v0[19];
          uint64_t v62 = v0[20];
          *uint64_t v60 = v64;
          v60[1] = v65;
          sub_20A5A0EE4(v61, (uint64_t)v60 + *(int *)(v54 + 20));
          *(void *)((char *)v60 + *(int *)(v62 + 24)) = v58;
          sub_20A5DD38C(&qword_26AC68B60, (void (*)(uint64_t))type metadata accessor for AttributionSource);
          sub_20A8C5DD0();
          sub_20A5DD5D8((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for AttributionSource);
          sub_20A5DD6CC(v59, &qword_26AC68AB8, MEMORY[0x263F7AD78]);
          goto LABEL_18;
        }
        uint64_t v41 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AD78];
        uint64_t v40 = v0[36];
LABEL_17:
        sub_20A5DD6CC(v40, &qword_26AC68AB8, v41);
LABEL_18:
        swift_release();
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v32 = v0[24];
      sub_20A5DDD14(v0[28], v0[29], &qword_26AC68AA0, MEMORY[0x263F7AC30]);
      unsigned int v33 = v28(v27, 1, v32);
      uint64_t v35 = v0[30];
      uint64_t v34 = v0[31];
      uint64_t v36 = v0[29];
      if (v33 != 1)
      {
        uint64_t v69 = v0[28];
        uint64_t v43 = v0[25];
        uint64_t v42 = v0[26];
        uint64_t v44 = v0[24];
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32))(v42, v27, v44);
        sub_20A5DD38C((unint64_t *)&unk_26AC68A90, MEMORY[0x263F7AC30]);
        char v45 = sub_20A8CE210();
        uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
        v46(v42, v44);
        uint64_t v47 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AC30];
        sub_20A5DD6CC(v35, &qword_26AC68AA0, MEMORY[0x263F7AC30]);
        sub_20A5DD6CC(v34, &qword_26AC68AA0, v47);
        v46(v36, v44);
        sub_20A5DD6CC(v69, &qword_26AC68AA0, v47);
        if (v45) {
          goto LABEL_15;
        }
LABEL_13:
        uint64_t v40 = v0[36];
        uint64_t v41 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AD78];
        goto LABEL_17;
      }
      uint64_t v37 = v0[24];
      uint64_t v38 = v0[25];
      uint64_t v39 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AC30];
      sub_20A5DD6CC(v0[30], &qword_26AC68AA0, MEMORY[0x263F7AC30]);
      sub_20A5DD6CC(v34, &qword_26AC68AA0, v39);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
    }
    sub_20A5DD5D8(v0[28], (uint64_t (*)(void))sub_20A5DD544);
    goto LABEL_13;
  }
  sub_20A5DD6CC(v0[36], &qword_26AC68AB8, MEMORY[0x263F7AD78]);
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v50 = (uint64_t (*)(void))v0[1];
  return v50();
}

uint64_t sub_20A5DBB24()
{
  uint64_t v3 = (void *)*v1;
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v4 = v2[34];
  uint64_t v5 = v2[33];
  uint64_t v6 = v2[32];
  if (v0)
  {

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = v3[38];
    uint64_t v8 = v3[39];
    unint64_t v9 = sub_20A5DC424;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = v3[38];
    uint64_t v8 = v3[39];
    unint64_t v9 = sub_20A5DBCB8;
  }
  return MEMORY[0x270FA2498](v9, v7, v8);
}

uint64_t sub_20A5DBCB8()
{
  uint64_t v1 = v0[36];
  swift_release();
  uint64_t v2 = sub_20A8C3910();
  uint64_t v3 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_20A5DD6CC(v0[36], &qword_26AC68AB8, MEMORY[0x263F7AD78]);
    goto LABEL_15;
  }
  uint64_t v5 = Strong;
  uint64_t v52 = v3;
  uint64_t v53 = v2;
  uint64_t v7 = v0[30];
  uint64_t v6 = v0[31];
  uint64_t v8 = v0[28];
  uint64_t v54 = v0[27];
  uint64_t v10 = v0[24];
  uint64_t v9 = v0[25];
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 16))(v6, v0[18], v10);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v10);
  uint64_t v11 = v5 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_currentSource;
  swift_beginAccess();
  uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AC30];
  sub_20A5DDD14(v11, v7, &qword_26AC68AA0, MEMORY[0x263F7AC30]);
  uint64_t v13 = v8 + *(int *)(v54 + 48);
  sub_20A5DDD14(v6, v8, &qword_26AC68AA0, v12);
  sub_20A5DDD14(v7, v13, &qword_26AC68AA0, v12);
  __n128 v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v14(v8, 1, v10) != 1)
  {
    uint64_t v18 = v0[24];
    sub_20A5DDD14(v0[28], v0[29], &qword_26AC68AA0, MEMORY[0x263F7AC30]);
    int v19 = v14(v13, 1, v18);
    uint64_t v21 = v0[30];
    uint64_t v20 = v0[31];
    uint64_t v22 = v0[29];
    if (v19 != 1)
    {
      uint64_t v55 = v0[28];
      uint64_t v29 = v0[25];
      uint64_t v28 = v0[26];
      uint64_t v30 = v0[24];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v28, v13, v30);
      sub_20A5DD38C((unint64_t *)&unk_26AC68A90, MEMORY[0x263F7AC30]);
      char v31 = sub_20A8CE210();
      uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      v32(v28, v30);
      unsigned int v33 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AC30];
      sub_20A5DD6CC(v21, &qword_26AC68AA0, MEMORY[0x263F7AC30]);
      sub_20A5DD6CC(v20, &qword_26AC68AA0, v33);
      v32(v22, v30);
      sub_20A5DD6CC(v55, &qword_26AC68AA0, v33);
      if (v31) {
        goto LABEL_11;
      }
LABEL_9:
      uint64_t v26 = v0[36];
      uint64_t v27 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AD78];
      goto LABEL_13;
    }
    uint64_t v23 = v0[24];
    uint64_t v24 = v0[25];
    uint64_t v25 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AC30];
    sub_20A5DD6CC(v0[30], &qword_26AC68AA0, MEMORY[0x263F7AC30]);
    sub_20A5DD6CC(v20, &qword_26AC68AA0, v25);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
LABEL_8:
    sub_20A5DD5D8(v0[28], (uint64_t (*)(void))sub_20A5DD544);
    goto LABEL_9;
  }
  uint64_t v15 = v0[31];
  uint64_t v16 = v0[24];
  uint64_t v17 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AC30];
  sub_20A5DD6CC(v0[30], &qword_26AC68AA0, MEMORY[0x263F7AC30]);
  sub_20A5DD6CC(v15, &qword_26AC68AA0, v17);
  if (v14(v13, 1, v16) != 1) {
    goto LABEL_8;
  }
  sub_20A5DD6CC(v0[28], &qword_26AC68AA0, MEMORY[0x263F7AC30]);
LABEL_11:
  char v34 = sub_20A8CE740();
  uint64_t v35 = v0[36];
  if ((v34 & 1) == 0)
  {
    uint64_t v38 = v0[35];
    uint64_t v40 = v0[21];
    uint64_t v39 = (uint64_t *)v0[22];
    uint64_t v42 = v0[19];
    uint64_t v41 = v0[20];
    sub_20A8C5DB0();
    uint64_t v50 = *v39;
    uint64_t v51 = v39[1];
    swift_bridgeObjectRetain();
    sub_20A5DD5D8((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for AttributionSource);
    sub_20A8C5DB0();
    sub_20A5DDD14(v40 + *(int *)(v41 + 20), v42, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
    sub_20A5DD5D8(v40, (uint64_t (*)(void))type metadata accessor for AttributionSource);
    sub_20A5DDD14(v35, v38, &qword_26AC68AB8, MEMORY[0x263F7AD78]);
    int v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v38, 1, v53);
    uint64_t v44 = v0[35];
    if (v43 == 1)
    {
      sub_20A5DD6CC(v0[35], &qword_26AC68AB8, MEMORY[0x263F7AD78]);
      uint64_t v45 = 0;
    }
    else
    {
      uint64_t v45 = sub_20A5DCB90();
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v44, v53);
    }
    uint64_t v46 = v0[36];
    uint64_t v47 = (void *)v0[23];
    uint64_t v48 = v0[19];
    uint64_t v49 = v0[20];
    *uint64_t v47 = v50;
    v47[1] = v51;
    sub_20A5A0EE4(v48, (uint64_t)v47 + *(int *)(v41 + 20));
    *(void *)((char *)v47 + *(int *)(v49 + 24)) = v45;
    sub_20A5DD38C(&qword_26AC68B60, (void (*)(uint64_t))type metadata accessor for AttributionSource);
    sub_20A8C5DD0();
    sub_20A5DD5D8((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for AttributionSource);
    sub_20A5DD6CC(v46, &qword_26AC68AB8, MEMORY[0x263F7AD78]);
    goto LABEL_14;
  }
  uint64_t v27 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AD78];
  uint64_t v26 = v0[36];
LABEL_13:
  sub_20A5DD6CC(v26, &qword_26AC68AB8, v27);
LABEL_14:
  swift_release();
LABEL_15:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = (uint64_t (*)(void))v0[1];
  return v36();
}

uint64_t sub_20A5DC424()
{
  uint64_t v1 = v0[36];
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  uint64_t v2 = sub_20A8C3910();
  uint64_t v3 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v1, 1, 1, v2);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_20A5DD6CC(v0[36], &qword_26AC68AB8, MEMORY[0x263F7AD78]);
    goto LABEL_15;
  }
  uint64_t v5 = Strong;
  uint64_t v52 = v3;
  uint64_t v53 = v2;
  uint64_t v7 = v0[30];
  uint64_t v6 = v0[31];
  uint64_t v8 = v0[28];
  uint64_t v54 = v0[27];
  uint64_t v10 = v0[24];
  uint64_t v9 = v0[25];
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 16))(v6, v0[18], v10);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v10);
  uint64_t v11 = v5 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_currentSource;
  swift_beginAccess();
  uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AC30];
  sub_20A5DDD14(v11, v7, &qword_26AC68AA0, MEMORY[0x263F7AC30]);
  uint64_t v13 = v8 + *(int *)(v54 + 48);
  sub_20A5DDD14(v6, v8, &qword_26AC68AA0, v12);
  sub_20A5DDD14(v7, v13, &qword_26AC68AA0, v12);
  __n128 v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v14(v8, 1, v10) != 1)
  {
    uint64_t v18 = v0[24];
    sub_20A5DDD14(v0[28], v0[29], &qword_26AC68AA0, MEMORY[0x263F7AC30]);
    int v19 = v14(v13, 1, v18);
    uint64_t v21 = v0[30];
    uint64_t v20 = v0[31];
    uint64_t v22 = v0[29];
    if (v19 != 1)
    {
      uint64_t v55 = v0[28];
      uint64_t v29 = v0[25];
      uint64_t v28 = v0[26];
      uint64_t v30 = v0[24];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v28, v13, v30);
      sub_20A5DD38C((unint64_t *)&unk_26AC68A90, MEMORY[0x263F7AC30]);
      char v31 = sub_20A8CE210();
      uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      v32(v28, v30);
      unsigned int v33 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AC30];
      sub_20A5DD6CC(v21, &qword_26AC68AA0, MEMORY[0x263F7AC30]);
      sub_20A5DD6CC(v20, &qword_26AC68AA0, v33);
      v32(v22, v30);
      sub_20A5DD6CC(v55, &qword_26AC68AA0, v33);
      if (v31) {
        goto LABEL_11;
      }
LABEL_9:
      uint64_t v26 = v0[36];
      uint64_t v27 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AD78];
      goto LABEL_13;
    }
    uint64_t v23 = v0[24];
    uint64_t v24 = v0[25];
    uint64_t v25 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AC30];
    sub_20A5DD6CC(v0[30], &qword_26AC68AA0, MEMORY[0x263F7AC30]);
    sub_20A5DD6CC(v20, &qword_26AC68AA0, v25);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
LABEL_8:
    sub_20A5DD5D8(v0[28], (uint64_t (*)(void))sub_20A5DD544);
    goto LABEL_9;
  }
  uint64_t v15 = v0[31];
  uint64_t v16 = v0[24];
  uint64_t v17 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AC30];
  sub_20A5DD6CC(v0[30], &qword_26AC68AA0, MEMORY[0x263F7AC30]);
  sub_20A5DD6CC(v15, &qword_26AC68AA0, v17);
  if (v14(v13, 1, v16) != 1) {
    goto LABEL_8;
  }
  sub_20A5DD6CC(v0[28], &qword_26AC68AA0, MEMORY[0x263F7AC30]);
LABEL_11:
  char v34 = sub_20A8CE740();
  uint64_t v35 = v0[36];
  if ((v34 & 1) == 0)
  {
    uint64_t v38 = v0[35];
    uint64_t v40 = v0[21];
    uint64_t v39 = (uint64_t *)v0[22];
    uint64_t v42 = v0[19];
    uint64_t v41 = v0[20];
    sub_20A8C5DB0();
    uint64_t v50 = *v39;
    uint64_t v51 = v39[1];
    swift_bridgeObjectRetain();
    sub_20A5DD5D8((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for AttributionSource);
    sub_20A8C5DB0();
    sub_20A5DDD14(v40 + *(int *)(v41 + 20), v42, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
    sub_20A5DD5D8(v40, (uint64_t (*)(void))type metadata accessor for AttributionSource);
    sub_20A5DDD14(v35, v38, &qword_26AC68AB8, MEMORY[0x263F7AD78]);
    int v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v38, 1, v53);
    uint64_t v44 = v0[35];
    if (v43 == 1)
    {
      sub_20A5DD6CC(v0[35], &qword_26AC68AB8, MEMORY[0x263F7AD78]);
      uint64_t v45 = 0;
    }
    else
    {
      uint64_t v45 = sub_20A5DCB90();
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v44, v53);
    }
    uint64_t v46 = v0[36];
    uint64_t v47 = (void *)v0[23];
    uint64_t v48 = v0[19];
    uint64_t v49 = v0[20];
    *uint64_t v47 = v50;
    v47[1] = v51;
    sub_20A5A0EE4(v48, (uint64_t)v47 + *(int *)(v41 + 20));
    *(void *)((char *)v47 + *(int *)(v49 + 24)) = v45;
    sub_20A5DD38C(&qword_26AC68B60, (void (*)(uint64_t))type metadata accessor for AttributionSource);
    sub_20A8C5DD0();
    sub_20A5DD5D8((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for AttributionSource);
    sub_20A5DD6CC(v46, &qword_26AC68AB8, MEMORY[0x263F7AD78]);
    goto LABEL_14;
  }
  uint64_t v27 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AD78];
  uint64_t v26 = v0[36];
LABEL_13:
  sub_20A5DD6CC(v26, &qword_26AC68AB8, v27);
LABEL_14:
  swift_release();
LABEL_15:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = (uint64_t (*)(void))v0[1];
  return v36();
}

uint64_t sub_20A5DCB90()
{
  sub_20A5DDD94(0, &qword_26763C660, MEMORY[0x263F7AD70], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)v35 - v1;
  uint64_t v3 = sub_20A8C3900();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v37 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v35 - v7;
  sub_20A8C38D0();
  uint64_t v9 = sub_20A8C38E0();
  unint64_t v11 = v10;
  sub_20A8C38F0();
  double v13 = v12;
  id v14 = objc_allocWithZone(MEMORY[0x263F827E8]);
  uint64_t v15 = (void *)sub_20A8C2550();
  id v16 = objc_msgSend(v14, sel_initWithData_scale_, v15, v13);
  sub_20A531704(v9, v11);

  uint64_t v17 = *(void (**)(char *, uint64_t))(v4 + 8);
  v17(v8, v3);
  if (!v16) {
    return (uint64_t)v16;
  }
  id v18 = v16;
  sub_20A8C38C0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {

    sub_20A5DD6CC((uint64_t)v2, &qword_26763C660, MEMORY[0x263F7AD70]);
    return (uint64_t)v16;
  }
  int v19 = v37;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v37, v2, v3);
  uint64_t v20 = sub_20A8C38E0();
  unint64_t v22 = v21;
  sub_20A8C38F0();
  double v24 = v23;
  id v25 = objc_allocWithZone(MEMORY[0x263F827E8]);
  uint64_t v26 = (void *)sub_20A8C2550();
  id v27 = objc_msgSend(v25, sel_initWithData_scale_, v26, v24);
  sub_20A531704(v20, v22);

  if (!v27)
  {
LABEL_9:

    v17(v19, v3);
    return (uint64_t)v16;
  }
  id v28 = objc_msgSend(v18, sel_imageAsset);
  if (!v28)
  {
LABEL_8:

    goto LABEL_9;
  }
  uint64_t v29 = v28;
  v35[1] = v35;
  uint64_t v36 = v17;
  MEMORY[0x270FA5388](v28);
  v35[-2] = v19;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = sub_20A5DDDF8;
  *(void *)(v30 + 24) = &v35[-4];
  aBlock[4] = sub_20A5DDE60;
  aBlock[5] = v30;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A5DD9FC;
  aBlock[3] = &block_descriptor_19;
  char v31 = _Block_copy(aBlock);
  uint64_t v32 = self;
  swift_retain();
  id v33 = objc_msgSend(v32, sel_traitCollectionWithTraits_, v31);
  _Block_release(v31);
  swift_release();
  LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v31 & 1) == 0)
  {
    objc_msgSend(v29, sel_registerImage_withTraitCollection_, v27, v33);

    id v27 = v33;
    uint64_t v17 = v36;
    int v19 = v37;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A5DD00C()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_currentDownloadTask))
  {
    swift_retain();
    sub_20A8CE730();
    swift_release();
  }
  swift_release();
  sub_20A5DD6CC(v0 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_currentSource, &qword_26AC68AA0, MEMORY[0x263F7AC30]);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_attributionProvider);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_attributionAssetManager);

  return swift_deallocClassInstance();
}

uint64_t sub_20A5DD11C()
{
  return type metadata accessor for AttributionProvider();
}

uint64_t type metadata accessor for AttributionProvider()
{
  uint64_t result = qword_26AC67600;
  if (!qword_26AC67600) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A5DD170()
{
  sub_20A5DDD94(319, &qword_26AC68AA0, MEMORY[0x263F7AC30], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unint64_t sub_20A5DD258()
{
  unint64_t result = qword_26AC7F748;
  if (!qword_26AC7F748)
  {
    sub_20A5DDD94(255, (unint64_t *)&qword_26AC7F740, MEMORY[0x263F7CF38], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7F748);
  }
  return result;
}

void sub_20A5DD2E0()
{
  if (!qword_26AC68B00)
  {
    sub_20A8C2530();
    sub_20A45A06C();
    sub_20A5DD38C(&qword_26AC68A60, MEMORY[0x263F06EA8]);
    unint64_t v0 = sub_20A8C5CB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC68B00);
    }
  }
}

uint64_t sub_20A5DD38C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A5DD3D4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A5DD40C(uint64_t a1)
{
  return sub_20A5D9C7C(a1, v1);
}

uint64_t sub_20A5DD414()
{
  uint64_t v1 = sub_20A8C3580();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_20A5DD4E0()
{
  uint64_t v1 = *(void *)(sub_20A8C3580() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_20A5D9DC4(v2, v3);
}

void sub_20A5DD544()
{
  if (!qword_26AC68AA8)
  {
    sub_20A5DDD94(255, &qword_26AC68AA0, MEMORY[0x263F7AC30], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC68AA8);
    }
  }
}

uint64_t sub_20A5DD5D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A5DD638(uint64_t a1, uint64_t a2)
{
  sub_20A5DDD94(0, &qword_26AC68AA0, MEMORY[0x263F7AC30], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A5DD6CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A5DDD94(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A5DD73C()
{
  uint64_t v1 = sub_20A8C38A0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = sub_20A8C3580();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_20A5DD89C(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_20A8C38A0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(sub_20A8C3580() - 8) + 80);
  unint64_t v9 = v6 + v7 + v8;
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = (uint64_t)v1 + v6;
  uint64_t v14 = (uint64_t)v1 + (v9 & ~v8);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  *uint64_t v15 = v3;
  v15[1] = sub_20A490F70;
  return sub_20A5DAF68(a1, v10, v11, v12, v13, v14);
}

uint64_t sub_20A5DD9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);

  return swift_unknownObjectRelease();
}

uint64_t sub_20A5DDA50(uint64_t a1, int *a2)
{
  unint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_20A5DDB2C;
  return v6(a1);
}

uint64_t sub_20A5DDB2C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_20A5DDC24()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A5DDC5C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_20A490F70;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26763C648 + dword_26763C648);
  return v6(a1, v4);
}

uint64_t sub_20A5DDD14(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_20A5DDD94(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_20A5DDD94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id sub_20A5DDDF8(void *a1)
{
  sub_20A8C38F0();
  objc_msgSend(a1, sel_setDisplayScale_);

  return objc_msgSend(a1, sel_setUserInterfaceStyle_, 2);
}

uint64_t sub_20A5DDE50()
{
  return swift_deallocObject();
}

uint64_t sub_20A5DDE60()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void *sub_20A5DDE88(void *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for NewsStockFeedGroupKnobs();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = v8;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = v4;
    sub_20A497708();
    (*(void (**)(void *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(void *)((char *)a1 + *(int *)(v6 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 20));
    *(void *)((char *)a1 + *(int *)(v6 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 24));
    swift_retain();
  }
  swift_retain();
  return a1;
}

uint64_t sub_20A5DDF70(uint64_t a1)
{
  sub_20A497708();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for NewsStockFeedGroupKnobs();
  swift_release();

  return swift_release();
}

uint64_t sub_20A5DDFF8(uint64_t a1, uint64_t a2)
{
  sub_20A497708();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(void *)(a1 + *(int *)(v5 + 20)) = *(void *)(a2 + *(int *)(v5 + 20));
  *(void *)(a1 + *(int *)(v5 + 24)) = *(void *)(a2 + *(int *)(v5 + 24));
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_20A5DE08C(uint64_t a1, uint64_t a2)
{
  sub_20A497708();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(void *)(a1 + *(int *)(v5 + 20)) = *(void *)(a2 + *(int *)(v5 + 20));
  swift_retain();
  swift_release();
  *(void *)(a1 + *(int *)(v5 + 24)) = *(void *)(a2 + *(int *)(v5 + 24));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_20A5DE13C(uint64_t a1, uint64_t a2)
{
  sub_20A497708();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(void *)(a1 + *(int *)(v5 + 20)) = *(void *)(a2 + *(int *)(v5 + 20));
  *(void *)(a1 + *(int *)(v5 + 24)) = *(void *)(a2 + *(int *)(v5 + 24));
  return a1;
}

uint64_t sub_20A5DE1C0(uint64_t a1, uint64_t a2)
{
  sub_20A497708();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(void *)(a1 + *(int *)(v5 + 20)) = *(void *)(a2 + *(int *)(v5 + 20));
  swift_release();
  *(void *)(a1 + *(int *)(v5 + 24)) = *(void *)(a2 + *(int *)(v5 + 24));
  swift_release();
  return a1;
}

uint64_t sub_20A5DE260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A5DE274);
}

uint64_t sub_20A5DE274(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsStockFeedGroupKnobs();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A5DE2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A5DE2F4);
}

uint64_t sub_20A5DE2F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsStockFeedGroupKnobs();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StockFeedGroupKnobs()
{
  uint64_t result = qword_26AC711F0;
  if (!qword_26AC711F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A5DE3B0()
{
  uint64_t result = type metadata accessor for NewsStockFeedGroupKnobs();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A5DE43C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  sub_20A5DEB88(0, (unint64_t *)&qword_26AC6B020, (void (*)(uint64_t))sub_20A497708);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v38 = (char *)&v30 - v5;
  uint64_t v39 = type metadata accessor for NewsStockFeedGroupKnobs();
  uint64_t v37 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5DEB88(0, qword_26AC74C38, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v44 = (uint64_t)&v30 - v12;
  sub_20A5DEBDC();
  uint64_t v14 = v13;
  uint64_t v36 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5DEC38();
  sub_20A8CF8E0();
  if (v2)
  {
    uint64_t v17 = (uint64_t)a1;
  }
  else
  {
    uint64_t v19 = v37;
    id v18 = v38;
    id v33 = a1;
    char v34 = v10;
    uint64_t v32 = v7;
    uint64_t v40 = 0x626F6E4B7377656ELL;
    unint64_t v41 = 0xE900000000000073;
    uint64_t v42 = 0;
    char v43 = 1;
    sub_20A5DEC8C(&qword_26763C6E0, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
    uint64_t v20 = v39;
    uint64_t v31 = v14;
    sub_20A8CF610();
    uint64_t v21 = (uint64_t)v18;
    uint64_t v22 = (uint64_t)v34;
    uint64_t v23 = v44;
    sub_20A5DECD4(v44, (uint64_t)v34);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v22, 1, v20) == 1)
    {
      sub_20A497708();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v21, 1, 1, v24);
      id v25 = v32;
      sub_20A889420(v21, 0, 0, v32);
      sub_20A5DED54(v23);
      sub_20A5DED54(v22);
    }
    else
    {
      sub_20A5DED54(v23);
      id v25 = v32;
      sub_20A4487F8(v22, (uint64_t)v32);
    }
    uint64_t v26 = v36;
    uint64_t v27 = (uint64_t)v33;
    uint64_t v28 = v31;
    sub_20A4487F8((uint64_t)v25, v35);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v28);
    uint64_t v17 = v27;
  }
  return __swift_destroy_boxed_opaque_existential_1(v17);
}

uint64_t sub_20A5DE888@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(void *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 24) = 1;
  return result;
}

uint64_t sub_20A5DE89C()
{
  return *(void *)(v0 + 16);
}

void sub_20A5DE8A8(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(void *)(a1 + 16) = 0;
}

uint64_t sub_20A5DE8B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);
  uint64_t v4 = *(void *)(a2 + 16);
  int v5 = *(unsigned __int8 *)(a2 + 24);
  BOOL v6 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v6 || (char v7 = sub_20A8CF760(), result = 0, (v7 & 1) != 0))
  {
    if (v3)
    {
      if (v5) {
        return 1;
      }
    }
    else
    {
      if (v2 == v4) {
        char v9 = v5;
      }
      else {
        char v9 = 1;
      }
      if ((v9 & 1) == 0) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_20A5DE93C()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_20A8CF880();
  swift_bridgeObjectRetain();
  sub_20A8CE360();
  swift_bridgeObjectRelease();
  sub_20A8CF8A0();
  if (v1 != 1) {
    sub_20A8CF890();
  }
  return sub_20A8CF8C0();
}

uint64_t sub_20A5DE9D8()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_20A8CE360();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    return sub_20A8CF8A0();
  }
  sub_20A8CF8A0();
  return sub_20A8CF890();
}

uint64_t sub_20A5DEA60()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_20A8CF880();
  swift_bridgeObjectRetain();
  sub_20A8CE360();
  swift_bridgeObjectRelease();
  sub_20A8CF8A0();
  if (v1 != 1) {
    sub_20A8CF890();
  }
  return sub_20A8CF8C0();
}

uint64_t sub_20A5DEAF8(uint64_t a1)
{
  unint64_t v2 = sub_20A5DEC38();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A5DEB34(uint64_t a1)
{
  unint64_t v2 = sub_20A5DEC38();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20A5DEB70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A5DE43C(a1, a2);
}

void sub_20A5DEB88(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_20A5DEBDC()
{
  if (!qword_26763C6D0)
  {
    sub_20A5DEC38();
    unint64_t v0 = sub_20A8CF660();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763C6D0);
    }
  }
}

unint64_t sub_20A5DEC38()
{
  unint64_t result = qword_26763C6D8;
  if (!qword_26763C6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C6D8);
  }
  return result;
}

uint64_t sub_20A5DEC8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A5DECD4(uint64_t a1, uint64_t a2)
{
  sub_20A5DEB88(0, qword_26AC74C38, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A5DED54(uint64_t a1)
{
  sub_20A5DEB88(0, qword_26AC74C38, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithCopy for StockFeedGroupKnobs.CodingKeys(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StockFeedGroupKnobs.CodingKeys(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StockFeedGroupKnobs.CodingKeys(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockFeedGroupKnobs.CodingKeys(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockFeedGroupKnobs.CodingKeys(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedGroupKnobs.CodingKeys()
{
  return &type metadata for StockFeedGroupKnobs.CodingKeys;
}

unint64_t sub_20A5DEF68()
{
  unint64_t result = qword_26763C6E8;
  if (!qword_26763C6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C6E8);
  }
  return result;
}

unint64_t sub_20A5DEFC0()
{
  unint64_t result = qword_26763C6F0;
  if (!qword_26763C6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C6F0);
  }
  return result;
}

unint64_t sub_20A5DF018()
{
  unint64_t result = qword_26763C6F8;
  if (!qword_26763C6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C6F8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for StockLocation(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

void *assignWithCopy for StockLocation(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for StockLocation(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for StockLocation(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for StockLocation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockLocation()
{
  return &type metadata for StockLocation;
}

uint64_t type metadata accessor for PlacardViewRenderer()
{
  return self;
}

unint64_t sub_20A5DF1E8(uint64_t a1)
{
  unint64_t result = sub_20A5DF210();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_20A5DF210()
{
  unint64_t result = qword_26AC710A0;
  if (!qword_26AC710A0)
  {
    type metadata accessor for PlacardViewRenderer();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC710A0);
  }
  return result;
}

uint64_t sub_20A5DF264(uint64_t a1, void *a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10)
{
  uint64_t v110 = a8;
  uint64_t v109 = a7;
  uint64_t v107 = a6;
  unint64_t v105 = a5;
  uint64_t v104 = a4;
  unint64_t v103 = a3;
  uint64_t v111 = a2;
  uint64_t v108 = a10;
  unint64_t v106 = a9;
  uint64_t v121 = *MEMORY[0x263EF8340];
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v90 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_20A8CD5D0();
  uint64_t v88 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v87 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5DFF98(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v95 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5E0030(0);
  MEMORY[0x270FA5388](v16 - 8);
  id v18 = (char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_20A8CD0F0();
  uint64_t v91 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v20 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_20A8C80B0();
  uint64_t v93 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v22 = (uint64_t *)((char *)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = sub_20A8C4020();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v100 = (char *)&v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v87 - v27;
  uint64_t v99 = v29;
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v87 - v31;
  sub_20A456468();
  char v34 = v33;
  sub_20A8CCF50();
  uint64_t v35 = v24;
  uint64_t v112 = MEMORY[0x263F8EE78];
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  uint64_t v36 = v24 + 16;
  uint64_t v98 = v37;
  v37(v28, v32, v23);
  int v38 = (*(uint64_t (**)(char *, uint64_t))(v35 + 88))(v28, v23);
  BOOL v39 = v38 == *MEMORY[0x263F7AF48];
  uint64_t v102 = v32;
  uint64_t v101 = v23;
  if (v39)
  {
    uint64_t v96 = v36;
    uint64_t v97 = v35;
    (*(void (**)(char *, uint64_t))(v35 + 96))(v28, v23);
    swift_unknownObjectRelease();
    sub_20A8CCF70();
    unint64_t v113 = v103;
    uint64_t v114 = v104;
    unint64_t v115 = v105;
    uint64_t v116 = v107;
    uint64_t v117 = v109;
    uint64_t v118 = v110;
    unint64_t v119 = v106;
    uint64_t v120 = v108;
    sub_20A8C7E50();
    uint64_t v90 = (char *)sub_20A8C7E30();
    sub_20A455EF8((uint64_t)v20);
    sub_20A8CD090();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v20, v92);
    uint64_t v40 = sub_20A8CC710();
    int v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v18, 1, v40);
    sub_20A5E02A0((uint64_t)v18, (uint64_t (*)(void))sub_20A5E0030);
    uint64_t v42 = sub_20A8C3F80();
    uint64_t v43 = sub_20A8CCF30();
    uint64_t *v22 = v42;
    if (v41 == 1)
    {
      v22[1] = 0;
      _OWORD v22[2] = 0;
      v22[3] = v43;
      uint64_t v45 = v22 + 4;
      uint64_t v46 = (unsigned int *)MEMORY[0x263F596C0];
    }
    else
    {
      v22[1] = v43;
      uint64_t v45 = v22 + 2;
      uint64_t v46 = (unsigned int *)MEMORY[0x263F596B8];
    }
    *uint64_t v45 = v44;
    uint64_t v59 = v93;
    uint64_t v60 = v94;
    (*(void (**)(uint64_t *, void, uint64_t))(v93 + 104))(v22, *v46, v94);
    sub_20A45494C();
    uint64_t v62 = &v28[*(int *)(v61 + 48)];
    uint64_t v92 = a1;
    sub_20A8CCF70();
    LODWORD(v91) = v113;
    uint64_t v63 = sub_20A8CDA50();
    uint64_t v64 = (uint64_t)v95;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v95, 1, 1, v63);
    uint64_t v65 = MEMORY[0x2105203C0](v22, v90, v64);
    swift_bridgeObjectRelease();
    sub_20A5E02A0(v64, (uint64_t (*)(void))sub_20A5DFF98);
    sub_20A4ACBE0(v65);
    (*(void (**)(uint64_t *, uint64_t))(v59 + 8))(v22, v60);
    uint64_t v66 = sub_20A8C33A0();
    (*(void (**)(char *, uint64_t))(*(void *)(v66 - 8) + 8))(v62, v66);
    uint64_t v67 = v34;
  }
  else
  {
    uint64_t v95 = v34;
    uint64_t v47 = a1;
    if (v38 != *MEMORY[0x263F7AF38])
    {
      unint64_t v113 = v103;
      uint64_t v114 = v104;
      unint64_t v115 = v105;
      uint64_t v116 = v107;
      uint64_t v117 = v109;
      uint64_t v118 = v110;
      unint64_t v119 = v106;
      uint64_t v120 = v108;
      uint64_t v68 = sub_20A8C7E50();
      (*(void (**)(void *, uint64_t))(*(void *)(v68 - 8) + 8))(v111, v68);
      (*(void (**)(uint64_t))(*((void *)v95 - 1) + 8))(a1);
      uint64_t v69 = *(void (**)(char *, uint64_t))(v35 + 8);
      uint64_t v70 = v101;
      v69(v102, v101);
      v69(v28, v70);
      return 0;
    }
    uint64_t v96 = v36;
    uint64_t v97 = v35;
    (*(void (**)(char *, uint64_t))(v35 + 96))(v28, v101);
    uint64_t v48 = sub_20A8C8720();
    uint64_t v49 = sub_20A5A5C8C((uint64_t)v102, v111, v103, v104, v105, v107, v109, v110, v106, v108);
    sub_20A8C3F80();
    uint64_t v50 = v88;
    uint64_t v51 = v87;
    uint64_t v52 = v89;
    (*(void (**)(char *, void, uint64_t))(v88 + 104))(v87, *MEMORY[0x263F59C98], v89);
    uint64_t v53 = sub_20A8C8710();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);
    sub_20A5DFFCC(0, (unint64_t *)&qword_26AC7FF90, (uint64_t (*)(uint64_t))sub_20A564C6C, MEMORY[0x263F8E0F8]);
    uint64_t inited = swift_initStackObject();
    uint64_t v55 = (void *)inited;
    *(_OWORD *)(inited + 16) = xmmword_20A8D5CB0;
    if (v49)
    {
      uint64_t v56 = MEMORY[0x263F7D410];
      uint64_t v57 = v49;
      uint64_t v58 = v48;
    }
    else
    {
      uint64_t v57 = 0;
      uint64_t v58 = 0;
      uint64_t v56 = 0;
      *(void *)(inited + 40) = 0;
      *(void *)(inited + 48) = 0;
    }
    *(void *)(inited + 32) = v57;
    *(void *)(inited + 56) = v58;
    *(void *)(inited + 64) = v56;
    uint64_t v72 = v47;
    if (v53)
    {
      uint64_t v73 = MEMORY[0x263F7D410];
      uint64_t v74 = v48;
    }
    else
    {
      uint64_t v74 = 0;
      uint64_t v73 = 0;
      *(void *)(inited + 80) = 0;
      *(void *)(inited + 88) = 0;
    }
    *(void *)(inited + 72) = v53;
    *(void *)(inited + 96) = v74;
    *(void *)(inited + 104) = v73;
    swift_getObjectType();
    swift_retain();
    swift_retain();
    uint64_t v75 = (uint64_t)v90;
    sub_20A8CECA0();
    uint64_t v76 = sub_20A8C8680();
    sub_20A5E02A0(v75, (uint64_t (*)(void))sub_20A4845D0);
    if (v76)
    {
      uint64_t v77 = MEMORY[0x263F7D410];
    }
    else
    {
      uint64_t v48 = 0;
      uint64_t v77 = 0;
      v55[15] = 0;
      v55[16] = 0;
    }
    v55[14] = v76;
    v55[17] = v48;
    v55[18] = v77;
    sub_20A4ACBE0((uint64_t)v55);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    LODWORD(v91) = 1;
    uint64_t v67 = v95;
    uint64_t v92 = v72;
  }
  id v78 = v100;
  uint64_t v79 = (uint64_t)v102;
  uint64_t v80 = v101;
  v98(v100, v102, v101);
  uint64_t v81 = v97;
  unint64_t v82 = (*(unsigned __int8 *)(v97 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
  uint64_t v83 = v82 + v99;
  uint64_t v84 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v81 + 32))(v84 + v82, v78, v80);
  *(unsigned char *)(v84 + v83) = v91;
  uint64_t v71 = sub_20A8C8050();
  swift_retain();
  unint64_t v113 = v103;
  uint64_t v114 = v104;
  unint64_t v115 = v105;
  uint64_t v116 = v107;
  uint64_t v117 = v109;
  uint64_t v118 = v110;
  unint64_t v119 = v106;
  uint64_t v120 = v108;
  uint64_t v85 = sub_20A8C7E50();
  (*(void (**)(void *, uint64_t))(*(void *)(v85 - 8) + 8))(v111, v85);
  (*(void (**)(uint64_t, char *))(*((void *)v67 - 1) + 8))(v92, v67);
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v79, v80);
  if (v71) {
    swift_release();
  }
  return v71;
}

void sub_20A5DFF98(uint64_t a1)
{
}

void sub_20A5DFFCC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A5E0030(uint64_t a1)
{
}

uint64_t sub_20A5E0064()
{
  *(unsigned char *)(swift_allocObject() + 16) = 0;
  sub_20A5E0300(&qword_26AC6F968, (void (*)(uint64_t))type metadata accessor for ShareLinkProvider);
  type metadata accessor for MailShareLinkTextProvider();
  swift_allocObject();
  sub_20A5E0300(&qword_26AC76340, (void (*)(uint64_t))type metadata accessor for MailShareLinkTextProvider);
  return sub_20A8CDA60();
}

uint64_t sub_20A5E0188()
{
  uint64_t v1 = sub_20A8C4020();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_20A5E021C()
{
  sub_20A8C4020();

  return sub_20A5E0064();
}

uint64_t sub_20A5E02A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A5E0300(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A5E0348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_20A5DFFCC(0, (unint64_t *)&qword_26AC7FF90, (uint64_t (*)(uint64_t))sub_20A564C6C, MEMORY[0x263F8E0F8]);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_20A8D4540;
  sub_20A45F33C();
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D5CA0;
  *(void *)(inited + 32) = sub_20A55CA68(a2, a3, a4);
  sub_20A8CE620();
  uint64_t v9 = sub_20A4A6740(inited);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_20A8C8A70();
  sub_20A4A690C(v9);
  swift_bridgeObjectRelease();
  sub_20A8C8A50();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_20A8C8A60();
  uint64_t v12 = MEMORY[0x263F7D4D0];
  *(void *)(v7 + 96) = v10;
  *(void *)(v7 + 104) = v12;
  *(void *)(v7 + 72) = v11;
  return v7;
}

uint64_t type metadata accessor for EmptyListModule()
{
  return self;
}

void sub_20A5E04BC(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
}

void sub_20A5E04FC(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(BOOL, uint64_t, uint64_t))
{
  uint64_t v23 = a5;
  uint64_t v33 = a4(0);
  uint64_t v9 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v32 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12.n128_f64[0] = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v34 = MEMORY[0x263F8EE78];
  uint64_t v31 = *(void *)(a3 + 16);
  if (v31)
  {
    unint64_t v15 = 0;
    uint64_t v26 = a3;
    uint64_t v27 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v29 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v30 = v9 + 16;
    uint64_t v24 = a1;
    uint64_t v25 = a2;
    while (v15 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v17 = *(void *)(v9 + 72);
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16))(v14, a3 + v16 + v17 * v15, v33, v12);
      char v18 = a1(v14);
      if (v5)
      {
        (*v27)(v14, v33);
        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      if (v18)
      {
        uint64_t v28 = *v29;
        v28(v32, v14, v33);
        uint64_t v19 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v23(0, *(void *)(v19 + 16) + 1, 1);
          uint64_t v19 = v34;
        }
        unint64_t v21 = *(void *)(v19 + 16);
        unint64_t v20 = *(void *)(v19 + 24);
        if (v21 >= v20 >> 1)
        {
          v23(v20 > 1, v21 + 1, 1);
          uint64_t v19 = v34;
        }
        *(void *)(v19 + 16) = v21 + 1;
        v28((char *)(v19 + v16 + v21 * v17), v32, v33);
        uint64_t v34 = v19;
        a3 = v26;
        a1 = v24;
      }
      else
      {
        (*v27)(v14, v33);
      }
      if (v31 == ++v15) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_20A5E07B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v111 = a2;
  uint64_t v112 = a6;
  uint64_t v114 = a1;
  uint64_t v115 = a3;
  uint64_t v116 = *v7;
  uint64_t v119 = sub_20A8C40E0();
  uint64_t v121 = *(void *)(v119 - 8);
  uint64_t v10 = *(void *)(v121 + 64);
  MEMORY[0x270FA5388](v119);
  uint64_t v117 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v92 - v12;
  sub_20A5E49C4(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v14 - 8);
  unint64_t v16 = (char *)&v92 - v15;
  uint64_t v17 = sub_20A8C3F00();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  MEMORY[0x270FA5388](v17);
  uint64_t v118 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v92 - v21;
  uint64_t v23 = type metadata accessor for WatchlistMembershipCommandContext(0);
  sub_20A44D308(a4 + *(int *)(v23 + 20), (uint64_t)v16);
  uint64_t v120 = v18;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1) {
    return sub_20A5E4A28((uint64_t)v16, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
  }
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v120 + 32);
  uint64_t v113 = v120 + 32;
  uint64_t v108 = v25;
  v25(v22, v16, v17);
  uint64_t v109 = *(void (**)(char *, uint64_t, uint64_t))(v121 + 16);
  uint64_t v110 = v121 + 16;
  v109(v13, a4, v119);
  __swift_project_boxed_opaque_existential_1(v7 + 2, v7[5]);
  unint64_t v106 = v13;
  uint64_t v107 = v22;
  uint64_t v105 = v17;
  if (a5)
  {
    uint64_t v56 = v117;
    sub_20A8C35C0();
    uint64_t v57 = (void *)sub_20A8C40B0();
    uint64_t v58 = v121;
    uint64_t v59 = *(void (**)(char *, uint64_t))(v121 + 8);
    unint64_t v103 = (void (*)(char *, char *, uint64_t))(v121 + 8);
    uint64_t v104 = v59;
    v59(v56, v119);
    uint64_t v60 = sub_20A8C3EC0();
    LODWORD(v101) = sub_20A597330(v60, v61, v57);
    swift_bridgeObjectRelease();
    uint64_t v62 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v62);
    *(&v92 - 4) = (uint64_t)v7;
    *(&v92 - 3) = (uint64_t)v22;
    uint64_t v63 = v22;
    *(&v92 - 2) = (uint64_t)v13;
    uint64_t v64 = v119;
    uint64_t v102 = sub_20A8C6670();
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
    uint64_t v97 = sub_20A8CEBE0();
    uint64_t v65 = v120;
    uint64_t v99 = *(void (**)(char *, char *, uint64_t))(v120 + 16);
    uint64_t v100 = v120 + 16;
    v99(v118, v63, v17);
    v109(v56, (uint64_t)v13, v64);
    uint64_t v66 = *(unsigned __int8 *)(v65 + 80);
    uint64_t v67 = (v66 + 16) & ~v66;
    uint64_t v68 = v58;
    uint64_t v69 = *(unsigned __int8 *)(v58 + 80);
    uint64_t v95 = (void (*)(uint64_t, char *, uint64_t))v67;
    uint64_t v98 = ((v19 + v69 + v67) & ~v69) + v10;
    uint64_t v70 = (v19 + v69 + v67) & ~v69;
    uint64_t v96 = v70;
    uint64_t v94 = v66 | v69 | 7;
    unint64_t v71 = (v98 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v93 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v72 = (v71 + 31) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v73 = swift_allocObject();
    uint64_t v74 = v17;
    uint64_t v75 = v108;
    v108((char *)(v73 + v67), v118, v74);
    uint64_t v76 = v73 + v70;
    uint64_t v77 = *(void (**)(uint64_t, char *, uint64_t))(v68 + 32);
    uint64_t v121 = v68 + 32;
    uint64_t v78 = v119;
    v77(v76, v56, v119);
    *(void *)(v73 + v71) = v112;
    unint64_t v79 = v73 + v93;
    *(void *)unint64_t v79 = v7;
    *(unsigned char *)(v79 + 8) = v101 & 1;
    uint64_t v80 = (void *)(v73 + v72);
    uint64_t v81 = v115;
    uint64_t v82 = v111;
    void *v80 = v114;
    v80[1] = v82;
    *(void *)(v73 + ((v72 + 23) & 0xFFFFFFFFFFFFFFF8)) = v81;
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    uint64_t v83 = (void *)v97;
    sub_20A8C6520();
    swift_release();

    swift_release();
    uint64_t v84 = v118;
    uint64_t v85 = v107;
    uint64_t v86 = v105;
    v99(v118, v107, v105);
    uint64_t v87 = v106;
    uint64_t v88 = v78;
    v109(v56, (uint64_t)v106, v78);
    uint64_t v89 = swift_allocObject();
    v75((char *)v95 + v89, v84, v86);
    uint64_t v90 = v88;
    v77(v89 + v96, v56, v88);
    uint64_t v91 = (void *)sub_20A8C6450();
    sub_20A8C6550();
    swift_release();
    swift_release();
    swift_release();

    v104(v87, v90);
    return (*(uint64_t (**)(char *, uint64_t))(v120 + 8))(v85, v86);
  }
  else
  {
    uint64_t v26 = sub_20A8C3690();
    MEMORY[0x270FA5388](v26);
    *(&v92 - 2) = (uint64_t)v22;
    sub_20A5E04FC(sub_20A5E4A98, (uint64_t)(&v92 - 4), v27, MEMORY[0x263F7AFD8], (void (*)(BOOL, uint64_t, uint64_t))sub_20A68CA84);
    uint64_t v102 = v28;
    MEMORY[0x270FA5388](v28);
    *(&v92 - 4) = (uint64_t)v7;
    *(&v92 - 3) = (uint64_t)v22;
    *(&v92 - 2) = (uint64_t)v13;
    uint64_t v104 = (void (*)(char *, uint64_t))sub_20A8C6670();
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
    uint64_t v99 = (void (*)(char *, char *, uint64_t))sub_20A8CEBE0();
    uint64_t v29 = v120;
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v120 + 16);
    uint64_t v101 = v120 + 16;
    unint64_t v103 = v30;
    v30(v118, v22, v17);
    uint64_t v31 = v119;
    v109(v117, (uint64_t)v13, v119);
    uint64_t v32 = *(unsigned __int8 *)(v29 + 80);
    uint64_t v33 = (v32 + 16) & ~v32;
    uint64_t v34 = v121;
    uint64_t v35 = *(unsigned __int8 *)(v121 + 80);
    uint64_t v97 = v33;
    uint64_t v100 = ((v19 + v35 + v33) & ~v35) + v10;
    uint64_t v36 = (v19 + v35 + v33) & ~v35;
    uint64_t v98 = v36;
    uint64_t v96 = v32 | v35 | 7;
    unint64_t v37 = (v100 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v38 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v39 = (v38 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v94 = (uint64_t)v7;
    uint64_t v40 = swift_allocObject();
    v108((char *)(v40 + v33), v118, v17);
    uint64_t v95 = *(void (**)(uint64_t, char *, uint64_t))(v34 + 32);
    int v41 = v117;
    uint64_t v42 = v31;
    v95(v40 + v36, v117, v31);
    uint64_t v43 = v111;
    *(void *)(v40 + v37) = v112;
    *(void *)(v40 + v38) = v102;
    uint64_t v44 = (void *)(v40 + v39);
    uint64_t v45 = v115;
    *uint64_t v44 = v114;
    v44[1] = v43;
    *(void *)(v40 + ((v39 + 23) & 0xFFFFFFFFFFFFFFF8)) = v45;
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    uint64_t v46 = v99;
    sub_20A8C6520();
    swift_release();

    swift_release();
    uint64_t v47 = v118;
    uint64_t v48 = v107;
    uint64_t v49 = v105;
    v103(v118, v107, v105);
    uint64_t v50 = v41;
    uint64_t v51 = v106;
    uint64_t v52 = v42;
    v109(v41, (uint64_t)v106, v42);
    uint64_t v53 = swift_allocObject();
    uint64_t v54 = v49;
    v108((char *)(v53 + v97), v47, v49);
    v95(v53 + v98, v50, v52);
    uint64_t v55 = (void *)sub_20A8C6450();
    sub_20A8C6550();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v121 + 8))(v51, v52);
    return (*(uint64_t (**)(char *, uint64_t))(v120 + 8))(v48, v54);
  }
}

uint64_t sub_20A5E12BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v52 = a8;
  int v46 = a7;
  v39[2] = a6;
  uint64_t v41 = a1;
  uint64_t v50 = a10;
  uint64_t v51 = a9;
  uint64_t v13 = sub_20A8C40E0();
  uint64_t v44 = *(void *)(v13 - 8);
  uint64_t v45 = v13;
  uint64_t v14 = *(void *)(v44 + 64);
  MEMORY[0x270FA5388](v13);
  uint64_t v49 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v48 = (char *)v39 - v16;
  uint64_t v53 = sub_20A8C3F00();
  uint64_t v42 = *(void *)(v53 - 8);
  uint64_t v17 = *(void *)(v42 + 64);
  MEMORY[0x270FA5388](v53);
  uint64_t v47 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A43F778();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_20A8D4540;
  uint64_t v40 = a3;
  uint64_t v19 = sub_20A8C3EC0();
  uint64_t v21 = v20;
  uint64_t v22 = MEMORY[0x263F8D310];
  *(void *)(v18 + 56) = MEMORY[0x263F8D310];
  unint64_t v23 = sub_20A43F830();
  *(void *)(v18 + 64) = v23;
  *(void *)(v18 + 32) = v19;
  *(void *)(v18 + 40) = v21;
  uint64_t v43 = a4;
  uint64_t v24 = sub_20A8C40A0();
  *(void *)(v18 + 96) = v22;
  *(void *)(v18 + 104) = v23;
  *(void *)(v18 + 72) = v24;
  *(void *)(v18 + 80) = v25;
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
  uint64_t v26 = (void *)sub_20A8CF180();
  sub_20A8CEA00();
  sub_20A8C7D90();
  swift_bridgeObjectRelease();

  if (a5)
  {
    sub_20A8C99A0();
    sub_20A43F7E0(0, (unint64_t *)&qword_26AC69E00);
    sub_20A8C4990();
    if (swift_dynamicCast())
    {
      v39[1] = v54;
      v39[0] = swift_allocObject();
      swift_weakInit();
      uint64_t v27 = v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v47, v40, v53);
      uint64_t v28 = v44;
      uint64_t v29 = v45;
      uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
      v30(v48, v41, v45);
      v30(v49, v43, v29);
      unint64_t v31 = (*(unsigned __int8 *)(v27 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      uint64_t v32 = *(unsigned __int8 *)(v28 + 80);
      unint64_t v33 = (v17 + v32 + v31) & ~v32;
      unint64_t v34 = (v14 + v32 + v33) & ~v32;
      uint64_t v35 = v34 + v14;
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = v39[0];
      (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v36 + v31, v47, v53);
      unint64_t v37 = *(void (**)(unint64_t, char *, uint64_t))(v28 + 32);
      v37(v36 + v33, v48, v29);
      v37(v36 + v34, v49, v29);
      *(unsigned char *)(v36 + v35) = v46 & 1;
      swift_retain();
      sub_20A8C48E0();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  swift_getObjectType();
  if (qword_26AC6AC40 != -1) {
    swift_once();
  }
  sub_20A8C8C80();
  type metadata accessor for WatchlistMembershipCommandContext(0);
  return sub_20A8C8C80();
}

uint64_t sub_20A5E1758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  LODWORD(v116) = a6;
  uint64_t v122 = a5;
  uint64_t v135 = a4;
  uint64_t v142 = a1;
  uint64_t v133 = sub_20A8C7220();
  uint64_t v7 = *(void *)(v133 - 8);
  MEMORY[0x270FA5388](v133);
  uint64_t v132 = (char *)v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_20A8C6B00();
  uint64_t v139 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388](v131);
  uint64_t v113 = (char *)v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v130 = (char *)v95 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v121 = (char *)v95 - v13;
  uint64_t v14 = sub_20A8C40E0();
  uint64_t v141 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v114 = (char *)v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v111 = (char *)v95 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v119 = (char *)v95 - v19;
  uint64_t v129 = sub_20A8C6AF0();
  uint64_t v140 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  uint64_t v112 = (char *)v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v120 = (char *)v95 - v22;
  uint64_t v23 = sub_20A8C6810();
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v25 = (char *)v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_20A8C4030();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)v95 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_20A8C6800();
  uint64_t v138 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)v95 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v115 = result;
    sub_20A8C3EC0();
    uint64_t v118 = v7;
    uint64_t v117 = v14;
    sub_20A8C3E70();
    sub_20A5D54EC((uint64_t)v25);
    unint64_t v34 = *(void (**)(char *, uint64_t))(v27 + 8);
    uint64_t v104 = v29;
    uint64_t v106 = v26;
    uint64_t v105 = v27 + 8;
    unint64_t v103 = v34;
    v34(v29, v26);
    uint64_t v110 = a3;
    sub_20A8C3EE0();
    uint64_t v108 = v25;
    sub_20A8C67E0();
    sub_20A5E49C4(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
    uint64_t v35 = v138;
    uint64_t v127 = v36;
    uint64_t v128 = sub_20A8C4620();
    uint64_t v37 = *(void *)(v128 - 8);
    uint64_t v38 = *(unsigned __int8 *)(v37 + 80);
    uint64_t v39 = v141;
    uint64_t v125 = ((v38 + 32) & ~v38) + *(void *)(v37 + 72);
    uint64_t v40 = (v38 + 32) & ~v38;
    uint64_t v124 = v38 | 7;
    uint64_t v41 = swift_allocObject();
    long long v137 = xmmword_20A8D3DC0;
    *(_OWORD *)(v41 + 16) = xmmword_20A8D3DC0;
    uint64_t v42 = v40;
    uint64_t v126 = v40;
    unsigned int v136 = *MEMORY[0x263F24D48];
    uint64_t v44 = *(void (**)(void))(v37 + 104);
    uint64_t v43 = v37 + 104;
    uint64_t v123 = (void (*)(uint64_t, void, uint64_t))v44;
    v44(v41 + v40);
    uint64_t v45 = sub_20A5E574C(&qword_26AC69918, MEMORY[0x263F799D0]);
    unint64_t v96 = (unint64_t)" %{public}@ using command";
    unint64_t v134 = 0x800000020A9049B0;
    uint64_t v102 = v45;
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    int v46 = *(void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v107 = v32;
    uint64_t v109 = v30;
    uint64_t v138 = v35 + 8;
    uint64_t v97 = v46;
    v46(v32, v30);
    uint64_t v47 = v119;
    uint64_t v48 = v117;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v119, v135, v117);
    char v49 = sub_20A8C4040();
    uint64_t v50 = v139;
    uint64_t v51 = *(void (**)(char *, void, uint64_t))(v139 + 104);
    uint64_t v52 = (unsigned int *)MEMORY[0x263F79CB8];
    if ((v49 & 1) == 0) {
      uint64_t v52 = (unsigned int *)MEMORY[0x263F79CB0];
    }
    uint64_t v53 = *v52;
    uint64_t v54 = v121;
    uint64_t v55 = v131;
    uint64_t v101 = v139 + 104;
    uint64_t v100 = v51;
    v51(v121, v53, v131);
    uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
    uint64_t v99 = v50 + 16;
    uint64_t v98 = v56;
    v56(v130, v54, v55);
    uint64_t v57 = v120;
    sub_20A8C6AE0();
    uint64_t v58 = *(char **)(v39 + 8);
    uint64_t v141 = v39 + 8;
    uint64_t v119 = v58;
    ((void (*)(char *, uint64_t))v58)(v47, v48);
    uint64_t v59 = *(char **)(v50 + 8);
    uint64_t v139 = v50 + 8;
    uint64_t v121 = v59;
    ((void (*)(char *, uint64_t))v59)(v54, v55);
    uint64_t v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = v137;
    uint64_t v61 = v60 + v42;
    uint64_t v62 = v128;
    uint64_t v63 = v123;
    v123(v61, v136, v128);
    uint64_t v64 = sub_20A5E574C(&qword_26AC699A0, MEMORY[0x263F79CA8]);
    uint64_t v65 = v129;
    v95[2] = v64;
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    uint64_t v66 = *(char **)(v140 + 8);
    v140 += 8;
    uint64_t v120 = v66;
    ((void (*)(char *, uint64_t))v66)(v57, v65);
    sub_20A8C40B0();
    uint64_t v67 = v132;
    sub_20A8C7210();
    uint64_t v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = v137;
    uint64_t v135 = v43;
    v63(v68 + v126, v136, v62);
    uint64_t v69 = sub_20A5E574C(&qword_26763C710, MEMORY[0x263F7A1B0]);
    uint64_t v70 = v133;
    sub_20A8C45B0();
    uint64_t v71 = v118;
    swift_bridgeObjectRelease();
    uint64_t v74 = *(void (**)(char *, uint64_t))(v71 + 8);
    uint64_t v72 = v71 + 8;
    uint64_t v73 = v74;
    v74(v67, v70);
    sub_20A8C6EA0();
    uint64_t v75 = sub_20A5E574C(&qword_26AC69A10, MEMORY[0x263F79F28]);
    long long v143 = 0u;
    long long v144 = 0u;
    sub_20A8C45D0();
    sub_20A44349C((uint64_t)&v143);
    if (sub_20A8C4040() & 1) != 0 || (v116)
    {
      return swift_release();
    }
    else
    {
      v95[1] = v69;
      sub_20A8C3EC0();
      uint64_t v118 = v72;
      uint64_t v116 = v73;
      uint64_t v76 = v104;
      sub_20A8C3E70();
      uint64_t v122 = v75;
      sub_20A5D54EC((uint64_t)v108);
      v103(v76, v106);
      sub_20A8C3EE0();
      uint64_t v77 = v107;
      sub_20A8C67E0();
      uint64_t v78 = swift_allocObject();
      *(_OWORD *)(v78 + 16) = v137;
      v123(v78 + v126, v136, v128);
      unint64_t v134 = v96 | 0x8000000000000000;
      uint64_t v79 = v109;
      sub_20A8C45B0();
      swift_bridgeObjectRelease();
      v97(v77, v79);
      uint64_t v80 = v115;
      __swift_project_boxed_opaque_existential_1((void *)(v115 + 16), *(void *)(v115 + 40));
      uint64_t v81 = v111;
      sub_20A8C35C0();
      char v82 = sub_20A8C4040();
      uint64_t v83 = (unsigned int *)MEMORY[0x263F79CB8];
      if ((v82 & 1) == 0) {
        uint64_t v83 = (unsigned int *)MEMORY[0x263F79CB0];
      }
      uint64_t v84 = v113;
      uint64_t v85 = v131;
      v100(v113, *v83, v131);
      v98(v130, v84, v85);
      uint64_t v86 = v112;
      sub_20A8C6AE0();
      uint64_t v87 = v117;
      uint64_t v88 = v119;
      ((void (*)(char *, uint64_t))v119)(v81, v117);
      ((void (*)(char *, uint64_t))v121)(v84, v85);
      uint64_t v89 = swift_allocObject();
      *(_OWORD *)(v89 + 16) = v137;
      v123(v89 + v126, v136, v128);
      uint64_t v90 = v129;
      sub_20A8C45B0();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v120)(v86, v90);
      __swift_project_boxed_opaque_existential_1((void *)(v80 + 16), *(void *)(v80 + 40));
      uint64_t v91 = v114;
      sub_20A8C35C0();
      sub_20A8C40B0();
      ((void (*)(char *, uint64_t))v88)(v91, v87);
      uint64_t v92 = v132;
      sub_20A8C7210();
      uint64_t v93 = swift_allocObject();
      *(_OWORD *)(v93 + 16) = v137;
      v123(v93 + v126, v136, v128);
      uint64_t v94 = v133;
      sub_20A8C45B0();
      swift_bridgeObjectRelease();
      v116(v92, v94);
      long long v143 = 0u;
      long long v144 = 0u;
      sub_20A8C45D0();
      swift_release();
      return sub_20A44349C((uint64_t)&v143);
    }
  }
  return result;
}

uint64_t sub_20A5E2688(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C40E0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = sub_20A8C4040();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  if (v12)
  {
    char v13 = 0;
  }
  else
  {
    uint64_t v14 = (void *)sub_20A8C40B0();
    uint64_t v15 = sub_20A8C3EC0();
    char v13 = sub_20A597330(v15, v16, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v13 & 1;
}

uint64_t sub_20A5E2884(uint64_t a1)
{
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), *(void *)(a1 + 40));
  sub_20A8C3EC0();
  uint64_t v1 = sub_20A8C3680();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_20A5E290C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v44 = a8;
  uint64_t v39 = a6;
  uint64_t v42 = a9;
  uint64_t v43 = a7;
  uint64_t v38 = sub_20A8C40E0();
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = v12;
  uint64_t v41 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_20A8C3F00();
  uint64_t v35 = *(void *)(v45 - 8);
  uint64_t v13 = *(void *)(v35 + 64);
  MEMORY[0x270FA5388](v45);
  uint64_t v40 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A43F778();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_20A8D4540;
  uint64_t v15 = a3;
  uint64_t v16 = sub_20A8C3EC0();
  uint64_t v18 = v17;
  uint64_t v19 = MEMORY[0x263F8D310];
  *(void *)(v14 + 56) = MEMORY[0x263F8D310];
  unint64_t v20 = sub_20A43F830();
  *(void *)(v14 + 64) = v20;
  *(void *)(v14 + 32) = v16;
  *(void *)(v14 + 40) = v18;
  uint64_t v21 = a4;
  uint64_t v22 = sub_20A8C40A0();
  *(void *)(v14 + 96) = v19;
  *(void *)(v14 + 104) = v20;
  *(void *)(v14 + 72) = v22;
  *(void *)(v14 + 80) = v23;
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
  uint64_t v24 = (void *)sub_20A8CF180();
  sub_20A8CEA00();
  sub_20A8C7D90();
  swift_bridgeObjectRelease();

  if (a5)
  {
    sub_20A8C99A0();
    sub_20A43F7E0(0, (unint64_t *)&qword_26AC69E00);
    sub_20A8C4990();
    if (swift_dynamicCast())
    {
      uint64_t v34 = v46;
      uint64_t v25 = v35;
      uint64_t v26 = v45;
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v40, v15, v45);
      uint64_t v27 = v36;
      uint64_t v28 = v38;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v41, v21, v38);
      unint64_t v29 = (*(unsigned __int8 *)(v25 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      unint64_t v30 = (v13 + *(unsigned __int8 *)(v27 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      unint64_t v31 = (v37 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v32 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v32 + v29, v40, v26);
      (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v32 + v30, v41, v28);
      *(void *)(v32 + v31) = v39;
      swift_bridgeObjectRetain();
      sub_20A8C48E0();
      swift_release();
      swift_release();
    }
  }
  swift_getObjectType();
  if (qword_26AC6AC40 != -1) {
    swift_once();
  }
  sub_20A8C8C80();
  type metadata accessor for WatchlistMembershipCommandContext(0);
  return sub_20A8C8C80();
}

uint64_t sub_20A5E2D08(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v112 = a4;
  unint64_t v175 = a3;
  uint64_t v177 = a1;
  uint64_t v157 = sub_20A8C7220();
  uint64_t v160 = *(void *)(v157 - 8);
  MEMORY[0x270FA5388](v157);
  uint64_t v156 = (char *)v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = sub_20A8C6B00();
  uint64_t v159 = *(void *)(v155 - 8);
  MEMORY[0x270FA5388](v155);
  double v147 = (char *)v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v154 = (char *)v101 - v8;
  MEMORY[0x270FA5388](v9);
  double v166 = (char *)v101 - v10;
  uint64_t v178 = sub_20A8C40E0();
  uint64_t v162 = *(void *)(v178 - 8);
  MEMORY[0x270FA5388](v178);
  uint64_t v146 = (char *)v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  double v168 = (char *)v101 - v13;
  MEMORY[0x270FA5388](v14);
  double v165 = (char *)v101 - v15;
  uint64_t v153 = sub_20A8C6AF0();
  uint64_t v158 = *(void *)(v153 - 8);
  MEMORY[0x270FA5388](v153);
  CGFloat v145 = (char *)v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v161 = (char *)v101 - v18;
  uint64_t v144 = sub_20A8C6810();
  uint64_t v121 = *(void (***)(char *))(v144 - 8);
  MEMORY[0x270FA5388](v144);
  long long v143 = (char *)v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)v101 - v21;
  uint64_t v23 = sub_20A8C4030();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v142 = (char *)v101 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v149 = (char *)v101 - v27;
  MEMORY[0x270FA5388](v28);
  unint64_t v30 = (char *)v101 - v29;
  uint64_t v152 = sub_20A8C6800();
  uint64_t v31 = *(void *)(v152 - 8);
  MEMORY[0x270FA5388](v152);
  uint64_t v140 = (char *)v101 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)v101 - v34;
  sub_20A8C3EC0();
  sub_20A8C3E70();
  sub_20A5D54EC((uint64_t)v22);
  uint64_t v123 = (uint64_t (**)(char *, uint64_t))v24;
  uint64_t v36 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v150 = v23;
  uint64_t v139 = v24 + 8;
  uint64_t v138 = v36;
  v36(v30, v23);
  uint64_t v148 = a2;
  sub_20A8C3EE0();
  sub_20A8C67E0();
  sub_20A5E49C4(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v151 = v37;
  uint64_t v174 = sub_20A8C4620();
  uint64_t v38 = *(void *)(v174 - 8);
  uint64_t v39 = *(unsigned __int8 *)(v38 + 80);
  uint64_t v169 = ((v39 + 32) & ~v39) + *(void *)(v38 + 72);
  uint64_t v40 = (v39 + 32) & ~v39;
  uint64_t v172 = v39 | 7;
  uint64_t v173 = v40;
  uint64_t v41 = swift_allocObject();
  long long v176 = xmmword_20A8D3DC0;
  *(_OWORD *)(v41 + 16) = xmmword_20A8D3DC0;
  unsigned int v171 = *MEMORY[0x263F24D48];
  uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 104);
  uint64_t v42 = (char *)(v38 + 104);
  uint64_t v170 = v43;
  ((void (*)(uint64_t))v43)(v41 + v40);
  uint64_t v44 = sub_20A5E574C(&qword_26AC69918, MEMORY[0x263F799D0]);
  unint64_t v109 = (unint64_t)" %{public}@ using command";
  unint64_t v128 = 0x800000020A9049B0;
  uint64_t v45 = v152;
  uint64_t v137 = v44;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v141 = v31 + 8;
  unsigned int v136 = v46;
  v46(v35, v45);
  uint64_t v47 = v162;
  uint64_t v48 = v162 + 16;
  char v49 = v165;
  uint64_t v50 = v178;
  double v167 = *(void (**)(char *, unint64_t, uint64_t))(v162 + 16);
  v167(v165, v175, v178);
  char v51 = sub_20A8C4040();
  uint64_t v52 = v159;
  uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v159 + 104);
  uint64_t v54 = (unsigned int *)MEMORY[0x263F79CB8];
  if ((v51 & 1) == 0) {
    uint64_t v54 = (unsigned int *)MEMORY[0x263F79CB0];
  }
  uint64_t v55 = *v54;
  uint64_t v56 = v166;
  uint64_t v57 = v155;
  uint64_t v135 = v159 + 104;
  unint64_t v134 = v53;
  v53(v166, v55, v155);
  uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  uint64_t v133 = v52 + 16;
  uint64_t v132 = v58;
  v58(v154, v56, v57);
  uint64_t v59 = v161;
  sub_20A8C6AE0();
  uint64_t v164 = *(void (**)(char *, uint64_t))(v47 + 8);
  double v165 = (char *)(v47 + 8);
  v164(v49, v50);
  uint64_t v60 = *(void (**)(char *, uint64_t))(v52 + 8);
  uint64_t v159 = v52 + 8;
  uint64_t v131 = v60;
  v60(v56, v57);
  uint64_t v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = v176;
  v170(v61 + v173, v171, v174);
  uint64_t v62 = sub_20A5E574C(&qword_26AC699A0, MEMORY[0x263F79CA8]);
  uint64_t v63 = v153;
  uint64_t v130 = v62;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  uint64_t v64 = *(void (**)(char *, uint64_t))(v158 + 8);
  v158 += 8;
  uint64_t v129 = v64;
  v64(v59, v63);
  sub_20A8C40B0();
  uint64_t v65 = v156;
  sub_20A8C7210();
  uint64_t v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = v176;
  double v166 = v42;
  v170(v66 + v173, v171, v174);
  uint64_t v67 = sub_20A5E574C(&qword_26763C710, MEMORY[0x263F7A1B0]);
  uint64_t v68 = v157;
  unint64_t v128 = v67;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  uint64_t v69 = *(void (**)(char *, uint64_t))(v160 + 8);
  v160 += 8;
  uint64_t v127 = v69;
  v69(v65, v68);
  uint64_t v70 = sub_20A8C7030();
  uint64_t v71 = sub_20A5E574C(&qword_26763C718, MEMORY[0x263F7A030]);
  long long v179 = 0u;
  long long v180 = 0u;
  uint64_t v126 = v70;
  uint64_t v125 = v71;
  sub_20A8C45D0();
  sub_20A44349C((uint64_t)&v179);
  uint64_t result = sub_20A8C4040();
  if (result)
  {
    uint64_t v73 = *(void *)(v112 + 16);
    if (v73)
    {
      uint64_t v74 = (char *)(v112
                   + ((*(unsigned __int8 *)(v162 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v162 + 80)));
      uint64_t v124 = (void (**)(char *, char *, uint64_t))(v123 + 2);
      v123 += 11;
      int v122 = *MEMORY[0x263F7AF90];
      int v116 = *MEMORY[0x263F7AF98];
      int v114 = *MEMORY[0x263F7AF68];
      int v111 = *MEMORY[0x263F7AF80];
      int v108 = *MEMORY[0x263F7AF70];
      int v106 = *MEMORY[0x263F7AF88];
      int v104 = *MEMORY[0x263F7AF78];
      int v102 = *MEMORY[0x263F7AF60];
      v101[2] = *MEMORY[0x263F799D8];
      v121 += 13;
      int v103 = *MEMORY[0x263F79A10];
      int v105 = *MEMORY[0x263F799F8];
      int v107 = *MEMORY[0x263F799E8];
      int v110 = *MEMORY[0x263F799F0];
      int v113 = *MEMORY[0x263F799E0];
      int v115 = *MEMORY[0x263F79A08];
      int v120 = *MEMORY[0x263F79A00];
      unsigned int v119 = *MEMORY[0x263F79CB0];
      unsigned int v118 = *MEMORY[0x263F79CB8];
      uint64_t v117 = *(void *)(v162 + 72);
      swift_bridgeObjectRetain();
      unint64_t v175 = v109 | 0x8000000000000000;
      uint64_t v75 = (void (*)(char *, char *, uint64_t))v167;
      uint64_t v76 = v168;
      uint64_t v77 = v150;
      uint64_t v78 = v149;
      uint64_t v163 = v48;
      while (1)
      {
        uint64_t v162 = v73;
        uint64_t v161 = v74;
        v75(v76, v74, v178);
        sub_20A8C3EC0();
        sub_20A8C3E70();
        uint64_t v99 = v142;
        (*v124)(v142, v78, v77);
        int v100 = (*v123)(v99, v77);
        if (v100 != v122
          && v100 != v116
          && v100 != v114
          && v100 != v111
          && v100 != v108
          && v100 != v106
          && v100 != v104
          && v100 != v102)
        {
          break;
        }
        (*v121)(v143);
        v138(v78, v77);
        sub_20A8C3EE0();
        uint64_t v79 = v140;
        sub_20A8C67E0();
        uint64_t v80 = swift_allocObject();
        *(_OWORD *)(v80 + 16) = v176;
        uint64_t v81 = v173;
        v170(v80 + v173, v171, v174);
        uint64_t v82 = v152;
        sub_20A8C45B0();
        swift_bridgeObjectRelease();
        v136(v79, v82);
        uint64_t v83 = v146;
        v167(v146, (unint64_t)v76, v178);
        if (sub_20A8C4040()) {
          uint64_t v84 = v118;
        }
        else {
          uint64_t v84 = v119;
        }
        uint64_t v85 = v147;
        uint64_t v86 = v155;
        v134(v147, v84, v155);
        v132(v154, v85, v86);
        uint64_t v87 = v145;
        sub_20A8C6AE0();
        v164(v83, v178);
        v131(v85, v86);
        uint64_t v88 = swift_allocObject();
        *(_OWORD *)(v88 + 16) = v176;
        uint64_t v89 = v88 + v81;
        uint64_t v90 = v171;
        uint64_t v91 = v174;
        uint64_t v92 = v170;
        v170(v89, v171, v174);
        uint64_t v93 = v153;
        sub_20A8C45B0();
        swift_bridgeObjectRelease();
        v129(v87, v93);
        sub_20A8C40B0();
        uint64_t v94 = v156;
        sub_20A8C7210();
        uint64_t v95 = swift_allocObject();
        *(_OWORD *)(v95 + 16) = v176;
        uint64_t v96 = v90;
        uint64_t v77 = v150;
        v92(v95 + v173, v96, v91);
        uint64_t v97 = v157;
        sub_20A8C45B0();
        swift_bridgeObjectRelease();
        uint64_t v98 = v94;
        uint64_t v78 = v149;
        uint64_t v76 = v168;
        v127(v98, v97);
        long long v179 = 0u;
        long long v180 = 0u;
        sub_20A8C45D0();
        sub_20A44349C((uint64_t)&v179);
        v164(v76, v178);
        uint64_t v74 = &v161[v117];
        uint64_t v75 = (void (*)(char *, char *, uint64_t))v167;
        uint64_t v73 = v162 - 1;
        if (v162 == 1) {
          return swift_bridgeObjectRelease();
        }
      }
      sub_20A8CF750();
      __break(1u);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_20A5E3FE0()
{
  sub_20A43F778();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_20A8D5CB0;
  uint64_t v1 = sub_20A8C3EC0();
  uint64_t v3 = v2;
  uint64_t v4 = MEMORY[0x263F8D310];
  *(void *)(v0 + 56) = MEMORY[0x263F8D310];
  unint64_t v5 = sub_20A43F830();
  *(void *)(v0 + 64) = v5;
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v3;
  uint64_t v6 = sub_20A8C40A0();
  *(void *)(v0 + 96) = v4;
  *(void *)(v0 + 104) = v5;
  *(void *)(v0 + 72) = v6;
  *(void *)(v0 + 80) = v7;
  sub_20A43F7E0(0, (unint64_t *)&qword_26AC80150);
  sub_20A8CF4E0();
  *(void *)(v0 + 136) = v4;
  *(void *)(v0 + 144) = v5;
  *(void *)(v0 + 112) = 0;
  *(void *)(v0 + 120) = 0xE000000000000000;
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
  uint64_t v8 = (void *)sub_20A8CF180();
  sub_20A8CEA00();
  sub_20A8C7D90();
  swift_bridgeObjectRelease();
}

uint64_t sub_20A5E413C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_20A4380C4(v0 + 56);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WatchlistMembershipCommandHandler()
{
  return self;
}

uint64_t sub_20A5E41A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  return sub_20A5E07B8(a1, a2, a3, a4, *a5, a6);
}

uint64_t sub_20A5E41C8@<X0>(uint64_t a1@<X3>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_20A5E445C(a1);
  *a2 = result & 1;
  return result;
}

BOOL sub_20A5E41FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AF08];
  sub_20A5E49C4(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = type metadata accessor for WatchlistMembershipCommandContext(0);
  sub_20A44D308(a4 + *(int *)(v9 + 20), (uint64_t)v8);
  uint64_t v10 = sub_20A8C3F00();
  BOOL v11 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10) != 1;
  sub_20A5E4A28((uint64_t)v8, (unint64_t *)&qword_26AC68FD0, v5);
  return v11;
}

uint64_t sub_20A5E4310()
{
  if (MEMORY[0x2105289B0](v0 + 56))
  {
    swift_getObjectType();
    if (qword_26AC6AC40 != -1) {
      swift_once();
    }
    sub_20A8C3F00();
    sub_20A8C8C80();
    swift_unknownObjectRelease();
  }
  uint64_t result = MEMORY[0x2105289B0](v0 + 56);
  if (result)
  {
    swift_getObjectType();
    if (qword_26AC6ABF8 != -1) {
      swift_once();
    }
    type metadata accessor for WatchlistMembershipCommandContext(0);
    sub_20A8C8C80();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A5E445C(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A5E49C4(0, &qword_26AC69040, MEMORY[0x263F7AFD8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v5 = (char *)v46 - v4;
  uint64_t v6 = sub_20A8C40E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v46 - v11;
  sub_20A5E49C4(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], v2);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v46 - v14;
  uint64_t v16 = sub_20A8C3F00();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for WatchlistMembershipCommandContext(0);
  sub_20A44D308(a1 + *(int *)(v20 + 20), (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    uint64_t v21 = (unint64_t *)&qword_26AC68FD0;
    uint64_t v22 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AF08];
    uint64_t v23 = (uint64_t)v15;
  }
  else
  {
    uint64_t v53 = a1;
    uint64_t v54 = v6;
    char v49 = v19;
    uint64_t v50 = v17;
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    uint64_t v51 = v16;
    v24(v19, v15, v16);
    __swift_project_boxed_opaque_existential_1((void *)(v52 + 16), *(void *)(v52 + 40));
    uint64_t v25 = sub_20A8C3690();
    uint64_t v26 = *(void *)(v25 + 16);
    if (v26)
    {
      uint64_t v47 = v12;
      uint64_t v48 = v5;
      uint64_t v52 = v7;
      uint64_t v29 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
      uint64_t v28 = v7 + 16;
      uint64_t v27 = v29;
      unint64_t v30 = v25 + ((*(unsigned __int8 *)(v28 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 64));
      uint64_t v31 = *(void *)(v28 + 56);
      v46[1] = v25;
      swift_bridgeObjectRetain();
      uint64_t v32 = v54;
      while (1)
      {
        v27(v9, v30, v32);
        uint64_t v33 = sub_20A8C4050();
        uint64_t v35 = v34;
        if (v33 == sub_20A8C4050() && v35 == v36) {
          break;
        }
        char v37 = sub_20A8CF760();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v37) {
          goto LABEL_12;
        }
        uint64_t v32 = v54;
        (*(void (**)(char *, uint64_t))(v28 - 8))(v9, v54);
        v30 += v31;
        if (!--v26)
        {
          swift_bridgeObjectRelease();
          uint64_t v38 = 1;
          uint64_t v7 = v52;
          uint64_t v12 = v47;
          unint64_t v5 = v48;
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_12:
      swift_bridgeObjectRelease();
      uint64_t v7 = v52;
      unint64_t v5 = v48;
      uint64_t v32 = v54;
      (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v48, v9, v54);
      uint64_t v38 = 0;
      uint64_t v12 = v47;
    }
    else
    {
      uint64_t v38 = 1;
      uint64_t v32 = v54;
    }
LABEL_13:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v38, 1, v32);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v32) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v32);
      uint64_t v40 = (void *)sub_20A8C40B0();
      uint64_t v41 = v49;
      uint64_t v42 = sub_20A8C3EC0();
      char v44 = sub_20A597330(v42, v43, v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v32);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v41, v51);
      char v39 = v44 ^ 1;
      return v39 & 1;
    }
    (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v51);
    uint64_t v21 = &qword_26AC69040;
    uint64_t v22 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AFD8];
    uint64_t v23 = (uint64_t)v5;
  }
  sub_20A5E4A28(v23, v21, v22);
  char v39 = 1;
  return v39 & 1;
}

void sub_20A5E49C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A5E4A28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A5E49C4(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A5E4A98(uint64_t a1)
{
  return sub_20A5E2688(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_20A5E4AB8()
{
  return sub_20A5E2884(*(void *)(v0 + 16));
}

uint64_t sub_20A5E4AD8()
{
  uint64_t v8 = sub_20A8C3F00();
  uint64_t v1 = *(void *)(v8 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = sub_20A8C40E0();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v2, v8);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A5E4C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_20A8C3F00() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_20A8C40E0() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_20A5E290C(a1, a2, v2 + v6, v2 + v9, *(void *)(v2 + v10), *(void *)(v2 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((((v10 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((((v10 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v2+ ((((((v10 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_20A5E4DC8()
{
}

uint64_t sub_20A5E4DD8()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 16) + 16), *(void *)(*(void *)(v0 + 16) + 40));
  return sub_20A8C36C0();
}

uint64_t sub_20A5E4E40()
{
  uint64_t v1 = sub_20A8C3F00();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = sub_20A8C40E0();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A5E4FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_20A8C3F00() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_20A8C40E0() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_20A5E12BC(a1, a2, v2 + v6, v2 + v9, *(void *)(v2 + v10), *(void *)(v2 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v2 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v2 + ((v10 + 31) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((v10 + 31) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v2 + ((((v10 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_20A5E5138()
{
}

void sub_20A5E5148()
{
}

uint64_t sub_20A5E5228()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A5E5260()
{
  uint64_t v1 = sub_20A8C3F00();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = sub_20A8C40E0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (v3 + v4 + v7) & ~v7;
  unint64_t v9 = (*(void *)(v6 + 64) + v7 + v8) & ~v7;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  unint64_t v10 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
  v10(v0 + v8, v5);
  v10(v0 + v9, v5);

  return swift_deallocObject();
}

uint64_t sub_20A5E53DC(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_20A8C3F00() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_20A8C40E0() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  unint64_t v10 = (v9 + v7 + v8) & ~v7;
  uint64_t v11 = *(void *)(v1 + 16);
  int v12 = *(unsigned __int8 *)(v1 + v10 + v9);

  return sub_20A5E1758(a1, v11, v1 + v4, v1 + v8, v1 + v10, v12);
}

uint64_t sub_20A5E54E8()
{
  uint64_t v1 = sub_20A8C3F00();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = sub_20A8C40E0();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A5E564C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_20A8C3F00() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_20A8C40E0() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_20A5E2D08(a1, v1 + v4, v1 + v7, v8);
}

uint64_t sub_20A5E574C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_20A5E5794(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    sub_20A5E590C();
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v11 = sub_20A8C40E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      *(uint64_t *)((char *)a1 + *(int *)(v8 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 48));
      int v12 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56);
      swift_bridgeObjectRetain();
      v12(a1, 0, 2, v8);
    }
  }
  return a1;
}

void sub_20A5E590C()
{
  if (!qword_26763B418)
  {
    sub_20A8C40E0();
    sub_20A4A23B0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763B418);
    }
  }
}

uint64_t sub_20A5E5980(uint64_t a1)
{
  sub_20A5E590C();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = sub_20A8C40E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_20A5E5A40(char *a1, char *a2, uint64_t a3)
{
  sub_20A5E590C();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_20A8C40E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    *(void *)&a1[*(int *)(v7 + 48)] = *(void *)&a2[*(int *)(v7 + 48)];
    uint64_t v10 = *(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56);
    swift_bridgeObjectRetain();
    v10(a1, 0, 2, v7);
  }
  return a1;
}

char *sub_20A5E5B7C(char *a1, char *a2, uint64_t a3)
{
  sub_20A5E590C();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 2, v6);
  int v11 = v9(a2, 2, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v15 = sub_20A8C40E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(a1, a2, v15);
      *(void *)&a1[*(int *)(v7 + 48)] = *(void *)&a2[*(int *)(v7 + 48)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_20A5E5D48((uint64_t)a1);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v12 = sub_20A8C40E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
  *(void *)&a1[*(int *)(v7 + 48)] = *(void *)&a2[*(int *)(v7 + 48)];
  uint64_t v13 = *(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56);
  swift_bridgeObjectRetain();
  v13(a1, 0, 2, v7);
  return a1;
}

uint64_t sub_20A5E5D48(uint64_t a1)
{
  sub_20A5E590C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_20A5E5DA4(char *a1, char *a2, uint64_t a3)
{
  sub_20A5E590C();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_20A8C40E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    *(void *)&a1[*(int *)(v7 + 48)] = *(void *)&a2[*(int *)(v7 + 48)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  }
  return a1;
}

char *sub_20A5E5EDC(char *a1, char *a2, uint64_t a3)
{
  sub_20A5E590C();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 2, v6);
  int v11 = v9(a2, 2, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v14 = sub_20A8C40E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(a1, a2, v14);
      *(void *)&a1[*(int *)(v7 + 48)] = *(void *)&a2[*(int *)(v7 + 48)];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_20A5E5D48((uint64_t)a1);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v12 = sub_20A8C40E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
  *(void *)&a1[*(int *)(v7 + 48)] = *(void *)&a2[*(int *)(v7 + 48)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  return a1;
}

uint64_t sub_20A5E609C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A5E60B0);
}

uint64_t sub_20A5E60B0(uint64_t a1, uint64_t a2)
{
  sub_20A5E590C();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_20A5E611C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A5E6130);
}

uint64_t sub_20A5E6130(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  sub_20A5E590C();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_20A5E61B4(uint64_t a1)
{
  sub_20A5E590C();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 2, v2);
}

uint64_t sub_20A5E621C(uint64_t a1, uint64_t a2)
{
  sub_20A5E590C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 2, v4);
}

uint64_t type metadata accessor for StockSearchSectionDescriptor()
{
  uint64_t result = qword_26AC78AC8;
  if (!qword_26AC78AC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A5E62D8()
{
  uint64_t result = sub_20A8C40E0();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

BOOL sub_20A5E6370(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockSearchSectionDescriptor();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - v8;
  sub_20A5E7164(a1, (uint64_t)&v20 - v8);
  sub_20A5E590C();
  uint64_t v11 = v10;
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
  int v13 = v12(v9, 2, v10);
  if (v13)
  {
    unint64_t v14 = v13 != 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_20A8C40E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v9, v15);
    unint64_t v14 = 2;
  }
  sub_20A5E7164(a2, (uint64_t)v6);
  int v16 = v12(v6, 2, v11);
  if (v16)
  {
    unint64_t v17 = v16 != 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_20A8C40E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v6, v18);
    unint64_t v17 = 2;
  }
  return v14 >= v17;
}

double sub_20A5E6544()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();
  uint64_t v4 = v3;

  qword_26763C720 = v2;
  *(void *)algn_26763C728 = v4;
  double result = 0.0;
  xmmword_26763C730 = 0u;
  *(_OWORD *)&qword_26763C740 = 0u;
  qword_26763C750 = 0;
  return result;
}

double sub_20A5E6618()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();
  uint64_t v4 = v3;

  qword_26763C758 = v2;
  unk_26763C760 = v4;
  double result = 0.0;
  xmmword_26763C768 = 0u;
  *(_OWORD *)&qword_26763C778 = 0u;
  qword_26763C788 = 0;
  return result;
}

uint64_t sub_20A5E66E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_20A8C40E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StockSearchSectionDescriptor();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5E7164(v2, (uint64_t)v10);
  sub_20A5E590C();
  uint64_t v12 = v11;
  int v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 2, v11);
  if (v13)
  {
    if (v13 == 1)
    {
      if (qword_267639B20 != -1) {
        swift_once();
      }
      unint64_t v14 = &qword_26763C720;
    }
    else
    {
      if (qword_267639B28 != -1) {
        swift_once();
      }
      unint64_t v14 = &qword_26763C758;
    }
    uint64_t v16 = *v14;
    uint64_t v18 = v14[1];
    uint64_t v23 = v14[2];
    uint64_t v24 = v14[3];
    uint64_t v19 = v14[4];
    uint64_t v21 = v14[5];
    uint64_t v15 = v14[6];
    swift_bridgeObjectRetain();
    uint64_t result = sub_20A5E739C(v23, v24);
  }
  else
  {
    uint64_t v15 = *(void *)&v10[*(int *)(v12 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    uint64_t v16 = sub_20A8C40A0();
    uint64_t v18 = v17;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_20A8C4050();
    uint64_t v21 = v20;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v23 = v16;
    uint64_t v24 = v18;
  }
  *a1 = v16;
  a1[1] = v18;
  a1[2] = v23;
  a1[3] = v24;
  a1[4] = v19;
  a1[5] = v21;
  a1[6] = v15;
  return result;
}

uint64_t sub_20A5E6964(uint64_t a1)
{
  MEMORY[0x270FA5388](a1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5E7164(v1, (uint64_t)v3);
  sub_20A5E590C();
  int v5 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 2, v4);
  if (v5)
  {
    if (v5 == 1) {
      return 0x73696C6863746177;
    }
    else {
      return 0x736C6F626D7973;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_20A8C40E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v3, v7);
    return 0x7461576F54646461;
  }
}

unint64_t sub_20A5E6AB4()
{
  unint64_t result = qword_26AC81BB0;
  if (!qword_26AC81BB0)
  {
    type metadata accessor for StockSearchSectionDescriptor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC81BB0);
  }
  return result;
}

BOOL sub_20A5E6B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockSearchSectionDescriptor();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - v8;
  sub_20A5E7164(a2, (uint64_t)&v20 - v8);
  sub_20A5E590C();
  uint64_t v11 = v10;
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
  int v13 = v12(v9, 2, v10);
  if (v13)
  {
    unint64_t v14 = v13 != 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_20A8C40E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v9, v15);
    unint64_t v14 = 2;
  }
  sub_20A5E7164(a1, (uint64_t)v6);
  int v16 = v12(v6, 2, v11);
  if (v16)
  {
    unint64_t v17 = v16 != 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_20A8C40E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v6, v18);
    unint64_t v17 = 2;
  }
  return v14 >= v17;
}

BOOL sub_20A5E6CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockSearchSectionDescriptor();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - v8;
  sub_20A5E7164(a2, (uint64_t)&v20 - v8);
  sub_20A5E590C();
  uint64_t v11 = v10;
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
  int v13 = v12(v9, 2, v10);
  if (v13)
  {
    unint64_t v14 = v13 != 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_20A8C40E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v9, v15);
    unint64_t v14 = 2;
  }
  sub_20A5E7164(a1, (uint64_t)v6);
  int v16 = v12(v6, 2, v11);
  if (v16)
  {
    unint64_t v17 = v16 != 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_20A8C40E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v6, v18);
    unint64_t v17 = 2;
  }
  return v14 < v17;
}

uint64_t sub_20A5E6EC8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = 0xE900000000000074;
  uint64_t v5 = 0x73696C6863746177;
  uint64_t v6 = type metadata accessor for StockSearchSectionDescriptor();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v23 - v10;
  sub_20A5E7164(a1, (uint64_t)&v23 - v10);
  sub_20A5E590C();
  uint64_t v13 = v12;
  unint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
  int v15 = v14(v11, 2, v12);
  if (v15)
  {
    if (v15 == 1) {
      uint64_t v16 = 0x73696C6863746177;
    }
    else {
      uint64_t v16 = 0x736C6F626D7973;
    }
    if (v15 == 1) {
      unint64_t v17 = 0xE900000000000074;
    }
    else {
      unint64_t v17 = 0xE700000000000000;
    }
  }
  else
  {
    uint64_t v16 = 0x7461576F54646461;
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_20A8C40E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v11, v18);
    unint64_t v17 = 0xEE007473696C6863;
  }
  sub_20A5E7164(a2, (uint64_t)v8);
  int v19 = v14(v8, 2, v13);
  if (v19)
  {
    if (v19 != 1)
    {
      unint64_t v4 = 0xE700000000000000;
      uint64_t v5 = 0x736C6F626D7973;
    }
    if (v16 != v5) {
      goto LABEL_17;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_20A8C40E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v8, v20);
    unint64_t v4 = 0xEE007473696C6863;
    if (v16 != 0x7461576F54646461)
    {
LABEL_17:
      char v21 = sub_20A8CF760();
      goto LABEL_18;
    }
  }
  if (v17 != v4) {
    goto LABEL_17;
  }
  char v21 = 1;
LABEL_18:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v21 & 1;
}

uint64_t sub_20A5E7164(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockSearchSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_20A5E71C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockSearchSectionDescriptor();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - v8;
  sub_20A5E7164(a1, (uint64_t)&v20 - v8);
  sub_20A5E590C();
  uint64_t v11 = v10;
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
  int v13 = v12(v9, 2, v10);
  if (v13)
  {
    unint64_t v14 = v13 != 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_20A8C40E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v9, v15);
    unint64_t v14 = 2;
  }
  sub_20A5E7164(a2, (uint64_t)v6);
  int v16 = v12(v6, 2, v11);
  if (v16)
  {
    unint64_t v17 = v16 != 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_20A8C40E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v6, v18);
    unint64_t v17 = 2;
  }
  return v14 < v17;
}

uint64_t sub_20A5E739C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_20A5E73EC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ManageWatchlistsContentMode(319);
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_20A5E74E8()
{
  (*(void (**)(uint64_t, void))(*(void *)(*(void *)v0 + 88) + 40))(v0 + *(void *)(*(void *)v0 + 152), *(void *)(*(void *)v0 + 80));
  unint64_t v1 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A5EA910(0, (unint64_t *)&qword_26763AEF0, MEMORY[0x263F7D538]);
  sub_20A5EACE0(&qword_26763C810, (unint64_t *)&qword_26763AEF0, v1);
  sub_20A8C8C00();
  return swift_release();
}

uint64_t sub_20A5E7614()
{
  return sub_20A8C8C10();
}

uint64_t sub_20A5E7640(uint64_t a1, char a2)
{
  uint64_t v4 = sub_20A8C2B70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C91A0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8CA3D0();
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == *MEMORY[0x263F7D658])
  {
    (*(void (**)(char *, uint64_t))(v9 + 96))(v11, v8);
    sub_20A5EA80C();
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, &v11[*(int *)(v13 + 48)], v4);
    sub_20A5E7CE8(a1, (uint64_t)v7);
    unint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v7, v4);
    return ((uint64_t (*)(char *, uint64_t))v14)(v11, v4);
  }
  if (v12 == *MEMORY[0x263F7D660])
  {
    (*(void (**)(char *, uint64_t))(v9 + 96))(v11, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v12 == *MEMORY[0x263F7D668]) {
      return sub_20A5E78D0(a1, a2 & 1);
    }
    if (v12 != *MEMORY[0x263F7D670])
    {
      sub_20A8CA3E0();
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  return sub_20A8CA3E0();
}

uint64_t sub_20A5E78D0(uint64_t a1, int a2)
{
  int v34 = a2;
  v32[1] = *v2;
  uint64_t v33 = v2;
  sub_20A484450(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5EA874(0, (unint64_t *)&qword_26763AB50, MEMORY[0x263F7D2D8]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v14 = (char *)v32 - v13;
  uint64_t v15 = sub_20A8C40E0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1;
  uint64_t v21 = v20;
  sub_20A8CA3C0();
  sub_20A8C8330();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_20A6A2EB8((uint64_t)v6);
  uint64_t v22 = (uint64_t)v9;
  uint64_t v23 = v16;
  sub_20A5EA408(v22, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v6, 1, v21) == 1)
  {
    sub_20A5EA408((uint64_t)v6, (uint64_t (*)(void))sub_20A484450);
    return sub_20A8CA3E0();
  }
  else
  {
    uint64_t v25 = v19;
    uint64_t v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v23 + 32))(v18, v6, v21);
    if (v34)
    {
      MEMORY[0x270FA5388](v26);
      uint64_t v27 = v33;
      v32[-2] = v33;
      v32[-1] = v18;
      sub_20A8C6670();
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v25;
      *(void *)(v28 + 24) = v27;
      swift_retain();
      swift_retain();
      uint64_t v29 = (void *)sub_20A8C6450();
      sub_20A8C6520();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v30 = MEMORY[0x2105289B0](v33 + 2);
      if (v30)
      {
        uint64_t v31 = (void *)MEMORY[0x2105289B0](v30 + 16);
        if (v31)
        {
          sub_20A5EA540((uint64_t)v18, v19, v31);
          swift_unknownObjectRelease();
        }
        swift_unknownObjectRelease();
      }
    }
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v18, v21);
  }
}

uint64_t sub_20A5E7CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v93 = a2;
  uint64_t v94 = a1;
  uint64_t v90 = *v2;
  sub_20A5EA910(0, (unint64_t *)&qword_26763D180, MEMORY[0x263F7E0A8]);
  uint64_t v87 = *(void *)(v3 - 8);
  uint64_t v88 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v91 = (char *)&v74 - v4;
  sub_20A54071C();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v86 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A484450(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v83 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v84 = (uint64_t)&v74 - v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v74 - v12;
  uint64_t v14 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v82 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v74 - v17;
  sub_20A5EA874(0, (unint64_t *)&qword_26763AB50, MEMORY[0x263F7D2D8]);
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v74 - v22;
  uint64_t v24 = sub_20A8C40E0();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v74 - v29;
  sub_20A8CA3C0();
  sub_20A8C8330();
  uint64_t v85 = v21;
  uint64_t v31 = v21 + 8;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v33 = v23;
  uint64_t v34 = v25;
  uint64_t v35 = v31;
  v32(v33, v20);
  sub_20A6A2EB8((uint64_t)v13);
  uint64_t v36 = (uint64_t)v18;
  uint64_t v37 = v24;
  sub_20A5EA408(v36, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
  uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
  if (v38(v13, 1, v24) == 1)
  {
    sub_20A5EA408((uint64_t)v13, (uint64_t (*)(void))sub_20A484450);
    return sub_20A8CA3E0();
  }
  uint64_t v78 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v38;
  uint64_t v79 = (void (*)(uint64_t, uint64_t))v32;
  uint64_t v80 = v35;
  uint64_t v40 = v91;
  uint64_t v76 = v27;
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  v41(v30, v13, v24);
  uint64_t v42 = sub_20A8C2B50();
  uint64_t v89 = v30;
  if (v42)
  {
    uint64_t v75 = (void (*)(char *, uint64_t, uint64_t))v41;
    uint64_t v81 = v34;
    uint64_t v77 = v24;
    sub_20A8C8BE0();
    uint64_t v95 = v96;
    uint64_t v43 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
    sub_20A5EA910(0, &qword_26763AF48, MEMORY[0x263F7D550]);
    sub_20A5EACE0(&qword_26763AF70, &qword_26763AF48, v43);
    sub_20A8C9490();
    swift_release();
    uint64_t v44 = (uint64_t)v86;
    uint64_t v45 = v88;
    sub_20A8CBA70();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v40, v45);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v44, 1, v20) == 1)
    {
      sub_20A5EA408(v44, (uint64_t (*)(void))sub_20A54071C);
      uint64_t v46 = v84;
      uint64_t v37 = v77;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(v84, 1, 1, v77);
      uint64_t v47 = v94;
      uint64_t v48 = v90;
LABEL_8:
      sub_20A5EA408(v46, (uint64_t (*)(void))sub_20A484450);
      uint64_t v51 = v81;
      char v49 = v89;
      goto LABEL_9;
    }
    uint64_t v52 = (uint64_t)v82;
    sub_20A8C8330();
    v79(v44, v20);
    uint64_t v46 = v84;
    sub_20A6A2EB8(v84);
    sub_20A5EA408(v52, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
    uint64_t v37 = v77;
    int v53 = v78(v46, 1, v77);
    uint64_t v47 = v94;
    uint64_t v48 = v90;
    if (v53 == 1) {
      goto LABEL_8;
    }
    uint64_t v62 = v76;
    v75(v76, v46, v37);
    uint64_t v63 = sub_20A8C4050();
    uint64_t v65 = v64;
    uint64_t v66 = sub_20A8C4050();
    uint64_t v68 = v92;
    if (v63 == v66 && v65 == v67)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v69 = sub_20A8CF760();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v69 & 1) == 0)
      {
        uint64_t v70 = (void *)(v68 + *(void *)(*(void *)v68 + 128));
        uint64_t v71 = v70[3];
        uint64_t v91 = (char *)v70[4];
        __swift_project_boxed_opaque_existential_1(v70, v71);
        uint64_t v51 = v81;
        uint64_t v72 = (uint64_t)v83;
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v83, v62, v37);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v72, 0, 1, v37);
        uint64_t v73 = v62;
        char v49 = v89;
        sub_20A8C3660();
        swift_release();
        sub_20A5EA408(v72, (uint64_t (*)(void))sub_20A484450);
        (*(void (**)(char *, uint64_t))(v51 + 8))(v73, v37);
        uint64_t v47 = v94;
        goto LABEL_9;
      }
    }
    uint64_t v51 = v81;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v62, v37);
    char v49 = v89;
    uint64_t v47 = v94;
  }
  else
  {
    char v49 = v30;
    __swift_project_boxed_opaque_existential_1((void *)(v92 + *(void *)(*(void *)v92 + 128)), *(void *)(v92 + *(void *)(*(void *)v92 + 128) + 24));
    uint64_t v50 = (uint64_t)v83;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v83, 1, 1, v24);
    sub_20A8C3660();
    swift_release();
    sub_20A5EA408(v50, (uint64_t (*)(void))sub_20A484450);
    uint64_t v47 = v94;
    uint64_t v51 = v34;
    uint64_t v48 = v90;
  }
LABEL_9:
  uint64_t v54 = sub_20A8C2B50();
  uint64_t v57 = v48 + 80;
  uint64_t v56 = *(void *)(v48 + 80);
  uint64_t v55 = *(void *)(v57 + 8);
  uint64_t v96 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 64))(v49, v54, v47, v56, v55);
  uint64_t v58 = v47;
  uint64_t v59 = swift_allocObject();
  swift_weakInit();
  uint64_t v60 = (void *)swift_allocObject();
  v60[2] = v56;
  void v60[3] = v55;
  v60[4] = v59;
  v60[5] = v58;
  uint64_t v61 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A5EA910(0, (unint64_t *)&qword_26763AEF0, MEMORY[0x263F7D538]);
  sub_20A5EACE0(&qword_26763C810, (unint64_t *)&qword_26763AEF0, v61);
  swift_retain();
  swift_retain();
  sub_20A8C8C00();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v89, v37);
  swift_release();
  return swift_release();
}

uint64_t sub_20A5E86FC()
{
  uint64_t v1 = v0;
  sub_20A5EA7D8(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ManageWatchlistsContentMode(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C3F00();
  uint64_t v28 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v27 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A484450(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_20A8C40E0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5EA874(0, (unint64_t *)&qword_26763AB50, MEMORY[0x263F7D2D8]);
  sub_20A8C8330();
  sub_20A6A2EB8((uint64_t)v12);
  sub_20A5EA408((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16) == 1) {
    return sub_20A5EA408((uint64_t)v12, (uint64_t (*)(void))sub_20A484450);
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v12, v16);
  sub_20A47F8B0(v0 + *(void *)(*(void *)v0 + 152), (uint64_t)v7);
  sub_20A453638();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v7, 1, v21) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    return sub_20A5EA408((uint64_t)v7, type metadata accessor for ManageWatchlistsContentMode);
  }
  else
  {
    uint64_t v22 = v27;
    uint64_t v23 = v28;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v27, v7, v8);
    void v26[2] = *(void *)(v1 + *(void *)(*(void *)v1 + 136) + 8);
    v26[1] = swift_getObjectType();
    if (qword_26AC6ABF8 != -1) {
      swift_once();
    }
    v26[0] = qword_26AC9EA08;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v4, v19, v16);
    uint64_t v24 = type metadata accessor for WatchlistMembershipCommandContext(0);
    uint64_t v25 = &v4[*(int *)(v24 + 20)];
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v25, v22, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v25, 0, 1, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v4, 0, 1, v24);
    sub_20A8C8D40();
    sub_20A5EA408((uint64_t)v4, (uint64_t (*)(void))sub_20A5EA7D8);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
}

uint64_t sub_20A5E8C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v25 = sub_20A8C91C0();
  uint64_t v4 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C91A0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5EA874(0, (unint64_t *)&qword_26763AB50, MEMORY[0x263F7D2D8]);
  double v12 = MEMORY[0x270FA5388](v11);
  (*(void (**)(char *, uint64_t, double))(v14 + 16))((char *)&v23 - v13, a1, v12);
  sub_20A5EA80C();
  uint64_t v16 = &v10[*(int *)(v15 + 48)];
  uint64_t v17 = sub_20A8C2B70();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
  v18(v10, v23, v17);
  uint64_t v19 = v16;
  uint64_t v20 = v24;
  v18(v19, v24, v17);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7D658], v7);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F7D698], v25);
  sub_20A5EA874(0, &qword_26763C828, MEMORY[0x263F7DC18]);
  swift_allocObject();
  uint64_t v21 = sub_20A8CA3B0();
  sub_20A5E7CE8(v21, v20);
  return swift_release();
}

uint64_t sub_20A5E8F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A484450(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8C40E0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5EA874(0, (unint64_t *)&qword_26763AB50, MEMORY[0x263F7D2D8]);
  sub_20A8C8330();
  sub_20A6A2EB8((uint64_t)v8);
  sub_20A5EA408((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1) {
    return sub_20A5EA408((uint64_t)v8, (uint64_t (*)(void))sub_20A484450);
  }
  uint64_t v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 32))(v15, v8, v12);
  MEMORY[0x270FA5388](v17);
  *(&v20 - 4) = v3;
  *(&v20 - 3) = (uint64_t)v15;
  *(&v20 - 2) = a2;
  *(&v20 - 1) = a3;
  sub_20A8C6670();
  swift_retain();
  uint64_t v18 = (void *)sub_20A8C6450();
  sub_20A8C6520();
  swift_release();
  swift_release();

  swift_retain();
  uint64_t v19 = (void *)sub_20A8C6450();
  sub_20A8C6550();
  swift_release();
  swift_release();
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_20A5E92A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)a2 + 88);
  uint64_t v3 = *(void *)(*(void *)a2 + 80);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 72))(a1, a2 + *(void *)(*(void *)a2 + 152), v3, v2);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = (void *)swift_allocObject();
  long long v5[2] = v3;
  v5[3] = v2;
  v5[4] = v4;
  uint64_t v6 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A5EA910(0, (unint64_t *)&qword_26763AEF0, MEMORY[0x263F7D538]);
  sub_20A5EACE0(&qword_26763C810, (unint64_t *)&qword_26763AEF0, v6);
  swift_retain();
  sub_20A8C8C00();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_20A5E9458(uint64_t a1)
{
  uint64_t v2 = sub_20A8C9B80();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (id *)((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, uint64_t, uint64_t, double))(v3 + 16))(v6, a1, v2, v4);
  int v7 = (*(uint64_t (**)(id *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x263F7D960])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);
  }
  else if (v7 != *MEMORY[0x263F7D958])
  {
    if (v7 == *MEMORY[0x263F7D968])
    {
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        swift_retain();
        swift_release();
        sub_20A8C7270();
        sub_20A5EAB9C(&qword_26763C818, MEMORY[0x263F7A1F0]);
        sub_20A8C4980();
        swift_release();
      }
    }
    else
    {
      (*(void (**)(id *, uint64_t))(v3 + 8))(v6, v2);
    }
  }
}

uint64_t sub_20A5E9678(void *a1, uint64_t a2)
{
  sub_20A5EA50C(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C2F00();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v26 - v12;
  v26[1] = a1;
  id v14 = a1;
  sub_20A4756FC();
  char v15 = swift_dynamicCast();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if ((v15 & 1) == 0)
  {
    v16(v6, 1, 1, v7);
    return sub_20A5EA408((uint64_t)v6, (uint64_t (*)(void))sub_20A5EA50C);
  }
  v16(v6, 0, 1, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
  if (v17 == *MEMORY[0x263F7AA38])
  {
    uint64_t v18 = MEMORY[0x2105289B0](a2 + 16);
    if (v18)
    {
      uint64_t v19 = v18;
      uint64_t v20 = 0;
LABEL_9:
      sub_20A5B9F6C(v20, v19);
      swift_unknownObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  int v22 = v17;
  if (v17 == *MEMORY[0x263F7AA30])
  {
    uint64_t v23 = MEMORY[0x2105289B0](a2 + 16);
    if (v23)
    {
      uint64_t v19 = v23;
      uint64_t v20 = 1;
      goto LABEL_9;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  int v24 = *MEMORY[0x263F7AA28];
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t result = v25(v13, v7);
  if (v22 != v24) {
    return v25(v10, v7);
  }
  return result;
}

uint64_t sub_20A5E9984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)a2 + 88);
  uint64_t v5 = *(void *)(*(void *)a2 + 80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a3, v5, v4);
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v5;
  v7[3] = v4;
  void v7[4] = v6;
  v7[5] = a3;
  uint64_t v8 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A5EA910(0, (unint64_t *)&qword_26763AEF0, MEMORY[0x263F7D538]);
  sub_20A5EACE0(&qword_26763C810, (unint64_t *)&qword_26763AEF0, v8);
  swift_retain();
  swift_retain();
  sub_20A8C8C00();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_20A5E9B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void), void (*a7)(void))
{
  uint64_t v10 = sub_20A8C9B80();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = MEMORY[0x270FA5388](v10);
  id v14 = (id *)((char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, uint64_t, uint64_t, double))(v11 + 16))(v14, a1, v10, v12);
  uint64_t result = (*(uint64_t (**)(id *, uint64_t))(v11 + 88))(v14, v10);
  if (result == *MEMORY[0x263F7D960])
  {
    (*(void (**)(id *, uint64_t))(v11 + 96))(v14, v10);

    return sub_20A8CA3E0();
  }
  else if (result != *MEMORY[0x263F7D958])
  {
    if (result == *MEMORY[0x263F7D968])
    {
      swift_beginAccess();
      uint64_t result = swift_weakLoadStrong();
      if (result)
      {
        swift_retain();
        swift_release();
        a6(0);
        a7();
        sub_20A8C4980();
        return swift_release();
      }
    }
    else
    {
      return (*(uint64_t (**)(id *, uint64_t))(v11 + 8))(v14, v10);
    }
  }
  return result;
}

uint64_t *sub_20A5E9D4C()
{
  uint64_t v1 = *v0;
  sub_20A4380C4((uint64_t)(v0 + 2));
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 112));
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(void *)(*v0 + 128));
  swift_unknownObjectRelease();
  swift_release();
  sub_20A5EA408((uint64_t)v0 + *(void *)(*v0 + 152), type metadata accessor for ManageWatchlistsContentMode);
  return v0;
}

uint64_t sub_20A5E9E74()
{
  sub_20A5E9D4C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManageWatchlistsInteractor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_20A5E9EF4()
{
  return sub_20A5E86FC();
}

uint64_t sub_20A5E9F10(void *a1)
{
  uint64_t v21 = *(void *)v1;
  int v22 = a1;
  sub_20A540774();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5EA910(0, (unint64_t *)&qword_26763D180, MEMORY[0x263F7E0A8]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v19 - v8;
  sub_20A5EA910(0, (unint64_t *)&qword_26763AB58, MEMORY[0x263F7D450]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v23 = (char *)v19 - v13;
  uint64_t v20 = v1;
  v19[1] = *((void *)v1 + 4);
  sub_20A8C8BE0();
  uint64_t v24 = v25;
  id v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
  sub_20A5EA910(0, &qword_26763AF48, MEMORY[0x263F7D550]);
  sub_20A5EACE0(&qword_26763AF70, &qword_26763AF48, v14);
  sub_20A8C9490();
  swift_release();
  sub_20A8CBB90();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v4, 1, v11) == 1) {
    return sub_20A5EA408((uint64_t)v4, (uint64_t (*)(void))sub_20A540774);
  }
  uint64_t v16 = v23;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v23, v4, v11);
  __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  uint64_t v17 = *(void *)(sub_20A8C3690() + 16);
  swift_bridgeObjectRelease();
  sub_20A5EACE0(&qword_26763AB70, (unint64_t *)&qword_26763AB58, MEMORY[0x263F7D450]);
  sub_20A8CE840();
  sub_20A8CE8A0();
  if (v17 == sub_20A8CE890()) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  }
  uint64_t v25 = (*(uint64_t (**)(char *, void))(*(void *)(v21 + 88) + 40))(&v20[*(void *)(*(void *)v20 + 152)], *(void *)(v21 + 80));
  uint64_t v18 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A5EA910(0, (unint64_t *)&qword_26763AEF0, MEMORY[0x263F7D538]);
  sub_20A5EACE0(&qword_26763C810, (unint64_t *)&qword_26763AEF0, v18);
  sub_20A8C8C00();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  return swift_release();
}

uint64_t sub_20A5EA3D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270F78898](a1, a2, a3, *v3);
}

uint64_t sub_20A5EA408(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A5EA468()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + *(void *)(**(void **)(v0 + 16) + 128));
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  return sub_20A8C3630();
}

uint64_t sub_20A5EA4E8(uint64_t a1, uint64_t a2)
{
  return sub_20A5E92A0(a1, a2);
}

uint64_t sub_20A5EA504(void *a1)
{
  return sub_20A5E9678(a1, v1);
}

void sub_20A5EA50C(uint64_t a1)
{
}

uint64_t sub_20A5EA540(uint64_t a1, uint64_t a2, void *a3)
{
  sub_20A5EABE4(0, &qword_26763C840, MEMORY[0x263F7AFD8], MEMORY[0x263F8E0F8]);
  uint64_t v6 = sub_20A8C40E0();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v9 + v8, a1, v6);
  objc_msgSend(a3, sel_traitCollection);
  sub_20A5EAC48();
  sub_20A8CB470();
  swift_allocObject();
  sub_20A8CB420();
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = a2;
  swift_retain();
  swift_retain();
  sub_20A8CB450();
  swift_release();
  swift_release();
  swift_release();
  sub_20A8CB430();

  return swift_release();
}

uint64_t sub_20A5EA75C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A5EA794()
{
  swift_release();

  return swift_deallocObject();
}

void sub_20A5EA7CC(uint64_t a1)
{
}

void sub_20A5EA7D8(uint64_t a1)
{
}

void sub_20A5EA80C()
{
  if (!qword_26763C820)
  {
    sub_20A8C2B70();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763C820);
    }
  }
}

void sub_20A5EA874(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for ManageWatchlistsModel();
    uint64_t v7 = sub_20A5EAB9C((unint64_t *)&unk_26763D170, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsModel);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A5EA910(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for ManageWatchlistsSectionDescriptor;
    v8[1] = type metadata accessor for ManageWatchlistsModel();
    v8[2] = sub_20A42D7D4();
    void v8[3] = sub_20A5EAB9C((unint64_t *)&unk_26763D170, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A5EA9D4(uint64_t a1)
{
  return sub_20A5E9B34(a1, v1[4], v1[5], v1[2], v1[3], MEMORY[0x263F7A190], (void (*)(void))sub_20A5EAA1C);
}

uint64_t sub_20A5EAA1C()
{
  return sub_20A5EAB9C(&qword_26763C830, MEMORY[0x263F7A190]);
}

uint64_t sub_20A5EAA50()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + *(void *)(**(void **)(v0 + 16) + 128));
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  return sub_20A8C3620();
}

uint64_t sub_20A5EAAC0(uint64_t a1, uint64_t a2)
{
  return sub_20A5E9984(a1, a2, *(void *)(v2 + 16));
}

uint64_t objectdestroy_8Tm()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A5EAB20(uint64_t a1)
{
  return sub_20A5E9B34(a1, v1[4], v1[5], v1[2], v1[3], MEMORY[0x263F7A100], (void (*)(void))sub_20A5EAB68);
}

uint64_t sub_20A5EAB68()
{
  return sub_20A5EAB9C(&qword_26763C838, MEMORY[0x263F7A100]);
}

uint64_t sub_20A5EAB9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A5EABE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_20A5EAC48()
{
  unint64_t result = qword_26763C848;
  if (!qword_26763C848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C848);
  }
  return result;
}

uint64_t sub_20A5EAC9C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A5EACD8()
{
  return sub_20A691BF0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_20A5EACE0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A5EA910(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_20A5EAD24(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = sub_20A8C2530();
    uint64_t v8 = *(void *)(v7 - 8);
    int v9 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7);
    if (EnumCaseMultiPayload == 1)
    {
      if (v9) {
        goto LABEL_7;
      }
    }
    else if (v9)
    {
LABEL_7:
      sub_20A4845D0(0);
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    goto LABEL_9;
  }
  uint64_t v10 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_20A5EAF20(uint64_t a1)
{
  uint64_t v2 = sub_20A8C2530();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_20A5EAFF0(void *a1, const void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_20A8C2530();
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = (*(uint64_t (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5);
  if (EnumCaseMultiPayload != 1)
  {
    if (v7) {
      goto LABEL_3;
    }
LABEL_5:
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    goto LABEL_6;
  }
  if (!v7) {
    goto LABEL_5;
  }
LABEL_3:
  sub_20A4845D0(0);
  memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_6:
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_20A5EB19C(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_20A5EB358((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_20A8C2530();
    uint64_t v6 = *(void *)(v5 - 8);
    int v7 = (*(uint64_t (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5);
    if (EnumCaseMultiPayload == 1)
    {
      if (v7)
      {
LABEL_4:
        sub_20A4845D0(0);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_7:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else if (v7)
    {
      goto LABEL_4;
    }
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    goto LABEL_7;
  }
  return a1;
}

uint64_t sub_20A5EB358(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockListRouteModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for StockListRouteModel()
{
  uint64_t result = qword_26763C850;
  if (!qword_26763C850) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_20A5EB400(void *a1, const void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_20A8C2530();
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = (*(uint64_t (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5);
  if (EnumCaseMultiPayload != 1)
  {
    if (v7) {
      goto LABEL_3;
    }
LABEL_5:
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    goto LABEL_6;
  }
  if (!v7) {
    goto LABEL_5;
  }
LABEL_3:
  sub_20A4845D0(0);
  memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_6:
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_20A5EB5AC(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_20A5EB358((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_20A8C2530();
    uint64_t v6 = *(void *)(v5 - 8);
    int v7 = (*(uint64_t (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5);
    if (EnumCaseMultiPayload == 1)
    {
      if (v7)
      {
LABEL_4:
        sub_20A4845D0(0);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_7:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else if (v7)
    {
      goto LABEL_4;
    }
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    goto LABEL_7;
  }
  return a1;
}

void sub_20A5EB768()
{
  sub_20A4845D0(319);
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t type metadata accessor for TickerStyler()
{
  return self;
}

uint64_t type metadata accessor for TickerCardContainerStyler()
{
  return self;
}

uint64_t sub_20A5EB83C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 40);
  uint64_t v8 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  uint64_t v12 = v10(a1, v7, v9);
  double v13 = MEMORY[0x270FA5388](v12);
  char v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A431A50((uint64_t)v15, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

id static NSTimer.repeatingTimer(withTimeInterval:tolerance:block:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8 = self;
  void v12[4] = a1;
  v12[5] = a2;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 1107296256;
  v12[2] = sub_20A4391D4;
  v12[3] = &block_descriptor_20;
  uint64_t v9 = _Block_copy(v12);
  swift_retain();
  swift_release();
  id v10 = objc_msgSend(v8, sel_scheduledTimerWithTimeInterval_repeats_block_, 1, v9, a3);
  _Block_release(v9);
  objc_msgSend(v10, sel_setTolerance_, a4);
  return v10;
}

double sub_20A5EBA94(uint64_t a1)
{
  uint64_t v3 = *MEMORY[0x263F8EED0] & *v1;
  uint64_t v6 = (void *)sub_20A8C98A0();
  double v4 = (*(double (**)(void, uint64_t))(a1 + 8))(*(void *)(v3 + *MEMORY[0x263F7D8A0]), a1);

  return v4;
}

double sub_20A5EBB48(uint64_t a1, uint64_t a2)
{
  return sub_20A5EBA94(*(void *)(a2 - 8));
}

uint64_t sub_20A5EBB70@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t v10 = sub_20A8C8180();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v11 + 104))(v14, *MEMORY[0x263F7D268], v10, v12);
  sub_20A8C8170();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  *(double *)(a1 + 16) = a4;
  *(double *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = v16;
  *(void *)(a1 + 40) = v18;
  *(void *)(a1 + 48) = v20;
  *(void *)(a1 + 56) = v22;
  return result;
}

uint64_t type metadata accessor for BrandingTitleViewLayoutAttributesFactory()
{
  return self;
}

uint64_t sub_20A5EBCFC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for PriceViewModel();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  double v12 = (char *)&v34 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t v15 = sub_20A8C3410();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  int v19 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15);
  if (v19 == *MEMORY[0x263F7AB90])
  {
    if ((*(unsigned char *)(v3 + 24) & 1) == 0)
    {
      char v20 = (*(unsigned char *)(v3 + 8) & 1) == 0 && (*(double *)v3 == 0.0 || *(double *)v3 >= 5.0);
      double v26 = *(double *)(v3 + 16);
      if (qword_26AC6D688 != -1)
      {
        double v35 = *(double *)(v3 + 16);
        swift_once();
        double v26 = v35;
      }
      uint64_t v23 = sub_20A8C0DB4(v20, v26);
      uint64_t v28 = v27;
      sub_20A5EF1E0(v3, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
      if (!v28)
      {
        uint64_t v23 = *((void *)v14 + 8);
        swift_bridgeObjectRetain();
      }
      sub_20A5EF248((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
      return v23;
    }
    goto LABEL_17;
  }
  if (v19 == *MEMORY[0x263F7AB78])
  {
    if ((*(unsigned char *)(v3 + 8) & 1) == 0 && (*(unsigned char *)(v3 + 24) & 1) == 0)
    {
      double v21 = *(double *)v3;
      double v22 = *(double *)(v3 + 16);
      if (qword_267639B30 != -1)
      {
        double v34 = *(double *)(v3 + 16);
        double v35 = v21;
        swift_once();
        double v22 = v34;
        double v21 = v35;
      }
      uint64_t v23 = sub_20A5D92D4(a2 & 1, v21, v22);
      uint64_t v25 = v24;
      sub_20A5EF1E0(v3, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
      if (!v25)
      {
        uint64_t v23 = *((void *)v12 + 8);
        swift_bridgeObjectRetain();
      }
      sub_20A5EF248((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
      return v23;
    }
    goto LABEL_17;
  }
  if (v19 == *MEMORY[0x263F7AB88])
  {
    if ((sub_20A8C2E90() & 1) == 0) {
      return sub_20A5EDF80(a2 & 1);
    }
    if ((*(unsigned char *)(v3 + 8) & 1) == 0 && (*(unsigned char *)(v3 + 24) & 1) == 0)
    {
      double v30 = *(double *)v3;
      double v31 = *(double *)(v3 + 16);
      if (qword_267639B30 != -1)
      {
        double v34 = *(double *)(v3 + 16);
        double v35 = v30;
        swift_once();
        double v31 = v34;
        double v30 = v35;
      }
      uint64_t v23 = sub_20A5D92D4(a2 & 1, v30, v31);
      uint64_t v33 = v32;
      sub_20A5EF1E0(v3, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
      if (!v33)
      {
        uint64_t v23 = *((void *)v9 + 8);
        swift_bridgeObjectRetain();
      }
      sub_20A5EF248((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
      return v23;
    }
LABEL_17:
    uint64_t v23 = *(void *)(v3 + 64);
    swift_bridgeObjectRetain();
    return v23;
  }
  uint64_t result = sub_20A8CF750();
  __break(1u);
  return result;
}

uint64_t sub_20A5EC13C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8C3410();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v6, v1, v2, v4);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  BOOL v8 = v7 == *MEMORY[0x263F7AB90] || v7 == *MEMORY[0x263F7AB78];
  if (v8 || v7 == *MEMORY[0x263F7AB88])
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v10 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v11 = sub_20A8C2370();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 0;
  }
  return v11;
}

uint64_t sub_20A5EC394(uint64_t a1)
{
  uint64_t v3 = sub_20A8C2990();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  double v12 = (char *)&v32 - v11;
  uint64_t v13 = sub_20A8C3410();
  uint64_t v14 = *(void *)(v13 - 8);
  double v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))(v17, a1, v13, v15);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v17, v13);
  if (v18 == *MEMORY[0x263F7AB90])
  {
    if ((*(unsigned char *)(v1 + 24) & 1) == 0)
    {
      double v19 = *(double *)(v1 + 16);
      if (qword_26AC6D688 != -1)
      {
        double v33 = *(double *)(v1 + 16);
        swift_once();
        double v19 = v33;
      }
      uint64_t v20 = sub_20A8C0EC0(1, v19);
      uint64_t v22 = v21;
      sub_20A5EF1E0(v1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
      if (!v22)
      {
        uint64_t v20 = *((void *)v12 + 8);
        swift_bridgeObjectRetain();
      }
      sub_20A5EF248((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
      return v20;
    }
    return 0;
  }
  if (v18 != *MEMORY[0x263F7AB78])
  {
    if (v18 != *MEMORY[0x263F7AB88])
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      return 0;
    }
    if (*(unsigned char *)(v1 + 40)) {
      return 0;
    }
    uint64_t v20 = 0;
    double v27 = *(double *)(v1 + 32);
    if (v27 <= -9.22337204e18 || v27 >= 9.22337204e18) {
      return v20;
    }
    if ((~*(void *)(v1 + 32) & 0x7FF0000000000000) != 0)
    {
      if (v27 > -9.22337204e18)
      {
        uint64_t v20 = (uint64_t)v27;
        if (qword_267639B38 == -1)
        {
          if (v20 < 1) {
            return 0;
          }
          goto LABEL_24;
        }
LABEL_32:
        swift_once();
        if (v20 < 1) {
          return 0;
        }
LABEL_24:
        uint64_t v28 = *(void **)(qword_267652E40 + 16);
        sub_20A8C2940();
        uint64_t v29 = (void *)sub_20A8C2900();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        id v30 = objc_msgSend(v28, sel_formattedCount_withLocale_longform_compactDisplay_, v20, v29, 1, 0);

        if (v30)
        {
          uint64_t v20 = sub_20A8CE280();

          return v20;
        }
        return 0;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_32;
  }
  if (*(unsigned char *)(v1 + 8) & 1) != 0 || (*(unsigned char *)(v1 + 24)) {
    return 0;
  }
  double v23 = *(double *)v1;
  double v24 = *(double *)(v1 + 16);
  if (qword_267639B30 != -1)
  {
    double v32 = *(double *)(v1 + 16);
    double v33 = v23;
    swift_once();
    double v24 = v32;
    double v23 = v33;
  }
  uint64_t v20 = sub_20A5D9434(v23, v24);
  uint64_t v26 = v25;
  sub_20A5EF1E0(v1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  if (!v26)
  {
    uint64_t v20 = *((void *)v9 + 8);
    swift_bridgeObjectRetain();
  }
  sub_20A5EF248((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  return v20;
}

uint64_t sub_20A5EC850@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v66 = a3;
  uint64_t v67 = a4;
  uint64_t v76 = a2;
  uint64_t v74 = a5;
  uint64_t v68 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v68);
  uint64_t v7 = (uint64_t *)((char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_20A8C2990();
  uint64_t v72 = *(void *)(v8 - 8);
  uint64_t v73 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v71 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C2EB0();
  uint64_t v64 = *(void *)(v10 - 8);
  uint64_t v65 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v63 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8C4030();
  uint64_t v69 = *(void *)(v12 - 8);
  uint64_t v70 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v75 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C470(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  double v19 = (char *)&v54 - v18;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v54 - v21;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v54 - v24;
  sub_20A5EF1E0(a1, (uint64_t)&v54 - v24, (uint64_t (*)(void))sub_20A42C470);
  uint64_t v26 = sub_20A8C3E10();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v28(v25, 1, v26) == 1)
  {
    sub_20A5EF248((uint64_t)v25, (uint64_t (*)(void))sub_20A42C470);
    uint64_t v62 = 0;
    int v61 = 1;
  }
  else
  {
    uint64_t v62 = sub_20A8C3E00();
    int v61 = v29 & 1;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v25, v26);
  }
  sub_20A5EF1E0(a1, (uint64_t)v22, (uint64_t (*)(void))sub_20A42C470);
  if (v28(v22, 1, v26) == 1)
  {
    sub_20A5EF248((uint64_t)v22, (uint64_t (*)(void))sub_20A42C470);
    uint64_t v60 = 0;
    int v59 = 1;
  }
  else
  {
    uint64_t v60 = sub_20A8C3D10();
    int v59 = v30 & 1;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v22, v26);
  }
  uint64_t v77 = a1;
  sub_20A5EF1E0(a1, (uint64_t)v19, (uint64_t (*)(void))sub_20A42C470);
  if (v28(v19, 1, v26) == 1)
  {
    sub_20A5EF248((uint64_t)v19, (uint64_t (*)(void))sub_20A42C470);
    uint64_t v58 = 0;
    int v57 = 1;
  }
  else
  {
    uint64_t v58 = sub_20A8C3DC0();
    int v57 = v31 & 1;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v26);
  }
  sub_20A5EF1E0(v77, (uint64_t)v16, (uint64_t (*)(void))sub_20A42C470);
  unsigned int v32 = v28(v16, 1, v26);
  uint64_t v56 = v7;
  if (v32 == 1)
  {
    sub_20A5EF248((uint64_t)v16, (uint64_t (*)(void))sub_20A42C470);
    uint64_t v55 = 0;
    uint64_t v33 = 0;
  }
  else
  {
    uint64_t v55 = sub_20A8C3D30();
    uint64_t v33 = v34;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v26);
  }
  uint64_t v35 = v69;
  uint64_t v36 = v70;
  uint64_t v37 = v75;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 16);
  v38(v75, (uint64_t)v76, v70);
  uint64_t v40 = v63;
  uint64_t v39 = v64;
  uint64_t v41 = v65;
  (*(void (**)(char *, void, uint64_t))(v64 + 104))(v63, *MEMORY[0x263F7A9A0], v65);
  uint64_t v42 = v71;
  sub_20A8C2910();
  uint64_t v43 = v56;
  *uint64_t v56 = v62;
  *((unsigned char *)v43 + 8) = v61;
  _OWORD v43[2] = v60;
  *((unsigned char *)v43 + 24) = v59;
  v43[4] = v58;
  *((unsigned char *)v43 + 40) = v57;
  v43[6] = v55;
  v43[7] = v33;
  uint64_t v44 = v68;
  uint64_t v45 = v37;
  uint64_t v46 = (uint64_t)v43;
  v38((char *)v43 + *(int *)(v68 + 40), (uint64_t)v45, v36);
  uint64_t v47 = v67;
  *(void *)(v46 + 64) = v66;
  *(void *)(v46 + 72) = v47;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 16))(v46 + *(int *)(v44 + 36), v40, v41);
  uint64_t v49 = v72;
  uint64_t v48 = v73;
  (*(void (**)(uint64_t, char *, uint64_t))(v72 + 16))(v46 + *(int *)(v44 + 44), v42, v73);
  if (qword_26AC6D680 != -1) {
    swift_once();
  }
  uint64_t v50 = qword_26AC9EA70;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
  uint64_t v51 = *(void (**)(char *, uint64_t))(v35 + 8);
  v51(v75, v36);
  uint64_t v52 = v50 + OBJC_IVAR____TtC8StocksUI14PriceFormatter_locale;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v49 + 40))(v52, v42, v48);
  swift_endAccess();
  sub_20A5EF2A8(v46, v74);
  v51(v76, v36);
  return sub_20A5EF248(v77, (uint64_t (*)(void))sub_20A42C470);
}

uint64_t sub_20A5ECFE0()
{
  type metadata accessor for PriceFormatter();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_20A8C2910();
  qword_26AC9EA70 = v0;
  return result;
}

uint64_t sub_20A5ED030()
{
  type metadata accessor for PriceChangeFormatter();
  uint64_t result = swift_initStaticObject();
  qword_26AC9E950 = result;
  return result;
}

uint64_t sub_20A5ED060()
{
  type metadata accessor for PercentChangeFormatter();
  uint64_t result = swift_initStaticObject();
  qword_267652E38 = result;
  return result;
}

id sub_20A5ED090()
{
  type metadata accessor for UnitNumberFormatter();
  uint64_t v0 = swift_allocObject();
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7AFE8]), sel_init);
  *(void *)(v0 + 16) = result;
  qword_267652E40 = v0;
  return result;
}

uint64_t StockType.shouldShowCurrencySymbol.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8C4030();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v6, v1, v2, v4);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 != *MEMORY[0x263F7AF90]
    && v7 != *MEMORY[0x263F7AF98]
    && v7 != *MEMORY[0x263F7AF68]
    && v7 != *MEMORY[0x263F7AF80]
    && v7 != *MEMORY[0x263F7AF70]
    && v7 != *MEMORY[0x263F7AF88])
  {
    if (v7 == *MEMORY[0x263F7AF78]) {
      return 0;
    }
    if (v7 != *MEMORY[0x263F7AF60]) {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }
  }
  return 1;
}

void *sub_20A5ED278(uint64_t a1, uint64_t *a2, int *a3)
{
  double v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *double v4 = *a2;
    double v4 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v7 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v7;
    uint64_t v8 = a2[9];
    uint64_t v9 = a3[9];
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v8;
    uint64_t v12 = sub_20A8C2EB0();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[10];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = sub_20A8C4030();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = a3[11];
    double v19 = (char *)v4 + v18;
    uint64_t v20 = (uint64_t)a2 + v18;
    uint64_t v21 = sub_20A8C2990();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v4;
}

uint64_t sub_20A5ED440(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[10];
  uint64_t v7 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[11];
  uint64_t v9 = sub_20A8C2990();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);

  return v10(v8, v9);
}

uint64_t sub_20A5ED548(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  uint64_t v8 = a3[9];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v11 = sub_20A8C2EB0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = a3[10];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[11];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

uint64_t sub_20A5ED6C0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v7;
  uint64_t v8 = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[9];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (uint64_t)a2 + v9;
  uint64_t v12 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[10];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (uint64_t)a2 + v13;
  uint64_t v16 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = a3[11];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t)a2 + v17;
  uint64_t v20 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

uint64_t sub_20A5ED844(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 64);
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  uint64_t v10 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[10];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[11];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t sub_20A5ED990(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[9];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[10];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[11];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t sub_20A5EDAF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A5EDB08);
}

uint64_t sub_20A5EDB08(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 72);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_20A8C2EB0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[9];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_20A8C4030();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[10];
    goto LABEL_9;
  }
  uint64_t v14 = sub_20A8C2990();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[11];

  return v15(v17, a2, v16);
}

uint64_t sub_20A5EDC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A5EDC94);
}

uint64_t sub_20A5EDC94(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 72) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_20A8C2EB0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[9];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_20A8C4030();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_7;
  }
  uint64_t v14 = sub_20A8C2990();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[11];

  return v15(v17, a2, a2, v16);
}

uint64_t type metadata accessor for PriceViewModel()
{
  uint64_t result = qword_26AC6D690;
  if (!qword_26AC6D690) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A5EDE58()
{
  uint64_t result = sub_20A8C2EB0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20A8C4030();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_20A8C2990();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_20A5EDF80(char a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v1 + 40) & 1) != 0
    || ((double v8 = *(double *)(v1 + 32), v8 > -9.22337204e18) ? (v9 = v8 < 9.22337204e18) : (v9 = 0), !v9))
  {
    uint64_t v10 = *(void *)(v1 + 64);
    swift_bridgeObjectRetain();
    return v10;
  }
  if ((~*(void *)(v1 + 32) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v2 = (uint64_t)v8;
  if (qword_267639B38 != -1) {
LABEL_16:
  }
    swift_once();
  uint64_t v10 = sub_20A7B5354(v2, 0, a1 & 1);
  uint64_t v12 = v11;
  sub_20A5EF1E0(v3, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  if (!v12)
  {
    uint64_t v10 = *((void *)v7 + 8);
    swift_bridgeObjectRetain();
  }
  sub_20A5EF248((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  return v10;
}

unint64_t sub_20A5EE108(char a1)
{
  unint64_t result = 0x6563697270;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6168436563697270;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0x79636E6572727563;
      break;
    case 4:
      unint64_t result = 0x6B6361626C6C6166;
      break;
    case 5:
      unint64_t result = 0x65676E6168637865;
      break;
    case 6:
      unint64_t result = 0x7079546B636F7473;
      break;
    case 7:
      unint64_t result = 0x656C61636F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A5EE230(void *a1)
{
  sub_20A5EF360(0, &qword_26763C888, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5EF30C();
  sub_20A8CF8F0();
  v9[15] = 0;
  sub_20A8CF680();
  if (!v1)
  {
    v9[14] = 1;
    sub_20A8CF680();
    v9[13] = 2;
    sub_20A8CF680();
    v9[12] = 3;
    sub_20A8CF670();
    v9[11] = 4;
    sub_20A8CF6B0();
    type metadata accessor for PriceViewModel();
    v9[10] = 5;
    sub_20A8C2EB0();
    sub_20A5EF3C4(&qword_26763C890, MEMORY[0x263F7A9C0]);
    sub_20A8CF6E0();
    v9[9] = 6;
    sub_20A8C4030();
    sub_20A5EF3C4(&qword_26763C898, MEMORY[0x263F7AFA0]);
    sub_20A8CF6E0();
    v9[8] = 7;
    sub_20A8C2990();
    sub_20A5EF3C4(&qword_26763C8A0, MEMORY[0x263F07690]);
    sub_20A8CF6E0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_20A5EE59C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v40 = sub_20A8C2990();
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v43 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_20A8C4030();
  uint64_t v41 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_20A8C2EB0();
  uint64_t v45 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5EF360(0, &qword_26763C860, MEMORY[0x263F8E040]);
  uint64_t v44 = v8;
  uint64_t v42 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v36 - v9;
  uint64_t v47 = (int *)type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v47);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5EF30C();
  uint64_t v14 = v10;
  uint64_t v15 = v49;
  sub_20A8CF8E0();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v49 = v7;
  uint64_t v37 = v5;
  uint64_t v17 = v42;
  uint64_t v16 = v43;
  char v57 = 0;
  uint64_t v18 = v44;
  uint64_t v19 = v14;
  *(void *)uint64_t v12 = sub_20A8CF5F0();
  v12[8] = v20 & 1;
  char v56 = 1;
  uint64_t v21 = (uint64_t)v13;
  *((void *)v12 + 2) = sub_20A8CF5F0();
  v12[24] = v22 & 1;
  char v55 = 2;
  *((void *)v12 + 4) = sub_20A8CF5F0();
  v12[40] = v23 & 1;
  char v54 = 3;
  *((void *)v12 + 6) = sub_20A8CF5E0();
  *((void *)v12 + 7) = v24;
  char v53 = 4;
  *((void *)v12 + 8) = sub_20A8CF620();
  *((void *)v12 + 9) = v25;
  char v52 = 5;
  sub_20A5EF3C4(&qword_26763C870, MEMORY[0x263F7A9C0]);
  uint64_t v27 = v48;
  uint64_t v26 = v49;
  sub_20A8CF640();
  uint64_t v28 = v27;
  char v29 = v12;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v12[v47[9]], v26, v28);
  char v51 = 6;
  sub_20A5EF3C4(&qword_26763C878, MEMORY[0x263F7AFA0]);
  char v30 = v37;
  uint64_t v31 = v46;
  sub_20A8CF640();
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v29[v47[10]], v30, v31);
  char v50 = 7;
  sub_20A5EF3C4(&qword_26763C880, MEMORY[0x263F07690]);
  uint64_t v32 = (uint64_t)v29;
  uint64_t v33 = v16;
  uint64_t v34 = v40;
  sub_20A8CF640();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v18);
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v32 + v47[11], v33, v34);
  sub_20A5EF1E0(v32, v39, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  __swift_destroy_boxed_opaque_existential_1(v21);
  return sub_20A5EF248(v32, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
}

unint64_t sub_20A5EECEC()
{
  return sub_20A5EE108(*v0);
}

uint64_t sub_20A5EECF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A5EF6A8(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A5EED1C(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_20A5EED28(uint64_t a1)
{
  unint64_t v2 = sub_20A5EF30C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A5EED64(uint64_t a1)
{
  unint64_t v2 = sub_20A5EF30C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20A5EEDA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A5EE59C(a1, a2);
}

uint64_t sub_20A5EEDB8(void *a1)
{
  return sub_20A5EE230(a1);
}

uint64_t sub_20A5EEDD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v27 - v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (double *)((char *)&v27 - v11);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (double *)((char *)&v27 - v14);
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a2 + 8))
    {
      sub_20A5EF1E0(a1, (uint64_t)&v27 - v14, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
      sub_20A5EF1E0(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
      goto LABEL_12;
    }
    goto LABEL_5;
  }
  if (*(unsigned char *)(a2 + 8))
  {
LABEL_5:
    sub_20A5EF1E0(a1, (uint64_t)&v27 - v14, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
    sub_20A5EF1E0(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
LABEL_6:
    sub_20A5EF248((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
    sub_20A5EF248((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
    goto LABEL_7;
  }
  double v18 = *(double *)a1;
  double v19 = *(double *)a2;
  sub_20A5EF1E0(a1, (uint64_t)&v27 - v14, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  sub_20A5EF1E0(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  if (v18 != v19) {
    goto LABEL_6;
  }
LABEL_12:
  double v20 = v15[2];
  char v21 = *((unsigned char *)v15 + 24);
  sub_20A5EF248((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  double v22 = v12[2];
  char v23 = *((unsigned char *)v12 + 24);
  sub_20A5EF248((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  if (v21)
  {
    if (v23)
    {
      sub_20A5EF1E0(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
      sub_20A5EF1E0(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
      goto LABEL_17;
    }
    goto LABEL_7;
  }
  if (v23)
  {
LABEL_7:
    sub_20A5EF1E0(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
    sub_20A5EF1E0(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
LABEL_8:
    sub_20A5EF248((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
    sub_20A5EF248((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
LABEL_9:
    char v16 = 0;
    return v16 & 1;
  }
  sub_20A5EF1E0(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  sub_20A5EF1E0(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  if (v20 != v22) {
    goto LABEL_8;
  }
LABEL_17:
  uint64_t v24 = *((void *)v9 + 7);
  uint64_t v25 = *((void *)v6 + 7);
  if (!v24)
  {
    swift_bridgeObjectRetain();
    sub_20A5EF248((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
    sub_20A5EF248((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
    if (!v25)
    {
      char v16 = 1;
      return v16 & 1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (!v25)
  {
    swift_bridgeObjectRetain();
    sub_20A5EF248((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
    sub_20A5EF248((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (*((void *)v9 + 6) == *((void *)v6 + 6) && v24 == v25) {
    char v16 = 1;
  }
  else {
    char v16 = sub_20A8CF760();
  }
  swift_bridgeObjectRetain();
  sub_20A5EF248((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  sub_20A5EF248((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  swift_bridgeObjectRelease();
  return v16 & 1;
}

uint64_t sub_20A5EF1E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A5EF248(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A5EF2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PriceViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_20A5EF30C()
{
  unint64_t result = qword_26763C868;
  if (!qword_26763C868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C868);
  }
  return result;
}

void sub_20A5EF360(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A5EF30C();
    unint64_t v7 = a3(a1, &type metadata for PriceViewModel.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A5EF3C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PriceViewModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PriceViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A5EF568);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PriceViewModel.CodingKeys()
{
  return &type metadata for PriceViewModel.CodingKeys;
}

unint64_t sub_20A5EF5A4()
{
  unint64_t result = qword_26763C8A8;
  if (!qword_26763C8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C8A8);
  }
  return result;
}

unint64_t sub_20A5EF5FC()
{
  unint64_t result = qword_26763C8B0;
  if (!qword_26763C8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C8B0);
  }
  return result;
}

unint64_t sub_20A5EF654()
{
  unint64_t result = qword_26763C8B8;
  if (!qword_26763C8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C8B8);
  }
  return result;
}

uint64_t sub_20A5EF6A8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6563697270 && a2 == 0xE500000000000000;
  if (v2 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168436563697270 && a2 == 0xEB0000000065676ELL || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000020A904C80 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xEC00000065646F43 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6B6361626C6C6166 && a2 == 0xEC00000074786554 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65676E6168637865 && a2 == 0xEE00737574617453 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7079546B636F7473 && a2 == 0xE900000000000065 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_20A5EFA54(uint64_t a1)
{
  uint64_t v2 = sub_20A8C4610();
  uint64_t v47 = *(void *)(v2 - 8);
  uint64_t v48 = v2;
  MEMORY[0x270FA5388](v2);
  unsigned int v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C6820();
  uint64_t v51 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  BOOL v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  char v50 = (char *)&v40 - v9;
  uint64_t v49 = sub_20A8C7720();
  uint64_t v10 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C7710();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  char v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for WebViewSession() + 24)))
  {
    sub_20A8C4910();
    sub_20A5F0A4C(0, &qword_26AC7FED8, MEMORY[0x263F24E48]);
    uint64_t v42 = v5;
    uint64_t v17 = sub_20A8C4850();
    uint64_t v46 = v13;
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v43 = v16;
    uint64_t v19 = v18;
    uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
    uint64_t v41 = v7;
    uint64_t v21 = (v20 + 32) & ~v20;
    uint64_t v22 = swift_allocObject();
    uint64_t v45 = v14;
    long long v44 = xmmword_20A8D3DC0;
    *(_OWORD *)(v22 + 16) = xmmword_20A8D3DC0;
    char v23 = (char *)(v22 + v21);
    strcpy(v23, "widgetHeadline");
    v23[15] = -18;
    (*(void (**)(void))(v19 + 104))();
    LOBYTE(v21) = sub_20A8C4600();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v4, v48);
    uint64_t v24 = v51;
    uint64_t v25 = (unsigned int *)MEMORY[0x263F79A38];
    if ((v21 & 1) == 0) {
      uint64_t v25 = (unsigned int *)MEMORY[0x263F79A58];
    }
    uint64_t v26 = v41;
    uint64_t v27 = v42;
    (*(void (**)(char *, void, uint64_t))(v51 + 104))(v41, *v25, v42);
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F7A650], v49);
    uint64_t v28 = v26;
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v50, v26, v27);
    swift_bridgeObjectRetain();
    char v29 = v43;
    sub_20A8C7700();
    sub_20A5F0A4C(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50]);
    uint64_t v30 = sub_20A8C4620();
    uint64_t v31 = *(void *)(v30 - 8);
    unint64_t v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = v44;
    (*(void (**)(unint64_t, void, uint64_t))(v31 + 104))(v33 + v32, *MEMORY[0x263F24D40], v30);
    sub_20A5F0AA0((unint64_t *)&unk_26AC69B50, MEMORY[0x263F7A640]);
    uint64_t v34 = v46;
    sub_20A8C4940();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v29, v34);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v28, v27);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F7A650], v49);
    (*(void (**)(char *, void, uint64_t))(v51 + 104))(v50, *MEMORY[0x263F79A18], v5);
    swift_bridgeObjectRetain();
    sub_20A8C7700();
    sub_20A5F0A4C(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50]);
    uint64_t v35 = sub_20A8C4620();
    uint64_t v36 = *(void *)(v35 - 8);
    unint64_t v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_20A8D3DC0;
    (*(void (**)(unint64_t, void, uint64_t))(v36 + 104))(v38 + v37, *MEMORY[0x263F24D40], v35);
    sub_20A5F0AA0((unint64_t *)&unk_26AC69B50, MEMORY[0x263F7A640]);
    sub_20A8C4940();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  sub_20A8C7390();
  sub_20A5F0AA0(&qword_26763C8D8, MEMORY[0x263F7A2F0]);
  return sub_20A8C4960();
}

uint64_t sub_20A5F0228(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = a1;
  uint64_t v3 = sub_20A8C6B00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v25 = sub_20A8C40E0();
  uint64_t v10 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C6AF0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v26 = v13;
  uint64_t v27 = v14;
  MEMORY[0x270FA5388](v13);
  char v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 32), *(void *)(a2 + 56));
  sub_20A8C3600();
  char v17 = sub_20A8C4040();
  uint64_t v18 = (unsigned int *)MEMORY[0x263F79CB8];
  if ((v17 & 1) == 0) {
    uint64_t v18 = (unsigned int *)MEMORY[0x263F79CB0];
  }
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v9, *v18, v3);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  sub_20A8C6AE0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v25);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  sub_20A5F0A4C(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50]);
  uint64_t v19 = sub_20A8C4620();
  uint64_t v20 = *(void *)(v19 - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, void, uint64_t))(v20 + 104))(v22 + v21, *MEMORY[0x263F24D48], v19);
  sub_20A5F0AA0(&qword_26AC699A0, MEMORY[0x263F79CA8]);
  uint64_t v23 = v26;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v23);
  sub_20A8C7390();
  sub_20A5F0AA0(&qword_26763C8D8, MEMORY[0x263F7A2F0]);
  memset(v29, 0, sizeof(v29));
  sub_20A8C45D0();
  return sub_20A44349C((uint64_t)v29);
}

uint64_t sub_20A5F0680()
{
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WebViewCoordinator()
{
  return self;
}

uint64_t sub_20A5F06EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A5F077C(a1, a2, a3, MEMORY[0x263F7A4E8], &qword_26763C8D0, MEMORY[0x263F7A4E8]);
}

uint64_t sub_20A5F0734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A5F077C(a1, a2, a3, MEMORY[0x263F7A4F8], &qword_26763C8C8, MEMORY[0x263F7A4F8]);
}

uint64_t sub_20A5F077C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), unint64_t *a5, void (*a6)(uint64_t))
{
  return sub_20A8C4980();
}

uint64_t sub_20A5F07F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_20A8C7020();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8C7770();
  uint64_t v12 = *(void *)(v11 - 8);
  double v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v12 + 104))(v15, *MEMORY[0x263F7A6E0], v11, v13);
  uint64_t v16 = sub_20A8C4890();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  *(void *)(v4 + 16) = v16;
  *(void *)(v4 + 24) = a2;
  sub_20A4342F4(a3, v4 + 32);
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_20A671414();
  sub_20A5F0AA0(&qword_26763C8C0, MEMORY[0x263F7A020]);
  sub_20A8C4940();
  __swift_destroy_boxed_opaque_existential_1(a3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v4;
}

void sub_20A5F0A4C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF730();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A5F0AA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A5F0AE8(void *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_20A8C8A80();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5F1A2C(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v51 - v11;
  uint64_t v13 = sub_20A8C9F40();
  double v14 = MEMORY[0x270FA5388](v13);
  (*(void (**)(char *, void, double))(v16 + 104))((char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F7DA50], v14);
  uint64_t v17 = v3[9];
  char v55 = (void *)sub_20A8C4990();
  unint64_t v56 = sub_20A564C14();
  aBlock[0] = v17;
  swift_retain();
  objc_msgSend(a1, sel_frame);
  uint64_t v58 = v18;
  uint64_t v59 = v19;
  uint64_t v60 = v20;
  uint64_t v61 = v21;
  char v62 = 0;
  sub_20A8C99D0();
  swift_allocObject();
  id v22 = a1;
  uint64_t v23 = sub_20A8C99B0();
  uint64_t v24 = self;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v3;
  *(void *)(v25 + 24) = v23;
  unint64_t v56 = (unint64_t)sub_20A5F1484;
  uint64_t v57 = v25;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A6A761C;
  char v55 = &block_descriptor_21;
  uint64_t v26 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id v27 = objc_msgSend(v24, sel_elementWithUncachedProvider_, v26);
  _Block_release(v26);
  if (a2)
  {
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB90);
    sub_20A45F33C();
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_20A8D5CA0;
    *(void *)(v34 + 32) = v27;
    aBlock[0] = v34;
    sub_20A8CE620();
    uint64_t v35 = sub_20A8CEE50();
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v3 + 2, v3[5]);
    uint64_t v28 = *(void *)(sub_20A8C3690() + 16);
    swift_bridgeObjectRelease();
    sub_20A45F33C();
    uint64_t v30 = v29;
    if (v28 == 1)
    {
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_20A8D5CA0;
      uint64_t v32 = sub_20A8C3F00();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v12, 1, 1, v32);
      uint64_t v33 = sub_20A7C6F30((uint64_t)v12, 0, 0);
      sub_20A44D27C((uint64_t)v12);
      *(void *)(v31 + 32) = v33;
    }
    else
    {
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_20A8D5C90;
      uint64_t v36 = sub_20A8C3F00();
      uint64_t v37 = *(void *)(v36 - 8);
      uint64_t v51 = v30;
      uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
      id v52 = v27;
      uint64_t v53 = v6;
      v38(v12, 1, 1, v36);
      uint64_t v39 = v7;
      uint64_t v40 = sub_20A7C726C();
      sub_20A44D27C((uint64_t)v12);
      *(void *)(v31 + 32) = v40;
      uint64_t v7 = v39;
      v38(v12, 1, 1, v36);
      uint64_t v6 = v53;
      id v27 = v52;
      uint64_t v41 = sub_20A7C6F30((uint64_t)v12, 0, 0);
      sub_20A44D27C((uint64_t)v12);
      *(void *)(v31 + 40) = v41;
    }
    aBlock[0] = v31;
    sub_20A8CE620();
    unint64_t v42 = aBlock[0];
    sub_20A8C80C0();
    sub_20A5F1A2C(0, &qword_26AC7FF88, (uint64_t (*)(uint64_t))sub_20A564D04, MEMORY[0x263F8E0F8]);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_20A8D3DC0;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F7D4E8], v6);
    sub_20A4A62F4(v42);
    swift_bridgeObjectRelease();
    uint64_t v44 = sub_20A8C8A70();
    swift_allocObject();
    uint64_t v45 = sub_20A8C8A40();
    uint64_t v46 = MEMORY[0x263F7D4D0];
    *(void *)(v43 + 56) = v44;
    *(void *)(v43 + 64) = v46;
    *(void *)(v43 + 32) = v45;
    sub_20A8C8070();
    unint64_t v47 = sub_20A8C8030();
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB90);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_20A8D5CA0;
    *(void *)(v48 + 32) = v27;
    aBlock[0] = v48;
    sub_20A8CE620();
    id v49 = v27;
    sub_20A4AC0B4(v47);
    uint64_t v35 = sub_20A8CEE50();
    swift_release();
  }
  swift_release();
  return v35;
}

uint64_t sub_20A5F11A8(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_20A8C8A80();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A8C80C0();
  sub_20A5F1A2C(0, &qword_26AC7FF88, (uint64_t (*)(uint64_t))sub_20A564D04, MEMORY[0x263F8E0F8]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F7D4E0], v5);
  __swift_project_boxed_opaque_existential_1((void *)(a3 + 16), *(void *)(a3 + 40));
  uint64_t v10 = sub_20A8C3690();
  swift_retain();
  sub_20A5F148C(v10, a3);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v11 = sub_20A8C8A70();
  swift_allocObject();
  uint64_t v12 = sub_20A8C8A40();
  uint64_t v13 = MEMORY[0x263F7D4D0];
  *(void *)(v9 + 56) = v11;
  *(void *)(v9 + 64) = v13;
  *(void *)(v9 + 32) = v12;
  sub_20A8C8070();
  sub_20A8C8030();
  a1();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A5F13D8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WatchlistSwitcherMenuProvider()
{
  return self;
}

uint64_t sub_20A5F1444()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A5F1484(void (*a1)(void), uint64_t a2)
{
  return sub_20A5F11A8(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_20A5F148C(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = sub_20A8C8F40();
  uint64_t v5 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v32 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A574D54();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5F1A2C(0, (unint64_t *)&qword_26763BEA0, (uint64_t (*)(uint64_t))sub_20A574E0C, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v42 = (char *)v29 - v11;
  sub_20A5F19AC();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v41 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_20A8C40E0();
  uint64_t v14 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v40 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v16 = *(void *)(a1 + 16);
  uint64_t v17 = MEMORY[0x263F8EE78];
  if (v16)
  {
    v29[1] = v2;
    uint64_t v47 = MEMORY[0x263F8EE78];
    sub_20A68C5C4(0, v16, 0);
    uint64_t v17 = v47;
    uint64_t v18 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v35 = *(void *)(v14 + 72);
    uint64_t v36 = (void *)(a2 + 16);
    uint64_t v34 = (void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    unsigned int v31 = *MEMORY[0x263F7D608];
    uint64_t v30 = (void (**)(char *, void, uint64_t))(v5 + 104);
    uint64_t v37 = v9;
    uint64_t v38 = a2;
    do
    {
      __swift_project_boxed_opaque_existential_1(v36, *(void *)(a2 + 40));
      unint64_t v19 = *(void *)(sub_20A8C3690() + 16);
      swift_bridgeObjectRelease();
      if (qword_26AC6AC30 != -1) {
        swift_once();
      }
      (*v34)(v40, v18, v39);
      swift_retain();
      uint64_t v43 = sub_20A8CB5A0();
      uint64_t v44 = v20;
      sub_20A8CE3D0();
      sub_20A8C4050();
      sub_20A8CE3D0();
      swift_bridgeObjectRelease();
      uint64_t v43 = sub_20A8C4070();
      uint64_t v44 = v21;
      sub_20A8CA050();
      sub_20A574E0C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v42, 1, 1, v22);
      if (v19 < 2)
      {
        (*v30)(v32, v31, v33);
        sub_20A8C92A0();
      }
      else
      {
        sub_20A8C9290();
      }
      uint64_t v23 = sub_20A8C8720();
      swift_allocObject();
      uint64_t v24 = sub_20A8C8650();
      uint64_t v45 = v23;
      uint64_t v46 = MEMORY[0x263F7D410];
      uint64_t v43 = v24;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v47 = v17;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_20A68C5C4(0, *(void *)(v17 + 16) + 1, 1);
        uint64_t v17 = v47;
      }
      unint64_t v27 = *(void *)(v17 + 16);
      unint64_t v26 = *(void *)(v17 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_20A68C5C4(v26 > 1, v27 + 1, 1);
        uint64_t v17 = v47;
      }
      *(void *)(v17 + 16) = v27 + 1;
      sub_20A4AE458((uint64_t)&v43, v17 + 40 * v27 + 32);
      v18 += v35;
      --v16;
      a2 = v38;
    }
    while (v16);
  }
  return v17;
}

void sub_20A5F19AC()
{
  if (!qword_26763C8E0)
  {
    sub_20A8C40E0();
    unint64_t v0 = sub_20A8CA060();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763C8E0);
    }
  }
}

void sub_20A5F1A2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

char *sub_20A5F1A90(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC8StocksUI17BrandingTitleView_titleLabel;
  id v11 = objc_allocWithZone(MEMORY[0x263F828E0]);
  uint64_t v12 = v4;
  *(void *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v18.receiver = v12;
  v18.super_class = ObjectType;
  uint64_t v13 = (char *)objc_msgSendSuper2(&v18, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v14 = *(void **)&v13[OBJC_IVAR____TtC8StocksUI17BrandingTitleView_titleLabel];
  uint64_t v15 = v13;
  objc_msgSend(v15, sel_addSubview_, v14);
  id v16 = v14;
  objc_msgSend(v16, sel_setNumberOfLines_, 0);

  return v15;
}

uint64_t type metadata accessor for BrandingTitleView()
{
  return self;
}

void sub_20A5F1CAC()
{
  sub_20A5F1D38((unint64_t *)&unk_26AC6F770);

  JUMPOUT(0x210523C60);
}

uint64_t sub_20A5F1D04()
{
  return sub_20A5F1D38(&qword_26AC6F768);
}

uint64_t sub_20A5F1D38(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for BrandingTitleView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for NowPlayingBackgroundView()
{
  return self;
}

uint64_t sub_20A5F1EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A5F1ED4);
}

uint64_t sub_20A5F1ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A5F1F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A5F1F54);
}

uint64_t sub_20A5F1F54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for QuoteViewLayoutOptions()
{
  uint64_t result = qword_26AC82858;
  if (!qword_26AC82858) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_20A5F20F8()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = &v0[OBJC_IVAR____TtC8StocksUI24ForYouFeedRotateTestCase_testName];
  *(void *)uint64_t v2 = 0xD000000000000010;
  *((void *)v2 + 1) = 0x800000020A904E90;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI24ForYouFeedRotateTestCase_timeoutInSeconds] = 0x404E000000000000;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI24ForYouFeedRotateTestCase_aggregate] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI24ForYouFeedRotateTestCase_requiredCapabilities] = &unk_26BE5ED50;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI24ForYouFeedRotateTestCase_rotateOrientation] = 4;
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for ForYouFeedRotateTestCase()
{
  return self;
}

uint64_t sub_20A5F2230@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7E828);
  uint64_t result = sub_20A8C5BB0();
  if (v21)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for DateRangePickerLayoutAttributesFactory();
    v19[3] = v10;
    v19[4] = &off_26BE70588;
    v19[0] = v9;
    uint64_t v11 = type metadata accessor for StockChartViewLayoutAttributesFactory();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    double v14 = MEMORY[0x270FA5388](v13);
    id v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    v12[5] = v10;
    void v12[6] = &off_26BE70588;
    v12[2] = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_26BE6B970;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A5F245C@<X0>(uint64_t *a1@<X8>)
{
  return sub_20A5F5FBC((uint64_t (*)(void))type metadata accessor for StockChartViewRenderer, (uint64_t)&off_26BE66388, a1);
}

uint64_t sub_20A5F247C(void *a1)
{
  sub_20A5F8B80(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v29 - v3;
  sub_20A8C5C00();
  swift_allocObject();
  sub_20A8C5BF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v5 = sub_20A8C3F00();
  sub_20A8C5BB0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5F8404();
  swift_retain();
  uint64_t v7 = (void *)sub_20A8C5B80();
  uint64_t result = swift_release();
  if (!v7)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5F88E0();
  swift_retain();
  uint64_t v8 = (void *)sub_20A8C5B80();
  uint64_t result = swift_release();
  if (!v8)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StockChartInteractionHandler();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v9 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7BE78);
  uint64_t result = sub_20A8C5BB0();
  if (!v43)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7DD00);
  uint64_t result = sub_20A8C5BB0();
  if (!v41)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC71F48);
  uint64_t result = sub_20A8C5BB0();
  if (!v39)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v32 = v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC76E08);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v10 = v36;
  if (!v36)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unsigned int v31 = v7;
  uint64_t v30 = v37;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for DateRangePickerView();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v11 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StockChartLoadingState();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v12 = result;
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
    v29[1] = v29;
    double v14 = MEMORY[0x270FA5388](v13);
    id v16 = (void *)((char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    uint64_t v34 = type metadata accessor for StockChartStyler();
    uint64_t v35 = &off_26BE60B40;
    v33[0] = v18;
    unint64_t v19 = (char *)objc_allocWithZone((Class)type metadata accessor for StockChartViewController(0));
    uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v33, v34);
    double v21 = MEMORY[0x270FA5388](v20);
    uint64_t v23 = (void *)((char *)v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v24 + 16))(v23, v21);
    uint64_t v28 = v19;
    uint64_t v25 = v31;
    sub_20A5F7980((uint64_t)v32, v31, v8, v9, (uint64_t)v42, (uint64_t)v40, *v23, v10, v30, v11, v12, v28);
    uint64_t v27 = v26;

    swift_release();
    swift_unknownObjectRelease();

    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    swift_release();
    return v27;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_20A5F2AB8(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v5[3] = v3;
  v5[4] = MEMORY[0x263F7CDC0];
  v5[0] = a2;
  sub_20A4301D4(0, &qword_26AC69728);
  swift_retain();
  sub_20A8C5A30();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

uint64_t sub_20A5F2BA4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8CDFE0();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC779B8);
    uint64_t result = sub_20A8C5BB0();
    if (v20)
    {
      uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
      double v5 = MEMORY[0x270FA5388](v4);
      uint64_t v7 = (void *)((char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
      uint64_t v9 = *v7;
      uint64_t v10 = type metadata accessor for StockChartCalloutStyler();
      v18[3] = v10;
      v18[4] = &off_26BE705C8;
      v18[0] = v9;
      type metadata accessor for StockChartInteractionHandler();
      uint64_t v11 = swift_allocObject();
      uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v10);
      double v13 = MEMORY[0x270FA5388](v12);
      uint64_t v15 = (void *)((char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
      uint64_t v17 = sub_20A5F6F54(v3, *v15, v11);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      return v17;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_20A5F2DF8(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A5F8404();
  id v2 = (id)sub_20A8C5BA0();
  swift_unknownObjectWeakAssign();
}

uint64_t sub_20A5F2E78()
{
  type metadata accessor for StockChartLoadingState();
  uint64_t v0 = swift_allocObject();
  sub_20A5AFD1C();
  swift_allocObject();
  *(void *)(v0 + 16) = sub_20A8C6160();
  return v0;
}

uint64_t sub_20A5F2EE0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20A5F8B80(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v7 = sub_20A8C3F00();
  sub_20A8C5BB0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC68DF0);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v10 = v17;
  if (!v17)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v11 = v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC68EC0);
  uint64_t result = sub_20A8C5BB0();
  if (v16)
  {
    type metadata accessor for StockChartDataManager();
    uint64_t v12 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v12 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_stock, v6, v7);
    double v13 = (void *)(v12 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_chartManager);
    void *v13 = v10;
    v13[1] = v11;
    uint64_t result = sub_20A42BEBC(&v15, v12 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_priceDataManager);
    *a2 = v12;
    a2[1] = (uint64_t)&off_26BE68898;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A5F313C(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StockChartInteractionHandler();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A5F78F8(&qword_26AC78820, (void (*)(uint64_t))type metadata accessor for StockChartInteractionHandler);
    sub_20A8CDE60();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A5F3204()
{
  sub_20A4301D4(0, &qword_26AC71F48);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC71F40);
  sub_20A8C62A0();
  type metadata accessor for StockChartRouter();
  sub_20A8C5990();
  swift_release();
  swift_release();
  sub_20A4301D4(0, &qword_26AC76E08);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, (unint64_t *)&unk_26AC75CC0);
  sub_20A8C62A0();
  type metadata accessor for StockChartInteractor();
  sub_20A8C5990();
  swift_release();
  swift_release();
  sub_20A4301D4(0, &qword_26AC7A730);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC7C7F8);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC7E828);
  sub_20A8C62A0();
  swift_release();
  type metadata accessor for DateRangePickerView();
  sub_20A8C6290();
  swift_release();
  sub_20A4301D4(0, &qword_26AC76250);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC7BE78);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC795D8);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC7BDB8);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC7EB18);
  sub_20A8C62A0();
  swift_release();
  type metadata accessor for StockChartCalloutLayoutAttributesFactory();
  sub_20A8C6290();
  swift_release();
  sub_20A4301D4(0, &qword_26AC7DD00);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC7C800);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC7F028);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC779B8);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC766C8);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC7D048);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC76E00);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC7D708);
  sub_20A8C62A0();
  swift_release();
  sub_20A5F7800();
  sub_20A8C6290();

  return swift_release();
}

uint64_t sub_20A5F38E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  if (v27)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC76250);
    uint64_t result = sub_20A8C5BB0();
    if (v25)
    {
      uint64_t v5 = type metadata accessor for StockChartStyler();
      uint64_t v22 = sub_20A8C2990();
      uint64_t v23 = sub_20A5F78F8((unint64_t *)&qword_26AC68CE0, MEMORY[0x263F07690]);
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v21);
      sub_20A8C2940();
      uint64_t v7 = v27;
      uint64_t v6 = v28;
      uint64_t v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
      double v9 = MEMORY[0x270FA5388](v8);
      uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v12 + 16))(v11, v9);
      uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
      double v14 = MEMORY[0x270FA5388](v13);
      uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v17 + 16))(v16, v14);
      uint64_t v18 = type metadata accessor for DateRangePickerStyler();
      unint64_t v19 = sub_20A45F180(&v21, (uint64_t)v11, (uint64_t)v16, v5, v7, v18, v6, (uint64_t)&off_26BE5FEF0);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      a2[3] = v5;
      a2[4] = &off_26BE60B40;
      *a2 = v19;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A5F3BBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for StockChartRouter();
  uint64_t v3 = swift_allocObject();
  uint64_t result = swift_unknownObjectWeakInit();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_26BE734D8;
  *a1 = v3;
  return result;
}

void sub_20A5F3C1C(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StockChartViewController(0);
  id v2 = (id)sub_20A8C5BA0();
  swift_unknownObjectWeakAssign();
}

uint64_t sub_20A5F3C9C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC75CC0);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v5 = v16;
  if (v16)
  {
    uint64_t v6 = v17;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC71F40);
    uint64_t result = sub_20A8C5BB0();
    if (v15)
    {
      uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
      double v8 = MEMORY[0x270FA5388](v7);
      uint64_t v10 = (uint64_t **)&v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(uint64_t **, double))(v11 + 16))(v10, v8);
      uint64_t v12 = sub_20A5F706C(v5, v6, *v10);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
      *a2 = v12;
      a2[1] = &off_26BE66E80;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A5F3E44@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC766C0);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v5 = v36;
  if (!v36)
  {
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7A730);
  uint64_t result = sub_20A8C5BB0();
  if (!v35)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7C7F8);
  uint64_t result = sub_20A8C5BB0();
  if (!v33)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7D708);
  uint64_t result = sub_20A8C5BB0();
  if (!v31)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StockChartInteractionHandler();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = result;
  uint64_t v28 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5F7800();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  double v8 = (void *)result;
  uint64_t v26 = v37;
  uint64_t v27 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC68DF8);
  uint64_t result = sub_20A8C5BB0();
  if (v29[3])
  {
    uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
    double v10 = MEMORY[0x270FA5388](v9);
    uint64_t v12 = (uint64_t *)((char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v13 + 16))(v12, v10);
    uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v32, v33);
    double v15 = MEMORY[0x270FA5388](v14);
    uint64_t v17 = (uint64_t *)((char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v18 + 16))(v17, v15);
    uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
    double v20 = MEMORY[0x270FA5388](v19);
    uint64_t v22 = (uint64_t *)((char *)&v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v23 + 16))(v22, v20);
    uint64_t v24 = sub_20A5F80E8(v5, v26, v28, *v12, *v17, *v22, v7, v8, v29);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    uint64_t v25 = v27;
    *uint64_t v27 = v24;
    v25[1] = &off_26BE5FF40;
    return result;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_20A5F4350(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC697A0);
  uint64_t result = sub_20A8C5BB0();
  if (v4)
  {
    sub_20A42BEBC(&v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_20A5F78F8(&qword_26AC71E30, (void (*)(uint64_t))type metadata accessor for StockChartInteractor);
    sub_20A8C62B0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A5F444C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_20A5F8B80(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v27[-1] - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC760F0);
  uint64_t result = sub_20A8C5BB0();
  if (!v31)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC76E00);
  uint64_t result = sub_20A8C5BB0();
  if (!v29)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v26 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v8 = sub_20A8C3F00();
  sub_20A8C5BB0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8);
  if (result != 1)
  {
    uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v28, v29);
    double v11 = MEMORY[0x270FA5388](v10);
    uint64_t v13 = (void *)((char *)&v27[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
    uint64_t v15 = *v13;
    uint64_t v16 = type metadata accessor for StockChartDateAnalyzer();
    v27[3] = v16;
    v27[4] = &off_26BE73BB0;
    v27[0] = v15;
    uint64_t v17 = type metadata accessor for StockChartDescriptorFactory();
    uint64_t v18 = (void *)swift_allocObject();
    uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v16);
    double v20 = MEMORY[0x270FA5388](v19);
    uint64_t v22 = (void *)((char *)&v27[-1] - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v23 + 16))(v22, v20);
    uint64_t v24 = *v22;
    v18[10] = v16;
    v18[11] = &off_26BE73BB0;
    v18[7] = v24;
    sub_20A42BEBC(&v30, (uint64_t)(v18 + 2));
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))((uint64_t)v18 + OBJC_IVAR____TtC8StocksUI27StockChartDescriptorFactory_stock, v6, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    uint64_t v25 = v26;
    void v26[3] = v17;
    v25[4] = &off_26BE6BCA0;
    *uint64_t v25 = v18;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A5F4810@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC71F48);
  uint64_t result = sub_20A8C5BB0();
  if (v41)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC766C8);
    uint64_t result = sub_20A8C5BB0();
    if (v39)
    {
      uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
      void v33[2] = v33;
      double v6 = MEMORY[0x270FA5388](v5);
      uint64_t v8 = (void *)((char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
      uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      v33[1] = v33;
      double v11 = MEMORY[0x270FA5388](v10);
      uint64_t v13 = (void *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
      uint64_t v15 = *v8;
      uint64_t v16 = *v13;
      uint64_t v17 = type metadata accessor for StockChartStyler();
      v37[3] = v17;
      v37[4] = &off_26BE60B40;
      v37[0] = v15;
      uint64_t v18 = type metadata accessor for StockChartGridFactory();
      uint64_t v35 = v18;
      uint64_t v36 = &off_26BE62148;
      v34[0] = v16;
      uint64_t v19 = type metadata accessor for StockChartModelFactoryProvider();
      double v20 = (void *)swift_allocObject();
      uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v17);
      double v22 = MEMORY[0x270FA5388](v21);
      uint64_t v24 = (void *)((char *)v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v25 + 16))(v24, v22);
      uint64_t v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      double v27 = MEMORY[0x270FA5388](v26);
      uint64_t v29 = (void *)((char *)v33 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v30 + 16))(v29, v27);
      uint64_t v31 = *v24;
      uint64_t v32 = *v29;
      uint64_t v20[5] = v17;
      v20[6] = &off_26BE60B40;
      v20[2] = v31;
      v20[10] = v18;
      v20[11] = &off_26BE62148;
      v20[7] = v32;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      a2[3] = v19;
      a2[4] = &off_26BE67C98;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A5F4C48@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC76250);
  uint64_t result = sub_20A8C5BB0();
  if (v41)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC7BDB8);
    uint64_t result = sub_20A8C5BB0();
    if (v39)
    {
      uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
      void v33[2] = v33;
      double v6 = MEMORY[0x270FA5388](v5);
      uint64_t v8 = (void *)((char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
      uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      v33[1] = v33;
      double v11 = MEMORY[0x270FA5388](v10);
      uint64_t v13 = (void *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
      uint64_t v15 = *v8;
      uint64_t v16 = *v13;
      uint64_t v17 = type metadata accessor for DateRangePickerStyler();
      v37[3] = v17;
      v37[4] = &off_26BE5FEF0;
      v37[0] = v15;
      uint64_t v18 = type metadata accessor for StockChartCalloutLayoutAttributesFactory();
      uint64_t v35 = v18;
      uint64_t v36 = &off_26BE6B430;
      v34[0] = v16;
      uint64_t v19 = type metadata accessor for DateRangePickerLayoutAttributesFactory();
      double v20 = (void *)swift_allocObject();
      uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v17);
      double v22 = MEMORY[0x270FA5388](v21);
      uint64_t v24 = (void *)((char *)v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v25 + 16))(v24, v22);
      uint64_t v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      double v27 = MEMORY[0x270FA5388](v26);
      uint64_t v29 = (void *)((char *)v33 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v30 + 16))(v29, v27);
      uint64_t v31 = *v24;
      uint64_t v32 = *v29;
      uint64_t v20[5] = v17;
      v20[6] = &off_26BE5FEF0;
      v20[2] = v31;
      v20[10] = v18;
      v20[11] = &off_26BE6B430;
      v20[7] = v32;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      a2[3] = v19;
      a2[4] = &off_26BE70588;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A5F5080(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC76250);
  uint64_t result = sub_20A8C5BB0();
  if (v19)
  {
    uint64_t v2 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    double v3 = MEMORY[0x270FA5388](v2);
    uint64_t v5 = (void *)((char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v6 + 16))(v5, v3);
    uint64_t v7 = *v5;
    uint64_t v16 = type metadata accessor for DateRangePickerStyler();
    uint64_t v17 = &off_26BE5FEF0;
    v15[0] = v7;
    uint64_t v8 = (char *)objc_allocWithZone((Class)type metadata accessor for DateRangePickerView());
    uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
    double v10 = MEMORY[0x270FA5388](v9);
    uint64_t v12 = (void *)((char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v13 + 16))(v12, v10);
    uint64_t v14 = sub_20A5F71E4(*v12, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    return (uint64_t)v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A5F528C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v4 = v15;
  if (v15)
  {
    uint64_t v5 = type metadata accessor for DateRangePickerStyler();
    uint64_t v6 = v16;
    uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
    double v8 = MEMORY[0x270FA5388](v7);
    double v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *, double))(v11 + 16))(v10, v8);
    uint64_t v12 = sub_20A431A50((uint64_t)v10, v5, v4, v6);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_26BE5FEF0;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A5F53EC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC795D8);
  uint64_t result = sub_20A8C5BB0();
  if (v41)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC7EB18);
    uint64_t result = sub_20A8C5BB0();
    if (v39)
    {
      uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
      void v33[2] = v33;
      double v6 = MEMORY[0x270FA5388](v5);
      double v8 = (void *)((char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
      uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      v33[1] = v33;
      double v11 = MEMORY[0x270FA5388](v10);
      uint64_t v13 = (void *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
      uint64_t v15 = *v8;
      uint64_t v16 = *v13;
      uint64_t v17 = type metadata accessor for StockChartCalloutRenderer();
      v37[3] = v17;
      v37[4] = &off_26BE728F0;
      v37[0] = v15;
      uint64_t v18 = type metadata accessor for StockChartCalloutLayoutAttributesFactory();
      uint64_t v35 = v18;
      uint64_t v36 = &off_26BE6B440;
      v34[0] = v16;
      uint64_t v19 = type metadata accessor for StockChartCalloutViewProvider();
      double v20 = (void *)swift_allocObject();
      uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v17);
      double v22 = MEMORY[0x270FA5388](v21);
      uint64_t v24 = (void *)((char *)v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v25 + 16))(v24, v22);
      uint64_t v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      double v27 = MEMORY[0x270FA5388](v26);
      uint64_t v29 = (void *)((char *)v33 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v30 + 16))(v29, v27);
      uint64_t v31 = *v24;
      uint64_t v32 = *v29;
      v20[10] = v17;
      v20[11] = &off_26BE728F0;
      v20[7] = v31;
      uint64_t v20[5] = v18;
      v20[6] = &off_26BE6B440;
      v20[2] = v32;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      a2[3] = v19;
      a2[4] = &off_26BE72AB8;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A5F5824@<X0>(uint64_t *a1@<X8>)
{
  return sub_20A5F5FBC((uint64_t (*)(void))type metadata accessor for StockChartCalloutRenderer, (uint64_t)&off_26BE728F0, a1);
}

uint64_t sub_20A5F5844@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A5F585C(a1, (uint64_t)&off_26BE6B430, a2);
}

uint64_t sub_20A5F5850@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A5F585C(a1, (uint64_t)&off_26BE6B440, a2);
}

uint64_t sub_20A5F585C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v5 = type metadata accessor for StockChartCalloutLayoutAttributesFactory();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    a3[3] = v5;
    a3[4] = a2;
    *a3 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A5F58CC(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8CDFE0();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC779B8);
    uint64_t result = sub_20A8C5BB0();
    if (v21)
    {
      uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
      double v5 = MEMORY[0x270FA5388](v4);
      uint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
      uint64_t v9 = *v7;
      uint64_t v10 = type metadata accessor for StockChartCalloutStyler();
      v19[3] = v10;
      v19[4] = &off_26BE705C8;
      v19[0] = v9;
      type metadata accessor for StockChartCalloutLayoutAttributesFactory();
      double v11 = (void *)swift_allocObject();
      uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
      double v13 = MEMORY[0x270FA5388](v12);
      uint64_t v15 = (void *)((char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
      uint64_t v17 = *v15;
      v11[6] = v10;
      v11[7] = &off_26BE705C8;
      v11[3] = v17;
      v11[8] = sub_20A4D023C(MEMORY[0x263F8EE78]);
      type metadata accessor for PriceFormatter();
      uint64_t v18 = swift_allocObject();
      sub_20A8C2910();
      v11[9] = v18;
      void v11[2] = v3;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return (uint64_t)v11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A5F5B64@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7C800);
  uint64_t result = sub_20A8C5BB0();
  if (v41)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC7F028);
    uint64_t result = sub_20A8C5BB0();
    if (v39)
    {
      uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
      void v33[2] = v33;
      double v6 = MEMORY[0x270FA5388](v5);
      uint64_t v8 = (void *)((char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
      uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      v33[1] = v33;
      double v11 = MEMORY[0x270FA5388](v10);
      double v13 = (void *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
      uint64_t v15 = *v8;
      uint64_t v16 = *v13;
      uint64_t v17 = type metadata accessor for StockChartRangeCalloutRenderer();
      v37[3] = v17;
      v37[4] = &off_26BE6A310;
      v37[0] = v15;
      uint64_t v18 = type metadata accessor for StockChartRangeCalloutLayoutAttributesFactory();
      uint64_t v35 = v18;
      uint64_t v36 = &off_26BE69710;
      v34[0] = v16;
      uint64_t v19 = type metadata accessor for StockChartRangeCalloutViewProvider();
      double v20 = (void *)swift_allocObject();
      uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v17);
      double v22 = MEMORY[0x270FA5388](v21);
      uint64_t v24 = (void *)((char *)v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v25 + 16))(v24, v22);
      uint64_t v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      double v27 = MEMORY[0x270FA5388](v26);
      uint64_t v29 = (void *)((char *)v33 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v30 + 16))(v29, v27);
      uint64_t v31 = *v24;
      uint64_t v32 = *v29;
      v20[10] = v17;
      v20[11] = &off_26BE6A310;
      v20[7] = v31;
      uint64_t v20[5] = v18;
      v20[6] = &off_26BE69710;
      v20[2] = v32;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      a2[3] = v19;
      a2[4] = &off_26BE63580;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A5F5F9C@<X0>(uint64_t *a1@<X8>)
{
  return sub_20A5F5FBC((uint64_t (*)(void))type metadata accessor for StockChartRangeCalloutRenderer, (uint64_t)&off_26BE6A310, a1);
}

uint64_t sub_20A5F5FBC@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1(0);
  uint64_t result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t sub_20A5F600C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8CDFE0();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC779B8);
    uint64_t result = sub_20A8C5BB0();
    if (v23)
    {
      uint64_t v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
      double v7 = MEMORY[0x270FA5388](v6);
      uint64_t v9 = (void *)((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v10 + 16))(v9, v7);
      uint64_t v11 = *v9;
      uint64_t v12 = type metadata accessor for StockChartCalloutStyler();
      v21[3] = v12;
      v21[4] = &off_26BE705C8;
      v21[0] = v11;
      uint64_t v13 = type metadata accessor for StockChartRangeCalloutLayoutAttributesFactory();
      uint64_t v14 = (void *)swift_allocObject();
      uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v12);
      double v16 = MEMORY[0x270FA5388](v15);
      uint64_t v18 = (void *)((char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
      uint64_t v20 = *v18;
      void v14[6] = v12;
      v14[7] = &off_26BE705C8;
      v14[3] = v20;
      v14[8] = sub_20A4D023C(MEMORY[0x263F8EE78]);
      v14[2] = v5;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      a2[3] = v13;
      a2[4] = &off_26BE69710;
      *a2 = v14;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A5F6290@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  if (v23)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC71F48);
    uint64_t result = sub_20A8C5BB0();
    if (v21)
    {
      uint64_t v5 = type metadata accessor for StockChartCalloutStyler();
      uint64_t v7 = v23;
      uint64_t v6 = v24;
      uint64_t v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
      double v9 = MEMORY[0x270FA5388](v8);
      uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(unsigned char *, double))(v12 + 16))(v11, v9);
      uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
      double v14 = MEMORY[0x270FA5388](v13);
      double v16 = &v20[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(unsigned char *, double))(v17 + 16))(v16, v14);
      uint64_t v18 = type metadata accessor for StockChartStyler();
      uint64_t v19 = sub_20A8079A8((uint64_t)v11, (uint64_t)v16, v5, v7, v18, v6, (uint64_t)&off_26BE60B40);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      a2[3] = v5;
      a2[4] = &off_26BE705C8;
      *a2 = v19;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A5F6514@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC71F48);
  uint64_t result = sub_20A8C5BB0();
  if (v41)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC7D048);
    uint64_t result = sub_20A8C5BB0();
    if (v39)
    {
      uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
      void v33[2] = v33;
      double v6 = MEMORY[0x270FA5388](v5);
      uint64_t v8 = (void *)((char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
      uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      v33[1] = v33;
      double v11 = MEMORY[0x270FA5388](v10);
      uint64_t v13 = (void *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
      uint64_t v15 = *v8;
      uint64_t v16 = *v13;
      uint64_t v17 = type metadata accessor for StockChartStyler();
      v37[3] = v17;
      v37[4] = &off_26BE60B40;
      v37[0] = v15;
      uint64_t v18 = type metadata accessor for StockChartLabelFormatterFactory();
      uint64_t v35 = v18;
      uint64_t v36 = &off_26BE63B38;
      v34[0] = v16;
      uint64_t v19 = type metadata accessor for StockChartGridFactory();
      uint64_t v20 = (void *)swift_allocObject();
      uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v17);
      double v22 = MEMORY[0x270FA5388](v21);
      uint64_t v24 = (void *)((char *)v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v25 + 16))(v24, v22);
      uint64_t v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      double v27 = MEMORY[0x270FA5388](v26);
      uint64_t v29 = (void *)((char *)v33 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v30 + 16))(v29, v27);
      uint64_t v31 = *v24;
      uint64_t v32 = *v29;
      uint64_t v20[5] = v17;
      v20[6] = &off_26BE60B40;
      v20[2] = v31;
      v20[10] = v18;
      v20[11] = &off_26BE63B38;
      v20[7] = v32;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      a2[3] = v19;
      a2[4] = &off_26BE62148;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A5F694C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC71F48);
  uint64_t result = sub_20A8C5BB0();
  if (v21)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for StockChartStyler();
    v19[3] = v10;
    v19[4] = &off_26BE60B40;
    v19[0] = v9;
    uint64_t v11 = type metadata accessor for StockChartLabelFormatterFactory();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    v12[5] = v10;
    void v12[6] = &off_26BE60B40;
    v12[2] = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_26BE63B38;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A5F6B78@<X0>(uint64_t *a1@<X8>)
{
  sub_20A5F8B80(0, (unint64_t *)&unk_26AC68D30, MEMORY[0x263F079C8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v14 - v3;
  uint64_t v5 = sub_20A8C2A80();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StockChartDateAnalyzer();
  uint64_t v10 = swift_allocObject();
  sub_20A8C2A40();
  sub_20A8C2AA0();
  uint64_t v11 = sub_20A8C2AF0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v4, 1, v11);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_20A8C2A50();
    sub_20A5F785C();
    uint64_t v13 = swift_allocObject();
    *(_DWORD *)(v13 + ((*(unsigned int *)(*(void *)v13 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v13 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v13 + 16), v8, v5);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)(v10 + 16) = v13;
    a1[3] = v9;
    a1[4] = (uint64_t)&off_26BE73BB0;
    *a1 = v10;
  }
  return result;
}

uint64_t sub_20A5F6DFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for StockChartCalloutViewModelFactory();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = v3 + OBJC_IVAR____TtC8StocksUI33StockChartCalloutViewModelFactory_chart;
  uint64_t v5 = sub_20A8C3D00();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  a1[3] = v2;
  a1[4] = (uint64_t)&off_26BE6B950;
  *a1 = v3;
  return result;
}

uint64_t sub_20A5F6E9C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6B220);
  uint64_t result = sub_20A8C5BB0();
  if (v4)
  {
    sub_20A5F7800();
    id v3 = objc_allocWithZone(v2);
    return sub_20A8CD360();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for StockChartAssembly()
{
  return self;
}

uint64_t sub_20A5F6F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v11 = type metadata accessor for StockChartCalloutStyler();
  uint64_t v12 = &off_26BE705C8;
  *(void *)&long long v10 = a2;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(a3 + 72) = 0;
  uint64_t v6 = (objc_class *)type metadata accessor for StockChartCalloutHandleLayer();
  *(void *)(a3 + 80) = objc_msgSend(objc_allocWithZone(v6), sel_init);
  *(void *)(a3 + 88) = objc_msgSend(objc_allocWithZone(v6), sel_init);
  *(void *)(a3 + 104) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v7 = a3 + OBJC_IVAR____TtC8StocksUI28StockChartInteractionHandler_chartModel;
  uint64_t v8 = sub_20A8CDC70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(unsigned char *)(a3 + OBJC_IVAR____TtC8StocksUI28StockChartInteractionHandler_trend) = 2;
  *(void *)(a3 + 16) = a1;
  sub_20A42BEBC(&v10, a3 + 32);
  return a3;
}

void *sub_20A5F706C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = *a3;
  void v15[3] = v5;
  v15[4] = &off_26BE734D8;
  v15[0] = a3;
  type metadata accessor for StockChartEventHandler();
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v5);
  double v8 = MEMORY[0x270FA5388](v7);
  long long v10 = (void *)((char *)v14 - v9);
  (*(void (**)(char *, double))(v11 + 16))((char *)v14 - v9, v8);
  uint64_t v12 = *v10;
  v14[3] = v5;
  v14[4] = &off_26BE734D8;
  v14[0] = v12;
  v6[3] = 0;
  swift_unknownObjectWeakInit();
  v6[4] = a1;
  v6[5] = a2;
  sub_20A4342F4((uint64_t)v14, (uint64_t)(v6 + 6));
  *(void *)(v6[4] + 24) = &off_26BE66E38;
  swift_unknownObjectWeakAssign();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return v6;
}

char *sub_20A5F71E4(uint64_t a1, char *a2)
{
  v16[3] = type metadata accessor for DateRangePickerStyler();
  v16[4] = &off_26BE5FEF0;
  v16[0] = a1;
  uint64_t v4 = &a2[OBJC_IVAR____TtC8StocksUI19DateRangePickerView_onChange];
  sub_20A5F8BE4(0, (unint64_t *)&unk_26AC69F68, MEMORY[0x263F7A878], sub_20A5F78C4, MEMORY[0x263F7D4F8]);
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  id v6 = objc_allocWithZone(v5);
  uint64_t v7 = a2;
  id v8 = objc_msgSend(v6, sel_init);
  *(void *)&v7[OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl] = v8;
  sub_20A4342F4((uint64_t)v16, (uint64_t)&v7[OBJC_IVAR____TtC8StocksUI19DateRangePickerView_styler]);

  v15.receiver = v7;
  v15.super_class = (Class)type metadata accessor for DateRangePickerView();
  uint64_t v9 = (char *)objc_msgSendSuper2(&v15, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v10 = OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl;
  uint64_t v11 = *(void **)&v9[OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl];
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = v9;
  id v13 = v11;
  sub_20A8C8B20();

  objc_msgSend(v12, sel_addSubview_, *(void *)&v9[v10]);
  objc_msgSend(v12, sel_setAlwaysBounceVertical_, 0);
  objc_msgSend(v12, sel_setShowsVerticalScrollIndicator_, 0);
  objc_msgSend(v12, sel_setShowsHorizontalScrollIndicator_, 0);
  objc_msgSend(v12, sel_setDirectionalLockEnabled_, 1);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v12;
}

uint64_t sub_20A5F73E4()
{
  uint64_t v0 = sub_20A8C5C10();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v6[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7E4C0);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC76E10);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  type metadata accessor for StockChartViewController(0);
  sub_20A8C6290();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  type metadata accessor for StockChartInteractionHandler();
  sub_20A8C6290();
  swift_release();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  type metadata accessor for StockChartLoadingState();
  sub_20A8C6290();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC766C0);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_20A5F8BE4(0, &qword_26AC7F568, MEMORY[0x263F7CBC0], sub_20A5F77CC, MEMORY[0x263F7CBA8]);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7CDE0], v0);
  sub_20A8C62F0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  sub_20A8C5CD0();
  sub_20A8C6280();
  return swift_release();
}

uint64_t sub_20A5F77CC()
{
  return sub_20A5F78F8(&qword_26AC7F590, MEMORY[0x263F7CBC0]);
}

void sub_20A5F7800()
{
  if (!qword_26AC6B1E0)
  {
    sub_20A43EA44();
    unint64_t v0 = sub_20A8CD390();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6B1E0);
    }
  }
}

void sub_20A5F785C()
{
  if (!qword_26AC67638)
  {
    sub_20A8C2A80();
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_20A8CF410();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC67638);
    }
  }
}

uint64_t sub_20A5F78C4()
{
  return sub_20A5F78F8(&qword_26AC68D68, MEMORY[0x263F7A878]);
}

uint64_t sub_20A5F78F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A5F7940()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A5F7978(uint64_t a1, uint64_t a2)
{
  return sub_20A63D264(a1, a2, v2);
}

void sub_20A5F7980(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, char *a12)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v55[3] = type metadata accessor for StockChartStyler();
  v55[4] = &off_26BE60B40;
  v55[0] = a7;
  uint64_t v18 = OBJC_IVAR____TtC8StocksUI24StockChartViewController_topDateRangePickerSeparator;
  id v19 = objc_allocWithZone(MEMORY[0x263F82E00]);
  uint64_t v20 = a12;
  *(void *)&a12[v18] = objc_msgSend(v19, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v21 = OBJC_IVAR____TtC8StocksUI24StockChartViewController_activityIndicator;
  *(void *)&v20[v21] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F823E8]), sel_initWithActivityIndicatorStyle_, 100);
  *(void *)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_activeCallout] = 0xF000000000000007;
  *(void *)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_stateMachine] = 0;
  *(void *)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_errorView] = 0;
  double v22 = &v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_stock];
  uint64_t v23 = sub_20A8C3F00();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v49 = v23;
  uint64_t v50 = a1;
  uint64_t v25 = a1;
  uint64_t v26 = a6;
  (*(void (**)(char *, uint64_t))(v24 + 16))(v22, v25);
  *(void *)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_lineChartViewController] = a2;
  *(void *)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_columnChartViewController] = a3;
  sub_20A4342F4((uint64_t)v55, (uint64_t)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_styler]);
  double v27 = &v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_eventHandler];
  *(void *)double v27 = a8;
  *((void *)v27 + 1) = a9;
  *(void *)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_dateRangePicker] = a10;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v29 = self;
  id v30 = a10;
  id v31 = a2;
  id v32 = a3;
  swift_unknownObjectRetain();
  id v33 = objc_msgSend(v29, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v34 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v30, sel_setAccessibilityLabel_, v34, 0x800000020A904F00);

  *(void *)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_loadingState] = a11;
  *(void *)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_interactionHandler] = a4;
  sub_20A4342F4(a5, (uint64_t)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_calloutViewProvider]);
  sub_20A4342F4(v26, (uint64_t)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_rangeCalloutViewProvider]);
  id v35 = objc_allocWithZone((Class)sub_20A8C84C0());
  id v36 = v30;
  swift_retain();
  swift_retain();
  *(void *)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_interactionDisplayView] = sub_20A8C8490();

  v54.receiver = v20;
  v54.super_class = ObjectType;
  id v37 = objc_msgSendSuper2(&v54, sel_initWithNibName_bundle_, 0, 0);
  id v38 = objc_allocWithZone(MEMORY[0x263F59E90]);
  id v39 = v37;
  uint64_t v40 = (void *)sub_20A8CE240();
  id v41 = objc_msgSend(v38, sel_initWithName_, v40);

  id v42 = objc_allocWithZone(MEMORY[0x263F59E80]);
  uint64_t v43 = (char *)v39;
  id v44 = objc_msgSend(v42, sel_initWithState_withOwner_, v41, v43);

  uint64_t v45 = OBJC_IVAR____TtC8StocksUI24StockChartViewController_stateMachine;
  uint64_t v46 = *(void **)&v43[OBJC_IVAR____TtC8StocksUI24StockChartViewController_stateMachine];
  *(void *)&v43[OBJC_IVAR____TtC8StocksUI24StockChartViewController_stateMachine] = v44;

  uint64_t v47 = *(void **)&v43[v45];
  if (v47)
  {
    id v48 = v47;
    sub_20A7E9240(v48);

    *(void *)(*(void *)&v43[OBJC_IVAR____TtC8StocksUI24StockChartViewController_eventHandler] + 24) = &off_26BE6FE18;
    swift_unknownObjectWeakAssign();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
    __swift_destroy_boxed_opaque_existential_1(v26);
    __swift_destroy_boxed_opaque_existential_1(a5);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v50, v49);
  }
  else
  {
    __break(1u);
  }
}

void *sub_20A5F7E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9, void *a10)
{
  v25[3] = type metadata accessor for StockChartDescriptorFactory();
  v25[4] = &off_26BE6BCA0;
  v25[0] = a4;
  v24[3] = type metadata accessor for StockChartModelFactoryProvider();
  v24[4] = &off_26BE67C98;
  v24[0] = a5;
  v23[3] = type metadata accessor for StockChartCalloutViewModelFactory();
  v23[4] = &off_26BE6B950;
  v23[0] = a6;
  a10[3] = 0;
  swift_unknownObjectWeakInit();
  a10[24] = 0;
  a10[25] = 0;
  uint64_t v18 = (char *)a10 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_activeChartRange;
  uint64_t v19 = sub_20A8C2BC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  uint64_t v20 = (char *)a10 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_lastKnownQoute;
  uint64_t v21 = sub_20A8C3E10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *((unsigned char *)a10 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_needRefresh) = 0;
  a10[4] = a1;
  a10[5] = a2;
  a10[6] = a3;
  sub_20A4342F4((uint64_t)v25, (uint64_t)(a10 + 7));
  sub_20A4342F4((uint64_t)v24, (uint64_t)(a10 + 12));
  sub_20A4342F4((uint64_t)v23, (uint64_t)(a10 + 17));
  a10[22] = a7;
  a10[23] = a8;
  __swift_project_boxed_opaque_existential_1(a9, a9[3]);
  sub_20A5F78F8(&qword_26AC71E20, (void (*)(uint64_t))type metadata accessor for StockChartInteractor);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  a8;
  swift_retain();
  sub_20A8C3220();
  swift_release();
  *(void *)(a7 + 104) = &off_26BE5FF20;
  swift_unknownObjectWeakAssign();
  swift_allocObject();
  swift_weakInit();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a9);
  return a10;
}

void *sub_20A5F80E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9)
{
  uint64_t v34 = a8;
  uint64_t v42 = type metadata accessor for StockChartDescriptorFactory();
  uint64_t v43 = &off_26BE6BCA0;
  v41[0] = a4;
  uint64_t v39 = type metadata accessor for StockChartModelFactoryProvider();
  uint64_t v40 = &off_26BE67C98;
  v38[0] = a5;
  uint64_t v36 = type metadata accessor for StockChartCalloutViewModelFactory();
  id v37 = &off_26BE6B950;
  v35[0] = a6;
  type metadata accessor for StockChartInteractor();
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v41, v42);
  double v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (void *)((char *)&v35[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v21 + 16))(v20, v18);
  uint64_t v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
  double v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (void *)((char *)&v35[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v26 + 16))(v25, v23);
  uint64_t v27 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
  double v28 = MEMORY[0x270FA5388](v27);
  id v30 = (void *)((char *)&v35[-1] - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v31 + 16))(v30, v28);
  id v32 = sub_20A5F7E34(a1, a2, a3, *v20, *v25, *v30, a7, v34, a9, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return v32;
}

uint64_t sub_20A5F83C4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A5F83FC(uint64_t a1)
{
  return sub_20A43A584(a1);
}

void sub_20A5F8404()
{
  if (!qword_26AC7F580)
  {
    sub_20A5F8BE4(255, (unint64_t *)&qword_26AC7F528, MEMORY[0x263F7CB18], sub_20A5F8670, MEMORY[0x263F7CB78]);
    sub_20A8CDF30();
    sub_20A8CDFE0();
    unint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F7CB20];
    sub_20A5F8B80(255, &qword_26AC7F4C8, MEMORY[0x263F7CB20], MEMORY[0x263F7CB00]);
    sub_20A5F86A4();
    sub_20A5F8BE4(255, &qword_26AC7F568, MEMORY[0x263F7CBC0], sub_20A5F77CC, MEMORY[0x263F7CBA8]);
    sub_20A5F8728();
    sub_20A5F78F8(&qword_26AC7F5A0, MEMORY[0x263F7CC00]);
    sub_20A5F78F8(&qword_26AC7F5D0, MEMORY[0x263F7CC38]);
    sub_20A5F87C4(&qword_26AC7F4C0, &qword_26AC7F4C8, v0);
    sub_20A5F78F8(&qword_26AC7F5B0, (void (*)(uint64_t))sub_20A5F86A4);
    sub_20A5F8828();
    unint64_t v1 = sub_20A8CDED0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AC7F580);
    }
  }
}

uint64_t sub_20A5F8670()
{
  return sub_20A5F78F8(&qword_26AC7F4D0, MEMORY[0x263F7CB18]);
}

void sub_20A5F86A4()
{
  if (!qword_26AC7F5B8)
  {
    sub_20A8CE050();
    sub_20A8CE040();
    unint64_t v0 = sub_20A8CDF40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7F5B8);
    }
  }
}

unint64_t sub_20A5F8728()
{
  unint64_t result = qword_26AC7F520;
  if (!qword_26AC7F520)
  {
    sub_20A5F8BE4(255, (unint64_t *)&qword_26AC7F528, MEMORY[0x263F7CB18], sub_20A5F8670, MEMORY[0x263F7CB78]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7F520);
  }
  return result;
}

uint64_t sub_20A5F87C4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A5F8B80(255, a2, a3, MEMORY[0x263F7CB00]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A5F8828()
{
  unint64_t result = qword_26AC7F560;
  if (!qword_26AC7F560)
  {
    sub_20A5F8BE4(255, &qword_26AC7F568, MEMORY[0x263F7CBC0], sub_20A5F77CC, MEMORY[0x263F7CBA8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7F560);
  }
  return result;
}

uint64_t sub_20A5F88C4(void *a1)
{
  return sub_20A5F2AB8(a1, v1);
}

void sub_20A5F88E0()
{
  if (!qword_26AC7F588)
  {
    sub_20A5F8BE4(255, (unint64_t *)&qword_26AC7F538, MEMORY[0x263F7CB48], sub_20A5F8B4C, MEMORY[0x263F7CB78]);
    sub_20A8CDF50();
    sub_20A8CE020();
    unint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F7CB50];
    sub_20A5F8B80(255, &qword_26AC7F4B8, MEMORY[0x263F7CB50], MEMORY[0x263F7CB00]);
    sub_20A5F86A4();
    sub_20A5F8BE4(255, &qword_26AC7F578, MEMORY[0x263F7CBE8], sub_20A5F8C64, MEMORY[0x263F7CBA8]);
    sub_20A5F8C98();
    sub_20A5F78F8(&qword_26AC7F5C0, MEMORY[0x263F7CC18]);
    sub_20A5F78F8(&qword_26AC7F5D8, MEMORY[0x263F7CC50]);
    sub_20A5F87C4(&qword_26AC7F4B0, &qword_26AC7F4B8, v0);
    sub_20A5F78F8(&qword_26AC7F5B0, (void (*)(uint64_t))sub_20A5F86A4);
    sub_20A5F8D34();
    unint64_t v1 = sub_20A8CDED0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AC7F588);
    }
  }
}

uint64_t sub_20A5F8B4C()
{
  return sub_20A5F78F8(&qword_26AC7F4F8, MEMORY[0x263F7CB48]);
}

void sub_20A5F8B80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A5F8BE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_20A5F8C64()
{
  return sub_20A5F78F8(&qword_26AC7F598, MEMORY[0x263F7CBE8]);
}

unint64_t sub_20A5F8C98()
{
  unint64_t result = qword_26AC7F530;
  if (!qword_26AC7F530)
  {
    sub_20A5F8BE4(255, (unint64_t *)&qword_26AC7F538, MEMORY[0x263F7CB48], sub_20A5F8B4C, MEMORY[0x263F7CB78]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7F530);
  }
  return result;
}

unint64_t sub_20A5F8D34()
{
  unint64_t result = qword_26AC7F570;
  if (!qword_26AC7F570)
  {
    sub_20A5F8BE4(255, &qword_26AC7F578, MEMORY[0x263F7CBE8], sub_20A5F8C64, MEMORY[0x263F7CBA8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7F570);
  }
  return result;
}

id sub_20A5F8E40()
{
  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  id result = objc_msgSendSuper2(&v5, sel_accessibilityElements);
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = sub_20A8CE5E0();

    uint64_t v4 = v3;
    swift_bridgeObjectRetain();
    sub_20A5F9090(&v4);
    swift_bridgeObjectRelease();
    return (id)v4;
  }
  return result;
}

uint64_t type metadata accessor for QuoteDetailColumnAccessibilityElement()
{
  return self;
}

uint64_t sub_20A5F9090(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_20A7A847C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_20A5F90FC(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_20A5F90FC(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_20A8CF710();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_152;
    }
    if (v4) {
      return sub_20A5F9A54(0, v4, 1, v3);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_160;
  }
  uint64_t v114 = result;
  if (v4 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v4 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      unint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      int v104 = v11;
      if (v13 >= 2)
      {
        uint64_t v105 = *v3;
        do
        {
          unint64_t v106 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_147;
          }
          if (!v105) {
            goto LABEL_159;
          }
          int v107 = v104;
          uint64_t v108 = *(void *)&v104[16 * v106 + 32];
          uint64_t v109 = *(void *)&v104[16 * v13 + 24];
          sub_20A5F9C10((char *)(v105 + 32 * v108), (char *)(v105 + 32 * *(void *)&v104[16 * v13 + 16]), v105 + 32 * v109, __dst);
          if (v2) {
            break;
          }
          if (v109 < v108) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int v107 = sub_20A7A8278((uint64_t)v107);
          }
          if (v106 >= *((void *)v107 + 2)) {
            goto LABEL_149;
          }
          int v110 = &v107[16 * v106 + 32];
          *(void *)int v110 = v108;
          *((void *)v110 + 1) = v109;
          unint64_t v111 = *((void *)v107 + 2);
          if (v13 > v111) {
            goto LABEL_150;
          }
          memmove(&v107[16 * v13 + 16], &v107[16 * v13 + 32], 16 * (v111 - v13));
          int v104 = v107;
          *((void *)v107 + 2) = v111 - 1;
          unint64_t v13 = v111 - 1;
        }
        while (v111 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v9 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v112 = MEMORY[0x263F8EE78];
    uint64_t v122 = v1;
  }
  else
  {
    uint64_t v122 = v1;
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = sub_20A8CE6A0();
    *(void *)(v8 + 16) = v7;
    uint64_t v112 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  unint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v12 = &selRef_setBarStyle_;
  while (1)
  {
    uint64_t v115 = v4;
    int v116 = v11;
    uint64_t v14 = v10 + 1;
    uint64_t v120 = v10;
    if (v10 + 1 < v4)
    {
      uint64_t v15 = *v3;
      sub_20A4ED764(*v3 + 32 * v14, (uint64_t)v125);
      uint64_t v113 = v15;
      sub_20A4ED764(v15 + 32 * v10, (uint64_t)v124);
      sub_20A4ED764((uint64_t)v125, (uint64_t)v123);
      sub_20A5FA05C();
      if (swift_dynamicCast())
      {
        id v16 = v126;
        [v126 v12[321]];
        double v18 = v17;
      }
      else
      {
        double v18 = 0.0;
      }
      uint64_t v14 = v115;
      sub_20A4ED764((uint64_t)v124, (uint64_t)v123);
      if (swift_dynamicCast())
      {
        id v19 = v126;
        [v126 v12[321]];
        double v21 = v20;
      }
      else
      {
        double v21 = 0.0;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v124);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v125);
      uint64_t v22 = v10;
      uint64_t v23 = v10 + 2;
      if (v23 < v115)
      {
        uint64_t v24 = v15 + 32 * v22 + 32;
        while (1)
        {
          sub_20A4ED764(v24 + 32, (uint64_t)v125);
          sub_20A4ED764(v24, (uint64_t)v124);
          sub_20A4ED764((uint64_t)v125, (uint64_t)v123);
          if (swift_dynamicCast())
          {
            id v25 = v126;
            [v126 v12[321]];
            double v27 = v26;
          }
          else
          {
            double v27 = 0.0;
          }
          sub_20A4ED764((uint64_t)v124, (uint64_t)v123);
          if (swift_dynamicCast())
          {
            id v28 = v126;
            [v126 v12[321]];
            double v30 = v29;
          }
          else
          {
            double v30 = 0.0;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v124);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v125);
          if (v18 < v21 == v27 >= v30) {
            break;
          }
          v24 += 32;
          if (v115 == ++v23) {
            goto LABEL_35;
          }
        }
      }
      uint64_t v14 = v23;
LABEL_35:
      uint64_t v10 = v120;
      if (v18 < v21)
      {
        if (v14 < v120) {
          goto LABEL_153;
        }
        if (v120 < v14)
        {
          uint64_t v31 = 32 * v14 - 32;
          uint64_t v32 = 32 * v120;
          uint64_t v117 = v14;
          uint64_t v33 = v14;
          uint64_t v34 = v120;
          do
          {
            if (v34 != --v33)
            {
              if (!v113) {
                goto LABEL_158;
              }
              id v35 = (_OWORD *)(v113 + v32);
              sub_20A441D28((_OWORD *)(v113 + v32), v125);
              long long v36 = *(_OWORD *)(v113 + v31 + 16);
              _OWORD *v35 = *(_OWORD *)(v113 + v31);
              v35[1] = v36;
              sub_20A441D28(v125, (_OWORD *)(v113 + v31));
            }
            ++v34;
            v31 -= 32;
            v32 += 32;
          }
          while (v34 < v33);
          uint64_t v12 = &selRef_setBarStyle_;
          uint64_t v14 = v117;
          uint64_t v10 = v120;
        }
      }
    }
    if (v14 >= v115) {
      goto LABEL_66;
    }
    if (__OFSUB__(v14, v10)) {
      goto LABEL_151;
    }
    if (v14 - v10 >= v114) {
      goto LABEL_66;
    }
    if (__OFADD__(v10, v114)) {
      goto LABEL_154;
    }
    uint64_t v37 = v115;
    if (v10 + v114 < v115) {
      uint64_t v37 = v10 + v114;
    }
    if (v37 < v10) {
      break;
    }
    if (v14 != v37)
    {
      uint64_t v38 = 32 * v14 - 32;
      uint64_t v118 = v37;
      do
      {
        uint64_t v39 = v38;
        do
        {
          uint64_t v40 = *v3 + v39;
          sub_20A4ED764(v40 + 32, (uint64_t)v125);
          sub_20A4ED764(v40, (uint64_t)v124);
          sub_20A4ED764((uint64_t)v125, (uint64_t)v123);
          sub_20A5FA05C();
          if (swift_dynamicCast())
          {
            id v41 = v126;
            [v126 v12[321]];
            double v43 = v42;
          }
          else
          {
            double v43 = 0.0;
          }
          sub_20A4ED764((uint64_t)v124, (uint64_t)v123);
          if (swift_dynamicCast())
          {
            id v44 = v126;
            [v126 v12[321]];
            double v46 = v45;
          }
          else
          {
            double v46 = 0.0;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v124);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v125);
          if (v43 >= v46) {
            break;
          }
          uint64_t v47 = *v3;
          if (!*v3) {
            goto LABEL_156;
          }
          id v48 = (_OWORD *)(v47 + v39);
          sub_20A441D28((_OWORD *)(v47 + v39 + 32), v125);
          long long v49 = v48[1];
          long long v48[2] = *v48;
          v48[3] = v49;
          sub_20A441D28(v125, v48);
          v39 -= 32;
          ++v10;
        }
        while (v14 != v10);
        ++v14;
        v38 += 32;
        uint64_t v10 = v120;
      }
      while (v14 != v118);
      uint64_t v14 = v118;
    }
LABEL_66:
    if (v14 < v10) {
      goto LABEL_146;
    }
    uint64_t v119 = v14;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      unint64_t v11 = v116;
    }
    else {
      unint64_t v11 = sub_20A7A7EA8(0, *((void *)v116 + 2) + 1, 1, v116);
    }
    unint64_t v51 = *((void *)v11 + 2);
    unint64_t v50 = *((void *)v11 + 3);
    unint64_t v13 = v51 + 1;
    if (v51 >= v50 >> 1) {
      unint64_t v11 = sub_20A7A7EA8((char *)(v50 > 1), v51 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v13;
    id v52 = v11 + 32;
    uint64_t v53 = &v11[16 * v51 + 32];
    *(void *)uint64_t v53 = v10;
    *((void *)v53 + 1) = v119;
    if (v51)
    {
      while (1)
      {
        unint64_t v54 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v59 = &v52[16 * v13];
          uint64_t v60 = *((void *)v59 - 8);
          uint64_t v61 = *((void *)v59 - 7);
          BOOL v65 = __OFSUB__(v61, v60);
          uint64_t v62 = v61 - v60;
          if (v65) {
            goto LABEL_135;
          }
          uint64_t v64 = *((void *)v59 - 6);
          uint64_t v63 = *((void *)v59 - 5);
          BOOL v65 = __OFSUB__(v63, v64);
          uint64_t v57 = v63 - v64;
          char v58 = v65;
          if (v65) {
            goto LABEL_136;
          }
          unint64_t v66 = v13 - 2;
          uint64_t v67 = &v52[16 * v13 - 32];
          uint64_t v69 = *(void *)v67;
          uint64_t v68 = *((void *)v67 + 1);
          BOOL v65 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          if (v65) {
            goto LABEL_138;
          }
          BOOL v65 = __OFADD__(v57, v70);
          uint64_t v71 = v57 + v70;
          if (v65) {
            goto LABEL_141;
          }
          if (v71 >= v62)
          {
            uint64_t v89 = &v52[16 * v54];
            uint64_t v91 = *(void *)v89;
            uint64_t v90 = *((void *)v89 + 1);
            BOOL v65 = __OFSUB__(v90, v91);
            uint64_t v92 = v90 - v91;
            if (v65) {
              goto LABEL_145;
            }
            BOOL v82 = v57 < v92;
            goto LABEL_103;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v83 = *((void *)v11 + 4);
            uint64_t v84 = *((void *)v11 + 5);
            BOOL v65 = __OFSUB__(v84, v83);
            uint64_t v76 = v84 - v83;
            char v77 = v65;
            goto LABEL_97;
          }
          uint64_t v56 = *((void *)v11 + 4);
          uint64_t v55 = *((void *)v11 + 5);
          BOOL v65 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          char v58 = v65;
        }
        if (v58) {
          goto LABEL_137;
        }
        unint64_t v66 = v13 - 2;
        uint64_t v72 = &v52[16 * v13 - 32];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v75 = __OFSUB__(v73, v74);
        uint64_t v76 = v73 - v74;
        char v77 = v75;
        if (v75) {
          goto LABEL_140;
        }
        uint64_t v78 = &v52[16 * v54];
        uint64_t v80 = *(void *)v78;
        uint64_t v79 = *((void *)v78 + 1);
        BOOL v65 = __OFSUB__(v79, v80);
        uint64_t v81 = v79 - v80;
        if (v65) {
          goto LABEL_143;
        }
        if (__OFADD__(v76, v81)) {
          goto LABEL_144;
        }
        if (v76 + v81 >= v57)
        {
          BOOL v82 = v57 < v81;
LABEL_103:
          if (v82) {
            unint64_t v54 = v66;
          }
          goto LABEL_105;
        }
LABEL_97:
        if (v77) {
          goto LABEL_139;
        }
        uint64_t v85 = &v52[16 * v54];
        uint64_t v87 = *(void *)v85;
        uint64_t v86 = *((void *)v85 + 1);
        BOOL v65 = __OFSUB__(v86, v87);
        uint64_t v88 = v86 - v87;
        if (v65) {
          goto LABEL_142;
        }
        if (v88 < v76) {
          goto LABEL_15;
        }
LABEL_105:
        unint64_t v93 = v54 - 1;
        if (v54 - 1 >= v13)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
          goto LABEL_155;
        }
        uint64_t v94 = *v3;
        if (!*v3) {
          goto LABEL_157;
        }
        uint64_t v95 = v11;
        uint64_t v96 = v3;
        uint64_t v97 = &v52[16 * v93];
        uint64_t v98 = *(void *)v97;
        uint64_t v99 = v52;
        unint64_t v100 = v54;
        uint64_t v101 = &v52[16 * v54];
        uint64_t v102 = *((void *)v101 + 1);
        sub_20A5F9C10((char *)(v94 + 32 * *(void *)v97), (char *)(v94 + 32 * *(void *)v101), v94 + 32 * v102, __dst);
        if (v122)
        {
          uint64_t v9 = v112;
          goto LABEL_115;
        }
        if (v102 < v98) {
          goto LABEL_132;
        }
        if (v100 > *((void *)v95 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v97 = v98;
        *(void *)&v99[16 * v93 + 8] = v102;
        unint64_t v103 = *((void *)v95 + 2);
        if (v100 >= v103) {
          goto LABEL_134;
        }
        unint64_t v11 = v95;
        unint64_t v13 = v103 - 1;
        memmove(v101, v101 + 16, 16 * (v103 - 1 - v100));
        id v52 = v99;
        *((void *)v95 + 2) = v103 - 1;
        uint64_t v3 = v96;
        uint64_t v12 = &selRef_setBarStyle_;
        if (v103 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v4 = v3[1];
    uint64_t v10 = v119;
    if (v119 >= v4)
    {
      uint64_t v2 = v122;
      uint64_t v9 = v112;
      goto LABEL_118;
    }
  }
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_20A8CF510();
  __break(1u);
  return result;
}

uint64_t sub_20A5F9A54(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v19 = result;
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v6 = 32 * a3 - 32;
LABEL_5:
    uint64_t v7 = v19;
    uint64_t v20 = v6;
    while (1)
    {
      uint64_t v8 = *a4 + v6;
      sub_20A4ED764(v8 + 32, (uint64_t)v23);
      sub_20A4ED764(v8, (uint64_t)v22);
      sub_20A4ED764((uint64_t)v23, (uint64_t)v21);
      sub_20A5FA05C();
      if (swift_dynamicCast())
      {
        id v9 = v24;
        objc_msgSend(v24, sel_accessibilityFrame);
        double v11 = v10;
      }
      else
      {
        double v11 = 0.0;
      }
      sub_20A4ED764((uint64_t)v22, (uint64_t)v21);
      if (swift_dynamicCast())
      {
        id v12 = v24;
        objc_msgSend(v24, sel_accessibilityFrame);
        double v14 = v13;
      }
      else
      {
        double v14 = 0.0;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      if (v11 >= v14)
      {
LABEL_4:
        ++v5;
        uint64_t v6 = v20 + 32;
        if (v5 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v15 = *a4;
      if (!*a4) {
        break;
      }
      id v16 = (_OWORD *)(v15 + v6);
      sub_20A441D28((_OWORD *)(v15 + v6 + 32), v23);
      long long v17 = v16[1];
      void v16[2] = *v16;
      v16[3] = v17;
      uint64_t result = (uint64_t)sub_20A441D28(v23, v16);
      v6 -= 32;
      if (v5 == ++v7) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_20A5F9C10(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 31;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 5;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 31;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 5;
  double v42 = __src;
  id v41 = __dst;
  if (v10 >= v12 >> 5)
  {
    if (v11 >= -31)
    {
      if (__dst != a2 || &a2[32 * v13] <= __dst) {
        memmove(__dst, a2, 32 * v13);
      }
      id v24 = &v4[32 * v13];
      uint64_t v40 = v24;
      double v42 = v6;
      if (__src < v6 && v11 >= 32)
      {
        id v25 = (char *)(a3 - 32);
        while (1)
        {
          sub_20A4ED764((uint64_t)(v24 - 32), (uint64_t)v39);
          double v27 = v6 - 32;
          sub_20A4ED764((uint64_t)(v6 - 32), (uint64_t)v38);
          sub_20A4ED764((uint64_t)v39, (uint64_t)v37);
          sub_20A5FA05C();
          if (swift_dynamicCast())
          {
            objc_msgSend(v36, sel_accessibilityFrame);
            double v29 = v28;
          }
          else
          {
            double v29 = 0.0;
          }
          sub_20A4ED764((uint64_t)v38, (uint64_t)v37);
          if (swift_dynamicCast())
          {
            objc_msgSend(v36, sel_accessibilityFrame);
            double v31 = v30;
          }
          else
          {
            double v31 = 0.0;
          }
          uint64_t v32 = v25 + 32;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
          if (v29 >= v31)
          {
            unint64_t v33 = (unint64_t)v40;
            id v24 = v40 - 32;
            v40 -= 32;
            if ((unint64_t)v32 < v33 || (unint64_t)v25 >= v33 || v32 != (char *)v33)
            {
              long long v34 = *(_OWORD *)(v33 - 16);
              *(_OWORD *)id v25 = *(_OWORD *)v24;
              *((_OWORD *)v25 + 1) = v34;
            }
            double v27 = v6;
            if (v24 <= v4) {
              goto LABEL_56;
            }
          }
          else
          {
            if (v32 != v6 || v25 >= v6)
            {
              long long v26 = *((_OWORD *)v6 - 1);
              *(_OWORD *)id v25 = *(_OWORD *)v27;
              *((_OWORD *)v25 + 1) = v26;
            }
            v42 -= 32;
            id v24 = v40;
            if (v40 <= v4) {
              goto LABEL_56;
            }
          }
          v25 -= 32;
          uint64_t v6 = v27;
          if (v27 <= __src) {
            goto LABEL_56;
          }
        }
      }
      goto LABEL_56;
    }
  }
  else if (v8 >= -31)
  {
    if (__dst != __src || &__src[32 * v10] <= __dst) {
      memmove(__dst, __src, 32 * v10);
    }
    unint64_t v14 = (unint64_t)&v4[32 * v10];
    uint64_t v40 = (char *)v14;
    if ((unint64_t)v6 < a3 && v8 >= 32)
    {
      do
      {
        sub_20A4ED764((uint64_t)v6, (uint64_t)v39);
        sub_20A4ED764((uint64_t)v4, (uint64_t)v38);
        sub_20A4ED764((uint64_t)v39, (uint64_t)v37);
        sub_20A5FA05C();
        if (swift_dynamicCast())
        {
          objc_msgSend(v36, sel_accessibilityFrame);
          double v16 = v15;
        }
        else
        {
          double v16 = 0.0;
        }
        sub_20A4ED764((uint64_t)v38, (uint64_t)v37);
        if (swift_dynamicCast())
        {
          objc_msgSend(v36, sel_accessibilityFrame);
          double v18 = v17;
        }
        else
        {
          double v18 = 0.0;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
        uint64_t v19 = v42;
        if (v16 >= v18)
        {
          uint64_t v22 = v41 + 32;
          if (v42 != v41 || v42 >= v22)
          {
            long long v23 = *((_OWORD *)v41 + 1);
            *(_OWORD *)double v42 = *(_OWORD *)v41;
            *((_OWORD *)v19 + 1) = v23;
          }
          id v41 = v22;
          unint64_t v20 = (unint64_t)v6;
        }
        else
        {
          unint64_t v20 = (unint64_t)(v6 + 32);
          if (v42 >= v6 && (unint64_t)v42 < v20 && v42 == v6)
          {
            uint64_t v19 = v6;
          }
          else
          {
            long long v21 = *((_OWORD *)v6 + 1);
            *(_OWORD *)double v42 = *(_OWORD *)v6;
            *((_OWORD *)v19 + 1) = v21;
          }
        }
        double v42 = v19 + 32;
        uint64_t v4 = v41;
        if ((unint64_t)v41 >= v14) {
          break;
        }
        uint64_t v6 = (char *)v20;
      }
      while (v20 < a3);
    }
LABEL_56:
    sub_20A7A8060((void **)&v42, (const void **)&v41, &v40);
    return 1;
  }
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

unint64_t sub_20A5FA05C()
{
  unint64_t result = qword_26AC7FA30;
  if (!qword_26AC7FA30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC7FA30);
  }
  return result;
}

uint64_t sub_20A5FA09C()
{
  uint64_t v1 = sub_20A8C78E0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5FB17C(0, (unint64_t *)&qword_26AC69C70, MEMORY[0x263F5A248], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v27 - v6;
  uint64_t v8 = sub_20A8C7CF0();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(*(id *)(v0 + 56), sel_cachedSubscription, v10);
  unsigned int v14 = objc_msgSend(v13, sel_isPaidBundleViaOfferActivated);

  if (v14)
  {
    if (qword_267639C20 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_20A8C7DF0();
    __swift_project_value_buffer(v15, (uint64_t)qword_267652FC0);
    double v16 = sub_20A8C7DD0();
    os_log_type_t v17 = sub_20A8CEA00();
    if (!os_log_type_enabled(v16, v17)) {
      goto LABEL_12;
    }
    double v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v18 = 0;
    uint64_t v19 = "isPaidBundleViaOfferEligible: isPaidBundleViaOfferActivated = true. Not eligible.";
LABEL_11:
    _os_log_impl(&dword_20A414000, v16, v17, v19, v18, 2u);
    MEMORY[0x210528850](v18, -1, -1);
LABEL_12:

    return 0;
  }
  double v28 = v12;
  swift_getObjectType();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F59FA0], v1);
  sub_20A8C7A10();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_20A5C8B10((uint64_t)v7);
    if (qword_267639C20 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_20A8C7DF0();
    __swift_project_value_buffer(v20, (uint64_t)qword_267652FC0);
    double v16 = sub_20A8C7DD0();
    os_log_type_t v17 = sub_20A8CEA00();
    if (!os_log_type_enabled(v16, v17)) {
      goto LABEL_12;
    }
    double v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v18 = 0;
    uint64_t v19 = "isPaidBundleViaOfferEligible: no cached best offer found. Not eligible.";
    goto LABEL_11;
  }
  uint64_t v22 = v28;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v28, v7, v8);
  if ((sub_20A8C7CA0() & 1) == 0)
  {
    if (qword_267639C20 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_20A8C7DF0();
    __swift_project_value_buffer(v23, (uint64_t)qword_267652FC0);
    id v24 = sub_20A8C7DD0();
    os_log_type_t v25 = sub_20A8CEA00();
    if (os_log_type_enabled(v24, v25))
    {
      long long v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v26 = 0;
      _os_log_impl(&dword_20A414000, v24, v25, "isPaidBundleViaOfferEligible: isPaidBundleViaOffer = false. Not eligible.", v26, 2u);
      MEMORY[0x210528850](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v22, v8);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v22, v8);
  return 1;
}

uint64_t sub_20A5FA580()
{
  if (objc_msgSend(*(id *)(v0 + 56), sel_validatedCachedSubscription))
  {
    sub_20A5FB17C(0, (unint64_t *)&unk_26763C920, (uint64_t (*)(uint64_t))sub_20A5FB0CC, MEMORY[0x263F7D028]);
    swift_allocObject();
    sub_20A8C6580();
  }
  else
  {
    sub_20A5FB17C(0, (unint64_t *)&unk_26763C920, (uint64_t (*)(uint64_t))sub_20A5FB0CC, MEMORY[0x263F7D028]);
    swift_allocObject();
    sub_20A8C65E0();
  }
  swift_getObjectType();
  sub_20A8C7A20();
  uint64_t v1 = (void *)sub_20A8C6450();
  sub_20A8C6500();
  swift_release();

  uint64_t v2 = (void *)sub_20A8C6450();
  sub_20A8C65C0();
  swift_release();

  sub_20A8C6640();
  swift_release();
  swift_release();
  uint64_t v3 = (void *)sub_20A8C6450();
  uint64_t v4 = sub_20A8C6520();
  swift_release();

  return v4;
}

uint64_t sub_20A5FA7B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_20A8C7CA0();
  *a1 = result & 1;
  return result;
}

void sub_20A5FA7F8(void *a1@<X0>, unsigned char *a2@<X8>)
{
  if (qword_267639C20 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_20A8C7DF0();
  __swift_project_value_buffer(v4, (uint64_t)qword_267652FC0);
  id v5 = a1;
  id v6 = a1;
  uint64_t v7 = sub_20A8C7DD0();
  os_log_type_t v8 = sub_20A8CE9E0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v13 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_getErrorValue();
    uint64_t v11 = sub_20A8CF820();
    sub_20A687610(v11, v12, &v13);
    sub_20A8CF1C0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_20A414000, v7, v8, "offerManager refresh() failed: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x210528850](v10, -1, -1);
    MEMORY[0x210528850](v9, -1, -1);
  }
  else
  {
  }
  *a2 = 0;
}

void sub_20A5FA9E4(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v4 = qword_267639C20;
  id v5 = *(id *)a1;
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_20A8C7DF0();
  __swift_project_value_buffer(v6, (uint64_t)qword_267652FC0);
  id v7 = v5;
  os_log_type_t v8 = sub_20A8C7DD0();
  os_log_type_t v9 = sub_20A8CEA00();
  if (!os_log_type_enabled(v8, v9))
  {

    if (!v3) {
      goto LABEL_5;
    }
LABEL_7:
    unsigned __int8 v12 = objc_msgSend(v7, sel_isPaidBundleViaOfferActivated);

    char v11 = v12 ^ 1;
    goto LABEL_8;
  }
  uint64_t v10 = swift_slowAlloc();
  *(_DWORD *)uint64_t v10 = 67109376;
  sub_20A8CF1C0();
  *(_WORD *)(v10 + 8) = 1024;
  objc_msgSend(v7, sel_isPaidBundleViaOfferActivated);
  sub_20A8CF1C0();

  _os_log_impl(&dword_20A414000, v8, v9, "isPaidBundleViaOfferPromise: isPaidBundleViaOffer %{BOOL}d isPaidBundleViaOfferActivated %{BOOL}d", (uint8_t *)v10, 0xEu);
  MEMORY[0x210528850](v10, -1, -1);

  if (v3) {
    goto LABEL_7;
  }
LABEL_5:

  char v11 = 0;
LABEL_8:
  *a2 = v11;
}

uint64_t sub_20A5FAB90()
{
  if (objc_msgSend(*(id *)(v0 + 56), sel_validatedCachedSubscription))
  {
    sub_20A5FB17C(0, (unint64_t *)&unk_26763C920, (uint64_t (*)(uint64_t))sub_20A5FB0CC, MEMORY[0x263F7D028]);
    swift_allocObject();
    sub_20A8C6580();
  }
  else
  {
    sub_20A5FB17C(0, (unint64_t *)&unk_26763C920, (uint64_t (*)(uint64_t))sub_20A5FB0CC, MEMORY[0x263F7D028]);
    swift_allocObject();
    sub_20A8C65E0();
  }
  uint64_t v1 = (void *)sub_20A8C6450();
  uint64_t v2 = sub_20A8C6500();
  swift_release();

  return v2;
}

id sub_20A5FACD8@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isPaidBundleViaOfferActivated);
  *a2 = (_BYTE)result;
  return result;
}

void sub_20A5FAD14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  os_log_type_t v9 = *(void **)(a5 + 56);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_20A5FB144;
  *(void *)(v10 + 24) = v8;
  void v12[4] = sub_20A5DDE60;
  v12[5] = v10;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 1107296256;
  v12[2] = sub_20A4391D4;
  v12[3] = &block_descriptor_22;
  char v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_refreshBundleSubscriptionWithCachePolicy_completion_, 1, v11);
  _Block_release(v11);
}

uint64_t sub_20A5FAE2C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PaidBundleViaOfferFeatureAvailability()
{
  return self;
}

uint64_t sub_20A5FAE98()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_20A8C3860() & 1;
}

uint64_t sub_20A5FAEE4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (void *)(*v0 + 16);
  __swift_project_boxed_opaque_existential_1(v2, *(void *)(*v0 + 40));
  if (sub_20A8C3860())
  {
    __swift_project_boxed_opaque_existential_1(v2, *(void *)(v1 + 40));
    sub_20A8C37F0();
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    char v3 = sub_20A8C3C20();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_20A5FAFA0()
{
  return sub_20A5FA09C() & 1;
}

uint64_t sub_20A5FAFC8()
{
  return sub_20A5FA580();
}

uint64_t sub_20A5FAFEC()
{
  return sub_20A5FAB90();
}

void *sub_20A5FB010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v16 = a6;
  uint64_t v17 = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_1, a1, a6);
  uint64_t v13 = (void *)swift_allocObject();
  sub_20A42BEBC(&v15, (uint64_t)(v13 + 2));
  v13[7] = a2;
  v13[8] = a3;
  v13[9] = a4;
  return v13;
}

void sub_20A5FB0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_20A5FAD14(a1, a2, a3, a4, v4);
}

unint64_t sub_20A5FB0CC()
{
  unint64_t result = qword_26AC82388;
  if (!qword_26AC82388)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC82388);
  }
  return result;
}

uint64_t sub_20A5FB10C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A5FB144(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

void sub_20A5FB17C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

BOOL sub_20A5FB1E4()
{
  return swift_dynamicCastObjCClass() != 0;
}

uint64_t sub_20A5FB224(uint64_t a1, void *a2)
{
  uint64_t v2 = *(uint64_t (**)(void))(a1 + 32);
  id v3 = a2;
  char v4 = v2();

  return v4 & 1;
}

uint64_t sub_20A5FB268(void *a1, void *a2)
{
  sub_20A42CFF0(0, &qword_26763C958);
  id v10 = a1;
  id v4 = a1;
  sub_20A4756FC();
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    sub_20A8CF3C0();
    sub_20A8CE3D0();
    sub_20A8CF920();
    sub_20A8CE3D0();
    swift_bridgeObjectRelease();
    sub_20A8CE3D0();
    id v5 = objc_msgSend(a2, sel_description);
    sub_20A8CE280();

    sub_20A8CE3D0();
    swift_bridgeObjectRelease();
    sub_20A5FC308();
    swift_allocError();
    *uint64_t v6 = 0;
    v6[1] = 0xE000000000000000;
    sub_20A5FC2B0(0, &qword_26763C968, &qword_26763C958);
    swift_allocObject();
    uint64_t v7 = sub_20A8C6570();
  }
  else
  {

    sub_20A5FC2B0(0, &qword_26763C968, &qword_26763C958);
    swift_allocObject();
    id v8 = a1;
    return sub_20A8C6570();
  }
  return v7;
}

void sub_20A5FB50C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)sub_20A8CE240();
  id v8 = objc_msgSend(a1, sel_objectForKey_, v7);

  if (v8)
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
    sub_20A441D28(&v17, &v18);
    sub_20A42CFF0(0, &qword_26763C950);
    uint64_t v9 = swift_dynamicCast();
    MEMORY[0x270FA5388](v9);
    sub_20A42CFF0(0, &qword_26763C958);
    sub_20A8C6670();
    *(void *)(swift_allocObject() + 16) = v3;
    id v10 = v3;
    char v11 = (void *)sub_20A8C6450();
    sub_20A8C64F0();
    swift_release();
    swift_release();

    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a2;
    *(void *)(v12 + 24) = a3;
    swift_retain();
    uint64_t v13 = (void *)sub_20A8C6450();
    sub_20A8C6500();
    swift_release();
    swift_release();

    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a2;
    *(void *)(v14 + 24) = a3;
    swift_retain();
    long long v15 = (void *)sub_20A8C6450();
    sub_20A8C6550();

    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_20A5FB7A8(void *a1)
{
  sub_20A5FC2B0(0, &qword_26763C960, (unint64_t *)&qword_26AC7F920);
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
  uint64_t v2 = (void *)sub_20A8CEBE0();
  *(void *)(swift_allocObject() + 16) = a1;
  sub_20A42CFF0(0, &qword_26763C958);
  id v3 = a1;
  sub_20A8C6540();

  swift_release();
  *(void *)(swift_allocObject() + 16) = v3;
  id v4 = v3;
  id v5 = (void *)sub_20A8C6450();
  uint64_t v6 = sub_20A8C65B0();
  swift_release();
  swift_release();

  return v6;
}

uint64_t sub_20A5FB908(void **a1, void *a2)
{
  id v3 = *a1;
  sub_20A8C6670();
  id v4 = (void *)swift_allocObject();
  v4[2] = a2;
  v4[3] = v3;
  v4[4] = 20;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_20A5FC0A0;
  *(void *)(v5 + 24) = v4;
  id v6 = a2;
  id v7 = v3;
  id v8 = (void *)sub_20A8C6450();
  uint64_t v9 = sub_20A8C64F0();
  swift_release();
  swift_release();

  return v9;
}

uint64_t sub_20A5FBA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  swift_retain();
  sub_20A8C59E0();
  return swift_release();
}

uint64_t sub_20A5FBB48()
{
  sub_20A8C6670();
  uint64_t v0 = (void *)sub_20A8C6450();
  uint64_t v1 = sub_20A8C64F0();
  swift_release();

  return v1;
}

uint64_t sub_20A5FBBF0(uint64_t result, void *a2, uint64_t a3)
{
  uint64_t v3 = a3 - 1;
  if (__OFSUB__(a3, 1))
  {
    __break(1u);
  }
  else if (a3 == 1)
  {
    sub_20A5FC0C8();
    swift_allocObject();
    return sub_20A8C6580();
  }
  else
  {
    uint64_t v5 = (void *)result;
    MEMORY[0x270FA5388](result);
    sub_20A8C6670();
    id v6 = (void *)swift_allocObject();
    void v6[2] = v5;
    v6[3] = a2;
    void v6[4] = v3;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_20A5FC38C;
    *(void *)(v7 + 24) = v6;
    id v8 = v5;
    id v9 = a2;
    id v10 = (void *)sub_20A8C6450();
    uint64_t v11 = sub_20A8C64F0();
    swift_release();
    swift_release();

    return v11;
  }
  return result;
}

uint64_t sub_20A5FBD4C()
{
  uint64_t v0 = sub_20A8CC280();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  id v6 = (char *)&v10 - v5;
  sub_20A8CC270();
  MEMORY[0x2105245B0](v3, 5.0);
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v3, v0);
  uint64_t v8 = sub_20A8C6420();
  v7(v6, v0);
  return v8;
}

uint64_t sub_20A5FBE70(void *a1)
{
  return sub_20A8C6580();
}

uint64_t type metadata accessor for StockFeedMemoryTestCase()
{
  return self;
}

uint64_t sub_20A5FBF80()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_20A5FBFB8()
{
  return sub_20A5FB7A8(*(void **)(v0 + 16));
}

uint64_t sub_20A5FBFD4(void **a1)
{
  return sub_20A5FB908(a1, *(void **)(v1 + 16));
}

uint64_t sub_20A5FBFF0(uint64_t a1)
{
  return sub_20A5FBA28(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_20A5FC00C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A5FC044()
{
  return sub_20A5FBB48();
}

uint64_t sub_20A5FC060()
{
  return swift_deallocObject();
}

uint64_t sub_20A5FC0A0()
{
  return sub_20A5FBBF0(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_20A5FC0AC(uint64_t a1)
{
  return sub_20A72FC7C(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_20A5FC0C8()
{
  if (!qword_26AC698E0)
  {
    unint64_t v0 = sub_20A8C65F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC698E0);
    }
  }
}

uint64_t sub_20A5FC124()
{
  return sub_20A5FBE70(*(void **)(v0 + 16));
}

uint64_t sub_20A5FC140@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  void v7[4] = sub_20A5FB1E4;
  v7[5] = 0;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  v7[2] = sub_20A5FB224;
  v7[3] = &block_descriptor_23;
  uint64_t v4 = _Block_copy(v7);
  swift_release();
  id v5 = SUFirstViewControllerPassing(a1, 1, v4);
  _Block_release(v4);
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result)
  {
    __break(1u);
  }
  else
  {
    self;
    uint64_t result = swift_dynamicCastObjCClass();
    if (!result)
    {

      uint64_t result = 0;
    }
    *a2 = result;
  }
  return result;
}

uint64_t sub_20A5FC254()
{
  return swift_deallocObject();
}

uint64_t sub_20A5FC28C@<X0>(uint64_t *a1@<X8>)
{
  return sub_20A5FC140(*(void **)(v1 + 16), a1);
}

uint64_t sub_20A5FC294(void *a1)
{
  return sub_20A5FB268(a1, *(void **)(v1 + 16));
}

void sub_20A5FC2B0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_20A42CFF0(255, a3);
    unint64_t v4 = sub_20A8C65F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_20A5FC308()
{
  unint64_t result = qword_26763C970;
  if (!qword_26763C970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C970);
  }
  return result;
}

uint64_t sub_20A5FC374(uint64_t a1)
{
  return sub_20A5FC0AC(a1);
}

uint64_t sub_20A5FC394()
{
  return sub_20A5FC044();
}

uint64_t *sub_20A5FC3AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_20A8C2BC0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t sub_20A5FC4F8(uint64_t a1)
{
  uint64_t v2 = sub_20A8C2BC0();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 3, v2);
  if (!result)
  {
    unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_20A5FC5C8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C2BC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *sub_20A5FC6D8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C2BC0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

void *sub_20A5FC84C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C2BC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *sub_20A5FC95C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C2BC0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t sub_20A5FCAD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A5FCAE4);
}

uint64_t sub_20A5FCAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C2BC0();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4) {
    return v5 - 3;
  }
  else {
    return 0;
  }
}

uint64_t sub_20A5FCB50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A5FCB64);
}

uint64_t sub_20A5FCB64(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 3);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_20A8C2BC0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_20A5FCBE8(uint64_t a1)
{
  uint64_t v2 = sub_20A8C2BC0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 3, v2);
}

uint64_t sub_20A5FCC50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C2BC0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 3, v4);
}

uint64_t type metadata accessor for QuoteSummaryTimeRange()
{
  uint64_t result = qword_26AC82B50;
  if (!qword_26AC82B50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A5FCD0C()
{
  uint64_t result = sub_20A8C2BC0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_20A5FCD84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_20A8C2EB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A8C4250();
  sub_20A8C4230();
  sub_20A8C40F0();
  sub_20A8C4220();
  swift_release();
  swift_release();
  if ((v11[15] & 1) != 0
    || (sub_20A8C3D40(), char v6 = sub_20A8C2E90(),
                         (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2),
                         (v6 & 1) != 0))
  {
    uint64_t v7 = sub_20A8C2BC0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 1, 3, v7);
    uint64_t v8 = type metadata accessor for QuoteSummaryTimeRange();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 0, 1, v8);
  }
  else
  {
    uint64_t v10 = type metadata accessor for QuoteSummaryTimeRange();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
}

uint64_t sub_20A5FCF64@<X0>(char *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  BOOL v82 = a1;
  uint64_t v83 = a3;
  char v6 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v7 = *((void *)v6 - 1);
  MEMORY[0x270FA5388](v6);
  int v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C2990();
  uint64_t v79 = *(void *)(v10 - 8);
  uint64_t v80 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v78 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_20A8C4030();
  uint64_t v12 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  uint64_t v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_20A8C2EB0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  char v77 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v64 - v19;
  LODWORD(v76) = a2;
  if (a2)
  {
    sub_20A8C4250();
    sub_20A8C4230();
    sub_20A8C40F0();
    uint64_t v75 = v4;
    sub_20A8C4220();
    swift_release();
    swift_release();
    if (v84 == 1)
    {
      uint64_t v21 = v83;
      sub_20A5FEA24(v82, v83);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v7 + 56))(v21, 0, 1, v6);
    }
  }
  sub_20A8C3D40();
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v20, v15);
  if (v23 != *MEMORY[0x263F7A9A8])
  {
    if (v23 == *MEMORY[0x263F7A9B8])
    {
      if (v76)
      {
        sub_20A8C3D60();
        if ((v24 & 1) == 0)
        {
          uint64_t v74 = sub_20A8C3D60();
          LODWORD(v73) = v25;
          uint64_t v71 = sub_20A8C3DD0();
          LODWORD(v70) = v26;
          uint64_t v69 = sub_20A8C3DC0();
          LODWORD(v68) = v27;
          uint64_t v28 = sub_20A8C3D30();
          uint64_t v66 = v29;
          uint64_t v67 = v28;
          uint64_t v72 = v16;
          uint64_t v75 = v12;
          uint64_t v76 = v15;
          double v30 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
          uint64_t v31 = v81;
          v30(v14, v82, v81);
          uint64_t v32 = v77;
          sub_20A8C3D40();
          unint64_t v33 = v78;
          sub_20A8C2910();
          *(void *)int v9 = v74;
          v9[8] = v73 & 1;
          *((void *)v9 + 2) = v71;
          v9[24] = v70 & 1;
          *((void *)v9 + 4) = v69;
          v9[40] = v68 & 1;
          uint64_t v34 = v66;
          *((void *)v9 + 6) = v67;
          *((void *)v9 + 7) = v34;
          id v35 = &v9[v6[10]];
          BOOL v82 = v14;
          uint64_t v36 = v31;
          uint64_t v37 = v33;
          v30(v35, v14, v36);
          uint64_t v38 = v72;
          uint64_t v39 = v76;
          uint64_t v40 = v80;
          *((void *)v9 + 8) = 0;
          *((void *)v9 + 9) = 0xE000000000000000;
          (*(void (**)(char *, char *, uint64_t))(v38 + 16))(&v9[v6[9]], v32, v39);
          uint64_t v41 = v79;
          (*(void (**)(char *, char *, uint64_t))(v79 + 16))(&v9[v6[11]], v37, v40);
          if (qword_26AC6D680 != -1) {
            swift_once();
          }
          uint64_t v42 = qword_26AC9EA70;
          (*(void (**)(char *, uint64_t))(v38 + 8))(v32, v39);
          (*(void (**)(char *, uint64_t))(v75 + 8))(v82, v81);
          uint64_t v43 = v42 + OBJC_IVAR____TtC8StocksUI14PriceFormatter_locale;
          swift_beginAccess();
          (*(void (**)(uint64_t, char *, uint64_t))(v41 + 40))(v43, v37, v40);
          swift_endAccess();
          uint64_t v21 = v83;
          sub_20A5EF2A8((uint64_t)v9, v83);
          return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v7 + 56))(v21, 0, 1, v6);
        }
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v7 + 56))(v83, 1, 1, v6);
      }
    }
    else if (v23 != *MEMORY[0x263F7A998])
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v7 + 56))(v83, 1, 1, v6);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v20, v15);
    }
  }
  sub_20A8C3D70();
  if (v44) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v7 + 56))(v83, 1, 1, v6);
  }
  uint64_t v74 = v7;
  uint64_t v72 = sub_20A8C3D70();
  LODWORD(v71) = v45;
  uint64_t v70 = sub_20A8C3DE0();
  LODWORD(v69) = v46;
  uint64_t v68 = sub_20A8C3DC0();
  uint64_t v73 = v6;
  LODWORD(v67) = v47;
  uint64_t v66 = sub_20A8C3D30();
  uint64_t v48 = v16;
  uint64_t v65 = v49;
  uint64_t v75 = v12;
  uint64_t v76 = v15;
  unint64_t v50 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v51 = v81;
  v50(v14, v82, v81);
  id v52 = v77;
  sub_20A8C3D40();
  uint64_t v53 = v78;
  sub_20A8C2910();
  unint64_t v54 = v73;
  *(void *)int v9 = v72;
  v9[8] = v71 & 1;
  *((void *)v9 + 2) = v70;
  v9[24] = v69 & 1;
  *((void *)v9 + 4) = v68;
  uint64_t v55 = v80;
  v9[40] = v67 & 1;
  uint64_t v56 = v65;
  *((void *)v9 + 6) = v66;
  *((void *)v9 + 7) = v56;
  uint64_t v57 = &v9[v54[10]];
  BOOL v82 = v14;
  v50(v57, v14, v51);
  uint64_t v58 = v76;
  uint64_t v59 = v52;
  *((void *)v9 + 8) = 0;
  *((void *)v9 + 9) = 0xE000000000000000;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(&v9[v54[9]], v52, v58);
  uint64_t v60 = v79;
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(&v9[v54[11]], v53, v55);
  if (qword_26AC6D680 != -1) {
    swift_once();
  }
  uint64_t v61 = qword_26AC9EA70;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v59, v58);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v82, v51);
  uint64_t v62 = v61 + OBJC_IVAR____TtC8StocksUI14PriceFormatter_locale;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v60 + 40))(v62, v53, v55);
  swift_endAccess();
  uint64_t v63 = v83;
  sub_20A5EF2A8((uint64_t)v9, v83);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v74 + 56))(v63, 0, 1, v54);
}

uint64_t sub_20A5FD780@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20A8C2EB0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1)
  {
    sub_20A8C4250();
    sub_20A8C4230();
    sub_20A8C40F0();
    sub_20A8C4220();
    swift_release();
    swift_release();
    if (v14[15] == 1) {
      goto LABEL_6;
    }
  }
  sub_20A8C3D40();
  int v8 = (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == *MEMORY[0x263F7A9A8]) {
    goto LABEL_8;
  }
  if (v8 != *MEMORY[0x263F7A9B8])
  {
    if (v8 != *MEMORY[0x263F7A998])
    {
      uint64_t v13 = type metadata accessor for QuoteSummaryTimeRange();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a2, 1, 1, v13);
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    }
    goto LABEL_8;
  }
  if ((a1 & 1) == 0)
  {
LABEL_8:
    uint64_t v10 = sub_20A8C2BC0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a2, 2, 3, v10);
    goto LABEL_9;
  }
LABEL_6:
  uint64_t v9 = sub_20A8C2BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a2, 3, 3, v9);
LABEL_9:
  uint64_t v11 = type metadata accessor for QuoteSummaryTimeRange();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a2, 0, 1, v11);
}

uint64_t sub_20A5FD9FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v3 = sub_20A8C2EB0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C2BC0();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v8 + 104))(v11, *MEMORY[0x263F7A838], v7, v9);
  sub_20A5FF394();
  sub_20A8CE570();
  sub_20A8CE570();
  if (v25 == v23 && v26 == v24)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  else
  {
    char v12 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    if ((v12 & 1) == 0)
    {
      uint64_t v14 = v22;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v22, a1, v7);
      uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
      uint64_t v16 = v14;
      uint64_t v17 = 0;
      goto LABEL_11;
    }
  }
  sub_20A8C4250();
  sub_20A8C4230();
  sub_20A8C40F0();
  sub_20A8C4220();
  swift_release();
  swift_release();
  if (v25)
  {
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
    uint64_t v14 = v22;
LABEL_9:
    uint64_t v16 = v14;
    uint64_t v17 = 1;
LABEL_11:
    v13(v16, v17, 3, v7);
    uint64_t v18 = type metadata accessor for QuoteSummaryTimeRange();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v14, 0, 1, v18);
  }
  sub_20A8C3D40();
  char v15 = sub_20A8C2E90();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v14 = v22;
  if (v15)
  {
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
    goto LABEL_9;
  }
  uint64_t v20 = type metadata accessor for QuoteSummaryTimeRange();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v14, 1, 1, v20);
}

uint64_t sub_20A5FDD60()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8C2BC0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v20 - v7;
  uint64_t v9 = type metadata accessor for QuoteSummaryTimeRange();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5FF2D0(v1, (uint64_t)v11);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 3, v2))
  {
    case 1u:
    case 2u:
    case 3u:
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v14 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      uint64_t v15 = sub_20A8C2370();

      break;
    default:
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v11, v2);
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
      int v12 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
      if (v12 == *MEMORY[0x263F7A838]
        || v12 == *MEMORY[0x263F7A840]
        || v12 == *MEMORY[0x263F7A850]
        || v12 == *MEMORY[0x263F7A828]
        || v12 == *MEMORY[0x263F7A870]
        || v12 == *MEMORY[0x263F7A818]
        || v12 == *MEMORY[0x263F7A848]
        || v12 == *MEMORY[0x263F7A860]
        || v12 == *MEMORY[0x263F7A868]
        || v12 == *MEMORY[0x263F7A858]
        || v12 == *MEMORY[0x263F7A830])
      {
        type metadata accessor for Localized();
        uint64_t v16 = swift_getObjCClassFromMetadata();
        id v17 = objc_msgSend(self, sel_bundleForClass_, v16);
        uint64_t v15 = sub_20A8C2370();

        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      }
      else
      {
        uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
        v19(v8, v2);
        v19(v6, v2);
        uint64_t v15 = 0;
      }
      break;
  }
  return v15;
}

uint64_t sub_20A5FE6F4()
{
  uint64_t v1 = type metadata accessor for QuoteSummaryTimeRange();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5FF2D0(v0, (uint64_t)v3);
  uint64_t v4 = sub_20A8C2BC0();
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 3, v4))
  {
    case 1u:
    case 2u:
    case 3u:
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v9 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      uint64_t v7 = sub_20A8C2370();

      break;
    default:
      type metadata accessor for Localized();
      uint64_t v5 = swift_getObjCClassFromMetadata();
      id v6 = objc_msgSend(self, sel_bundleForClass_, v5);
      uint64_t v7 = sub_20A8C2370();

      sub_20A5FF334((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for QuoteSummaryTimeRange);
      break;
  }
  return v7;
}

uint64_t sub_20A5FEA24@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_20A8C2990();
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C2EB0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8C4030();
  uint64_t v13 = *(char **)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v16 = COERCE_DOUBLE(sub_20A8C3E00());
  if (v17) {
    double v16 = 100.0;
  }
  if ((~*(void *)&v16 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v16 <= -1.0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v16 >= 1.84467441e19)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    swift_once();
    goto LABEL_12;
  }
  uint64_t v18 = 0x5851F42D4C957F2DLL * (unint64_t)v16 + 1;
  uint64_t v39 = v8;
  uint64_t v40 = v7;
  for (i = a1; (unint64_t)(0x20000000000001 * v18) < 0x1FFFFFFFFFF801; uint64_t v18 = 0x5851F42D4C957F2DLL * v18 + 1)
    ;
  uint64_t v19 = v11;
  uint64_t v11 = (char *)v12;
  unint64_t v20 = ((unint64_t)v18 * (unsigned __int128)0x20000000000001uLL) >> 64;
  if (v20 == 0x20000000000000) {
    double v21 = 10.0;
  }
  else {
    double v21 = (double)v20 * 1.11022302e-16 * 20.0 + -10.0;
  }
  double v22 = v16 + v21;
  uint64_t v36 = sub_20A8C3DC0();
  int v35 = v23;
  uint64_t v34 = sub_20A8C3D30();
  uint64_t v25 = v24;
  uint64_t v37 = v13;
  uint64_t v26 = (void (*)(char *, char *, char *))*((void *)v13 + 2);
  v26(v15, i, v11);
  uint64_t v13 = v19;
  int v27 = v19;
  a1 = (char *)v39;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v27, *MEMORY[0x263F7A9B8], v39);
  uint64_t v2 = v40;
  sub_20A8C2910();
  *(double *)a2 = v22;
  *(unsigned char *)(a2 + 8) = 0;
  *(double *)(a2 + 16) = v21;
  *(unsigned char *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = v36;
  *(unsigned char *)(a2 + 40) = v35 & 1;
  *(void *)(a2 + 48) = v34;
  *(void *)(a2 + 56) = v25;
  uint64_t v28 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v29 = a2 + v28[10];
  uint64_t i = v15;
  v26((char *)v29, v15, v11);
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0xE000000000000000;
  (*(void (**)(uint64_t, char *, char *))(v9 + 16))(a2 + v28[9], v13, a1);
  uint64_t v30 = a2 + v28[11];
  uint64_t v8 = v41;
  a2 = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 16))(v30, v2, v42);
  if (qword_26AC6D680 != -1) {
    goto LABEL_16;
  }
LABEL_12:
  uint64_t v31 = qword_26AC9EA70;
  (*(void (**)(char *, char *))(v9 + 8))(v13, a1);
  (*((void (**)(char *, char *))v37 + 1))(i, v11);
  uint64_t v32 = v31 + OBJC_IVAR____TtC8StocksUI14PriceFormatter_locale;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(v32, v2, a2);
  return swift_endAccess();
}

uint64_t sub_20A5FEE90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C2BC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for QuoteSummaryTimeRange();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5FF26C();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v13[*(int *)(v14 + 56)];
  sub_20A5FF2D0(a1, (uint64_t)v13);
  sub_20A5FF2D0(a2, v15);
  double v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  switch(v16((uint64_t)v13, 3, v4))
  {
    case 1u:
      int v17 = v16(v15, 3, v4);
      uint64_t v18 = (uint64_t (*)(void))type metadata accessor for QuoteSummaryTimeRange;
      if (v17 != 1) {
        goto LABEL_9;
      }
      goto LABEL_5;
    case 2u:
      int v20 = v16(v15, 3, v4);
      uint64_t v18 = (uint64_t (*)(void))type metadata accessor for QuoteSummaryTimeRange;
      if (v20 != 2) {
        goto LABEL_9;
      }
      goto LABEL_5;
    case 3u:
      int v21 = v16(v15, 3, v4);
      uint64_t v18 = (uint64_t (*)(void))type metadata accessor for QuoteSummaryTimeRange;
      if (v21 != 3) {
        goto LABEL_9;
      }
LABEL_5:
      LOBYTE(v19) = 1;
      break;
    default:
      sub_20A5FF2D0((uint64_t)v13, (uint64_t)v10);
      if (v16(v15, 3, v4))
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_9:
        LOBYTE(v19) = 0;
        uint64_t v18 = (uint64_t (*)(void))sub_20A5FF26C;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
        sub_20A5FF394();
        sub_20A8CE570();
        sub_20A8CE570();
        if (v26[2] == v26[0] && v26[3] == v26[1])
        {
          swift_bridgeObjectRelease_n();
          int v23 = *(void (**)(char *, uint64_t))(v5 + 8);
          v23(v7, v4);
          v23(v10, v4);
          LOBYTE(v19) = 1;
          uint64_t v18 = (uint64_t (*)(void))type metadata accessor for QuoteSummaryTimeRange;
        }
        else
        {
          int v24 = sub_20A8CF760();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v25 = *(void (**)(char *, uint64_t))(v5 + 8);
          v25(v7, v4);
          v25(v10, v4);
          int v19 = v24 << 31 >> 31;
          uint64_t v18 = (uint64_t (*)(void))type metadata accessor for QuoteSummaryTimeRange;
        }
      }
      break;
  }
  sub_20A5FF334((uint64_t)v13, v18);
  return v19 & 1;
}

void sub_20A5FF26C()
{
  if (!qword_26AC82B68)
  {
    type metadata accessor for QuoteSummaryTimeRange();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC82B68);
    }
  }
}

uint64_t sub_20A5FF2D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for QuoteSummaryTimeRange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A5FF334(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_20A5FF394()
{
  unint64_t result = qword_26AC68D78;
  if (!qword_26AC68D78)
  {
    sub_20A8C2BC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC68D78);
  }
  return result;
}

uint64_t sub_20A5FF3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = a4;
  uint64_t v37 = a3;
  uint64_t v5 = sub_20A8C2B70();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8CA9F0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (double *)((char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for StockSearchLayoutSectionDescriptor();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44D940();
  sub_20A8C9850();
  long long v19 = *((_OWORD *)v18 + 1);
  v38[0] = *(_OWORD *)v18;
  v38[1] = v19;
  _OWORD v38[2] = *((_OWORD *)v18 + 2);
  uint64_t v39 = *((void *)v18 + 6);
  sub_20A5A274C();
  sub_20A5A3488((uint64_t)&v18[*(int *)(v20 + 48)], (uint64_t)v15);
  sub_20A5FFAF4();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F7DD78], v9);
  sub_20A8CA820();
  uint64_t v21 = sub_20A8CEB00();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  double v22 = (char *)sub_20A8CA6F0();
  sub_20A75B050((uint64_t)v38, v15, v22);
  sub_20A5FFBD0((uint64_t)v38);

  __swift_project_boxed_opaque_existential_1((void *)(v4 + 72), *(void *)(v4 + 96));
  int v23 = (char *)sub_20A8CA6F0();
  id v24 = *(id *)&v23[OBJC_IVAR____TtC8StocksUI28StockSearchSectionHeaderView_watchlistSwitcherButton];

  uint64_t v25 = (void *)sub_20A5F0AE8(v24, 1);
  uint64_t v26 = (char *)sub_20A8CA6F0();
  id v27 = *(id *)&v26[OBJC_IVAR____TtC8StocksUI28StockSearchSectionHeaderView_watchlistSwitcherButton];

  objc_msgSend(v27, sel_setShowsMenuAsPrimaryAction_, 1, v36, v37);
  uint64_t v28 = (char *)sub_20A8CA6F0();
  id v29 = *(id *)&v28[OBJC_IVAR____TtC8StocksUI28StockSearchSectionHeaderView_watchlistSwitcherButton];

  objc_msgSend(v29, sel_setMenu_, v25);
  uint64_t v30 = (char *)sub_20A8CA6F0();
  id v31 = *(id *)&v30[OBJC_IVAR____TtC8StocksUI28StockSearchSectionHeaderView_watchlistSwitcherButton];

  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v33 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v34 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_setAccessibilityHint_, v34);

  sub_20A5A358C((uint64_t)v15);
  return v21;
}

uint64_t type metadata accessor for StockSearchBlueprintViewSupplementaryViewProvider()
{
  return self;
}

uint64_t sub_20A5FF898()
{
  uint64_t v0 = sub_20A8CA9F0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5FFAF4();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7DD78], v0);
  sub_20A8CEB20();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_20A5FF9AC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_20A5FF3EC(a1, a2, *a3, a4);
}

uint64_t sub_20A5FF9D4()
{
  return sub_20A5FFB88(&qword_26AC78AC0, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
}

uint64_t sub_20A5FFA1C()
{
  return sub_20A5FFB88(&qword_26AC7CC48, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutSectionDescriptor);
}

uint64_t sub_20A5FFA64()
{
  return sub_20A5FFB88(&qword_26AC74170, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutModel);
}

uint64_t sub_20A5FFAAC()
{
  return sub_20A5FFB88(&qword_26AC6F3E0, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
}

void sub_20A5FFAF4()
{
  if (!qword_26AC6A678)
  {
    type metadata accessor for StockSearchSectionHeaderView();
    sub_20A5FFB88(&qword_26AC68218, (void (*)(uint64_t))type metadata accessor for StockSearchSectionHeaderView);
    unint64_t v0 = sub_20A8CA710();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A678);
    }
  }
}

uint64_t sub_20A5FFB88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A5FFBD0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_20A5A3438(v2, v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlacardViewLayoutAttributes(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PlacardViewLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PlacardViewLayoutAttributes()
{
  return &type metadata for PlacardViewLayoutAttributes;
}

uint64_t sub_20A5FFC9C()
{
  sub_20A5FFD30();

  return sub_20A8CACE0();
}

unint64_t sub_20A5FFCDC()
{
  unint64_t result = qword_26763C980;
  if (!qword_26763C980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C980);
  }
  return result;
}

unint64_t sub_20A5FFD30()
{
  unint64_t result = qword_26763C988;
  if (!qword_26763C988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C988);
  }
  return result;
}

uint64_t sub_20A5FFD84(uint64_t a1)
{
  uint64_t v32 = a1;
  sub_20A60059C(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  id v33 = (char *)&v30 - v3;
  uint64_t v31 = sub_20A8C5E90();
  uint64_t v4 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C5ED0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (uint64_t *)((char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A4F6AEC();
  uint64_t v15 = *(void *)(v14 - 8);
  double v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void (**)(char *, uint64_t, double))(v15 + 16);
  uint64_t v19 = v15 + 16;
  uint64_t v34 = v21;
  v20(v18, v1 + OBJC_IVAR____TtC8StocksUI22StocksSearchURLHandler_navigator, v16);
  sub_20A60059C(0, &qword_26AC69780, MEMORY[0x263F7D2D0], MEMORY[0x263F7CEB0]);
  sub_20A8C6050();
  sub_20A8C5EB0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v22 = sub_20A8C5E80();
  unint64_t v24 = v23;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v31);
  uint64_t v25 = (uint64_t)v33;
  if (v24) {
    uint64_t v26 = v22;
  }
  else {
    uint64_t v26 = 0;
  }
  if (v24) {
    unint64_t v27 = v24;
  }
  else {
    unint64_t v27 = 0xE000000000000000;
  }
  uint64_t *v13 = v26;
  v13[1] = v27;
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = sub_20A8C6D60();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v25, 1, 1, v28);
  uint64_t v38 = 0;
  memset(v37, 0, sizeof(v37));
  uint64_t v36 = 0;
  memset(v35, 0, sizeof(v35));
  sub_20A5BFF1C((uint64_t)v13, 0, v25, (uint64_t)v37, 0, 0, (uint64_t)v35);
  swift_release();
  sub_20A4F6EB8((uint64_t)v35, &qword_26AC69600, (unint64_t *)&unk_26AC695F0, MEMORY[0x263F7CDB8]);
  sub_20A4F6EB8((uint64_t)v37, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70, MEMORY[0x263F58868]);
  sub_20A600600(v25);
  sub_20A4EF9E0((uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v19 - 8))(v18, v34);
  return 1;
}

uint64_t sub_20A600348()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI22StocksSearchURLHandler_navigator;
  sub_20A4F6AEC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_20A6003F0()
{
  return type metadata accessor for StocksSearchURLHandler();
}

uint64_t type metadata accessor for StocksSearchURLHandler()
{
  uint64_t result = qword_26AC6BAF0;
  if (!qword_26AC6BAF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A600444()
{
  sub_20A4F6AEC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_20A6004E4(uint64_t a1)
{
  return sub_20A5FFD84(a1) & 1;
}

uint64_t sub_20A60050C()
{
  return sub_20A600554(&qword_26AC6BAE8, (void (*)(uint64_t))type metadata accessor for StocksSearchURLHandler);
}

uint64_t sub_20A600554(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A60059C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A600600(uint64_t a1)
{
  sub_20A60059C(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_20A60068C(_OWORD *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_20A8C9830();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)v4 + v12;
    uint64_t v15 = (uint64_t)a2 + v12;
    *(void *)uint64_t v14 = *(void *)v15;
    v14[8] = *(unsigned char *)(v15 + 8);
    *(void *)((char *)v4 + v13) = *(uint64_t *)((char *)a2 + v13);
  }
  return v4;
}

uint64_t sub_20A60078C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_20A8C9830();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

_OWORD *sub_20A6007F4(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C9830();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  return a1;
}

void *sub_20A6008A4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C9830();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  char v13 = v12[8];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v13;
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

_OWORD *sub_20A600970(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C9830();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  char v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(void *)char v13 = *(void *)v14;
  v13[8] = v14[8];
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  return a1;
}

_OWORD *sub_20A600A20(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C9830();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  char v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(void *)char v13 = *(void *)v14;
  v13[8] = v14[8];
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  return a1;
}

uint64_t sub_20A600AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A600AE4);
}

uint64_t sub_20A600AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_20A8C9830();
  long long v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_20A600B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A600B68);
}

uint64_t sub_20A600B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_20A8C9830();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t type metadata accessor for StockTitleViewLayoutOptions()
{
  uint64_t result = qword_26AC78040;
  if (!qword_26AC78040) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A600C28()
{
  uint64_t result = sub_20A8C9830();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t ArticleViewerViewController.navigateStack(toward:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (unint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A42F250();
  sub_20A8CB4B0();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A600FA0();
      uint64_t v9 = (char *)v6 + *(int *)(v8 + 48);
      uint64_t v10 = sub_20A8CA180();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      uint64_t v11 = (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor;
      goto LABEL_7;
    case 2u:
      uint64_t v11 = type metadata accessor for StocksActivity;
LABEL_7:
      sub_20A481BD0((uint64_t)v6, v11);
      goto LABEL_9;
    case 3u:
      goto LABEL_8;
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 0xAu:
    case 0xCu:
      sub_20A481BD0((uint64_t)v6, type metadata accessor for StocksActivity);
      goto LABEL_3;
    case 8u:
      sub_20A485620(*v6);
      goto LABEL_3;
    case 9u:
      sub_20A459CA4(*v6);
      goto LABEL_3;
    case 0xBu:
      sub_20A4B2908();
      swift_release();
      sub_20A44D27C((uint64_t)v6);
      goto LABEL_3;
    case 0xDu:
LABEL_3:
      uint64_t v7 = (unsigned int *)MEMORY[0x263F7DBB8];
      break;
    default:
      swift_bridgeObjectRelease();
LABEL_8:
      swift_bridgeObjectRelease();
LABEL_9:
      id v12 = objc_msgSend(v2, sel_ts_transitionContainerViewController);
      if (v12
        && (char v13 = v12,
            id v14 = objc_msgSend(v12, sel_navigationController),
            v13,
            v14)
        || (id v14 = objc_msgSend(v2, sel_navigationController)) != 0)
      {
        id v15 = v14;
      }
      uint64_t v7 = (unsigned int *)MEMORY[0x263F7DBB0];
      break;
  }
  uint64_t v16 = *v7;
  uint64_t v17 = sub_20A8CA260();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(a1, v16, v17);
}

void sub_20A600FA0()
{
  if (!qword_26AC74940)
  {
    type metadata accessor for ForYouSectionDescriptor();
    sub_20A8CA180();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC74940);
    }
  }
}

uint64_t ArticleViewerViewController.preview(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F7D8E8];
  uint64_t v3 = sub_20A8C9AB0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_20A601088(uint64_t a1)
{
  uint64_t result = sub_20A6010E0(&qword_26AC69520, MEMORY[0x263F58DB8]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_20A6010E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A601128()
{
  return sub_20A6010E0((unint64_t *)&unk_26AC6C730, (void (*)(uint64_t))type metadata accessor for StocksActivity);
}

uint64_t sub_20A601174@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F7D8E8];
  uint64_t v3 = sub_20A8C9AB0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t type metadata accessor for DisabledAudioTrackFactory()
{
  return self;
}

uint64_t sub_20A60120C()
{
  return swift_willThrow();
}

uint64_t sub_20A601254()
{
  uint64_t v1 = (char *)objc_msgSend(*(id *)(v0 + 16), sel_cachedSubscription);
  if (objc_getAssociatedObject(v1, v1 + 1))
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  sub_20A602C88((uint64_t)&v9, (uint64_t)v11, (uint64_t (*)(void))sub_20A42F348);
  if (!v12)
  {
    sub_20A44349C((uint64_t)v11);
    goto LABEL_9;
  }
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC686D0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    uint64_t v2 = 0;
    unint64_t v3 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = v8;
  unint64_t v3 = (unint64_t)objc_msgSend(v8, sel_integerValue);
  if (v3 == -1) {
    goto LABEL_17;
  }
LABEL_10:
  if (objc_getAssociatedObject(v1, (const void *)~v3))
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  sub_20A602C88((uint64_t)&v9, (uint64_t)v11, (uint64_t (*)(void))sub_20A42F348);
  if (!v12)
  {
    sub_20A44349C((uint64_t)v11);
    goto LABEL_17;
  }
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC686D0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:

    int v6 = -60;
    return (v6 ^ v3) & 1;
  }
  id v4 = v8;
  unsigned int v5 = objc_msgSend(v4, sel_integerValue);

  int v6 = v5 - 60;
  return (v6 ^ v3) & 1;
}

void sub_20A601454(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  BOOL v82 = a2;
  uint64_t v3 = sub_20A8C4CD0();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v83 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C4020();
  uint64_t v86 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v81 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  long long v9 = (char *)&v71 - v8;
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
  long long v10 = (void *)sub_20A8CF1A0();
  sub_20A8CE9D0();
  sub_20A602CF0(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_20A8D3DC0;
  uint64_t v12 = sub_20A8C3F90();
  uint64_t v14 = v13;
  *(void *)(v11 + 56) = MEMORY[0x263F8D310];
  *(void *)(v11 + 64) = sub_20A43F830();
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v14;
  uint64_t v15 = v86;
  uint64_t v16 = v9;
  sub_20A8C7D90();

  uint64_t v17 = a1;
  swift_bridgeObjectRelease();
  id v85 = sub_20A601EB0();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v18(v16, a1, v5);
  uint64_t v19 = (void *)sub_20A8C3F80();
  uint64_t v20 = v84;
  sub_20A6020B4(v19);
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v16, v5);
    swift_unknownObjectRelease();

    return;
  }
  uint64_t v84 = v5;
  uint64_t v79 = v21;
  uint64_t v80 = v16;
  uint64_t v78 = v18;
  uint64_t v22 = v87;
  swift_unknownObjectRelease();
  unint64_t v23 = (void *)sub_20A8C3F80();
  sub_20A602ABC(v23);
  uint64_t v25 = v24;
  uint64_t v76 = 0;
  swift_unknownObjectRelease();
  if (sub_20A601254()) {
    uint64_t v26 = 3;
  }
  else {
    uint64_t v26 = 0;
  }
  char v27 = sub_20A601254();
  uint64_t v28 = v81;
  uint64_t v77 = v17;
  uint64_t v29 = v17;
  uint64_t v30 = v84;
  uint64_t v75 = v15 + 16;
  v78(v81, v29, v84);
  if (v27)
  {
    uint64_t v31 = v28;
    uint64_t v32 = *(void (**)(char *, uint64_t))(v86 + 8);
    v32(v31, v30);
  }
  else
  {
    unsigned int v33 = objc_msgSend((id)sub_20A8C3F80(), sel_isFullTrackAvailableToAll);
    swift_unknownObjectRelease();
    uint64_t v34 = v28;
    uint64_t v32 = *(void (**)(char *, uint64_t))(v86 + 8);
    v32(v34, v30);
    if (!v33) {
      v26 |= 0x80uLL;
    }
  }
  if (!(sub_20A601254() & 1 | (v85 == 0))) {
    v26 |= 0x100uLL;
  }
  id v74 = (id)v22[8];
  int v35 = (void *)sub_20A8C3F80();
  unsigned int v36 = objc_msgSend(v35, sel_isPaid);
  if (objc_msgSend(v35, sel_respondsToSelector_, sel_isBundlePaid)) {
    unsigned __int8 v37 = objc_msgSend(v35, sel_isBundlePaid);
  }
  else {
    unsigned __int8 v37 = 0;
  }
  id v38 = objc_msgSend(v35, sel_sourceChannel);
  if (v38)
  {
    id v39 = objc_msgSend(v38, sel_identifier);
    swift_unknownObjectRelease();
    uint64_t v73 = sub_20A8CE280();
    uint64_t v41 = v40;

    uint64_t v81 = (char *)v32;
    if (v36) {
      goto LABEL_17;
    }
LABEL_22:
    if (v37) {
      goto LABEL_25;
    }
    goto LABEL_23;
  }
  uint64_t v73 = 0;
  uint64_t v41 = 0;
  uint64_t v81 = (char *)v32;
  if (!v36) {
    goto LABEL_22;
  }
LABEL_17:
  id v42 = objc_msgSend(v74, sel_purchaseProvider);
  if (v41)
  {
    id v43 = objc_msgSend(v42, sel_purchasedTagIDs);
    uint64_t v44 = sub_20A8CE7F0();

    LOBYTE(v43) = sub_20A4443F8(v73, v41, v44);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if ((v43 & 1) == 0)
    {
      if ((v37 & 1) == 0) {
        goto LABEL_28;
      }
      goto LABEL_25;
    }
LABEL_23:
    uint64_t v45 = v26;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    char v46 = 1;
    goto LABEL_51;
  }
  swift_unknownObjectRelease();
  if ((v37 & 1) == 0)
  {
LABEL_28:
    uint64_t v45 = v26;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
LABEL_50:
    char v46 = 0;
    goto LABEL_51;
  }
LABEL_25:
  if (!v41)
  {
    uint64_t v45 = v26;
    swift_unknownObjectRelease();
    goto LABEL_50;
  }
  int v47 = (char *)objc_msgSend(objc_msgSend(v74, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  id v72 = v47;
  if (objc_getAssociatedObject(v47, v47 + 1))
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v89 = 0u;
    long long v90 = 0u;
  }
  sub_20A602C88((uint64_t)&v89, (uint64_t)v91, (uint64_t (*)(void))sub_20A42F348);
  uint64_t v71 = v41;
  if (!v92)
  {
    sub_20A44349C((uint64_t)v91);
    goto LABEL_36;
  }
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC686D0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_36:
    id v48 = 0;
    unint64_t v50 = 0;
    goto LABEL_37;
  }
  id v48 = v88;
  id v49 = objc_msgSend(v88, sel_integerValue, v71);
  if (v49 == (id)-1)
  {
    uint64_t v51 = &off_263FDE000;
    uint64_t v45 = v26;

    goto LABEL_48;
  }
  unint64_t v50 = (unint64_t)v49;
LABEL_37:
  if (objc_getAssociatedObject(v72, (const void *)~v50))
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v89 = 0u;
    long long v90 = 0u;
  }
  sub_20A602C88((uint64_t)&v89, (uint64_t)v91, (uint64_t (*)(void))sub_20A42F348);
  if (v92)
  {
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC686D0);
    uint64_t v51 = &off_263FDE000;
    uint64_t v45 = v26;
    if (swift_dynamicCast())
    {
      id v52 = v48;
      id v53 = v88;
      unsigned int v54 = objc_msgSend(v53, sel_integerValue);

      if (((v54 + 1) ^ (v50 + 1))) {
        goto LABEL_48;
      }
LABEL_46:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_50;
    }
  }
  else
  {
    uint64_t v51 = &off_263FDE000;
    uint64_t v45 = v26;
    sub_20A44349C((uint64_t)v91);
  }

  if ((v50 & 1) == 0) {
    goto LABEL_46;
  }
LABEL_48:
  id v55 = objc_msgSend(objc_msgSend(v74, (SEL)v51[482], v71), sel_bundleSubscription);
  swift_unknownObjectRelease();
  id v56 = objc_msgSend(v55, sel_bundleChannelIDs);

  uint64_t v57 = (void *)sub_20A8CE240();
  unsigned __int8 v58 = objc_msgSend(v56, sel_containsObject_, v57);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  if ((v58 & 1) == 0) {
    goto LABEL_50;
  }
  char v46 = 1;
LABEL_51:
  id v59 = v85;
  id v60 = v85;
  id v61 = sub_20A6025DC(v77, v59);
  uint64_t v62 = (int *)type metadata accessor for StocksAudioTrack();
  uint64_t v63 = v82;
  uint64_t v64 = v80;
  v78((char *)v82 + v62[5], (uint64_t)v80, v84);
  *uint64_t v63 = sub_20A8C3F80();
  uint64_t v65 = v79;
  *(uint64_t *)((char *)v63 + v62[6]) = (uint64_t)v79;
  *(uint64_t *)((char *)v63 + v62[7]) = v25;
  *(uint64_t *)((char *)v63 + v62[8]) = v45;
  *((unsigned char *)v63 + v62[9]) = v46;
  *(uint64_t *)((char *)v63 + v62[10]) = (uint64_t)v59;
  *(uint64_t *)((char *)v63 + v62[11]) = (uint64_t)v61;
  uint64_t v78 = (void (*)(char *, uint64_t, uint64_t))v61;
  id v66 = v60;
  id v67 = v65;
  uint64_t v68 = (uint64_t)v83;
  sub_20A4D0E30(v67, v45, v59, v61);

  ((void (*)(char *, uint64_t))v81)(v64, v84);
  sub_20A602C88(v68, (uint64_t)v63 + v62[12], MEMORY[0x263F58A68]);
  uint64_t v69 = v87[13];
  uint64_t v70 = v87[14];
  __swift_project_boxed_opaque_existential_1(v87 + 10, v69);
  sub_20A6257AC(v63, v69, v70);
}

void *sub_20A601EB0()
{
  if (sub_20A601254()) {
    return 0;
  }
  uint64_t v1 = sub_20A8C3FD0();
  if (!v2)
  {
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
    uint64_t v12 = (void *)sub_20A8CF1A0();
    sub_20A8CE9E0();
    sub_20A602CF0(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_20A8D3DC0;
    uint64_t v14 = sub_20A8C3F90();
    uint64_t v16 = v15;
    *(void *)(v13 + 56) = MEMORY[0x263F8D310];
    *(void *)(v13 + 64) = sub_20A43F830();
    *(void *)(v13 + 32) = v14;
    *(void *)(v13 + 40) = v16;
    sub_20A8C7D90();

    goto LABEL_9;
  }
  uint64_t v3 = v1;
  uint64_t v4 = v2;
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 24), *(void *)(v0 + 48));
  uint64_t v5 = (void *)sub_20A8CD980();
  id v6 = objc_msgSend(v5, sel_audioUpsellConfigurationsByID);

  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_20A42CFF0(0, &qword_26763C9D0);
  uint64_t v7 = sub_20A8CE180();

  if (!*(void *)(v7 + 16) || (unint64_t v8 = sub_20A4D1B24(v3, v4), (v9 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  long long v10 = *(void **)(*(void *)(v7 + 56) + 8 * v8);
  id v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

void sub_20A6020B4(void *a1)
{
  if (sub_20A601254())
  {
    if ((objc_msgSend(a1, sel_respondsToSelector_, sel_narrativeTrack) & 1) == 0
      || !objc_msgSend(a1, sel_narrativeTrack))
    {
      if (objc_msgSend(a1, sel_respondsToSelector_, sel_narrativeTrackSample))
      {
        id v2 = objc_msgSend(a1, sel_narrativeTrackSample);
        if (v2)
        {
          uint64_t v3 = v2;
          sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
          uint64_t v4 = (void *)sub_20A8CF1A0();
          sub_20A8CE9E0();
          sub_20A602CF0(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
          uint64_t v5 = swift_allocObject();
          *(_OWORD *)(v5 + 16) = xmmword_20A8D4540;
          sub_20A8CF4E0();
          *(void *)(v5 + 56) = MEMORY[0x263F8D310];
          *(void *)(v5 + 64) = sub_20A43F830();
          *(void *)(v5 + 32) = 0;
          *(void *)(v5 + 40) = 0xE000000000000000;
          *(void *)(v5 + 96) = sub_20A42CFF0(0, (unint64_t *)&qword_26763C9C0);
          *(void *)(v5 + 104) = sub_20A602F64();
          *(void *)(v5 + 72) = v3;
          id v6 = v3;
          sub_20A8C7D90();

          swift_bridgeObjectRelease();
          sub_20A602F10();
          swift_allocError();
          *uint64_t v7 = 1;
LABEL_12:
          swift_willThrow();

          return;
        }
      }
LABEL_13:
      sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
      uint64_t v13 = (void *)sub_20A8CF1A0();
      sub_20A8CE9E0();
      sub_20A602CF0(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_20A8D3DC0;
      sub_20A4549BC();
      sub_20A8CF4E0();
      *(void *)(v14 + 56) = MEMORY[0x263F8D310];
      *(void *)(v14 + 64) = sub_20A43F830();
      *(void *)(v14 + 32) = 0;
      *(void *)(v14 + 40) = 0xE000000000000000;
      sub_20A8C7D90();

      swift_bridgeObjectRelease();
      sub_20A602F10();
      swift_allocError();
      *uint64_t v15 = 0;
      swift_willThrow();
    }
  }
  else if ((objc_msgSend(a1, sel_respondsToSelector_, sel_narrativeTrackSample) & 1) == 0 {
         || !objc_msgSend(a1, sel_narrativeTrackSample))
  }
  {
    if (objc_msgSend(a1, sel_respondsToSelector_, sel_narrativeTrack))
    {
      id v8 = objc_msgSend(a1, sel_narrativeTrack);
      if (v8)
      {
        char v9 = v8;
        sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
        long long v10 = (void *)sub_20A8CF1A0();
        sub_20A8CE9E0();
        sub_20A602CF0(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
        uint64_t v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_20A8D4540;
        sub_20A8CF4E0();
        *(void *)(v11 + 56) = MEMORY[0x263F8D310];
        *(void *)(v11 + 64) = sub_20A43F830();
        *(void *)(v11 + 32) = 0;
        *(void *)(v11 + 40) = 0xE000000000000000;
        *(void *)(v11 + 96) = sub_20A42CFF0(0, (unint64_t *)&qword_26763C9C0);
        *(void *)(v11 + 104) = sub_20A602F64();
        *(void *)(v11 + 72) = v9;
        id v6 = v9;
        sub_20A8C7D90();

        swift_bridgeObjectRelease();
        sub_20A602F10();
        swift_allocError();
        *uint64_t v12 = 2;
        goto LABEL_12;
      }
    }
    goto LABEL_13;
  }
}

id sub_20A6025DC(uint64_t a1, void *a2)
{
  sub_20A602CF0(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v29 - v5;
  uint64_t v7 = sub_20A8C2530();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  long long v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v29 - v12;
  id v14 = 0;
  if ((sub_20A601254() & 1) == 0 && a2)
  {
    id v15 = a2;
    id v16 = [v15 URL];
    id v30 = v15;
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v29 = v2;
      sub_20A8C24E0();

      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v18(v6, v10, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
      {
        v18(v13, v6, v7);
        uint64_t v33 = 0;
        unint64_t v34 = 0xE000000000000000;
        sub_20A8CF3C0();
        uint64_t v19 = sub_20A8C3F90();
        unint64_t v21 = v20;
        swift_bridgeObjectRelease();
        uint64_t v33 = v19;
        unint64_t v34 = v21;
        sub_20A8CE3D0();
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
        unint64_t v22 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
        uint64_t v23 = swift_allocObject();
        v18((char *)(v23 + v22), v10, v7);
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = sub_20A602DE4;
        *(void *)(v24 + 24) = v23;
        uint64_t v31 = sub_20A602E80;
        uint64_t v32 = v24;
        sub_20A602EA8();
        sub_20A8CE2F0();
        sub_20A8CE3D0();
        swift_bridgeObjectRelease();
        uint64_t v25 = *(void **)(v29 + 72);
        uint64_t v26 = (void *)sub_20A8CE240();
        swift_bridgeObjectRelease();
        char v27 = (void *)sub_20A8C24D0();
        id v14 = objc_msgSend(v25, sel_assetWithIdentifier_remoteURL_overrideMIMEType_, v26, v27, 0);

        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
        return v14;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    }

    sub_20A596854((uint64_t)v6);
    return 0;
  }
  return v14;
}

uint64_t sub_20A6029C8()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudioTrackFactory()
{
  return self;
}

void sub_20A602A44(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

unint64_t sub_20A602A68()
{
  unint64_t result = qword_26763C998;
  if (!qword_26763C998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C998);
  }
  return result;
}

void sub_20A602ABC(void *a1)
{
  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_narrativeTrack) & 1) != 0
    && (id v2 = objc_msgSend(a1, sel_narrativeTrack)) != 0)
  {
    uint64_t v3 = v2;
    objc_msgSend(v2, sel_duration);
  }
  else
  {
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
    uint64_t v4 = (void *)sub_20A8CF1A0();
    sub_20A8CE9E0();
    sub_20A602CF0(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_20A8D3DC0;
    sub_20A4549BC();
    sub_20A8CF4E0();
    *(void *)(v5 + 56) = MEMORY[0x263F8D310];
    *(void *)(v5 + 64) = sub_20A43F830();
    *(void *)(v5 + 32) = 0;
    *(void *)(v5 + 40) = 0xE000000000000000;
    sub_20A8C7D90();

    swift_bridgeObjectRelease();
    sub_20A602F10();
    swift_allocError();
    *id v6 = 1;
    swift_willThrow();
  }
}

uint64_t sub_20A602C88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_20A602CF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A602D54()
{
  uint64_t v1 = sub_20A8C2530();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_20A602DE4()
{
  return sub_20A8C24F0();
}

uint64_t sub_20A602E48()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A602E80()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_20A602EA8()
{
  unint64_t result = qword_26763C9A8;
  if (!qword_26763C9A8)
  {
    unint64_t result = swift_getFunctionTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26763C9A8);
  }
  return result;
}

unint64_t sub_20A602F10()
{
  unint64_t result = qword_26763C9B8;
  if (!qword_26763C9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C9B8);
  }
  return result;
}

unint64_t sub_20A602F64()
{
  unint64_t result = qword_26763C9C8;
  if (!qword_26763C9C8)
  {
    sub_20A42CFF0(255, (unint64_t *)&qword_26763C9C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C9C8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AudioTrackFactory.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A603098);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioTrackFactory.Errors()
{
  return &type metadata for AudioTrackFactory.Errors;
}

unsigned char *storeEnumTagSinglePayload for DisabledAudioTrackFactory.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A60316CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DisabledAudioTrackFactory.Errors()
{
  return &type metadata for DisabledAudioTrackFactory.Errors;
}

unint64_t sub_20A6031A8()
{
  unint64_t result = qword_26763C9D8;
  if (!qword_26763C9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C9D8);
  }
  return result;
}

unint64_t sub_20A603200()
{
  unint64_t result = qword_26763C9E0;
  if (!qword_26763C9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C9E0);
  }
  return result;
}

uint64_t sub_20A603254(uint64_t a1, void *a2, double a3)
{
  uint64_t v96 = (char *)a1;
  uint64_t v6 = type metadata accessor for StockChartDescriptor();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v106 = v6 - 8;
  uint64_t v90 = v7;
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v91 = v8;
  uint64_t v94 = (uint64_t)v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_20A8C2800();
  unint64_t v103 = *(void (***)(char *, uint64_t))(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v99 = (char *)v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A606510(0, &qword_26AC7F518, MEMORY[0x263F7CB58], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v87 - v11;
  uint64_t v101 = sub_20A8CDDA0();
  uint64_t v102 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  uint64_t v92 = (char *)v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  unint64_t v93 = (char *)v87 - v15;
  MEMORY[0x270FA5388](v16);
  int v110 = (char *)v87 - v17;
  MEMORY[0x270FA5388](v18);
  unint64_t v107 = (unint64_t)v87 - v19;
  uint64_t v88 = v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v98 = (char *)v87 - v22;
  uint64_t v109 = sub_20A8C3CA0();
  uint64_t v108 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  uint64_t v24 = (char *)v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = v3;
  swift_beginAccess();
  sub_20A4342F4(v3 + 16, (uint64_t)&v114);
  uint64_t v25 = v115;
  uint64_t v26 = v116;
  __swift_project_boxed_opaque_existential_1(&v114, v115);
  uint64_t v27 = *(void *)(v26 + 8);
  uint64_t v28 = *(void (**)(void *, uint64_t, uint64_t))(v27 + 8);
  uint64_t v112 = v25;
  uint64_t v113 = v26;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v111);
  id v89 = a2;
  v28(a2, v25, v27);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3 + 16);
  sub_20A42BEBC(&v111, v3 + 16);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v114);
  uint64_t v29 = *(void *)&v96[*(int *)(v106 + 28)];
  uint64_t v30 = *(void *)(v29 + 16);
  if (v30)
  {
    uint64_t v31 = v108 + 16;
    unint64_t v106 = *(void *)(v108 + 16);
    uint64_t v32 = v29 + ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80));
    uint64_t v105 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v102 + 56);
    uint64_t v104 = *(void *)(v108 + 72);
    uint64_t v97 = v103 + 1;
    unint64_t v103 = (void (**)(char *, uint64_t))(v108 + 8);
    uint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v102 + 48);
    unint64_t v34 = (void (**)(char *, char *, uint64_t))(v102 + 32);
    v87[1] = v29;
    swift_bridgeObjectRetain();
    unint64_t v35 = MEMORY[0x263F8EE78];
    uint64_t v36 = v101;
    uint64_t v108 = v31;
    do
    {
      ((void (*)(char *, uint64_t, uint64_t))v106)(v24, v32, v109);
      sub_20A8C3C80();
      if (v37)
      {
        uint64_t v39 = 1;
      }
      else
      {
        id v38 = v99;
        sub_20A8C3C60();
        sub_20A8C2790();
        (*v97)(v38, v100);
        sub_20A8CE760();
        sub_20A8CDD80();
        uint64_t v39 = 0;
      }
      (*v105)(v12, v39, 1, v36);
      (*v103)(v24, v109);
      int v40 = (*v33)(v12, 1, v36);
      uint64_t v41 = v110;
      if (v40 == 1)
      {
        sub_20A6055AC((uint64_t)v12);
      }
      else
      {
        id v42 = *v34;
        id v43 = v98;
        (*v34)(v98, v12, v36);
        v42((char *)v107, v43, v36);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v44 = v35;
        }
        else {
          unint64_t v44 = sub_20A46DA58(0, *(void *)(v35 + 16) + 1, 1, v35);
        }
        unint64_t v46 = *(void *)(v44 + 16);
        unint64_t v45 = *(void *)(v44 + 24);
        if (v46 >= v45 >> 1) {
          unint64_t v44 = sub_20A46DA58(v45 > 1, v46 + 1, 1, v44);
        }
        *(void *)(v44 + 16) = v46 + 1;
        unint64_t v35 = v44;
        unint64_t v47 = v44
            + ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80))
            + *(void *)(v102 + 72) * v46;
        uint64_t v36 = v101;
        v42((char *)v47, (char *)v107, v101);
        uint64_t v41 = v110;
      }
      v32 += v104;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
    unint64_t v48 = v35;
  }
  else
  {
    unint64_t v48 = MEMORY[0x263F8EE78];
    uint64_t v36 = v101;
    uint64_t v41 = v110;
  }
  unint64_t v49 = *(void *)(v48 + 16);
  if (v49 < 2)
  {
    swift_bridgeObjectRelease();
    sub_20A43F884();
    unint64_t v50 = (void *)sub_20A8CF180();
    sub_20A8CEA00();
    sub_20A8C7D90();

    return 0;
  }
  id v52 = *(void (**)(char *, unint64_t, uint64_t))(v102 + 16);
  uint64_t v53 = *(unsigned __int8 *)(v102 + 80);
  unint64_t v107 = ~v53;
  uint64_t v108 = v53;
  unint64_t v54 = v48 + ((v53 + 32) & ~v53);
  uint64_t v55 = *(void *)(v102 + 72);
  id v56 = (void (**)(char *, uint64_t))(v102 + 8);
  uint64_t v109 = v48;
  swift_bridgeObjectRetain();
  double v57 = 0.0;
  double v58 = 1.79769313e308;
  unint64_t v106 = v54;
  unint64_t v59 = v49;
  do
  {
    v52(v41, v54, v36);
    sub_20A8CDD70();
    if (v58 >= v60) {
      double v58 = v60;
    }
    sub_20A8CDD70();
    uint64_t v41 = v110;
    if (v61 > v57) {
      double v57 = v61;
    }
    uint64_t v62 = *v56;
    (*v56)(v110, v36);
    v54 += v55;
    --v59;
  }
  while (v59);
  swift_bridgeObjectRelease();
  double v63 = COERCE_DOUBLE(sub_20A8C3C30());
  if ((v64 & 1) == 0)
  {
    double v65 = v63;
    if (v58 < v63) {
      double v65 = v58;
    }
    double v58 = 0.0;
    if (v65 > 0.0) {
      double v58 = v65;
    }
  }
  *(double *)&uint64_t result = COERCE_DOUBLE(sub_20A8C3C30());
  if (v67)
  {
    uint64_t v68 = v109;
  }
  else
  {
    uint64_t v68 = v109;
    if (v57 < *(double *)&result) {
      double v57 = *(double *)&result;
    }
  }
  if (v49 <= *(void *)(v68 + 16))
  {
    double v69 = (v57 - v58) * 0.02;
    double v70 = v57 + v69;
    double v71 = v58 - v69;
    if (v71 > 0.0) {
      double v72 = v71;
    }
    else {
      double v72 = 0.0;
    }
    unint64_t v73 = v106 + v55 * (v49 - 1);
    id v74 = v93;
    v52(v93, v73, v101);
    uint64_t v75 = (void *)(v95 + 56);
    uint64_t v76 = v95;
    __swift_project_boxed_opaque_existential_1((void *)(v95 + 56), *(void *)(v95 + 80));
    uint64_t v77 = (char *)v89;
    uint64_t v78 = v96;
    int v110 = v77;
    unint64_t v106 = sub_20A4B0384((uint64_t)v96, (uint64_t)v77, v72, v70, a3);
    __swift_project_boxed_opaque_existential_1(v75, *(void *)(v76 + 80));
    uint64_t v105 = (void (**)(char *, uint64_t, uint64_t, uint64_t))sub_20A4B0B9C(v78, (uint64_t)v77, a3);
    sub_20A605638((uint64_t)v78, v94);
    v52(v92, (unint64_t)v74, v101);
    unint64_t v79 = (*(unsigned __int8 *)(v90 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
    unint64_t v80 = (v91 + v108 + v79) & v107;
    unint64_t v81 = (v88 + v80 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v82 = (v81 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v83 = (v82 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v84 = (v83 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v85 = swift_allocObject();
    *(void *)(v85 + 16) = v95;
    sub_20A605894(v94, v85 + v79);
    uint64_t v86 = v101;
    (*(void (**)(unint64_t, char *, uint64_t))(v102 + 32))(v85 + v80, v92, v101);
    *(void *)(v85 + v81) = v109;
    *(void *)(v85 + v82) = v105;
    *(double *)(v85 + v83) = v72;
    *(double *)(v85 + v84) = v70;
    *(void *)(v85 + ((v84 + 15) & 0xFFFFFFFFFFFFFFF8)) = v106;
    sub_20A6069F0();
    swift_allocObject();
    swift_retain();
    uint64_t v51 = sub_20A8CDDC0();

    v62(v93, v86);
    return v51;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A603DA0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X6>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  v29[1] = a2;
  uint64_t v33 = a3;
  uint64_t v8 = sub_20A8C2AF0();
  MEMORY[0x270FA5388](v8 - 8);
  void v29[2] = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29[0] = sub_20A8CE140();
  MEMORY[0x270FA5388](v29[0]);
  sub_20A605BC0();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = sub_20A8CDBC0();
  MEMORY[0x270FA5388](v11);
  sub_20A605C28();
  uint64_t v34 = v12;
  uint64_t v32 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v30 = (char *)v29 - v16;
  uint64_t v31 = a1;
  uint64_t v17 = (void *)sub_20A60612C(a1);
  swift_bridgeObjectRetain();
  uint64_t v18 = swift_bridgeObjectRetain();
  sub_20A605E24(v18, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  MEMORY[0x21051E250](v17, MEMORY[0x263F8D310], MEMORY[0x263F8D338], MEMORY[0x263F7D050]);
  swift_bridgeObjectRetain();
  uint64_t result = sub_20A8CDBB0();
  if (a4 > a5)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = sub_20A8CDFB0();
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_20A8CDFA0();
    uint64_t v36 = v20;
    uint64_t v37 = MEMORY[0x263F7CC28];
    uint64_t v35 = v21;
    sub_20A8CE130();
    uint64_t v22 = v30;
    sub_20A8CDD00();
    uint64_t v23 = v32;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v14, v22, v34);
    sub_20A606510(0, &qword_26AC800A8, (uint64_t (*)(uint64_t))sub_20A606574, MEMORY[0x263F8E0F8]);
    sub_20A606574();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_20A8D3DC0;
    sub_20A8CDDA0();
    uint64_t v24 = (void (*)(uint64_t))MEMORY[0x263F7CB58];
    sub_20A606A84(&qword_26AC7F510, MEMORY[0x263F7CB58]);
    sub_20A606A84(&qword_26AC7F500, v24);
    sub_20A606A84(&qword_26AC7F508, v24);
    sub_20A8CE0B0();
    sub_20A8C3C40();
    sub_20A8CDC30();
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v26 = self;
    id v27 = objc_msgSend(v26, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_20A8C2370();

    sub_20A8CDC40();
    id v28 = objc_msgSend(v26, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_20A8C2370();

    sub_20A8CDC50();
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v22, v34);
  }
  return result;
}

uint64_t sub_20A6043C8(uint64_t a1, char *a2)
{
  uint64_t v101 = a2;
  uint64_t v90 = a1;
  uint64_t v88 = type metadata accessor for StockChartDescriptor();
  uint64_t v83 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v84 = v3;
  uint64_t v85 = (uint64_t)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_20A8C2800();
  uint64_t v87 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  unint64_t v93 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A606510(0, &qword_26AC7F518, MEMORY[0x263F7CB58], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v103 = (char *)&v80 - v6;
  uint64_t v105 = sub_20A8CDDA0();
  uint64_t v97 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  unint64_t v82 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v96 = (char *)&v80 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v102 = (char *)&v80 - v11;
  uint64_t v81 = v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v92 = (char *)&v80 - v14;
  uint64_t v106 = sub_20A8C3CA0();
  uint64_t v104 = *(char **)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  uint64_t v95 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_20A8C3CC0();
  uint64_t v91 = *(void (***)(char *, uint64_t))(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v80 - v20;
  uint64_t v86 = v2;
  swift_beginAccess();
  sub_20A4342F4(v2 + 16, (uint64_t)&v110);
  uint64_t v22 = v111;
  uint64_t v23 = v112;
  __swift_project_boxed_opaque_existential_1(&v110, v111);
  uint64_t v24 = *(void *)(v23 + 8);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 8);
  uint64_t v108 = v22;
  uint64_t v109 = v23;
  uint64_t v26 = v91;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v107);
  v25(v101, v22, v24);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  sub_20A42BEBC(&v107, v2 + 16);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v110);
  uint64_t v27 = sub_20A8C3CE0();
  ((void (*)(char *, void, uint64_t))v26[13])(v21, *MEMORY[0x263F7AEA0], v16);
  uint64_t v100 = *(void (**)(char *, unint64_t, uint64_t))(v27 + 16);
  if (!v100)
  {
    v26[1](v21, v16);
    goto LABEL_27;
  }
  unint64_t v28 = (*((unsigned __int8 *)v26 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v26 + 80);
  uint64_t v89 = v27;
  uint64_t v99 = v26[2];
  ((void (*)(char *, unint64_t, uint64_t))v99)(v18, v27 + v28, v16);
  uint64_t v29 = sub_20A606A84(&qword_26AC68F70, MEMORY[0x263F7AEA8]);
  uint64_t v101 = v21;
  uint64_t v98 = v29;
  char v30 = sub_20A8CE210();
  uint64_t v31 = v26[1];
  v31(v18, v16);
  uint64_t v32 = v105;
  if ((v30 & 1) == 0)
  {
    if (v100 == (void (*)(char *, unint64_t, uint64_t))1)
    {
      uint64_t v53 = v101;
LABEL_26:
      v31(v53, v16);
      goto LABEL_27;
    }
    uint64_t v80 = (unint64_t)(v26 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v91 = (void (**)(char *, uint64_t))v26[9];
    unint64_t v56 = (unint64_t)v91 + v89 + v28;
    uint64_t v57 = 1;
    while (1)
    {
      uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v99)(v18, v56, v16);
      unint64_t v59 = (void (*)(char *, unint64_t, uint64_t))(v57 + 1);
      if (__OFADD__(v57, 1)) {
        break;
      }
      char v60 = sub_20A8CE210();
      v31(v18, v16);
      if (v60) {
        goto LABEL_3;
      }
      ++v57;
      v56 += (unint64_t)v91;
      if (v59 == v100)
      {
        uint64_t v53 = v101;
        goto LABEL_26;
      }
    }
    __break(1u);
    goto LABEL_38;
  }
LABEL_3:
  v31(v101, v16);
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void *)(v90 + *(int *)(v88 + 20));
  uint64_t v34 = *(void *)(v33 + 16);
  if (!v34)
  {
    unint64_t v54 = (char *)MEMORY[0x263F8EE78];
    uint64_t v39 = v96;
    unint64_t v55 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (v55) {
      goto LABEL_29;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v100 = (void (*)(char *, unint64_t, uint64_t))*((void *)v104 + 2);
  unint64_t v35 = v33 + ((v104[80] + 32) & ~(unint64_t)v104[80]);
  uint64_t v99 = (void (*)(char *, uint64_t))(v97 + 56);
  uint64_t v98 = *((void *)v104 + 9);
  uint64_t v91 = (void (**)(char *, uint64_t))(v87 + 8);
  v104 += 16;
  uint64_t v36 = (void (**)(char *, uint64_t))(v104 - 8);
  uint64_t v37 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48);
  id v38 = (void (**)(char *, uint64_t, uint64_t))(v97 + 32);
  uint64_t v89 = v33;
  swift_bridgeObjectRetain();
  uint64_t v101 = (char *)MEMORY[0x263F8EE78];
  uint64_t v39 = v96;
  uint64_t v40 = (uint64_t)v103;
  uint64_t v41 = v95;
  uint64_t v42 = v105;
  do
  {
    v100(v41, v35, v106);
    sub_20A8C3C90();
    if (v43)
    {
      uint64_t v46 = 1;
    }
    else
    {
      unint64_t v44 = v93;
      sub_20A8C3C60();
      sub_20A8C2790();
      unint64_t v45 = v44;
      uint64_t v40 = (uint64_t)v103;
      (*v91)(v45, v94);
      sub_20A8CE760();
      sub_20A8CDD80();
      uint64_t v46 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v99)(v40, v46, 1, v42);
    (*v36)(v41, v106);
    if ((*v37)(v40, 1, v42) == 1)
    {
      sub_20A6055AC(v40);
    }
    else
    {
      unint64_t v47 = *v38;
      unint64_t v48 = v92;
      (*v38)(v92, v40, v42);
      v47(v102, (uint64_t)v48, v42);
      unint64_t v49 = (unint64_t)v101;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v49 = sub_20A46DA58(0, *(void *)(v49 + 16) + 1, 1, v49);
      }
      unint64_t v51 = *(void *)(v49 + 16);
      unint64_t v50 = *(void *)(v49 + 24);
      if (v51 >= v50 >> 1) {
        unint64_t v49 = sub_20A46DA58(v50 > 1, v51 + 1, 1, v49);
      }
      *(void *)(v49 + 16) = v51 + 1;
      unint64_t v52 = (*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
      uint64_t v101 = (char *)v49;
      v47((char *)(v49 + v52 + *(void *)(v97 + 72) * v51), (uint64_t)v102, v42);
      uint64_t v39 = v96;
      uint64_t v40 = (uint64_t)v103;
      uint64_t v41 = v95;
    }
    v35 += v98;
    --v34;
  }
  while (v34);
  swift_bridgeObjectRelease();
  uint64_t v32 = v105;
  unint64_t v54 = v101;
  unint64_t v55 = *((void *)v101 + 2);
  if (!v55) {
    goto LABEL_27;
  }
LABEL_29:
  double v61 = *(void (**)(char *, char *, uint64_t))(v97 + 16);
  uint64_t v62 = *(unsigned __int8 *)(v97 + 80);
  uint64_t v105 = ~v62;
  uint64_t v106 = v62;
  double v63 = &v54[(v62 + 32) & ~v62];
  uint64_t v64 = *(void *)(v97 + 72);
  double v65 = (void (**)(char *, uint64_t))(v97 + 8);
  uint64_t v101 = v54;
  swift_bridgeObjectRetain();
  double v66 = 0.0;
  double v67 = 1.79769313e308;
  uint64_t v104 = v63;
  unint64_t v68 = v55;
  do
  {
    v61(v39, v63, v32);
    sub_20A8CDD70();
    if (v67 >= v69) {
      double v67 = v69;
    }
    sub_20A8CDD70();
    if (v70 > v66) {
      double v66 = v70;
    }
    (*v65)(v39, v32);
    v63 += v64;
    --v68;
  }
  while (v68);
  double v71 = v101;
  uint64_t result = swift_bridgeObjectRelease();
  if (v55 <= *((void *)v71 + 2))
  {
    double v72 = &v104[v64 * (v55 - 1)];
    uint64_t v73 = v85;
    sub_20A605638(v90, v85);
    id v74 = v82;
    v61(v82, v72, v32);
    unint64_t v75 = (*(unsigned __int8 *)(v83 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
    unint64_t v76 = (v84 + v106 + v75) & v105;
    unint64_t v77 = (v81 + v76 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v78 = swift_allocObject();
    *(void *)(v78 + 16) = v86;
    sub_20A605894(v73, v78 + v75);
    (*(void (**)(unint64_t, char *, uint64_t))(v97 + 32))(v78 + v76, v74, v32);
    *(void *)(v78 + v77) = v71;
    unint64_t v79 = v78 + ((v77 + 15) & 0xFFFFFFFFFFFFFFF8);
    *(_OWORD *)unint64_t v79 = xmmword_20A8E3870;
    *(double *)(v79 + 16) = v67;
    *(double *)(v79 + 24) = v66;
    sub_20A605A20();
    swift_allocObject();
    swift_retain();
    return sub_20A8CDDC0();
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_20A604FF0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>, double a3@<D2>, double a4@<D3>)
{
  v21[3] = a2;
  uint64_t v7 = sub_20A8CDC00();
  MEMORY[0x270FA5388](v7 - 8);
  v21[2] = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8CDE30();
  MEMORY[0x270FA5388](v9 - 8);
  v21[1] = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8CE140();
  MEMORY[0x270FA5388](v11);
  sub_20A605BC0();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v13 = sub_20A8CDBC0();
  MEMORY[0x270FA5388](v13);
  sub_20A605C28();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v15 = (void *)sub_20A60612C(a1);
  swift_bridgeObjectRetain();
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_20A605E24(v16, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  MEMORY[0x21051E250](v15, MEMORY[0x263F8D310], MEMORY[0x263F8D338], MEMORY[0x263F7D050]);
  uint64_t result = sub_20A8CDBB0();
  if (a3 > a4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v18 = sub_20A8CDFB0();
    swift_allocObject();
    uint64_t v19 = sub_20A8CDFA0();
    v21[7] = v18;
    v21[8] = MEMORY[0x263F7CC28];
    v21[4] = v19;
    sub_20A8CE130();
    sub_20A8CDD00();
    sub_20A606510(0, &qword_26AC800A8, (uint64_t (*)(uint64_t))sub_20A606574, MEMORY[0x263F8E0F8]);
    sub_20A606574();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_20A8D3DC0;
    sub_20A8CDDA0();
    uint64_t v20 = (void (*)(uint64_t))MEMORY[0x263F7CB58];
    sub_20A606A84(&qword_26AC7F510, MEMORY[0x263F7CB58]);
    sub_20A606A84(&qword_26AC7F500, v20);
    sub_20A606A84(&qword_26AC7F508, v20);
    sub_20A8CE0B0();
    sub_20A8CDBF0();
    sub_20A8CDE20();
    return sub_20A8CDD30();
  }
  return result;
}

uint64_t type metadata accessor for StockChartModelFactoryProvider()
{
  return self;
}

void *initializeBufferWithCopyOfBuffer for StockChartModelFactoryProviderOptions(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for StockChartModelFactoryProviderOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for StockChartModelFactoryProviderOptions(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for StockChartModelFactoryProviderOptions()
{
  return &type metadata for StockChartModelFactoryProviderOptions;
}

uint64_t sub_20A6055AC(uint64_t a1)
{
  sub_20A606510(0, &qword_26AC7F518, MEMORY[0x263F7CB58], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A605638(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockChartDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A60569C()
{
  uint64_t v1 = (int *)(type metadata accessor for StockChartDescriptor() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = sub_20A8CDDA0();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_release();
  uint64_t v7 = v0 + v2;
  uint64_t v8 = sub_20A8C3D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = v7 + v1[8];
  uint64_t v10 = sub_20A8C2BC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A605894(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockChartDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A6058F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for StockChartDescriptor() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_20A8CDDA0() - 8);
  unint64_t v7 = (((*(void *)(v6 + 64)
        + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  double v8 = *(double *)(v1 + v7 + 16);
  double v9 = *(double *)(v1 + v7 + 24);

  return sub_20A604FF0(v1 + v4, a1, v8, v9);
}

void sub_20A605A20()
{
  if (!qword_26AC7F538)
  {
    sub_20A8CDD40();
    sub_20A606A84(&qword_26AC7F4F8, MEMORY[0x263F7CB48]);
    unint64_t v0 = sub_20A8CDDB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7F538);
    }
  }
}

uint64_t sub_20A605AB4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (!a4)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v11 = result;
  if (result)
  {
    if (result != 0x8000000000000000 || a4 != -1)
    {
      BOOL v12 = *(void *)(*(void *)a5 + 16) - 1 == result;
      goto LABEL_7;
    }
LABEL_16:
    __break(1u);
    return result;
  }
  BOOL v12 = 1;
LABEL_7:
  if (sub_20A8CDD90() == a2 && v13 == a3) {
    int v14 = 1;
  }
  else {
    int v14 = sub_20A8CF760();
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = type metadata accessor for StockChartDescriptor();
  int v16 = sub_20A597330(a2, a3, *(void **)(a7 + *(int *)(v15 + 32)));
  if (v11 % a4) {
    int v17 = 1;
  }
  else {
    int v17 = v12;
  }
  return (v17 | v14 | v16) & 1;
}

void sub_20A605BC0()
{
  if (!qword_26AC69778)
  {
    unint64_t v0 = sub_20A8C5F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69778);
    }
  }
}

void sub_20A605C28()
{
  if (!qword_26AC7F4F0)
  {
    sub_20A8CDBC0();
    sub_20A8CE140();
    unint64_t v0 = sub_20A8CDD20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7F4F0);
    }
  }
}

uint64_t sub_20A605CAC(uint64_t result, uint64_t (*a2)(unint64_t, uint64_t, uint64_t))
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 40;
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v15 = result + 40;
  do
  {
    if (v4 <= v2) {
      unint64_t v7 = v2;
    }
    else {
      unint64_t v7 = v4;
    }
    double v8 = (uint64_t *)(v5 + 16 * v4);
    for (unint64_t i = v4; ; ++i)
    {
      if (v7 == i)
      {
        __break(1u);
        return result;
      }
      uint64_t v11 = *(v8 - 1);
      uint64_t v10 = *v8;
      unint64_t v4 = i + 1;
      swift_bridgeObjectRetain();
      if (a2(i, v11, v10)) {
        break;
      }
      uint64_t result = swift_bridgeObjectRelease();
      v8 += 2;
      if (v2 == v4) {
        return v6;
      }
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0) {
      uint64_t result = sub_20A68CAD4(0, *(void *)(v6 + 16) + 1, 1);
    }
    unint64_t v13 = *(void *)(v6 + 16);
    unint64_t v12 = *(void *)(v6 + 24);
    if (v13 >= v12 >> 1) {
      uint64_t result = sub_20A68CAD4(v12 > 1, v13 + 1, 1);
    }
    *(void *)(v6 + 16) = v13 + 1;
    int v14 = (void *)(v6 + 24 * v13);
    v14[4] = i;
    void v14[5] = v11;
    void v14[6] = v10;
    uint64_t v5 = v15;
  }
  while (v2 - 1 != i);
  return v6;
}

uint64_t sub_20A605E24(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_20A8CDDA0();
  MEMORY[0x270FA5388](v5);
  uint64_t v42 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9.n128_f64[0] = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v45 = MEMORY[0x263F8EE78];
  uint64_t v40 = *(void *)(a1 + 16);
  if (!v40) {
    return result;
  }
  uint64_t v33 = v2;
  uint64_t v13 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
  uint64_t v14 = v8 + 16;
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64);
  uint64_t v17 = *(void *)(v14 + 56);
  char v43 = a2;
  uint64_t v44 = v17;
  unint64_t v36 = v16;
  uint64_t v37 = v14;
  uint64_t v38 = a1 + v16;
  uint64_t v39 = v15;
  uint64_t v41 = (void (**)(char *, char *, uint64_t))(v14 + 16);
  uint64_t v34 = a2 + 7;
  unint64_t v35 = (void (**)(char *, uint64_t))(v14 - 8);
  while (1)
  {
    uint64_t v18 = v5;
    v39(v11, v38 + v44 * v13, v5, v9);
    uint64_t v19 = sub_20A8CDD90();
    uint64_t v21 = v20;
    uint64_t v22 = a2[2];
    if (v22)
    {
      uint64_t v23 = v19;
      BOOL v24 = a2[4] == v19 && a2[5] == v20;
      if (v24 || (uint64_t result = sub_20A8CF760(), (result & 1) != 0))
      {
LABEL_11:
        swift_bridgeObjectRelease();
        uint64_t v25 = *v41;
        uint64_t v5 = v18;
        (*v41)(v42, v11, v18);
        uint64_t v26 = v45;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_20A68CAF4(0, *(void *)(v26 + 16) + 1, 1);
          uint64_t v26 = v45;
        }
        unint64_t v28 = *(void *)(v26 + 16);
        unint64_t v27 = *(void *)(v26 + 24);
        if (v28 >= v27 >> 1)
        {
          sub_20A68CAF4(v27 > 1, v28 + 1, 1);
          uint64_t v26 = v45;
        }
        *(void *)(v26 + 16) = v28 + 1;
        v25((char *)(v26 + v36 + v28 * v44), v42, v18);
        uint64_t v45 = v26;
        a2 = v43;
        goto LABEL_4;
      }
      a2 = v43;
      if (v22 != 1) {
        break;
      }
    }
LABEL_3:
    swift_bridgeObjectRelease();
    uint64_t v5 = v18;
    (*v35)(v11, v18);
LABEL_4:
    if (++v13 == v40) {
      return v45;
    }
  }
  uint64_t v29 = v34;
  uint64_t v30 = 1;
  while (1)
  {
    uint64_t v31 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (*(v29 - 1) == v23 && *v29 == v21) {
      goto LABEL_11;
    }
    uint64_t result = sub_20A8CF760();
    if (result) {
      goto LABEL_11;
    }
    v29 += 2;
    ++v30;
    BOOL v24 = v31 == v22;
    a2 = v43;
    if (v24) {
      goto LABEL_3;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_20A60612C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockChartDescriptor();
  uint64_t v3 = *(void *)(a1 + *(int *)(v2 + 28));
  uint64_t v28 = v3;
  swift_bridgeObjectRetain();
  uint64_t result = sub_20A8CDE10();
  double v6 = v5 / 3.0;
  if ((~*(void *)&v6 & 0x7FF0000000000000) == 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v6 >= 9.22337204e18)
  {
LABEL_33:
    __break(1u);
    return result;
  }
  uint64_t v7 = (uint64_t)v6;
  uint64_t v8 = *(void *)(v3 + 16);
  if (v8 > (uint64_t)v6)
  {
    uint64_t v25 = a1;
    uint64_t v26 = *(int *)(v2 + 32);
    uint64_t v24 = (uint64_t)v6;
    while (1)
    {
      unint64_t v9 = *(void *)(*(void *)(a1 + v26) + 16);
      if (v9 > 3)
      {
        if (v9 >= v8) {
          goto LABEL_24;
        }
      }
      else if ((unint64_t)v8 <= 4)
      {
        goto LABEL_24;
      }
      if (__OFSUB__(v8, v7)) {
        break;
      }
      float v10 = floorf((float)v8 / (float)(v8 - v7));
      if ((~LODWORD(v10) & 0x7F800000) == 0) {
        goto LABEL_27;
      }
      if (v10 <= -9.2234e18) {
        goto LABEL_28;
      }
      if (v10 >= 9.2234e18) {
        goto LABEL_29;
      }
      if (__OFADD__((uint64_t)v10, 1)) {
        goto LABEL_30;
      }
      MEMORY[0x270FA5388](result);
      uint64_t v11 = swift_bridgeObjectRetain();
      uint64_t v12 = sub_20A605CAC(v11, (uint64_t (*)(unint64_t, uint64_t, uint64_t))sub_20A606678);
      swift_bridgeObjectRelease();
      int64_t v13 = *(void *)(v12 + 16);
      if (v13)
      {
        uint64_t v27 = MEMORY[0x263F8EE78];
        sub_20A68C494(0, v13, 0);
        uint64_t v14 = (uint64_t *)(v12 + 48);
        do
        {
          uint64_t v15 = *(v14 - 1);
          uint64_t v16 = *v14;
          unint64_t v18 = *(void *)(v27 + 16);
          unint64_t v17 = *(void *)(v27 + 24);
          swift_bridgeObjectRetain();
          if (v18 >= v17 >> 1) {
            sub_20A68C494(v17 > 1, v18 + 1, 1);
          }
          *(void *)(v27 + 16) = v18 + 1;
          uint64_t v19 = v27 + 16 * v18;
          *(void *)(v19 + 32) = v15;
          *(void *)(v19 + 40) = v16;
          v14 += 3;
          --v13;
        }
        while (v13);
        swift_bridgeObjectRelease();
        uint64_t v7 = v24;
        a1 = v25;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_20A4B9D5C();
      sub_20A606A84((unint64_t *)&qword_26AC7F820, (void (*)(uint64_t))sub_20A4B9D5C);
      uint64_t v20 = sub_20A8CE4C0();
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void *)(v20 + 16);
      uint64_t v22 = *(void *)(v28 + 16);
      uint64_t result = swift_bridgeObjectRelease();
      if (v21 == v22) {
        return v20;
      }
      uint64_t v28 = v20;
      uint64_t v8 = *(void *)(v20 + 16);
      if (v8 <= v7) {
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
LABEL_24:
  sub_20A4B9D5C();
  sub_20A606A84((unint64_t *)&qword_26AC7F820, (void (*)(uint64_t))sub_20A4B9D5C);
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_20A8CE4C0();
  swift_bridgeObjectRelease_n();
  return v23;
}

void sub_20A606510(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A606574()
{
  if (!qword_26AC7F5F8)
  {
    sub_20A8CDDA0();
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F7CB58];
    sub_20A606A84(&qword_26AC7F510, MEMORY[0x263F7CB58]);
    sub_20A606A84(&qword_26AC7F500, v0);
    sub_20A606A84(&qword_26AC7F508, v0);
    unint64_t v1 = sub_20A8CE0A0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AC7F5F8);
    }
  }
}

uint64_t sub_20A606678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A605AB4(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_20A606684()
{
  unint64_t v1 = (int *)(type metadata accessor for StockChartDescriptor() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = sub_20A8CDDA0();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_release();
  uint64_t v7 = v0 + v2;
  uint64_t v8 = sub_20A8C3D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = v7 + v1[8];
  uint64_t v10 = sub_20A8C2BC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A6068AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for StockChartDescriptor() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_20A8CDDA0() - 8);
  unint64_t v7 = (((((*(void *)(v6 + 64)
          + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
          + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  double v9 = *(double *)(v1 + v7);
  double v10 = *(double *)(v1 + v8);
  uint64_t v11 = *(void *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_20A603DA0(v1 + v4, v11, a1, v9, v10);
}

void sub_20A6069F0()
{
  if (!qword_26AC7F528)
  {
    sub_20A8CDC70();
    sub_20A606A84(&qword_26AC7F4D0, MEMORY[0x263F7CB18]);
    unint64_t v0 = sub_20A8CDDB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7F528);
    }
  }
}

uint64_t sub_20A606A84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for StockChartModelFactoryProvider.Axis()
{
  return &type metadata for StockChartModelFactoryProvider.Axis;
}

uint64_t sub_20A606ADC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_20A50CC90(a1, a2);
}

uint64_t sub_20A606AF8(uint64_t a1)
{
  return sub_20A6071B0(a1, 0xD000000000000024, 0x800000020A905C10, &qword_26763C9F0);
}

uint64_t static Settings.ForYou.Ticker.tapToDismiss.getter()
{
  return sub_20A454F34(&qword_267639B40);
}

uint64_t sub_20A606B40()
{
  uint64_t v0 = sub_20A8C4270();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C4260();
  double v5 = MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, void, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F7D108], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D110], v0);
  v9[0] = 0xD00000000000003ELL;
  v9[1] = 0x800000020A905BD0;
  sub_20A57E3F0(0, &qword_26AC692F0);
  swift_allocObject();
  uint64_t result = sub_20A8C42E0();
  qword_26763C9F8 = result;
  return result;
}

uint64_t static Settings.ForYou.ConfigOverrides.url.getter()
{
  if (qword_267639B48 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t Settings.ForYou.ConfigOverrides.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_20A8C4260();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a4, v5);
  uint64_t v9 = sub_20A8C41F0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t Settings.ForYou.ConfigOverrides.init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_20A8C4260();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v5, v7);
  uint64_t v9 = sub_20A8C41F0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t Settings.ForYou.ConfigOverrides.__deallocating_deinit()
{
  _s11TeaSettings0B0C8StocksUIE4TipsV8EarningsV15ConfigOverridesCfd_0();

  return swift_deallocClassInstance();
}

uint64_t sub_20A606FF4()
{
  uint64_t v0 = sub_20A8C4260();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v5 = MEMORY[0x270FA5388](v4);
  double v7 = (char *)&v10 - v6;
  (*(void (**)(char *, void, uint64_t, double))(v1 + 104))((char *)&v10 - v6, *MEMORY[0x263F7D108], v0, v5);
  type metadata accessor for Settings.ForYou.ConfigOverrides();
  swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v7, v0);
  uint64_t v8 = sub_20A8C41F0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v7, v0);
  qword_26AC69150 = v8;
  return result;
}

uint64_t static Settings.ForYou.configOverrides.getter()
{
  return sub_20A454F34(&qword_26AC69160);
}

uint64_t sub_20A60718C(uint64_t a1)
{
  return sub_20A6071B0(a1, 0xD000000000000022, 0x800000020A905B40, &qword_26AC69168);
}

uint64_t sub_20A6071B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = sub_20A8C4260();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_20A8C4270();
  double v10 = MEMORY[0x270FA5388](v9);
  (*(void (**)(unsigned char *, void, double))(v12 + 104))(&v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F7D110], v10);
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F7D100], v5);
  v14[15] = 1;
  sub_20A57E3F0(0, (unint64_t *)&qword_26AC692F8);
  swift_allocObject();
  uint64_t result = sub_20A8C42E0();
  *a4 = result;
  return result;
}

uint64_t static Settings.ForYou.Card.systemDetents.getter()
{
  return sub_20A454F34(&qword_26AC69178);
}

uint64_t sub_20A6073A8()
{
  uint64_t v0 = sub_20A8C4260();
  uint64_t v21 = *(void *)(v0 - 8);
  uint64_t v22 = v0;
  MEMORY[0x270FA5388](v0);
  uint64_t v20 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_20A8C4270();
  uint64_t v18 = *(void *)(v2 - 8);
  uint64_t v19 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v16 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8CCBA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  double v10 = (char *)&v15 - v9;
  sub_20A6078E8();
  uint64_t v17 = v11;
  uint64_t v12 = *MEMORY[0x263F59970];
  int64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v13(v10, v12, v4);
  sub_20A60799C(0, &qword_26AC686F0, (uint64_t (*)(uint64_t))sub_20A607968, MEMORY[0x263F8E0F8]);
  sub_20A607968(0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_20A8D5CB0;
  v13(v7, v12, v4);
  sub_20A8C4280();
  v13(v7, *MEMORY[0x263F59978], v4);
  sub_20A8C4280();
  v13(v7, *MEMORY[0x263F59968], v4);
  sub_20A8C4280();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v16, *MEMORY[0x263F7D110], v19);
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v20, *MEMORY[0x263F7D100], v22);
  sub_20A607A00(&qword_26AC6B0C8);
  uint64_t result = sub_20A8C42A0();
  qword_26AC69180 = result;
  return result;
}

uint64_t static Settings.ForYou.Feed.autoRefreshStrategy.getter()
{
  return sub_20A454F34(&qword_26AC67670);
}

ValueMetadata *type metadata accessor for Settings.ForYou()
{
  return &type metadata for Settings.ForYou;
}

ValueMetadata *type metadata accessor for Settings.ForYou.Ticker()
{
  return &type metadata for Settings.ForYou.Ticker;
}

uint64_t type metadata accessor for Settings.ForYou.ConfigOverrides()
{
  uint64_t result = qword_26AC69118;
  if (!qword_26AC69118) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A607880()
{
  return swift_initClassMetadata2();
}

uint64_t sub_20A6078C0()
{
  return type metadata accessor for Settings.ForYou.ConfigOverrides();
}

ValueMetadata *type metadata accessor for Settings.ForYou.Card()
{
  return &type metadata for Settings.ForYou.Card;
}

ValueMetadata *type metadata accessor for Settings.ForYou.Feed()
{
  return &type metadata for Settings.ForYou.Feed;
}

void sub_20A6078E8()
{
  if (!qword_26AC692E0)
  {
    sub_20A8CCBA0();
    sub_20A607A00(&qword_26AC677B8);
    unint64_t v0 = sub_20A8C42D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC692E0);
    }
  }
}

void sub_20A607968(uint64_t a1)
{
}

void sub_20A60799C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A607A00(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A8CCBA0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A607A44()
{
  uint64_t v1 = sub_20A8CA9F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 104), *(void *)(v0 + 128));
  sub_20A8CCEB0();
  sub_20A60A170();
  uint64_t v5 = *MEMORY[0x263F7DD78];
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v6(v4, v5, v1);
  sub_20A8CEB20();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v2 + 8);
  v7(v4, v1);
  sub_20A609F9C();
  v6(v4, v5, v1);
  sub_20A8CEB20();
  v7(v4, v1);
  sub_20A609CA0();
  v6(v4, v5, v1);
  sub_20A8CEB20();
  return ((uint64_t (*)(char *, uint64_t))v7)(v4, v1);
}

uint64_t sub_20A607C38(uint64_t a1, uint64_t a2, void *a3, void (*a4)(char *, uint64_t, uint64_t))
{
  CGFloat v145 = a4;
  double v144 = *(double *)&a2;
  unsigned int v136 = (void *)sub_20A8C9F40();
  uint64_t v135 = *(v136 - 1);
  MEMORY[0x270FA5388](v136);
  uint64_t v137 = (char *)&v123 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C4030();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v132 = (char *)&v123 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v133 = (uint64_t)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_20A8C3410();
  uint64_t v128 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  uint64_t v127 = (char *)&v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A609C6C(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v151 = (uint64_t (*)())((char *)&v123 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A42C470(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v125 = (uint64_t)&v123 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v147 = (uint64_t)&v123 - v17;
  uint64_t v150 = sub_20A8C3F00();
  double v146 = *(double *)(v150 - 8);
  MEMORY[0x270FA5388](v150);
  id v126 = (char *)&v123 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = type metadata accessor for StockViewModel();
  uint64_t v130 = *(void *)(v124 - 8);
  MEMORY[0x270FA5388](v124);
  uint64_t v134 = (uint64_t)&v123 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v154 = (char *)&v123 - v21;
  uint64_t v22 = type metadata accessor for StockFeedMastheadViewLayoutAttributes();
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v149 = (uint64_t)&v123 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x270FA5388](v123);
  *(void *)&double v148 = (char *)&v123 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_20A8C2B70();
  uint64_t v140 = *(void *)(v143 - 8);
  MEMORY[0x270FA5388](v143);
  uint64_t v139 = (char *)&v123 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_20A8CA9F0();
  uint64_t v141 = *(void *)(v142 - 8);
  MEMORY[0x270FA5388](v142);
  uint64_t v27 = (char *)&v123 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v123 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = v4;
  swift_beginAccess();
  sub_20A4342F4(v4 + 64, (uint64_t)&v156);
  uint64_t v32 = v157;
  uint64_t v31 = v158;
  __swift_project_boxed_opaque_existential_1(&v156, v157);
  id v153 = a3;
  id v33 = objc_msgSend(a3, sel_traitCollection);
  uint64_t v34 = *(void *)(v31 + 8);
  unint64_t v35 = *(void (**)(id, uint64_t, uint64_t))(v34 + 8);
  v159[3] = v32;
  v159[4] = v31;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v159);
  v35(v33, v32, v34);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v156);
  sub_20A42BED4();
  sub_20A8C9850();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_20A42CA7C();
    uint64_t v38 = (uint64_t)&v30[*(int *)(v37 + 48)];
    uint64_t v39 = *(void *)&v148;
    sub_20A609E10((uint64_t)v30, *(uint64_t *)&v148, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
    uint64_t v40 = v149;
    sub_20A609E10(v38, v149, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
    sub_20A609CA0();
    sub_20A8CA800();
    uint64_t v41 = v139;
    sub_20A8CA820();
    uint64_t v42 = (void *)sub_20A8CEB00();
    (*(void (**)(char *, uint64_t))(v140 + 8))(v41, v143);
    (*(void (**)(char *, uint64_t))(v141 + 8))(v27, v142);
    uint64_t v43 = *(void *)(v31 + 16);
    uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t))(v43 + 64);
    id v45 = v42;
    uint64_t v46 = (void *)v44(v32, v43);
    id v153 = v45;
    objc_msgSend(v45, sel_setBackgroundColor_, v46);

    unint64_t v47 = (char *)sub_20A8C98A0();
    sub_20A5D1ED0(v39, v40, v47);

    CGFloat v145 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)&v146 + 16);
    unint64_t v48 = v126;
    v145(v126, v39, v150);
    uint64_t v49 = v123;
    sub_20A609DA4(v39 + *(int *)(v123 + 20), v147, (uint64_t (*)(void))sub_20A42C470);
    uint64_t v50 = type metadata accessor for StockSparklineViewModel(0);
    (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v151, 1, 1, v50);
    uint64_t v51 = *(int *)(v49 + 28);
    uint64_t v52 = v39 + v51 + *(int *)(type metadata accessor for QuoteViewModel() + 20);
    uint64_t v53 = v128;
    unint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v128 + 16);
    unint64_t v55 = v127;
    uint64_t v56 = v129;
    v54(v127, v52, v129);
    LODWORD(v144) = *(unsigned __int8 *)(v39 + *(int *)(v49 + 32));
    uint64_t v57 = (uint64_t)v154;
    v145(v154, (uint64_t)v48, v150);
    double v58 = (int *)v124;
    uint64_t v59 = v147;
    sub_20A609DA4(v147, v57 + *(int *)(v124 + 20), (uint64_t (*)(void))sub_20A42C470);
    sub_20A609DA4((uint64_t)v151, v57 + v58[6], (uint64_t (*)(void))sub_20A609C6C);
    v54((char *)(v57 + v58[8]), (uint64_t)v55, v56);
    *(unsigned char *)(v57 + v58[9]) = LOBYTE(v144);
    uint64_t v60 = v125;
    sub_20A609DA4(v59, v125, (uint64_t (*)(void))sub_20A42C470);
    double v61 = v132;
    sub_20A8C3E70();
    uint64_t v62 = v133;
    sub_20A5EC850(v60, v61, 9666786, 0xA300000000000000, v133);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v55, v56);
    sub_20A60A110((uint64_t)v151, (uint64_t (*)(void))sub_20A609C6C);
    sub_20A60A110(v59, (uint64_t (*)(void))sub_20A42C470);
    (*(void (**)(char *, uint64_t))(*(void *)&v146 + 8))(v48, v150);
    uint64_t v63 = (uint64_t)v154;
    sub_20A609E10(v62, (uint64_t)&v154[v58[7]], (uint64_t (*)(void))type metadata accessor for PriceViewModel);
    uint64_t v64 = (char *)sub_20A8C98A0();
    double v65 = (char *)*(id *)&v64[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_watchStockButton];

    id v66 = *(id *)&v65[qword_26AC73208];
    uint64_t v67 = swift_allocObject();
    uint64_t v68 = v152;
    swift_weakInit();
    uint64_t v69 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v151 = type metadata accessor for StockViewModel;
    uint64_t v70 = v63;
    uint64_t v71 = v134;
    sub_20A609DA4(v70, v134, (uint64_t (*)(void))type metadata accessor for StockViewModel);
    uint64_t v72 = *(unsigned __int8 *)(v130 + 80);
    uint64_t v73 = (v72 + 32) & ~v72;
    uint64_t v150 = v72 | 7;
    uint64_t v74 = swift_allocObject();
    *(void *)(v74 + 16) = v67;
    *(void *)(v74 + 24) = v69;
    sub_20A609E10(v71, v74 + v73, (uint64_t (*)(void))type metadata accessor for StockViewModel);

    swift_release();
    unint64_t v75 = (char *)sub_20A8C98A0();
    unint64_t v76 = (char *)*(id *)&v75[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_shareButton];

    id v77 = *(id *)&v76[qword_26AC73208];
    uint64_t v78 = swift_allocObject();
    uint64_t v79 = v68;
    swift_weakInit();
    uint64_t v80 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_20A609DA4((uint64_t)v154, v71, (uint64_t (*)(void))v151);
    uint64_t v81 = swift_allocObject();
    *(void *)(v81 + 16) = v78;
    *(void *)(v81 + 24) = v80;
    sub_20A609E10(v71, v81 + v73, (uint64_t (*)(void))type metadata accessor for StockViewModel);

    swift_release();
    uint64_t v155 = MEMORY[0x263F8EE78];
    (*(void (**)(char *, void, void *))(v135 + 104))(v137, *MEMORY[0x263F7DA38], v136);
    uint64_t v82 = *(void *)(v79 + 160);
    uint64_t v157 = sub_20A8C4990();
    uint64_t v158 = sub_20A60A030((unint64_t *)&qword_26AC69370, MEMORY[0x263F24E68]);
    uint64_t v156 = v82;
    swift_retain();
    uint64_t v83 = (char *)sub_20A8C98A0();
    id v84 = *(id *)&v83[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_moreOptionsButton];

    long long v160 = 0u;
    long long v161 = 0u;
    char v162 = 1;
    sub_20A8C99D0();
    swift_allocObject();
    sub_20A8C99B0();
    uint64_t v85 = (uint64_t)v154;
    if (sub_20A7200A4((uint64_t)v154, 1))
    {
      uint64_t v86 = (void *)sub_20A8C8690();
      swift_release();
      if (v86)
      {
        id v87 = v86;
        MEMORY[0x2105268E0]();
        if (*(void *)((v155 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v155 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_20A8CE690();
        }
        sub_20A8CE6B0();
        sub_20A8CE620();
      }
    }
    _s5TeaUI15ContextMenuItemC06StocksB0E8copyLink5stockAC0F4Core5StockV_tFZ_0(v85);
    uint64_t v88 = (void *)sub_20A8C8690();
    swift_release();
    if (v88)
    {
      id v89 = v88;
      MEMORY[0x2105268E0]();
      if (*(void *)((v155 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v155 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_20A8CE690();
      }
      sub_20A8CE6B0();
      sub_20A8CE620();
    }
    sub_20A7C7740(v85);
    uint64_t v90 = (void *)sub_20A8C8690();
    swift_release();
    uint64_t v91 = v149;
    uint64_t v92 = *(void *)&v148;
    if (v90)
    {
      id v93 = v90;
      MEMORY[0x2105268E0]();
      if (*(void *)((v155 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v155 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_20A8CE690();
      }
      sub_20A8CE6B0();
      sub_20A8CE620();
    }
    uint64_t v94 = (char *)sub_20A8C98A0();
    id v95 = *(id *)&v94[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_moreOptionsButton];

    sub_20A564F1C();
    uint64_t v96 = (void *)sub_20A8CEE50();
    objc_msgSend(v95, sel_setMenu_, v96);
    swift_release();

    sub_20A60A110(v85, (uint64_t (*)(void))type metadata accessor for StockViewModel);
    sub_20A60A110(v91, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
    uint64_t v97 = (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel;
    uint64_t v98 = v92;
    goto LABEL_19;
  }
  uint64_t v99 = v27;
  uint64_t v100 = v139;
  uint64_t v101 = v140;
  if (EnumCaseMultiPayload == 1)
  {
    sub_20A609F34();
    unint64_t v103 = (uint64_t *)&v30[*(int *)(v102 + 48)];
    uint64_t v104 = v103[1];
    uint64_t v154 = v30;
    if (v104)
    {
      uint64_t v105 = v32;
      double v106 = *((double *)v103 + 9);
      uint64_t v137 = *((char **)v103 + 10);
      double v144 = v106;
      double v146 = *((double *)v103 + 8);
      double v148 = *((double *)v103 + 7);
      uint64_t v151 = (uint64_t (*)())v103[6];
      uint64_t v150 = v103[5];
      uint64_t v149 = v103[4];
      long long v107 = (void *)v103[2];
      uint64_t v147 = v103[3];
      uint64_t v135 = *v103;
      double v108 = v148;
      double v109 = v146;
      double v110 = v106;
      double v111 = *(double *)&v137;
      sub_20A609F9C();
      unsigned int v136 = v107;
      swift_bridgeObjectRetain();
      sub_20A8CA800();
      sub_20A8CA820();
      uint64_t v112 = (void *)sub_20A8CEB00();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v100, v143);
      (*(void (**)(char *, uint64_t))(v141 + 8))(v99, v142);
      uint64_t v113 = *(void *)(v31 + 16);
      uint64_t v114 = *(uint64_t (**)(uint64_t, uint64_t))(v113 + 64);
      id v115 = v112;
      uint64_t v116 = (void *)v114(v105, v113);
      objc_msgSend(v115, sel_setBackgroundColor_, v116);

      uint64_t v117 = *(void *)(v152 + 32);
      id v153 = v115;
      uint64_t v118 = (char *)sub_20A8C98A0();
      uint64_t v119 = *(void **)&v118[OBJC_IVAR____TtC8StocksUI17BrandingTitleView_titleLabel];
      objc_msgSend(v119, sel_setFrame_, v108, v109, v110, v111);
      swift_beginAccess();
      __swift_project_boxed_opaque_existential_1((void *)(v117 + 16), *(void *)(v117 + 40));
      uint64_t v120 = v135;
      id v121 = sub_20A6E9CE0(v135, v104, v107);
      objc_msgSend(v119, sel_setAttributedText_, v121);

      swift_bridgeObjectRelease();
      sub_20A42C9F4(v120, v104, v107);

      uint64_t v97 = (uint64_t (*)(void))sub_20A42CD3C;
      uint64_t v98 = (uint64_t)v154;
LABEL_19:
      sub_20A60A110(v98, v97);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v159);
      return (uint64_t)v153;
    }
  }
  uint64_t result = sub_20A8CF520();
  __break(1u);
  return result;
}

uint64_t sub_20A609098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A4D4A5C();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C9F40();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v13 = result;
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F7DA70], v8);
    uint64_t v14 = *(void *)(v13 + 160);
    v20[7] = sub_20A8C4990();
    v20[8] = sub_20A60A030((unint64_t *)&qword_26AC69370, MEMORY[0x263F24E68]);
    v20[4] = v14;
    swift_beginAccess();
    uint64_t v15 = (void *)MEMORY[0x2105289B0](a2 + 16);
    swift_retain();
    if (v15)
    {
      uint64_t v16 = (char *)sub_20A8C98A0();

      id v17 = *(id *)&v16[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_watchStockButton];
    }
    long long v21 = 0u;
    long long v22 = 0u;
    char v23 = 1;
    sub_20A8C99D0();
    swift_allocObject();
    sub_20A8C99B0();
    swift_getObjectType();
    if (qword_26AC6AC40 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_20A8C3F00();
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v7, a3, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v7, 0, 1, v18);
    swift_retain();
    sub_20A8C8CD0();
    sub_20A60A110((uint64_t)v7, (uint64_t (*)(void))sub_20A4D4A5C);
    swift_release();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_20A609450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A60A078(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C9F40();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v13 = result;
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F7DA70], v8);
    uint64_t v14 = *(void *)(v13 + 160);
    v24[7] = sub_20A8C4990();
    v24[8] = sub_20A60A030((unint64_t *)&qword_26AC69370, MEMORY[0x263F24E68]);
    v24[4] = v14;
    swift_beginAccess();
    uint64_t v15 = (void *)MEMORY[0x2105289B0](a2 + 16);
    swift_retain();
    if (v15)
    {
      uint64_t v16 = (char *)sub_20A8C98A0();

      id v17 = *(id *)&v16[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_shareButton];
    }
    long long v25 = 0u;
    long long v26 = 0u;
    char v27 = 1;
    sub_20A8C99D0();
    swift_allocObject();
    sub_20A8C99B0();
    swift_getObjectType();
    if (qword_26AC6AB90 != -1) {
      swift_once();
    }
    sub_20A58B96C();
    uint64_t v19 = (uint64_t)&v7[*(int *)(v18 + 48)];
    uint64_t v20 = *(int *)(v18 + 64);
    uint64_t v21 = sub_20A8C3F00();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v7, a3, v21);
    uint64_t v22 = type metadata accessor for StockViewModel();
    sub_20A609DA4(a3 + *(int *)(v22 + 20), v19, (uint64_t (*)(void))sub_20A42C470);
    v7[v20] = 1;
    uint64_t v23 = type metadata accessor for CommandShareContent(0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v7, 0, 1, v23);
    swift_retain();
    sub_20A8C8CD0();
    sub_20A60A110((uint64_t)v7, (uint64_t (*)(void))sub_20A60A078);
    swift_release();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_20A609844()
{
  sub_20A4380C4(v0 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedBlueprintViewSupplementaryViewProvider()
{
  return self;
}

uint64_t sub_20A6098D8()
{
  return sub_20A607A44();
}

uint64_t sub_20A609900(uint64_t a1, uint64_t a2, void **a3, void (*a4)(char *, uint64_t, uint64_t))
{
  return sub_20A607C38(a1, a2, *a3, a4);
}

uint64_t sub_20A609928(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  sub_20A4342F4(v2 + 64, (uint64_t)v12);
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8);
  uint64_t v10 = v4;
  uint64_t v11 = v5;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  v7(a2, v4, v6);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v2 + 64);
  sub_20A42BEBC(&v9, v2 + 64);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  swift_getObjectType();
  return sub_20A8CA6E0();
}

uint64_t sub_20A609A40()
{
  return sub_20A60A030(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
}

uint64_t sub_20A609A88()
{
  return sub_20A60A030(&qword_26AC7B3E0, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutSectionDescriptor);
}

uint64_t sub_20A609AD0()
{
  return sub_20A60A030(&qword_26AC72240, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
}

uint64_t sub_20A609B18()
{
  return sub_20A60A030(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
}

void *sub_20A609B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, long long *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v25 = a12;
  uint64_t v26 = a13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a12 - 8) + 32))(boxed_opaque_existential_1, a10, a12);
  uint64_t v20 = (void *)swift_allocObject();
  v20[3] = 0;
  swift_unknownObjectWeakInit();
  v20[4] = a1;
  uint64_t v20[5] = a2;
  v20[6] = a3;
  v20[7] = a4;
  sub_20A42BEBC(a5, (uint64_t)(v20 + 8));
  sub_20A42BEBC(a6, (uint64_t)(v20 + 13));
  v20[18] = a7;
  v20[19] = a8;
  v20[20] = a9;
  sub_20A42BEBC(&v24, (uint64_t)(v20 + 21));
  return v20;
}

void sub_20A609C6C(uint64_t a1)
{
}

void sub_20A609CA0()
{
  if (!qword_26AC6A310)
  {
    type metadata accessor for StockFeedMastheadView();
    sub_20A60A030(&qword_26AC73228, (void (*)(uint64_t))type metadata accessor for StockFeedMastheadView);
    unint64_t v0 = sub_20A8C98B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A310);
    }
  }
}

uint64_t sub_20A609D34()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A609D6C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A609DA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A609E10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A609E78()
{
  return sub_20A609EAC(sub_20A609098);
}

uint64_t sub_20A609E94()
{
  return sub_20A609EAC(sub_20A609450);
}

uint64_t sub_20A609EAC(uint64_t (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for StockViewModel() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3, v4, v5);
}

void sub_20A609F34()
{
  if (!qword_26AC7B2E8)
  {
    sub_20A42CD3C(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC7B2E8);
    }
  }
}

void sub_20A609F9C()
{
  if (!qword_26AC6A300)
  {
    type metadata accessor for BrandingTitleView();
    sub_20A60A030((unint64_t *)&unk_26AC6F770, (void (*)(uint64_t))type metadata accessor for BrandingTitleView);
    unint64_t v0 = sub_20A8C98B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A300);
    }
  }
}

uint64_t sub_20A60A030(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A60A078(uint64_t a1)
{
}

void sub_20A60A0AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A60A110(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A60A170()
{
  if (!qword_26AC6A328)
  {
    sub_20A8C8B70();
    unint64_t v0 = sub_20A8C98B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A328);
    }
  }
}

uint64_t type metadata accessor for MacTickerInteractor()
{
  return self;
}

uint64_t destroy for ForYouTitleViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();

  return __swift_destroy_boxed_opaque_existential_1(a1 + 48);
}

uint64_t initializeWithCopy for ForYouTitleViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v6 = *(void **)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v5;
  uint64_t v7 = a2 + 48;
  long long v8 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v6;
  swift_unknownObjectRetain();
  v10(a1 + 48, v7, v9);
  return a1;
}

void *assignWithCopy for ForYouTitleViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[4];
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  id v6 = v5;

  a1[5] = a2[5];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 6, a2 + 6);
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ForYouTitleViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for ForYouTitleViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ForYouTitleViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouTitleViewModel()
{
  return &type metadata for ForYouTitleViewModel;
}

uint64_t sub_20A60A4FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, long long *a3@<X3>, uint64_t *a4@<X8>)
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v8 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v9 = sub_20A60A698();
  uint64_t v11 = v10;
  sub_20A43F778();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_20A8D3DC0;
  uint64_t v13 = *a1;
  uint64_t v14 = a1[1];
  *(void *)(v12 + 56) = MEMORY[0x263F8D310];
  *(void *)(v12 + 64) = sub_20A43F830();
  *(void *)(v12 + 32) = v13;
  *(void *)(v12 + 40) = v14;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_20A8CE2B0();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  sub_20A60AA24((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for AttributionSource);
  *a4 = v9;
  a4[1] = v11;
  a4[2] = v15;
  a4[3] = v17;
  a4[4] = 0;
  a4[5] = a2;

  return sub_20A42BEBC(a3, (uint64_t)(a4 + 6));
}

uint64_t sub_20A60A698()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t sub_20A60A7C0()
{
  id v1 = (char *)objc_msgSend(*(id *)(v0 + 40), sel_cachedSubscription);
  if (objc_getAssociatedObject(v1, v1 + 1))
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v14 = 0u;
    long long v15 = 0u;
  }
  sub_20A443438((uint64_t)&v14, (uint64_t)v11);
  if (v12)
  {
    sub_20A4434F8();
    if (swift_dynamicCast())
    {
      uint64_t v2 = v10;
      unint64_t v3 = (unint64_t)objc_msgSend(v10, sel_integerValue);
      if (v3 == -1) {
        goto LABEL_17;
      }
      goto LABEL_10;
    }
  }
  else
  {
    sub_20A60AA24((uint64_t)v11, (uint64_t (*)(void))sub_20A42F348);
  }
  uint64_t v2 = 0;
  unint64_t v3 = 0;
LABEL_10:
  if (objc_getAssociatedObject(v1, (const void *)~v3))
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v14 = 0u;
    long long v15 = 0u;
  }
  sub_20A443438((uint64_t)&v14, (uint64_t)v11);
  if (v12)
  {
    sub_20A4434F8();
    if (swift_dynamicCast())
    {
      id v4 = v10;
      unsigned __int8 v5 = objc_msgSend(v4, sel_integerValue);

      char v6 = v5 - 47;
      goto LABEL_18;
    }
  }
  else
  {
    sub_20A60AA24((uint64_t)v11, (uint64_t (*)(void))sub_20A42F348);
  }
LABEL_17:

  char v6 = -47;
LABEL_18:
  char v7 = (v3 + 1) ^ v6;
  sub_20A60A9EC(v0, (uint64_t)v11);
  if (v7)
  {
    __swift_project_boxed_opaque_existential_1(v13, v13[3]);
    char v8 = sub_20A8C3800();
  }
  else
  {
    char v8 = 0;
  }
  sub_20A473E10((uint64_t)v11);
  return v8 & 1;
}

uint64_t sub_20A60A9EC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_20A60AA24(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A60AA84()
{
  sub_20A4380C4(v0 + 16);
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedViewerInteractor()
{
  return self;
}

uint64_t sub_20A60AAF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C3F00();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 2, v5);
  sub_20A60AC00();
  sub_20A8C5D80();
  return sub_20A60AC58((uint64_t)v4);
}

unint64_t sub_20A60AC00()
{
  unint64_t result = qword_26AC75290;
  if (!qword_26AC75290)
  {
    type metadata accessor for StockListSelectionModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC75290);
  }
  return result;
}

uint64_t sub_20A60AC58(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockListSelectionModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A60ACB4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *(void *)a1 = *a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    long long v8 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v8;
    uint64_t v9 = v8;
    id v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
    swift_bridgeObjectRetain();
    v10(a1 + 16, (uint64_t)(a2 + 2), v9);
    *(void *)(a1 + 56) = a2[7];
    long long v11 = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 88) = v11;
    uint64_t v12 = v11;
    uint64_t v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
    swift_retain();
    v13(a1 + 64, (uint64_t)(a2 + 8), v12);
    uint64_t v14 = *(int *)(a3 + 32);
    uint64_t v15 = a1 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = sub_20A8C3410();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return a1;
}

uint64_t sub_20A60AE50(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_20A8C3410();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_20A60AEE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2 + 16;
  long long v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  uint64_t v9 = v8;
  id v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  v10(a1 + 16, v7, v9);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  long long v11 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v11;
  uint64_t v12 = v11;
  uint64_t v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
  swift_retain();
  v13(a1 + 64, a2 + 64, v12);
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

void *sub_20A60B030(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 8, a2 + 8);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C3410();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_20A60B104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a2 + v7;
  uint64_t v9 = a1 + v7;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v10 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, v8, v10);
  return a1;
}

uint64_t sub_20A60B1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  long long v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v9;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_20A60B268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A60B27C);
}

uint64_t sub_20A60B27C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C3410();
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_20A60B32C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A60B340);
}

uint64_t sub_20A60B340(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_20A8C3410();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ForYouFeedRefreshBlueprintModifier()
{
  uint64_t result = qword_26AC7C6A8;
  if (!qword_26AC7C6A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A60B434()
{
  uint64_t result = sub_20A8C3410();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_20A60B4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t refreshed = type metadata accessor for ForYouFeedRefreshBlueprintModifier();
  uint64_t v7 = *(void *)(refreshed - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](refreshed - 8);
  uint64_t v16 = v3;
  sub_20A60DB38();
  sub_20A8C6670();
  sub_20A60DF8C(v3, (uint64_t)&v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))type metadata accessor for ForYouFeedRefreshBlueprintModifier);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  sub_20A60E288((uint64_t)&v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], v10 + v9, (uint64_t (*)(void))type metadata accessor for ForYouFeedRefreshBlueprintModifier);
  uint64_t v11 = (void *)(v10 + ((v8 + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v11 = a2;
  v11[1] = a3;
  swift_retain();
  uint64_t v12 = (void *)sub_20A8C6450();
  sub_20A8C6500();
  swift_release();
  swift_release();

  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  swift_retain();
  uint64_t v14 = (void *)sub_20A8C6450();
  sub_20A8C6550();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_20A60B6F4()
{
  uint64_t v1 = sub_20A8C3F00();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4D4A5C();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v16 - v9;
  sub_20A60D73C(v0, (uint64_t)v16 - v9);
  sub_20A60DF8C((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))sub_20A4D4A5C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_20A60E090((uint64_t)v7, (uint64_t (*)(void))sub_20A4D4A5C);
    v16[1] = sub_20A4CFE7C(MEMORY[0x263F8EE78]);
    sub_20A60E224(0, (unint64_t *)&qword_26AC698A8, (uint64_t (*)(uint64_t))sub_20A60DB38, MEMORY[0x263F7D028]);
    swift_allocObject();
    uint64_t v11 = sub_20A8C6580();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 64), *(void *)(v0 + 88));
    sub_20A60E224(0, (unint64_t *)&qword_26AC7FEA0, MEMORY[0x263F7AF08], MEMORY[0x263F8E0F8]);
    unint64_t v12 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_20A8D3DC0;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 16))(v13 + v12, v4, v1);
    sub_20A8C39E0();
    swift_bridgeObjectRelease();
    uint64_t v14 = (void *)sub_20A8C6450();
    sub_20A60DB38();
    uint64_t v11 = sub_20A8C6500();
    swift_release();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_20A60E090((uint64_t)v10, (uint64_t (*)(void))sub_20A4D4A5C);
  return v11;
}

uint64_t sub_20A60BA44(uint64_t *a1, void *a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v153 = a4;
  uint64_t v154 = a3;
  uint64_t v186 = a2;
  long long v179 = a1;
  sub_20A60DE3C(0, &qword_26AC6A430, MEMORY[0x263F7D950]);
  uint64_t v152 = v4;
  uint64_t v151 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v150 = (char *)&v142 - v5;
  sub_20A60E1A4(0, &qword_26AC69DD0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, sub_20A44D810, MEMORY[0x263F7D2D8]);
  uint64_t v167 = v6;
  uint64_t v166 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  double v148 = (char *)&v142 - v7;
  sub_20A4F0338();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v164 = (char *)&v142 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x270FA5388](v175);
  double v165 = (uint64_t *)((char *)&v142 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x270FA5388](v11);
  uint64_t v174 = (char *)&v142 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = sub_20A8CC310();
  CGFloat v145 = *(void (***)(char *, uint64_t))(v178 - 8);
  MEMORY[0x270FA5388](v178);
  uint64_t v177 = (char *)&v142 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v159 = (uint64_t)&v142 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for StockForYouFeedGroup();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v158 = (uint64_t)&v142 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = sub_20A8CCFE0();
  char v162 = *(void (***)(char *, uint64_t))(v185 - 8);
  MEMORY[0x270FA5388](v185);
  uint64_t v157 = (char *)&v142 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v156 = (char *)&v142 - v20;
  MEMORY[0x270FA5388](v21);
  long long v161 = (void (**)(uint64_t, uint64_t))((char *)&v142 - v22);
  uint64_t v23 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
  sub_20A60DE3C(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  uint64_t v25 = v24;
  uint64_t v155 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v170 = (uint64_t)&v142 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v169 = (uint64_t)&v142 - v28;
  MEMORY[0x270FA5388](v29);
  uint64_t v176 = (uint64_t)&v142 - v30;
  uint64_t v184 = type metadata accessor for ForYouFeedGroup();
  *(void *)&long long v144 = *(void *)(v184 - 8);
  MEMORY[0x270FA5388](v184);
  uint64_t v183 = (uint64_t)&v142 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v173 = (uint64_t *)((char *)&v142 - v33);
  MEMORY[0x270FA5388](v34);
  uint64_t v182 = (uint64_t)&v142 - v35;
  MEMORY[0x270FA5388](v36);
  uint64_t v172 = (uint64_t *)((char *)&v142 - v37);
  MEMORY[0x270FA5388](v38);
  double v146 = (void (**)(char *, char *, uint64_t))((char *)&v142 - v39);
  MEMORY[0x270FA5388](v40);
  uint64_t v147 = (void (**)(char *, uint64_t, uint64_t))((char *)&v142 - v41);
  sub_20A495590();
  MEMORY[0x270FA5388](v42 - 8);
  uint64_t v43 = sub_20A8C2830();
  uint64_t v44 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v46 = (char *)&v142 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A60DE3C(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v48 = v47;
  uint64_t v149 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v50 = (char *)&v142 - v49;
  uint64_t v160 = *v179;
  sub_20A8C2820();
  long long v179 = (uint64_t *)sub_20A8C2810();
  uint64_t v163 = v51;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v43);
  uint64_t v52 = sub_20A60DF48(&qword_26AC69E98, (unint64_t *)&qword_26AC69EB0, v23);
  uint64_t v53 = sub_20A60DF48(&qword_26AC69E90, (unint64_t *)&qword_26AC69EB0, v23);
  uint64_t v171 = v25;
  MEMORY[0x21051E240](MEMORY[0x263F8EE78], v25, v52, v53);
  uint64_t v54 = sub_20A60DF00(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
  uint64_t v55 = sub_20A44D810();
  long long v179 = (uint64_t *)v11;
  uint64_t v163 = v54;
  sub_20A8CBA40();
  unint64_t v56 = v186[7];
  uint64_t v180 = v48;
  uint64_t v181 = v50;
  uint64_t v168 = v55;
  switch(v56 >> 61)
  {
    case 1uLL:
      uint64_t v69 = v56 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v70 = *(void *)((v56 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v71 = *(void *)(v69 + 24);
      uint64_t v72 = *(void *)(v70 + 16);
      uint64_t v73 = v176;
      if (!v72)
      {
        swift_retain();
        uint64_t v76 = v171;
LABEL_31:
        sub_20A4EFE88(v71, v73);
        uint64_t v48 = v180;
        sub_20A8CBA80();
        (*(void (**)(uint64_t, uint64_t))(v155 + 8))(v73, v76);
        sub_20A8CCAC0();
        swift_retain();
        sub_20A8CCAB0();
        type metadata accessor for ForYouFeedServiceConfig();
        sub_20A4F0534();
        uint64_t v125 = sub_20A8CCA90();
        swift_release();
        if (v125) {
          goto LABEL_37;
        }
        goto LABEL_32;
      }
      uint64_t v74 = v186;
      uint64_t v173 = v186 + 2;
      uint64_t v157 = (char *)v74 + *(int *)(type metadata accessor for ForYouFeedRefreshBlueprintModifier() + 32);
      uint64_t v75 = v70 + ((*(unsigned __int8 *)(v144 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80));
      uint64_t v183 = v71;
      uint64_t v170 = *(void *)(v144 + 72);
      uint64_t v147 = (void (**)(char *, uint64_t, uint64_t))(v145 + 4);
      double v146 = (void (**)(char *, char *, uint64_t))(v145 + 2);
      ++v145;
      ++v162;
      long long v161 = (void (**)(uint64_t, uint64_t))(v155 + 8);
      uint64_t v142 = v70;
      swift_bridgeObjectRetain();
      uint64_t v143 = v71 & 0x7FFFFFFFFFFFFFFFLL;
      swift_retain();
      long long v144 = xmmword_20A8D3DC0;
      uint64_t v76 = v171;
      id v77 = v172;
      uint64_t v78 = v156;
      while (1)
      {
        sub_20A60DF8C(v75, (uint64_t)v77, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
        uint64_t v86 = __swift_project_boxed_opaque_existential_1(v173, v186[5]);
        type metadata accessor for ForYouFeedServiceConfig();
        sub_20A4F0534();
        sub_20A8CC780();
        uint64_t v87 = *v86;
        sub_20A60DF8C((uint64_t)v77, v182, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (!EnumCaseMultiPayload) {
          break;
        }
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v89 = v159;
          sub_20A60E288(v182, v159, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
          uint64_t v90 = v169;
          sub_20A7FE93C(v89, (uint64_t)v78, v169);
          uint64_t v91 = type metadata accessor for CuratedForYouFeedGroup;
LABEL_12:
          uint64_t v92 = v89;
          uint64_t v85 = v90;
          sub_20A60E090(v92, (uint64_t (*)(void))v91);
          goto LABEL_7;
        }
        uint64_t v79 = v177;
        uint64_t v80 = v178;
        (*v147)(v177, v182, v178);
        (*v146)(v174, v79, v80);
        swift_storeEnumTagMultiPayload();
        sub_20A60DFF4();
        uint64_t v81 = swift_allocObject();
        *(_OWORD *)(v81 + 16) = v144;
        __swift_project_boxed_opaque_existential_1((void *)(v87 + 16), *(void *)(v87 + 40));
        sub_20A8CCBB0();
        swift_storeEnumTagMultiPayload();
        uint64_t v82 = v171;
        sub_20A8C8320();
        uint64_t v83 = sub_20A60DDB4((unint64_t *)&unk_26AC69DC0);
        uint64_t v84 = sub_20A60DDB4(&qword_26AC69DB8);
        MEMORY[0x21051E240](v81, v167, v83, v84);
        uint64_t v85 = v169;
        uint64_t v50 = v181;
        uint64_t v76 = v82;
        uint64_t v78 = v156;
        sub_20A8C8810();
        (*v145)(v177, v178);
LABEL_7:
        uint64_t v73 = v176;
        (*v162)(v78, v185);
        sub_20A8CBA80();
        (*v161)(v85, v76);
        id v77 = v172;
        sub_20A60E090((uint64_t)v172, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
        v75 += v170;
        if (!--v72)
        {
          swift_bridgeObjectRelease();
          uint64_t v71 = v183;
          goto LABEL_31;
        }
      }
      uint64_t v89 = v158;
      sub_20A60E288(v182, v158, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
      uint64_t v90 = v169;
      sub_20A7FE07C(v89, v160, v157, (uint64_t)v78, v169);
      uint64_t v91 = type metadata accessor for StockForYouFeedGroup;
      goto LABEL_12;
    case 2uLL:
      sub_20A60E0F0();
      uint64_t v94 = v93;
      uint64_t v95 = swift_projectBox();
      uint64_t v184 = *(void *)(v95 + *(int *)(v94 + 48));
      uint64_t v96 = v146;
      sub_20A60DF8C(v95, (uint64_t)v146, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
      uint64_t v97 = v186;
      __swift_project_boxed_opaque_existential_1(v186 + 2, v186[5]);
      uint64_t v98 = (char *)v97 + *(int *)(type metadata accessor for ForYouFeedRefreshBlueprintModifier() + 32);
      type metadata accessor for ForYouFeedServiceConfig();
      uint64_t v186 = (void *)sub_20A4F0534();
      swift_retain();
      uint64_t v99 = (uint64_t)v161;
      sub_20A8CC780();
      uint64_t v73 = v176;
      sub_20A7FDDBC((uint64_t)v96, v160, v98, v99, v176);
      v162[1]((char *)v99, v185);
      sub_20A8CBA80();
      (*(void (**)(uint64_t, uint64_t))(v155 + 8))(v73, v171);
      sub_20A8CCAC0();
      swift_retain();
      sub_20A8CCAB0();
      uint64_t v100 = sub_20A8CCA90();
      swift_release();
      if (v100)
      {
        *((void *)&v188 + 1) = sub_20A8CC520();
        *(void *)&long long v187 = v100;
      }
      else
      {
        long long v187 = 0u;
        long long v188 = 0u;
      }
      uint64_t v48 = v180;
      uint64_t v50 = v181;
      sub_20A8CBB10();
      swift_release_n();
      sub_20A60E090((uint64_t)v146, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
      uint64_t v76 = v171;
      goto LABEL_42;
    case 3uLL:
      uint64_t v101 = *(void *)((v56 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v102 = *(void *)((v56 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v103 = *(void *)(v101 + 16);
      if (v103)
      {
        uint64_t v104 = v186;
        uint64_t v172 = v186 + 2;
        uint64_t v156 = (char *)v104 + *(int *)(type metadata accessor for ForYouFeedRefreshBlueprintModifier() + 32);
        uint64_t v105 = v101 + ((*(unsigned __int8 *)(v144 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80));
        uint64_t v182 = v102;
        uint64_t v169 = *(void *)(v144 + 72);
        uint64_t v147 = (void (**)(char *, uint64_t, uint64_t))(v145 + 4);
        double v146 = (void (**)(char *, char *, uint64_t))(v145 + 2);
        ++v145;
        ++v162;
        long long v161 = (void (**)(uint64_t, uint64_t))(v155 + 8);
        uint64_t v142 = v101;
        swift_bridgeObjectRetain();
        uint64_t v143 = v102 & 0x7FFFFFFFFFFFFFFFLL;
        swift_retain();
        long long v144 = xmmword_20A8D3DC0;
        uint64_t v76 = v171;
        double v106 = v157;
        long long v107 = v173;
        while (1)
        {
          uint64_t v117 = v48;
          uint64_t v111 = v76;
          sub_20A60DF8C(v105, (uint64_t)v107, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
          uint64_t v118 = (uint64_t)v107;
          uint64_t v119 = __swift_project_boxed_opaque_existential_1(v172, v186[5]);
          type metadata accessor for ForYouFeedServiceConfig();
          sub_20A4F0534();
          sub_20A8CC780();
          uint64_t v120 = *v119;
          sub_20A60DF8C(v118, v183, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
          int v121 = swift_getEnumCaseMultiPayload();
          if (!v121) {
            break;
          }
          if (v121 == 1)
          {
            uint64_t v122 = v159;
            sub_20A60E288(v183, v159, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
            uint64_t v115 = v170;
            sub_20A7FE93C(v122, (uint64_t)v106, v170);
            uint64_t v123 = type metadata accessor for CuratedForYouFeedGroup;
LABEL_23:
            sub_20A60E090(v122, (uint64_t (*)(void))v123);
            uint64_t v50 = v181;
            uint64_t v48 = v117;
            goto LABEL_18;
          }
          double v108 = v177;
          uint64_t v109 = v178;
          (*v147)(v177, v183, v178);
          (*v146)(v174, v108, v109);
          swift_storeEnumTagMultiPayload();
          sub_20A60DFF4();
          uint64_t v110 = swift_allocObject();
          *(_OWORD *)(v110 + 16) = v144;
          __swift_project_boxed_opaque_existential_1((void *)(v120 + 16), *(void *)(v120 + 40));
          uint64_t v111 = v171;
          uint64_t v112 = v167;
          sub_20A8CCBB0();
          swift_storeEnumTagMultiPayload();
          sub_20A8C8320();
          uint64_t v113 = sub_20A60DDB4((unint64_t *)&unk_26AC69DC0);
          uint64_t v114 = sub_20A60DDB4(&qword_26AC69DB8);
          MEMORY[0x21051E240](v110, v112, v113, v114);
          uint64_t v115 = v170;
          uint64_t v48 = v180;
          double v106 = v157;
          sub_20A8C8810();
          (*v145)(v177, v178);
          uint64_t v50 = v181;
LABEL_18:
          (*v162)(v106, v185);
          sub_20A8CBA80();
          uint64_t v116 = v115;
          uint64_t v76 = v111;
          (*v161)(v116, v111);
          long long v107 = v173;
          sub_20A60E090((uint64_t)v173, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
          v105 += v169;
          if (!--v103)
          {
            swift_bridgeObjectRelease();
            goto LABEL_36;
          }
        }
        uint64_t v122 = v158;
        sub_20A60E288(v183, v158, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
        uint64_t v115 = v170;
        sub_20A7FE07C(v122, v160, v156, (uint64_t)v106, v170);
        uint64_t v123 = type metadata accessor for StockForYouFeedGroup;
        goto LABEL_23;
      }
      swift_retain();
      uint64_t v76 = v171;
LABEL_36:
      sub_20A8CCAC0();
      swift_retain();
      sub_20A8CCAB0();
      type metadata accessor for ForYouFeedServiceConfig();
      sub_20A4F0534();
      uint64_t v125 = sub_20A8CCA90();
      swift_release();
      uint64_t v73 = v176;
      if (v125)
      {
LABEL_37:
        *((void *)&v188 + 1) = sub_20A8CC520();
        *(void *)&long long v187 = v125;
      }
      else
      {
LABEL_32:
        long long v187 = 0u;
        long long v188 = 0u;
      }
      sub_20A8CBB10();
LABEL_41:
      swift_release_n();
LABEL_42:
      sub_20A60DF48((unint64_t *)&unk_26AC6AD20, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
      sub_20A8CE840();
      sub_20A8CE8A0();
      if ((void)v187 == v189)
      {
        swift_storeEnumTagMultiPayload();
        uint64_t v126 = sub_20A60DDB4((unint64_t *)&unk_26AC69DC0);
        uint64_t v127 = sub_20A60DDB4(&qword_26AC69DB8);
        uint64_t v128 = v167;
        MEMORY[0x21051E240](MEMORY[0x263F8EE78], v167, v126, v127);
        sub_20A8C8810();
        if (qword_26AC82DA0 != -1) {
          swift_once();
        }
        uint64_t v129 = *(void *)algn_26AC9ED28;
        uint64_t v130 = v165;
        *double v165 = qword_26AC9ED20;
        v130[1] = v129;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        uint64_t v131 = v148;
        sub_20A8C8320();
        sub_20A8C8880();
        (*(void (**)(char *, uint64_t))(v166 + 8))(v131, v128);
        uint64_t v48 = v180;
        uint64_t v50 = v181;
        sub_20A8CBA80();
        (*(void (**)(uint64_t, uint64_t))(v155 + 8))(v73, v76);
      }
      sub_20A4957B0();
      uint64_t v133 = v150;
      uint64_t v134 = &v150[*(int *)(v132 + 48)];
      uint64_t v135 = v149;
      (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v150, v50, v48);
      uint64_t v136 = *MEMORY[0x263F7D528];
      uint64_t v137 = sub_20A8C8B80();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v137 - 8) + 104))(v134, v136, v137);
      uint64_t v138 = v50;
      uint64_t v139 = v151;
      uint64_t v140 = v152;
      (*(void (**)(char *, void, uint64_t))(v151 + 104))(v133, *MEMORY[0x263F7D938], v152);
      v154(v133);
      (*(void (**)(char *, uint64_t))(v139 + 8))(v133, v140);
      return (*(uint64_t (**)(char *, uint64_t))(v135 + 8))(v138, v48);
    case 4uLL:
      sub_20A8CCAC0();
      swift_retain_n();
      sub_20A8CCAB0();
      type metadata accessor for ForYouFeedServiceConfig();
      sub_20A4F0534();
      uint64_t v124 = sub_20A8CCA90();
      swift_release();
      uint64_t v73 = v176;
      if (v124)
      {
        *((void *)&v188 + 1) = sub_20A8CC520();
        *(void *)&long long v187 = v124;
      }
      else
      {
        long long v187 = 0u;
        long long v188 = 0u;
      }
      uint64_t v76 = v171;
      uint64_t v50 = v181;
      sub_20A8CBB10();
      goto LABEL_41;
    default:
      sub_20A60E0F0();
      uint64_t v58 = v57;
      uint64_t v59 = swift_projectBox();
      uint64_t v60 = *(void *)(v59 + *(int *)(v58 + 48));
      double v61 = v147;
      sub_20A60DF8C(v59, (uint64_t)v147, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
      uint64_t v62 = v186;
      __swift_project_boxed_opaque_existential_1(v186 + 2, v186[5]);
      uint64_t v63 = (char *)v62 + *(int *)(type metadata accessor for ForYouFeedRefreshBlueprintModifier() + 32);
      uint64_t v186 = (void *)type metadata accessor for ForYouFeedServiceConfig();
      sub_20A4F0534();
      swift_retain();
      uint64_t v64 = (uint64_t)v161;
      sub_20A8CC780();
      uint64_t v65 = v176;
      sub_20A7FDDBC((uint64_t)v61, v160, v63, v64, v176);
      v162[1]((char *)v64, v185);
      sub_20A8CBA80();
      id v66 = *(void (**)(uint64_t, uint64_t))(v155 + 8);
      uint64_t v67 = v171;
      v66(v65, v171);
      sub_20A4EFE88(v60, v65);
      sub_20A8CBA80();
      v66(v65, v67);
      sub_20A8CCAC0();
      swift_retain();
      sub_20A8CCAB0();
      uint64_t v68 = sub_20A8CCA90();
      swift_release();
      if (v68)
      {
        *((void *)&v188 + 1) = sub_20A8CC520();
        *(void *)&long long v187 = v68;
      }
      else
      {
        long long v187 = 0u;
        long long v188 = 0u;
      }
      uint64_t v48 = v180;
      uint64_t v50 = v181;
      sub_20A8CBB10();
      swift_release_n();
      sub_20A60E090((uint64_t)v147, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
      uint64_t v76 = v171;
      uint64_t v73 = v176;
      goto LABEL_42;
  }
}

uint64_t sub_20A60D618(void *a1, void (*a2)(char *))
{
  sub_20A60DE3C(0, &qword_26AC6A430, MEMORY[0x263F7D950]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  double v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v12 - v8;
  *(uint64_t *)((char *)&v12 - v8) = (uint64_t)a1;
  (*(void (**)(char *, void, uint64_t, double))(v6 + 104))((char *)&v12 - v8, *MEMORY[0x263F7D930], v5, v7);
  id v10 = a1;
  a2(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_20A60D73C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for StockForYouFeedGroup();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ForYouFeedGroup();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v20 - v11;
  switch(*(void *)(a1 + 56) >> 61)
  {
    case 1:
    case 3:
    case 4:
      uint64_t v13 = sub_20A8C3F00();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t result = v14(a2, 1, 1, v13);
      break;
    default:
      sub_20A60E0F0();
      uint64_t v16 = swift_projectBox();
      sub_20A60DF8C(v16, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
      sub_20A60E288((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_20A60E090((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
        uint64_t v17 = sub_20A8C3F00();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a2, 1, 1, v17);
      }
      else
      {
        sub_20A60E288((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
        uint64_t v18 = sub_20A8C3F00();
        uint64_t v19 = *(void *)(v18 - 8);
        (*(void (**)(uint64_t, char *, uint64_t))(v19 + 16))(a2, v6, v18);
        sub_20A60E090((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
        uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(a2, 0, 1, v18);
      }
      break;
  }
  return result;
}

uint64_t sub_20A60DA38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_20A8C2EE0();
  *a1 = result;
  return result;
}

uint64_t sub_20A60DA78()
{
  return sub_20A60DF00(&qword_26AC7C6A0, (void (*)(uint64_t))type metadata accessor for ForYouFeedRefreshBlueprintModifier);
}

uint64_t sub_20A60DAC0()
{
  return sub_20A60DF00(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
}

uint64_t sub_20A60DB0C()
{
  return sub_20A60B6F4();
}

void sub_20A60DB38()
{
  if (!qword_26AC7F650)
  {
    sub_20A8C3E10();
    unint64_t v0 = sub_20A8CE1A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7F650);
    }
  }
}

uint64_t sub_20A60DBA0()
{
  uint64_t v1 = (int *)(type metadata accessor for ForYouFeedRefreshBlueprintModifier() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v2 + 64);
  uint64_t v3 = v2 + v1[10];
  uint64_t v4 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A60DCC8(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ForYouFeedRefreshBlueprintModifier() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_20A60BA44(a1, (void *)(v1 + v4), *(void (**)(char *))(v1 + v5), *(void *)(v1 + v5 + 8));
}

uint64_t sub_20A60DD74()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A60DDAC(void *a1)
{
  return sub_20A60D618(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_20A60DDB4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A60E1A4(255, &qword_26AC69DD0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, sub_20A44D810, MEMORY[0x263F7D2D8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A60DE3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for ForYouFeedSectionDescriptor();
    v8[1] = type metadata accessor for ForYouFeedModel();
    v8[2] = sub_20A60DF00(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
    void v8[3] = sub_20A44D810();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A60DF00(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A60DF48(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A60DE3C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A60DF8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_20A60DFF4()
{
  if (!qword_26AC7FF30)
  {
    sub_20A60E1A4(255, &qword_26AC69DD0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, sub_20A44D810, MEMORY[0x263F7D2D8]);
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FF30);
    }
  }
}

uint64_t sub_20A60E090(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A60E0F0()
{
  if (!qword_26763CA00)
  {
    type metadata accessor for ForYouFeedGroup();
    sub_20A60E1A4(255, &qword_26AC824C8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_20A4F0534, MEMORY[0x263F59850]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763CA00);
    }
  }
}

void sub_20A60E1A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_20A60E224(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A60E288(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A60E2F0(uint64_t a1)
{
  return sub_20A60E35C(a1, qword_26AC9E870);
}

uint64_t sub_20A60E314(uint64_t a1)
{
  return sub_20A60E35C(a1, qword_267652E48);
}

uint64_t sub_20A60E338(uint64_t a1)
{
  return sub_20A60E35C(a1, qword_267652E60);
}

uint64_t sub_20A60E35C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_20A8C7DF0();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  id v4 = objc_msgSend(self, sel_mainBundle);
  id v5 = objc_msgSend(v4, sel_bundleIdentifier);

  if (v5)
  {
    sub_20A8CE280();
  }
  return sub_20A8C7DE0();
}

uint64_t StocksV2UserActivityDeserializer.__allocating_init(stockMetadataManager:intentDeserializer:)(long long *a1, long long *a2)
{
  uint64_t v4 = swift_allocObject();
  sub_20A42BEBC(a1, v4 + 16);
  sub_20A42BEBC(a2, v4 + 56);
  return v4;
}

uint64_t StocksV2UserActivityDeserializer.init(stockMetadataManager:intentDeserializer:)(long long *a1, long long *a2)
{
  sub_20A42BEBC(a1, v2 + 16);
  sub_20A42BEBC(a2, v2 + 56);
  return v2;
}

void sub_20A60E4D8()
{
}

uint64_t sub_20A60E534@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v177 = a3;
  uint64_t v174 = a4;
  uint64_t v6 = sub_20A8C2530();
  uint64_t v171 = *(void *)(v6 - 8);
  uint64_t v172 = v6;
  MEMORY[0x270FA5388](v6);
  char v162 = (char *)&v145 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  double v148 = (char *)&v145 - v9;
  sub_20A60FDE4(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v168 = (uint64_t)&v145 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v150 = (uint64_t)&v145 - v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v154 = (char *)&v145 - v15;
  uint64_t v155 = sub_20A8C4B90();
  uint64_t v153 = *(void *)(v155 - 8);
  MEMORY[0x270FA5388](v155);
  uint64_t v152 = (char *)&v145 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8C4DA0();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v156 = (char *)&v145 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_20A8C5390();
  uint64_t v151 = *(void *)(v157 - 8);
  MEMORY[0x270FA5388](v157);
  uint64_t v158 = (uint64_t *)((char *)&v145 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A60FDE4(0, &qword_26AC71728, (void (*)(uint64_t))type metadata accessor for ArticleUserInfoModel);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v166 = (uint64_t)&v145 - v21;
  uint64_t v167 = type metadata accessor for ArticleUserInfoModel();
  uint64_t v165 = *(void *)(v167 - 8);
  MEMORY[0x270FA5388](v167);
  uint64_t v163 = (uint64_t)&v145 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A60FDE4(0, (unint64_t *)&unk_26AC6C610, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v161 = (uint64_t)&v145 - v24;
  uint64_t v25 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  uint64_t v159 = *(void *)(v25 - 8);
  uint64_t v160 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v149 = (uint64_t)&v145 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A60FDE4(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v164 = (uint64_t)&v145 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v147 = (uint64_t)&v145 - v30;
  uint64_t v31 = sub_20A8C3F00();
  uint64_t v169 = *(void *)(v31 - 8);
  uint64_t v170 = v31;
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v145 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  double v146 = (char *)&v145 - v35;
  uint64_t v175 = (int *)type metadata accessor for StocksActivityUserInfo();
  MEMORY[0x270FA5388](v175);
  uint64_t v37 = (char *)&v145 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  uint64_t v173 = (uint64_t)&v145 - v39;
  MEMORY[0x270FA5388](v40);
  uint64_t v42 = (char *)&v145 - v41;
  MEMORY[0x270FA5388](v43);
  uint64_t v45 = (char *)&v145 - v44;
  MEMORY[0x270FA5388](v46);
  uint64_t v48 = (char *)&v145 - v47;
  MEMORY[0x270FA5388](v49);
  uint64_t v51 = (char *)&v145 - v50;
  MEMORY[0x270FA5388](v52);
  uint64_t v54 = (char *)&v145 - v53;
  swift_bridgeObjectRetain();
  v55._countAndFlagsBits = a1;
  v55._object = a2;
  StocksActivityType.init(rawValue:)(v55);
  switch(v178)
  {
    case 1:
      uint64_t v62 = v176;
      uint64_t v61 = v177;
      uint64_t result = sub_20A60FA84(v177);
      if (!v62)
      {
        int v63 = v51[1];
        sub_20A60FD84((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
        if (v63 == 2)
        {
          sub_20A60FA30();
          swift_allocError();
          *(void *)uint64_t v64 = 0xD000000000000010;
          *(void *)(v64 + 8) = 0x800000020A905EB0;
          goto LABEL_41;
        }
        if (v63)
        {
          sub_20A60FA84(v61);
          uint64_t v120 = v147;
          sub_20A60FD18((uint64_t)&v48[v175[6]], v147, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
          sub_20A60FD84((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
          uint64_t v122 = v169;
          uint64_t v121 = v170;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v169 + 48))(v120, 1, v170) == 1)
          {
            sub_20A60FCBC(v120, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
            sub_20A60FA30();
            swift_allocError();
            long long v90 = xmmword_20A8E3D10;
            goto LABEL_26;
          }
          uint64_t v139 = *(void (**)(char *, uint64_t, uint64_t))(v122 + 32);
          uint64_t v140 = v146;
          v139(v146, v120, v121);
          sub_20A600FA0();
          uint64_t v142 = (char *)v174 + *(int *)(v141 + 48);
          v139((char *)v174, (uint64_t)v140, v121);
          type metadata accessor for ForYouSectionDescriptor();
          swift_storeEnumTagMultiPayload();
          uint64_t v143 = *MEMORY[0x263F7DB50];
          uint64_t v144 = sub_20A8CA180();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v144 - 8) + 104))(v142, v143, v144);
          type metadata accessor for StocksActivity(0);
        }
        else
        {
          sub_20A600FA0();
          uint64_t v100 = (char *)v174 + *(int *)(v99 + 48);
          type metadata accessor for ForYouSectionDescriptor();
          swift_storeEnumTagMultiPayload();
          uint64_t v101 = *MEMORY[0x263F7DB48];
          uint64_t v102 = sub_20A8CA180();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v102 - 8) + 104))(v100, v101, v102);
          type metadata accessor for StocksActivity(0);
        }
        return swift_storeEnumTagMultiPayload();
      }
      return result;
    case 2:
      uint64_t v65 = v176;
      uint64_t result = sub_20A60FA84(v177);
      if (!v65)
      {
        id v66 = v175;
        uint64_t v67 = &v45[v175[11]];
        if (v67[8]) {
          uint64_t v68 = 0;
        }
        else {
          uint64_t v68 = *(void *)v67;
        }
        uint64_t v69 = v164;
        sub_20A60FD18((uint64_t)&v45[v175[6]], v164, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
        uint64_t v71 = v169;
        uint64_t v70 = v170;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v169 + 48))(v69, 1, v170) == 1)
        {
          sub_20A60FCBC(v69, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
          uint64_t v72 = v161;
          sub_20A60FD18((uint64_t)&v45[v66[7]], v161, (unint64_t *)&unk_26AC6C610, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v159 + 48))(v72, 1, v160) == 1)
          {
            sub_20A60FCBC(v72, (unint64_t *)&unk_26AC6C610, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
            sub_20A60FA30();
            swift_allocError();
            *(_OWORD *)uint64_t v73 = xmmword_20A8E3D10;
            *(unsigned char *)(v73 + 16) = 1;
            swift_willThrow();
            return sub_20A60FD84((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
          }
          sub_20A60FD84((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
          uint64_t v115 = v149;
          sub_20A60FE38(v72, v149, type metadata accessor for StocksActivity.StockFeed.Series);
          sub_20A5A89F0(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
          uint64_t v117 = *(int *)(v116 + 48);
          uint64_t v118 = v115;
          uint64_t v119 = v174;
          sub_20A60FE38(v118, (uint64_t)v174, type metadata accessor for StocksActivity.StockFeed.Series);
          *(uint64_t *)((char *)v119 + v117) = v68;
          type metadata accessor for StocksActivity.StockFeed(0);
        }
        else
        {
          sub_20A60FD84((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
          uint64_t v103 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 32);
          v103(v33, v69, v70);
          sub_20A5A89F0(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
          uint64_t v105 = *(int *)(v104 + 48);
          double v106 = v174;
          v103((char *)v174, (uint64_t)v33, v70);
          *(uint64_t *)((char *)v106 + v105) = v68;
          type metadata accessor for StocksActivity.StockFeed(0);
        }
        swift_storeEnumTagMultiPayload();
        type metadata accessor for StocksActivity(0);
        return swift_storeEnumTagMultiPayload();
      }
      return result;
    case 3:
      uint64_t v74 = v176;
      uint64_t result = sub_20A60FA84(v177);
      if (!v74)
      {
        uint64_t v75 = &v42[v175[8]];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        swift_bridgeObjectRetain();
        sub_20A60FD84((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
        if (!v76)
        {
          sub_20A60FA30();
          swift_allocError();
          *(_OWORD *)uint64_t v64 = xmmword_20A8E3D00;
LABEL_41:
          *(unsigned char *)(v64 + 16) = 1;
          return swift_willThrow();
        }
        uint64_t v78 = v174;
        *uint64_t v174 = v77;
        v78[1] = v76;
        type metadata accessor for StocksActivity(0);
        return swift_storeEnumTagMultiPayload();
      }
      return result;
    case 4:
      uint64_t v79 = v173;
      uint64_t v80 = v176;
      uint64_t result = sub_20A60FA84(v177);
      if (v80) {
        return result;
      }
      uint64_t v81 = v175;
      uint64_t v82 = v166;
      sub_20A60FD18(v79 + v175[9], v166, &qword_26AC71728, (void (*)(uint64_t))type metadata accessor for ArticleUserInfoModel);
      uint64_t v83 = (int *)v167;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v165 + 48))(v82, 1, v167) == 1)
      {
        sub_20A60FCBC(v82, &qword_26AC71728, (void (*)(uint64_t))type metadata accessor for ArticleUserInfoModel);
        sub_20A60FA30();
        swift_allocError();
        *(_OWORD *)uint64_t v84 = xmmword_20A8E3CF0;
        *(unsigned char *)(v84 + 16) = 1;
        swift_willThrow();
        return sub_20A60FD84(v79, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
      }
      uint64_t v107 = v163;
      sub_20A60FE38(v82, v163, (uint64_t (*)(void))type metadata accessor for ArticleUserInfoModel);
      uint64_t v108 = v79 + v81[11];
      uint64_t v109 = *(void *)v108;
      if (*(unsigned char *)(v108 + 8)) {
        uint64_t v109 = 0;
      }
      if (*(unsigned char *)(v107 + v83[6]))
      {
        uint64_t v110 = v150;
        sub_20A60FD18(v107 + v83[5], v150, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
        uint64_t v111 = v171;
        uint64_t v87 = v172;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v171 + 48))(v110, 1, v172) != 1)
        {
          sub_20A60FD84(v107, (uint64_t (*)(void))type metadata accessor for ArticleUserInfoModel);
          sub_20A60FD84(v79, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
          uint64_t v113 = *(void (**)(char *, uint64_t, uint64_t))(v111 + 32);
          uint64_t v114 = v148;
          v113(v148, v110, v87);
          goto LABEL_39;
        }
        sub_20A60FCBC(v110, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
        sub_20A60FA30();
        swift_allocError();
        *(void *)uint64_t v112 = 0xD000000000000010;
        *(void *)(v112 + 8) = 0x800000020A905E90;
        *(unsigned char *)(v112 + 16) = 1;
        swift_willThrow();
        sub_20A60FD84(v107, (uint64_t (*)(void))type metadata accessor for ArticleUserInfoModel);
        return sub_20A60FD84(v79, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
      }
      uint64_t v177 = v109;
      if (*(void *)(v107 + v83[8] + 8)
        && (id v123 = objc_allocWithZone(MEMORY[0x263F6C648]),
            swift_bridgeObjectRetain(),
            uint64_t v124 = (void *)sub_20A8CE240(),
            swift_bridgeObjectRelease(),
            id v125 = objc_msgSend(v123, sel_initWithJSONRepresentation_, v124),
            v124,
            v125))
      {
        uint64_t v126 = v158;
        void *v158 = v125;
        uint64_t v127 = (unsigned int *)MEMORY[0x263F58CE0];
      }
      else
      {
        uint64_t v127 = (unsigned int *)MEMORY[0x263F58CD8];
        uint64_t v126 = v158;
      }
      uint64_t v128 = v151;
      (*(void (**)(void *, void, uint64_t))(v151 + 104))(v126, *v127, v157);
      uint64_t v129 = v172;
      uint64_t v130 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v171 + 56);
      uint64_t v131 = (uint64_t)v154;
      v130(v154, 1, 1, v172);
      swift_bridgeObjectRetain();
      uint64_t v132 = v152;
      sub_20A8C4B80();
      v130((char *)v131, 1, 1, v129);
      uint64_t v133 = (uint64_t)v156;
      uint64_t v134 = v158;
      sub_20A8C4D30();
      sub_20A60FCBC(v131, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
      (*(void (**)(char *, uint64_t))(v153 + 8))(v132, v155);
      (*(void (**)(void *, uint64_t))(v128 + 8))(v134, v157);
      sub_20A60FD84(v163, (uint64_t (*)(void))type metadata accessor for ArticleUserInfoModel);
      sub_20A60FD84(v173, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
      sub_20A42FC8C();
      uint64_t v136 = *(int *)(v135 + 48);
      uint64_t v137 = v174;
      uint64_t v138 = (char *)v174 + *(int *)(v135 + 64);
      sub_20A60FE38(v133, (uint64_t)v174, MEMORY[0x263F58AA8]);
      *(uint64_t *)((char *)v137 + v136) = v177;
      type metadata accessor for StocksActivity.Article(0);
      *(_OWORD *)uint64_t v138 = 0u;
      *((_OWORD *)v138 + 1) = 0u;
      *((void *)v138 + 4) = 0;
      swift_storeEnumTagMultiPayload();
      type metadata accessor for StocksActivity(0);
      return swift_storeEnumTagMultiPayload();
    case 5:
      uint64_t v85 = v176;
      uint64_t result = sub_20A60FA84(v177);
      if (!v85)
      {
        uint64_t v86 = v168;
        sub_20A60FD18((uint64_t)&v37[v175[10]], v168, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
        sub_20A60FD84((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
        uint64_t v88 = v171;
        uint64_t v87 = v172;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v171 + 48))(v86, 1, v172) == 1)
        {
          sub_20A60FCBC(v86, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
          sub_20A60FA30();
          swift_allocError();
          long long v90 = xmmword_20A8E3CE0;
LABEL_26:
          *(_OWORD *)uint64_t v89 = v90;
          *(unsigned char *)(v89 + 16) = 1;
          return swift_willThrow();
        }
        uint64_t v113 = *(void (**)(char *, uint64_t, uint64_t))(v88 + 32);
        uint64_t v114 = v162;
        v113(v162, v86, v87);
LABEL_39:
        v113((char *)v174, (uint64_t)v114, v87);
        type metadata accessor for StocksActivity(0);
        return swift_storeEnumTagMultiPayload();
      }
      return result;
    case 6:
      sub_20A60FA30();
      swift_allocError();
      *(void *)uint64_t v91 = a1;
      *(void *)(v91 + 8) = a2;
      *(unsigned char *)(v91 + 16) = 0;
      swift_bridgeObjectRetain();
      return swift_willThrow();
    default:
      uint64_t v56 = v176;
      uint64_t result = sub_20A60FA84(v177);
      if (!v56)
      {
        uint64_t v58 = (uint64_t *)&v54[v175[12]];
        uint64_t v59 = v58[1];
        if (v59 == 1)
        {
          sub_20A60FA30();
          swift_allocError();
          *(void *)uint64_t v60 = 0xD000000000000013;
          *(void *)(v60 + 8) = 0x800000020A905ED0;
          *(unsigned char *)(v60 + 16) = 1;
          swift_willThrow();
          return sub_20A60FD84((uint64_t)v54, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
        }
        else
        {
          uint64_t v93 = v58[2];
          uint64_t v92 = v58[3];
          uint64_t v94 = *v58;
          uint64_t v95 = &v54[v175[13]];
          uint64_t v97 = *(void *)v95;
          uint64_t v96 = *((void *)v95 + 1);
          sub_20A60FEA0(v94, v59);
          swift_bridgeObjectRetain();
          sub_20A60FD84((uint64_t)v54, (uint64_t (*)(void))type metadata accessor for StocksActivityUserInfo);
          uint64_t v98 = v174;
          *uint64_t v174 = v94;
          v98[1] = v59;
          v98[2] = v93;
          v98[3] = v92;
          v98[4] = v97;
          v98[5] = v96;
          type metadata accessor for StocksActivity(0);
          return swift_storeEnumTagMultiPayload();
        }
      }
      return result;
  }
}

unint64_t sub_20A60FA30()
{
  unint64_t result = qword_26AC819D0;
  if (!qword_26AC819D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC819D0);
  }
  return result;
}

uint64_t sub_20A60FA84(uint64_t a1)
{
  *(void *)&long long v8 = 1635017060;
  *((void *)&v8 + 1) = 0xE400000000000000;
  sub_20A8CF360();
  if (*(void *)(a1 + 16) && (unint64_t v2 = sub_20A4D1D30((uint64_t)v10), (v3 & 1) != 0))
  {
    sub_20A4ED764(*(void *)(a1 + 56) + 32 * v2, (uint64_t)&v8);
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  sub_20A4D43D4((uint64_t)v10);
  if (*((void *)&v9 + 1))
  {
    sub_20A441D28(&v8, v11);
    sub_20A4ED764((uint64_t)v11, (uint64_t)v10);
    if (swift_dynamicCast())
    {
      long long v4 = v8;
      sub_20A8C2060();
      swift_allocObject();
      sub_20A8C2050();
      type metadata accessor for StocksActivityUserInfo();
      sub_20A6103AC(&qword_26AC82FE0, (void (*)(uint64_t))type metadata accessor for StocksActivityUserInfo);
      sub_20A8C2040();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
      swift_release();
      return sub_20A531704(v4, *((unint64_t *)&v4 + 1));
    }
    else
    {
      sub_20A60FA30();
      swift_allocError();
      *(_OWORD *)uint64_t v7 = xmmword_20A8E3D20;
      *(unsigned char *)(v7 + 16) = 2;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    }
  }
  else
  {
    sub_20A60FD84((uint64_t)&v8, (uint64_t (*)(void))sub_20A42F348);
    sub_20A60FA30();
    swift_allocError();
    *(_OWORD *)uint64_t v6 = xmmword_20A8E3D20;
    *(unsigned char *)(v6 + 16) = 1;
    return swift_willThrow();
  }
}

uint64_t sub_20A60FCBC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A60FDE4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A60FD18(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A60FDE4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A60FD84(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A60FDE4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A60FE38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A60FEA0(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t StocksV2UserActivityDeserializer.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return v0;
}

uint64_t StocksV2UserActivityDeserializer.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);

  return swift_deallocClassInstance();
}

uint64_t sub_20A60FF1C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_20A60E534(a1, a2, a3, a4);
}

uint64_t StocksV2UserActivityDeserializer.deserialize(userActivity:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_userInfo);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_20A8CE180();

    id v7 = objc_msgSend(a1, sel_activityType);
    uint64_t v8 = sub_20A8CE280();
    uint64_t v10 = v9;

    id v11 = objc_msgSend(a1, sel_interaction);
    sub_20A60E534(v8, v10, v6, a2);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v13 = type metadata accessor for StocksActivity(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a2;
    uint64_t v17 = 0;
  }
  else
  {
    uint64_t v12 = type metadata accessor for StocksActivity(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v15 = v12;
    uint64_t v16 = a2;
    uint64_t v17 = 1;
  }

  return v14(v16, v17, 1, v15);
}

uint64_t sub_20A6100C8()
{
  return sub_20A6103AC((unint64_t *)&unk_26AC6C730, (void (*)(uint64_t))type metadata accessor for StocksActivity);
}

uint64_t sub_20A610114(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 4u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for DeserializationError(uint64_t a1)
{
  return sub_20A61013C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_20A61013C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 4u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s8StocksUI20DeserializationErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_20A610114(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DeserializationError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_20A610114(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_20A61013C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DeserializationError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_20A61013C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeserializationError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DeserializationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_20A6102CC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_20A6102D4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DeserializationError()
{
  return &type metadata for DeserializationError;
}

uint64_t type metadata accessor for StocksV2UserActivityDeserializer()
{
  return self;
}

uint64_t method lookup function for StocksV2UserActivityDeserializer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StocksV2UserActivityDeserializer);
}

uint64_t dispatch thunk of StocksV2UserActivityDeserializer.__allocating_init(stockMetadataManager:intentDeserializer:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of StocksV2UserActivityDeserializer.deserialize(activityType:from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of StocksV2UserActivityDeserializer.deserialize(activityType:from:interaction:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t sub_20A6103AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6103F4(uint64_t a1, uint64_t a2, char a3)
{
  __swift_project_boxed_opaque_existential_1(v3 + 3, v3[6]);
  uint64_t result = sub_20A8CD7A0();
  if (result)
  {
    unsigned __int8 v6 = (void *)v3[8];
    uint64_t v7 = (void *)sub_20A8CE240();
    unsigned int v8 = objc_msgSend(v6, sel_containsArticleID_, v7);

    if (v8)
    {
      long long v9 = (void *)sub_20A8CE240();
      objc_msgSend(v6, sel_removeArticleID_, v9);
    }
    uint64_t v10 = (void *)sub_20A8CE240();
    objc_msgSend(v6, sel_insertArticleID_atIndex_, v10, -(a3 & 1));

    return (uint64_t)objc_msgSend(v6, sel_save);
  }
  return result;
}

uint64_t sub_20A610520()
{
  uint64_t v1 = (char *)objc_msgSend(*(id *)(v0 + 16), sel_cachedSubscription);
  if (objc_getAssociatedObject(v1, v1 + 1))
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  sub_20A443438((uint64_t)&v9, (uint64_t)v11);
  if (!v12)
  {
    sub_20A44349C((uint64_t)v11);
    goto LABEL_9;
  }
  sub_20A4434F8();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    unint64_t v2 = 0;
    unint64_t v3 = 0;
    goto LABEL_10;
  }
  unint64_t v2 = v8;
  unint64_t v3 = (unint64_t)objc_msgSend(v8, sel_integerValue);
  if (v3 == -1) {
    goto LABEL_17;
  }
LABEL_10:
  if (objc_getAssociatedObject(v1, (const void *)~v3))
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  sub_20A443438((uint64_t)&v9, (uint64_t)v11);
  if (!v12)
  {
    sub_20A44349C((uint64_t)v11);
    goto LABEL_17;
  }
  sub_20A4434F8();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:

    int v6 = -83;
    return ((v3 + 1) ^ v6) & 1;
  }
  id v4 = v8;
  unsigned int v5 = objc_msgSend(v4, sel_integerValue);

  int v6 = v5 - 83;
  return ((v3 + 1) ^ v6) & 1;
}

uint64_t sub_20A6106DC()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudioNewsProxyCommandHandler()
{
  return self;
}

uint64_t sub_20A610748()
{
  return sub_20A6108E4();
}

uint64_t sub_20A610774()
{
  uint64_t v1 = *v0;
  sub_20A8CB840();
  sub_20A8CB6E0();
  char v2 = sub_20A8CB640();
  swift_release();
  if ((v2 & 1) == 0)
  {
    sub_20A8CB6D0();
    char v3 = sub_20A8CB640();
    swift_release();
    if ((v3 & 1) == 0) {
      return 1;
    }
  }
  if ((sub_20A610520() & 1) == 0) {
    return 0;
  }
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 24), *(void *)(v1 + 48));
  return sub_20A8CD7A0() & 1;
}

uint64_t sub_20A610834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = a5;
  uint64_t v15 = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(boxed_opaque_existential_1, a2, a5);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_20A42BEBC(&v13, v11 + 24);
  *(void *)(v11 + 64) = a3;
  return v11;
}

uint64_t sub_20A6108E4()
{
  sub_20A55CD34();
  sub_20A8CD550();
  id v0 = objc_msgSend(v8, sel_articleID);
  swift_unknownObjectRelease();
  uint64_t v1 = sub_20A8CE280();
  uint64_t v3 = v2;

  sub_20A8CB840();
  sub_20A8CB6E0();
  char v4 = sub_20A8CB640();
  swift_release();
  if (v4)
  {
    char v5 = 0;
LABEL_5:
    sub_20A6103F4(v1, v3, v5);
    return swift_bridgeObjectRelease();
  }
  sub_20A8CB6D0();
  char v6 = sub_20A8CB640();
  swift_release();
  if (v6)
  {
    char v5 = 1;
    goto LABEL_5;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A6109E8(void *a1)
{
  id v1 = objc_msgSend(a1, sel_activityType);
  uint64_t v2 = sub_20A8CE280();
  uint64_t v4 = v3;

  if (v2 == sub_20A8CE280() && v4 == v5) {
    char v7 = 1;
  }
  else {
    char v7 = sub_20A8CF760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20A610A90(void *a1)
{
  uint64_t v2 = sub_20A8C8800();
  uint64_t v30 = *(void *)(v2 - 8);
  uint64_t v31 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v5 - 8);
  char v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C2530();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v15 = (void *)sub_20A8CA070();
  id v16 = objc_msgSend(v15, sel_activityType);

  uint64_t v17 = sub_20A8CE280();
  uint64_t v19 = v18;

  if (v17 == sub_20A8CE280() && v19 == v20)
  {
    swift_bridgeObjectRelease_n();
LABEL_8:
    id v24 = objc_msgSend(a1, sel_webpageURL);
    if (v24)
    {
      uint64_t v25 = v24;
      sub_20A8C24E0();

      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v26(v7, v11, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
      {
        v26(v14, v7, v8);
        uint64_t v27 = v30;
        uint64_t v28 = v31;
        (*(void (**)(char *, void, uint64_t))(v30 + 104))(v4, *MEMORY[0x263F7D438], v31);
        sub_20A8C6060();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v28);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
        return 1;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    }
    sub_20A596854((uint64_t)v7);
    return 1;
  }
  char v22 = sub_20A8CF760();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if (v22) {
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_20A610E20()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BrowsingWebUserActivityHandler()
{
  return self;
}

uint64_t sub_20A610E84(void *a1)
{
  return sub_20A610A90(a1) & 1;
}

uint64_t sub_20A610EB0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F) {
    return swift_initClassMetadata2();
  }
  return result;
}

uint64_t sub_20A610F90(uint64_t a1)
{
  uint64_t v45 = a1;
  uint64_t v43 = *v1;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A616E64(0, &qword_26AC68D50, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v42 = (char *)v38 - v4;
  uint64_t v5 = sub_20A8C3F00();
  uint64_t v44 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v40 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A615BDC(0, (unint64_t *)&qword_26AC6AD38, MEMORY[0x263F7E0A8]);
  uint64_t v11 = v10;
  uint64_t v47 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v39 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v38 - v14;
  sub_20A616E64(0, &qword_26AC69DE8, (uint64_t (*)(uint64_t))sub_20A44DB30, v2);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v38 - v17;
  sub_20A44DB30(0);
  uint64_t v46 = v19;
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v41 = (char *)v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = v1;
  _OWORD v38[3] = v1[4];
  sub_20A8C8BE0();
  uint64_t v49 = v50;
  char v22 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
  sub_20A615BDC(0, (unint64_t *)&qword_26AC6A078, MEMORY[0x263F7D550]);
  uint64_t v24 = v23;
  v38[1] = sub_20A615B98(&qword_26AC6A070, (unint64_t *)&qword_26AC6A078, v22);
  _OWORD v38[2] = v24;
  uint64_t v25 = v44;
  sub_20A8C9490();
  swift_release();
  sub_20A616734(v45, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v9, 2, v5))
  {
    uint64_t v26 = v40;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v40, v9, v5);
    sub_20A8C3E20();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v5);
  }
  sub_20A8CBA60();
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v47 + 8);
  v27(v15, v11);
  uint64_t v28 = v46;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v46) == 1)
  {
    sub_20A615CD0((uint64_t)v18, &qword_26AC69DE8, (uint64_t (*)(uint64_t))sub_20A44DB30);
    uint64_t result = MEMORY[0x2105289B0](v48 + 2);
    if (result)
    {
      uint64_t v30 = result;
      uint64_t v31 = sub_20A8C2B70();
      uint64_t v32 = (uint64_t)v42;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v42, 1, 1, v31);
      sub_20A6A70D0(v32, v30);
      swift_unknownObjectRelease();
      return sub_20A615CD0(v32, &qword_26AC68D50, MEMORY[0x263F07A30]);
    }
  }
  else
  {
    uint64_t v33 = v41;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v41, v18, v28);
    uint64_t v34 = MEMORY[0x2105289B0](v48 + 2);
    if (v34)
    {
      uint64_t v35 = v34;
      sub_20A8C8BE0();
      uint64_t v49 = v50;
      uint64_t v36 = v39;
      sub_20A8C9490();
      swift_release();
      uint64_t v37 = (uint64_t)v42;
      sub_20A8CBB40();
      v27(v36, v11);
      sub_20A6A70D0(v37, v35);
      swift_unknownObjectRelease();
      sub_20A615CD0(v37, &qword_26AC68D50, MEMORY[0x263F07A30]);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v33, v28);
  }
  return result;
}

void sub_20A61164C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88);
  uint64_t v2 = *(void *)(*(void *)v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(v1 + 40))(v2, v1);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = v2;
  v4[3] = v1;
  v4[4] = v3;
  uint64_t v5 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A615BDC(0, (unint64_t *)&qword_26AC82480, MEMORY[0x263F7D538]);
  sub_20A615B98(&qword_26AC82478, (unint64_t *)&qword_26AC82480, v5);
  swift_retain();
  sub_20A8C8C00();
  swift_release();
  swift_release();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  uint64_t v6 = (void *)swift_allocObject();
  void v6[2] = v2;
  v6[3] = v1;
  void v6[4] = v0;
  uint64_t v7 = (void *)sub_20A8CD350();
  swift_release();
  sub_20A8CD340();
  swift_release();
}

uint64_t sub_20A611860()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void *)(result + *(void *)(*(void *)result + 120));
    swift_unknownObjectRetain();
    swift_release();
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    uint64_t v3 = &off_26BE68130;
    if (!Strong) {
      uint64_t v3 = 0;
    }
    *(void *)(v1 + 24) = v3;
    swift_unknownObjectWeakAssign();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_20A61192C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8CD2C0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v26 - v9;
  sub_20A616164();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A616734(a1, (uint64_t)v13, (uint64_t (*)(void))sub_20A616164);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1)
  {
    swift_unownedRetainStrong();
    uint64_t v14 = MEMORY[0x2105289B0](a2 + 16);
    swift_release();
    if (v14)
    {
      swift_unownedRetainStrong();
      type metadata accessor for StockSearchInteractor();
      sub_20A6A7178(v14);
      swift_release();
      swift_unknownObjectRelease();
    }
    swift_unownedRetainStrong();
    uint64_t v15 = MEMORY[0x2105289B0](a2 + 16);
    uint64_t result = swift_release();
    if (v15)
    {
      swift_unownedRetainStrong();
      uint64_t v17 = MEMORY[0x2105289B0](v15 + 16);
      if (v17)
      {
        uint64_t v18 = (void *)v17;
        *(void *)(swift_allocObject() + 16) = v17;
        id v19 = v18;
        sub_20A8C66A0();
        swift_release();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return swift_release();
      }
      else
      {
        swift_release();
        return swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v20(v10, v13, v4);
    swift_unownedRetainStrong();
    uint64_t v21 = MEMORY[0x2105289B0](a2 + 16);
    swift_release();
    if (v21)
    {
      uint64_t v27 = (void (*)(unint64_t, char *, uint64_t))v20;
      swift_unownedRetainStrong();
      uint64_t v22 = MEMORY[0x2105289B0](v21 + 16);
      if (v22)
      {
        uint64_t v23 = (void *)v22;
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
        unint64_t v24 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
        uint64_t v25 = swift_allocObject();
        *(void *)(v25 + 16) = v23;
        v27(v25 + v24, v7, v4);
        v23;
        sub_20A8C66A0();
        swift_unknownObjectRelease();
        swift_release();
      }
      swift_unknownObjectRelease();
      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  return result;
}

uint64_t sub_20A611CD8()
{
  (*(void (**)(void))(*(void *)(*(void *)v0 + 88) + 48))(*(void *)(*(void *)v0 + 80));
  uint64_t v1 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A615BDC(0, (unint64_t *)&qword_26AC82480, MEMORY[0x263F7D538]);
  sub_20A615B98(&qword_26AC82478, (unint64_t *)&qword_26AC82480, v1);
  sub_20A8C8C00();
  return swift_release();
}

uint64_t sub_20A611DEC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C7400();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v6 + 104))(v9, *MEMORY[0x263F7A360], v5, v7);
  sub_20A612018(a1, (uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v10 = sub_20A8C3F00();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v4, a1, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v4, 0, 2, v10);
  sub_20A615B50((unint64_t *)&qword_26AC75290, (void (*)(uint64_t))type metadata accessor for StockListSelectionModel);
  sub_20A8C5D80();
  return sub_20A615D40((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
}

uint64_t sub_20A612018(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a2;
  uint64_t v4 = sub_20A8C7400();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = sub_20A8C3F00();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  double v10 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v2 + *(void *)(*(void *)v2 + 144));
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, a1, v7, v10);
  uint64_t v12 = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v18, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v14 = (v9 + *(unsigned __int8 *)(v5 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15 + v13, v11, v7);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  sub_20A8C48E0();
  return swift_release();
}

uint64_t sub_20A61224C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *v3;
  uint64_t v29 = a3;
  uint64_t v30 = v6;
  uint64_t v7 = type metadata accessor for StockSearchMode(0);
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v28 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A616164();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (uint64_t *)((char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2) {
    uint64_t v16 = a1;
  }
  else {
    uint64_t v16 = 0;
  }
  if (a2) {
    uint64_t v17 = a2;
  }
  else {
    uint64_t v17 = 0xE000000000000000;
  }
  *uint64_t v15 = v16;
  v15[1] = v17;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A8C92D0();
  sub_20A615D40((uint64_t)v15, type metadata accessor for StocksActivity);
  sub_20A61263C(v16, v17);
  sub_20A8CD380();
  uint64_t v18 = sub_20A8CD2C0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v12, 1, v18) == 1)
  {
    sub_20A615D40((uint64_t)v12, (uint64_t (*)(void))sub_20A616164);
    uint64_t v19 = swift_allocObject();
    *(unsigned char *)(v19 + 16) = 0;
    uint64_t v20 = swift_allocObject();
    swift_weakInit();
    sub_20A616734(v29, (uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for StockSearchMode);
    unint64_t v21 = (*(unsigned __int8 *)(v28 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    unint64_t v22 = (v8 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v23 = (void *)swift_allocObject();
    uint64_t v24 = v30;
    _OWORD v23[2] = *(void *)(v30 + 80);
    v23[3] = *(void *)(v24 + 88);
    v23[4] = v20;
    sub_20A616324((uint64_t)v9, (uint64_t)v23 + v21, type metadata accessor for StockSearchMode);
    uint64_t v25 = (void *)((char *)v23 + v22);
    *uint64_t v25 = v16;
    v25[1] = v17;
    *(void *)((char *)v23 + ((v22 + 23) & 0xFFFFFFFFFFFFFFF8)) = v19;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_20A86FA9C(v16, v17, (uint64_t)sub_20A61638C, (uint64_t)v23);
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return sub_20A615D40((uint64_t)v12, (uint64_t (*)(void))sub_20A616164);
  }
}

uint64_t sub_20A61263C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_bridgeObjectRetain();
  sub_20A8C48E0();

  return swift_release();
}

uint64_t sub_20A6126D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v78 = a6;
  uint64_t v79 = a8;
  uint64_t v80 = a3;
  uint64_t v81 = a5;
  uint64_t v13 = sub_20A8C7FE0();
  uint64_t v72 = *(void *)(v13 - 8);
  uint64_t v73 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v71 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v64 - v16;
  uint64_t v18 = sub_20A8C40E0();
  uint64_t v70 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v68 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for StockSearchMode(0);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void *)(v21 + 64);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v69 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v64 - v24;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v64 = v17;
  uint64_t v65 = v18;
  uint64_t v76 = a2;
  unint64_t v77 = a7;
  uint64_t v27 = result;
  uint64_t v74 = (unsigned char *)(v79 + 16);
  uint64_t v75 = a1;
  uint64_t v28 = a1;
  uint64_t v29 = v80;
  uint64_t v30 = v81;
  uint64_t v79 = sub_20A61304C(v28, a2, v80, v81);
  uint64_t v82 = v79;
  uint64_t v31 = swift_allocObject();
  swift_weakInit();
  sub_20A616734(v30, (uint64_t)v25, type metadata accessor for StockSearchMode);
  unint64_t v32 = (*(unsigned __int8 *)(v21 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v33 = (void *)swift_allocObject();
  uint64_t v66 = a9;
  void v33[2] = a9;
  void v33[3] = a10;
  uint64_t v67 = a10;
  v33[4] = v31;
  sub_20A616324((uint64_t)v25, (uint64_t)v33 + v32, type metadata accessor for StockSearchMode);
  uint64_t v34 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A615BDC(0, (unint64_t *)&qword_26AC82480, MEMORY[0x263F7D538]);
  sub_20A615B98(&qword_26AC82478, (unint64_t *)&qword_26AC82480, v34);
  swift_retain();
  sub_20A8C8C00();
  swift_release();
  swift_release();
  uint64_t v35 = v29;
  if (*(void *)(v29 + 16))
  {
    uint64_t v36 = MEMORY[0x2105289B0](v27 + 16);
    uint64_t v37 = v77;
    uint64_t v38 = v78;
    goto LABEL_4;
  }
  uint64_t v38 = v78;
  uint64_t v37 = v77;
  uint64_t v43 = HIBYTE(v77) & 0xF;
  if ((v77 & 0x2000000000000000) == 0) {
    uint64_t v43 = v78 & 0xFFFFFFFFFFFFLL;
  }
  if (v43)
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v45 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_20A8C2370();

    sub_20A616E64(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_20A8D3DC0;
    *(void *)(v46 + 56) = MEMORY[0x263F8D310];
    *(void *)(v46 + 64) = sub_20A43F830();
    *(void *)(v46 + 32) = v38;
    *(void *)(v46 + 40) = v37;
    swift_bridgeObjectRetain();
    sub_20A8CE2B0();
    swift_bridgeObjectRelease();
    uint64_t v47 = (uint64_t)v71;
    sub_20A8C7FC0();
    uint64_t v48 = MEMORY[0x2105289B0](v27 + 16);
    if (v48)
    {
      uint64_t v49 = v48;
      type metadata accessor for StockSearchInteractor();
      swift_retain();
      sub_20A6A720C(v47, v49);
      swift_unknownObjectRelease();
      swift_release();
    }
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v47, v73);
    uint64_t v40 = v75;
    uint64_t v39 = v76;
  }
  else
  {
    uint64_t v50 = v69;
    sub_20A616734(v81, v69, type metadata accessor for StockSearchMode);
    uint64_t v51 = v70;
    uint64_t v52 = v65;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v50, 1, v65) == 1)
    {
      uint64_t v36 = MEMORY[0x2105289B0](v27 + 16);
LABEL_4:
      uint64_t v40 = v75;
      uint64_t v39 = v76;
      uint64_t v41 = v74;
      if (v36)
      {
        uint64_t v42 = v36;
        type metadata accessor for StockSearchInteractor();
        swift_retain();
        sub_20A6A7178(v42);
        swift_release();
        swift_unknownObjectRelease();
      }
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v68, v50, v52);
    type metadata accessor for Localized();
    uint64_t v53 = swift_getObjCClassFromMetadata();
    uint64_t v54 = self;
    id v55 = objc_msgSend(v54, sel_bundleForClass_, v53);
    uint64_t v81 = sub_20A8C2370();

    id v56 = objc_msgSend(v54, sel_bundleForClass_, v53);
    sub_20A8C2370();

    sub_20A616E64(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
    uint64_t v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = xmmword_20A8D3DC0;
    uint64_t v58 = sub_20A8C40A0();
    uint64_t v60 = v59;
    *(void *)(v57 + 56) = MEMORY[0x263F8D310];
    *(void *)(v57 + 64) = sub_20A43F830();
    *(void *)(v57 + 32) = v58;
    *(void *)(v57 + 40) = v60;
    sub_20A8CE2B0();
    swift_bridgeObjectRelease();
    uint64_t v61 = (uint64_t)v64;
    sub_20A8C7FD0();
    uint64_t v62 = MEMORY[0x2105289B0](v27 + 16);
    if (v62)
    {
      uint64_t v63 = v62;
      type metadata accessor for StockSearchInteractor();
      swift_retain();
      sub_20A6A720C(v61, v63);
      swift_unknownObjectRelease();
      swift_release();
    }
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v61, v73);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v68, v65);
    uint64_t v39 = v76;
    uint64_t v37 = v77;
    uint64_t v40 = v75;
  }
  uint64_t v41 = v74;
LABEL_18:
  swift_beginAccess();
  if ((*v41 & 1) == 0)
  {
    swift_beginAccess();
    *uint64_t v41 = 1;
    sub_20A613508(v38, v37, v40, v39, v35);
  }
  swift_release();
  return swift_release();
}

uint64_t sub_20A61304C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a1;
  uint64_t v8 = *v4;
  uint64_t v9 = sub_20A8C40E0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StockSearchMode(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A616734(a4, (uint64_t)v15, type metadata accessor for StockSearchMode);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
  {
    uint64_t v16 = *v4;
    uint64_t v27 = (uint64_t)v4 + *(void *)(*v4 + 112);
    uint64_t v17 = *(void *)(v16 + 120);
    uint64_t v26 = a3;
    uint64_t v18 = *(uint64_t *)((char *)v4 + v17);
    __swift_project_boxed_opaque_existential_1((void *)(v18 + 112), *(void *)(v18 + 136));
    sub_20A8C3600();
    __swift_project_boxed_opaque_existential_1((void *)(v18 + 112), *(void *)(v18 + 136));
    uint64_t v19 = sub_20A8C3690();
    uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, void))(*(void *)(v8 + 88) + 56))(v28, a2, v26, v12, v19, *(void *)(v8 + 80));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    uint64_t v21 = *(uint64_t *)((char *)v4 + *(void *)(*v4 + 120));
    __swift_project_boxed_opaque_existential_1((void *)(v21 + 112), *(void *)(v21 + 136));
    uint64_t v22 = sub_20A8C3690();
    uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, void))(*(void *)(v8 + 88) + 56))(v28, a2, a3, v12, v22, *(void *)(v8 + 80));
  }
  uint64_t v23 = v20;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v23;
}

uint64_t sub_20A61334C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StockSearchMode(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_20A616734(a3, (uint64_t)v9, type metadata accessor for StockSearchMode);
    uint64_t v11 = sub_20A8C40E0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11) == 1)
    {
      sub_20A8C5D50();
      sub_20A610F90((uint64_t)v6);
      swift_release();
      uint64_t v12 = (uint64_t (*)(void))type metadata accessor for StockListSelectionModel;
      uint64_t v13 = (uint64_t)v6;
    }
    else
    {
      swift_release();
      uint64_t v12 = type metadata accessor for StockSearchMode;
      uint64_t v13 = (uint64_t)v9;
    }
    return sub_20A615D40(v13, v12);
  }
  return result;
}

uint64_t sub_20A613508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a3;
  v10[3] = a4;
  v10[4] = a5;
  v10[5] = a1;
  v10[6] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A8C48E0();

  return swift_release();
}

uint64_t sub_20A6135DC(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 72))(a1, v4, v3);
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = (void *)swift_allocObject();
  void v6[2] = v4;
  v6[3] = v3;
  void v6[4] = v5;
  v6[5] = a1;
  uint64_t v7 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A615BDC(0, (unint64_t *)&qword_26AC82480, MEMORY[0x263F7D538]);
  sub_20A615B98(&qword_26AC82478, (unint64_t *)&qword_26AC82480, v7);
  swift_retain();
  swift_retain();
  sub_20A8C8C00();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_20A61377C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C9B80();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v12, a1, v8, v10);
  int v13 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v12, v8);
  if (v13 == *MEMORY[0x263F7D960])
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return sub_20A8CA3E0();
  }
  if (v13 == *MEMORY[0x263F7D958]) {
    return sub_20A8CA3E0();
  }
  if (v13 == *MEMORY[0x263F7D968])
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_20A6139F4(a3);
      sub_20A8C5D50();
      sub_20A610F90((uint64_t)v7);
      swift_release();
      return sub_20A615D40((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
    }
  }
  else
  {
    uint64_t result = sub_20A8CF520();
    __break(1u);
  }
  return result;
}

uint64_t sub_20A6139F4(uint64_t a1)
{
  uint64_t v2 = sub_20A8C7400();
  uint64_t v46 = *(void *)(v2 - 8);
  uint64_t v47 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v44 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C91A0();
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StockViewModel();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v44 - v11;
  uint64_t v13 = type metadata accessor for StockSearchModel();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v44 - v17;
  sub_20A44DB30(0);
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_20A8C3F00();
  uint64_t v52 = *(void *)(v24 - 8);
  uint64_t v53 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v50 = a1;
  uint64_t v51 = (char *)&v44 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8CA3C0();
  sub_20A8C8330();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  sub_20A616734((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockSearchModel);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_20A5159EC();
    uint64_t v27 = &v15[*(int *)(v26 + 48)];
    sub_20A616324((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StockViewModel);
    uint64_t v28 = sub_20A8C40E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  }
  else
  {
    sub_20A616324((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  }
  sub_20A616324((uint64_t)v9, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  sub_20A615D40((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StockSearchModel);
  uint64_t v30 = (uint64_t)v51;
  uint64_t v29 = v52;
  uint64_t v31 = v53;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v51, v12, v53);
  sub_20A615D40((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  sub_20A8CA3D0();
  uint64_t v33 = v48;
  uint64_t v32 = v49;
  int v34 = (*(uint64_t (**)(char *, uint64_t))(v48 + 88))(v6, v49);
  if (v34 == *MEMORY[0x263F7D660])
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v6, v32);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v30, v31);
  }
  if (v34 == *MEMORY[0x263F7D668])
  {
    uint64_t v35 = sub_20A8C7030();
    uint64_t v36 = sub_20A615B50(&qword_26763C718, MEMORY[0x263F7A030]);
    sub_20A614BE4(v35, v45, v30, v35, v36);
    uint64_t v37 = (unsigned int *)MEMORY[0x263F7A370];
LABEL_10:
    uint64_t v41 = v46;
    uint64_t v40 = v47;
    uint64_t v42 = (uint64_t)v44;
    (*(void (**)(char *, void, uint64_t))(v46 + 104))(v44, *v37, v47);
    sub_20A612018(v30, v42);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v40);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v30, v31);
  }
  if (v34 == *MEMORY[0x263F7D670])
  {
    uint64_t v38 = sub_20A8C6EA0();
    uint64_t v39 = sub_20A615B50(&qword_26AC69A10, MEMORY[0x263F79F28]);
    sub_20A614BE4(v38, v45, v30, v38, v39);
    uint64_t v37 = (unsigned int *)MEMORY[0x263F7A368];
    goto LABEL_10;
  }
  uint64_t result = sub_20A8CF520();
  __break(1u);
  return result;
}

uint64_t sub_20A61406C()
{
  return sub_20A8C5D20();
}

uint64_t sub_20A6140A4()
{
  uint64_t v0 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C5D50();
  sub_20A610F90((uint64_t)v2);
  return sub_20A615D40((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
}

uint64_t sub_20A61415C(uint64_t a1)
{
  (*(void (**)(uint64_t, void))(*(void *)(*(void *)v1 + 88) + 80))(a1, *(void *)(*(void *)v1 + 80));
  uint64_t v2 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A615BDC(0, (unint64_t *)&qword_26AC82480, MEMORY[0x263F7D538]);
  sub_20A615B98(&qword_26AC82478, (unint64_t *)&qword_26AC82480, v2);
  sub_20A8C8C00();
  return swift_release();
}

uint64_t sub_20A614270()
{
  uint64_t v0 = sub_20A8C67C0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_20A8C67B0();
  sub_20A616E64(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v4 = sub_20A8C4620();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, void, uint64_t))(v5 + 104))(v7 + v6, *MEMORY[0x263F24D48], v4);
  sub_20A615B50(&qword_26763CA20, MEMORY[0x263F799B0]);
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_20A8C6900();
  sub_20A615B50(&qword_26763CA38, MEMORY[0x263F79B00]);
  memset(v9, 0, sizeof(v9));
  sub_20A8C45D0();
  return sub_20A615D40((uint64_t)v9, (uint64_t (*)(void))sub_20A42F348);
}

uint64_t sub_20A61452C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v49 = a5;
  uint64_t v50 = a6;
  uint64_t v54 = a1;
  uint64_t v8 = sub_20A8C6EF0();
  uint64_t v52 = *(void *)(v8 - 8);
  uint64_t v53 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v51 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C67C0();
  uint64_t v47 = *(void *)(v10 - 8);
  uint64_t v48 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v46 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StockViewModel();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v16 = *(void *)(a2 + 16);
  uint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v55 = a3;
  if (v16)
  {
    *(void *)&v57[0] = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_20A68C494(0, v16, 0);
    uint64_t v18 = *(unsigned __int8 *)(v13 + 80);
    uint64_t v56 = a2;
    uint64_t v19 = a2 + ((v18 + 32) & ~v18);
    uint64_t v45 = v13;
    uint64_t v20 = *(void *)(v13 + 72);
    uint64_t v17 = *(void *)&v57[0];
    do
    {
      sub_20A616734(v19, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      uint64_t v21 = sub_20A8C3EC0();
      uint64_t v23 = v22;
      sub_20A615D40((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C494(0, *(void *)(v17 + 16) + 1, 1);
        uint64_t v17 = *(void *)&v57[0];
      }
      unint64_t v25 = *(void *)(v17 + 16);
      unint64_t v24 = *(void *)(v17 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_20A68C494(v24 > 1, v25 + 1, 1);
        uint64_t v17 = *(void *)&v57[0];
      }
      *(void *)(v17 + 16) = v25 + 1;
      uint64_t v26 = v17 + 16 * v25;
      *(void *)(v26 + 32) = v21;
      *(void *)(v26 + 40) = v23;
      v19 += v20;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    a3 = v55;
    uint64_t v13 = v45;
  }
  int64_t v27 = *(void *)(a3 + 16);
  uint64_t v28 = MEMORY[0x263F8EE78];
  if (v27)
  {
    *(void *)&v57[0] = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_20A68C494(0, v27, 0);
    uint64_t v29 = a3 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v56 = *(void *)(v13 + 72);
    uint64_t v28 = *(void *)&v57[0];
    do
    {
      sub_20A616734(v29, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      uint64_t v30 = sub_20A8C3EC0();
      uint64_t v32 = v31;
      sub_20A615D40((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C494(0, *(void *)(v28 + 16) + 1, 1);
        uint64_t v28 = *(void *)&v57[0];
      }
      unint64_t v34 = *(void *)(v28 + 16);
      unint64_t v33 = *(void *)(v28 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_20A68C494(v33 > 1, v34 + 1, 1);
        uint64_t v28 = *(void *)&v57[0];
      }
      *(void *)(v28 + 16) = v34 + 1;
      uint64_t v35 = v28 + 16 * v34;
      *(void *)(v35 + 32) = v30;
      *(void *)(v35 + 40) = v32;
      v29 += v56;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
  }
  *(void *)&v57[0] = v17;
  sub_20A4ACD80(v28);
  sub_20A615B50(&qword_26763CA20, MEMORY[0x263F799B0]);
  uint64_t v36 = v48;
  sub_20A8C4590();
  swift_bridgeObjectRetain();
  uint64_t v37 = v46;
  sub_20A8C67B0();
  sub_20A8C45B0();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v36);
  uint64_t v38 = v51;
  sub_20A8C6EE0();
  sub_20A616E64(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v39 = sub_20A8C4620();
  uint64_t v40 = *(void *)(v39 - 8);
  unint64_t v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, void, uint64_t))(v40 + 104))(v42 + v41, *MEMORY[0x263F24D40], v39);
  sub_20A615B50(&qword_26763CA28, MEMORY[0x263F79F58]);
  uint64_t v43 = v53;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v38, v43);
  sub_20A8C7480();
  sub_20A615B50(&qword_26763CA30, MEMORY[0x263F7A410]);
  memset(v57, 0, sizeof(v57));
  sub_20A8C45D0();
  return sub_20A615D40((uint64_t)v57, (uint64_t (*)(void))sub_20A42F348);
}

uint64_t sub_20A614BE4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v17 = a4;
  uint64_t v18 = a5;
  uint64_t v19 = a1;
  uint64_t v6 = *a2;
  uint64_t v7 = sub_20A8C3F00();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v13 = (v9 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = *(void *)(v6 + 80);
  *((void *)v14 + 3) = v17;
  *((void *)v14 + 4) = *(void *)(v6 + 88);
  *((void *)v14 + 5) = v18;
  *((void *)v14 + 6) = v11;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v14[v12], v10, v7);
  *(void *)&v14[v13] = v19;
  swift_retain();
  sub_20A8C48E0();
  swift_release();
  return swift_release();
}

uint64_t sub_20A614DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v62 = a4;
  uint64_t v63 = a1;
  uint64_t v60 = sub_20A8C6B00();
  uint64_t v58 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v55 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v56 = (char *)v42 - v12;
  uint64_t v13 = sub_20A8C40E0();
  uint64_t v53 = *(void *)(v13 - 8);
  uint64_t v54 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v52 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_20A8C6AF0();
  uint64_t v59 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v57 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_20A8C6810();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_20A8C4030();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_20A8C6800();
  uint64_t v51 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  unint64_t v25 = (char *)v42 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v64 = result;
    sub_20A8C3EC0();
    uint64_t v49 = a6;
    uint64_t v50 = a8;
    sub_20A8C3E70();
    sub_20A5D54EC((uint64_t)v18);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    sub_20A8C3EE0();
    sub_20A8C67E0();
    sub_20A616E64(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
    uint64_t v48 = v27;
    uint64_t v28 = sub_20A8C4620();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = *(unsigned __int8 *)(v29 + 80);
    uint64_t v31 = (v30 + 32) & ~v30;
    uint64_t v47 = v31 + *(void *)(v29 + 72);
    uint64_t v46 = v30 | 7;
    uint64_t v32 = swift_allocObject();
    long long v45 = xmmword_20A8D3DC0;
    *(_OWORD *)(v32 + 16) = xmmword_20A8D3DC0;
    unsigned int v44 = *MEMORY[0x263F24D48];
    uint64_t v43 = *(void (**)(uint64_t))(v29 + 104);
    v43(v32 + v31);
    sub_20A615B50(&qword_26AC69918, MEMORY[0x263F799D0]);
    v42[1] = 0x800000020A905FF0;
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v25, v23);
    __swift_project_boxed_opaque_existential_1((void *)(v64 + *(void *)(*(void *)v64 + 160)), *(void *)(v64 + *(void *)(*(void *)v64 + 160) + 24));
    unint64_t v33 = v52;
    sub_20A8C3600();
    char v34 = sub_20A8C4040();
    uint64_t v35 = v58;
    uint64_t v36 = (unsigned int *)MEMORY[0x263F79CB8];
    if ((v34 & 1) == 0) {
      uint64_t v36 = (unsigned int *)MEMORY[0x263F79CB0];
    }
    uint64_t v37 = v56;
    uint64_t v38 = v60;
    (*(void (**)(char *, void, uint64_t))(v58 + 104))(v56, *v36, v60);
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v55, v37, v38);
    uint64_t v39 = v57;
    sub_20A8C6AE0();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v54);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v38);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = v45;
    ((void (*)(uint64_t, void, uint64_t))v43)(v40 + v31, v44, v28);
    sub_20A615B50(&qword_26AC699A0, MEMORY[0x263F79CA8]);
    uint64_t v41 = v61;
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v39, v41);
    memset(v65, 0, sizeof(v65));
    sub_20A8C45D0();
    swift_release();
    return sub_20A615D40((uint64_t)v65, (uint64_t (*)(void))sub_20A42F348);
  }
  return result;
}

uint64_t sub_20A615550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_20A8C7400();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C70F0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C3EC0();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a3, v4);
  sub_20A8C70E0();
  sub_20A616E64(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v12 = sub_20A8C4620();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, void, uint64_t))(v13 + 104))(v15 + v14, *MEMORY[0x263F24D48], v12);
  sub_20A615B50(&qword_26763CA08, MEMORY[0x263F7A0A0]);
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_20A8C73A0();
  sub_20A615B50(&qword_26763CA10, MEMORY[0x263F7A300]);
  memset(v17, 0, sizeof(v17));
  sub_20A8C45D0();
  return sub_20A615D40((uint64_t)v17, (uint64_t (*)(void))sub_20A42F348);
}

uint64_t *sub_20A6158B8()
{
  uint64_t v1 = *v0;
  sub_20A4380C4((uint64_t)(v0 + 2));
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 112));
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(void *)(*v0 + 160));
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_20A615A20()
{
  sub_20A6158B8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockSearchInteractor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_20A615AA8(uint64_t a1, uint64_t a2)
{
  return sub_20A61415C(a2);
}

uint64_t sub_20A615AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A61690C(a3);
}

uint64_t sub_20A615ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A616DD4(a3);
}

uint64_t sub_20A615AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A616E58(a3);
}

uint64_t sub_20A615ACC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A615B04()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A615B44(uint64_t a1)
{
  return sub_20A61377C(a1, *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_20A615B50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A615B98(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A615BDC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A615BDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for StockSearchSectionDescriptor();
    v8[1] = type metadata accessor for StockSearchModel();
    v8[2] = sub_20A615B50(&qword_26AC78AC0, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
    void v8[3] = sub_20A615B50(&qword_26AC6F3E0, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A615CD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A616E64(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A615D40(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A615DA0()
{
  uint64_t v1 = sub_20A8C3F00();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = sub_20A8C7400();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_20A615EF0(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_20A8C3F00() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_20A8C7400() - 8);
  uint64_t v7 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_20A615550(a1, v1 + v4, v7);
}

uint64_t sub_20A615FC4()
{
  uint64_t v1 = sub_20A8C3F00();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_20A61609C(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = *(void *)(sub_20A8C3F00() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v1[6];
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_20A614DD8(a1, v9, (uint64_t)v1 + v8, v10, v3, v4, v5, v6);
}

void sub_20A616164()
{
  if (!qword_26763CA18)
  {
    sub_20A468C80();
    unint64_t v0 = sub_20A8CD370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763CA18);
    }
  }
}

uint64_t sub_20A6161C0()
{
  return swift_deallocObject();
}

uint64_t sub_20A6161D0()
{
  uint64_t v1 = *(void *)(type metadata accessor for StockSearchMode(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  uint64_t v3 = sub_20A8C40E0();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A616324(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A61638C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[3];
  uint64_t v9 = *(void *)(type metadata accessor for StockSearchMode(0) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_20A6126D4(a1, a2, a3, v3[4], (uint64_t)v3 + v10, *(void *)((char *)v3 + v11), *(void *)((char *)v3 + v11 + 8), *(void *)((char *)v3 + ((v11 + 23) & 0xFFFFFFFFFFFFFFF8)), v7, v8);
}

uint64_t sub_20A616460()
{
  uint64_t v1 = *(void *)(type metadata accessor for StockSearchMode(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  uint64_t v3 = sub_20A8C40E0();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }

  return swift_deallocObject();
}

uint64_t sub_20A616584(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for StockSearchMode(0) - 8);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_20A61334C(a1, v4, v5);
}

uint64_t sub_20A61660C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A61665C(uint64_t a1)
{
  return sub_20A61452C(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_20A61666C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A6166A4()
{
  return sub_20A614270();
}

uint64_t sub_20A6166AC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A6166E4()
{
  return sub_20A611860();
}

uint64_t sub_20A6166F0()
{
  swift_unownedRelease();

  return swift_deallocObject();
}

uint64_t sub_20A616728(uint64_t a1)
{
  return sub_20A61192C(a1, *(void *)(v1 + 32));
}

uint64_t sub_20A616734(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A61679C()
{
  uint64_t v1 = sub_20A8CD2C0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_20A616868()
{
  uint64_t v1 = *(void *)(sub_20A8CD2C0() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_20A55F8AC(v2, v3);
}

uint64_t sub_20A6168CC()
{
  return swift_deallocObject();
}

uint64_t sub_20A616904()
{
  return sub_20A56007C(*(void *)(v0 + 16));
}

uint64_t sub_20A616910(uint64_t a1, void *a2)
{
  uint64_t v30 = a1;
  uint64_t v3 = sub_20A8CC220();
  uint64_t v32 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_20A8CC250();
  uint64_t v6 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C40E0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StockSearchMode(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)a2 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_stockSearchMode;
  swift_beginAccess();
  sub_20A616734(v16, (uint64_t)v15, type metadata accessor for StockSearchMode);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
  {
LABEL_7:
    sub_20A44D17C();
    uint64_t v24 = (void *)sub_20A8CEBE0();
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = a2;
    aBlock[4] = sub_20A616E5C;
    aBlock[5] = v25;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_20A4713FC;
    void aBlock[3] = &block_descriptor_24;
    uint64_t v26 = _Block_copy(aBlock);
    id v27 = a2;
    swift_release();
    sub_20A8CC240();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_20A615B50(&qword_26AC677A0, MEMORY[0x263F8F030]);
    sub_20A616E64(0, (unint64_t *)&unk_26AC7F7A0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_20A4F6C4C();
    sub_20A8CF290();
    MEMORY[0x210526F10](0, v8, v5, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v31);
  }
  uint64_t v29 = a2;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
  uint64_t v17 = sub_20A8C4050();
  uint64_t v19 = v18;
  if (v17 != sub_20A8C4050() || v19 != v20)
  {
    char v22 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    a2 = v29;
    if (v22) {
      return result;
    }
    goto LABEL_7;
  }
  swift_bridgeObjectRelease_n();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_20A616DD4(uint64_t a1)
{
  uint64_t result = MEMORY[0x2105289B0](v1 + 16);
  if (result)
  {
    uint64_t v4 = (void *)MEMORY[0x2105289B0](result + 16);
    if (v4)
    {
      sub_20A616910(a1, v4);
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A616E5C()
{
  return sub_20A560200();
}

void sub_20A616E64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *sub_20A616ED0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    uint64_t v15 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20A8C3F00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C3E10();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_20A501660(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = (int *)type metadata accessor for StockSparklineViewModel(0);
    uint64_t v20 = *((void *)v19 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
    {
      sub_20A501660(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v22 = sub_20A8CDCD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v18, v22);
      uint64_t v23 = v19[5];
      uint64_t v24 = &v17[v23];
      uint64_t v25 = &v18[v23];
      *(void *)uint64_t v24 = *(void *)v25;
      v24[8] = v25[8];
      uint64_t v26 = v19[6];
      id v27 = &v17[v26];
      uint64_t v28 = &v18[v26];
      *(void *)id v27 = *(void *)v28;
      v27[8] = v28[8];
      v17[v19[7]] = v18[v19[7]];
      uint64_t v29 = v19[8];
      uint64_t v30 = &v17[v29];
      uint64_t v31 = &v18[v29];
      uint64_t v32 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      (*(void (**)(char *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
    }
    uint64_t v33 = a3[7];
    char v34 = (char *)a1 + v33;
    uint64_t v35 = (char *)a2 + v33;
    *(void *)char v34 = *(void *)((char *)a2 + v33);
    v34[8] = *((unsigned char *)a2 + v33 + 8);
    *((void *)v34 + 2) = *(void *)((char *)a2 + v33 + 16);
    unsigned char v34[24] = *((unsigned char *)a2 + v33 + 24);
    *((void *)v34 + 4) = *(void *)((char *)a2 + v33 + 32);
    v34[40] = *((unsigned char *)a2 + v33 + 40);
    uint64_t v36 = *(void *)((char *)a2 + v33 + 56);
    *((void *)v34 + 6) = *(void *)((char *)a2 + v33 + 48);
    *((void *)v34 + 7) = v36;
    uint64_t v37 = *(void *)((char *)a2 + v33 + 72);
    *((void *)v34 + 8) = *(void *)((char *)a2 + v33 + 64);
    *((void *)v34 + 9) = v37;
    uint64_t v38 = (int *)type metadata accessor for PriceViewModel();
    uint64_t v39 = v38[9];
    uint64_t v56 = &v34[v39];
    uint64_t v40 = &v35[v39];
    uint64_t v57 = a2;
    uint64_t v58 = a3;
    uint64_t v41 = sub_20A8C2EB0();
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
    uint64_t v15 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42(v56, v40, v41);
    uint64_t v43 = v38[10];
    unsigned int v44 = &v34[v43];
    long long v45 = &v35[v43];
    uint64_t v46 = sub_20A8C4030();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
    uint64_t v47 = v38[11];
    uint64_t v48 = &v34[v47];
    uint64_t v49 = &v35[v47];
    uint64_t v50 = sub_20A8C2990();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    uint64_t v51 = v58[8];
    uint64_t v52 = (char *)a1 + v51;
    uint64_t v53 = (char *)v57 + v51;
    uint64_t v54 = sub_20A8C3410();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
    *((unsigned char *)a1 + v58[9]) = *((unsigned char *)v57 + v58[9]);
  }
  return v15;
}

uint64_t sub_20A6173F4(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_20A8C3E10();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = a1 + a2[6];
  uint64_t v9 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    uint64_t v10 = sub_20A8CDCD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
    uint64_t v11 = v8 + *(int *)(v9 + 32);
    uint64_t v12 = sub_20A8C3D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = a1 + a2[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v15 = v13 + v14[9];
  uint64_t v16 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = v13 + v14[10];
  uint64_t v18 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = v13 + v14[11];
  uint64_t v20 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[8];
  uint64_t v22 = sub_20A8C3410();
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);

  return v23(v21, v22);
}

uint64_t sub_20A6176D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_20A8C3E10();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_20A501660(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  uint64_t v16 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v17 = *((void *)v16 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    sub_20A501660(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v19 = sub_20A8CDCD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v14, v15, v19);
    uint64_t v20 = v16[5];
    uint64_t v21 = &v14[v20];
    uint64_t v22 = &v15[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v16[6];
    uint64_t v24 = &v14[v23];
    uint64_t v25 = &v15[v23];
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    v14[v16[7]] = v15[v16[7]];
    uint64_t v26 = v16[8];
    id v27 = &v14[v26];
    uint64_t v28 = &v15[v26];
    uint64_t v29 = sub_20A8C3D00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v30 = a3[7];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  *(void *)uint64_t v31 = *(void *)(a2 + v30);
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(a2 + v30 + 8);
  *(void *)(v31 + 16) = *(void *)(a2 + v30 + 16);
  *(unsigned char *)(v31 + 24) = *(unsigned char *)(a2 + v30 + 24);
  *(void *)(v31 + 32) = *(void *)(a2 + v30 + 32);
  *(unsigned char *)(v31 + 40) = *(unsigned char *)(a2 + v30 + 40);
  uint64_t v33 = *(void *)(a2 + v30 + 56);
  *(void *)(v31 + 48) = *(void *)(a2 + v30 + 48);
  *(void *)(v31 + 56) = v33;
  uint64_t v34 = *(void *)(a2 + v30 + 72);
  *(void *)(v31 + 64) = *(void *)(a2 + v30 + 64);
  *(void *)(v31 + 72) = v34;
  uint64_t v35 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v36 = v35[9];
  uint64_t v37 = v31 + v36;
  uint64_t v38 = v32 + v36;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v39 = sub_20A8C2EB0();
  uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v40(v37, v38, v39);
  uint64_t v41 = v35[10];
  uint64_t v42 = v31 + v41;
  uint64_t v43 = v32 + v41;
  uint64_t v44 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
  uint64_t v45 = v35[11];
  uint64_t v46 = v31 + v45;
  uint64_t v47 = v32 + v45;
  uint64_t v48 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
  uint64_t v49 = v55[8];
  uint64_t v50 = a1 + v49;
  uint64_t v51 = v54 + v49;
  uint64_t v52 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
  uint64_t result = a1;
  *(unsigned char *)(a1 + v55[9]) = *(unsigned char *)(v54 + v55[9]);
  return result;
}

uint64_t sub_20A617BA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_20A8C3E10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_20A501660(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (unsigned char *)(a1 + v16);
  uint64_t v18 = (unsigned char *)(a2 + v16);
  uint64_t v19 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v21 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      uint64_t v61 = sub_20A8CDCD0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v61 - 8) + 24))(v17, v18, v61);
      uint64_t v62 = v19[5];
      uint64_t v63 = &v17[v62];
      uint64_t v64 = &v18[v62];
      uint64_t v65 = *(void *)v64;
      v63[8] = v64[8];
      *(void *)uint64_t v63 = v65;
      uint64_t v66 = v19[6];
      uint64_t v67 = &v17[v66];
      uint64_t v68 = &v18[v66];
      LOBYTE(v65) = v68[8];
      *(void *)uint64_t v67 = *(void *)v68;
      v67[8] = v65;
      v17[v19[7]] = v18[v19[7]];
      uint64_t v69 = v19[8];
      uint64_t v70 = &v17[v69];
      uint64_t v71 = &v18[v69];
      uint64_t v72 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 24))(v70, v71, v72);
      goto LABEL_13;
    }
    sub_20A6181D0((uint64_t)v17);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    sub_20A501660(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    memcpy(v17, v18, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v24 = sub_20A8CDCD0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v24 - 8) + 16))(v17, v18, v24);
  uint64_t v25 = v19[5];
  uint64_t v26 = &v17[v25];
  id v27 = &v18[v25];
  uint64_t v28 = *(void *)v27;
  v26[8] = v27[8];
  *(void *)uint64_t v26 = v28;
  uint64_t v29 = v19[6];
  uint64_t v30 = &v17[v29];
  uint64_t v31 = &v18[v29];
  LOBYTE(v28) = v31[8];
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v28;
  v17[v19[7]] = v18[v19[7]];
  uint64_t v32 = v19[8];
  uint64_t v33 = &v17[v32];
  uint64_t v34 = &v18[v32];
  uint64_t v35 = sub_20A8C3D00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
LABEL_13:
  uint64_t v37 = a3[7];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  uint64_t v40 = *(void *)(a2 + v37);
  *(unsigned char *)(v38 + 8) = *(unsigned char *)(v39 + 8);
  *(void *)uint64_t v38 = v40;
  uint64_t v41 = *(void *)(v39 + 16);
  *(unsigned char *)(v38 + 24) = *(unsigned char *)(v39 + 24);
  *(void *)(v38 + 16) = v41;
  uint64_t v42 = *(void *)(v39 + 32);
  *(unsigned char *)(v38 + 40) = *(unsigned char *)(v39 + 40);
  *(void *)(v38 + 32) = v42;
  *(void *)(v38 + 48) = *(void *)(v39 + 48);
  *(void *)(v38 + 56) = *(void *)(v39 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v38 + 64) = *(void *)(v39 + 64);
  *(void *)(v38 + 72) = *(void *)(v39 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v43 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v44 = v43[9];
  uint64_t v45 = v38 + v44;
  uint64_t v46 = v39 + v44;
  uint64_t v47 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 24))(v45, v46, v47);
  uint64_t v48 = v43[10];
  uint64_t v49 = v38 + v48;
  uint64_t v50 = v39 + v48;
  uint64_t v51 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 24))(v49, v50, v51);
  uint64_t v52 = v43[11];
  uint64_t v53 = v38 + v52;
  uint64_t v54 = v39 + v52;
  uint64_t v55 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 24))(v53, v54, v55);
  uint64_t v56 = a3[8];
  uint64_t v57 = a1 + v56;
  uint64_t v58 = a2 + v56;
  uint64_t v59 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 24))(v57, v58, v59);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_20A6181D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockSparklineViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A61822C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_20A8C3E10();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_20A501660(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[6];
  int v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  uint64_t v16 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v17 = *((void *)v16 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    sub_20A501660(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v19 = sub_20A8CDCD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v14, v15, v19);
    uint64_t v20 = v16[5];
    uint64_t v21 = &v14[v20];
    int v22 = &v15[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v16[6];
    uint64_t v24 = &v14[v23];
    uint64_t v25 = &v15[v23];
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    v14[v16[7]] = v15[v16[7]];
    uint64_t v26 = v16[8];
    id v27 = &v14[v26];
    uint64_t v28 = &v15[v26];
    uint64_t v29 = sub_20A8C3D00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
    (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v30 = a3[7];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  *(void *)uint64_t v31 = *(void *)(a2 + v30);
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(a2 + v30 + 8);
  *(void *)(v31 + 16) = *(void *)(a2 + v30 + 16);
  *(unsigned char *)(v31 + 24) = *(unsigned char *)(a2 + v30 + 24);
  *(void *)(v31 + 32) = *(void *)(a2 + v30 + 32);
  *(unsigned char *)(v31 + 40) = *(unsigned char *)(a2 + v30 + 40);
  long long v33 = *(_OWORD *)(a2 + v30 + 64);
  *(_OWORD *)(v31 + 48) = *(_OWORD *)(a2 + v30 + 48);
  *(_OWORD *)(v31 + 64) = v33;
  uint64_t v34 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v35 = v34[9];
  uint64_t v36 = v31 + v35;
  uint64_t v37 = v32 + v35;
  uint64_t v38 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = v34[10];
  uint64_t v40 = v31 + v39;
  uint64_t v41 = v32 + v39;
  uint64_t v42 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = v34[11];
  uint64_t v44 = v31 + v43;
  uint64_t v45 = v32 + v43;
  uint64_t v46 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = a3[8];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_20A6186C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_20A8C3E10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_20A501660(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (unsigned char *)(a1 + v16);
  uint64_t v18 = (unsigned char *)(a2 + v16);
  uint64_t v19 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v21 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      uint64_t v59 = sub_20A8CDCD0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v59 - 8) + 40))(v17, v18, v59);
      uint64_t v60 = v19[5];
      uint64_t v61 = &v17[v60];
      uint64_t v62 = &v18[v60];
      *(void *)uint64_t v61 = *(void *)v62;
      v61[8] = v62[8];
      uint64_t v63 = v19[6];
      uint64_t v64 = &v17[v63];
      uint64_t v65 = &v18[v63];
      *(void *)uint64_t v64 = *(void *)v65;
      v64[8] = v65[8];
      v17[v19[7]] = v18[v19[7]];
      uint64_t v66 = v19[8];
      uint64_t v67 = &v17[v66];
      uint64_t v68 = &v18[v66];
      uint64_t v69 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 40))(v67, v68, v69);
      goto LABEL_13;
    }
    sub_20A6181D0((uint64_t)v17);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    sub_20A501660(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    memcpy(v17, v18, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v24 = sub_20A8CDCD0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v24 - 8) + 32))(v17, v18, v24);
  uint64_t v25 = v19[5];
  uint64_t v26 = &v17[v25];
  id v27 = &v18[v25];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = v19[6];
  uint64_t v29 = &v17[v28];
  uint64_t v30 = &v18[v28];
  *(void *)uint64_t v29 = *(void *)v30;
  v29[8] = v30[8];
  v17[v19[7]] = v18[v19[7]];
  uint64_t v31 = v19[8];
  uint64_t v32 = &v17[v31];
  long long v33 = &v18[v31];
  uint64_t v34 = sub_20A8C3D00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
LABEL_13:
  uint64_t v36 = a3[7];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  *(void *)uint64_t v37 = *(void *)(a2 + v36);
  *(unsigned char *)(v37 + 8) = *(unsigned char *)(a2 + v36 + 8);
  *(void *)(v37 + 16) = *(void *)(a2 + v36 + 16);
  *(unsigned char *)(v37 + 24) = *(unsigned char *)(a2 + v36 + 24);
  *(void *)(v37 + 32) = *(void *)(a2 + v36 + 32);
  *(unsigned char *)(v37 + 40) = *(unsigned char *)(a2 + v36 + 40);
  uint64_t v39 = *(void *)(a2 + v36 + 56);
  *(void *)(v37 + 48) = *(void *)(a2 + v36 + 48);
  *(void *)(v37 + 56) = v39;
  swift_bridgeObjectRelease();
  uint64_t v40 = *(void *)(v38 + 72);
  *(void *)(v37 + 64) = *(void *)(v38 + 64);
  *(void *)(v37 + 72) = v40;
  swift_bridgeObjectRelease();
  uint64_t v41 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v42 = v41[9];
  uint64_t v43 = v37 + v42;
  uint64_t v44 = v38 + v42;
  uint64_t v45 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 40))(v43, v44, v45);
  uint64_t v46 = v41[10];
  uint64_t v47 = v37 + v46;
  uint64_t v48 = v38 + v46;
  uint64_t v49 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 40))(v47, v48, v49);
  uint64_t v50 = v41[11];
  uint64_t v51 = v37 + v50;
  uint64_t v52 = v38 + v50;
  uint64_t v53 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 40))(v51, v52, v53);
  uint64_t v54 = a3[8];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  uint64_t v57 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 40))(v55, v56, v57);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_20A618CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A618CE4);
}

uint64_t sub_20A618CE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3F00();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  sub_20A501660(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  sub_20A501660(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  uint64_t v15 = type metadata accessor for PriceViewModel();
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  uint64_t v16 = sub_20A8C3410();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_11;
  }
  unsigned int v18 = *(unsigned __int8 *)(a1 + a3[9]);
  if (v18 >= 2) {
    int v19 = ((v18 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v19 = -2;
  }
  if (v19 < 0) {
    int v19 = -1;
  }
  return (v19 + 1);
}

uint64_t sub_20A618F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A618F44);
}

uint64_t sub_20A618F44(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_20A8C3F00();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_20A501660(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      sub_20A501660(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[6];
      }
      else
      {
        uint64_t v17 = type metadata accessor for PriceViewModel();
        if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = *(void *)(v17 - 8);
          uint64_t v15 = a4[7];
        }
        else
        {
          uint64_t result = sub_20A8C3410();
          if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
          {
            *(unsigned char *)(a1 + a4[9]) = a2 + 2;
            return result;
          }
          uint64_t v10 = result;
          uint64_t v14 = *(void *)(result - 8);
          uint64_t v15 = a4[8];
        }
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for StockViewModel()
{
  uint64_t result = qword_26AC6DA48;
  if (!qword_26AC6DA48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A6191BC()
{
  sub_20A8C3F00();
  if (v0 <= 0x3F)
  {
    sub_20A501660(319, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    if (v1 <= 0x3F)
    {
      sub_20A501660(319, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
      if (v2 <= 0x3F)
      {
        type metadata accessor for PriceViewModel();
        if (v3 <= 0x3F)
        {
          sub_20A8C3410();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for WatchState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 2;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x20A619434);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = (v7 + 2147483646) & 0x7FFFFFFF;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for WatchState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x20A61951CLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_20A619544(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *sub_20A619560(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchState()
{
  return &type metadata for WatchState;
}

uint64_t sub_20A619590()
{
  return MEMORY[0x263F8D320];
}

BOOL sub_20A61959C(unsigned char *a1, unsigned __int8 *a2)
{
  if (*a1 == 2) {
    return *a2 == 2;
  }
  else {
    return *a2 != 2;
  }
}

uint64_t sub_20A6195BC()
{
  if (*v0) {
    return 0x6863746157746F6ELL;
  }
  else {
    return 0x676E696863746177;
  }
}

uint64_t sub_20A619600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A61A5C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A619628(uint64_t a1)
{
  unint64_t v2 = sub_20A61A8CC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A619664(uint64_t a1)
{
  unint64_t v2 = sub_20A61A8CC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20A6196A0(void *a1, unsigned __int8 a2)
{
  int v3 = a2;
  sub_20A61A974(0, &qword_26763CA58, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v8 = &v10[-v7];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A61A8CC();
  sub_20A8CF8F0();
  if (v3 == 2) {
    v10[15] = 1;
  }
  else {
    v10[14] = 0;
  }
  sub_20A8CF6B0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_20A619830@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_20A61A6CC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_20A61985C(void *a1)
{
  return sub_20A6196A0(a1, *v1);
}

uint64_t sub_20A619878@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_20A8C3E20();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20A6198A0(uint64_t a1, uint64_t a2)
{
  uint64_t v102 = a1;
  uint64_t v103 = a2;
  sub_20A606574();
  uint64_t v93 = *(void *)(v2 - 8);
  uint64_t v94 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v92 = &v83[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v4);
  uint64_t v91 = &v83[-v5];
  uint64_t v6 = type metadata accessor for StockSparklineViewModel(0);
  uint64_t v97 = *(void *)(v6 - 8);
  uint64_t v98 = v6;
  MEMORY[0x270FA5388](v6);
  long long v90 = &v83[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A61A3F0(0, qword_26AC754A8, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  uint64_t v96 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v99 = &v83[-v9];
  sub_20A501660(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v95 = &v83[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = &v83[-v13];
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = &v83[-v16];
  uint64_t v18 = sub_20A8C3E10();
  uint64_t v100 = *(void *)(v18 - 8);
  uint64_t v101 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = &v83[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
  sub_20A61A3F0(0, (unint64_t *)&qword_26AC67658, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  uint64_t v23 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = &v83[-v24];
  sub_20A501660(0, &qword_26AC68FB0, v21);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v28 = &v83[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = &v83[-v30];
  double v33 = MEMORY[0x270FA5388](v32);
  uint64_t v35 = &v83[-v34];
  uint64_t v36 = v102;
  uint64_t v37 = v103;
  if ((MEMORY[0x21051C160](v33) & 1) == 0) {
    return 0;
  }
  uint64_t v88 = v17;
  uint64_t v89 = v28;
  uint64_t v86 = v20;
  uint64_t v87 = v14;
  uint64_t v38 = type metadata accessor for StockViewModel();
  uint64_t v39 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
  sub_20A61A4B0(v36 + *(int *)(v38 + 20), (uint64_t)v35, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  sub_20A61A4B0(v37 + *(int *)(v38 + 20), (uint64_t)v31, &qword_26AC68FB0, v39);
  uint64_t v40 = (uint64_t)&v25[*(int *)(v23 + 48)];
  sub_20A61A4B0((uint64_t)v35, (uint64_t)v25, &qword_26AC68FB0, v39);
  sub_20A61A4B0((uint64_t)v31, v40, &qword_26AC68FB0, v39);
  uint64_t v42 = v100;
  uint64_t v41 = v101;
  uint64_t v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v100 + 48);
  uint64_t v44 = (uint64_t)v31;
  if (v43((uint64_t)v25, 1, v101) == 1)
  {
    uint64_t v45 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
    sub_20A61A454((uint64_t)v31, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    sub_20A61A454((uint64_t)v35, &qword_26AC68FB0, v45);
    if (v43(v40, 1, v41) == 1)
    {
      sub_20A61A454((uint64_t)v25, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      goto LABEL_9;
    }
LABEL_7:
    uint64_t v52 = (unint64_t *)&qword_26AC67658;
    uint64_t v53 = &qword_26AC68FB0;
    uint64_t v54 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
    uint64_t v55 = (uint64_t)v25;
LABEL_15:
    sub_20A61A51C(v55, v52, v53, v54);
    return 0;
  }
  uint64_t v46 = (uint64_t)v25;
  uint64_t v47 = (uint64_t)v25;
  uint64_t v48 = (uint64_t)v89;
  sub_20A61A4B0(v46, (uint64_t)v89, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  if (v43(v40, 1, v41) == 1)
  {
    uint64_t v49 = (unsigned char *)v47;
    uint64_t v50 = v42;
    uint64_t v51 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
    sub_20A61A454(v44, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    sub_20A61A454((uint64_t)v35, &qword_26AC68FB0, v51);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v41);
    uint64_t v25 = v49;
    goto LABEL_7;
  }
  uint64_t v56 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v42 + 32);
  uint64_t v85 = v35;
  uint64_t v57 = v44;
  uint64_t v58 = v86;
  v56(v86, v40, v41);
  sub_20A61A578((unint64_t *)&unk_26AC68FA0, MEMORY[0x263F7AEF0]);
  int v84 = sub_20A8CE210();
  uint64_t v59 = *(void (**)(unsigned char *, uint64_t))(v42 + 8);
  v59(v58, v41);
  uint64_t v60 = v48;
  uint64_t v61 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
  sub_20A61A454(v57, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  sub_20A61A454((uint64_t)v85, &qword_26AC68FB0, v61);
  v59((unsigned char *)v60, v41);
  sub_20A61A454(v47, &qword_26AC68FB0, v61);
  if ((v84 & 1) == 0) {
    return 0;
  }
LABEL_9:
  uint64_t v62 = v102;
  uint64_t v63 = (uint64_t)v88;
  sub_20A61A4B0(v102 + *(int *)(v38 + 24), (uint64_t)v88, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  uint64_t v101 = v38;
  uint64_t v64 = (uint64_t)v87;
  sub_20A61A4B0(v103 + *(int *)(v38 + 24), (uint64_t)v87, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  uint64_t v65 = v99;
  uint64_t v66 = (uint64_t)&v99[*(int *)(v96 + 48)];
  sub_20A61A4B0(v63, (uint64_t)v99, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  sub_20A61A4B0(v64, v66, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  uint64_t v67 = v98;
  uint64_t v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48);
  if (v68((uint64_t)v65, 1, v98) != 1)
  {
    uint64_t v69 = v95;
    sub_20A61A4B0((uint64_t)v65, (uint64_t)v95, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    if (v68(v66, 1, v67) == 1)
    {
      sub_20A61A454(v64, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
      sub_20A61A454(v63, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
      sub_20A6181D0((uint64_t)v69);
      goto LABEL_14;
    }
    uint64_t v71 = v90;
    sub_20A458E3C(v66, (uint64_t)v90);
    uint64_t v72 = v91;
    sub_20A8CDCC0();
    uint64_t v73 = v92;
    sub_20A8CDCC0();
    sub_20A8CDDA0();
    uint64_t v74 = (void (*)(uint64_t))MEMORY[0x263F7CB58];
    sub_20A61A578(&qword_26AC7F510, MEMORY[0x263F7CB58]);
    sub_20A61A578(&qword_26AC7F500, v74);
    sub_20A61A578(&qword_26AC7F508, v74);
    char v75 = sub_20A8CE080();
    uint64_t v76 = v94;
    unint64_t v77 = *(void (**)(unsigned char *, uint64_t))(v93 + 8);
    v77(v73, v94);
    v77(v72, v76);
    sub_20A6181D0((uint64_t)v71);
    sub_20A61A454((uint64_t)v87, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    sub_20A61A454((uint64_t)v88, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    sub_20A6181D0((uint64_t)v69);
    sub_20A61A454((uint64_t)v65, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    if (v75) {
      goto LABEL_19;
    }
    return 0;
  }
  sub_20A61A454(v64, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  sub_20A61A454(v63, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  if (v68(v66, 1, v67) != 1)
  {
LABEL_14:
    uint64_t v52 = qword_26AC754A8;
    uint64_t v53 = &qword_26AC754A0;
    uint64_t v54 = (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel;
    uint64_t v55 = (uint64_t)v65;
    goto LABEL_15;
  }
  sub_20A61A454((uint64_t)v65, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
LABEL_19:
  uint64_t v78 = v101;
  uint64_t v79 = v103;
  if ((sub_20A5EEDD4(v62 + *(int *)(v101 + 28), v103 + *(int *)(v101 + 28)) & 1) == 0) {
    return 0;
  }
  sub_20A8C3410();
  sub_20A61A578((unint64_t *)&qword_26AC68E10, MEMORY[0x263F7AB98]);
  sub_20A8CE570();
  sub_20A8CE570();
  if (v105 != v104) {
    return 0;
  }
  uint64_t v80 = *(int *)(v78 + 36);
  BOOL v81 = *(unsigned char *)(v79 + v80) == 2;
  unsigned int v82 = !v81;
  if (*(unsigned char *)(v62 + v80) == 2) {
    return v81;
  }
  else {
    return v82;
  }
}

void sub_20A61A3F0(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_20A501660(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_20A61A454(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A501660(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A61A4B0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A501660(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A61A51C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A61A3F0(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_20A61A578(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A61A5C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E696863746177 && a2 == 0xE800000000000000;
  if (v2 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6863746157746F6ELL && a2 == 0xEB00000000676E69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_20A61A6CC(void *a1)
{
  sub_20A61A974(0, &qword_26763CA40, MEMORY[0x263F8E040]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v13[-v6];
  uint64_t v8 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A61A8CC();
  sub_20A8CF8E0();
  if (!v1)
  {
    v13[15] = 0;
    sub_20A8CF5E0();
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    if (v11)
    {
      uint64_t v8 = 0;
LABEL_8:
      (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      return v8;
    }
    v13[14] = 1;
    sub_20A8CF5E0();
    uint64_t v8 = v12;
    swift_bridgeObjectRelease();
    if (v8)
    {
      uint64_t v8 = 2;
      goto LABEL_8;
    }
    sub_20A61A920();
    swift_allocError();
    swift_willThrow();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

unint64_t sub_20A61A8CC()
{
  unint64_t result = qword_26763CA48;
  if (!qword_26763CA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CA48);
  }
  return result;
}

unint64_t sub_20A61A920()
{
  unint64_t result = qword_26763CA50;
  if (!qword_26763CA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CA50);
  }
  return result;
}

void sub_20A61A974(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A61A8CC();
    unint64_t v7 = a3(a1, &type metadata for WatchState.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for WatchState.DecodingError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A61AA74);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchState.DecodingError()
{
  return &type metadata for WatchState.DecodingError;
}

unsigned char *storeEnumTagSinglePayload for WatchState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A61AB78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchState.CodingKeys()
{
  return &type metadata for WatchState.CodingKeys;
}

unint64_t sub_20A61ABB4()
{
  unint64_t result = qword_26763CA60;
  if (!qword_26763CA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CA60);
  }
  return result;
}

unint64_t sub_20A61AC0C()
{
  unint64_t result = qword_26763CA68;
  if (!qword_26763CA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CA68);
  }
  return result;
}

unint64_t sub_20A61AC64()
{
  unint64_t result = qword_26763CA70;
  if (!qword_26763CA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CA70);
  }
  return result;
}

unint64_t sub_20A61ACBC()
{
  unint64_t result = qword_26763CA78;
  if (!qword_26763CA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CA78);
  }
  return result;
}

uint64_t *sub_20A61AD10(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_20A8C3F00();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      sub_20A4D4A5C();
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t sub_20A61AE98(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_20A8C3F00();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_20A61AF70(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C3F00();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    sub_20A4D4A5C();
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

void *sub_20A61B0A8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C3F00();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_20A4D4A5C();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_20A61B25C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_20A8C3F00();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    sub_20A4D4A5C();
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_20A61B36C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_20A8C3F00();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    sub_20A4D4A5C();
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_20A61B500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A61B514);
}

uint64_t sub_20A61B514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_20A4D4A5C();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_20A61B5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A61B5D8);
}

uint64_t sub_20A61B5D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_20A4D4A5C();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for CreateWatchlistViewModel()
{
  uint64_t result = qword_26763CA80;
  if (!qword_26763CA80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A61B6CC()
{
  sub_20A4D4A5C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_20A61B764@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_20A8C2830();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C2820();
  uint64_t v8 = sub_20A8C2810();
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v8;
  a2[1] = v10;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v12 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v13 = sub_20A8C2370();
  uint64_t v15 = v14;

  a2[2] = v13;
  a2[3] = v15;
  uint64_t WatchlistViewModel = type metadata accessor for CreateWatchlistViewModel();
  return sub_20A453688(a1, (uint64_t)a2 + *(int *)(WatchlistViewModel + 24));
}

BOOL sub_20A61B908(void *a1, void *a2)
{
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A61BD24();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4D4A5C();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v34 - v16;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v34 - v19;
  if (*a1 == *a2 && a1[1] == a2[1] || (char v21 = sub_20A8CF760(), result = 0, (v21 & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (v23 = sub_20A8CF760(), BOOL result = 0, (v23 & 1) != 0))
    {
      uint64_t v35 = v7;
      uint64_t v24 = v5;
      uint64_t WatchlistViewModel = type metadata accessor for CreateWatchlistViewModel();
      sub_20A44D308((uint64_t)a1 + *(int *)(WatchlistViewModel + 24), (uint64_t)v20);
      uint64_t v26 = *(int *)(WatchlistViewModel + 24);
      uint64_t v27 = v24;
      sub_20A44D308((uint64_t)a2 + v26, (uint64_t)v17);
      uint64_t v28 = (uint64_t)&v11[*(int *)(v9 + 48)];
      sub_20A44D308((uint64_t)v20, (uint64_t)v11);
      sub_20A44D308((uint64_t)v17, v28);
      uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
      if (v29((uint64_t)v11, 1, v4) == 1)
      {
        sub_20A61BD88((uint64_t)v17, (uint64_t (*)(void))sub_20A4D4A5C);
        sub_20A61BD88((uint64_t)v20, (uint64_t (*)(void))sub_20A4D4A5C);
        if (v29(v28, 1, v4) == 1)
        {
          sub_20A61BD88((uint64_t)v11, (uint64_t (*)(void))sub_20A4D4A5C);
          return 1;
        }
      }
      else
      {
        sub_20A44D308((uint64_t)v11, (uint64_t)v14);
        if (v29(v28, 1, v4) != 1)
        {
          uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 32);
          uint64_t v31 = v35;
          v30(v35, v28, v4);
          sub_20A61BDE8();
          char v32 = sub_20A8CE210();
          double v33 = *(void (**)(char *, uint64_t))(v27 + 8);
          v33(v31, v4);
          sub_20A61BD88((uint64_t)v17, (uint64_t (*)(void))sub_20A4D4A5C);
          sub_20A61BD88((uint64_t)v20, (uint64_t (*)(void))sub_20A4D4A5C);
          v33(v14, v4);
          sub_20A61BD88((uint64_t)v11, (uint64_t (*)(void))sub_20A4D4A5C);
          return (v32 & 1) != 0;
        }
        sub_20A61BD88((uint64_t)v17, (uint64_t (*)(void))sub_20A4D4A5C);
        sub_20A61BD88((uint64_t)v20, (uint64_t (*)(void))sub_20A4D4A5C);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v4);
      }
      sub_20A61BD88((uint64_t)v11, (uint64_t (*)(void))sub_20A61BD24);
      return 0;
    }
  }
  return result;
}

void sub_20A61BD24()
{
  if (!qword_26763CA90)
  {
    sub_20A4D4A5C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763CA90);
    }
  }
}

uint64_t sub_20A61BD88(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_20A61BDE8()
{
  unint64_t result = qword_26AC68FC8;
  if (!qword_26AC68FC8)
  {
    sub_20A8C3F00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC68FC8);
  }
  return result;
}

uint64_t sub_20A61BE40()
{
  swift_release();
  sub_20A61C978(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HeadlineOpenInNewWindowCommandHandler()
{
  return self;
}

uint64_t sub_20A61BEA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A61C010(a4);
}

BOOL sub_20A61BECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_20A8CD4F0();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v9, a4, v5, v7);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
  int v11 = *MEMORY[0x263F59C40];
  if (v10 == *MEMORY[0x263F59C40])
  {
    (*(void (**)(char *, uint64_t))(v6 + 96))(v9, v5);
    swift_unknownObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return v10 == v11;
}

uint64_t sub_20A61C010(uint64_t a1)
{
  uint64_t v47 = sub_20A8CA640();
  uint64_t v57 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v58 = (uint64_t *)((char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v55 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v55);
  uint64_t v49 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C5390();
  uint64_t v53 = *(void *)(v4 - 8);
  uint64_t v54 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v50 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C5920();
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C4DA0();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v48 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8C2530();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v45 - v19;
  uint64_t v21 = sub_20A8CD4F0();
  uint64_t v22 = *(void *)(v21 - 8);
  double v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (id *)((char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, uint64_t, uint64_t, double))(v22 + 16))(v25, a1, v21, v23);
  if ((*(unsigned int (**)(id *, uint64_t))(v22 + 88))(v25, v21) != *MEMORY[0x263F59C40]) {
    return (*(uint64_t (**)(id *, uint64_t))(v22 + 8))(v25, v21);
  }
  (*(void (**)(id *, uint64_t))(v22 + 96))(v25, v21);
  id v46 = *v25;
  id v26 = objc_msgSend(v46, sel_routeURL);
  if (!v26)
  {
    uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v28(v20, 1, 1, v11);
    goto LABEL_7;
  }
  uint64_t v27 = v26;
  sub_20A8C24E0();

  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v14, v11);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v28(v20, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v20, 1, v11) == 1)
  {
LABEL_7:
    uint64_t v31 = (uint64_t)v48;
    uint64_t v30 = (uint64_t)v49;
    uint64_t v32 = v47;
    sub_20A61CA00((uint64_t)v20, (uint64_t (*)(void))sub_20A4845D0);
    swift_unknownObjectRetain();
    sub_20A8C58F0();
    v28(v17, 1, 1, v11);
    uint64_t v34 = v53;
    uint64_t v33 = v54;
    uint64_t v35 = v50;
    (*(void (**)(char *, void, uint64_t))(v53 + 104))(v50, *MEMORY[0x263F58CD8], v54);
    sub_20A8C4D60();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v33);
    sub_20A61CA00((uint64_t)v17, (uint64_t (*)(void))sub_20A4845D0);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v52);
    uint64_t v36 = qword_26BE5EDA0;
    sub_20A42FC8C();
    uint64_t v38 = *(int *)(v37 + 48);
    uint64_t v39 = v30 + *(int *)(v37 + 64);
    sub_20A61C884(v31, v30);
    *(void *)(v30 + v38) = v36;
    type metadata accessor for StocksActivity.Article(0);
    *(_OWORD *)uint64_t v39 = 0u;
    *(_OWORD *)(v39 + 16) = 0u;
    *(void *)(v39 + 32) = 0;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_20A61C8E8(v56 + 24, (uint64_t)&v59);
    if (v60)
    {
      __swift_project_boxed_opaque_existential_1(&v59, v60);
      uint64_t v40 = sub_20A8C8DD0();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v59);
      uint64_t v41 = v58;
      if (v40)
      {
LABEL_13:
        *uint64_t v41 = v40;
        uint64_t v44 = v57 + 104;
        (*(void (**)(uint64_t *, void, uint64_t))(v57 + 104))(v41, *MEMORY[0x263F7DCA0], v32);
        sub_20A8C8590();
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t *, uint64_t))(v44 - 96))(v41, v32);
        sub_20A61CA00(v30, type metadata accessor for StocksActivity);
        uint64_t v42 = (void (*)(uint64_t))MEMORY[0x263F58AA8];
        uint64_t v43 = v31;
        return sub_20A61CA00(v43, (uint64_t (*)(void))v42);
      }
    }
    else
    {
      sub_20A61C978((uint64_t)&v59);
      uint64_t v41 = v58;
    }
    swift_bridgeObjectRelease();
    uint64_t v40 = MEMORY[0x263F8EE78];
    goto LABEL_13;
  }
  swift_unknownObjectRelease();
  uint64_t v42 = sub_20A4845D0;
  uint64_t v43 = (uint64_t)v20;
  return sub_20A61CA00(v43, (uint64_t (*)(void))v42);
}

uint64_t sub_20A61C884(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C4DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A61C8E8(uint64_t a1, uint64_t a2)
{
  sub_20A4F6E50(0, (unint64_t *)&qword_26763BD68, &qword_26AC6A0A0, MEMORY[0x263F7D590], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A61C978(uint64_t a1)
{
  sub_20A4F6E50(0, (unint64_t *)&qword_26763BD68, &qword_26AC6A0A0, MEMORY[0x263F7D590], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A61CA00(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for HeadlineOpenInNewTabCommandHandler()
{
  return self;
}

uint64_t sub_20A61CA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A61CBF0(a4);
}

BOOL sub_20A61CAAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_20A8CD4F0();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v9, a4, v5, v7);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
  int v11 = *MEMORY[0x263F59C40];
  if (v10 == *MEMORY[0x263F59C40])
  {
    (*(void (**)(char *, uint64_t))(v6 + 96))(v9, v5);
    swift_unknownObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return v10 == v11;
}

uint64_t sub_20A61CBF0(uint64_t a1)
{
  uint64_t v48 = sub_20A8CA640();
  uint64_t v58 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v59 = (uint64_t *)((char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v56 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v56);
  uint64_t v50 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C5390();
  uint64_t v54 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v51 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C5920();
  uint64_t v52 = *(void *)(v6 - 8);
  uint64_t v53 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C4DA0();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v49 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8C2530();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v46 - v19;
  uint64_t v21 = sub_20A8CD4F0();
  uint64_t v22 = *(void *)(v21 - 8);
  double v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (id *)((char *)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, uint64_t, uint64_t, double))(v22 + 16))(v25, a1, v21, v23);
  if ((*(unsigned int (**)(id *, uint64_t))(v22 + 88))(v25, v21) != *MEMORY[0x263F59C40]) {
    return (*(uint64_t (**)(id *, uint64_t))(v22 + 8))(v25, v21);
  }
  (*(void (**)(id *, uint64_t))(v22 + 96))(v25, v21);
  id v47 = *v25;
  id v26 = objc_msgSend(v47, sel_routeURL);
  if (!v26)
  {
    uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v28(v20, 1, 1, v11);
LABEL_7:
    uint64_t v31 = (uint64_t)v49;
    uint64_t v30 = (uint64_t)v50;
    uint64_t v32 = v48;
    sub_20A61CA00((uint64_t)v20, (uint64_t (*)(void))sub_20A4845D0);
    swift_unknownObjectRetain();
    sub_20A8C58F0();
    v28(v17, 1, 1, v11);
    uint64_t v34 = v54;
    uint64_t v33 = v55;
    uint64_t v35 = v51;
    (*(void (**)(char *, void, uint64_t))(v54 + 104))(v51, *MEMORY[0x263F58CD8], v55);
    sub_20A8C4D60();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v33);
    sub_20A61CA00((uint64_t)v17, (uint64_t (*)(void))sub_20A4845D0);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v8, v53);
    sub_20A61C884(v31, v30);
    uint64_t v36 = qword_26BE5EDC8;
    sub_20A42FC8C();
    uint64_t v38 = v30 + *(int *)(v37 + 64);
    *(void *)(v30 + *(int *)(v37 + 48)) = v36;
    type metadata accessor for StocksActivity.Article(0);
    *(_OWORD *)uint64_t v38 = 0u;
    *(_OWORD *)(v38 + 16) = 0u;
    *(void *)(v38 + 32) = 0;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v39 = v57 + 24;
    sub_20A61C8E8(v57 + 24, (uint64_t)&v60);
    uint64_t v40 = v61;
    if (v61)
    {
      __swift_project_boxed_opaque_existential_1(&v60, v61);
      uint64_t v40 = sub_20A8C8DC0();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
    }
    else
    {
      sub_20A61C978((uint64_t)&v60);
    }
    sub_20A61C8E8(v39, (uint64_t)&v60);
    if (v61)
    {
      __swift_project_boxed_opaque_existential_1(&v60, v61);
      uint64_t v43 = sub_20A8C8DD0();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
    }
    else
    {
      sub_20A61C978((uint64_t)&v60);
      uint64_t v43 = 0;
    }
    uint64_t v45 = v58;
    uint64_t v44 = v59;
    *uint64_t v59 = v40;
    v44[1] = v43;
    (*(void (**)(uint64_t *, void, uint64_t))(v45 + 104))(v44, *MEMORY[0x263F7DCA8], v32);
    sub_20A8C8590();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v45 + 8))(v44, v32);
    sub_20A61CA00(v30, type metadata accessor for StocksActivity);
    uint64_t v41 = (void (*)(uint64_t))MEMORY[0x263F58AA8];
    uint64_t v42 = v31;
    return sub_20A61CA00(v42, (uint64_t (*)(void))v41);
  }
  uint64_t v27 = v26;
  sub_20A8C24E0();

  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v14, v11);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v28(v20, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v20, 1, v11) == 1) {
    goto LABEL_7;
  }
  swift_unknownObjectRelease();
  uint64_t v41 = sub_20A4845D0;
  uint64_t v42 = (uint64_t)v20;
  return sub_20A61CA00(v42, (uint64_t (*)(void))v41);
}

ValueMetadata *type metadata accessor for ForYouFeedOnlineBlueprintModifier()
{
  return &type metadata for ForYouFeedOnlineBlueprintModifier;
}

unint64_t sub_20A61D4B8()
{
  unint64_t result = qword_26AC81C90;
  if (!qword_26AC81C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC81C90);
  }
  return result;
}

uint64_t sub_20A61D50C()
{
  return sub_20A61E718(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
}

uint64_t sub_20A61D554()
{
  return sub_20A61E718((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
}

uint64_t sub_20A61D59C(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v91 = a3;
  uint64_t v100 = sub_20A8C2830();
  uint64_t v114 = *(void (***)(char *, uint64_t))(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v99 = (char *)v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x270FA5388](v115);
  uint64_t v98 = (void *)((char *)v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (void *)((char *)v82 - v8);
  sub_20A44D7C8(0);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v101 = (char *)v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v119 = (char *)v82 - v15;
  sub_20A4F0338();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v95 = (char *)v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x270FA5388](v18);
  uint64_t v96 = (char *)v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v109 = (uint64_t)v82 - v21;
  sub_20A61E624(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  uint64_t v118 = v22;
  uint64_t v107 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v116 = (char *)v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v112 = (char *)v82 - v25;
  uint64_t v90 = sub_20A8C8B80();
  uint64_t v89 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v87 = (char *)v82 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A61E624(0, &qword_26AC6A430, MEMORY[0x263F7D950]);
  uint64_t v88 = v27;
  uint64_t v86 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v85 = (char *)v82 - v28;
  sub_20A495590();
  MEMORY[0x270FA5388](v29 - 8);
  v82[2] = (char *)v82 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
  sub_20A61E624(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v33 = v32;
  uint64_t v84 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v83 = (char *)v82 - v34;
  v82[1] = sub_20A8CBA50();
  v82[3] = v35;
  uint64_t v36 = v33;
  uint64_t v37 = sub_20A61E7EC((unint64_t *)&unk_26AC6AD20, (unint64_t *)&qword_26AC6AD30, v31);
  uint64_t v38 = sub_20A8CE880();
  uint64_t v39 = MEMORY[0x263F8EE78];
  uint64_t v92 = a2;
  uint64_t v108 = v36;
  if (v38)
  {
    uint64_t v122 = MEMORY[0x263F8EE78];
    uint64_t v106 = v38;
    sub_20A68CB94(0, v38 & ~(v38 >> 63), 0);
    sub_20A8CE840();
    uint64_t v40 = v106;
    if (v106 < 0) {
      goto LABEL_36;
    }
    uint64_t v41 = 0;
    uint64_t v110 = (void (**)(char *))(v107 + 16);
    uint64_t v117 = (void (**)(char *))(v12 + 16);
    uint64_t v97 = v114 + 1;
    uint64_t v114 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v113 = v12 + 32;
    uint64_t v104 = (void (**)(char *, uint64_t))(v107 + 8);
    uint64_t v103 = v107 + 32;
    uint64_t v42 = v101;
    uint64_t v94 = a1;
    uint64_t v93 = v18;
    uint64_t v105 = v37;
    while (1)
    {
      if (v41 == v40)
      {
        __break(1u);
        goto LABEL_35;
      }
      uint64_t v111 = v41 + 1;
      uint64_t v43 = (void (*)(char *, void))sub_20A8CE8C0();
      uint64_t v44 = *v110;
      (*v110)(v116);
      v43(v121, 0);
      sub_20A8C8820();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_20A61E760();
          uint64_t v47 = v109;
          uint64_t v48 = v109 + *(int *)(v46 + 48);
          sub_20A61E830(v109 + *(int *)(v46 + 64), (uint64_t (*)(void))sub_20A42C764);
          sub_20A61E830(v48, (uint64_t (*)(void))type metadata accessor for StockViewModel);
          uint64_t v49 = sub_20A8C3F00();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v47, v49);
          goto LABEL_10;
        case 2u:
        case 3u:
          uint64_t v45 = (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor;
          goto LABEL_8;
        case 4u:
          swift_storeEnumTagMultiPayload();
          sub_20A61E7EC((unint64_t *)&unk_26AC69EA0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
          uint64_t v54 = sub_20A8CE880();
          if (v54)
          {
            uint64_t v55 = v54;
            uint64_t v120 = MEMORY[0x263F8EE78];
            sub_20A68CB44(0, v54 & ~(v54 >> 63), 0);
            sub_20A8CE840();
            if ((v55 & 0x8000000000000000) == 0)
            {
              while (2)
              {
                uint64_t v57 = (void (*)(char *, void))sub_20A8CE8C0();
                uint64_t v58 = *v117;
                (*v117)(v42);
                v57(v121, 0);
                sub_20A8C8330();
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 2u:
                    swift_bridgeObjectRelease();
                    swift_release();
                    goto LABEL_26;
                  case 3u:
                    uint64_t v59 = *v9;
                    sub_20A61E890();
                    uint64_t v102 = (char *)v9 + *(int *)(v60 + 48);
                    uint64_t v61 = v99;
                    sub_20A8C2820();
                    uint64_t v62 = sub_20A8C2810();
                    uint64_t v64 = v63;
                    (*v97)(v61, v100);
                    uint64_t v65 = v12;
                    uint64_t v66 = v9;
                    uint64_t v67 = v98;
                    uint64_t *v98 = v62;
                    v67[1] = v64;
                    v67[2] = v59;
                    swift_storeEnumTagMultiPayload();
                    sub_20A61E718((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
                    uint64_t v9 = v66;
                    uint64_t v12 = v65;
                    uint64_t v42 = v101;
                    sub_20A8C8320();
                    uint64_t v68 = sub_20A8CD2C0();
                    (*(void (**)(char *, uint64_t))(*(void *)(v68 - 8) + 8))(v102, v68);
                    goto LABEL_27;
                  case 4u:
                    swift_bridgeObjectRelease();
                    goto LABEL_26;
                  case 6u:
                    goto LABEL_26;
                  default:
                    sub_20A61E830((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ForYouFeedModel);
LABEL_26:
                    ((void (*)(char *, char *, uint64_t))v58)(v119, v42, v11);
LABEL_27:
                    (*v114)(v42, v11);
                    uint64_t v56 = v120;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    {
                      sub_20A68CB44(0, *(void *)(v56 + 16) + 1, 1);
                      uint64_t v56 = v120;
                    }
                    unint64_t v70 = *(void *)(v56 + 16);
                    unint64_t v69 = *(void *)(v56 + 24);
                    if (v70 >= v69 >> 1)
                    {
                      sub_20A68CB44(v69 > 1, v70 + 1, 1);
                      uint64_t v56 = v120;
                    }
                    *(void *)(v56 + 16) = v70 + 1;
                    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v56+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v70, v119, v11);
                    uint64_t v120 = v56;
                    sub_20A8CE8B0();
                    if (!--v55) {
                      goto LABEL_32;
                    }
                    continue;
                }
              }
            }
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
            JUMPOUT(0x20A61E5F0);
          }
          uint64_t v56 = MEMORY[0x263F8EE78];
LABEL_32:
          uint64_t v71 = sub_20A61E718((unint64_t *)&unk_26AC69DC0, sub_20A44D7C8);
          uint64_t v72 = sub_20A61E718(&qword_26AC69DB8, sub_20A44D7C8);
          MEMORY[0x21051E250](v56, v11, v71, v72);
          sub_20A61E718(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
          sub_20A61E718((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
          sub_20A8C8810();
          uint64_t v51 = v118;
          uint64_t v50 = v116;
LABEL_11:
          (*v104)(v50, v51);
          uint64_t v39 = v122;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_20A68CB94(0, *(void *)(v39 + 16) + 1, 1);
            uint64_t v39 = v122;
          }
          unint64_t v53 = *(void *)(v39 + 16);
          unint64_t v52 = *(void *)(v39 + 24);
          if (v53 >= v52 >> 1)
          {
            sub_20A68CB94(v52 > 1, v53 + 1, 1);
            uint64_t v39 = v122;
          }
          *(void *)(v39 + 16) = v53 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v107 + 32))(v39+ ((*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80))+ *(void *)(v107 + 72) * v53, v112, v118);
          uint64_t v122 = v39;
          sub_20A8CE8B0();
          uint64_t v40 = v106;
          uint64_t v41 = v111;
          if (v111 == v106) {
            goto LABEL_33;
          }
          break;
        case 5u:
          goto LABEL_10;
        default:
          uint64_t v45 = (uint64_t (*)(void))sub_20A42C764;
LABEL_8:
          sub_20A61E830(v109, v45);
LABEL_10:
          uint64_t v50 = v116;
          uint64_t v51 = v118;
          ((void (*)(char *, char *, uint64_t))v44)(v112, v116, v118);
          goto LABEL_11;
      }
    }
  }
LABEL_33:
  uint64_t v73 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
  uint64_t v74 = sub_20A61E7EC(&qword_26AC69E98, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  uint64_t v75 = sub_20A61E7EC(&qword_26AC69E90, (unint64_t *)&qword_26AC69EB0, v73);
  MEMORY[0x21051E250](v39, v118, v74, v75);
  sub_20A61E718(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
  sub_20A61E718((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
  uint64_t v76 = v83;
  sub_20A8CBA40();
  uint64_t v77 = v89;
  uint64_t v78 = v87;
  uint64_t v79 = v90;
  (*(void (**)(char *, void, uint64_t))(v89 + 104))(v87, *MEMORY[0x263F7D528], v90);
  sub_20A61E718(&qword_26AC68150, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
  uint64_t v80 = v85;
  sub_20A8C9B50();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v79);
  v92(v80);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v80, v88);
  return (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v76, v108);
}

void sub_20A61E624(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for ForYouFeedSectionDescriptor();
    v8[1] = type metadata accessor for ForYouFeedModel();
    v8[2] = sub_20A61E718(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
    void v8[3] = sub_20A61E718((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A61E718(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A61E760()
{
  if (!qword_26AC68FC0)
  {
    sub_20A8C3F00();
    type metadata accessor for StockViewModel();
    sub_20A42C764(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26AC68FC0);
    }
  }
}

uint64_t sub_20A61E7EC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A61E624(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A61E830(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A61E890()
{
  if (!qword_26AC81928[0])
  {
    sub_20A8CD2C0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, qword_26AC81928);
    }
  }
}

void sub_20A61E8FC(char *a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, uint64_t a4@<X8>, double a5@<D1>)
{
  os_log_t v123 = a3;
  uint64_t v124 = a1;
  id v125 = (char *)a2;
  uint64_t v122 = a4;
  uint64_t v6 = sub_20A8C4030();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v120 = v6;
  uint64_t v121 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v119 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v118 = (char *)&v97 - v10;
  uint64_t v102 = sub_20A8C2800();
  uint64_t v110 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  uint64_t v109 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A620C90(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v108 = (char *)&v97 - v13;
  uint64_t v107 = sub_20A8C2EB0();
  uint64_t v106 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  uint64_t v105 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A43FFE8();
  uint64_t v103 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v104 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8C3D00();
  uint64_t v113 = *(void *)(v17 - 8);
  uint64_t v114 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v117 = (char *)&v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_20A8C3F00();
  uint64_t v112 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388](v116);
  uint64_t v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_20A8C7DF0();
  uint64_t v111 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v97 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A620C90(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v26 = (char *)&v97 - v25;
  uint64_t v27 = sub_20A8C3E10();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v97 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v97 - v32;
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)&v97 - v35;
  MEMORY[0x270FA5388](v37);
  uint64_t v39 = (char *)&v97 - v38;
  sub_20A4BECB4((uint64_t)v125, (uint64_t)v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    sub_20A620BEC((uint64_t)v26, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    uint64_t v40 = (uint64_t)v124;
    goto LABEL_5;
  }
  uint64_t v100 = v36;
  uint64_t v41 = v117;
  uint64_t v101 = v33;
  uint64_t v98 = v30;
  uint64_t v99 = v23;
  uint64_t v97 = v21;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v39, v26, v27);
  uint64_t v40 = (uint64_t)v124;
  uint64_t v42 = v27;
  if (sub_20A8C3CB0())
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v39, v27);
LABEL_5:
    uint64_t v43 = v120;
    uint64_t v44 = v121;
    uint64_t v46 = v118;
    uint64_t v45 = v119;
    sub_20A8C3E70();
    (*(void (**)(char *, void, uint64_t))(v44 + 104))(v45, *MEMORY[0x263F7AF60], v43);
    sub_20A620C48(&qword_26AC69030, MEMORY[0x263F7AFA0]);
    char v47 = sub_20A8CE210();
    uint64_t v48 = *(void (**)(char *, uint64_t))(v44 + 8);
    v48(v45, v43);
    uint64_t v49 = ((uint64_t (*)(char *, uint64_t))v48)(v46, v43);
    if (v47)
    {
      uint64_t v50 = sub_20A8CDCD0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v122, 1, 1, v50);
    }
    else
    {
      uint64_t v51 = (void *)MEMORY[0x210527F10](v49);
      sub_20A61F6F4(v40, (uint64_t)v125, v115, v122, a5);
    }
    return;
  }
  unint64_t v52 = v99;
  sub_20A8C7DB0();
  uint64_t v53 = v112;
  uint64_t v54 = *(void (**)(char *, os_log_t, uint64_t))(v112 + 16);
  id v125 = v20;
  v54(v20, v123, v116);
  uint64_t v56 = v113;
  uint64_t v55 = v114;
  (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v41, v40, v114);
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  v57(v100, v39, v42);
  v57(v101, v39, v42);
  uint64_t v58 = (char *)v42;
  uint64_t v59 = v98;
  v57(v98, v39, (uint64_t)v58);
  uint64_t v60 = sub_20A8C7DD0();
  int v61 = sub_20A8CEA00();
  if (os_log_type_enabled(v60, (os_log_type_t)v61))
  {
    LODWORD(v121) = v61;
    os_log_t v123 = v60;
    uint64_t v124 = v39;
    uint64_t v62 = swift_slowAlloc();
    uint64_t v120 = swift_slowAlloc();
    uint64_t v128 = v120;
    *(_DWORD *)uint64_t v62 = 136447234;
    uint64_t v63 = (uint64_t)v125;
    uint64_t v64 = sub_20A8C3EC0();
    uint64_t v126 = sub_20A687610(v64, v65, &v128);
    sub_20A8CF1C0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v63, v116);
    *(_WORD *)(v62 + 12) = 2082;
    uint64_t v118 = v58;
    uint64_t v66 = (uint64_t)v104;
    uint64_t v67 = v117;
    sub_20A8C3CF0();
    uint64_t v126 = 0;
    unint64_t v127 = 0xE000000000000000;
    uint64_t v68 = v102;
    sub_20A8CF4E0();
    sub_20A8CE3D0();
    sub_20A8CF4E0();
    uint64_t v69 = v126;
    unint64_t v70 = v127;
    sub_20A620B90(v66);
    uint64_t v126 = sub_20A687610(v69, v70, &v128);
    sub_20A8CF1C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v67, v114);
    *(_WORD *)(v62 + 22) = 2082;
    uint64_t v71 = v105;
    uint64_t v72 = v100;
    sub_20A8C3D40();
    uint64_t v73 = sub_20A8C2EA0();
    unint64_t v75 = v74;
    (*(void (**)(char *, uint64_t))(v106 + 8))(v71, v107);
    uint64_t v126 = sub_20A687610(v73, v75, &v128);
    sub_20A8CF1C0();
    swift_bridgeObjectRelease();
    uint64_t v76 = *(char **)(v28 + 8);
    uint64_t v77 = v118;
    id v125 = (char *)(v28 + 8);
    uint64_t v119 = v76;
    ((void (*)(char *))v76)(v72);
    *(_WORD *)(v62 + 32) = 2082;
    uint64_t v78 = (uint64_t)v108;
    sub_20A8C3D90();
    uint64_t v79 = v110;
    int v80 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v78, 1, v68);
    BOOL v81 = v109;
    if (v80 == 1)
    {
      sub_20A620BEC(v78, &qword_26AC68CC0, MEMORY[0x263F07490]);
      unint64_t v82 = 0xE300000000000000;
      uint64_t v83 = 7104878;
    }
    else
    {
      uint64_t v83 = sub_20A8C27D0();
      unint64_t v82 = v85;
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v68);
    }
    uint64_t v126 = sub_20A687610(v83, v82, &v128);
    sub_20A8CF1C0();
    swift_bridgeObjectRelease();
    uint64_t v86 = v77;
    uint64_t v87 = (void (*)(char *, char *))v119;
    ((void (*)(char *, char *))v119)(v101, v77);
    *(_WORD *)(v62 + 42) = 2082;
    uint64_t v117 = (char *)(v62 + 44);
    uint64_t v88 = v98;
    sub_20A8C3DA0();
    sub_20A620C48(&qword_26AC68CB8, MEMORY[0x263F07490]);
    uint64_t v89 = sub_20A8CF720();
    uint64_t v90 = v81;
    unint64_t v92 = v91;
    (*(void (**)(char *, uint64_t))(v79 + 8))(v90, v68);
    uint64_t v126 = sub_20A687610(v89, v92, &v128);
    sub_20A8CF1C0();
    swift_bridgeObjectRelease();
    v87(v88, v86);
    os_log_t v93 = v123;
    _os_log_impl(&dword_20A414000, v123, (os_log_type_t)v121, "Sparkline model for %{public}s with date range %{public}s not considered valid for quote (exchangeStatus: %{public}s, serverCreatedAt: %{public}s, dateLastRefreshed: %{public}s)", (uint8_t *)v62, 0x34u);
    uint64_t v94 = v120;
    swift_arrayDestroy();
    MEMORY[0x210528850](v94, -1, -1);
    MEMORY[0x210528850](v62, -1, -1);

    (*(void (**)(char *, uint64_t))(v111 + 8))(v99, v97);
    v87(v124, v86);
  }
  else
  {

    uint64_t v84 = *(void (**)(char *, char *))(v28 + 8);
    v84(v59, v58);
    v84(v101, v58);
    v84(v100, v58);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v117, v55);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v125, v116);
    (*(void (**)(char *, uint64_t))(v111 + 8))(v52, v97);
    v84(v39, v58);
  }
  uint64_t v95 = v122;
  uint64_t v96 = sub_20A8CDCD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v95, 1, 1, v96);
}

uint64_t sub_20A61F6F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>, double a5@<D1>)
{
  uint64_t v105 = a3;
  uint64_t v107 = a4;
  sub_20A606574();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v100 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_20A8CE140();
  MEMORY[0x270FA5388](v97);
  uint64_t v94 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A605BC0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v101 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_20A8CDBC0();
  MEMORY[0x270FA5388](v93);
  uint64_t v102 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A605C28();
  uint64_t v99 = v14;
  uint64_t v98 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v96 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v95 = (char *)&v92 - v17;
  sub_20A43FFE8();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v104 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_20A8C2800();
  uint64_t v20 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v112);
  uint64_t v111 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A620C90(0, &qword_26AC7F518, MEMORY[0x263F7CB58]);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v24 = (char *)&v92 - v23;
  uint64_t v25 = sub_20A8CDDA0();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v126 = (char *)&v92 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v103 = (char *)&v92 - v29;
  MEMORY[0x270FA5388](v30);
  uint64_t v121 = (char *)&v92 - v31;
  MEMORY[0x270FA5388](v32);
  uint64_t v110 = (char *)&v92 - v33;
  uint64_t v34 = sub_20A8C3CA0();
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v37 = (char *)&v92 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = a1;
  unint64_t v38 = sub_20A620364(a1, a2);
  uint64_t v39 = *(void *)(v38 + 16);
  uint64_t v113 = v26;
  uint64_t v114 = v25;
  unint64_t v108 = v38;
  if (v39)
  {
    uint64_t v41 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
    uint64_t v40 = v35 + 16;
    unint64_t v42 = v38 + ((*(unsigned __int8 *)(v40 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 64));
    uint64_t v117 = *(void *)(v40 + 56);
    uint64_t v118 = v41;
    uint64_t v116 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
    uint64_t v109 = (void (**)(char *, uint64_t))(v20 + 8);
    uint64_t v119 = v40;
    uint64_t v115 = (void (**)(char *, uint64_t))(v40 - 8);
    uint64_t v43 = (unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    uint64_t v44 = (void (**)(char *, char *, uint64_t))(v26 + 32);
    unint64_t v122 = MEMORY[0x263F8EE78];
    uint64_t v120 = v34;
    v41(v37, v42, v34);
    while (1)
    {
      sub_20A8C3C80();
      if (v45)
      {
        uint64_t v48 = 1;
      }
      else
      {
        uint64_t v46 = v111;
        sub_20A8C3C60();
        sub_20A8C2790();
        char v47 = v46;
        uint64_t v34 = v120;
        (*v109)(v47, v112);
        sub_20A8CE760();
        sub_20A8CDD80();
        uint64_t v48 = 0;
      }
      (*v116)(v24, v48, 1, v25);
      (*v115)(v37, v34);
      if ((*v43)(v24, 1, v25) == 1)
      {
        sub_20A620BEC((uint64_t)v24, &qword_26AC7F518, MEMORY[0x263F7CB58]);
      }
      else
      {
        uint64_t v49 = *v44;
        uint64_t v50 = v110;
        (*v44)(v110, v24, v25);
        v49(v121, v50, v25);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v51 = v122;
        }
        else {
          unint64_t v51 = sub_20A46DA58(0, *(void *)(v122 + 16) + 1, 1, v122);
        }
        unint64_t v53 = *(void *)(v51 + 16);
        unint64_t v52 = *(void *)(v51 + 24);
        if (v53 >= v52 >> 1) {
          unint64_t v51 = sub_20A46DA58(v52 > 1, v53 + 1, 1, v51);
        }
        *(void *)(v51 + 16) = v53 + 1;
        unint64_t v54 = (*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80);
        unint64_t v122 = v51;
        unint64_t v55 = v51 + v54 + *(void *)(v113 + 72) * v53;
        uint64_t v25 = v114;
        v49((char *)v55, v121, v114);
        uint64_t v34 = v120;
      }
      v42 += v117;
      if (!--v39) {
        break;
      }
      v118(v37, v42, v34);
    }
  }
  else
  {
    unint64_t v122 = MEMORY[0x263F8EE78];
  }
  unint64_t v56 = *(void *)(v122 + 16);
  uint64_t v57 = v126;
  if (v56 < 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_20A8CE9E0();
    sub_20A43F884();
    uint64_t v58 = (void *)sub_20A8CF180();
LABEL_36:
    sub_20A8C7D90();

    uint64_t v91 = sub_20A8CDCD0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v107, 1, 1, v91);
  }
  uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v113 + 16);
  uint64_t v60 = v122 + ((*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80));
  uint64_t v61 = *(void *)(v113 + 72);
  uint64_t v62 = (void (**)(char *, uint64_t))(v113 + 8);
  swift_bridgeObjectRetain();
  double v63 = 0.0;
  double v64 = 1.79769313e308;
  uint64_t v120 = v60;
  uint64_t v121 = (char *)v56;
  do
  {
    v59(v57, v60, v25);
    sub_20A8CDD70();
    if (v64 >= v65) {
      double v64 = v65;
    }
    sub_20A8CDD70();
    uint64_t v57 = v126;
    if (v66 > v63) {
      double v63 = v66;
    }
    uint64_t v67 = *v62;
    (*v62)(v126, v25);
    v60 += v61;
    --v56;
  }
  while (v56);
  unint64_t v68 = v122;
  uint64_t result = swift_bridgeObjectRelease();
  if ((unint64_t)v121 > *(void *)(v68 + 16))
  {
    __break(1u);
  }
  else
  {
    unint64_t v70 = v103;
    uint64_t v71 = v114;
    v59(v103, v120 + v61 * (void)(v121 - 1), v114);
    sub_20A8CDD70();
    double v73 = v72;
    v67(v70, v71);
    double v74 = a5 * 0.5 * v73;
    double v75 = v73 + v74;
    double v76 = v73 - v74;
    if (v63 > v75) {
      double v77 = v63;
    }
    else {
      double v77 = v75;
    }
    if (v76 >= v64) {
      double v78 = v64;
    }
    else {
      double v78 = v76;
    }
    uint64_t v79 = v105[5];
    uint64_t v80 = v105[6];
    __swift_project_boxed_opaque_existential_1(v105 + 2, v79);
    uint64_t v81 = (uint64_t)v104;
    sub_20A8C3CF0();
    uint64_t v82 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v80 + 8))(v108, v81, v79, v80);
    swift_bridgeObjectRelease();
    sub_20A620B90(v81);
    if (*(void *)(v82 + 16) > 0xF9uLL)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_20A8CE9F0();
      sub_20A43F884();
      uint64_t v58 = (void *)sub_20A8CF180();
      goto LABEL_36;
    }
    MEMORY[0x21051E250](v82, MEMORY[0x263F8D310], MEMORY[0x263F8D338], MEMORY[0x263F7D050]);
    uint64_t result = sub_20A8CDBB0();
    if (v78 <= v77)
    {
      uint64_t v83 = sub_20A8CDFB0();
      swift_allocObject();
      uint64_t v84 = sub_20A8CDFA0();
      uint64_t v124 = v83;
      uint64_t v125 = MEMORY[0x263F7CC28];
      uint64_t v123 = v84;
      sub_20A8CE130();
      unint64_t v85 = v95;
      sub_20A8CDD00();
      uint64_t v86 = v98;
      uint64_t v87 = v99;
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v96, v85, v99);
      uint64_t v88 = (void (*)(uint64_t))MEMORY[0x263F7CB58];
      sub_20A620C48(&qword_26AC7F510, MEMORY[0x263F7CB58]);
      sub_20A620C48(&qword_26AC7F500, v88);
      sub_20A620C48(&qword_26AC7F508, v88);
      sub_20A8CE0B0();
      uint64_t v89 = v107;
      sub_20A8CDCA0();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v85, v87);
      uint64_t v90 = sub_20A8CDCD0();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v89, 0, 1, v90);
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_20A620364(uint64_t a1, uint64_t a2)
{
  double v61 = *(double *)&a2;
  uint64_t v2 = sub_20A8C2800();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v57 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v59 = (char *)&v51 - v6;
  MEMORY[0x270FA5388](v7);
  uint64_t v60 = (char *)&v51 - v8;
  sub_20A43FFE8();
  uint64_t v56 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A620C90(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v51 - v13;
  sub_20A620C90(0, (unint64_t *)&qword_26AC68F68, MEMORY[0x263F7AE98]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v51 - v16;
  uint64_t v18 = sub_20A8C3CA0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v58 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  unint64_t v55 = (char *)&v51 - v22;
  MEMORY[0x270FA5388](v23);
  uint64_t v62 = (char *)&v51 - v24;
  unint64_t v25 = sub_20A8C3CD0();
  uint64_t v26 = sub_20A8C3CD0();
  uint64_t v27 = *(void *)(v26 + 16);
  if (v27)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v17, v26+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * (v27 - 1), v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_20A620BEC((uint64_t)v17, (unint64_t *)&qword_26AC68F68, MEMORY[0x263F7AE98]);
  }
  else
  {
    uint64_t v54 = v3;
    uint64_t v28 = v2;
    uint64_t v29 = v62;
    unint64_t v52 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    uint64_t v53 = v19 + 32;
    v52(v62, v17, v18);
    sub_20A4BECB4(*(uint64_t *)&v61, (uint64_t)v14);
    uint64_t v30 = sub_20A8C3E10();
    uint64_t v31 = *(void *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v14, 1, v30) == 1)
    {
      sub_20A620BEC((uint64_t)v14, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      uint64_t v32 = v28;
      uint64_t v33 = v54;
      uint64_t v34 = v59;
    }
    else
    {
      double v61 = COERCE_DOUBLE(sub_20A8C3E00());
      char v36 = v35;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v30);
      if (v36)
      {
        uint64_t v32 = v28;
        uint64_t v33 = v54;
        uint64_t v34 = v59;
      }
      else
      {
        double v37 = COERCE_DOUBLE(sub_20A8C3C80());
        uint64_t v32 = v28;
        uint64_t v34 = v59;
        if ((v38 & 1) != 0 || v37 != v61)
        {
          sub_20A8C3CF0();
          uint64_t v33 = v54;
          uint64_t v39 = v60;
          (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v60, &v11[*(int *)(v56 + 36)], v32);
          sub_20A620B90((uint64_t)v11);
          uint64_t v56 = v32;
          uint64_t v40 = v57;
          sub_20A8C3C60();
          sub_20A8C2720();
          uint64_t v41 = *(void (**)(char *, uint64_t))(v33 + 8);
          unint64_t v42 = v40;
          uint64_t v32 = v56;
          v41(v42, v56);
          char v43 = sub_20A8C2740();
          v41(v34, v32);
          v41(v39, v32);
          if (v43)
          {
            sub_20A8C3C60();
            sub_20A8C2720();
            v41(v34, v32);
            uint64_t v44 = v55;
            sub_20A8C3C70();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v25 = sub_20A46D5A0(0, *(void *)(v25 + 16) + 1, 1, v25);
            }
            unint64_t v46 = *(void *)(v25 + 16);
            unint64_t v45 = *(void *)(v25 + 24);
            if (v46 >= v45 >> 1) {
              unint64_t v25 = sub_20A46D5A0(v45 > 1, v46 + 1, 1, v25);
            }
            *(void *)(v25 + 16) = v46 + 1;
            v52((char *)(v25+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v46), v44, v18);
          }
        }
        else
        {
          uint64_t v33 = v54;
        }
      }
      uint64_t v29 = v62;
    }
    if (*(void *)(v25 + 16) == 1)
    {
      sub_20A8C3C60();
      sub_20A8C2720();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
      sub_20A8C3C80();
      char v47 = v58;
      sub_20A8C3C70();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v25 = sub_20A46D5A0(0, *(void *)(v25 + 16) + 1, 1, v25);
      }
      unint64_t v49 = *(void *)(v25 + 16);
      unint64_t v48 = *(void *)(v25 + 24);
      if (v49 >= v48 >> 1) {
        unint64_t v25 = sub_20A46D5A0(v48 > 1, v49 + 1, 1, v25);
      }
      *(void *)(v25 + 16) = v49 + 1;
      v52((char *)(v25+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v49), v47, v18);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v62, v18);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v29, v18);
    }
  }
  return v25;
}

uint64_t type metadata accessor for SparklineModelProvider()
{
  return self;
}

uint64_t sub_20A620B90(uint64_t a1)
{
  sub_20A43FFE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A620BEC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A620C90(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A620C48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A620C90(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for ForYouFeedOfflineModel.Expanding()
{
  return &type metadata for ForYouFeedOfflineModel.Expanding;
}

ValueMetadata *type metadata accessor for ForYouFeedOfflineModel()
{
  return &type metadata for ForYouFeedOfflineModel;
}

ValueMetadata *type metadata accessor for ForYouFeedOfflineModel.Loading()
{
  return &type metadata for ForYouFeedOfflineModel.Loading;
}

uint64_t sub_20A620D14()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_26AC9EC60);
  __swift_project_value_buffer(v0, (uint64_t)qword_26AC9EC60);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A906680);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A620EB8()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_267652E78);
  __swift_project_value_buffer(v0, (uint64_t)qword_267652E78);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A906440);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A621058()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_267652E90);
  __swift_project_value_buffer(v0, (uint64_t)qword_267652E90);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A906830);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A6211FC()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_267652EA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_267652EA8);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A9069B0);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A62139C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_26AC81A10, (uint64_t)qword_26AC9EC60, a1);
}

uint64_t sub_20A6213C0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639B68, (uint64_t)qword_267652E78, a1);
}

uint64_t sub_20A6213E4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639B70, (uint64_t)qword_267652E90, a1);
}

uint64_t sub_20A621408@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639B78, (uint64_t)qword_267652EA8, a1);
}

uint64_t sub_20A62142C()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_26AC9ECC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26AC9ECC0);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A906550);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A6215E0()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_26AC9ECD8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26AC9ECD8);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A906A30);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A621784()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_267652EC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_267652EC0);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A906730);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A621928()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_267652ED8);
  __swift_project_value_buffer(v0, (uint64_t)qword_267652ED8);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A9068C0);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A621AD0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_26AC81A20, (uint64_t)qword_26AC9ECC0, a1);
}

uint64_t sub_20A621AF4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_26AC81A28, (uint64_t)qword_26AC9ECD8, a1);
}

uint64_t sub_20A621B18@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639B80, (uint64_t)qword_267652EC0, a1);
}

uint64_t sub_20A621B3C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639B88, (uint64_t)qword_267652ED8, a1);
}

uint64_t ForYouSectionDescriptor.identifier.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CC310();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C3F00();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ForYouSectionDescriptor();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (void *)((char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A6221F4(v1, (uint64_t)v12);
  uint64_t v13 = 0x69726F7453706F74;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v13 = *v12;
      break;
    case 2u:
      (*(void (**)(char *, uint64_t *, uint64_t))(v3 + 32))(v5, v12, v2);
      uint64_t v13 = sub_20A8CC2C0();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      break;
    case 3u:
      return v13;
    default:
      (*(void (**)(char *, uint64_t *, uint64_t))(v7 + 32))(v9, v12, v6);
      v15[0] = 0x2D6B636F7473;
      v15[1] = 0xE600000000000000;
      sub_20A8C3EC0();
      sub_20A8CE3D0();
      swift_bridgeObjectRelease();
      uint64_t v13 = v15[0];
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      break;
  }
  return v13;
}

uint64_t _s8StocksUI23ForYouSectionDescriptorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v32 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = type metadata accessor for ForYouSectionDescriptor();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (uint64_t *)((char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v31 - v14;
  sub_20A622A20();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = &v18[*(int *)(v19 + 56)];
  sub_20A6221F4(a1, (uint64_t)v18);
  sub_20A6221F4(a2, (uint64_t)v20);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A6221F4((uint64_t)v18, (uint64_t)v12);
      uint64_t v22 = *v12;
      uint64_t v21 = v12[1];
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      if (v22 == *(void *)v20 && v21 == *((void *)v20 + 1)) {
        char v24 = 1;
      }
      else {
        char v24 = sub_20A8CF760();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor;
      break;
    case 2u:
      goto LABEL_13;
    case 3u:
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v26 = (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor;
      if (EnumCaseMultiPayload != 3) {
        goto LABEL_13;
      }
      char v24 = 1;
      break;
    default:
      sub_20A6221F4((uint64_t)v18, (uint64_t)v15);
      if (swift_getEnumCaseMultiPayload())
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v4);
LABEL_13:
        char v24 = 0;
        uint64_t v26 = (uint64_t (*)(void))sub_20A622A20;
      }
      else
      {
        uint64_t v28 = v32;
        uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
        v29(v9, v15, v4);
        v29(v6, v20, v4);
        char v24 = MEMORY[0x21051C160](v9, v6);
        uint64_t v30 = *(void (**)(char *, uint64_t))(v28 + 8);
        v30(v6, v4);
        v30(v9, v4);
        uint64_t v26 = (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor;
      }
      break;
  }
  sub_20A622A84((uint64_t)v18, v26);
  return v24 & 1;
}

uint64_t type metadata accessor for ForYouSectionDescriptor()
{
  uint64_t result = qword_26AC74948;
  if (!qword_26AC74948) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A6221F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ForYouSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for ForYouSectionDescriptor(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = sub_20A8CC310();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_20A8C3F00();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for ForYouSectionDescriptor(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v3 = sub_20A8CC310();
LABEL_6:
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  if (result != 1)
  {
    if (result) {
      return result;
    }
    uint64_t v3 = sub_20A8C3F00();
    goto LABEL_6;
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ForYouSectionDescriptor(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = sub_20A8CC310();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_20A8C3F00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for ForYouSectionDescriptor(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_20A622A84((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = sub_20A8CC310();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for ForYouSectionDescriptor(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = sub_20A8CC310();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_20A8C3F00();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for ForYouSectionDescriptor(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_20A622A84((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = sub_20A8CC310();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_20A8C3F00();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_20A622954()
{
  uint64_t result = sub_20A8C3F00();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20A8CC310();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void sub_20A622A20()
{
  if (!qword_26763CA98)
  {
    type metadata accessor for ForYouSectionDescriptor();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763CA98);
    }
  }
}

uint64_t sub_20A622A84(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A622AE4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v5 = sub_20A8C7240();
  uint64_t v26 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A622E8C();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C4530();
  double v14 = MEMORY[0x270FA5388](v13);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))((char *)&v24 - v15, a1, v13, v14);
  if (swift_dynamicCast())
  {
    unint64_t v25 = v7;
    uint64_t v17 = v28;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v18 = (void *)sub_20A8C4510();
    uint64_t v19 = sub_20A8C4840();
    unint64_t v21 = v20;

    if (!v3)
    {
      sub_20A622F20(&qword_26AC67580, MEMORY[0x263F7A1C0]);
      sub_20A8C5950();
      sub_20A531704(v19, v21);
      (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v17, v25, v5);
      uint64_t v22 = type metadata accessor for EngagementEvent();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v17, 0, 1, v22);
    }
  }
  else
  {
    uint64_t v23 = type metadata accessor for EngagementEvent();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v28, 1, 1, v23);
  }
}

uint64_t type metadata accessor for ArticleEngagementEventTranslator()
{
  return self;
}

void sub_20A622E74(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

void sub_20A622E8C()
{
  if (!qword_26AC69330)
  {
    sub_20A8C7250();
    sub_20A622F20(&qword_26AC69AB8, MEMORY[0x263F7A1D0]);
    unint64_t v0 = sub_20A8C4530();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69330);
    }
  }
}

uint64_t sub_20A622F20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A622F68(void *a1, uint64_t (*a2)(id), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  char v43 = a2;
  uint64_t v44 = a3;
  uint64_t v6 = sub_20A8CC220();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8CC250();
  uint64_t v42 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8CC280();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v18 = MEMORY[0x270FA5388](v17);
  unint64_t v20 = (char *)&v35 - v19;
  objc_msgSend(a1, sel_bounds, v18);
  double Height = CGRectGetHeight(v46);
  objc_msgSend(a1, sel_contentSize);
  double v23 = v22;
  id v24 = objc_msgSend(a1, sel_contentOffset);
  if (Height + v25 >= v23) {
    return v43(v24);
  }
  objc_msgSend(a1, sel_setContentOffset_animated_, 0);
  sub_20A44D17C();
  uint64_t v39 = v10;
  uint64_t v36 = sub_20A8CEBE0();
  sub_20A8CC270();
  MEMORY[0x2105245B0](v16, 1.0);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t))(v14 + 8);
  uint64_t v37 = v13;
  char v38 = v26;
  v26(v16, v13);
  uint64_t v27 = (void *)swift_allocObject();
  uint64_t v28 = v41;
  v27[2] = v40;
  v27[3] = v28;
  uint64_t v29 = v43;
  uint64_t v30 = v44;
  v27[4] = a1;
  void v27[5] = v29;
  v27[6] = v30;
  aBlock[4] = sub_20A624280;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4713FC;
  void aBlock[3] = &block_descriptor_12;
  uint64_t v31 = _Block_copy(aBlock);
  id v32 = a1;
  swift_retain();
  swift_release();
  sub_20A8CC240();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_20A62406C(&qword_26AC677A0, MEMORY[0x263F8F030]);
  sub_20A44D1C4(0);
  sub_20A62406C((unint64_t *)&qword_26AC7F7B0, sub_20A44D1C4);
  sub_20A8CF290();
  uint64_t v33 = (void *)v36;
  MEMORY[0x210526ED0](v20, v12, v9, v31);
  _Block_release(v31);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v39);
  return v38(v20, v37);
}

uint64_t sub_20A6233C0(uint64_t a1, int a2, void *a3, uint64_t (*a4)(id), uint64_t (*a5)(id), uint64_t a6)
{
  uint64_t v50 = a6;
  uint64_t v51 = a4;
  unint64_t v52 = a5;
  uint64_t v44 = sub_20A8CC220();
  uint64_t v9 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  unint64_t v49 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8CC250();
  uint64_t v48 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  char v47 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8CC280();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v18 = MEMORY[0x270FA5388](v17);
  unint64_t v20 = (char *)&v40 - v19;
  CGRect v46 = a3;
  id v21 = objc_msgSend(a3, sel_contentSize, v18);
  uint64_t v43 = a1;
  int v45 = a2;
  if (a2)
  {
    if (v22 > *(double *)&a1) {
      return v51(v21);
    }
  }
  else if (v23 > *(double *)&a1)
  {
    return v51(v21);
  }
  uint64_t v41 = v11;
  uint64_t v42 = v9;
  sub_20A8CC270();
  sub_20A62406C(&qword_26763CAA0, MEMORY[0x263F8F0C8]);
  uint64_t v24 = v50;
  char v25 = sub_20A8CE1F0();
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t))(v14 + 8);
  id v21 = (id)v26(v20, v13);
  if (v25) {
    return v51(v21);
  }
  sub_20A44D17C();
  uint64_t v40 = sub_20A8CEBE0();
  sub_20A8CC270();
  MEMORY[0x2105245B0](v16, 1.0);
  v26(v16, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v24, v13);
  unint64_t v28 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v43;
  *(unsigned char *)(v29 + 24) = v45 & 1;
  uint64_t v30 = v46;
  *(void *)(v29 + 32) = v46;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v29 + v28, v16, v13);
  uint64_t v31 = (uint64_t (**)(id))(v29 + ((v15 + v28 + 7) & 0xFFFFFFFFFFFFFFF8));
  id v32 = v26;
  uint64_t v33 = v52;
  void *v31 = v51;
  v31[1] = v33;
  aBlock[4] = sub_20A6241A0;
  aBlock[5] = v29;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4713FC;
  void aBlock[3] = &block_descriptor_6;
  uint64_t v34 = _Block_copy(aBlock);
  id v35 = v30;
  swift_retain();
  swift_release();
  uint64_t v36 = v47;
  sub_20A8CC240();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_20A62406C(&qword_26AC677A0, MEMORY[0x263F8F030]);
  sub_20A44D1C4(0);
  sub_20A62406C((unint64_t *)&qword_26AC7F7B0, sub_20A44D1C4);
  uint64_t v37 = v49;
  uint64_t v38 = v44;
  sub_20A8CF290();
  uint64_t v39 = (void *)v40;
  MEMORY[0x210526ED0](v20, v36, v37, v34);
  _Block_release(v34);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v37, v38);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v41);
  return v32(v20, v13);
}

void sub_20A6238F0()
{
  id v0 = objc_msgSend(self, sel_sharedApplication);
  id v1 = objc_msgSend(v0, sel_delegate);

  if (v1)
  {
    if (objc_msgSend(v1, sel_respondsToSelector_, sel_window))
    {
      id v2 = objc_msgSend(v1, sel_window);
      swift_unknownObjectRelease();
      if (v2)
      {
        objc_msgSend(v2, sel_setAlpha_, 1.0);
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_20A6239F8(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  id v3 = objc_msgSend(self, sel_sharedApplication);
  id v4 = objc_msgSend(v3, sel_delegate);

  if (v4)
  {
    if (objc_msgSend(v4, sel_respondsToSelector_, sel_window))
    {
      id v6 = objc_msgSend(v4, sel_window);
      uint64_t v5 = swift_unknownObjectRelease();
      if (v6)
      {
        objc_msgSend(v6, sel_setAlpha_, 1.0);
      }
    }
    else
    {
      uint64_t v5 = swift_unknownObjectRelease();
    }
  }
  return a2(v5);
}

uint64_t sub_20A623AD4(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  int v32 = a2;
  uint64_t v31 = a1;
  uint64_t v38 = sub_20A8CC220();
  uint64_t v41 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8CC250();
  uint64_t v39 = *(void *)(v11 - 8);
  uint64_t v40 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_20A8CC280();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  unint64_t v20 = (char *)&v31 - v19;
  sub_20A44D17C();
  uint64_t v35 = sub_20A8CEBE0();
  sub_20A8CC270();
  MEMORY[0x2105245B0](v17, a7);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v15 + 8);
  v36(v17, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a4, v14);
  unint64_t v21 = (*(unsigned __int8 *)(v15 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v31;
  *(unsigned char *)(v22 + 24) = v32 & 1;
  uint64_t v23 = v33;
  uint64_t v24 = v34;
  *(void *)(v22 + 32) = a3;
  *(void *)(v22 + 40) = v23;
  *(void *)(v22 + 48) = v24;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v22 + v21, v17, v14);
  aBlock[4] = sub_20A623FFC;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4713FC;
  void aBlock[3] = &block_descriptor_25;
  char v25 = _Block_copy(aBlock);
  id v26 = a3;
  swift_retain();
  swift_release();
  sub_20A8CC240();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_20A62406C(&qword_26AC677A0, MEMORY[0x263F8F030]);
  sub_20A44D1C4(0);
  sub_20A62406C((unint64_t *)&qword_26AC7F7B0, sub_20A44D1C4);
  unint64_t v28 = v37;
  uint64_t v27 = v38;
  sub_20A8CF290();
  uint64_t v29 = (void *)v35;
  MEMORY[0x210526ED0](v20, v13, v28, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v27);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v40);
  return ((uint64_t (*)(char *, uint64_t))v36)(v20, v14);
}

uint64_t sub_20A623F28()
{
  uint64_t v1 = sub_20A8CC280();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_20A623FFC()
{
  uint64_t v1 = *(void *)(sub_20A8CC280() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  int v3 = *(unsigned __int8 *)(v0 + 24);
  id v4 = *(void **)(v0 + 32);
  uint64_t v5 = *(uint64_t (**)(id))(v0 + 40);
  id v6 = *(uint64_t (**)(id))(v0 + 48);
  uint64_t v7 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_20A6233C0(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_20A62406C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A6240B4()
{
  uint64_t v1 = sub_20A8CC280();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A6241A0()
{
  uint64_t v1 = *(void *)(sub_20A8CC280() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = v0 + v2;
  uint64_t v7 = (uint64_t *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  v10.n128_u64[0] = 0;

  return sub_20A623AD4(v3, v4, v5, v6, v8, v9, v10);
}

uint64_t sub_20A624240()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A624280()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t result = v1 + 1;
  if (!__OFADD__(v1, 1)) {
    return sub_20A6244AC(result, *(void *)(v0 + 24), *(void **)(v0 + 32), *(uint64_t (**)(double))(v0 + 40), *(void *)(v0 + 48), 1.0);
  }
  __break(1u);
  return result;
}

void sub_20A6242A0(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(self, sel_sharedApplication);
  id v5 = objc_msgSend(v4, sel_delegate);

  if (v5)
  {
    if (objc_msgSend(v5, sel_respondsToSelector_, sel_window))
    {
      id v6 = objc_msgSend(v5, sel_window);
      swift_unknownObjectRelease();
      if (v6)
      {
        objc_msgSend(v6, sel_setAlpha_, 0.0);
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  uint64_t v7 = self;
  uint64_t v15 = sub_20A6238F0;
  uint64_t v16 = 0;
  uint64_t v11 = MEMORY[0x263EF8330];
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_20A4713FC;
  uint64_t v14 = &block_descriptor_21;
  uint64_t v8 = _Block_copy(&v11);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  uint64_t v15 = sub_20A624940;
  uint64_t v16 = v9;
  uint64_t v11 = MEMORY[0x263EF8330];
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_20A73FFBC;
  uint64_t v14 = &block_descriptor_27;
  __n128 v10 = _Block_copy(&v11);
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_animateWithDuration_animations_completion_, v8, v10, 0.5);
  _Block_release(v10);
  _Block_release(v8);
}

uint64_t sub_20A6244AC(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(double), uint64_t a5, double a6)
{
  CGRect v46 = a3;
  uint64_t v11 = sub_20A8CC220();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_20A8CC250();
  uint64_t v47 = *(void *)(v15 - 8);
  uint64_t v48 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_20A8CC280();
  MEMORY[0x270FA5388](v18);
  unint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v24 = MEMORY[0x270FA5388](v21);
  id v26 = (char *)&v39 - v25;
  if (a1 >= a2) {
    return a4(v24);
  }
  uint64_t v40 = v14;
  uint64_t v41 = v11;
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v29 = v22;
  uint64_t v43 = v22;
  uint64_t v30 = v23;
  sub_20A44D17C();
  uint64_t v45 = v12;
  uint64_t v42 = sub_20A8CEBE0();
  sub_20A8CC270();
  MEMORY[0x2105245B0](v20, a6);
  uint64_t v44 = *(void (**)(char *, uint64_t))(v30 + 8);
  v44(v20, v29);
  uint64_t v31 = (void *)swift_allocObject();
  int v32 = v46;
  uint64_t v31[2] = v46;
  v31[3] = v27;
  void v31[4] = v28;
  v31[5] = a1;
  v31[6] = a2;
  aBlock[4] = sub_20A4D6DD0;
  aBlock[5] = v31;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4713FC;
  void aBlock[3] = &block_descriptor_18;
  uint64_t v33 = _Block_copy(aBlock);
  id v34 = v32;
  swift_retain();
  swift_release();
  sub_20A8CC240();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_20A62406C(&qword_26AC677A0, MEMORY[0x263F8F030]);
  sub_20A44D1C4(0);
  sub_20A62406C((unint64_t *)&qword_26AC7F7B0, sub_20A44D1C4);
  uint64_t v35 = v40;
  uint64_t v36 = v41;
  sub_20A8CF290();
  uint64_t v37 = (void *)v42;
  MEMORY[0x210526ED0](v26, v17, v35, v33);
  _Block_release(v33);

  (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v36);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v48);
  return ((uint64_t (*)(char *, uint64_t))v44)(v26, v43);
}

uint64_t sub_20A6248C8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A624908()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A624940(uint64_t a1)
{
  return sub_20A6239F8(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

uint64_t sub_20A624970(uint64_t a1)
{
  uint64_t v34 = a1;
  uint64_t v35 = *v1;
  uint64_t v32 = sub_20A8C2BC0();
  uint64_t v2 = *(void *)(v32 - 8);
  uint64_t v33 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](v32);
  id v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8CC230();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C59F0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v30 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v29 - v14;
  *(uint64_t *)((char *)&v29 - v14) = 0x404E000000000000;
  uint64_t v16 = *MEMORY[0x263F7CD70];
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, double))(v10 + 104);
  uint64_t v29 = v9;
  v17((char *)&v29 - v14, v16, v9, v13);
  sub_20A44D17C();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F060], v5);
  uint64_t v31 = sub_20A8CEC10();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v18 = v2;
  uint64_t v19 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v34, v32);
  unint64_t v20 = v30;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v30, v15, v9);
  uint64_t v21 = v18;
  unint64_t v22 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v23 = (v33 + *(unsigned __int8 *)(v10 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v24 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v24 + v22, v4, v19);
  uint64_t v25 = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v24 + v23, v20, v29);
  sub_20A8C3D00();
  id v26 = (void *)v31;
  uint64_t v27 = sub_20A8C6660();

  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v25);
  return v27;
}

uint64_t sub_20A624D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v9[1] = a3;
  uint64_t v3 = sub_20A8C5B40();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_20A8C3EC0();
  sub_20A5583D8((uint64_t)v6);
  uint64_t v7 = sub_20A8C31C0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

void sub_20A624E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a5;
  void v8[3] = a1;
  void v8[4] = a2;
  uint64_t v9 = self;
  swift_retain();
  swift_retain();
  if (objc_msgSend(v9, sel_isMainThread))
  {
    sub_20A8C5C70();
    sub_20A8C5C40();
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = sub_20A6254F8;
    *(void *)(v10 + 24) = v8;
    swift_retain();
    sub_20A8C5C50();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    __swift_project_boxed_opaque_existential_1((void *)(a5 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_priceDataManager), *(void *)(a5 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_priceDataManager + 24));
    sub_20A5C7F24();
    uint64_t v11 = sub_20A8C3F00();
    uint64_t v12 = *(void *)(v11 - 8);
    unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_20A8D3DC0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 16))(v14 + v13, a5 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_stock, v11);
    sub_20A8C39E0();
    swift_bridgeObjectRelease();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a1;
    *(void *)(v15 + 24) = a2;
    swift_retain();
    id v16 = (id)sub_20A8C6450();
    sub_20A8C6500();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
}

void sub_20A62514C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_project_boxed_opaque_existential_1((void *)(a1 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_priceDataManager), *(void *)(a1 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_priceDataManager + 24));
  sub_20A5C7F24();
  uint64_t v6 = sub_20A8C3F00();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v9 + v8, a1 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_stock, v6);
  sub_20A8C39E0();
  swift_bridgeObjectRelease();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  swift_retain();
  id v11 = (id)sub_20A8C6450();
  sub_20A8C6500();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_20A625300()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_stock;
  uint64_t v2 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_priceDataManager);

  return swift_deallocClassInstance();
}

uint64_t sub_20A6253C0()
{
  return type metadata accessor for StockChartDataManager();
}

uint64_t type metadata accessor for StockChartDataManager()
{
  uint64_t result = qword_26AC73048;
  if (!qword_26AC73048) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A625414()
{
  uint64_t result = sub_20A8C3F00();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_20A6254B8()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_20A6254F8()
{
  sub_20A62514C(v0[2], v0[3], v0[4]);
}

uint64_t sub_20A625504()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_20A625534()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A62556C()
{
  uint64_t v1 = sub_20A8C2BC0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = sub_20A8C59F0();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_20A6256BC(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_20A8C2BC0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_20A8C59F0() - 8);
  return sub_20A624D28(a1, v1 + v4, v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));
}

uint64_t sub_20A62578C()
{
  return sub_20A625504();
}

uint64_t sub_20A6257AC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *(uint64_t *)((char *)a1 + *(int *)(type metadata accessor for StocksAudioTrack() + 44));

  return MEMORY[0x270F4ED00](v5, v6, a2, a3);
}

uint64_t *sub_20A625814(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      sub_20A42CB84(0);
      uint64_t v18 = v17;
      uint64_t v19 = *((void *)v17 - 1);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v19 + 48))(a2, 1, v17))
      {
        sub_20A42CD3C(0);
        memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        uint64_t v27 = sub_20A8CC470();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
        *(uint64_t *)((char *)a1 + v18[7]) = *(uint64_t *)((char *)a2 + v18[7]);
        *(uint64_t *)((char *)a1 + v18[8]) = *(uint64_t *)((char *)a2 + v18[8]);
        *(uint64_t *)((char *)a1 + v18[9]) = *(uint64_t *)((char *)a2 + v18[9]);
        uint64_t v28 = *(void (**)(uint64_t *, void, uint64_t, int *))(v19 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v28(a1, 0, 1, v18);
      }
      sub_20A609F34();
      uint64_t v30 = *(int *)(v29 + 48);
      uint64_t v31 = (char *)a1 + v30;
      uint64_t v32 = (char *)a2 + v30;
      uint64_t v33 = *((void *)v32 + 1);
      if (v33)
      {
        *(void *)uint64_t v31 = *(void *)v32;
        *((void *)v31 + 1) = v33;
        uint64_t v34 = (void *)*((void *)v32 + 2);
        *((void *)v31 + 2) = v34;
        *(_OWORD *)(v31 + 24) = *(_OWORD *)(v32 + 24);
        *(_OWORD *)(v31 + 40) = *(_OWORD *)(v32 + 40);
        *(_OWORD *)(v31 + 56) = *(_OWORD *)(v32 + 56);
        *(_OWORD *)(v31 + 72) = *(_OWORD *)(v32 + 72);
        swift_bridgeObjectRetain();
        id v35 = v34;
      }
      else
      {
        long long v67 = *((_OWORD *)v32 + 3);
        *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
        *((_OWORD *)v31 + 3) = v67;
        *((_OWORD *)v31 + 4) = *((_OWORD *)v32 + 4);
        *((void *)v31 + 10) = *((void *)v32 + 10);
        long long v68 = *((_OWORD *)v32 + 1);
        *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
        *((_OWORD *)v31 + 1) = v68;
      }
LABEL_35:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = sub_20A8C3F00();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = (int *)type metadata accessor for StockFeedMastheadModel();
      uint64_t v10 = v9[5];
      id v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_20A8C3E10();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_20A62B7F4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      uint64_t v21 = v9[6];
      unint64_t v22 = (char *)a1 + v21;
      unint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_20A8C3D00();
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        sub_20A62B7F4(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], MEMORY[0x263F8D8F0]);
        memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      uint64_t v150 = a2;
      uint64_t v152 = v9;
      uint64_t v36 = v9[7];
      uint64_t v149 = a1;
      uint64_t v37 = (char *)a1 + v36;
      uint64_t v38 = (char *)a2 + v36;
      *(void *)uint64_t v37 = *(uint64_t *)((char *)a2 + v36);
      v37[8] = *((unsigned char *)a2 + v36 + 8);
      *((void *)v37 + 2) = *(uint64_t *)((char *)a2 + v36 + 16);
      v37[24] = *((unsigned char *)a2 + v36 + 24);
      *((void *)v37 + 4) = *(uint64_t *)((char *)a2 + v36 + 32);
      unsigned char v37[40] = *((unsigned char *)a2 + v36 + 40);
      uint64_t v39 = *(uint64_t *)((char *)a2 + v36 + 56);
      *((void *)v37 + 6) = *(uint64_t *)((char *)a2 + v36 + 48);
      *((void *)v37 + 7) = v39;
      uint64_t v40 = *(uint64_t *)((char *)a2 + v36 + 72);
      *((void *)v37 + 8) = *(uint64_t *)((char *)a2 + v36 + 64);
      *((void *)v37 + 9) = v40;
      uint64_t v41 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v42 = v41[9];
      uint64_t v43 = &v37[v42];
      uint64_t v44 = &v38[v42];
      uint64_t v45 = sub_20A8C2EB0();
      CGRect v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v143 = v46;
      uint64_t v144 = v45;
      v46(v43, v44, v45);
      uint64_t v47 = v41[10];
      uint64_t v48 = &v37[v47];
      unint64_t v49 = &v38[v47];
      uint64_t v50 = sub_20A8C4030();
      uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
      v51(v48, v49, v50);
      uint64_t v145 = v41;
      uint64_t v52 = v41[11];
      uint64_t v53 = &v37[v52];
      uint64_t v54 = &v38[v52];
      uint64_t v55 = sub_20A8C2990();
      uint64_t v139 = *(void (**)(char *, char *))(*(void *)(v55 - 8) + 16);
      uint64_t v140 = v55;
      v139(v53, v54);
      uint64_t v56 = type metadata accessor for QuoteViewModel();
      uint64_t v57 = *(int *)(v56 + 20);
      uint64_t v58 = &v37[v57];
      uint64_t v59 = &v38[v57];
      uint64_t v60 = sub_20A8C3410();
      uint64_t v137 = *(void (**)(char *, char *))(*(void *)(v60 - 8) + 16);
      uint64_t v138 = v60;
      v137(v58, v59);
      uint64_t v61 = *(int *)(v56 + 24);
      uint64_t v62 = &v37[v61];
      double v63 = &v38[v61];
      uint64_t v64 = type metadata accessor for QuoteSummaryTimeRange();
      uint64_t v146 = *(void *)(v64 - 8);
      uint64_t v136 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v146 + 48);
      uint64_t v141 = v51;
      uint64_t v142 = v50;
      if (v136(v63, 1, v64))
      {
        sub_20A62B7F4(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
        memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
        a1 = v149;
        double v66 = v150;
      }
      else
      {
        uint64_t v147 = v64;
        uint64_t v135 = v56;
        uint64_t v69 = sub_20A8C2BC0();
        uint64_t v70 = *(void *)(v69 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v63, 3, v69))
        {
          uint64_t v71 = v146;
          memcpy(v62, v63, *(void *)(v146 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v62, v63, v69);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v62, 0, 3, v69);
          uint64_t v71 = v146;
        }
        a1 = v149;
        double v66 = v150;
        uint64_t v64 = v147;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v62, 0, 1, v147);
        uint64_t v56 = v135;
      }
      uint64_t v72 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
      double v73 = &v37[v72];
      double v74 = &v38[v72];
      uint64_t v75 = *(void *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(&v38[v72], 1, v56))
      {
        sub_20A62B7F4(0, (unint64_t *)&qword_26AC82B28, (uint64_t (*)(uint64_t))type metadata accessor for QuoteViewModel, MEMORY[0x263F8D8F0]);
        memcpy(v73, v74, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        uint64_t v151 = v75;
        *(void *)double v73 = *(void *)v74;
        v73[8] = v74[8];
        *((void *)v73 + 2) = *((void *)v74 + 2);
        v73[24] = v74[24];
        *((void *)v73 + 4) = *((void *)v74 + 4);
        v73[40] = v74[40];
        uint64_t v77 = *((void *)v74 + 7);
        *((void *)v73 + 6) = *((void *)v74 + 6);
        *((void *)v73 + 7) = v77;
        uint64_t v148 = v64;
        uint64_t v78 = *((void *)v74 + 9);
        *((void *)v73 + 8) = *((void *)v74 + 8);
        *((void *)v73 + 9) = v78;
        uint64_t v79 = v145;
        uint64_t v80 = v145[9];
        uint64_t v81 = &v73[v80];
        uint64_t v82 = v56;
        uint64_t v83 = &v74[v80];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v143(v81, v83, v144);
        v141(&v73[v79[10]], &v74[v79[10]], v142);
        ((void (*)(char *, char *, uint64_t))v139)(&v73[v79[11]], &v74[v79[11]], v140);
        ((void (*)(char *, char *, uint64_t))v137)(&v73[*(int *)(v82 + 20)], &v74[*(int *)(v82 + 20)], v138);
        uint64_t v84 = v82;
        uint64_t v85 = *(int *)(v82 + 24);
        uint64_t v86 = &v73[v85];
        uint64_t v87 = &v74[v85];
        if (v136(&v74[v85], 1, v148))
        {
          sub_20A62B7F4(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
          memcpy(v86, v87, *(void *)(*(void *)(v88 - 8) + 64));
        }
        else
        {
          uint64_t v89 = sub_20A8C2BC0();
          uint64_t v90 = *(void *)(v89 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v87, 3, v89))
          {
            uint64_t v91 = v146;
            memcpy(v86, v87, *(void *)(v146 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v86, v87, v89);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v86, 0, 3, v89);
            uint64_t v91 = v146;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v86, 0, 1, v148);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v151 + 56))(v73, 0, 1, v84);
      }
      *((unsigned char *)a1 + v152[8]) = *((unsigned char *)v66 + v152[8]);
      sub_20A42CA7C();
      uint64_t v93 = *(int *)(v92 + 48);
      uint64_t v94 = (char *)a1 + v93;
      uint64_t v95 = (uint64_t)v66 + v93;
      uint64_t v96 = sub_20A8CA9F0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v96 - 8) + 16))(v94, v95, v96);
      uint64_t v97 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
      uint64_t v98 = v97[5];
      uint64_t v99 = &v94[v98];
      uint64_t v100 = (_OWORD *)(v95 + v98);
      long long v101 = v100[1];
      *(_OWORD *)uint64_t v99 = *v100;
      *((_OWORD *)v99 + 1) = v101;
      uint64_t v102 = v97[6];
      uint64_t v103 = &v94[v102];
      uint64_t v104 = (_OWORD *)(v95 + v102);
      long long v105 = v104[1];
      *(_OWORD *)uint64_t v103 = *v104;
      *((_OWORD *)v103 + 1) = v105;
      uint64_t v106 = v97[7];
      uint64_t v107 = &v94[v106];
      unint64_t v108 = (_OWORD *)(v95 + v106);
      long long v109 = v108[1];
      *(_OWORD *)uint64_t v107 = *v108;
      *((_OWORD *)v107 + 1) = v109;
      uint64_t v110 = v97[8];
      uint64_t v111 = &v94[v110];
      uint64_t v112 = (_OWORD *)(v95 + v110);
      long long v113 = v112[1];
      *(_OWORD *)uint64_t v111 = *v112;
      *((_OWORD *)v111 + 1) = v113;
      uint64_t v114 = v97[9];
      uint64_t v115 = &v94[v114];
      uint64_t v116 = (_OWORD *)(v95 + v114);
      long long v117 = v116[1];
      *(_OWORD *)uint64_t v115 = *v116;
      *((_OWORD *)v115 + 1) = v117;
      uint64_t v118 = v97[10];
      uint64_t v119 = &v94[v118];
      uint64_t v120 = (_OWORD *)(v95 + v118);
      long long v121 = v120[1];
      *(_OWORD *)uint64_t v119 = *v120;
      *((_OWORD *)v119 + 1) = v121;
      uint64_t v122 = v97[11];
      uint64_t v123 = &v94[v122];
      uint64_t v124 = (_OWORD *)(v95 + v122);
      long long v125 = v124[1];
      *(_OWORD *)uint64_t v123 = *v124;
      *((_OWORD *)v123 + 1) = v125;
      memcpy(&v94[v97[12]], (const void *)(v95 + v97[12]), 0x1A1uLL);
      uint64_t v126 = v97[13];
      unint64_t v127 = &v94[v126];
      uint64_t v128 = (_OWORD *)(v95 + v126);
      long long v129 = v128[1];
      *(_OWORD *)unint64_t v127 = *v128;
      *((_OWORD *)v127 + 1) = v129;
      uint64_t v130 = v97[14];
      uint64_t v131 = &v94[v130];
      uint64_t v132 = (_OWORD *)(v95 + v130);
      long long v133 = v132[1];
      *(_OWORD *)uint64_t v131 = *v132;
      *((_OWORD *)v131 + 1) = v133;
      v94[v97[15]] = *(unsigned char *)(v95 + v97[15]);
      *(void *)&v94[v97[16]] = *(void *)(v95 + v97[16]);
      goto LABEL_35;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t type metadata accessor for StockFeedLayoutSectionDescriptor.Data()
{
  return __swift_instantiateGenericMetadata();
}

void sub_20A62657C(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    sub_20A42CB84(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(a1, 1, v33))
    {
      uint64_t v34 = sub_20A8CC470();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(a1, v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_20A609F34();
    uint64_t v36 = a1 + *(int *)(v35 + 48);
    if (*(void *)(v36 + 8))
    {
      swift_bridgeObjectRelease();
      uint64_t v37 = *(void **)(v36 + 16);
    }
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v3 = sub_20A8C3F00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    unint64_t v4 = (int *)type metadata accessor for StockFeedMastheadModel();
    uint64_t v5 = a1 + v4[5];
    uint64_t v6 = sub_20A8C3E10();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    uint64_t v8 = a1 + v4[6];
    uint64_t v9 = sub_20A8C3D00();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    uint64_t v11 = a1 + v4[7];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = (int *)type metadata accessor for PriceViewModel();
    uint64_t v13 = v11 + v12[9];
    uint64_t v14 = sub_20A8C2EB0();
    uint64_t v43 = *(void (**)(uint64_t))(*(void *)(v14 - 8) + 8);
    uint64_t v44 = v14;
    v43(v13);
    uint64_t v15 = v11 + v12[10];
    uint64_t v16 = sub_20A8C4030();
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
    v42(v15, v16);
    uint64_t v17 = v11 + v12[11];
    uint64_t v18 = sub_20A8C2990();
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
    v41(v17, v18);
    uint64_t v19 = type metadata accessor for QuoteViewModel();
    uint64_t v20 = v11 + *(int *)(v19 + 20);
    uint64_t v21 = sub_20A8C3410();
    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
    v40(v20, v21);
    uint64_t v22 = v11 + *(int *)(v19 + 24);
    uint64_t v23 = type metadata accessor for QuoteSummaryTimeRange();
    uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
    if (!v39(v22, 1, v23))
    {
      uint64_t v24 = sub_20A8C2BC0();
      uint64_t v38 = *(void *)(v24 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v22, 3, v24)) {
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v22, v24);
      }
    }
    uint64_t v25 = v11 + *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v25, 1, v19))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t, uint64_t))v43)(v25 + v12[9], v44);
      v42(v25 + v12[10], v16);
      v41(v25 + v12[11], v18);
      v40(v25 + *(int *)(v19 + 20), v21);
      uint64_t v26 = v25 + *(int *)(v19 + 24);
      if (!v39(v26, 1, v23))
      {
        uint64_t v27 = sub_20A8C2BC0();
        uint64_t v28 = *(void *)(v27 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 3, v27)) {
          (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
        }
      }
    }
    sub_20A42CA7C();
    uint64_t v30 = a1 + *(int *)(v29 + 48);
    uint64_t v31 = sub_20A8CA9F0();
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8);
    v32(v30, v31);
  }
}

char *sub_20A626C2C(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    sub_20A42CB84(0);
    uint64_t v16 = v15;
    uint64_t v17 = *((void *)v15 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(a2, 1, v15))
    {
      sub_20A42CD3C(0);
      memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v25 = sub_20A8CC470();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
      *(void *)&a1[v16[7]] = *(void *)&a2[v16[7]];
      *(void *)&a1[v16[8]] = *(void *)&a2[v16[8]];
      *(void *)&a1[v16[9]] = *(void *)&a2[v16[9]];
      uint64_t v26 = *(void (**)(char *, void, uint64_t, int *))(v17 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26(a1, 0, 1, v16);
    }
    sub_20A609F34();
    uint64_t v28 = *(int *)(v27 + 48);
    uint64_t v29 = &a1[v28];
    uint64_t v30 = &a2[v28];
    uint64_t v31 = *((void *)v30 + 1);
    if (v31)
    {
      *(void *)uint64_t v29 = *(void *)v30;
      *((void *)v29 + 1) = v31;
      uint64_t v32 = (void *)*((void *)v30 + 2);
      *((void *)v29 + 2) = v32;
      *(_OWORD *)(v29 + 24) = *(_OWORD *)(v30 + 24);
      *(_OWORD *)(v29 + 40) = *(_OWORD *)(v30 + 40);
      *(_OWORD *)(v29 + 56) = *(_OWORD *)(v30 + 56);
      *(_OWORD *)(v29 + 72) = *(_OWORD *)(v30 + 72);
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    else
    {
      long long v65 = *((_OWORD *)v30 + 3);
      *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
      *((_OWORD *)v29 + 3) = v65;
      *((_OWORD *)v29 + 4) = *((_OWORD *)v30 + 4);
      *((void *)v29 + 10) = *((void *)v30 + 10);
      long long v66 = *((_OWORD *)v30 + 1);
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v66;
    }
LABEL_33:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = sub_20A8C3F00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for StockFeedMastheadModel();
    uint64_t v9 = v8[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_20A8C3E10();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      sub_20A62B7F4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v19 = v8[6];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    uint64_t v22 = sub_20A8C3D00();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      sub_20A62B7F4(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], MEMORY[0x263F8D8F0]);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    uint64_t v146 = a1;
    uint64_t v148 = v8;
    uint64_t v34 = v8[7];
    uint64_t v35 = &a1[v34];
    uint64_t v149 = a2;
    uint64_t v36 = &a2[v34];
    *(void *)uint64_t v35 = *(void *)&a2[v34];
    v35[8] = a2[v34 + 8];
    *((void *)v35 + 2) = *(void *)&a2[v34 + 16];
    v35[24] = a2[v34 + 24];
    *((void *)v35 + 4) = *(void *)&a2[v34 + 32];
    v35[40] = a2[v34 + 40];
    uint64_t v37 = *(void *)&a2[v34 + 56];
    *((void *)v35 + 6) = *(void *)&a2[v34 + 48];
    *((void *)v35 + 7) = v37;
    uint64_t v38 = *(void *)&a2[v34 + 72];
    *((void *)v35 + 8) = *(void *)&a2[v34 + 64];
    *((void *)v35 + 9) = v38;
    uint64_t v39 = (int *)type metadata accessor for PriceViewModel();
    uint64_t v40 = v39[9];
    uint64_t v41 = &v35[v40];
    uint64_t v42 = &v36[v40];
    uint64_t v43 = sub_20A8C2EB0();
    uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v142 = v44;
    uint64_t v143 = v43;
    v44(v41, v42, v43);
    uint64_t v45 = v39[10];
    CGRect v46 = &v35[v45];
    uint64_t v47 = &v36[v45];
    uint64_t v48 = sub_20A8C4030();
    unint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16);
    v49(v46, v47, v48);
    uint64_t v144 = v39;
    uint64_t v50 = v39[11];
    uint64_t v51 = &v35[v50];
    uint64_t v52 = &v36[v50];
    uint64_t v53 = sub_20A8C2990();
    uint64_t v138 = *(void (**)(char *, char *))(*(void *)(v53 - 8) + 16);
    uint64_t v139 = v53;
    v138(v51, v52);
    uint64_t v54 = type metadata accessor for QuoteViewModel();
    uint64_t v55 = *(int *)(v54 + 20);
    uint64_t v56 = &v35[v55];
    uint64_t v57 = &v36[v55];
    uint64_t v58 = sub_20A8C3410();
    uint64_t v136 = *(void (**)(char *, char *))(*(void *)(v58 - 8) + 16);
    uint64_t v137 = v58;
    v136(v56, v57);
    uint64_t v59 = *(int *)(v54 + 24);
    uint64_t v60 = &v35[v59];
    uint64_t v61 = &v36[v59];
    uint64_t v62 = type metadata accessor for QuoteSummaryTimeRange();
    uint64_t v145 = *(void *)(v62 - 8);
    uint64_t v135 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v145 + 48);
    uint64_t v140 = v49;
    uint64_t v141 = v48;
    if (v135(v61, 1, v62))
    {
      sub_20A62B7F4(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
      memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
      uint64_t v64 = v149;
      a1 = v146;
    }
    else
    {
      uint64_t v134 = v62;
      uint64_t v67 = sub_20A8C2BC0();
      uint64_t v68 = *(void *)(v67 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v61, 3, v67))
      {
        uint64_t v69 = v145;
        memcpy(v60, v61, *(void *)(v145 + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v60, v61, v67);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v60, 0, 3, v67);
        uint64_t v69 = v145;
      }
      a1 = v146;
      uint64_t v64 = v149;
      uint64_t v70 = *(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56);
      uint64_t v62 = v134;
      v70(v60, 0, 1, v134);
    }
    uint64_t v71 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
    uint64_t v72 = &v35[v71];
    double v73 = &v36[v71];
    uint64_t v74 = *(void *)(v54 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(&v36[v71], 1, v54))
    {
      sub_20A62B7F4(0, (unint64_t *)&qword_26AC82B28, (uint64_t (*)(uint64_t))type metadata accessor for QuoteViewModel, MEMORY[0x263F8D8F0]);
      memcpy(v72, v73, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      uint64_t v147 = v74;
      *(void *)uint64_t v72 = *(void *)v73;
      v72[8] = v73[8];
      *((void *)v72 + 2) = *((void *)v73 + 2);
      v72[24] = v73[24];
      *((void *)v72 + 4) = *((void *)v73 + 4);
      v72[40] = v73[40];
      uint64_t v76 = *((void *)v73 + 7);
      *((void *)v72 + 6) = *((void *)v73 + 6);
      *((void *)v72 + 7) = v76;
      uint64_t v77 = *((void *)v73 + 9);
      *((void *)v72 + 8) = *((void *)v73 + 8);
      *((void *)v72 + 9) = v77;
      uint64_t v78 = v144;
      uint64_t v79 = v144[9];
      uint64_t v80 = v62;
      uint64_t v81 = &v72[v79];
      uint64_t v82 = &v73[v79];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v142(v81, v82, v143);
      v140(&v72[v78[10]], &v73[v78[10]], v141);
      ((void (*)(char *, char *, uint64_t))v138)(&v72[v78[11]], &v73[v78[11]], v139);
      ((void (*)(char *, char *, uint64_t))v136)(&v72[*(int *)(v54 + 20)], &v73[*(int *)(v54 + 20)], v137);
      uint64_t v83 = *(int *)(v54 + 24);
      uint64_t v84 = &v72[v83];
      uint64_t v85 = &v73[v83];
      if (v135(v85, 1, v80))
      {
        sub_20A62B7F4(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
        memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
        uint64_t v64 = v149;
      }
      else
      {
        uint64_t v87 = v80;
        uint64_t v88 = sub_20A8C2BC0();
        uint64_t v89 = *(void *)(v88 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v85, 3, v88))
        {
          uint64_t v90 = v145;
          memcpy(v84, v85, *(void *)(v145 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v84, v85, v88);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v84, 0, 3, v88);
          uint64_t v90 = v145;
        }
        uint64_t v64 = v149;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v84, 0, 1, v87);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v147 + 56))(v72, 0, 1, v54);
    }
    a1[v148[8]] = v64[v148[8]];
    sub_20A42CA7C();
    uint64_t v92 = *(int *)(v91 + 48);
    uint64_t v93 = &a1[v92];
    uint64_t v94 = &v64[v92];
    uint64_t v95 = sub_20A8CA9F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16))(v93, v94, v95);
    uint64_t v96 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
    uint64_t v97 = v96[5];
    uint64_t v98 = &v93[v97];
    uint64_t v99 = &v94[v97];
    long long v100 = *((_OWORD *)v99 + 1);
    *(_OWORD *)uint64_t v98 = *(_OWORD *)v99;
    *((_OWORD *)v98 + 1) = v100;
    uint64_t v101 = v96[6];
    uint64_t v102 = &v93[v101];
    uint64_t v103 = &v94[v101];
    long long v104 = *((_OWORD *)v103 + 1);
    *(_OWORD *)uint64_t v102 = *(_OWORD *)v103;
    *((_OWORD *)v102 + 1) = v104;
    uint64_t v105 = v96[7];
    uint64_t v106 = &v93[v105];
    uint64_t v107 = &v94[v105];
    long long v108 = *((_OWORD *)v107 + 1);
    *(_OWORD *)uint64_t v106 = *(_OWORD *)v107;
    *((_OWORD *)v106 + 1) = v108;
    uint64_t v109 = v96[8];
    uint64_t v110 = &v93[v109];
    uint64_t v111 = &v94[v109];
    long long v112 = *((_OWORD *)v111 + 1);
    *(_OWORD *)uint64_t v110 = *(_OWORD *)v111;
    *((_OWORD *)v110 + 1) = v112;
    uint64_t v113 = v96[9];
    uint64_t v114 = &v93[v113];
    uint64_t v115 = &v94[v113];
    long long v116 = *((_OWORD *)v115 + 1);
    *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
    *((_OWORD *)v114 + 1) = v116;
    uint64_t v117 = v96[10];
    uint64_t v118 = &v93[v117];
    uint64_t v119 = &v94[v117];
    long long v120 = *((_OWORD *)v119 + 1);
    *(_OWORD *)uint64_t v118 = *(_OWORD *)v119;
    *((_OWORD *)v118 + 1) = v120;
    uint64_t v121 = v96[11];
    uint64_t v122 = &v93[v121];
    uint64_t v123 = &v94[v121];
    long long v124 = *((_OWORD *)v123 + 1);
    *(_OWORD *)uint64_t v122 = *(_OWORD *)v123;
    *((_OWORD *)v122 + 1) = v124;
    memcpy(&v93[v96[12]], &v94[v96[12]], 0x1A1uLL);
    uint64_t v125 = v96[13];
    uint64_t v126 = &v93[v125];
    unint64_t v127 = &v94[v125];
    long long v128 = *((_OWORD *)v127 + 1);
    *(_OWORD *)uint64_t v126 = *(_OWORD *)v127;
    *((_OWORD *)v126 + 1) = v128;
    uint64_t v129 = v96[14];
    uint64_t v130 = &v93[v129];
    uint64_t v131 = &v94[v129];
    long long v132 = *((_OWORD *)v131 + 1);
    *(_OWORD *)uint64_t v130 = *(_OWORD *)v131;
    *((_OWORD *)v130 + 1) = v132;
    v93[v96[15]] = v94[v96[15]];
    *(void *)&v93[v96[16]] = *(void *)&v94[v96[16]];
    goto LABEL_33;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_20A627938(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v3 = (char *)a1;
  if ((char *)a1 != a2)
  {
    sub_20A62B9AC(a1, type metadata accessor for StockFeedLayoutSectionDescriptor);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      sub_20A42CB84(0);
      uint64_t v16 = v15;
      uint64_t v17 = *((void *)v15 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(a2, 1, v15))
      {
        sub_20A42CD3C(0);
        memcpy(v3, a2, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        uint64_t v25 = sub_20A8CC470();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v3, a2, v25);
        *(void *)&v3[v16[7]] = *(void *)&a2[v16[7]];
        *(void *)&v3[v16[8]] = *(void *)&a2[v16[8]];
        *(void *)&v3[v16[9]] = *(void *)&a2[v16[9]];
        uint64_t v26 = *(void (**)(char *, void, uint64_t, int *))(v17 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v26(v3, 0, 1, v16);
      }
      sub_20A609F34();
      uint64_t v28 = *(int *)(v27 + 48);
      uint64_t v29 = &v3[v28];
      uint64_t v30 = &a2[v28];
      if (*((void *)v30 + 1))
      {
        *(void *)uint64_t v29 = *(void *)v30;
        *((void *)v29 + 1) = *((void *)v30 + 1);
        uint64_t v31 = (void *)*((void *)v30 + 2);
        *((void *)v29 + 2) = v31;
        long long v32 = *(_OWORD *)(v30 + 24);
        long long v33 = *(_OWORD *)(v30 + 40);
        long long v34 = *(_OWORD *)(v30 + 56);
        *(_OWORD *)(v29 + 72) = *(_OWORD *)(v30 + 72);
        *(_OWORD *)(v29 + 56) = v34;
        *(_OWORD *)(v29 + 40) = v33;
        *(_OWORD *)(v29 + 24) = v32;
        swift_bridgeObjectRetain();
        id v35 = v31;
      }
      else
      {
        long long v67 = *((_OWORD *)v30 + 1);
        *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
        *((_OWORD *)v29 + 1) = v67;
        long long v68 = *((_OWORD *)v30 + 2);
        long long v69 = *((_OWORD *)v30 + 3);
        long long v70 = *((_OWORD *)v30 + 4);
        *((void *)v29 + 10) = *((void *)v30 + 10);
        *((_OWORD *)v29 + 3) = v69;
        *((_OWORD *)v29 + 4) = v70;
        *((_OWORD *)v29 + 2) = v68;
      }
LABEL_34:
      swift_storeEnumTagMultiPayload();
      return v3;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = sub_20A8C3F00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v3, a2, v7);
      uint64_t v8 = (int *)type metadata accessor for StockFeedMastheadModel();
      uint64_t v9 = v8[5];
      uint64_t v10 = &v3[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = sub_20A8C3E10();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_20A62B7F4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      uint64_t v19 = v8[6];
      uint64_t v20 = &v3[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = sub_20A8C3D00();
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        sub_20A62B7F4(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], MEMORY[0x263F8D8F0]);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      uint64_t v153 = v8;
      uint64_t v36 = v8[7];
      uint64_t v150 = v3;
      uint64_t v37 = &v3[v36];
      uint64_t v152 = a2;
      uint64_t v38 = &a2[v36];
      uint64_t v39 = *(void *)&a2[v36];
      v37[8] = v38[8];
      *(void *)uint64_t v37 = v39;
      uint64_t v40 = *((void *)v38 + 2);
      v37[24] = v38[24];
      *((void *)v37 + 2) = v40;
      uint64_t v41 = *((void *)v38 + 4);
      unsigned char v37[40] = v38[40];
      *((void *)v37 + 4) = v41;
      *((void *)v37 + 6) = *((void *)v38 + 6);
      *((void *)v37 + 7) = *((void *)v38 + 7);
      *((void *)v37 + 8) = *((void *)v38 + 8);
      *((void *)v37 + 9) = *((void *)v38 + 9);
      uint64_t v42 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v43 = v42[9];
      uint64_t v44 = &v37[v43];
      uint64_t v45 = &v38[v43];
      uint64_t v46 = sub_20A8C2EB0();
      uint64_t v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v145 = v47;
      uint64_t v146 = v46;
      v47(v44, v45, v46);
      uint64_t v48 = v42[10];
      unint64_t v49 = &v37[v48];
      uint64_t v50 = &v38[v48];
      uint64_t v51 = sub_20A8C4030();
      uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16);
      v52(v49, v50, v51);
      uint64_t v53 = v42[11];
      uint64_t v54 = &v37[v53];
      uint64_t v55 = &v38[v53];
      uint64_t v56 = sub_20A8C2990();
      uint64_t v142 = *(void (**)(char *, char *))(*(void *)(v56 - 8) + 16);
      uint64_t v143 = v56;
      v142(v54, v55);
      uint64_t v57 = type metadata accessor for QuoteViewModel();
      uint64_t v58 = *(int *)(v57 + 20);
      uint64_t v59 = &v37[v58];
      uint64_t v60 = &v38[v58];
      uint64_t v61 = sub_20A8C3410();
      uint64_t v140 = *(void (**)(char *, char *))(*(void *)(v61 - 8) + 16);
      uint64_t v141 = v61;
      v140(v59, v60);
      uint64_t v62 = *(int *)(v57 + 24);
      uint64_t v63 = &v37[v62];
      uint64_t v64 = &v38[v62];
      uint64_t v65 = type metadata accessor for QuoteSummaryTimeRange();
      uint64_t v147 = *(void *)(v65 - 8);
      uint64_t v139 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v147 + 48);
      uint64_t v144 = v52;
      if (v139(v64, 1, v65))
      {
        sub_20A62B7F4(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
        uint64_t v3 = v150;
      }
      else
      {
        uint64_t v148 = v65;
        uint64_t v138 = v57;
        uint64_t v71 = sub_20A8C2BC0();
        uint64_t v72 = *(void *)(v71 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v64, 3, v71))
        {
          uint64_t v73 = v147;
          memcpy(v63, v64, *(void *)(v147 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v63, v64, v71);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v63, 0, 3, v71);
          uint64_t v73 = v147;
        }
        uint64_t v65 = v148;
        uint64_t v3 = v150;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v63, 0, 1, v148);
        uint64_t v57 = v138;
      }
      uint64_t v74 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
      uint64_t v75 = &v37[v74];
      uint64_t v76 = &v38[v74];
      uint64_t v77 = *(void *)(v57 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(&v38[v74], 1, v57))
      {
        sub_20A62B7F4(0, (unint64_t *)&qword_26AC82B28, (uint64_t (*)(uint64_t))type metadata accessor for QuoteViewModel, MEMORY[0x263F8D8F0]);
        memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
        uint64_t v79 = v153;
        uint64_t v80 = v152;
      }
      else
      {
        uint64_t v149 = v65;
        uint64_t v151 = v77;
        uint64_t v81 = *(void *)v76;
        v75[8] = v76[8];
        *(void *)uint64_t v75 = v81;
        uint64_t v82 = *((void *)v76 + 2);
        v75[24] = v76[24];
        *((void *)v75 + 2) = v82;
        uint64_t v83 = *((void *)v76 + 4);
        v75[40] = v76[40];
        *((void *)v75 + 4) = v83;
        *((void *)v75 + 6) = *((void *)v76 + 6);
        *((void *)v75 + 7) = *((void *)v76 + 7);
        *((void *)v75 + 8) = *((void *)v76 + 8);
        *((void *)v75 + 9) = *((void *)v76 + 9);
        uint64_t v84 = v42[9];
        uint64_t v85 = &v75[v84];
        uint64_t v86 = &v76[v84];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v145(v85, v86, v146);
        v144(&v75[v42[10]], &v76[v42[10]], v51);
        ((void (*)(char *, char *, uint64_t))v142)(&v75[v42[11]], &v76[v42[11]], v143);
        ((void (*)(char *, char *, uint64_t))v140)(&v75[*(int *)(v57 + 20)], &v76[*(int *)(v57 + 20)], v141);
        uint64_t v87 = v57;
        uint64_t v88 = *(int *)(v57 + 24);
        uint64_t v89 = &v75[v88];
        uint64_t v90 = &v76[v88];
        if (v139(&v76[v88], 1, v65))
        {
          sub_20A62B7F4(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
          memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
          uint64_t v80 = v152;
          uint64_t v79 = v153;
        }
        else
        {
          uint64_t v92 = sub_20A8C2BC0();
          uint64_t v93 = *(void *)(v92 - 8);
          uint64_t v79 = v153;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v90, 3, v92))
          {
            uint64_t v94 = v147;
            memcpy(v89, v90, *(void *)(v147 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v89, v90, v92);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v93 + 56))(v89, 0, 3, v92);
            uint64_t v94 = v147;
          }
          uint64_t v80 = v152;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v89, 0, 1, v149);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v151 + 56))(v75, 0, 1, v87);
      }
      v3[v79[8]] = v80[v79[8]];
      sub_20A42CA7C();
      uint64_t v96 = *(int *)(v95 + 48);
      uint64_t v97 = &v3[v96];
      uint64_t v98 = &v80[v96];
      uint64_t v99 = sub_20A8CA9F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16))(v97, v98, v99);
      long long v100 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
      uint64_t v101 = v100[5];
      uint64_t v102 = &v97[v101];
      uint64_t v103 = &v98[v101];
      long long v104 = *((_OWORD *)v103 + 1);
      *(_OWORD *)uint64_t v102 = *(_OWORD *)v103;
      *((_OWORD *)v102 + 1) = v104;
      uint64_t v105 = v100[6];
      uint64_t v106 = &v97[v105];
      uint64_t v107 = &v98[v105];
      long long v108 = *((_OWORD *)v107 + 1);
      *(_OWORD *)uint64_t v106 = *(_OWORD *)v107;
      *((_OWORD *)v106 + 1) = v108;
      uint64_t v109 = v100[7];
      uint64_t v110 = &v97[v109];
      uint64_t v111 = &v98[v109];
      long long v112 = *((_OWORD *)v111 + 1);
      *(_OWORD *)uint64_t v110 = *(_OWORD *)v111;
      *((_OWORD *)v110 + 1) = v112;
      uint64_t v113 = v100[8];
      uint64_t v114 = &v97[v113];
      uint64_t v115 = &v98[v113];
      long long v116 = *((_OWORD *)v115 + 1);
      *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
      *((_OWORD *)v114 + 1) = v116;
      uint64_t v117 = v100[9];
      uint64_t v118 = &v97[v117];
      uint64_t v119 = &v98[v117];
      long long v120 = *((_OWORD *)v119 + 1);
      *(_OWORD *)uint64_t v118 = *(_OWORD *)v119;
      *((_OWORD *)v118 + 1) = v120;
      uint64_t v121 = v100[10];
      uint64_t v122 = &v97[v121];
      uint64_t v123 = &v98[v121];
      long long v124 = *((_OWORD *)v123 + 1);
      *(_OWORD *)uint64_t v122 = *(_OWORD *)v123;
      *((_OWORD *)v122 + 1) = v124;
      uint64_t v125 = v100[11];
      uint64_t v126 = &v97[v125];
      unint64_t v127 = &v98[v125];
      long long v128 = *((_OWORD *)v127 + 1);
      *(_OWORD *)uint64_t v126 = *(_OWORD *)v127;
      *((_OWORD *)v126 + 1) = v128;
      memcpy(&v97[v100[12]], &v98[v100[12]], 0x1A1uLL);
      uint64_t v129 = v100[13];
      uint64_t v130 = &v97[v129];
      uint64_t v131 = &v98[v129];
      long long v132 = *((_OWORD *)v131 + 1);
      *(_OWORD *)uint64_t v130 = *(_OWORD *)v131;
      *((_OWORD *)v130 + 1) = v132;
      uint64_t v133 = v100[14];
      uint64_t v134 = &v97[v133];
      uint64_t v135 = &v98[v133];
      long long v136 = *((_OWORD *)v135 + 1);
      *(_OWORD *)uint64_t v134 = *(_OWORD *)v135;
      *((_OWORD *)v134 + 1) = v136;
      v97[v100[15]] = v98[v100[15]];
      *(void *)&v97[v100[16]] = *(void *)&v98[v100[16]];
      goto LABEL_34;
    }
    memcpy(v3, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return v3;
}

uint64_t type metadata accessor for StockFeedLayoutSectionDescriptor(uint64_t a1)
{
  return sub_20A4D9778(a1, qword_26AC7B3F0);
}

char *sub_20A6286A0(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    sub_20A42CB84(0);
    uint64_t v16 = v15;
    uint64_t v17 = *((void *)v15 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(a2, 1, v15))
    {
      sub_20A42CD3C(0);
      memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v25 = sub_20A8CC470();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
      *(void *)&a1[v16[7]] = *(void *)&a2[v16[7]];
      *(void *)&a1[v16[8]] = *(void *)&a2[v16[8]];
      *(void *)&a1[v16[9]] = *(void *)&a2[v16[9]];
      (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(a1, 0, 1, v16);
    }
    sub_20A609F34();
    uint64_t v27 = *(int *)(v26 + 48);
    uint64_t v28 = &a1[v27];
    uint64_t v29 = &a2[v27];
    long long v30 = *((_OWORD *)v29 + 3);
    *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
    *((_OWORD *)v28 + 3) = v30;
    *((_OWORD *)v28 + 4) = *((_OWORD *)v29 + 4);
    *((void *)v28 + 10) = *((void *)v29 + 10);
    long long v31 = *((_OWORD *)v29 + 1);
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    *((_OWORD *)v28 + 1) = v31;
LABEL_30:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = sub_20A8C3F00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for StockFeedMastheadModel();
    uint64_t v9 = v8[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_20A8C3E10();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      sub_20A62B7F4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v19 = v8[6];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    uint64_t v22 = sub_20A8C3D00();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      sub_20A62B7F4(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], MEMORY[0x263F8D8F0]);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    uint64_t v32 = v8[7];
    long long v33 = &a1[v32];
    long long v34 = &a2[v32];
    *(void *)long long v33 = *(void *)&a2[v32];
    v33[8] = a2[v32 + 8];
    *((void *)v33 + 2) = *(void *)&a2[v32 + 16];
    v33[24] = a2[v32 + 24];
    *((void *)v33 + 4) = *(void *)&a2[v32 + 32];
    unsigned char v33[40] = a2[v32 + 40];
    long long v35 = *(_OWORD *)&a2[v32 + 64];
    *((_OWORD *)v33 + 3) = *(_OWORD *)&a2[v32 + 48];
    *((_OWORD *)v33 + 4) = v35;
    uint64_t v36 = (int *)type metadata accessor for PriceViewModel();
    uint64_t v37 = v36[9];
    uint64_t v38 = &v33[v37];
    uint64_t v39 = &v34[v37];
    uint64_t v40 = sub_20A8C2EB0();
    uint64_t v126 = *(void (**)(char *, char *))(*(void *)(v40 - 8) + 32);
    uint64_t v127 = v40;
    v126(v38, v39);
    uint64_t v41 = v36[10];
    uint64_t v42 = &v33[v41];
    uint64_t v43 = &v34[v41];
    uint64_t v44 = sub_20A8C4030();
    long long v124 = *(void (**)(char *, char *))(*(void *)(v44 - 8) + 32);
    uint64_t v125 = v44;
    v124(v42, v43);
    uint64_t v45 = v36[11];
    uint64_t v46 = &v33[v45];
    uint64_t v47 = &v34[v45];
    uint64_t v48 = sub_20A8C2990();
    uint64_t v122 = *(void (**)(char *, char *))(*(void *)(v48 - 8) + 32);
    uint64_t v123 = v48;
    v122(v46, v47);
    uint64_t v49 = type metadata accessor for QuoteViewModel();
    uint64_t v50 = *(int *)(v49 + 20);
    uint64_t v51 = &v33[v50];
    uint64_t v52 = &v34[v50];
    uint64_t v53 = sub_20A8C3410();
    long long v120 = *(void (**)(char *, char *))(*(void *)(v53 - 8) + 32);
    uint64_t v121 = v53;
    v120(v51, v52);
    uint64_t v54 = *(int *)(v49 + 24);
    uint64_t v55 = &v33[v54];
    uint64_t v56 = &v34[v54];
    uint64_t v57 = type metadata accessor for QuoteSummaryTimeRange();
    uint64_t v128 = *(void *)(v57 - 8);
    uint64_t v129 = v57;
    uint64_t v119 = *(unsigned int (**)(char *, uint64_t))(v128 + 48);
    uint64_t v130 = v8;
    if (v119(v56, 1))
    {
      sub_20A62B7F4(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
      memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      uint64_t v118 = v49;
      uint64_t v59 = sub_20A8C2BC0();
      uint64_t v60 = *(void *)(v59 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v56, 3, v59))
      {
        uint64_t v61 = v128;
        memcpy(v55, v56, *(void *)(v128 + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v55, v56, v59);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v55, 0, 3, v59);
        uint64_t v61 = v128;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v55, 0, 1, v129);
      uint64_t v49 = v118;
    }
    uint64_t v62 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
    uint64_t v63 = &v33[v62];
    uint64_t v64 = &v34[v62];
    uint64_t v65 = *(void *)(v49 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(&v34[v62], 1, v49))
    {
      sub_20A62B7F4(0, (unint64_t *)&qword_26AC82B28, (uint64_t (*)(uint64_t))type metadata accessor for QuoteViewModel, MEMORY[0x263F8D8F0]);
      memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v63 = *(void *)v64;
      v63[8] = v64[8];
      *((void *)v63 + 2) = *((void *)v64 + 2);
      v63[24] = v64[24];
      *((void *)v63 + 4) = *((void *)v64 + 4);
      v63[40] = v64[40];
      long long v67 = *((_OWORD *)v64 + 4);
      *((_OWORD *)v63 + 3) = *((_OWORD *)v64 + 3);
      *((_OWORD *)v63 + 4) = v67;
      ((void (*)(char *, char *, uint64_t))v126)(&v63[v36[9]], &v64[v36[9]], v127);
      ((void (*)(char *, char *, uint64_t))v124)(&v63[v36[10]], &v64[v36[10]], v125);
      ((void (*)(char *, char *, uint64_t))v122)(&v63[v36[11]], &v64[v36[11]], v123);
      ((void (*)(char *, char *, uint64_t))v120)(&v63[*(int *)(v49 + 20)], &v64[*(int *)(v49 + 20)], v121);
      uint64_t v68 = *(int *)(v49 + 24);
      long long v69 = &v63[v68];
      long long v70 = &v64[v68];
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v119)(v70, 1, v129))
      {
        sub_20A62B7F4(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
        memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        uint64_t v72 = sub_20A8C2BC0();
        uint64_t v73 = *(void *)(v72 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v70, 3, v72))
        {
          uint64_t v74 = v128;
          memcpy(v69, v70, *(void *)(v128 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v69, v70, v72);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v69, 0, 3, v72);
          uint64_t v74 = v128;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v69, 0, 1, v129);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v63, 0, 1, v49);
    }
    a1[v130[8]] = a2[v130[8]];
    sub_20A42CA7C();
    uint64_t v76 = *(int *)(v75 + 48);
    uint64_t v77 = &a1[v76];
    uint64_t v78 = &a2[v76];
    uint64_t v79 = sub_20A8CA9F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
    uint64_t v80 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
    uint64_t v81 = v80[5];
    uint64_t v82 = &v77[v81];
    uint64_t v83 = &v78[v81];
    long long v84 = *((_OWORD *)v83 + 1);
    *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
    *((_OWORD *)v82 + 1) = v84;
    uint64_t v85 = v80[6];
    uint64_t v86 = &v77[v85];
    uint64_t v87 = &v78[v85];
    long long v88 = *((_OWORD *)v87 + 1);
    *(_OWORD *)uint64_t v86 = *(_OWORD *)v87;
    *((_OWORD *)v86 + 1) = v88;
    uint64_t v89 = v80[7];
    uint64_t v90 = &v77[v89];
    uint64_t v91 = &v78[v89];
    long long v92 = *((_OWORD *)v91 + 1);
    *(_OWORD *)uint64_t v90 = *(_OWORD *)v91;
    *((_OWORD *)v90 + 1) = v92;
    uint64_t v93 = v80[8];
    uint64_t v94 = &v77[v93];
    uint64_t v95 = &v78[v93];
    long long v96 = *((_OWORD *)v95 + 1);
    *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
    *((_OWORD *)v94 + 1) = v96;
    uint64_t v97 = v80[9];
    uint64_t v98 = &v77[v97];
    uint64_t v99 = &v78[v97];
    long long v100 = *((_OWORD *)v99 + 1);
    *(_OWORD *)uint64_t v98 = *(_OWORD *)v99;
    *((_OWORD *)v98 + 1) = v100;
    uint64_t v101 = v80[10];
    uint64_t v102 = &v77[v101];
    uint64_t v103 = &v78[v101];
    long long v104 = *((_OWORD *)v103 + 1);
    *(_OWORD *)uint64_t v102 = *(_OWORD *)v103;
    *((_OWORD *)v102 + 1) = v104;
    uint64_t v105 = v80[11];
    uint64_t v106 = &v77[v105];
    uint64_t v107 = &v78[v105];
    long long v108 = *((_OWORD *)v107 + 1);
    *(_OWORD *)uint64_t v106 = *(_OWORD *)v107;
    *((_OWORD *)v106 + 1) = v108;
    memcpy(&v77[v80[12]], &v78[v80[12]], 0x1A1uLL);
    uint64_t v109 = v80[13];
    uint64_t v110 = &v77[v109];
    uint64_t v111 = &v78[v109];
    long long v112 = *((_OWORD *)v111 + 1);
    *(_OWORD *)uint64_t v110 = *(_OWORD *)v111;
    *((_OWORD *)v110 + 1) = v112;
    uint64_t v113 = v80[14];
    uint64_t v114 = &v77[v113];
    uint64_t v115 = &v78[v113];
    long long v116 = *((_OWORD *)v115 + 1);
    *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
    *((_OWORD *)v114 + 1) = v116;
    v77[v80[15]] = v78[v80[15]];
    *(void *)&v77[v80[16]] = *(void *)&v78[v80[16]];
    goto LABEL_30;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_20A6292E8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_20A62B9AC((uint64_t)a1, type metadata accessor for StockFeedLayoutSectionDescriptor);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      sub_20A42CB84(0);
      uint64_t v16 = v15;
      uint64_t v17 = *((void *)v15 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(a2, 1, v15))
      {
        sub_20A42CD3C(0);
        memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        uint64_t v25 = sub_20A8CC470();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
        *(void *)&a1[v16[7]] = *(void *)&a2[v16[7]];
        *(void *)&a1[v16[8]] = *(void *)&a2[v16[8]];
        *(void *)&a1[v16[9]] = *(void *)&a2[v16[9]];
        (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(a1, 0, 1, v16);
      }
      sub_20A609F34();
      uint64_t v27 = *(int *)(v26 + 48);
      uint64_t v28 = &a1[v27];
      uint64_t v29 = &a2[v27];
      long long v30 = *((_OWORD *)v29 + 3);
      *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
      *((_OWORD *)v28 + 3) = v30;
      *((_OWORD *)v28 + 4) = *((_OWORD *)v29 + 4);
      *((void *)v28 + 10) = *((void *)v29 + 10);
      long long v31 = *((_OWORD *)v29 + 1);
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
      *((_OWORD *)v28 + 1) = v31;
LABEL_31:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = sub_20A8C3F00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = (int *)type metadata accessor for StockFeedMastheadModel();
      uint64_t v9 = v8[5];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = sub_20A8C3E10();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_20A62B7F4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      uint64_t v19 = v8[6];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = sub_20A8C3D00();
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        sub_20A62B7F4(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], MEMORY[0x263F8D8F0]);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      long long v132 = v8;
      uint64_t v32 = v8[7];
      long long v33 = &a1[v32];
      long long v34 = &a2[v32];
      *(void *)long long v33 = *(void *)&a2[v32];
      v33[8] = a2[v32 + 8];
      *((void *)v33 + 2) = *(void *)&a2[v32 + 16];
      v33[24] = a2[v32 + 24];
      *((void *)v33 + 4) = *(void *)&a2[v32 + 32];
      unsigned char v33[40] = a2[v32 + 40];
      long long v35 = *(_OWORD *)&a2[v32 + 64];
      *((_OWORD *)v33 + 3) = *(_OWORD *)&a2[v32 + 48];
      *((_OWORD *)v33 + 4) = v35;
      uint64_t v36 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v37 = v36[9];
      uint64_t v38 = &v33[v37];
      uint64_t v39 = &v34[v37];
      uint64_t v40 = sub_20A8C2EB0();
      uint64_t v129 = *(void (**)(char *, char *))(*(void *)(v40 - 8) + 32);
      uint64_t v130 = v40;
      v129(v38, v39);
      uint64_t v41 = v36[10];
      uint64_t v42 = &v33[v41];
      uint64_t v43 = &v34[v41];
      uint64_t v44 = sub_20A8C4030();
      uint64_t v127 = *(void (**)(char *, char *))(*(void *)(v44 - 8) + 32);
      uint64_t v128 = v44;
      v127(v42, v43);
      uint64_t v45 = v36[11];
      uint64_t v46 = &v33[v45];
      uint64_t v47 = &v34[v45];
      uint64_t v48 = sub_20A8C2990();
      uint64_t v125 = *(void (**)(char *, char *))(*(void *)(v48 - 8) + 32);
      uint64_t v126 = v48;
      v125(v46, v47);
      uint64_t v49 = type metadata accessor for QuoteViewModel();
      uint64_t v50 = *(int *)(v49 + 20);
      uint64_t v51 = &v33[v50];
      uint64_t v52 = &v34[v50];
      uint64_t v53 = sub_20A8C3410();
      uint64_t v123 = *(void (**)(char *, char *))(*(void *)(v53 - 8) + 32);
      uint64_t v124 = v53;
      v123(v51, v52);
      uint64_t v54 = *(int *)(v49 + 24);
      uint64_t v55 = &v33[v54];
      uint64_t v56 = &v34[v54];
      uint64_t v57 = type metadata accessor for QuoteSummaryTimeRange();
      uint64_t v131 = *(void *)(v57 - 8);
      uint64_t v122 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48);
      if (v122(v56, 1, v57))
      {
        sub_20A62B7F4(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
        memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        uint64_t v120 = v49;
        uint64_t v121 = v57;
        uint64_t v59 = sub_20A8C2BC0();
        uint64_t v60 = *(void *)(v59 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v56, 3, v59))
        {
          uint64_t v61 = v131;
          memcpy(v55, v56, *(void *)(v131 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v55, v56, v59);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v55, 0, 3, v59);
          uint64_t v61 = v131;
        }
        uint64_t v62 = *(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56);
        uint64_t v57 = v121;
        v62(v55, 0, 1, v121);
        uint64_t v49 = v120;
      }
      uint64_t v63 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
      uint64_t v64 = &v33[v63];
      uint64_t v65 = &v34[v63];
      uint64_t v66 = *(void *)(v49 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v65, 1, v49))
      {
        sub_20A62B7F4(0, (unint64_t *)&qword_26AC82B28, (uint64_t (*)(uint64_t))type metadata accessor for QuoteViewModel, MEMORY[0x263F8D8F0]);
        memcpy(v64, v65, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v64 = *(void *)v65;
        v64[8] = v65[8];
        *((void *)v64 + 2) = *((void *)v65 + 2);
        v64[24] = v65[24];
        *((void *)v64 + 4) = *((void *)v65 + 4);
        v64[40] = v65[40];
        long long v68 = *((_OWORD *)v65 + 4);
        *((_OWORD *)v64 + 3) = *((_OWORD *)v65 + 3);
        *((_OWORD *)v64 + 4) = v68;
        ((void (*)(char *, char *, uint64_t))v129)(&v64[v36[9]], &v65[v36[9]], v130);
        ((void (*)(char *, char *, uint64_t))v127)(&v64[v36[10]], &v65[v36[10]], v128);
        ((void (*)(char *, char *, uint64_t))v125)(&v64[v36[11]], &v65[v36[11]], v126);
        ((void (*)(char *, char *, uint64_t))v123)(&v64[*(int *)(v49 + 20)], &v65[*(int *)(v49 + 20)], v124);
        uint64_t v69 = *(int *)(v49 + 24);
        long long v70 = &v64[v69];
        uint64_t v71 = &v65[v69];
        if (v122(&v65[v69], 1, v57))
        {
          sub_20A62B7F4(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
          memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          uint64_t v73 = v57;
          uint64_t v74 = sub_20A8C2BC0();
          uint64_t v75 = *(void *)(v74 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v71, 3, v74))
          {
            uint64_t v76 = v131;
            memcpy(v70, v71, *(void *)(v131 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v70, v71, v74);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v70, 0, 3, v74);
            uint64_t v76 = v131;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v70, 0, 1, v73);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v64, 0, 1, v49);
      }
      a1[v132[8]] = a2[v132[8]];
      sub_20A42CA7C();
      uint64_t v78 = *(int *)(v77 + 48);
      uint64_t v79 = &a1[v78];
      uint64_t v80 = &a2[v78];
      uint64_t v81 = sub_20A8CA9F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 32))(v79, v80, v81);
      uint64_t v82 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
      uint64_t v83 = v82[5];
      long long v84 = &v79[v83];
      uint64_t v85 = &v80[v83];
      long long v86 = *((_OWORD *)v85 + 1);
      *(_OWORD *)long long v84 = *(_OWORD *)v85;
      *((_OWORD *)v84 + 1) = v86;
      uint64_t v87 = v82[6];
      long long v88 = &v79[v87];
      uint64_t v89 = &v80[v87];
      long long v90 = *((_OWORD *)v89 + 1);
      *(_OWORD *)long long v88 = *(_OWORD *)v89;
      *((_OWORD *)v88 + 1) = v90;
      uint64_t v91 = v82[7];
      long long v92 = &v79[v91];
      uint64_t v93 = &v80[v91];
      long long v94 = *((_OWORD *)v93 + 1);
      *(_OWORD *)long long v92 = *(_OWORD *)v93;
      *((_OWORD *)v92 + 1) = v94;
      uint64_t v95 = v82[8];
      long long v96 = &v79[v95];
      uint64_t v97 = &v80[v95];
      long long v98 = *((_OWORD *)v97 + 1);
      *(_OWORD *)long long v96 = *(_OWORD *)v97;
      *((_OWORD *)v96 + 1) = v98;
      uint64_t v99 = v82[9];
      long long v100 = &v79[v99];
      uint64_t v101 = &v80[v99];
      long long v102 = *((_OWORD *)v101 + 1);
      *(_OWORD *)long long v100 = *(_OWORD *)v101;
      *((_OWORD *)v100 + 1) = v102;
      uint64_t v103 = v82[10];
      long long v104 = &v79[v103];
      uint64_t v105 = &v80[v103];
      long long v106 = *((_OWORD *)v105 + 1);
      *(_OWORD *)long long v104 = *(_OWORD *)v105;
      *((_OWORD *)v104 + 1) = v106;
      uint64_t v107 = v82[11];
      long long v108 = &v79[v107];
      uint64_t v109 = &v80[v107];
      long long v110 = *((_OWORD *)v109 + 1);
      *(_OWORD *)long long v108 = *(_OWORD *)v109;
      *((_OWORD *)v108 + 1) = v110;
      memcpy(&v79[v82[12]], &v80[v82[12]], 0x1A1uLL);
      uint64_t v111 = v82[13];
      long long v112 = &v79[v111];
      uint64_t v113 = &v80[v111];
      long long v114 = *((_OWORD *)v113 + 1);
      *(_OWORD *)long long v112 = *(_OWORD *)v113;
      *((_OWORD *)v112 + 1) = v114;
      uint64_t v115 = v82[14];
      long long v116 = &v79[v115];
      uint64_t v117 = &v80[v115];
      long long v118 = *((_OWORD *)v117 + 1);
      *(_OWORD *)long long v116 = *(_OWORD *)v117;
      *((_OWORD *)v116 + 1) = v118;
      v79[v82[15]] = v80[v82[15]];
      *(void *)&v79[v82[16]] = *(void *)&v80[v82[16]];
      goto LABEL_31;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_20A629F50()
{
  type metadata accessor for StockFeedMastheadModel();
  if (v0 <= 0x3F)
  {
    type metadata accessor for StockFeedMastheadViewLayoutAttributes();
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v5 = &v4;
      sub_20A42CD3C(319);
      if (v2 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        uint64_t v6 = &v3;
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

void destroy for StockFeedLayoutSectionDescriptor.Branding(uint64_t a1)
{
  if (*(void *)(a1 + 8) >= 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    unint64_t v2 = *(void **)(a1 + 16);
  }
}

uint64_t initializeWithCopy for StockFeedLayoutSectionDescriptor.Branding(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    char v4 = *(void **)(a2 + 16);
    *(void *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    id v5 = v4;
  }
  return a1;
}

uint64_t assignWithCopy for StockFeedLayoutSectionDescriptor.Branding(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v8 = *(void **)(a2 + 16);
      *(void *)(a1 + 16) = v8;
      long long v9 = *(_OWORD *)(a2 + 24);
      long long v10 = *(_OWORD *)(a2 + 40);
      long long v11 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 56) = v11;
      *(_OWORD *)(a1 + 40) = v10;
      *(_OWORD *)(a1 + 24) = v9;
      swift_bridgeObjectRetain();
      id v12 = v8;
      return a1;
    }
LABEL_7:
    long long v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    long long v14 = *(_OWORD *)(a2 + 32);
    long long v15 = *(_OWORD *)(a2 + 48);
    long long v16 = *(_OWORD *)(a2 + 64);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(_OWORD *)(a1 + 48) = v15;
    *(_OWORD *)(a1 + 64) = v16;
    *(_OWORD *)(a1 + 32) = v14;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();

    goto LABEL_7;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v5 = *(void **)(a1 + 16);
  long long v6 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v6;
  id v7 = v6;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t assignWithTake for StockFeedLayoutSectionDescriptor.Branding(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();

LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockFeedLayoutSectionDescriptor.Branding(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 88)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for StockFeedLayoutSectionDescriptor.Branding(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 88) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

double sub_20A62A400(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedLayoutSectionDescriptor.Branding()
{
  return &type metadata for StockFeedLayoutSectionDescriptor.Branding;
}

uint64_t sub_20A62A448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_20A62A450()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20A62A4F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    long long v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    long long v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *long long v10 = *v11;
    id v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
    long long v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
    *id v12 = *v13;
    *(void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_20A62A62C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A62A6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  *(void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20A62A764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  *int v7 = *(void *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v10 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v9 &= 0xFFFFFFFFFFFFFFF8;
  *long long v10 = *(void *)v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A62A830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  unint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v9 = *v10;
  *(void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_20A62A8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  swift_bridgeObjectRelease();
  unint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v9 = *v10;
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A62A980(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x20A62AADCLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_20A62AAF0(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v19 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0) {
                uint64_t v20 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v20 = a2 - 1;
              }
              *uint64_t v19 = v20;
            }
            else
            {
              uint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x20A62ACE8);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_20A62AD10()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StockFeedMastheadViewLayoutAttributes();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x270FA5388](v5);
  unsigned int v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A62B944(v1, (uint64_t)v7, type metadata accessor for StockFeedLayoutSectionDescriptor);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v9 = 0;
  if ((EnumCaseMultiPayload - 2) >= 6)
  {
    if (EnumCaseMultiPayload)
    {
      sub_20A609F34();
      int v14 = (uint64_t *)&v7[*(int *)(v13 + 48)];
      uint64_t v15 = v14[1];
      unsigned int v12 = (uint64_t (*)(void))sub_20A42CD3C;
      if (v15)
      {
        uint64_t v17 = v14[9];
        uint64_t v16 = v14[10];
        uint64_t v18 = v14[7];
        uint64_t v19 = v14[8];
        uint64_t v21 = v14[5];
        uint64_t v20 = v14[6];
        uint64_t v23 = v14[3];
        uint64_t v22 = v14[4];
        long long v30 = (void *)v14[2];
        uint64_t v24 = *v14;
        uint64_t v28 = v18;
        uint64_t v29 = v24;
        sub_20A62B7F4(0, (unint64_t *)&qword_26AC7FFF8, (uint64_t (*)(uint64_t))sub_20A5122A8, MEMORY[0x263F8E0F8]);
        uint64_t v9 = swift_allocObject();
        *(_OWORD *)(v9 + 16) = xmmword_20A8D3DC0;
        *(void *)(v9 + 56) = &type metadata for BrandingTitleViewLayoutAttributes;
        *(void *)(v9 + 64) = sub_20A62B858();
        uint64_t v25 = (void *)swift_allocObject();
        *(void *)(v9 + 32) = v25;
        v25[2] = v23;
        v25[3] = v22;
        v25[4] = v21;
        void v25[5] = v20;
        v25[6] = v28;
        v25[7] = v19;
        v25[8] = v17;
        v25[9] = v16;
        sub_20A42C9F4(v29, v15, v30);
        unsigned int v12 = (uint64_t (*)(void))sub_20A42CD3C;
      }
      else
      {
        uint64_t v9 = 0;
      }
    }
    else
    {
      sub_20A42CA7C();
      sub_20A62B8BC((uint64_t)&v7[*(int *)(v10 + 48)], (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
      sub_20A62B7F4(0, (unint64_t *)&qword_26AC7FFF8, (uint64_t (*)(uint64_t))sub_20A5122A8, MEMORY[0x263F8E0F8]);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_20A8D3DC0;
      *(void *)(v9 + 56) = v2;
      *(void *)(v9 + 64) = sub_20A62B1BC(&qword_26AC7D868, (void (*)(uint64_t))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v9 + 32));
      sub_20A62B8BC((uint64_t)v4, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
      unsigned int v12 = (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel;
    }
    sub_20A62B9AC((uint64_t)v7, v12);
  }
  return v9;
}

uint64_t sub_20A62B054(uint64_t a1)
{
  uint64_t v2 = sub_20A62B1BC(&qword_26763CAA8, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutSectionDescriptor);

  return MEMORY[0x270F7C578](a1, v2);
}

uint64_t sub_20A62B0C0()
{
  sub_20A62B1BC(&qword_26AC7B3E8, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutSectionDescriptor);

  return sub_20A8CACE0();
}

uint64_t sub_20A62B12C()
{
  return sub_20A62B1BC(&qword_26AC7B3E0, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutSectionDescriptor);
}

uint64_t sub_20A62B174()
{
  return sub_20A62B1BC(&qword_26AC7B3E8, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutSectionDescriptor);
}

uint64_t sub_20A62B1BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A62B204()
{
  sub_20A42CB84(0);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42CD3C(0);
  MEMORY[0x270FA5388](v6 - 8);
  unsigned int v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unsigned int v11 = (char *)&v23 - v10;
  uint64_t v12 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x270FA5388](v12);
  int v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A62B944(v0, (uint64_t)v14, type metadata accessor for StockFeedLayoutSectionDescriptor);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v16 = 0;
  if ((EnumCaseMultiPayload - 2) >= 6)
  {
    if (EnumCaseMultiPayload)
    {
      sub_20A609F34();
      sub_20A42C9F4(*(void *)&v14[*(int *)(v20 + 48)], *(void *)&v14[*(int *)(v20 + 48) + 8], *(void **)&v14[*(int *)(v20 + 48) + 16]);
      sub_20A62B8BC((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))sub_20A42CD3C);
      sub_20A62B944((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))sub_20A42CD3C);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) != 1)
      {
        sub_20A62B8BC((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))sub_20A42CB84);
        uint64_t v21 = swift_bridgeObjectRetain();
        uint64_t v16 = sub_20A62B538(v21);
        swift_bridgeObjectRelease();
        sub_20A62B9AC((uint64_t)v5, (uint64_t (*)(void))sub_20A42CB84);
        sub_20A62B9AC((uint64_t)v11, (uint64_t (*)(void))sub_20A42CD3C);
        return v16;
      }
      sub_20A62B9AC((uint64_t)v11, (uint64_t (*)(void))sub_20A42CD3C);
      uint64_t v19 = (uint64_t)v8;
      uint64_t v18 = (uint64_t (*)(void))sub_20A42CD3C;
    }
    else
    {
      sub_20A42CA7C();
      sub_20A62B9AC((uint64_t)&v14[*(int *)(v17 + 48)], (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
      uint64_t v18 = (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel;
      uint64_t v19 = (uint64_t)v14;
    }
    sub_20A62B9AC(v19, v18);
    return 0;
  }
  return v16;
}

uint64_t sub_20A62B538(uint64_t a1)
{
  uint64_t v20 = sub_20A8CC850();
  uint64_t v2 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StockFeedLayoutSectionDescriptor.Decoration(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  unsigned int v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unsigned int v11 = (char *)&v19 - v10;
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (v12)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_20A68CBE4(0, v12, 0);
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v19 = *(void *)(v6 + 72);
    do
    {
      sub_20A62B944(v14, (uint64_t)v11, type metadata accessor for StockFeedLayoutSectionDescriptor.Decoration);
      sub_20A62B944((uint64_t)v11, (uint64_t)v8, type metadata accessor for StockFeedLayoutSectionDescriptor.Decoration);
      uint64_t v15 = v20;
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v20);
      sub_20A8CC830();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v15);
      sub_20A62B9AC((uint64_t)v11, type metadata accessor for StockFeedLayoutSectionDescriptor.Decoration);
      uint64_t v13 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68CBE4(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v13 = v22;
      }
      unint64_t v17 = *(void *)(v13 + 16);
      unint64_t v16 = *(void *)(v13 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_20A68CBE4(v16 > 1, v17 + 1, 1);
        uint64_t v13 = v22;
      }
      *(void *)(v13 + 16) = v17 + 1;
      sub_20A42BEBC(&v21, v13 + 40 * v17 + 32);
      v14 += v19;
      --v12;
    }
    while (v12);
  }
  return v13;
}

void sub_20A62B7F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_20A62B858()
{
  unint64_t result = qword_26AC7B698;
  if (!qword_26AC7B698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7B698);
  }
  return result;
}

uint64_t sub_20A62B8AC()
{
  return swift_deallocObject();
}

uint64_t sub_20A62B8BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for StockFeedLayoutSectionDescriptor.Decoration(uint64_t a1)
{
  return sub_20A4D9778(a1, qword_26AC7B1D8);
}

uint64_t sub_20A62B944(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A62B9AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_20A62BA0C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_20A62BBDC(a1, a2, a3, MEMORY[0x263F59860]);
}

uint64_t sub_20A62BA24(uint64_t a1, uint64_t a2)
{
  return sub_20A62BC90(a1, a2, MEMORY[0x263F59860]);
}

uint64_t sub_20A62BA3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A62BCF8(a1, a2, a3, MEMORY[0x263F59860]);
}

uint64_t sub_20A62BA54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A62BD60(a1, a2, a3, MEMORY[0x263F59860]);
}

uint64_t sub_20A62BA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A62BDC8(a1, a2, a3, MEMORY[0x263F59860]);
}

uint64_t sub_20A62BA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A62BE30(a1, a2, a3, MEMORY[0x263F59860]);
}

uint64_t sub_20A62BA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A62BE98(a1, a2, a3, MEMORY[0x263F59860]);
}

uint64_t sub_20A62BAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A62BF08(a1, a2, a3, a4, MEMORY[0x263F59860]);
}

uint64_t sub_20A62BACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A62BFA8(a1, a2, a3, MEMORY[0x263F59860]);
}

uint64_t *sub_20A62BAE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_20A62BBDC(a1, a2, a3, MEMORY[0x263F59A28]);
}

uint64_t sub_20A62BAFC(uint64_t a1, uint64_t a2)
{
  return sub_20A62BC90(a1, a2, MEMORY[0x263F59A28]);
}

uint64_t sub_20A62BB14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A62BCF8(a1, a2, a3, MEMORY[0x263F59A28]);
}

uint64_t sub_20A62BB2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A62BD60(a1, a2, a3, MEMORY[0x263F59A28]);
}

uint64_t sub_20A62BB44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A62BDC8(a1, a2, a3, MEMORY[0x263F59A28]);
}

uint64_t sub_20A62BB5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A62BE30(a1, a2, a3, MEMORY[0x263F59A28]);
}

uint64_t sub_20A62BB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A62BE98(a1, a2, a3, MEMORY[0x263F59A28]);
}

uint64_t sub_20A62BB8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A62BF08(a1, a2, a3, a4, MEMORY[0x263F59A28]);
}

uint64_t type metadata accessor for StockFeedLayoutSectionDescriptor.Footer(uint64_t a1)
{
  return sub_20A4D9778(a1, qword_26AC7B2F0);
}

uint64_t sub_20A62BBC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A62BFA8(a1, a2, a3, MEMORY[0x263F59A28]);
}

uint64_t *sub_20A62BBDC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(void))
{
  int v6 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a4(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  }
  return a1;
}

uint64_t sub_20A62BC90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a3(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(a1, v4);
}

uint64_t sub_20A62BCF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  return a1;
}

uint64_t sub_20A62BD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  return a1;
}

uint64_t sub_20A62BDC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  return a1;
}

uint64_t sub_20A62BE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  return a1;
}

uint64_t sub_20A62BE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);

  return v7(a1, a2, v6);
}

uint64_t sub_20A62BF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v8 = a5(0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);

  return v9(a1, a2, a3, v8);
}

uint64_t type metadata accessor for StockFeedLayoutSectionDescriptor.Header(uint64_t a1)
{
  return sub_20A4D9778(a1, qword_26AC683D0);
}

uint64_t sub_20A62BFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v6 <= 0x3F)
  {
    uint64_t v7 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v7 + 84);
  }
  return result;
}

uint64_t sub_20A62C050()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t *sub_20A62C120()
{
  uint64_t v1 = *v0;
  id v2 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v2, sel_removeObserver_name_object_, v0, *MEMORY[0x263F832E8], 0);

  sub_20A4380C4((uint64_t)(v0 + 2));
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 112));
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_20A62C24C()
{
  sub_20A62C120();

  return swift_deallocClassInstance();
}

uint64_t sub_20A62C2A4()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = sub_20A8C40E0();
  uint64_t v18 = *(void *)(v2 - 8);
  uint64_t v19 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C3410();
  uint64_t v20 = *(void *)(v5 - 8);
  uint64_t v21 = v5;
  MEMORY[0x270FA5388](v5);
  unint64_t v17 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)((char *)v0 + v1[15]);
  sub_20A456810(v22);
  __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = v1[10];
  void v9[2] = v10;
  uint64_t v11 = v1[11];
  v9[3] = v11;
  v9[4] = v8;
  sub_20A8CBEC0();
  swift_release();
  swift_beginAccess();
  sub_20A8CBE50();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  __swift_project_boxed_opaque_existential_1((void *)(v7 + 32), *(void *)(v7 + 56));
  sub_20A8C3600();
  int64_t v12 = v17;
  sub_20A8C4060();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v19);
  v22[0] = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 40))(v12, v10, v11);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v10;
  v14[3] = v11;
  v14[4] = v13;
  sub_20A57258C();
  sub_20A62D4C8(&qword_26AC69F90, (void (*)(uint64_t))sub_20A57258C);
  swift_retain();
  sub_20A8C8C00();
  swift_release();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v21);
  swift_release();
  return swift_release();
}

uint64_t sub_20A62C678(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_20A62C6D8(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_20A62C6D8(uint64_t a1)
{
  (*(void (**)(uint64_t, void))(*(void *)(*(void *)v1 + 88) + 56))(a1, *(void *)(*(void *)v1 + 80));
  sub_20A57258C();
  sub_20A62D4C8(&qword_26AC69F90, (void (*)(uint64_t))sub_20A57258C);
  sub_20A8C8C00();
  return swift_release();
}

uint64_t sub_20A62C7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_20A62D560();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_20A8C9B80();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v15 = result;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
    int v16 = (*(uint64_t (**)(unsigned char *, uint64_t))(v11 + 88))(v13, v10);
    if (v16 == *MEMORY[0x263F7D960])
    {
      (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
      unint64_t v17 = *(void **)(v15 + *(void *)(*(void *)v15 + 128));
      sub_20A8CD380();
      uint64_t v18 = sub_20A8CD2C0();
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v9, 1, v18) != 1)
      {
        uint64_t v19 = swift_allocObject();
        swift_beginAccess();
        swift_weakLoadStrong();
        swift_weakInit();
        id v20 = v17;
        swift_release();
        uint64_t v21 = (void *)swift_allocObject();
        v21[2] = a3;
        v21[3] = a4;
        v21[4] = v19;

        swift_release();
        swift_release();
        return sub_20A62D600((uint64_t)v9);
      }
    }
    else
    {
      if (v16 != *MEMORY[0x263F7D958] && v16 != *MEMORY[0x263F7D968])
      {
        uint64_t result = sub_20A8CF520();
        __break(1u);
        return result;
      }
      swift_unknownObjectRetain();
      sub_20A456D94();
      swift_unknownObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_20A62CB34(uint64_t a1)
{
  uint64_t v2 = sub_20A8C8520();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A62D560();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_20A62D65C(a1, (uint64_t)v8);
    uint64_t v10 = sub_20A8CD2C0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10) == 1)
    {
      sub_20A62D600((uint64_t)v8);
      sub_20A8C8BE0();
      sub_20A8C8C40();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == *MEMORY[0x263F7D388])
      {
        uint64_t v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        sub_20A62C2A4(v11);
        return swift_release();
      }
      else
      {
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      }
    }
    else
    {
      swift_release();
      return sub_20A62D600((uint64_t)v8);
    }
  }
  return result;
}

uint64_t sub_20A62CD5C()
{
  (*(void (**)(void))(*(void *)(*(void *)v0 + 88) + 48))(*(void *)(*(void *)v0 + 80));
  sub_20A57258C();
  sub_20A62D4C8(&qword_26AC69F90, (void (*)(uint64_t))sub_20A57258C);
  sub_20A8C8C00();
  return swift_release();
}

uint64_t sub_20A62CE54()
{
  uint64_t v0 = sub_20A8C2140();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C2130();
  swift_retain();
  sub_20A62CE50();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t type metadata accessor for TickerInteractor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_20A62CF5C(uint64_t a1, uint64_t a2)
{
  return swift_release();
}

uint64_t sub_20A62D058(uint64_t a1)
{
  return swift_release();
}

uint64_t sub_20A62D14C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)a1 + 88);
  uint64_t v3 = *(void *)(*(void *)a1 + 80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 80))(a2, v3, v2);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v5[2] = v3;
  v5[3] = v2;
  void v5[4] = v4;
  sub_20A57258C();
  sub_20A62D4C8(&qword_26AC69F90, (void (*)(uint64_t))sub_20A57258C);
  swift_retain();
  sub_20A8C8C00();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_20A62D2C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_20A8C9B80();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F7D968], v6);
    char v11 = sub_20A8C9B70();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (v11)
    {
      uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 72))(a3, a4);
      sub_20A57258C();
      sub_20A62D4C8(&qword_26AC69F90, (void (*)(uint64_t))sub_20A57258C);
      sub_20A8C8C00();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_20A62D4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A62D70C(a3);
}

uint64_t sub_20A62D4B8()
{
  return sub_20A62D6C0();
}

uint64_t sub_20A62D4C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A62D880(a3);
}

uint64_t sub_20A62D4C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A62D510()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A62D548(uint64_t a1)
{
  return sub_20A62C678(a1);
}

uint64_t sub_20A62D554(uint64_t a1)
{
  return sub_20A62C7CC(a1, v1[4], v1[2], v1[3]);
}

void sub_20A62D560()
{
  if (!qword_26AC6B1C8)
  {
    sub_20A52A94C();
    unint64_t v0 = sub_20A8CD370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6B1C8);
    }
  }
}

uint64_t sub_20A62D5BC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A62D5F4(uint64_t a1)
{
  return sub_20A62CB34(a1);
}

uint64_t sub_20A62D600(uint64_t a1)
{
  sub_20A62D560();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A62D65C(uint64_t a1, uint64_t a2)
{
  sub_20A62D560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A62D6C0()
{
  swift_retain();
  sub_20A8C66A0();

  return swift_release();
}

uint64_t sub_20A62D70C(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_20A8C2E80();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  double v7 = MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = (char *)swift_allocObject();
  *((void *)v9 + 2) = *(void *)(v3 + 80);
  *((void *)v9 + 3) = *(void *)(v3 + 88);
  *((void *)v9 + 4) = v1;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v9[v8], (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  sub_20A8C66A0();
  return swift_release();
}

uint64_t sub_20A62D880(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_20A8C2EF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  double v7 = MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = (char *)swift_allocObject();
  *((void *)v9 + 2) = *(void *)(v3 + 80);
  *((void *)v9 + 3) = *(void *)(v3 + 88);
  *((void *)v9 + 4) = v1;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v9[v8], (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  sub_20A8C66A0();
  return swift_release();
}

uint64_t sub_20A62D9F4()
{
  return objectdestroy_14Tm(MEMORY[0x263F7AA20]);
}

uint64_t sub_20A62DA0C()
{
  return sub_20A62DB64(MEMORY[0x263F7AA20], sub_20A62D14C);
}

uint64_t sub_20A62DA38(uint64_t a1)
{
  return sub_20A62D2C4(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_20A62DA44()
{
  return sub_20A62D058(v0);
}

uint64_t sub_20A62DA4C()
{
  return objectdestroy_14Tm(MEMORY[0x263F7A990]);
}

uint64_t objectdestroy_14Tm(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);

  return swift_deallocObject();
}

uint64_t sub_20A62DB38()
{
  return sub_20A62DB64(MEMORY[0x263F7A990], sub_20A62CF5C);
}

uint64_t sub_20A62DB64(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = *(void *)(v2 + 32);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4, v5);
}

uint64_t type metadata accessor for QuoteSummaryViewStyler()
{
  return self;
}

uint64_t sub_20A62DC14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 40);
  uint64_t v8 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  uint64_t v12 = v10(a1, v7, v9);
  double v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A431A50((uint64_t)v15, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

uint64_t sub_20A62DD60(uint64_t a1)
{
  uint64_t v16 = a1;
  sub_20A62FA6C(0, (unint64_t *)&qword_26AC69D18, MEMORY[0x263F7D270]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v15 - v5;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_20A62FB7C(0, (unint64_t *)&qword_26AC7FF00, MEMORY[0x263F7CEF8], MEMORY[0x263F8E0F8]);
  sub_20A8C6150();
  uint64_t v8 = swift_allocObject();
  long long v15 = xmmword_20A8D3DC0;
  *(_OWORD *)(v8 + 16) = xmmword_20A8D3DC0;
  sub_20A62FB7C(0, &qword_26AC7FEF0, MEMORY[0x263F7CED8], v7);
  uint64_t v9 = *(void *)(sub_20A8C60E0() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = v15;
  uint64_t v12 = (void *)(v11 + v10);
  *uint64_t v12 = 0x7972657571;
  v12[1] = 0xE500000000000000;
  (*(void (**)(void))(v9 + 104))();
  unint64_t v13 = sub_20A62F630(MEMORY[0x263F8EE78]);
  MEMORY[0x21051E420](0x736B636F7473, 0xE600000000000000, 0, 0, 0x536C6F626D79732FLL, 0xED00006863726165, 0, 0, v11, v13);
  *(void *)(v1 + 16) = v8;
  uint64_t v17 = v16;
  type metadata accessor for StocksActivity(0);
  sub_20A62FA6C(0, (unint64_t *)&qword_26AC69E60, MEMORY[0x263F7D3E8]);
  sub_20A62FB08();
  sub_20A8C81D0();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v1 + OBJC_IVAR____TtC8StocksUI22StocksSearchURLHandler_navigator, v6, v3);
  return v1;
}

uint64_t sub_20A62E0B0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A62FA6C(0, (unint64_t *)&qword_26AC69E60, MEMORY[0x263F7D3E8]);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, (unint64_t *)&unk_26AC68EA0);
    uint64_t result = sub_20A8C5BB0();
    if (v5)
    {
      type metadata accessor for StocksV1SymbolURLHandler();
      swift_allocObject();
      return sub_20A62EAC8(v3, &v4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A62E1AC(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A62FA6C(0, (unint64_t *)&qword_26AC69E60, MEMORY[0x263F7D3E8]);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC6B290);
  uint64_t result = sub_20A8C5BB0();
  if (!v8[3])
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC69F80);
  uint64_t result = sub_20A8C5BB0();
  if (!v7)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v3 = result;
    type metadata accessor for StocksArticleURLHandler();
    uint64_t v4 = swift_allocObject();
    type metadata accessor for StocksActivity(0);
    sub_20A62FB08();
    swift_retain();
    sub_20A8C81D0();
    sub_20A4342F4((uint64_t)v8, v4 + OBJC_IVAR____TtC8StocksUI23StocksArticleURLHandler_featureAvailability);
    sub_20A4342F4((uint64_t)v6, v4 + OBJC_IVAR____TtC8StocksUI23StocksArticleURLHandler_appURLHandler);
    uint64_t v5 = sub_20A890670(v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    swift_release();
    *(void *)(v4 + 16) = v5;
    *(void *)(v4 + OBJC_IVAR____TtC8StocksUI23StocksArticleURLHandler_tracker) = v3;
    return v4;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_20A62E3D4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A62FA6C(0, (unint64_t *)&qword_26AC69E60, MEMORY[0x263F7D3E8]);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v2 = result;
    type metadata accessor for StocksSearchURLHandler();
    swift_allocObject();
    return sub_20A62DD60(v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A62E468(void *a1)
{
  uint64_t v2 = sub_20A8C6130();
  MEMORY[0x270FA5388](v2 - 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC69530);
  uint64_t result = sub_20A8C5BB0();
  if (v5)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC69460);
    uint64_t result = sub_20A8C5BB0();
    if (v4)
    {
      sub_20A8C6120();
      sub_20A8C5080();
      swift_allocObject();
      return sub_20A8C5070();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A62E5CC(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StocksSearchURLHandler();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_20A62FA24(&qword_26AC6BAE8, (void (*)(uint64_t))type metadata accessor for StocksSearchURLHandler);
  sub_20A8C6080();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StocksV1SymbolURLHandler();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_20A62FA24(&qword_26AC6BE48, (void (*)(uint64_t))type metadata accessor for StocksV1SymbolURLHandler);
  sub_20A8C6080();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StocksArticleURLHandler();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_20A62FA24(&qword_26AC6BBD0, (void (*)(uint64_t))type metadata accessor for StocksArticleURLHandler);
  sub_20A8C6080();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A8C5080();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_20A62FA24((unint64_t *)&unk_26AC69468, MEMORY[0x263F58C08]);
  sub_20A8C6070();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A8C7B40();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A62FA24(&qword_26AC69BC8, MEMORY[0x263F5A0C8]);
    sub_20A8C6090();
    return swift_release();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20A62E8D8()
{
  uint64_t v0 = sub_20A8C6410();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C7B40();
  sub_20A8C6290();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D000], v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_20A62EA04(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC69BE0);
  uint64_t result = sub_20A8C5BB0();
  if (v3)
  {
    swift_getObjectType();
    uint64_t v2 = sub_20A8C7C00();
    swift_unknownObjectRelease();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for URLHandlerAssembly()
{
  return self;
}

uint64_t sub_20A62EAC8(uint64_t a1, long long *a2)
{
  uint64_t v77 = a1;
  uint64_t v81 = a2;
  sub_20A62FA6C(0, (unint64_t *)&qword_26AC69D18, MEMORY[0x263F7D270]);
  uint64_t v79 = *(void *)(v2 - 8);
  uint64_t v80 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v76 = (char *)&v73 - v3;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_20A62FB7C(0, (unint64_t *)&qword_26AC7FF00, MEMORY[0x263F7CEF8], MEMORY[0x263F8E0F8]);
  uint64_t v5 = *(void *)(sub_20A8C6150() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v89 = *(void *)(v5 + 72);
  uint64_t v6 = v89;
  uint64_t v8 = swift_allocObject();
  uint64_t v75 = v8;
  *(_OWORD *)(v8 + 16) = xmmword_20A8DB4F0;
  unint64_t v86 = v8 + v7;
  sub_20A62FB7C(0, &qword_26AC7FEF0, MEMORY[0x263F7CED8], v4);
  uint64_t v10 = v9;
  uint64_t v11 = sub_20A8C60E0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v15 = *(void *)(v12 + 72);
  uint64_t v85 = v10;
  uint64_t v88 = v13 | 7;
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_20A8D3DC0;
  uint64_t v17 = (void *)(v16 + v14);
  *uint64_t v17 = 0x6C6F626D7973;
  v17[1] = 0xE600000000000000;
  uint64_t v18 = *(void (**)(void))(v12 + 104);
  v18();
  unint64_t v19 = sub_20A62F630(MEMORY[0x263F8EE78]);
  unint64_t v20 = v86;
  MEMORY[0x21051E420](0x736B636F7473, 0xE600000000000000, 0, 0, 0, 0, 0, 0, v16, v19);
  uint64_t v74 = v20 + v6;
  uint64_t v90 = v15;
  uint64_t v91 = v14 + 2 * v15;
  uint64_t v21 = swift_allocObject();
  long long v93 = xmmword_20A8D4540;
  *(_OWORD *)(v21 + 16) = xmmword_20A8D4540;
  uint64_t v22 = (void *)(v21 + v14);
  uint64_t v83 = v14;
  void *v22 = 0x6C6F626D7973;
  v22[1] = 0xE600000000000000;
  unsigned int v84 = *MEMORY[0x263F7CEC0];
  uint64_t v92 = v11;
  ((void (*)(uint64_t))v18)(v21 + v14);
  uint64_t v23 = (void *)((char *)v22 + v15);
  void *v23 = 0x656C6369747261;
  v23[1] = 0xE700000000000000;
  int v87 = *MEMORY[0x263F7CED0];
  v18();
  uint64_t v24 = sub_20A8C2490();
  uint64_t v26 = v25;
  sub_20A62F630(MEMORY[0x263F8EE78]);
  unint64_t v82 = 0x800000020A906B90;
  MEMORY[0x21051E410](0x736B636F7473, 0xE600000000000000, v24, v26, 0xD000000000000011);
  uint64_t v27 = v89;
  uint64_t v74 = 2 * v89;
  unint64_t v73 = v20 + 2 * v89;
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = v93;
  uint64_t v29 = (void *)(v28 + v14);
  *uint64_t v29 = 0x6C6F626D7973;
  v29[1] = 0xE600000000000000;
  uint64_t v30 = v84;
  ((void (*)(uint64_t, void, uint64_t))v18)(v28 + v14, v84, v92);
  long long v31 = (void *)(v28 + v14 + v90);
  void *v31 = 0x656C6369747261;
  v31[1] = 0xE700000000000000;
  v18();
  uint64_t v32 = sub_20A8C2490();
  uint64_t v34 = v33;
  unint64_t v35 = sub_20A62F630(MEMORY[0x263F8EE78]);
  unint64_t v36 = v82;
  MEMORY[0x21051E410](0x736B636F7473, 0xE600000000000000, v32, v34, 0xD000000000000011, v82, 0, 0, v28, v35);
  uint64_t v37 = v74 + v27;
  unint64_t v38 = v86;
  uint64_t v74 = v86 + v37;
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = v93;
  uint64_t v40 = (void *)(v39 + v83);
  *uint64_t v40 = 0x6C6F626D7973;
  v40[1] = 0xE600000000000000;
  ((void (*)(void *, uint64_t, uint64_t))v18)(v40, v30, v92);
  uint64_t v41 = v90;
  uint64_t v42 = (void *)((char *)v40 + v90);
  *uint64_t v42 = 0x656C6369747261;
  v42[1] = 0xE700000000000000;
  v18();
  uint64_t v43 = sub_20A8C2490();
  uint64_t v45 = v44;
  unint64_t v46 = sub_20A62F630(MEMORY[0x263F8EE78]);
  MEMORY[0x21051E410](0x7370747468, 0xE500000000000000, v43, v45, 0xD000000000000011, v36, 0, 0, v39, v46);
  uint64_t v74 = 4 * v89;
  unint64_t v73 = v38 + 4 * v89;
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = v93;
  uint64_t v48 = v83;
  uint64_t v49 = (void *)(v47 + v83);
  *uint64_t v49 = 0x6C6F626D7973;
  v49[1] = 0xE600000000000000;
  uint64_t v50 = v84;
  ((void (*)(void *, void, uint64_t))v18)(v49, v84, v92);
  uint64_t v51 = (void *)((char *)v49 + v41);
  *uint64_t v51 = 0x656C6369747261;
  v51[1] = 0xE700000000000000;
  v18();
  uint64_t v52 = sub_20A8C2490();
  uint64_t v54 = v53;
  unint64_t v55 = sub_20A62F630(MEMORY[0x263F8EE78]);
  MEMORY[0x21051E410](1886680168, 0xE400000000000000, v52, v54, 0xD000000000000011, v82, 0, 0, v47, v55);
  unint64_t v82 = v86 + v74 + v89;
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = v93;
  uint64_t v57 = (void *)(v56 + v48);
  *uint64_t v57 = 0x6C6F626D7973;
  v57[1] = 0xE600000000000000;
  ((void (*)(uint64_t, uint64_t, uint64_t))v18)(v56 + v48, v50, v92);
  uint64_t v58 = (void *)(v56 + v48 + v90);
  *uint64_t v58 = 0x656C6369747261;
  v58[1] = 0xE700000000000000;
  v18();
  uint64_t v59 = sub_20A8C2490();
  uint64_t v61 = v60;
  unint64_t v62 = sub_20A62F630(MEMORY[0x263F8EE78]);
  MEMORY[0x21051E410](0x7370747468, 0xE500000000000000, v59, v61, 0, 0, 0, 0, v56, v62);
  uint64_t v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = v93;
  uint64_t v64 = (void *)(v63 + v48);
  void *v64 = 0x6C6F626D7973;
  v64[1] = 0xE600000000000000;
  ((void (*)(void *, void, uint64_t))v18)(v64, v84, v92);
  uint64_t v65 = (void *)((char *)v64 + v90);
  *uint64_t v65 = 0x656C6369747261;
  v65[1] = 0xE700000000000000;
  v18();
  uint64_t v66 = sub_20A8C2490();
  uint64_t v68 = v67;
  unint64_t v69 = sub_20A62F630(MEMORY[0x263F8EE78]);
  MEMORY[0x21051E410](1886680168, 0xE400000000000000, v66, v68, 0, 0, 0, 0, v63, v69);
  uint64_t v70 = v78;
  *(void *)(v78 + 16) = v75;
  uint64_t v94 = v77;
  type metadata accessor for StocksActivity(0);
  sub_20A62FA6C(0, (unint64_t *)&qword_26AC69E60, MEMORY[0x263F7D3E8]);
  sub_20A62FB08();
  uint64_t v71 = v76;
  sub_20A8C81D0();
  (*(void (**)(uint64_t, char *, uint64_t))(v79 + 32))(v70 + OBJC_IVAR____TtC8StocksUI24StocksV1SymbolURLHandler_navigator, v71, v80);
  sub_20A42BEBC(v81, v70 + OBJC_IVAR____TtC8StocksUI24StocksV1SymbolURLHandler_stockMetadataManager);
  return v70;
}

unint64_t sub_20A62F470(uint64_t a1, uint64_t a2)
{
  sub_20A8CF880();
  sub_20A8CE360();
  uint64_t v4 = sub_20A8CF8C0();

  return sub_20A62F4E8(a1, a2, v4);
}

unint64_t sub_20A62F4E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_20A8CF760() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        uint64_t v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_20A8CF760() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_20A8CF760()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

unint64_t sub_20A62F630(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_20A4D3ABC();
  uint64_t v2 = (void *)sub_20A8CF570();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_20A62F470(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20A62F748()
{
  uint64_t v0 = sub_20A8C5C10();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C5CD0();
  type metadata accessor for StocksV1SymbolURLHandler();
  sub_20A8C6290();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  type metadata accessor for StocksArticleURLHandler();
  sub_20A8C6290();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  type metadata accessor for StocksSearchURLHandler();
  sub_20A8C6290();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A8C5080();
  sub_20A8C6290();
  swift_release();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_20A62FB7C(0, &qword_26AC69788, MEMORY[0x263F7D2D0], MEMORY[0x263F7CEB8]);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7CDE0], v0);
  sub_20A8C62F0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  sub_20A8C5CD0();
  sub_20A8C6280();
  return swift_release();
}

uint64_t sub_20A62FA24(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A62FA6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for StocksActivity(255);
    uint64_t v7 = sub_20A62FA24((unint64_t *)&unk_26AC6C730, (void (*)(uint64_t))type metadata accessor for StocksActivity);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_20A62FB08()
{
  unint64_t result = qword_26AC69E50;
  if (!qword_26AC69E50)
  {
    sub_20A62FA6C(255, (unint64_t *)&qword_26AC69E60, MEMORY[0x263F7D3E8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC69E50);
  }
  return result;
}

void sub_20A62FB7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

UIColor __swiftcall UIColor.stocksAccessibilityAdjustedForIncreaseContrast()()
{
  id v1 = objc_msgSend(self, sel_currentTraitCollection);
  id v2 = objc_msgSend(v1, sel_userInterfaceStyle);

  uint64_t v3 = &selRef_stocksAccessibilityAdjustedLighterForIncreaseContrast;
  if (v2 != (id)2) {
    uint64_t v3 = &selRef_stocksAccessibilityAdjustedDarkerForIncreaseContrast;
  }
  id v4 = [v0 *v3];

  return (UIColor)v4;
}

id sub_20A62FC74(void *a1)
{
  id v2 = self;
  id v3 = a1;
  id v4 = objc_msgSend(v2, sel_currentTraitCollection);
  id v5 = objc_msgSend(v4, sel_userInterfaceStyle);

  uint64_t v6 = &selRef_stocksAccessibilityAdjustedLighterForIncreaseContrast;
  if (v5 != (id)2) {
    uint64_t v6 = &selRef_stocksAccessibilityAdjustedDarkerForIncreaseContrast;
  }
  id v7 = [v3 *v6];

  return v7;
}

UIColor __swiftcall UIColor.stocksAccessibilityAdjustedLighterForIncreaseContrast()()
{
  id v1 = objc_msgSend(v0, sel_stocksAccessibilityAdjustedForIncreaseContrastAdjustingDarker_, 0);

  return (UIColor)v1;
}

id sub_20A62FD68(void *a1)
{
  id v1 = objc_msgSend(a1, sel_stocksAccessibilityAdjustedForIncreaseContrastAdjustingDarker_, 0);

  return v1;
}

UIColor __swiftcall UIColor.stocksAccessibilityAdjustedDarkerForIncreaseContrast()()
{
  id v1 = objc_msgSend(v0, sel_stocksAccessibilityAdjustedForIncreaseContrastAdjustingDarker_, 1);

  return (UIColor)v1;
}

id sub_20A62FDE0(void *a1)
{
  id v1 = objc_msgSend(a1, sel_stocksAccessibilityAdjustedForIncreaseContrastAdjustingDarker_, 1);

  return v1;
}

UIColor __swiftcall UIColor.stocksAccessibilityAdjustedForIncreaseContrast(darker:)(Swift::Bool darker)
{
  v25[1] = *(double *)MEMORY[0x263EF8340];
  id v2 = self;
  id v3 = objc_msgSend(v2, sel_currentTraitCollection);
  id v4 = objc_msgSend(v3, sel_accessibilityContrast);

  if (v4 == (id)1)
  {
    sub_20A45F33C();
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_20A8D5C90;
    *(void *)(v5 + 32) = objc_msgSend(v2, sel_traitCollectionWithAccessibilityContrast_, 1);
    if (darker) {
      uint64_t v6 = 1;
    }
    else {
      uint64_t v6 = 2;
    }
    *(void *)(v5 + 40) = objc_msgSend(v2, sel_traitCollectionWithUserInterfaceStyle_, v6);
    sub_20A8CE620();
    sub_20A630458();
    id v7 = (void *)sub_20A8CE5D0();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v2, sel_traitCollectionWithTraitsFromCollections_, v7);

    id v9 = objc_msgSend(v17, sel_resolvedColorWithTraitCollection_, v8);
    double v24 = 0.0;
    v25[0] = 0.0;
    double v22 = 0.0;
    double v23 = 0.0;
    double v20 = 0.0;
    double v21 = 0.0;
    double v18 = 0.0;
    double v19 = 0.0;
    objc_msgSend(v17, sel_getHue_saturation_brightness_alpha_, v25, &v24, &v23, &v22);
    objc_msgSend(v9, sel_getHue_saturation_brightness_alpha_, &v21, &v20, &v19, &v18);
    double v10 = v23;
    if (v23 == v19)
    {
      double v11 = v24;
      if (v24 == v20)
      {
        double v12 = v25[0];
        if (v25[0] == v21)
        {
          double v13 = v22;
          if (v22 == v18)
          {
            objc_msgSend(v17, sel_defaultBrightnessAdjustment);
            if (darker) {
              double v14 = -v14;
            }
            id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithHue_saturation_brightness_alpha_, v12, v11, v10 * (v14 + 1.0), v13);

            return (UIColor)v15;
          }
        }
      }
    }
    return (UIColor)v9;
  }
  else
  {
    return (UIColor)v17;
  }
}

Class sub_20A6300E4(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4 = a1;
  v5.super.isa = UIColor.stocksAccessibilityAdjustedForIncreaseContrast(darker:)(a3).super.isa;

  return v5.super.isa;
}

UIColor __swiftcall UIColor.stocksAccessibilityAdjustedForIncreaseContrastAgainst(backgroundColor:)(UIColor backgroundColor)
{
  objc_msgSend(v1, sel_relativeLuminance);
  double v4 = v3;
  [(objc_class *)backgroundColor.super.isa relativeLuminance];
  id v6 = objc_msgSend(v1, sel_stocksAccessibilityAdjustedForIncreaseContrastAdjustingDarker_, v4 <= v5);

  return (UIColor)v6;
}

id sub_20A6301AC(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  objc_msgSend(v5, sel_relativeLuminance);
  double v7 = v6;
  objc_msgSend(v4, sel_relativeLuminance);
  id v9 = objc_msgSend(v5, sel_stocksAccessibilityAdjustedForIncreaseContrastAdjustingDarker_, v7 <= v8);

  return v9;
}

double sub_20A630248()
{
  return 0.2;
}

double sub_20A630254()
{
  v8[1] = *(double *)MEMORY[0x263EF8340];
  double v7 = 0.0;
  v8[0] = 0.0;
  uint64_t v5 = 0;
  double v6 = 0.0;
  objc_msgSend(v0, sel_getRed_green_blue_alpha_, v8, &v7, &v6, &v5);
  if (v8[0] >= 0.03928) {
    double v1 = pow((v8[0] + 0.055) / 1.055, 2.4);
  }
  else {
    double v1 = v8[0] / 12.92;
  }
  if (v7 >= 0.03928) {
    double v2 = pow((v7 + 0.055) / 1.055, 2.4);
  }
  else {
    double v2 = v7 / 12.92;
  }
  if (v6 >= 0.03928) {
    double v3 = pow((v6 + 0.055) / 1.055, 2.4);
  }
  else {
    double v3 = v6 / 12.92;
  }
  return v1 * 0.2126 + v2 * 0.7152 + v3 * 0.0722;
}

double sub_20A6303D4(void *a1)
{
  id v1 = a1;
  double v2 = sub_20A630254();

  return v2;
}

double sub_20A630410(double a1)
{
  if (a1 >= 0.03928) {
    return pow((a1 + 0.055) / 1.055, 2.4);
  }
  else {
    return a1 / 12.92;
  }
}

unint64_t sub_20A630458()
{
  unint64_t result = qword_26763CAB0;
  if (!qword_26763CAB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26763CAB0);
  }
  return result;
}

void sub_20A630498(void (*a1)(uint64_t), uint64_t a2)
{
}

void sub_20A6304BC(uint64_t a1, uint64_t a2)
{
}

void sub_20A6304E0(void (*a1)(uint64_t), uint64_t a2)
{
  double v3 = v2;
  id v6 = objc_msgSend(v3, sel_childViewControllers);
  sub_20A4CF814();
  unint64_t v7 = sub_20A8CE5E0();

  if (!(v7 >> 62))
  {
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_20A8CF540();
  swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v7 & 0xC000000000000001) != 0)
  {
    MEMORY[0x210527700](0, v7);
  }
  else
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v8 = *(id *)(v7 + 32);
  }
  swift_bridgeObjectRelease();
  sub_20A63081C();
  if (swift_dynamicCast())
  {
    if (*((void *)&v14 + 1))
    {
      sub_20A42BEBC(&v13, (uint64_t)v16);
      uint64_t v9 = v17;
      uint64_t v10 = v18;
      __swift_project_boxed_opaque_existential_1(v16, v17);
      (*(void (**)(void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, a2, v9, v10);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      return;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v15 = 0;
  long long v13 = 0u;
  long long v14 = 0u;
LABEL_12:
  uint64_t v12 = sub_20A630874((uint64_t)&v13);
  if (a1) {
    a1(v12);
  }
}

void sub_20A630684(uint64_t a1, uint64_t a2)
{
  double v3 = v2;
  id v6 = objc_msgSend(v3, sel_childViewControllers);
  sub_20A4CF814();
  unint64_t v7 = sub_20A8CE5E0();

  if (!(v7 >> 62))
  {
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_20A8CF540();
  swift_bridgeObjectRelease();
  if (!v12) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v7 & 0xC000000000000001) != 0)
  {
    id v8 = (id)MEMORY[0x210527700](0, v7);
  }
  else
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v8 = *(id *)(v7 + 32);
  }
  id v9 = v8;
  swift_bridgeObjectRelease();
  v16[0] = v9;
  sub_20A63081C();
  if (swift_dynamicCast())
  {
    if (*((void *)&v14 + 1))
    {
      sub_20A42BEBC(&v13, (uint64_t)v16);
      uint64_t v10 = v17;
      uint64_t v11 = v18;
      __swift_project_boxed_opaque_existential_1(v16, v17);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 16))(a1, a2, v10, v11);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      return;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v15 = 0;
  long long v13 = 0u;
  long long v14 = 0u;
LABEL_12:
  sub_20A630874((uint64_t)&v13);
}

unint64_t sub_20A63081C()
{
  unint64_t result = qword_26AC80B70;
  if (!qword_26AC80B70)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC80B70);
  }
  return result;
}

uint64_t sub_20A630874(uint64_t a1)
{
  sub_20A6308D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_20A6308D0()
{
  if (!qword_26763CAB8)
  {
    sub_20A63081C();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763CAB8);
    }
  }
}

uint64_t sub_20A630930(uint64_t a1)
{
  sub_20A556CDC(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v6);
  id v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A4F6DE4();
  uint64_t v10 = *(int *)(v9 + 48);
  uint64_t v11 = sub_20A8C3F00();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v8, a1, v11);
  *(void *)&v8[v10] = 0;
  type metadata accessor for StocksActivity.StockFeed(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC8StocksUI12TickerRouter_tracker);
  uint64_t v13 = sub_20A8C6D60();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
  uint64_t v19 = 0;
  memset(v18, 0, sizeof(v18));
  uint64_t v17 = 0;
  memset(v16, 0, sizeof(v16));
  swift_retain();
  sub_20A5BFAAC((uint64_t)v8, v12, (uint64_t)v5, (uint64_t)v18, 0, 0, (uint64_t)v16);
  swift_release();
  sub_20A49127C((uint64_t)v16, &qword_26AC69600, (unint64_t *)&unk_26AC695F0);
  sub_20A49127C((uint64_t)v18, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
  sub_20A592D44((uint64_t)v5, (uint64_t (*)(void))sub_20A556CDC);
  sub_20A592D44((uint64_t)v8, type metadata accessor for StocksActivity);
  return swift_release();
}

uint64_t type metadata accessor for TickerRouter()
{
  return self;
}

uint64_t *sub_20A630C64(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C40E0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    long long v14 = (uint64_t *)((char *)v4 + v13);
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *(uint64_t *)((char *)a2 + v13 + 8);
    void *v14 = *(uint64_t *)((char *)a2 + v13);
    v14[1] = v16;
    uint64_t v36 = type metadata accessor for AttributionSource();
    uint64_t v17 = *(int *)(v36 + 20);
    uint64_t v34 = v15;
    __dst = (char *)v14 + v17;
    uint64_t v18 = &v15[v17];
    uint64_t v19 = sub_20A8C2530();
    uint64_t v20 = *(void *)(v19 - 8);
    double v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21(v18, 1, v19))
    {
      sub_20A632C38(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
      memcpy(__dst, v18, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    uint64_t v24 = *(int *)(v36 + 24);
    uint64_t v25 = *(void **)&v34[v24];
    *(void *)((char *)v14 + v24) = v25;
    uint64_t v26 = a3[8];
    uint64_t v27 = (char *)v4 + v26;
    uint64_t v28 = (char *)a2 + v26;
    long long v29 = *(_OWORD *)(v28 + 24);
    *(_OWORD *)((char *)v4 + v26 + 24) = v29;
    uint64_t v30 = v29;
    long long v31 = **(void (***)(char *, char *, uint64_t))(v29 - 8);
    id v32 = v25;
    v31(v27, v28, v30);
  }
  return v4;
}

uint64_t sub_20A630F0C(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[7];
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for AttributionSource();
  uint64_t v8 = v6 + *(int *)(v7 + 20);
  uint64_t v9 = sub_20A8C2530();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }

  uint64_t v11 = a1 + a2[8];

  return __swift_destroy_boxed_opaque_existential_1(v11);
}

void *sub_20A631058(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C40E0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  uint64_t v36 = a3;
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v13 = (void *)((char *)a1 + v12);
  long long v14 = (char *)a2 + v12;
  uint64_t v15 = *(void *)((char *)a2 + v12 + 8);
  void *v13 = *(void *)((char *)a2 + v12);
  v13[1] = v15;
  uint64_t v16 = type metadata accessor for AttributionSource();
  uint64_t v17 = *(int *)(v16 + 20);
  uint64_t v33 = v13;
  __dst = (char *)v13 + v17;
  uint64_t v35 = v16;
  uint64_t v18 = &v14[v17];
  uint64_t v19 = sub_20A8C2530();
  uint64_t v20 = *(void *)(v19 - 8);
  double v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21(v18, 1, v19))
  {
    sub_20A632C38(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    memcpy(__dst, v18, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  uint64_t v23 = *(int *)(v35 + 24);
  uint64_t v24 = *(void **)&v14[v23];
  *(void *)((char *)v33 + v23) = v24;
  uint64_t v25 = v36[8];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  long long v28 = *(_OWORD *)(v27 + 24);
  *(_OWORD *)((char *)a1 + v25 + 24) = v28;
  uint64_t v29 = v28;
  uint64_t v30 = **(void (***)(char *, char *, uint64_t))(v28 - 8);
  id v31 = v24;
  v30(v26, v27, v29);
  return a1;
}

void *sub_20A6312B8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C40E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v31 = a3;
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (char *)a2 + v10;
  *uint64_t v11 = *(void *)((char *)a2 + v10);
  v11[1] = *(void *)((char *)a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = type metadata accessor for AttributionSource();
  uint64_t v13 = *(int *)(v30 + 20);
  long long v14 = (char *)v11 + v13;
  uint64_t v15 = &v12[v13];
  uint64_t v16 = sub_20A8C2530();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  uint64_t v29 = v14;
  LODWORD(v14) = v18(v14, 1, v16);
  int v19 = v18(v15, 1, v16);
  if (v14)
  {
    if (!v19)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v29, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v29, 0, 1, v16);
      goto LABEL_9;
    }
    sub_20A632C38(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    size_t v21 = *(void *)(*(void *)(v20 - 8) + 64);
    uint64_t v22 = v29;
  }
  else
  {
    if (!v19)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 24))(v29, v15, v16);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v29, v16);
    sub_20A632C38(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    size_t v21 = *(void *)(*(void *)(v23 - 8) + 64);
    uint64_t v22 = v29;
  }
  memcpy(v22, v15, v21);
LABEL_9:
  uint64_t v24 = *(int *)(v30 + 24);
  uint64_t v25 = *(void **)((char *)v11 + v24);
  uint64_t v26 = *(void **)&v12[v24];
  *(void *)((char *)v11 + v24) = v26;
  id v27 = v26;

  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + v31[8]), (void *)((char *)a2 + v31[8]));
  return a1;
}

_OWORD *sub_20A6315B8(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C40E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for AttributionSource();
  uint64_t v14 = *(int *)(v13 + 20);
  uint64_t v15 = &v11[v14];
  uint64_t v16 = &v12[v14];
  uint64_t v17 = sub_20A8C2530();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_20A632C38(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  *(void *)&v11[*(int *)(v13 + 24)] = *(void *)&v12[*(int *)(v13 + 24)];
  uint64_t v20 = a3[8];
  size_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  long long v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)size_t v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  *((void *)v21 + 4) = *((void *)v22 + 4);
  return a1;
}

void *sub_20A6317A8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C40E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v35 = a3;
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)((char *)a2 + v11 + 8);
  *uint64_t v12 = *(void *)((char *)a2 + v11);
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v34 = type metadata accessor for AttributionSource();
  uint64_t v15 = *(int *)(v34 + 20);
  uint64_t v16 = (char *)v12 + v15;
  uint64_t v17 = &v13[v15];
  uint64_t v18 = sub_20A8C2530();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  uint64_t v33 = v16;
  LODWORD(v16) = v20(v16, 1, v18);
  int v21 = v20(v17, 1, v18);
  if (v16)
  {
    if (!v21)
    {
      (*(void (**)(void *, char *, uint64_t))(v19 + 32))(v33, v17, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v33, 0, 1, v18);
      goto LABEL_9;
    }
    sub_20A632C38(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    size_t v23 = *(void *)(*(void *)(v22 - 8) + 64);
    uint64_t v24 = v33;
  }
  else
  {
    if (!v21)
    {
      (*(void (**)(void *, char *, uint64_t))(v19 + 40))(v33, v17, v18);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v33, v18);
    sub_20A632C38(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    size_t v23 = *(void *)(*(void *)(v25 - 8) + 64);
    uint64_t v24 = v33;
  }
  memcpy(v24, v17, v23);
LABEL_9:
  uint64_t v26 = *(int *)(v34 + 24);
  id v27 = *(void **)((char *)v12 + v26);
  *(void *)((char *)v12 + v26) = *(void *)&v13[v26];

  uint64_t v28 = v35[8];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v28);
  long long v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *((void *)v29 + 4) = *((void *)v30 + 4);
  return a1;
}

uint64_t sub_20A631A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A631AA4);
}

uint64_t sub_20A631AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C40E0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for AttributionSource();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_20A631BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A631BE4);
}

uint64_t sub_20A631BE4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C40E0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for AttributionSource();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for StockListEmptyWatchlistBlueprintModifier()
{
  uint64_t result = qword_26763CAE0;
  if (!qword_26763CAE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A631D5C()
{
  uint64_t result = sub_20A8C40E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for AttributionSource();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_20A631E44(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v83 = a3;
  unsigned int v84 = a2;
  sub_20A4B9B70();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v80 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A632ACC(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v81 = *(void *)(v7 - 8);
  uint64_t v82 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v78 = (char *)&v70 - v8;
  sub_20A632ACC(0, &qword_26AC6A428, MEMORY[0x263F7D950]);
  uint64_t v79 = v9;
  uint64_t v77 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v76 = (char *)&v70 - v10;
  sub_20A4AE540();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v85 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A632ACC(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  uint64_t v86 = *(void *)(v13 - 8);
  uint64_t v87 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v75 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  unint64_t v73 = (char *)&v70 - v16;
  uint64_t v17 = type metadata accessor for AttributionSource();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (uint64_t *)((char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (uint64_t *)((char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A42D93C();
  uint64_t v24 = v23;
  uint64_t v88 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v89 = (char *)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v70 - v27;
  uint64_t v29 = (int *)type metadata accessor for StockListEmptyWatchlistBlueprintModifier();
  __swift_project_boxed_opaque_existential_1((void *)(v3 + v29[8]), *(void *)(v3 + v29[8] + 24));
  char v30 = sub_20A8C3850();
  uint64_t v74 = v24;
  if (v30)
  {
    unint64_t v31 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v32 = v29[7];
    uint64_t v72 = v3;
    sub_20A632BD4(v3 + v32, (uint64_t)v19);
    uint64_t *v22 = sub_20A6868E8(v19);
    v22[1] = v33;
    _OWORD v22[2] = v34;
    v22[3] = v35;
    swift_storeEnumTagMultiPayload();
    sub_20A632B8C(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    sub_20A8C8320();
    uint64_t v92 = 0;
    long long v90 = 0u;
    long long v91 = 0u;
    char v93 = 2;
    sub_20A632C38(0, &qword_26AC7FF28, (uint64_t (*)(uint64_t))sub_20A42D93C, MEMORY[0x263F8E0F8]);
    uint64_t v36 = v88;
    unint64_t v37 = (*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_20A8D3DC0;
    uint64_t v39 = *(void (**)(unint64_t, char *, uint64_t))(v36 + 16);
    uint64_t v71 = v28;
    v39(v38 + v37, v28, v24);
    uint64_t v40 = sub_20A632B8C(&qword_26AC69D98, (void (*)(uint64_t))sub_20A42D93C);
    uint64_t v41 = sub_20A632B8C(&qword_26AC69D90, (void (*)(uint64_t))sub_20A42D93C);
    MEMORY[0x21051E250](v38, v24, v40, v41);
    sub_20A42D40C();
    uint64_t v42 = v73;
    sub_20A8C8810();
    unint64_t v31 = sub_20A46DD54(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v44 = *(void *)(v31 + 16);
    unint64_t v43 = *(void *)(v31 + 24);
    if (v44 >= v43 >> 1) {
      unint64_t v31 = sub_20A46DD54(v43 > 1, v44 + 1, 1, v31);
    }
    *(void *)(v31 + 16) = v44 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v86 + 32))(v31+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ *(void *)(v86 + 72) * v44, v42, v87);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v71, v24);
    uint64_t v4 = v72;
  }
  uint64_t v45 = sub_20A8C4070();
  uint64_t v47 = v46;
  uint64_t v48 = sub_20A8C4050();
  uint64_t v49 = v4;
  uint64_t v51 = v50;
  uint64_t v52 = *(void *)(v49 + v29[6]);
  swift_storeEnumTagMultiPayload();
  sub_20A632B8C(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
  swift_bridgeObjectRetain();
  uint64_t v53 = v89;
  sub_20A8C8320();
  *(void *)&long long v90 = v45;
  *((void *)&v90 + 1) = v47;
  *(void *)&long long v91 = v48;
  *((void *)&v91 + 1) = v51;
  uint64_t v92 = v52;
  char v93 = 1;
  sub_20A632C38(0, &qword_26AC7FF28, (uint64_t (*)(uint64_t))sub_20A42D93C, MEMORY[0x263F8E0F8]);
  uint64_t v54 = v88;
  unint64_t v55 = (*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_20A8D3DC0;
  uint64_t v57 = v74;
  (*(void (**)(unint64_t, char *, uint64_t))(v54 + 16))(v56 + v55, v53, v74);
  uint64_t v58 = sub_20A632B8C(&qword_26AC69D98, (void (*)(uint64_t))sub_20A42D93C);
  uint64_t v59 = sub_20A632B8C(&qword_26AC69D90, (void (*)(uint64_t))sub_20A42D93C);
  MEMORY[0x21051E250](v56, v57, v58, v59);
  sub_20A42D40C();
  uint64_t v60 = v75;
  sub_20A8C8810();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v31 = sub_20A46DD54(0, *(void *)(v31 + 16) + 1, 1, v31);
  }
  unint64_t v62 = *(void *)(v31 + 16);
  unint64_t v61 = *(void *)(v31 + 24);
  if (v62 >= v61 >> 1) {
    unint64_t v31 = sub_20A46DD54(v61 > 1, v62 + 1, 1, v31);
  }
  *(void *)(v31 + 16) = v62 + 1;
  uint64_t v63 = v60;
  uint64_t v64 = v87;
  (*(void (**)(unint64_t, char *, uint64_t))(v86 + 32))(v31+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ *(void *)(v86 + 72) * v62, v63, v87);
  uint64_t v65 = sub_20A632A6C((unint64_t *)&unk_26AC69F20);
  uint64_t v66 = sub_20A632A6C(&qword_26AC69F18);
  MEMORY[0x21051E250](v31, v64, v65, v66);
  uint64_t v67 = v78;
  sub_20A8CBB20();
  uint64_t v68 = v76;
  sub_20A8C9B40();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v67, v82);
  v84(v68);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v68, v79);
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v89, v57);
}

uint64_t sub_20A63289C()
{
  sub_20A632C38(0, (unint64_t *)&qword_26AC7FFC8, MEMORY[0x263F7D880], MEMORY[0x263F8E0F8]);
  uint64_t v0 = sub_20A8C9880();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, void, uint64_t))(v1 + 104))(v3 + v2, *MEMORY[0x263F7D878], v0);
  uint64_t v4 = sub_20A7BAEDC(v3);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v4;
}

uint64_t sub_20A6329DC()
{
  return sub_20A632B8C(&qword_26763CAF0, (void (*)(uint64_t))type metadata accessor for StockListEmptyWatchlistBlueprintModifier);
}

uint64_t sub_20A632A24()
{
  return sub_20A632B8C(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
}

uint64_t sub_20A632A6C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A632ACC(255, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A632ACC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for StockListSectionDescriptor;
    v8[1] = type metadata accessor for StockListModel(255);
    double v8[2] = sub_20A42D40C();
    void v8[3] = sub_20A632B8C(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A632B8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A632BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AttributionSource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_20A632C38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A632C9C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return MEMORY[0x270FA2498](sub_20A632CBC, 0, 0);
}

uint64_t sub_20A632CBC()
{
  sub_20A635850(0, &qword_26AC82B10, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_20A4F0534, MEMORY[0x263F59758]);
  *(void *)(v0 + 64) = sub_20A8CC490();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_20A632DB4;
  return MEMORY[0x270F7A5E8](v0 + 16);
}

uint64_t sub_20A632DB4()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_20A633194;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_20A632ED0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_20A632ED0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 88) = v1;
  if (v1)
  {
    *(int8x16_t *)(v0 + 96) = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_20A632FEC;
    return MEMORY[0x270F7A5E8](v0 + 40);
  }
  else
  {
    sub_20A635AD0();
    swift_allocError();
    swift_willThrow();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_20A632FEC()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_20A6331F8;
  }
  else {
    uint64_t v2 = sub_20A633100;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_20A633100()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = (void *)v0[6];
  v1[3] = &type metadata for YahooStockForYouFeedGroupEmitterCursor;
  swift_release();
  *uint64_t v1 = v2;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_20A633194()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_20A6331F8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_20A633270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  uint64_t v4 = sub_20A8C7DF0();
  v3[14] = v4;
  v3[15] = *(void *)(v4 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_20A633344, 0, 0);
}

uint64_t sub_20A633344()
{
  *(void *)(v0 + 144) = sub_20A8CCAD0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_20A6333FC;
  return MEMORY[0x270F7A5E8](v0 + 64);
}

uint64_t sub_20A6333FC()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_20A633744;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_20A633518;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_20A633518()
{
  uint64_t v1 = v0[8];
  v0[21] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[22] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_20A6335BC;
  uint64_t v3 = v0[11];
  return sub_20A63414C(v3, v1);
}

uint64_t sub_20A6335BC()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_20A633C48;
  }
  else {
    uint64_t v2 = sub_20A6336D0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_20A6336D0()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_20A633744()
{
  uint64_t v30 = v0;
  swift_release();
  uint64_t v1 = *(void **)(v0 + 160);
  *(void *)(v0 + 48) = v1;
  id v2 = v1;
  sub_20A4756FC();
  if (swift_dynamicCast())
  {

    if (qword_26AC6D3D0 != -1) {
      swift_once();
    }
    id v3 = (id)qword_26AC6D3C8;
    sub_20A8C7E00();
    uint64_t v4 = sub_20A8C7DD0();
    os_log_type_t v5 = sub_20A8CEA00();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_20A414000, v4, v5, "Yahoo News For You Stocks group emitter has no pool to emit from, error=Errors.noPool", v6, 2u);
      MEMORY[0x210528850](v6, -1, -1);
    }
    uint64_t v7 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v9 = *(void *)(v0 + 120);
    uint64_t v10 = *(void **)(v0 + 88);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    *uint64_t v10 = 0xD000000000000058;
    v10[1] = 0x800000020A906CD0;
    sub_20A635850(0, &qword_26AC6B090, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_20A46A38C, MEMORY[0x263F59920]);
    swift_storeEnumTagMultiPayload();
  }
  else
  {

    if (qword_26AC6D3D0 != -1) {
      swift_once();
    }
    id v11 = (id)qword_26AC6D3C8;
    sub_20A8C7E00();
    id v12 = v1;
    id v13 = v1;
    uint64_t v14 = sub_20A8C7DD0();
    os_log_type_t v15 = sub_20A8CEA00();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v17 = *(void *)(v0 + 120);
    uint64_t v18 = *(void *)(v0 + 128);
    uint64_t v27 = *(void *)(v0 + 112);
    if (v16)
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = v18;
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136446210;
      uint64_t v28 = v20;
      *(void *)(v0 + 16) = 0;
      *(void *)(v0 + 24) = 0xE000000000000000;
      *(void *)(v0 + 72) = v1;
      sub_20A8CF4E0();
      *(void *)(v0 + 80) = sub_20A687610(*(void *)(v0 + 16), *(void *)(v0 + 24), &v28);
      sub_20A8CF1C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_20A414000, v14, v15, "Yahoo News For You Stocks group emitter has no pool to emit from, error=%{public}s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x210528850](v20, -1, -1);
      MEMORY[0x210528850](v19, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v26, v27);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v27);
    }
    uint64_t v21 = *(void **)(v0 + 88);
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    sub_20A8CF3C0();
    unint64_t v22 = v29;
    *(void *)(v0 + 32) = v28;
    *(void *)(v0 + 40) = v22;
    sub_20A8CE3D0();
    *(void *)(v0 + 56) = v1;
    sub_20A8CF4E0();

    uint64_t v23 = *(void *)(v0 + 40);
    *uint64_t v21 = *(void *)(v0 + 32);
    v21[1] = v23;
    sub_20A635850(0, &qword_26AC6B090, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_20A46A38C, MEMORY[0x263F59920]);
    swift_storeEnumTagMultiPayload();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_20A633C48()
{
  uint64_t v30 = v0;
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 184);
  *(void *)(v0 + 48) = v1;
  id v2 = v1;
  sub_20A4756FC();
  if (swift_dynamicCast())
  {

    if (qword_26AC6D3D0 != -1) {
      swift_once();
    }
    id v3 = (id)qword_26AC6D3C8;
    sub_20A8C7E00();
    uint64_t v4 = sub_20A8C7DD0();
    os_log_type_t v5 = sub_20A8CEA00();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_20A414000, v4, v5, "Yahoo News For You Stocks group emitter has no pool to emit from, error=Errors.noPool", v6, 2u);
      MEMORY[0x210528850](v6, -1, -1);
    }
    uint64_t v7 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v9 = *(void *)(v0 + 120);
    uint64_t v10 = *(void **)(v0 + 88);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    *uint64_t v10 = 0xD000000000000058;
    v10[1] = 0x800000020A906CD0;
    sub_20A635850(0, &qword_26AC6B090, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_20A46A38C, MEMORY[0x263F59920]);
    swift_storeEnumTagMultiPayload();
  }
  else
  {

    if (qword_26AC6D3D0 != -1) {
      swift_once();
    }
    id v11 = (id)qword_26AC6D3C8;
    sub_20A8C7E00();
    id v12 = v1;
    id v13 = v1;
    uint64_t v14 = sub_20A8C7DD0();
    os_log_type_t v15 = sub_20A8CEA00();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v17 = *(void *)(v0 + 120);
    uint64_t v18 = *(void *)(v0 + 128);
    uint64_t v27 = *(void *)(v0 + 112);
    if (v16)
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = v18;
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136446210;
      uint64_t v28 = v20;
      *(void *)(v0 + 16) = 0;
      *(void *)(v0 + 24) = 0xE000000000000000;
      *(void *)(v0 + 72) = v1;
      sub_20A8CF4E0();
      *(void *)(v0 + 80) = sub_20A687610(*(void *)(v0 + 16), *(void *)(v0 + 24), &v28);
      sub_20A8CF1C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_20A414000, v14, v15, "Yahoo News For You Stocks group emitter has no pool to emit from, error=%{public}s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x210528850](v20, -1, -1);
      MEMORY[0x210528850](v19, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v26, v27);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v27);
    }
    uint64_t v21 = *(void **)(v0 + 88);
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    sub_20A8CF3C0();
    unint64_t v22 = v29;
    *(void *)(v0 + 32) = v28;
    *(void *)(v0 + 40) = v22;
    sub_20A8CE3D0();
    *(void *)(v0 + 56) = v1;
    sub_20A8CF4E0();

    uint64_t v23 = *(void *)(v0 + 40);
    *uint64_t v21 = *(void *)(v0 + 32);
    v21[1] = v23;
    sub_20A635850(0, &qword_26AC6B090, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_20A46A38C, MEMORY[0x263F59920]);
    swift_storeEnumTagMultiPayload();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_20A63414C(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  void v3[6] = v2;
  v3[4] = a1;
  v3[7] = type metadata accessor for ForYouFeedGroup();
  v3[8] = swift_task_alloc();
  uint64_t v4 = sub_20A8C3F00();
  v3[9] = v4;
  v3[10] = *(void *)(v4 - 8);
  v3[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_20A634240, 0, 0);
}

uint64_t sub_20A634240()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_appConfiguration;
  *(void *)(v0 + 96) = OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_stockFeedService;
  *(void *)(v0 + 104) = v2;
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  if (v3)
  {
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v5 = *(void *)(v0 + 80);
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v5 += 16;
    int v7 = *(_DWORD *)(v5 + 64);
    *(_DWORD *)(v0 + 28) = v7;
    uint64_t v8 = *(void *)(v0 + 88);
    uint64_t v9 = v1 + ((v7 + 32) & ~(unint64_t)v7);
    *(void *)(v0 + 112) = v6;
    *(void *)(v0 + 120) = v5 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v6(v8, v9, v4);
    if (v3 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = 0;
    }
    else
    {
      sub_20A8CF790();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v14 = swift_dynamicCastClass();
      if (!v14)
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = MEMORY[0x263F8EE78];
      }
      uint64_t v15 = *(void *)(v14 + 16);
      swift_release();
      if (v15 == v3 - 1)
      {
        uint64_t v10 = swift_dynamicCastClass();
        if (!v10)
        {
          swift_bridgeObjectRelease();
          uint64_t v10 = MEMORY[0x263F8EE78];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v10 = sub_20A75C918(v1, v9, 1, (2 * v3) | 1);
      }
      swift_bridgeObjectRelease_n();
    }
    *(void *)(v0 + 128) = v10;
    BOOL v16 = (void *)(*(void *)(v0 + 48) + *(void *)(v0 + 96));
    __swift_project_boxed_opaque_existential_1(v16, v16[3]);
    *(void *)(v0 + 136) = sub_20A8C3590();
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_20A63451C;
    return MEMORY[0x270F7A5E8](v0 + 16);
  }
  else
  {
    swift_bridgeObjectRelease();
    id v11 = *(void **)(v0 + 32);
    *id v11 = 0x64656873696E6966;
    v11[1] = 0xE800000000000000;
    sub_20A635850(0, &qword_26AC6B090, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_20A46A38C, MEMORY[0x263F59920]);
    swift_storeEnumTagMultiPayload();
    swift_task_dealloc();
    swift_task_dealloc();
    id v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
}

uint64_t sub_20A63451C()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_20A634C68;
  }
  else
  {
    uint64_t v2 = sub_20A634660;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_20A634660()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2 >= sub_20A8C3000())
  {
    uint64_t v11 = sub_20A8C2FF0();
    if (v11 >= v2)
    {
      uint64_t v15 = v1;
      goto LABEL_16;
    }
    uint64_t v12 = v11;
    if (v11 < 0)
    {
      __break(1u);
    }
    else if (*(void *)(v1 + 16) >= (unint64_t)v11)
    {
      sub_20A8CF790();
      swift_unknownObjectRetain_n();
      uint64_t v13 = swift_dynamicCastClass();
      if (!v13)
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = MEMORY[0x263F8EE78];
      }
      uint64_t v14 = *(void *)(v13 + 16);
      swift_release();
      if (v14 == v12)
      {
        uint64_t v15 = swift_dynamicCastClass();
        swift_bridgeObjectRelease();
        if (v15)
        {
LABEL_16:
          uint64_t v16 = *(void *)(v0 + 128);
          uint64_t v17 = *(void *)(v0 + 64);
          (*(void (**)(uint64_t, void, void))(v0 + 112))(v17, *(void *)(v0 + 88), *(void *)(v0 + 72));
          uint64_t v18 = (int *)type metadata accessor for StockForYouFeedGroup();
          uint64_t v19 = v17 + v18[7];
          uint64_t v20 = sub_20A8CC470();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
          *(void *)(v17 + v18[5]) = v15;
          *(unsigned char *)(v17 + v18[6]) = 1;
          swift_storeEnumTagMultiPayload();
          if (v16)
          {
            uint64_t v21 = *(void *)(v0 + 128);
            uint64_t v23 = *(void *)(v0 + 80);
            uint64_t v22 = *(void *)(v0 + 88);
            uint64_t v25 = *(void *)(v0 + 64);
            uint64_t v24 = *(void *)(v0 + 72);
            uint64_t v26 = *(void *)(v0 + 32);
            sub_20A63577C();
            uint64_t v28 = (void *)(v26 + *(int *)(v27 + 48));
            sub_20A6357EC(v25, v26);
            void v28[3] = &type metadata for YahooStockForYouFeedGroupEmitterCursor;
            *uint64_t v28 = v21;
            sub_20A635BBC(v25, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
            (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
          }
          else
          {
            uint64_t v29 = *(void *)(v0 + 64);
            uint64_t v30 = *(void *)(v0 + 32);
            (*(void (**)(void, void))(*(void *)(v0 + 80) + 8))(*(void *)(v0 + 88), *(void *)(v0 + 72));
            sub_20A635718(v29, v30);
          }
          sub_20A635850(0, &qword_26AC6B090, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_20A46A38C, MEMORY[0x263F59920]);
          goto LABEL_22;
        }
        uint64_t v15 = MEMORY[0x263F8EE78];
LABEL_14:
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
LABEL_36:
      swift_bridgeObjectRelease();
      uint64_t v38 = *(void *)(sub_20A8C4020() - 8);
      uint64_t v15 = sub_20A75C94C(v1, v1 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80)), 0, (2 * v12) | 1);
      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v3 = *(void *)(v0 + 128);
  (*(void (**)(void, void))(*(void *)(v0 + 80) + 8))(*(void *)(v0 + 88), *(void *)(v0 + 72));
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v4 = *(void *)(v0 + 128);
    uint64_t v5 = *(void *)(v4 + 16);
    if (v5)
    {
      uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 112);
      uint64_t v7 = *(void *)(v0 + 88);
      uint64_t v8 = *(void *)(v0 + 72);
      uint64_t v9 = v4 + ((*(unsigned __int8 *)(v0 + 28) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 28));
      *(void *)(v0 + 120) = (*(void *)(v0 + 80) + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v6(v7, v9, v8);
      if (v5 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v10 = 0;
      }
      else
      {
        sub_20A8CF790();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain_n();
        uint64_t v34 = swift_dynamicCastClass();
        if (!v34)
        {
          swift_bridgeObjectRelease();
          uint64_t v34 = MEMORY[0x263F8EE78];
        }
        uint64_t v35 = *(void *)(v34 + 16);
        swift_release();
        if (v35 == v5 - 1)
        {
          uint64_t v10 = swift_dynamicCastClass();
          if (!v10)
          {
            swift_bridgeObjectRelease();
            uint64_t v10 = MEMORY[0x263F8EE78];
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v10 = sub_20A75C918(v4, v9, 1, (2 * v5) | 1);
        }
        swift_bridgeObjectRelease_n();
      }
      *(void *)(v0 + 128) = v10;
      uint64_t v36 = (void *)(*(void *)(v0 + 48) + *(void *)(v0 + 96));
      __swift_project_boxed_opaque_existential_1(v36, v36[3]);
      *(void *)(v0 + 136) = sub_20A8C3590();
      unint64_t v37 = (void *)swift_task_alloc();
      *(void *)(v0 + 144) = v37;
      void *v37 = v0;
      v37[1] = sub_20A63451C;
      return MEMORY[0x270F7A5E8](v0 + 16);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v31 = *(void **)(v0 + 32);
  void *v31 = 0x64656873696E6966;
  v31[1] = 0xE800000000000000;
  sub_20A635850(0, &qword_26AC6B090, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_20A46A38C, MEMORY[0x263F59920]);
LABEL_22:
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

uint64_t sub_20A634C68()
{
  (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_20A634CF0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_appConfiguration;
  uint64_t v2 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_config;
  sub_20A460F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_20A635BBC(v0 + OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_knobs, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroupKnobs);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_stockFeedService);

  return swift_deallocClassInstance();
}

uint64_t sub_20A634E08()
{
  return type metadata accessor for YahooStockForYouFeedGroupEmitter();
}

uint64_t type metadata accessor for YahooStockForYouFeedGroupEmitter()
{
  uint64_t result = qword_26763CB18;
  if (!qword_26763CB18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A634E5C()
{
  sub_20A8C3190();
  if (v0 <= 0x3F)
  {
    sub_20A460F28();
    if (v1 <= 0x3F)
    {
      type metadata accessor for StockForYouFeedGroupKnobs();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_20A634F68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A634FB0(uint64_t a1)
{
  sub_20A635850(0, &qword_26AC82B10, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_20A4F0534, MEMORY[0x263F59758]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v10 - v5;
  sub_20A635B58(0, (unint64_t *)&qword_26AC698D8, (uint64_t (*)(uint64_t))sub_20A42F348, MEMORY[0x263F7D028]);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, v6, v3);
  return sub_20A8C64E0();
}

uint64_t sub_20A635164(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_20A635590();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v3;
  swift_retain();
  swift_retain();
  return sub_20A8C64E0();
}

uint64_t sub_20A6351EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_config;
  sub_20A460F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
  type metadata accessor for ForYouFeedGroupConfig();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_20A635290()
{
  return sub_20A8CC530();
}

uint64_t sub_20A6352C8@<X0>(uint64_t *a1@<X8>)
{
  sub_20A635B58(0, &qword_26AC800E8, (uint64_t (*)(uint64_t))sub_20A4D27BC, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D3DC0;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  sub_20A460F28();
  uint64_t v3 = sub_20A8CC530();
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v4;
  sub_20A4CFBE4(inited);
  sub_20A635B24(0);
  a1[3] = v5;
  a1[4] = sub_20A634F68(&qword_26763CB80, sub_20A635B24);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_20A8C5EF0();
}

uint64_t sub_20A635404()
{
  sub_20A634F68(&qword_26763CB38, (void (*)(uint64_t))type metadata accessor for YahooStockForYouFeedGroupEmitter);

  return sub_20A8C5EE0();
}

uint64_t sub_20A635470()
{
  return sub_20A634F68(&qword_26763CB28, (void (*)(uint64_t))type metadata accessor for YahooStockForYouFeedGroupEmitter);
}

uint64_t sub_20A6354B8()
{
  return sub_20A634F68(&qword_26763CB30, (void (*)(uint64_t))type metadata accessor for YahooStockForYouFeedGroupEmitter);
}

uint64_t sub_20A635500()
{
  return sub_20A634F68(&qword_26763CB38, (void (*)(uint64_t))type metadata accessor for YahooStockForYouFeedGroupEmitter);
}

uint64_t sub_20A635548()
{
  return sub_20A634F68(&qword_26763CB40, (void (*)(uint64_t))type metadata accessor for YahooStockForYouFeedGroupEmitter);
}

void sub_20A635590()
{
  if (!qword_26AC69860)
  {
    sub_20A635850(255, &qword_26AC6B090, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_20A46A38C, MEMORY[0x263F59920]);
    unint64_t v0 = sub_20A8C65F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69860);
    }
  }
}

uint64_t sub_20A63562C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A63566C(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_20A490F70;
  return sub_20A633270(a1, v5, v4);
}

uint64_t sub_20A635718(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ForYouFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20A63577C()
{
  if (!qword_26AC6E138)
  {
    type metadata accessor for ForYouFeedGroup();
    sub_20A42F348();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC6E138);
    }
  }
}

uint64_t sub_20A6357EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ForYouFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_20A635850(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_20A6358D0()
{
  sub_20A635850(0, &qword_26AC82B10, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_20A4F0534, MEMORY[0x263F59758]);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_20A6359A4(uint64_t a1)
{
  sub_20A635850(0, &qword_26AC82B10, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_20A4F0534, MEMORY[0x263F59758]);
  uint64_t v5 = v1
     + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_20A635D48;
  v6[6] = a1;
  v6[7] = v5;
  return MEMORY[0x270FA2498](sub_20A632CBC, 0, 0);
}

unint64_t sub_20A635AD0()
{
  unint64_t result = qword_26763CB70;
  if (!qword_26763CB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CB70);
  }
  return result;
}

void sub_20A635B24(uint64_t a1)
{
}

void sub_20A635B58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A635BBC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for YahooStockForYouFeedGroupEmitter.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A635CB8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooStockForYouFeedGroupEmitter.Errors()
{
  return &type metadata for YahooStockForYouFeedGroupEmitter.Errors;
}

unint64_t sub_20A635CF4()
{
  unint64_t result = qword_26763CB88;
  if (!qword_26763CB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CB88);
  }
  return result;
}

uint64_t destroy for StockChartViewLayoutAttributes()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StockChartViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for StockChartViewLayoutAttributes(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  a1[17] = a2[17];
  a1[18] = a2[18];
  a1[19] = a2[19];
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[21] = a2[21];
  a1[22] = a2[22];
  a1[23] = a2[23];
  a1[24] = a2[24];
  return a1;
}

__n128 __swift_memcpy200_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for StockChartViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockChartViewLayoutAttributes(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 200)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 160);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockChartViewLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 200) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 160) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 200) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockChartViewLayoutAttributes()
{
  return &type metadata for StockChartViewLayoutAttributes;
}

uint64_t sub_20A636040()
{
  sub_20A6360D4();

  return sub_20A8CACE0();
}

unint64_t sub_20A636080()
{
  unint64_t result = qword_26763CB90;
  if (!qword_26763CB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CB90);
  }
  return result;
}

unint64_t sub_20A6360D4()
{
  unint64_t result = qword_26763CB98;
  if (!qword_26763CB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CB98);
  }
  return result;
}

id sub_20A636128()
{
  id v0 = objc_allocWithZone((Class)sub_20A8C62E0());

  return objc_msgSend(v0, sel_init);
}

uint64_t sub_20A636160(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A4301D4(0, &qword_26AC7B530);
  uint64_t result = sub_20A8C5BB0();
  if (v3)
  {
    sub_20A8C62D0();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A636208(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A8C3770();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A63A3F0(&qword_26763CBA8, MEMORY[0x263F7ACD0]);
    sub_20A8C62D0();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A6362C8(void *a1)
{
  uint64_t v2 = sub_20A8C6200();
  MEMORY[0x270FA5388](v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC67650);
  uint64_t result = sub_20A8C5BB0();
  if (v6)
  {
    type metadata accessor for AppConfigurationRefreshManager();
    uint64_t v4 = swift_allocObject();
    sub_20A63A3F0(&qword_26AC69798, MEMORY[0x263F7CF38]);
    sub_20A63A280();
    sub_20A63A3F0((unint64_t *)&qword_26AC7F748, (void (*)(uint64_t))sub_20A63A280);
    sub_20A8CF290();
    sub_20A63A37C(0, (unint64_t *)&unk_26AC69610, MEMORY[0x263F7AAA0], MEMORY[0x263F7CE08]);
    swift_allocObject();
    *(void *)(v4 + 56) = sub_20A8C5C90();
    sub_20A42BEBC(&v5, v4 + 16);
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A6364BC(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    if (qword_26AC69360 != -1) {
      swift_once();
    }
    uint64_t v2 = qword_26AC69358;
    swift_retain();
    swift_release();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A636560(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StocksV2UserActivitySerializer();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A4699B4();
    swift_allocObject();
    return sub_20A8C92E0();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A6365E0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4699B4();
  uint64_t v4 = v3;
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v6 = result;
    a2[3] = v4;
    uint64_t result = sub_20A63A3F0(&qword_26AC67758, (void (*)(uint64_t))sub_20A4699B4);
    a2[4] = result;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A636688(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68EB0);
  uint64_t result = sub_20A8C5BB0();
  if (!v7)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C44A0();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v4 = result;
    type metadata accessor for IdentificationResetManager();
    uint64_t v5 = swift_allocObject();
    sub_20A42BEBC(&v6, v5 + 16);
    *(void *)(v5 + 56) = v3;
    *(void *)(v5 + 64) = v4;
    return v5;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A6367A8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E50);
  uint64_t result = sub_20A8C5BB0();
  if (!v11)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC68EC0);
  uint64_t result = sub_20A8C5BB0();
  if (!v9)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC67650);
  uint64_t result = sub_20A8C5BB0();
  if (v7)
  {
    type metadata accessor for StockPriceDataRefreshManager();
    swift_allocObject();
    uint64_t v5 = sub_20A4E9B2C(&v10, &v8, &v6);
    uint64_t result = sub_20A63A3F0(&qword_26AC789E8, (void (*)(uint64_t))type metadata accessor for StockPriceDataRefreshManager);
    *a2 = v5;
    a2[1] = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_20A636934(uint64_t *a1@<X8>)
{
  uint64_t refreshed = type metadata accessor for InvertColorsRefreshManager();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = objc_msgSend(self, sel_hashTableWithOptions_, 5);
  id v4 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v4, sel_addObserver_selector_name_object_, v3, sel_accessibilityInvertColorsStatusDidChange_, *MEMORY[0x263F831B8], 0);

  a1[3] = refreshed;
  a1[4] = (uint64_t)&off_26BE69770;
  *a1 = v3;
}

uint64_t sub_20A636A00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t refreshed = type metadata accessor for DataRefreshManager();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = MEMORY[0x263F8EE78];
  a1[3] = refreshed;
  a1[4] = (uint64_t)&off_26BE63680;
  *a1 = result;
  return result;
}

uint64_t sub_20A636A54()
{
  id v0 = objc_msgSend(self, sel_sharedApplication);
  id v1 = objc_allocWithZone((Class)sub_20A8CAD60());
  return sub_20A8CAD50();
}

id sub_20A636AAC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (objc_class *)sub_20A8C9360();
  id result = objc_msgSend(objc_allocWithZone(v2), sel_init);
  uint64_t v4 = MEMORY[0x263F7D760];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = result;
  return result;
}

uint64_t sub_20A636AF8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for ANFSceneActivityBridge();
  uint64_t result = sub_20A8C5BA0();
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A636B4C()
{
  type metadata accessor for ANFSceneActivityBridge();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = MEMORY[0x263F8EE78];
  return result;
}

uint64_t sub_20A636B80(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC697A0);
  uint64_t result = sub_20A8C5BB0();
  if (v4)
  {
    sub_20A42BEBC(&v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_20A63A3F0(qword_26AC67EE8, (void (*)(uint64_t))type metadata accessor for ANFSceneActivityBridge);
    sub_20A8C62B0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A636C7C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StocksV2UserActivityDeserializer();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v4 = result;
    type metadata accessor for ScrollRestorationManager();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v4;
    *a2 = result;
    a2[1] = (uint64_t)&off_26BE6D6D8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A636CFC()
{
  type metadata accessor for PremiumSealAnimationManager();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 1;
  return result;
}

uint64_t sub_20A636D2C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_20A8C5BB0();
  if (v5 == 2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = type metadata accessor for OnboardingConfigurationFactory();
    uint64_t result = swift_allocObject();
    *(unsigned char *)(result + 16) = v5 & 1;
    a2[3] = v4;
    a2[4] = (uint64_t)&off_26BE6C0B8;
    *a2 = result;
  }
  return result;
}

uint64_t sub_20A636DC8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C8220();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6AA30);
  uint64_t result = sub_20A8C5BB0();
  if (!v7)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6A9A8);
  uint64_t result = sub_20A8C5BB0();
  if (v6)
  {
    sub_20A8CA670();
    swift_allocObject();
    uint64_t v5 = sub_20A8CA660();
    uint64_t result = sub_20A63A3F0(&qword_26AC6A660, MEMORY[0x263F7DCC8]);
    *a2 = v5;
    a2[1] = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A636F3C(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E90);
  uint64_t result = sub_20A8C5BB0();
  if (!v17)
  {
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(v16, v17);
  char v4 = sub_20A8C3800();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_20A4301D4(0, (unint64_t *)&unk_26AC69BF8);
    uint64_t result = sub_20A8C5BB0();
    uint64_t v5 = v17;
    if (!v17)
    {
LABEL_11:
      __break(1u);
      return result;
    }
    swift_getObjectType();
    uint64_t v6 = v18;
    uint64_t v7 = __swift_project_boxed_opaque_existential_1(v16, v5);
    uint64_t v14 = v5;
    uint64_t v15 = *(void *)(v6 + 8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v13);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(boxed_opaque_existential_1, v7, v5);
    sub_20A8CAB70();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC69C28);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v9 = v17;
  if (!v17)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  swift_getObjectType();
  uint64_t v10 = v18;
  uint64_t v11 = __swift_project_boxed_opaque_existential_1(v16, v9);
  uint64_t v14 = v9;
  uint64_t v15 = *(void *)(v10 + 8);
  uint64_t v12 = __swift_allocate_boxed_opaque_existential_1(v13);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v12, v11, v9);
  sub_20A8CAB70();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  sub_20A8C5AC0();
  if (sub_20A8C5AB0())
  {
    sub_20A8C4250();
    sub_20A8C4230();
    sub_20A8C4130();
    sub_20A8C4220();
    swift_release();
    swift_release();
  }
  return sub_20A8CAB60();
}

uint64_t sub_20A637214@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_20A8C9DD0();
  MEMORY[0x270FA5388](v4 - 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC69BD8);
  uint64_t result = sub_20A8C5BB0();
  if (v10)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC7C748);
    uint64_t result = sub_20A8C5BB0();
    if (v9)
    {
      __swift_project_boxed_opaque_existential_1(v8, v9);
      sub_20A70CD94();
      uint64_t v6 = sub_20A8C7C20();
      swift_allocObject();
      uint64_t v7 = sub_20A8C7C10();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
      a2[3] = v6;
      uint64_t result = sub_20A63A3F0((unint64_t *)&unk_26AC69BE8, MEMORY[0x263F5A158]);
      a2[4] = result;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A6373BC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C7B40();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A8C7B00();
    swift_allocObject();
    uint64_t v4 = sub_20A8C7AF0();
    uint64_t result = sub_20A63A3F0(&qword_26AC69BB0, MEMORY[0x263F5A0A0]);
    *a2 = v4;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A637480@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4D42C0(0, &qword_26AC7FAC0);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4D42C0(0, (unint64_t *)&qword_26AC7FB20);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC69C10);
  uint64_t result = sub_20A8C5BB0();
  if (!v10)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC69C20);
  uint64_t result = sub_20A8C5BB0();
  if (!v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC69BD8);
  uint64_t result = sub_20A8C5BB0();
  if (!v8)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC69BE0);
  uint64_t result = sub_20A8C5BB0();
  if (!v7)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F9F0);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v5 = sub_20A8C7B20();
    uint64_t v6 = sub_20A8C7B10();
    a2[3] = v5;
    uint64_t result = sub_20A63A3F0(&qword_26AC69BB8, MEMORY[0x263F5A0B0]);
    a2[4] = result;
    *a2 = v6;
    return result;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_20A6377B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20A8CE700();
  uint64_t v5[2] = a1;
  a2[3] = type metadata accessor for StocksIntentHandler();
  a2[4] = sub_20A63A3F0(&qword_26763CBA0, (void (*)(uint64_t))type metadata accessor for StocksIntentHandler);
  uint64_t result = sub_20A637B58((uint64_t)sub_20A63A30C, (uint64_t)v5, (uint64_t)"StocksUI/ManagerAssembly.swift", 30);
  *a2 = result;
  return result;
}

uint64_t sub_20A637874@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_20A8C7770();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6C4F8);
  uint64_t result = sub_20A8C5BB0();
  if (!v21)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v14 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v9 = v18;
  if (!v18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E50);
  uint64_t result = sub_20A8C5BB0();
  if (!v17)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F7A6F0], v4);
  uint64_t v11 = sub_20A8C4890();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A491334();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v12 = result;
    sub_20A4342F4((uint64_t)a1, (uint64_t)v15);
    type metadata accessor for StocksIntentHandler();
    uint64_t v13 = (void *)swift_allocObject();
    sub_20A42BEBC(&v20, (uint64_t)(v13 + 2));
    v13[7] = v9;
    v13[8] = v10;
    sub_20A42BEBC(&v16, (uint64_t)(v13 + 9));
    v13[14] = v11;
    v13[15] = v12;
    uint64_t result = sub_20A42BEBC(v15, (uint64_t)(v13 + 16));
    void *v14 = v13;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20A637B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_20A8CE6F0();
  swift_release();
  swift_task_getMainExecutor();
  if (swift_task_isCurrentExecutor())
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a1;
    *(void *)(v8 + 24) = a2;
    sub_20A63A338(v11);
    if (v4)
    {
      swift_release();
      return a4;
    }
    a4 = v11[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return a4;
    }
    __break(1u);
  }
  v11[0] = 0;
  v11[1] = 0xE000000000000000;
  sub_20A8CF3C0();
  sub_20A8CE3D0();
  sub_20A8CF920();
  sub_20A8CE3D0();
  swift_bridgeObjectRelease();
  sub_20A8CE3D0();
  uint64_t result = sub_20A8CF520();
  __break(1u);
  return result;
}

uint64_t sub_20A637CE8(void *a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for AppConfigurationRefreshManager();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    __break(1u);
    goto LABEL_10;
  }
  sub_20A63A3F0(&qword_26AC799F8, (void (*)(uint64_t))type metadata accessor for AppConfigurationRefreshManager);
  sub_20A8C62B0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A4301D4(0, &qword_26AC69BE0);
  uint64_t result = sub_20A8C5BB0();
  if (!v4) {
    goto LABEL_8;
  }
  sub_20A8C62B0();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A4301D4(0, &qword_26AC7B530);
  sub_20A8C5BB0();
  sub_20A8C62B0();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StockMetadataRefreshManager();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_20A63A3F0(&qword_26AC77E60, (void (*)(uint64_t))type metadata accessor for StockMetadataRefreshManager);
  sub_20A8C62B0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for SceneStateManagerBridge();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A63A3F0((unint64_t *)&unk_26AC74D78, (void (*)(uint64_t))type metadata accessor for SceneStateManagerBridge);
    sub_20A8C62B0();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20A638000(void *a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A4301D4(0, &qword_26AC6A820);
  uint64_t result = sub_20A8C5BB0();
  if (v4)
  {
    sub_20A8C6320();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A6380C8(void *a1, void *a2)
{
  uint64_t v4 = sub_20A8CBF00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A4301D4(0, &qword_26AC68E40);
  uint64_t result = sub_20A8C5BB0();
  if (v24)
  {
    sub_20A42BEBC(&v23, (uint64_t)v25);
    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    uint64_t v9 = sub_20A8C34F0();
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      uint64_t v21 = v5;
      uint64_t v22 = v4;
      swift_bridgeObjectRetain();
      uint64_t v11 = (uint64_t *)(v9 + 40);
      uint64_t v12 = (void *)MEMORY[0x263F8EE78];
      do
      {
        uint64_t v14 = *v11;
        if (*v11)
        {
          uint64_t v15 = *(v11 - 1);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v12 = sub_20A46DEBC(0, v12[2] + 1, 1, v12);
          }
          unint64_t v17 = v12[2];
          unint64_t v16 = v12[3];
          if (v17 >= v16 >> 1) {
            uint64_t v12 = sub_20A46DEBC((void *)(v16 > 1), v17 + 1, 1, v12);
          }
          v12[2] = v17 + 1;
          uint64_t v13 = &v12[2 * v17];
          void v13[4] = v15;
          void v13[5] = v14;
        }
        v11 += 2;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease();
      uint64_t v5 = v21;
      uint64_t v4 = v22;
    }
    else
    {
      uint64_t v12 = (void *)MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRelease();
    if (!v12[2])
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v12 = sub_20A46DEBC(0, 1, 1, v12);
      }
      unint64_t v19 = v12[2];
      unint64_t v18 = v12[3];
      if (v19 >= v18 >> 1) {
        uint64_t v12 = sub_20A46DEBC((void *)(v18 > 1), v19 + 1, 1, v12);
      }
      v12[2] = v19 + 1;
      long long v20 = &v12[2 * v19];
      v20[4] = 28261;
      uint64_t v20[5] = 0xE200000000000000;
    }
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A8CBEF0();
    sub_20A63A3F0(&qword_26AC6AE30, MEMORY[0x263F58768]);
    sub_20A8CC060();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A6383E0@<X0>(uint64_t *a1@<X8>)
{
  return sub_20A638470((uint64_t (*)(void))type metadata accessor for LaunchPresentationConfigurationProvider, &qword_26AC7DD90, (void (*)(uint64_t))type metadata accessor for LaunchPresentationConfigurationProvider, a1);
}

uint64_t sub_20A638428@<X0>(uint64_t *a1@<X8>)
{
  return sub_20A638470((uint64_t (*)(void))type metadata accessor for PresentationOperationManagerDataStore, &qword_26AC7D658, (void (*)(uint64_t))type metadata accessor for PresentationOperationManagerDataStore, a1);
}

uint64_t sub_20A638470@<X0>(uint64_t (*a1)(void)@<X1>, unint64_t *a2@<X2>, void (*a3)(uint64_t)@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v7 = a1(0);
  uint64_t v8 = swift_allocObject();
  a4[3] = v7;
  uint64_t result = sub_20A63A3F0(a2, a3);
  a4[4] = result;
  *a4 = v8;
  return result;
}

uint64_t sub_20A6384E8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC68DC0);
  uint64_t result = sub_20A8C5BB0();
  if (!v13)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A42CFF0(0, &qword_26AC7F890);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68F48);
  uint64_t result = sub_20A8C5BB0();
  if (v11)
  {
    uint64_t v6 = type metadata accessor for AppLaunchUpsellDataStore();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 56) = 0;
    *(unsigned char *)(v7 + 64) = 1;
    *(void *)(v7 + 72) = 0;
    *(void *)(v7 + 80) = 0;
    uint64_t v8 = v7 + OBJC_IVAR____TtC8StocksUI24AppLaunchUpsellDataStore_fetchedAppLaunchUpsellLastSeenDate;
    uint64_t v9 = sub_20A8C2800();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
    sub_20A42BEBC(&v12, v7 + 16);
    *(void *)(v7 + OBJC_IVAR____TtC8StocksUI24AppLaunchUpsellDataStore_fcUserInfo) = v5;
    sub_20A42BEBC(&v10, v7 + OBJC_IVAR____TtC8StocksUI24AppLaunchUpsellDataStore_privateDataPollingService);
    a2[3] = v6;
    uint64_t result = sub_20A63A3F0(&qword_26AC756F0, (void (*)(uint64_t))type metadata accessor for AppLaunchUpsellDataStore);
    a2[4] = result;
    *a2 = v7;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A6386F4(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E90);
  uint64_t result = sub_20A8C5BB0();
  if (!v16)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v4 = type metadata accessor for ComputeAdsEnabledStartupTask();
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = v5 + OBJC_IVAR____TtC8StocksUI28ComputeAdsEnabledStartupTask_group;
  if (qword_26AC696D8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_20A8C5F10();
  uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)qword_26AC696C0);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  v9(v6, v8, v7);
  sub_20A42BEBC(&v15, v5 + OBJC_IVAR____TtC8StocksUI28ComputeAdsEnabledStartupTask_featureAvailability);
  uint64_t v16 = v4;
  uint64_t v17 = sub_20A63A3F0(&qword_26AC78428, (void (*)(uint64_t))type metadata accessor for ComputeAdsEnabledStartupTask);
  *(void *)&long long v15 = v5;
  sub_20A8C61D0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v15);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A4301D4(0, &qword_26AC67650);
  uint64_t result = sub_20A8C5BB0();
  if (!v16) {
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A4D42C0(0, &qword_26AC6A658);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v10 = result;
  uint64_t RegistrationStartupTask = type metadata accessor for BackgroundFetchRegistrationStartupTask();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = OBJC_IVAR____TtC8StocksUI38BackgroundFetchRegistrationStartupTask_group;
  if (qword_26AC69700 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v7, (uint64_t)qword_26AC696E0);
  v9(v12 + v13, v14, v7);
  sub_20A42BEBC(&v15, v12 + OBJC_IVAR____TtC8StocksUI38BackgroundFetchRegistrationStartupTask_appConfigurationManager);
  *(void *)(v12 + OBJC_IVAR____TtC8StocksUI38BackgroundFetchRegistrationStartupTask_backgroundFetchScheduler) = v10;
  uint64_t v16 = RegistrationStartupTask;
  uint64_t v17 = sub_20A63A3F0(&qword_26AC7DA00, (void (*)(uint64_t))type metadata accessor for BackgroundFetchRegistrationStartupTask);
  *(void *)&long long v15 = v12;
  sub_20A8C61D0();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v15);
}

uint64_t sub_20A638A28(void *a1)
{
  uint64_t v2 = sub_20A8C6200();
  MEMORY[0x270FA5388](v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC68E60);
  uint64_t result = sub_20A8C5BB0();
  if (!v10)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68EA0);
  uint64_t result = sub_20A8C5BB0();
  if (!v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC67650);
  uint64_t result = sub_20A8C5BB0();
  if (v6)
  {
    type metadata accessor for StockMetadataRefreshManager();
    uint64_t v4 = swift_allocObject();
    sub_20A63A3F0(&qword_26AC69798, MEMORY[0x263F7CF38]);
    sub_20A63A280();
    sub_20A63A3F0((unint64_t *)&qword_26AC7F748, (void (*)(uint64_t))sub_20A63A280);
    sub_20A8CF290();
    sub_20A63A37C(0, &qword_26AC69620, (uint64_t (*)(uint64_t))sub_20A63A2D8, MEMORY[0x263F7CE08]);
    swift_allocObject();
    *(void *)(v4 + 136) = sub_20A8C5C90();
    sub_20A42BEBC(&v9, v4 + 16);
    sub_20A42BEBC(&v7, v4 + 56);
    sub_20A42BEBC(&v5, v4 + 96);
    return v4;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A638CD4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC6C4E8);
  uint64_t result = sub_20A8C5BB0();
  if (v4)
  {
    type metadata accessor for StocksV2UserActivitySerializer();
    uint64_t v2 = swift_allocObject();
    sub_20A42BEBC(&v3, v2 + 16);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for ManagerAssembly()
{
  return self;
}

uint64_t sub_20A638D9C(uint64_t a1)
{
  uint64_t v49 = sub_20A8C5C10();
  uint64_t v2 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  unint64_t v44 = (uint64_t *)((char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_20A8C6410();
  uint64_t v46 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  long long v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C5CC0();
  sub_20A8C62E0();
  sub_20A8C6290();
  swift_release();
  unsigned int v53 = *MEMORY[0x263F7D010];
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  uint64_t v48 = v5 + 104;
  uint64_t v42 = v8;
  ((void (*)(char *))v8)(v7);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  unint64_t v43 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v47 = v5 + 8;
  v43(v7, v4);
  sub_20A8C5CE0();
  uint64_t v52 = v56;
  __swift_project_boxed_opaque_existential_1(v54, v55);
  unsigned int v51 = *MEMORY[0x263F7CDE0];
  uint64_t v45 = *(void (**)(uint64_t *))(v2 + 104);
  long long v9 = (char *)v44;
  uint64_t v10 = v49;
  v45(v44);
  uint64_t v50 = v2 + 104;
  sub_20A8C62F0();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v9, v10);
  uint64_t v52 = (void (*)(uint64_t *, uint64_t))v11;
  uint64_t v40 = v2 + 8;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  sub_20A8C5CE0();
  uint64_t v39 = v56;
  __swift_project_boxed_opaque_existential_1(v54, v55);
  ((void (*)(char *, void, uint64_t))v45)(v9, v51, v10);
  sub_20A8C62F0();
  v11(v9, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  uint64_t v12 = a1;
  sub_20A8C5CC0();
  type metadata accessor for AppConfigurationRefreshManager();
  sub_20A8C6290();
  swift_release();
  uint64_t v13 = v53;
  uint64_t v14 = v46;
  long long v15 = v42;
  v42(v7, v53, v46);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  uint64_t v16 = v43;
  v43(v7, v14);
  sub_20A8C5CC0();
  sub_20A63A224();
  sub_20A8C6290();
  swift_release();
  v15(v7, v13, v14);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  uint64_t v17 = v14;
  v16(v7, v14);
  uint64_t v18 = v12;
  sub_20A8C5CC0();
  sub_20A4699B4();
  sub_20A8C6290();
  swift_release();
  LODWORD(v39) = *MEMORY[0x263F7D000];
  uint64_t v19 = v39;
  v15(v7, v39, v14);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v16(v7, v14);
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC6A828);
  sub_20A8C62A0();
  swift_release();
  v15(v7, v19, v14);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v16(v7, v14);
  sub_20A8C5CC0();
  type metadata accessor for IdentificationResetManager();
  sub_20A8C6290();
  swift_release();
  uint64_t v20 = v53;
  v15(v7, v53, v17);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v16(v7, v17);
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7B530);
  sub_20A8C62A0();
  swift_release();
  v15(v7, v20, v17);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v16(v7, v17);
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC79D48);
  sub_20A8C62A0();
  swift_release();
  v15(v7, v20, v17);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v16(v7, v17);
  sub_20A8C5CC0();
  sub_20A4301D4(0, (unint64_t *)&unk_26AC73880);
  sub_20A8C62A0();
  swift_release();
  v15(v7, v20, v17);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v16(v7, v17);
  sub_20A8C5CC0();
  sub_20A4D42C0(0, &qword_26AC6A658);
  sub_20A8C6290();
  swift_release();
  v15(v7, v20, v17);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v16(v7, v17);
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC6A500);
  sub_20A8C62A0();
  swift_release();
  v15(v7, v20, v17);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v16(v7, v17);
  uint64_t v41 = v18;
  sub_20A8C5CC0();
  sub_20A4D42C0(0, &qword_26AC7F9C8);
  sub_20A8C6290();
  swift_release();
  uint64_t v21 = v39;
  v15(v7, v39, v17);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v16(v7, v17);
  sub_20A8C5CC0();
  type metadata accessor for ANFSceneActivityBridge();
  sub_20A8C6290();
  swift_release();
  sub_20A8C5990();
  swift_release();
  uint64_t v22 = v17;
  v15(v7, v21, v17);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v16(v7, v17);
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC78810);
  sub_20A8C62A0();
  swift_release();
  uint64_t v23 = v53;
  v15(v7, v53, v22);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v16(v7, v22);
  sub_20A8C5CC0();
  type metadata accessor for PremiumSealAnimationManager();
  sub_20A8C6290();
  swift_release();
  uint64_t v24 = v46;
  v15(v7, v23, v46);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v16(v7, v24);
  uint64_t v25 = v16;
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7C748);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC6A820);
  sub_20A8C62A0();
  swift_release();
  sub_20A8C5990();
  swift_release();
  uint64_t v26 = v53;
  v15(v7, v53, v24);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v25(v7, v24);
  sub_20A8C5CC0();
  sub_20A4301D4(0, (unint64_t *)&unk_26AC69C28);
  sub_20A8C62A0();
  swift_release();
  v15(v7, v26, v24);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v25(v7, v24);
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC69BE0);
  sub_20A8C62A0();
  swift_release();
  uint64_t v27 = v53;
  v15(v7, v53, v24);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v25(v7, v24);
  sub_20A8C5CC0();
  sub_20A4301D4(0, (unint64_t *)&unk_26AC69BF8);
  sub_20A8C62A0();
  swift_release();
  v15(v7, v27, v24);
  uint64_t v38 = v7;
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v25(v7, v24);
  sub_20A8C5CC0();
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68A80);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v54, v55);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC697A0);
  uint64_t v28 = v44;
  uint64_t v29 = (void (*)(uint64_t *, uint64_t, uint64_t))v45;
  uint64_t v30 = v51;
  uint64_t v31 = v49;
  ((void (*)(uint64_t *, void, uint64_t))v45)(v44, v51, v49);
  sub_20A8C6300();
  v52(v28, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  sub_20A8C5CE0();
  uint64_t v39 = v56;
  __swift_project_boxed_opaque_existential_1(v54, v55);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC697B0);
  uint64_t v32 = v49;
  v29(v28, v30, v49);
  sub_20A8C6300();
  uint64_t v33 = v52;
  v52(v28, v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v54, v55);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6AE70);
  *uint64_t v28 = sub_20A8CE3E0();
  v28[1] = v34;
  v29(v28, *MEMORY[0x263F7CDE8], v32);
  sub_20A8C6300();
  v33(v28, v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  sub_20A8C5CD0();
  sub_20A4301D4(0, &qword_26AC6AA30);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A4301D4(0, &qword_26AC6A9A8);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A4301D4(0, &qword_26AC69C20);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v54, v55);
  sub_20A8C61F0();
  v29(v28, v51, v32);
  sub_20A8C62F0();
  v52(v28, v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  sub_20A8C5CD0();
  type metadata accessor for StockMetadataRefreshManager();
  sub_20A8C6290();
  swift_release();
  uint64_t v35 = v38;
  uint64_t v36 = v46;
  v42(v38, v53, v46);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v43(v35, v36);
  sub_20A8C5CD0();
  type metadata accessor for StocksV2UserActivitySerializer();
  sub_20A8C6290();
  swift_release();
  return swift_release();
}

void sub_20A63A224()
{
  if (!qword_26AC695D0)
  {
    sub_20A52B104();
    unint64_t v0 = sub_20A8C5B00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC695D0);
    }
  }
}

void sub_20A63A280()
{
  if (!qword_26AC7F740)
  {
    sub_20A8C6200();
    unint64_t v0 = sub_20A8CE6C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7F740);
    }
  }
}

void sub_20A63A2D8(uint64_t a1)
{
}

uint64_t sub_20A63A30C@<X0>(void *a1@<X8>)
{
  return sub_20A637874(*(void **)(v1 + 16), a1);
}

uint64_t sub_20A63A328()
{
  return swift_deallocObject();
}

void *sub_20A63A338@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

void sub_20A63A37C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, MEMORY[0x263F8D310], v7, MEMORY[0x263F8D320]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A63A3F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A63A438(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    sub_20A63A4E0(a1, a2);
    if (v10)
    {
      sub_20A63B2F4(v9, v10, v8, a4);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_20A63A4E0(uint64_t a1, uint64_t a2)
{
  long long v118 = (id *)a1;
  uint64_t v119 = a2;
  sub_20A447F18();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v112 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v115 = (id *)((char *)&v112 - v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v112 - v8;
  sub_20A63B6E0();
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for StocksAudioTrack();
  MEMORY[0x270FA5388](v117);
  long long v15 = (id *)((char *)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (id *)((char *)&v112 - v17);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (id *)((char *)&v112 - v20);
  MEMORY[0x270FA5388](v22);
  uint64_t v113 = (id *)((char *)&v112 - v23);
  MEMORY[0x270FA5388](v24);
  long long v116 = (id *)((char *)&v112 - v25);
  MEMORY[0x270FA5388](v26);
  long long v112 = (id *)((char *)&v112 - v27);
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (id *)((char *)&v112 - v29);
  uint64_t v31 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_20A63B934((uint64_t)v118, (uint64_t)v13, (uint64_t (*)(void))sub_20A447F18);
  uint64_t v32 = v31;
  sub_20A63B934(v119, v31, (uint64_t (*)(void))sub_20A447F18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    long long v118 = v15;
    uint64_t v50 = (uint64_t)v21;
    uint64_t v51 = (uint64_t)v115;
    sub_20A63B934(v32, (uint64_t)v115, (uint64_t (*)(void))sub_20A447F18);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_20A63B8D4(v51, (uint64_t (*)(void))sub_20A63B744);
    }
    else
    {
      uint64_t v119 = v32;
      sub_20A63B934((uint64_t)v13, (uint64_t)v4, (uint64_t (*)(void))sub_20A447F18);
      sub_20A63B744();
      uint64_t v57 = *(void *)&v4[*(int *)(v56 + 48)];
      uint64_t v58 = *(int *)(v56 + 64);
      long long v116 = (id *)&v4[v58];
      long long v112 = (id *)v57;
      uint64_t v113 = (id *)(v51 + v58);
      sub_20A4480FC((uint64_t)v4, (uint64_t)v21);
      sub_20A4480FC(v51, (uint64_t)v18);
      id v59 = *v21;
      id v60 = objc_msgSend(*v21, sel_identifier);
      uint64_t v61 = sub_20A8CE280();
      uint64_t v63 = v62;

      id v64 = objc_msgSend(*v18, sel_identifier);
      uint64_t v65 = sub_20A8CE280();
      uint64_t v67 = v66;

      if (v61 == v65 && v63 == v67)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v85 = sub_20A8CF760();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v85 & 1) == 0)
        {
          if ((*((unsigned char *)v21 + *(int *)(v117 + 32)) & 2) != 0)
          {
            id v107 = objc_msgSend(v59, sel_identifier);
            sub_20A8CE280();

            sub_20A63B8D4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
            sub_20A63B8D4((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
            uint64_t v108 = sub_20A8C4E20();
            uint64_t v109 = *(void (**)(id *, uint64_t))(*(void *)(v108 - 8) + 8);
            v109(v113, v108);
            v109(v116, v108);
            sub_20A63B8D4(v119, (uint64_t (*)(void))sub_20A447F18);
            sub_20A63B8D4((uint64_t)v13, (uint64_t (*)(void))sub_20A447F18);
            return (uint64_t)v112;
          }
          char v93 = v21;
          uint64_t v94 = v118;
          sub_20A63B934(v50, (uint64_t)v118, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
          uint64_t v95 = sub_20A8C7DD0();
          os_log_type_t v96 = sub_20A8CEA00();
          if (os_log_type_enabled(v95, v96))
          {
            uint64_t v97 = (uint8_t *)swift_slowAlloc();
            uint64_t v98 = swift_slowAlloc();
            uint64_t v117 = (uint64_t)v93;
            uint64_t v99 = v98;
            uint64_t v121 = v98;
            *(_DWORD *)uint64_t v97 = 136446210;
            long long v114 = v97 + 4;
            id v100 = objc_msgSend(*v94, sel_identifier);
            uint64_t v115 = v18;
            id v101 = v100;
            uint64_t v102 = sub_20A8CE280();
            uint64_t v103 = v13;
            unint64_t v105 = v104;

            uint64_t v120 = sub_20A687610(v102, v105, &v121);
            sub_20A8CF1C0();
            uint64_t v13 = v103;
            swift_bridgeObjectRelease();
            sub_20A63B8D4((uint64_t)v94, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
            _os_log_impl(&dword_20A414000, v95, v96, "AudioListeningProgressRecorder: not saving listening progress for %{public}s because it's disabled", v97, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x210528850](v99, -1, -1);
            MEMORY[0x210528850](v97, -1, -1);

            sub_20A63B8D4((uint64_t)v115, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
            uint64_t v106 = v117;
          }
          else
          {

            sub_20A63B8D4((uint64_t)v94, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
            sub_20A63B8D4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
            uint64_t v106 = (uint64_t)v93;
          }
          sub_20A63B8D4(v106, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
          uint64_t v110 = sub_20A8C4E20();
          uint64_t v111 = *(void (**)(id *, uint64_t))(*(void *)(v110 - 8) + 8);
          v111(v113, v110);
          v111(v116, v110);
          uint64_t v82 = v119;
          goto LABEL_22;
        }
      }
      sub_20A63B8D4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
      sub_20A63B8D4((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
      uint64_t v86 = sub_20A8C4E20();
      uint64_t v87 = *(void (**)(id *, uint64_t))(*(void *)(v86 - 8) + 8);
      v87(v113, v86);
      v87(v116, v86);
      uint64_t v32 = v119;
    }
    goto LABEL_25;
  }
  if (EnumCaseMultiPayload != 1)
  {
    int v52 = swift_getEnumCaseMultiPayload();
    if (!v52)
    {
      sub_20A63B744();
      goto LABEL_16;
    }
    if (v52 == 1)
    {
      sub_20A63B858();
LABEL_16:
      uint64_t v35 = *(void *)&v13[*(int *)(v53 + 48)];
      uint64_t v68 = &v13[*(int *)(v53 + 64)];
      sub_20A4480FC((uint64_t)v13, (uint64_t)v30);
      uint64_t v69 = sub_20A8C4E20();
      (*(void (**)(char *, uint64_t))(*(void *)(v69 - 8) + 8))(v68, v69);
      uint64_t v70 = v117;
      sub_20A63B8D4(v32, (uint64_t (*)(void))sub_20A447F18);
      if ((*((unsigned char *)v30 + *(int *)(v70 + 32)) & 2) == 0)
      {
        uint64_t v71 = v112;
        sub_20A4480FC((uint64_t)v30, (uint64_t)v112);
        uint64_t v72 = sub_20A8C7DD0();
        os_log_type_t v73 = sub_20A8CEA00();
        if (os_log_type_enabled(v72, v73))
        {
          uint64_t v74 = (uint8_t *)swift_slowAlloc();
          uint64_t v75 = swift_slowAlloc();
          *(_DWORD *)uint64_t v74 = 136446210;
          uint64_t v121 = v75;
          id v76 = objc_msgSend(*v71, sel_identifier);
          uint64_t v77 = sub_20A8CE280();
          unint64_t v79 = v78;

          uint64_t v120 = sub_20A687610(v77, v79, &v121);
          sub_20A8CF1C0();
          swift_bridgeObjectRelease();
          sub_20A63B8D4((uint64_t)v71, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
          _os_log_impl(&dword_20A414000, v72, v73, "AudioListeningProgressRecorder: not saving listening progress for %{public}s because it's disabled", v74, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x210528850](v75, -1, -1);
          MEMORY[0x210528850](v74, -1, -1);

          return 0;
        }

        unsigned int v84 = (uint64_t (*)(void))type metadata accessor for StocksAudioTrack;
        uint64_t v83 = (uint64_t)v71;
LABEL_31:
        sub_20A63B8D4(v83, v84);
        return 0;
      }
      id v80 = objc_msgSend(*v30, sel_identifier);
      sub_20A8CE280();

      sub_20A63B8D4((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
      return v35;
    }
LABEL_25:
    int v88 = swift_getEnumCaseMultiPayload();
    if (v88)
    {
      if (v88 != 1)
      {
LABEL_30:
        unsigned int v84 = (uint64_t (*)(void))sub_20A447F18;
        uint64_t v83 = v32;
        goto LABEL_31;
      }
      sub_20A63B858();
    }
    else
    {
      sub_20A63B744();
    }
    long long v90 = &v13[*(int *)(v89 + 64)];
    uint64_t v91 = sub_20A8C4E20();
    (*(void (**)(char *, uint64_t))(*(void *)(v91 - 8) + 8))(v90, v91);
    sub_20A63B8D4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
    goto LABEL_30;
  }
  sub_20A63B934(v31, (uint64_t)v9, (uint64_t (*)(void))sub_20A447F18);
  sub_20A63B858();
  uint64_t v35 = *(void *)&v9[*(int *)(v34 + 48)];
  uint64_t v36 = (uint64_t)&v9[*(int *)(v34 + 64)];
  unint64_t v37 = v116;
  sub_20A4480FC((uint64_t)v9, (uint64_t)v116);
  if ((*((unsigned char *)v37 + *(int *)(v117 + 32)) & 2) == 0)
  {
    uint64_t v38 = v113;
    sub_20A63B934((uint64_t)v37, (uint64_t)v113, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
    uint64_t v39 = sub_20A8C7DD0();
    os_log_type_t v40 = sub_20A8CEA00();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v119 = v32;
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      long long v118 = (id *)v36;
      *(_DWORD *)uint64_t v41 = 136446210;
      uint64_t v121 = v42;
      uint64_t v117 = (uint64_t)(v41 + 4);
      id v43 = objc_msgSend(*v38, sel_identifier);
      unint64_t v44 = v13;
      id v45 = v43;
      uint64_t v46 = sub_20A8CE280();
      unint64_t v48 = v47;

      uint64_t v13 = v44;
      uint64_t v120 = sub_20A687610(v46, v48, &v121);
      uint64_t v36 = (uint64_t)v118;
      sub_20A8CF1C0();
      swift_bridgeObjectRelease();
      sub_20A63B8D4((uint64_t)v113, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
      _os_log_impl(&dword_20A414000, v39, v40, "AudioListeningProgressRecorder: not saving listening progress for %{public}s because it's disabled", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x210528850](v42, -1, -1);
      MEMORY[0x210528850](v41, -1, -1);

      uint64_t v49 = (uint64_t)v37;
      uint64_t v32 = v119;
    }
    else
    {
      sub_20A63B8D4((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);

      uint64_t v49 = (uint64_t)v37;
    }
    sub_20A63B8D4(v49, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
    uint64_t v81 = sub_20A8C4E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v36, v81);
    uint64_t v82 = v32;
LABEL_22:
    sub_20A63B8D4(v82, (uint64_t (*)(void))sub_20A447F18);
    uint64_t v83 = (uint64_t)v13;
    unsigned int v84 = (uint64_t (*)(void))sub_20A447F18;
    goto LABEL_31;
  }
  id v54 = objc_msgSend(*v37, sel_identifier);
  sub_20A8CE280();

  sub_20A63B8D4((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  uint64_t v55 = sub_20A8C4E20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v36, v55);
  sub_20A63B8D4(v32, (uint64_t (*)(void))sub_20A447F18);
  sub_20A63B8D4((uint64_t)v13, (uint64_t (*)(void))sub_20A447F18);
  return v35;
}

uint64_t sub_20A63B2F4(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_20A8C7DD0();
  os_log_type_t v8 = sub_20A8CEA00();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v14 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    sub_20A63B68C();
    uint64_t v11 = sub_20A8CE160();
    sub_20A687610(v11, v12, &v14);
    sub_20A8CF1C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_20A687610(a1, a2, &v14);
    sub_20A8CF1C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_20A414000, v7, v8, "AudioListeningProgressRecorder: saving listening progress %s for %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x210528850](v10, -1, -1);
    MEMORY[0x210528850](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  __swift_project_boxed_opaque_existential_1(a4, a4[3]);
  return sub_20A8C5840();
}

uint64_t sub_20A63B4F0()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI30AudioListeningProgressRecorder_logger;
  uint64_t v2 = sub_20A8C7DF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_20A63B598()
{
  return type metadata accessor for AudioListeningProgressRecorder();
}

uint64_t type metadata accessor for AudioListeningProgressRecorder()
{
  uint64_t result = qword_26AC79B58;
  if (!qword_26AC79B58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A63B5EC()
{
  uint64_t result = sub_20A8C7DF0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_20A63B68C()
{
  unint64_t result = qword_26763CBB0;
  if (!qword_26763CBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CBB0);
  }
  return result;
}

void sub_20A63B6E0()
{
  if (!qword_26763E150)
  {
    sub_20A447F18();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763E150);
    }
  }
}

void sub_20A63B744()
{
  if (!qword_26763DC80)
  {
    MEMORY[0x270FA5388](0);
    type metadata accessor for StocksAudioTrack();
    sub_20A8C4E20();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_26763DC80);
    }
  }
}

void sub_20A63B858()
{
  if (!qword_26763DC90)
  {
    type metadata accessor for StocksAudioTrack();
    sub_20A8C4E20();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26763DC90);
    }
  }
}

uint64_t sub_20A63B8D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A63B934(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_20A63B99C()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NetworkReachability()), sel_init);
  qword_26AC70FF8 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for NetworkReachability()
{
  return self;
}

StocksUI::ToolbarBehavior_optional __swiftcall ToolbarBehavior.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_20A8CF5B0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t ToolbarBehavior.rawValue.getter()
{
  if (*v0) {
    return 0x697370616C6C6F63;
  }
  else {
    return 0x6465786966;
  }
}

uint64_t sub_20A63BB34(char *a1, char *a2)
{
  return sub_20A44FB28(*a1, *a2);
}

unint64_t sub_20A63BB44()
{
  unint64_t result = qword_26763CBB8;
  if (!qword_26763CBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CBB8);
  }
  return result;
}

uint64_t sub_20A63BB98()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A63BC1C()
{
  sub_20A8CE360();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A63BC8C()
{
  return sub_20A8CF8C0();
}

StocksUI::ToolbarBehavior_optional sub_20A63BD0C(Swift::String *a1)
{
  return ToolbarBehavior.init(rawValue:)(*a1);
}

void sub_20A63BD18(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6465786966;
  if (*v1) {
    uint64_t v2 = 0x697370616C6C6F63;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xEA0000000000676ELL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_20A63BD58(uint64_t a1)
{
  unint64_t v2 = sub_20A63BF60();
  uint64_t v3 = MEMORY[0x263F7D120];

  return MEMORY[0x270F7A9D8](a1, v2, v3);
}

uint64_t sub_20A63BDAC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_20A63BF60();
  uint64_t v5 = MEMORY[0x263F7D120];

  return MEMORY[0x270F7A9D0](a1, a2, v4, v5);
}

uint64_t sub_20A63BE08(uint64_t a1)
{
  unint64_t v2 = sub_20A63BF60();
  uint64_t v3 = MEMORY[0x263F7D120];

  return MEMORY[0x270F7A9C8](a1, v2, v3);
}

unsigned char *storeEnumTagSinglePayload for ToolbarBehavior(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A63BF28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolbarBehavior()
{
  return &type metadata for ToolbarBehavior;
}

unint64_t sub_20A63BF60()
{
  unint64_t result = qword_26763CBC0;
  if (!qword_26763CBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CBC0);
  }
  return result;
}

char *sub_20A63BFB4(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = OBJC_IVAR____TtC8StocksUI9QuoteView_priceLabel;
  id v12 = objc_allocWithZone(MEMORY[0x263F828E0]);
  uint64_t v13 = v4;
  *(void *)&v5[v11] = objc_msgSend(v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v14 = OBJC_IVAR____TtC8StocksUI9QuoteView_priceChangeLabel;
  *(void *)&v13[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v15 = OBJC_IVAR____TtC8StocksUI9QuoteView_timeRangeLabel;
  *(void *)&v13[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v20.receiver = v13;
  v20.super_class = ObjectType;
  uint64_t v16 = (char *)objc_msgSendSuper2(&v20, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v17 = *(void *)&v16[OBJC_IVAR____TtC8StocksUI9QuoteView_priceLabel];
  uint64_t v18 = v16;
  objc_msgSend(v18, sel_addSubview_, v17);
  objc_msgSend(v18, sel_addSubview_, *(void *)&v18[OBJC_IVAR____TtC8StocksUI9QuoteView_priceChangeLabel]);
  objc_msgSend(v18, sel_addSubview_, *(void *)&v18[OBJC_IVAR____TtC8StocksUI9QuoteView_timeRangeLabel]);

  return v18;
}

uint64_t type metadata accessor for QuoteView()
{
  return self;
}

void sub_20A63C1FC()
{
  uint64_t v1 = OBJC_IVAR____TtC8StocksUI9QuoteView_priceLabel;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = OBJC_IVAR____TtC8StocksUI9QuoteView_priceChangeLabel;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = OBJC_IVAR____TtC8StocksUI9QuoteView_timeRangeLabel;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_20A8CF520();
  __break(1u);
}

uint64_t sub_20A63C2F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_20A8CE280();
  uint64_t v5 = v4;
  if (v3 == sub_20A8CE280() && v5 == v6)
  {
    uint64_t v9 = 0;
LABEL_17:
    swift_bridgeObjectRelease_n();
    return v9;
  }
  char v8 = sub_20A8CF760();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = 0;
  if ((v8 & 1) == 0)
  {
    uint64_t v10 = v2 - 1;
    while (1)
    {
      if (v10 == v9) {
        return 0;
      }
      uint64_t v11 = sub_20A8CE280();
      uint64_t v13 = v12;
      if (v11 == sub_20A8CE280() && v13 == v14) {
        break;
      }
      char v16 = sub_20A8CF760();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v9;
      if (v16) {
        return v9;
      }
    }
    ++v9;
    goto LABEL_17;
  }
  return v9;
}

uint64_t sub_20A63C43C()
{
  sub_20A63EA4C(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v10 - v3;
  uint64_t v5 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
  sub_20A63EA4C(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  sub_20A63EB0C((unint64_t *)&unk_26AC6ACE0, (unint64_t *)&qword_26AC6ACF0, v5);
  sub_20A8CE870();
  if ((v12 & 1) == 0) {
    return v11;
  }
  sub_20A8CE840();
  sub_20A8CE8A0();
  if (v13 == v11) {
    return 0;
  }
  uint64_t v6 = (void (**)(char *))(v2 + 16);
  uint64_t v7 = (void (**)(char *, uint64_t))(v2 + 8);
  while (1)
  {
    uint64_t v8 = sub_20A8CE8C0();
    (*v6)(v4);
    ((void (*)(uint64_t *, void))v8)(&v11, 0);
    sub_20A63EB0C((unint64_t *)&unk_26AC69F20, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
    LOBYTE(v8) = sub_20A8CE210();
    (*v7)(v4, v1);
    if (v8) {
      break;
    }
    sub_20A8CE8B0();
    sub_20A8CE8A0();
    if (v13 == v11) {
      return 0;
    }
  }
  return v13;
}

uint64_t sub_20A63C6EC()
{
  sub_20A44D40C();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44E010();
  sub_20A63EA04((unint64_t *)&unk_26AC6ACB0, (void (*)(uint64_t))sub_20A44E010);
  sub_20A8CE870();
  if ((v9 & 1) == 0) {
    return v8;
  }
  sub_20A8CE840();
  sub_20A8CE8A0();
  if (v10 == v8) {
    return 0;
  }
  while (1)
  {
    uint64_t v5 = sub_20A8CE8C0();
    (*(void (**)(char *))(v2 + 16))(v4);
    ((void (*)(uint64_t *, void))v5)(&v8, 0);
    sub_20A63EA04(&qword_26AC69EF8, (void (*)(uint64_t))sub_20A44D40C);
    LOBYTE(v5) = sub_20A8CE210();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    if (v5) {
      break;
    }
    sub_20A8CE8B0();
    sub_20A8CE8A0();
    if (v10 == v8) {
      return 0;
    }
  }
  return v10;
}

uint64_t sub_20A63C960(uint64_t a1, uint64_t a2)
{
  return sub_20A63C98C(a1, a2, MEMORY[0x263F7AFD8], (void (*)(void))sub_20A63EB50);
}

uint64_t sub_20A63C98C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(void))
{
  uint64_t v4 = *(void *)(a2 + 16);
  if (!v4) {
    return 0;
  }
  uint64_t v7 = *(void *)(a3(0) - 8);
  uint64_t v8 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v9 = *(void *)(v7 + 72);
  a4();
  uint64_t v10 = 0;
  while ((sub_20A8CE210() & 1) == 0)
  {
    ++v10;
    v8 += v9;
    if (v4 == v10) {
      return 0;
    }
  }
  return v10;
}

uint64_t sub_20A63CA8C()
{
  sub_20A44DBE8();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44E108();
  sub_20A63EA04((unint64_t *)&unk_26AC6AD20, (void (*)(uint64_t))sub_20A44E108);
  sub_20A8CE870();
  if ((v9 & 1) == 0) {
    return v8;
  }
  sub_20A8CE840();
  sub_20A8CE8A0();
  if (v10 == v8) {
    return 0;
  }
  while (1)
  {
    uint64_t v5 = sub_20A8CE8C0();
    (*(void (**)(char *))(v2 + 16))(v4);
    ((void (*)(uint64_t *, void))v5)(&v8, 0);
    sub_20A63EA04(&qword_26AC69E98, (void (*)(uint64_t))sub_20A44DBE8);
    LOBYTE(v5) = sub_20A8CE210();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    if (v5) {
      break;
    }
    sub_20A8CE8B0();
    sub_20A8CE8A0();
    if (v10 == v8) {
      return 0;
    }
  }
  return v10;
}

uint64_t sub_20A63CD00()
{
  sub_20A44D7C8(0);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44DBE8();
  sub_20A63EA04((unint64_t *)&unk_26AC69EA0, (void (*)(uint64_t))sub_20A44DBE8);
  sub_20A8CE870();
  if ((v9 & 1) == 0) {
    return v8;
  }
  sub_20A8CE840();
  sub_20A8CE8A0();
  if (v10 == v8) {
    return 0;
  }
  while (1)
  {
    uint64_t v5 = sub_20A8CE8C0();
    (*(void (**)(char *))(v2 + 16))(v4);
    ((void (*)(uint64_t *, void))v5)(&v8, 0);
    sub_20A63EA04((unint64_t *)&unk_26AC69DC0, sub_20A44D7C8);
    LOBYTE(v5) = sub_20A8CE210();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    if (v5) {
      break;
    }
    sub_20A8CE8B0();
    sub_20A8CE8A0();
    if (v10 == v8) {
      return 0;
    }
  }
  return v10;
}

uint64_t sub_20A63CF74()
{
  sub_20A63EB84();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A63EC70();
  sub_20A63EA04(&qword_26763CC08, (void (*)(uint64_t))sub_20A63EC70);
  sub_20A8CE870();
  if ((v9 & 1) == 0) {
    return v8;
  }
  sub_20A8CE840();
  sub_20A8CE8A0();
  if (v10 == v8) {
    return 0;
  }
  while (1)
  {
    uint64_t v5 = sub_20A8CE8C0();
    (*(void (**)(char *))(v2 + 16))(v4);
    ((void (*)(uint64_t *, void))v5)(&v8, 0);
    sub_20A63EA04(&qword_26763CC10, (void (*)(uint64_t))sub_20A63EB84);
    LOBYTE(v5) = sub_20A8CE210();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    if (v5) {
      break;
    }
    sub_20A8CE8B0();
    sub_20A8CE8A0();
    if (v10 == v8) {
      return 0;
    }
  }
  return v10;
}

uint64_t sub_20A63D264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x2105289B0](v5);
  if (result)
  {
    uint64_t v7 = (char *)result;
    uint64_t v31 = a2;
    uint64_t v8 = *(void (**)(uint64_t))(result + OBJC_IVAR____TtC8StocksUI19DateRangePickerView_onChange);
    if (v8)
    {
      swift_retain();
      v8(a1);
      sub_20A459CA4((uint64_t)v8);
    }
    uint64_t v32 = a1;
    uint64_t v9 = (uint64_t)&v7[OBJC_IVAR____TtC8StocksUI19DateRangePickerView_styler];
    swift_beginAccess();
    sub_20A4342F4(v9, (uint64_t)v34);
    uint64_t v11 = v35;
    uint64_t v10 = v36;
    __swift_project_boxed_opaque_existential_1(v34, v35);
    id v12 = objc_msgSend(v7, sel_traitCollection);
    uint64_t v13 = *(void *)(v10 + 8);
    uint64_t v15 = *(void (**)(id, uint64_t, uint64_t))(v13 + 8);
    uint64_t v14 = (void *)(v13 + 8);
    v37[3] = v11;
    v37[4] = v10;
    uint64_t v33 = v10;
    __swift_allocate_boxed_opaque_existential_1(v37);
    unint64_t v16 = v11;
    v15(v12, v11, v13);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    uint64_t v30 = OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl;
    uint64_t v17 = *(void **)&v7[OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl];
    uint64_t v18 = sub_20A8C8B10();
    uint64_t v19 = v18;
    if ((unint64_t)v18 >> 62)
    {
      if (v18 < 0) {
        uint64_t v17 = (void *)v18;
      }
      else {
        uint64_t v17 = (void *)(v18 & 0xFFFFFFFFFFFFFF8);
      }
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_20A8CF540();
      if (!v20) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v20 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v20) {
        goto LABEL_16;
      }
    }
    if (v20 < 1)
    {
      __break(1u);
      goto LABEL_26;
    }
    uint64_t v21 = 0;
    uint64_t v22 = *(void (**)(id, unint64_t, uint64_t))(v33 + 32);
    do
    {
      if ((v19 & 0xC000000000000001) != 0) {
        id v23 = (id)MEMORY[0x210527700](v21, v19);
      }
      else {
        id v23 = *(id *)(v19 + 8 * v21 + 32);
      }
      uint64_t v24 = v23;
      ++v21;
      v22(v23, v16, v33);
    }
    while (v20 != v21);
LABEL_16:
    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, unint64_t))(v33 + 40))(v31, v16);
    uint64_t v14 = v7;
    uint64_t v17 = *(void **)&v7[v30];
    uint64_t v25 = sub_20A8C8B30();
    unint64_t v16 = sub_20A63C98C(v32, v25, MEMORY[0x263F7A878], (void (*)(void))sub_20A63E9D0);
    char v27 = v26;
    swift_bridgeObjectRelease();
    if (v27)
    {

      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    }
    uint64_t result = sub_20A8C8B10();
    id v12 = (id)result;
    if ((result & 0xC000000000000001) == 0)
    {
      if ((v16 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v16 < *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v28 = *(id *)(result + 8 * v16 + 32);
LABEL_21:
        uint64_t v29 = v28;
        swift_bridgeObjectRelease();
        objc_msgSend(v29, sel_frame);
        objc_msgSend(v17, sel_convertRect_toCoordinateSpace_, v14);
        sub_20A8CED80();
        sub_20A63E848(1);

        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      }
      __break(1u);
      return result;
    }
LABEL_26:
    id v28 = (id)MEMORY[0x210527700](v16, v12);
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_20A63D5B4()
{
  uint64_t v1 = v0;
  sub_20A63ED5C();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C2BC0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (objc_class *)type metadata accessor for DateRangePickerView();
  v28.receiver = v0;
  v28.super_class = v9;
  objc_msgSendSuper2(&v28, sel_layoutSubviews);
  objc_msgSend(v0, sel_contentSize);
  double v11 = v10;
  double v13 = v12;
  uint64_t v14 = *(void **)&v0[OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl];
  uint64_t result = (uint64_t)objc_msgSend(v14, sel_frame);
  if (v11 != v17 || v13 != v16)
  {
    objc_msgSend(v1, sel_contentSize);
    double v20 = v19;
    objc_msgSend(v1, sel_contentSize);
    objc_msgSend(v14, sel_setFrame_, 0.0, 0.0, v20, v21);
    sub_20A8C8AE0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
      return sub_20A63EDB4((uint64_t)v4);
    }
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    uint64_t v22 = sub_20A8C8B30();
    unint64_t v23 = sub_20A63C98C((uint64_t)v8, v22, MEMORY[0x263F7A878], (void (*)(void))sub_20A63E9D0);
    char v25 = v24;
    swift_bridgeObjectRelease();
    if (v25) {
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    uint64_t result = sub_20A8C8B10();
    if ((result & 0xC000000000000001) == 0)
    {
      if ((v23 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v23 < *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v26 = *(id *)(result + 8 * v23 + 32);
LABEL_12:
        char v27 = v26;
        swift_bridgeObjectRelease();
        objc_msgSend(v27, sel_frame);
        objc_msgSend(v14, sel_convertRect_toCoordinateSpace_, v1);
        sub_20A8CED80();
        sub_20A63E848(0);

        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
      __break(1u);
      return result;
    }
    id v26 = (id)MEMORY[0x210527700](v23, result);
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_20A63D8E8(uint64_t a1)
{
  uint64_t v2 = v1;
  v22.receiver = v2;
  v22.super_class = (Class)type metadata accessor for DateRangePickerView();
  objc_msgSendSuper2(&v22, sel_traitCollectionDidChange_, a1);
  uint64_t v4 = (uint64_t)v2 + OBJC_IVAR____TtC8StocksUI19DateRangePickerView_styler;
  swift_beginAccess();
  sub_20A4342F4(v4, (uint64_t)v19);
  uint64_t v5 = v20;
  uint64_t v6 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  id v7 = objc_msgSend(v2, sel_traitCollection);
  uint64_t v8 = *(void *)(v6 + 8);
  uint64_t v9 = *(void (**)(id, uint64_t, uint64_t))(v8 + 8);
  v18[3] = v5;
  v18[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v18);
  v9(v7, v5, v8);

  double v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v18[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v15 + 16))(v14, boxed_opaque_existential_1, v5, v12);
  sub_20A63EE10((uint64_t)v14, (uint64_t)v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

id sub_20A63DB30()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DateRangePickerView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DateRangePickerView()
{
  return self;
}

uint64_t sub_20A63DCDC()
{
  sub_20A63ED5C();
  MEMORY[0x270FA5388](v0 - 8);
  objc_super v2 = (char *)v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C8AE0();
  uint64_t v3 = sub_20A8C2BC0();
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_20A63EDB4((uint64_t)v2);
    return 0;
  }
  else
  {
    uint64_t v6 = ChartRange.accessibilityLabel.getter();
    uint64_t v8 = v7;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
    v10[0] = v6;
    v10[1] = v8;
    sub_20A48C5C0();
    uint64_t v5 = sub_20A8CF200();
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_20A63DE3C()
{
  uint64_t v1 = v0;
  sub_20A63ED5C();
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (unint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v37 - v6;
  uint64_t v8 = sub_20A8C2BC0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v40 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v37 - v12;
  MEMORY[0x270FA5388](v14);
  double v16 = (char *)&v37 - v15;
  double v17 = *(void **)(v0 + OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl);
  sub_20A8C8AE0();
  uint64_t v18 = v9 + 48;
  double v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v19(v7, 1, v8) != 1)
  {
    uint64_t v38 = v13;
    uint64_t v39 = v1;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v16, v7, v8);
    uint64_t v20 = sub_20A8C8B30();
    uint64_t v21 = sub_20A63C98C((uint64_t)v16, v20, MEMORY[0x263F7A878], (void (*)(void))sub_20A63E9D0);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) != 0 || (uint64_t v24 = *(void *)(sub_20A8C8B30() + 16), swift_bridgeObjectRelease(), v21 >= v24 - 1))
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
      goto LABEL_15;
    }
    sub_20A8C8B30();
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_20A8C8B30();
    if (v21 < -1)
    {
      __break(1u);
    }
    else
    {
      unint64_t v4 = v25;
      uint64_t v24 = (uint64_t)v38;
      uint64_t v18 = v39;
      if ((unint64_t)(v21 + 1) < *(void *)(v25 + 16))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v38, v25+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * (v21 + 1), v8);
        swift_bridgeObjectRelease();
        sub_20A8C8B00();
        uint64_t v26 = sub_20A8C8B30();
        unint64_t v4 = sub_20A63C98C(v24, v26, MEMORY[0x263F7A878], (void (*)(void))sub_20A63E9D0);
        char v28 = v27;
        swift_bridgeObjectRelease();
        if (v28)
        {
LABEL_13:
          uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
          v32(v24, v8);
          return ((uint64_t (*)(char *, uint64_t))v32)(v16, v8);
        }
        uint64_t result = sub_20A8C8B10();
        double v19 = (unsigned int (*)(char *, uint64_t, uint64_t))result;
        if ((result & 0xC000000000000001) == 0)
        {
          if ((v4 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v4 < *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v30 = *(id *)(result + 8 * v4 + 32);
LABEL_12:
            uint64_t v31 = v30;
            swift_bridgeObjectRelease();
            objc_msgSend(v31, sel_frame);
            objc_msgSend(v17, sel_convertRect_toCoordinateSpace_, v18);
            sub_20A8CED80();
            sub_20A63E848(1);

            goto LABEL_13;
          }
          __break(1u);
          return result;
        }
LABEL_24:
        id v30 = (id)MEMORY[0x210527700](v4, v19);
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_24;
  }
  sub_20A63EDB4((uint64_t)v7);
LABEL_15:
  uint64_t v33 = sub_20A8C8B30();
  uint64_t v34 = *(void *)(v33 + 16);
  if (v34)
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v4, v33+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * (v34 - 1), v8);
    uint64_t v35 = 0;
  }
  else
  {
    uint64_t v35 = 1;
  }
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4, v35, 1, v8);
  swift_bridgeObjectRelease();
  if (v19((char *)v4, 1, v8) == 1) {
    return sub_20A63EDB4(v4);
  }
  uint64_t v36 = v40;
  (*(void (**)(char *, unint64_t, uint64_t))(v9 + 32))(v40, v4, v8);
  sub_20A8C8B00();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v36, v8);
}

uint64_t sub_20A63E34C()
{
  uint64_t v1 = v0;
  sub_20A63ED5C();
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (unint64_t)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v35 - v6;
  uint64_t v8 = sub_20A8C2BC0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v38 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v35 - v12;
  MEMORY[0x270FA5388](v14);
  double v16 = (char *)&v35 - v15;
  double v17 = *(void **)(v0 + OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl);
  sub_20A8C8AE0();
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v18(v7, 1, v8) != 1)
  {
    uint64_t v36 = v13;
    uint64_t v37 = v1;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v16, v7, v8);
    uint64_t v19 = sub_20A8C8B30();
    uint64_t v20 = sub_20A63C98C((uint64_t)v16, v19, MEMORY[0x263F7A878], (void (*)(void))sub_20A63E9D0);
    char v22 = v21;
    swift_bridgeObjectRelease();
    if ((v22 & 1) != 0 || (sub_20A8C8B30(), swift_bridgeObjectRelease(), v20 <= 0))
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
      goto LABEL_14;
    }
    sub_20A8C8B30();
    swift_bridgeObjectRelease();
    uint64_t v23 = v20 - 1;
    uint64_t v24 = sub_20A8C8B30();
    if ((unint64_t)(v20 - 1) >= *(void *)(v24 + 16))
    {
      __break(1u);
    }
    else
    {
      uint64_t v19 = (uint64_t)v36;
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v36, v24+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v23, v8);
      swift_bridgeObjectRelease();
      sub_20A8C8B00();
      uint64_t v25 = sub_20A8C8B30();
      unint64_t v4 = sub_20A63C98C(v19, v25, MEMORY[0x263F7A878], (void (*)(void))sub_20A63E9D0);
      char v27 = v26;
      swift_bridgeObjectRelease();
      uint64_t v23 = v37;
      if (v27)
      {
LABEL_12:
        uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
        v31(v19, v8);
        return ((uint64_t (*)(char *, uint64_t))v31)(v16, v8);
      }
      uint64_t result = sub_20A8C8B10();
      uint64_t v18 = (unsigned int (*)(char *, uint64_t, uint64_t))result;
      if ((result & 0xC000000000000001) == 0)
      {
        if ((v4 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v4 < *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v29 = *(id *)(result + 8 * v4 + 32);
LABEL_11:
          id v30 = v29;
          swift_bridgeObjectRelease();
          objc_msgSend(v30, sel_frame);
          objc_msgSend(v17, sel_convertRect_toCoordinateSpace_, v23);
          sub_20A8CED80();
          sub_20A63E848(1);

          goto LABEL_12;
        }
        __break(1u);
        return result;
      }
    }
    id v29 = (id)MEMORY[0x210527700](v4, v18);
    goto LABEL_11;
  }
  sub_20A63EDB4((uint64_t)v7);
LABEL_14:
  uint64_t v32 = sub_20A8C8B30();
  if (*(void *)(v32 + 16))
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v4, v32 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v8);
    uint64_t v33 = 0;
  }
  else
  {
    uint64_t v33 = 1;
  }
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4, v33, 1, v8);
  swift_bridgeObjectRelease();
  if (v18((char *)v4, 1, v8) == 1) {
    return sub_20A63EDB4(v4);
  }
  uint64_t v34 = v38;
  (*(void (**)(char *, unint64_t, uint64_t))(v9 + 32))(v38, v4, v8);
  sub_20A8C8B00();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v34, v8);
}

id sub_20A63E848(char a1)
{
  objc_msgSend(v1, sel_bounds);
  CGRectGetWidth(v12);
  objc_msgSend(v1, sel_bounds);
  CGRectGetHeight(v13);
  objc_msgSend(v1, sel_adjustedContentInset);
  objc_msgSend(v1, sel_contentSize);
  objc_msgSend(v1, sel_bounds);
  CGRectGetWidth(v14);
  objc_msgSend(v1, sel_contentSize);
  objc_msgSend(v1, sel_bounds);
  CGRectGetHeight(v15);
  sub_20A8C49F0();
  double v4 = v3;
  sub_20A8C49F0();
  double v6 = v5;
  id result = objc_msgSend(v1, sel_contentOffset);
  if (v4 != v9 || v6 != v8)
  {
    return objc_msgSend(v1, sel_setContentOffset_animated_, a1 & 1, v4, v6);
  }
  return result;
}

uint64_t sub_20A63E9D0()
{
  return sub_20A63EA04(&qword_26AC68D70, MEMORY[0x263F7A878]);
}

uint64_t sub_20A63EA04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A63EA4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for StockListSectionDescriptor;
    v8[1] = type metadata accessor for StockListModel(255);
    double v8[2] = sub_20A42D40C();
    void v8[3] = sub_20A63EA04(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A63EB0C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A63EA4C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A63EB50()
{
  return sub_20A63EA04(&qword_26AC69038, MEMORY[0x263F7AFD8]);
}

void sub_20A63EB84()
{
  if (!qword_26763D440)
  {
    sub_20A8C5620();
    sub_20A8C4E60();
    sub_20A63EA04(&qword_26763CBF8, MEMORY[0x263F58E28]);
    sub_20A63EA04(&qword_26763D450, MEMORY[0x263F58B00]);
    unint64_t v0 = sub_20A8C8910();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763D440);
    }
  }
}

void sub_20A63EC70()
{
  if (!qword_26763CC00)
  {
    sub_20A8C5620();
    sub_20A8C4E60();
    sub_20A63EA04(&qword_26763CBF8, MEMORY[0x263F58E28]);
    sub_20A63EA04(&qword_26763D450, MEMORY[0x263F58B00]);
    unint64_t v0 = sub_20A8CBB70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763CC00);
    }
  }
}

void sub_20A63ED5C()
{
  if (!qword_26AC68D80)
  {
    sub_20A8C2BC0();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC68D80);
    }
  }
}

uint64_t sub_20A63EDB4(uint64_t a1)
{
  sub_20A63ED5C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A63EE10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = a3;
  uint64_t v12 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  uint64_t v8 = a2 + OBJC_IVAR____TtC8StocksUI19DateRangePickerView_styler;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v8);
  sub_20A42BEBC(&v10, v8);
  return swift_endAccess();
}

uint64_t sub_20A63EEC0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 1544) = a2;
  *(void *)(v2 + 1496) = a1;
  return MEMORY[0x270FA2498](sub_20A63EEE4, 0, 0);
}

uint64_t sub_20A63EEE4()
{
  sub_20A64C134(0, &qword_26AC82B10, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_20A4F0534, MEMORY[0x263F59758]);
  *(void *)(v0 + 1592) = sub_20A8CC480();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 1640) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_20A63EFDC;
  return MEMORY[0x270F7A5E8](v0 + 1384);
}

uint64_t sub_20A63EFDC()
{
  *(void *)(*(void *)v1 + 1688) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_20A63F5DC;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_20A63F0F8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_20A63F0F8()
{
  uint64_t v1 = v0[173];
  v0[217] = v1;
  uint64_t v2 = v0[174];
  v0[218] = v2;
  uint64_t v3 = v0[175];
  v0[219] = v3;
  uint64_t v4 = (void *)swift_allocObject();
  v0[220] = v4;
  v4[2] = v1;
  v4[3] = v2;
  v4[4] = v3;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_20A64C5D8(255, &qword_26AC7F6D0, MEMORY[0x263F7AF08], MEMORY[0x263F8D488]);
  swift_asyncLet_begin();
  double v5 = (void *)swift_allocObject();
  v0[221] = v5;
  uint64_t v5[2] = v1;
  v5[3] = v2;
  void v5[4] = v3;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_asyncLet_begin();
  return MEMORY[0x270FA23E8](v0 + 82, v0 + 181, sub_20A63F2C4, v0 + 182);
}

uint64_t sub_20A63F2C4()
{
  v1[222] = v0;
  if (v0)
  {
    return MEMORY[0x270FA23D8](v1 + 2, v1 + 167, sub_20A63F640, v1 + 176);
  }
  else
  {
    v1[223] = v1[181];
    swift_bridgeObjectRetain();
    return MEMORY[0x270FA23E8](v1 + 2, v1 + 167, sub_20A63F390, v1 + 200);
  }
}

uint64_t sub_20A63F390()
{
  *(void *)(v1 + 1792) = v0;
  if (v0) {
    uint64_t v2 = sub_20A63F798;
  }
  else {
    uint64_t v2 = sub_20A63F3C4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_20A63F3C4()
{
  uint64_t v1 = *(void *)(v0 + 1784);
  uint64_t v2 = *(uint64_t **)(v0 + 1496);
  v2[3] = (uint64_t)&type metadata for StockForYouFeedGroupEmitterCursor;
  uint64_t v3 = swift_allocObject();
  *uint64_t v2 = v3;
  sub_20A64AE20(v0 + 1336, v3 + 24);
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA23D8](v0 + 16, v0 + 1336, sub_20A63F484, v0 + 1504);
}

uint64_t sub_20A63F484()
{
  return MEMORY[0x270FA2498](sub_20A63F4A0, 0, 0);
}

uint64_t sub_20A63F4A0()
{
  swift_release();
  return MEMORY[0x270FA23D8](v0 + 656, v0 + 1448, sub_20A63F520, v0 + 1296);
}

uint64_t sub_20A63F520()
{
  return MEMORY[0x270FA2498](sub_20A63F53C, 0, 0);
}

uint64_t sub_20A63F53C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_20A63F5DC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_20A63F640()
{
  return MEMORY[0x270FA2498](sub_20A63F65C, 0, 0);
}

uint64_t sub_20A63F65C()
{
  swift_release();
  return MEMORY[0x270FA23D8](v0 + 656, v0 + 1448, sub_20A63F6DC, v0 + 1552);
}

uint64_t sub_20A63F6DC()
{
  return MEMORY[0x270FA2498](sub_20A63F6F8, 0, 0);
}

uint64_t sub_20A63F6F8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_20A63F798()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA23D8](v0 + 16, v0 + 1336, sub_20A63F818, v0 + 1648);
}

uint64_t sub_20A63F818()
{
  return MEMORY[0x270FA2498](sub_20A63F834, 0, 0);
}

uint64_t sub_20A63F834()
{
  swift_release();
  return MEMORY[0x270FA23D8](v0 + 656, v0 + 1448, sub_20A63F8B4, v0 + 1696);
}

uint64_t sub_20A63F8B4()
{
  return MEMORY[0x270FA2498](sub_20A63F8D0, 0, 0);
}

uint64_t sub_20A63F8D0()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_20A63F970(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_20A635D48;
  return MEMORY[0x270F7A5E8](a1);
}

uint64_t sub_20A63FA10(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_20A490F70;
  return MEMORY[0x270F7A5E8](a1);
}

uint64_t sub_20A63FAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[19] = a2;
  v3[20] = a3;
  v3[18] = a1;
  return MEMORY[0x270FA2498](sub_20A63FAD4, 0, 0);
}

uint64_t sub_20A63FAD4()
{
  *(void *)(v0 + 168) = sub_20A8CCB20();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_20A63FB80;
  return MEMORY[0x270F7A5E8](v0 + 72);
}

uint64_t sub_20A63FB80()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_20A64034C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_20A63FC9C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_20A63FC9C()
{
  uint64_t v1 = *(void *)(v0 + 72);
  *(void *)(v0 + 192) = v1;
  if (v1)
  {
    *(int8x16_t *)(v0 + 200) = vextq_s8(*(int8x16_t *)(v0 + 80), *(int8x16_t *)(v0 + 80), 8uLL);
    *(void *)(v0 + 216) = sub_20A8CCAD0();
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_20A640014;
    return MEMORY[0x270F7A5E8](v0 + 16);
  }
  else
  {
    uint64_t v3 = sub_20A8CC9B0();
    sub_20A642E24(&qword_26AC6B058, MEMORY[0x263F598B8]);
    uint64_t v4 = (void *)swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v3 - 8) + 104))(v5, *MEMORY[0x263F598B0], v3);
    swift_willThrow();
    if (qword_26AC6D3D0 != -1) {
      swift_once();
    }
    unint64_t v6 = *(void **)(v0 + 144);
    id v7 = (id)qword_26AC6D3C8;
    sub_20A8CE9E0();
    sub_20A43F778();
    uint64_t v8 = swift_allocObject();
    *(void *)(v0 + 96) = 0;
    *(_OWORD *)(v8 + 16) = xmmword_20A8D3DC0;
    *(void *)(v0 + 104) = 0xE000000000000000;
    *(void *)(v0 + 128) = v4;
    sub_20A43F7E0(0, (unint64_t *)&qword_26AC80150);
    sub_20A8CF4E0();
    uint64_t v9 = *(void *)(v0 + 96);
    uint64_t v10 = *(void *)(v0 + 104);
    *(void *)(v8 + 56) = MEMORY[0x263F8D310];
    *(void *)(v8 + 64) = sub_20A43F830();
    *(void *)(v8 + 32) = v9;
    *(void *)(v8 + 40) = v10;
    sub_20A8C7D90();
    swift_bridgeObjectRelease();

    sub_20A8CF3C0();
    *(void *)(v0 + 112) = 0;
    *(void *)(v0 + 120) = 0xE000000000000000;
    sub_20A8CE3D0();
    *(void *)(v0 + 136) = v4;
    sub_20A8CF4E0();

    uint64_t v11 = *(void *)(v0 + 120);
    *unint64_t v6 = *(void *)(v0 + 112);
    v6[1] = v11;
    sub_20A5535B8(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
}

uint64_t sub_20A640014()
{
  uint64_t v2 = (void *)*v1;
  v2[29] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_20A640580, 0, 0);
  }
  else
  {
    uint64_t v3 = v2[25];
    swift_release();
    uint64_t v4 = (void *)swift_task_alloc();
    v2[30] = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_20A6401AC;
    uint64_t v5 = v2[19];
    uint64_t v6 = v2[18];
    return sub_20A640A24(v6, v5, (uint64_t)(v2 + 2), v3);
  }
}

uint64_t sub_20A6401AC()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_20A6407D0;
  }
  else {
    uint64_t v2 = sub_20A6402C0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_20A6402C0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_20A64A924(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_20A64034C()
{
  uint64_t v1 = v0;
  swift_release();
  uint64_t v2 = (void *)v0[23];
  if (qword_26AC6D3D0 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)v0[18];
  id v4 = (id)qword_26AC6D3C8;
  sub_20A8CE9E0();
  sub_20A43F778();
  uint64_t v5 = swift_allocObject();
  v0[12] = 0;
  *(_OWORD *)(v5 + 16) = xmmword_20A8D3DC0;
  v0[13] = 0xE000000000000000;
  v0[16] = v2;
  sub_20A43F7E0(0, (unint64_t *)&qword_26AC80150);
  sub_20A8CF4E0();
  uint64_t v6 = v0[12];
  uint64_t v7 = v1[13];
  *(void *)(v5 + 56) = MEMORY[0x263F8D310];
  *(void *)(v5 + 64) = sub_20A43F830();
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = v7;
  sub_20A8C7D90();
  swift_bridgeObjectRelease();

  sub_20A8CF3C0();
  v1[14] = 0;
  v1[15] = 0xE000000000000000;
  sub_20A8CE3D0();
  v1[17] = v2;
  sub_20A8CF4E0();

  uint64_t v8 = v1[15];
  *uint64_t v3 = v1[14];
  v3[1] = v8;
  sub_20A5535B8(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (uint64_t (*)(void))v1[1];
  return v9();
}

uint64_t sub_20A640580()
{
  uint64_t v1 = v0;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v2 = (void *)v0[29];
  if (qword_26AC6D3D0 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)v0[18];
  id v4 = (id)qword_26AC6D3C8;
  sub_20A8CE9E0();
  sub_20A43F778();
  uint64_t v5 = swift_allocObject();
  v0[12] = 0;
  *(_OWORD *)(v5 + 16) = xmmword_20A8D3DC0;
  v0[13] = 0xE000000000000000;
  v0[16] = v2;
  sub_20A43F7E0(0, (unint64_t *)&qword_26AC80150);
  sub_20A8CF4E0();
  uint64_t v6 = v0[12];
  uint64_t v7 = v1[13];
  *(void *)(v5 + 56) = MEMORY[0x263F8D310];
  *(void *)(v5 + 64) = sub_20A43F830();
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = v7;
  sub_20A8C7D90();
  swift_bridgeObjectRelease();

  sub_20A8CF3C0();
  v1[14] = 0;
  v1[15] = 0xE000000000000000;
  sub_20A8CE3D0();
  v1[17] = v2;
  sub_20A8CF4E0();

  uint64_t v8 = v1[15];
  *uint64_t v3 = v1[14];
  v3[1] = v8;
  sub_20A5535B8(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (uint64_t (*)(void))v1[1];
  return v9();
}

uint64_t sub_20A6407D0()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_20A64A924((uint64_t)(v0 + 2));
  uint64_t v2 = (void *)v0[31];
  if (qword_26AC6D3D0 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)v0[18];
  id v4 = (id)qword_26AC6D3C8;
  sub_20A8CE9E0();
  sub_20A43F778();
  uint64_t v5 = swift_allocObject();
  v0[12] = 0;
  *(_OWORD *)(v5 + 16) = xmmword_20A8D3DC0;
  v0[13] = 0xE000000000000000;
  v0[16] = v2;
  sub_20A43F7E0(0, (unint64_t *)&qword_26AC80150);
  sub_20A8CF4E0();
  uint64_t v6 = v0[12];
  uint64_t v7 = v1[13];
  *(void *)(v5 + 56) = MEMORY[0x263F8D310];
  *(void *)(v5 + 64) = sub_20A43F830();
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = v7;
  sub_20A8C7D90();
  swift_bridgeObjectRelease();

  sub_20A8CF3C0();
  v1[14] = 0;
  v1[15] = 0xE000000000000000;
  sub_20A8CE3D0();
  v1[17] = v2;
  sub_20A8CF4E0();

  uint64_t v8 = v1[15];
  *uint64_t v3 = v1[14];
  v3[1] = v8;
  sub_20A5535B8(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (uint64_t (*)(void))v1[1];
  return v9();
}

uint64_t sub_20A640A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[263] = v4;
  v5[257] = a4;
  v5[251] = a3;
  v5[245] = a2;
  v5[239] = a1;
  type metadata accessor for StockForYouFeedGroup();
  v5[269] = swift_task_alloc();
  uint64_t v6 = sub_20A8C2E00();
  v5[275] = v6;
  v5[276] = *(void *)(v6 - 8);
  v5[277] = swift_task_alloc();
  v5[278] = swift_task_alloc();
  v5[279] = swift_task_alloc();
  uint64_t v7 = sub_20A8C2F40();
  v5[280] = v7;
  v5[281] = *(void *)(v7 - 8);
  v5[282] = swift_task_alloc();
  v5[283] = swift_task_alloc();
  uint64_t v8 = sub_20A8C3F00();
  v5[284] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v5[285] = v9;
  v5[286] = *(void *)(v9 + 64);
  v5[287] = swift_task_alloc();
  v5[288] = swift_task_alloc();
  v5[289] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_20A640C28, 0, 0);
}

uint64_t sub_20A640C28()
{
  uint64_t v1 = v0 + 1336;
  uint64_t v2 = v0 + 1432;
  sub_20A64A978(*(void *)(v0 + 2008), v0 + 1432);
  sub_20A64A9D4(v0 + 1432, v0 + 1336);
  if (*(void *)(v0 + 1336))
  {
    uint64_t v3 = (uint64_t *)(v0 + 1624);
    uint64_t v4 = (_OWORD *)(v0 + 1720);
    while (1)
    {
      long long v8 = *(_OWORD *)(v1 + 16);
      *(_OWORD *)uint64_t v3 = *(_OWORD *)v1;
      *(_OWORD *)(v0 + 1640) = v8;
      *(_OWORD *)(v0 + 1656) = *(_OWORD *)(v1 + 32);
      *(void *)(v0 + 1672) = *(void *)(v1 + 48);
      uint64_t v9 = *v3;
      uint64_t v10 = *(void *)(*v3 + 16);
      if (!v10)
      {
        sub_20A64A924(v0 + 1624);
        goto LABEL_19;
      }
      uint64_t v11 = *(void *)(v0 + 2312);
      uint64_t v12 = *(void *)(v0 + 2280);
      uint64_t v13 = *(void *)(v0 + 2272);
      uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
      v12 += 16;
      int v15 = *(_DWORD *)(v12 + 64);
      *(_DWORD *)(v0 + 2408) = v15;
      uint64_t v38 = v15;
      uint64_t v39 = v14;
      uint64_t v16 = v9 + ((v15 + 32) & ~(unint64_t)v15);
      *(void *)(v0 + 2320) = v14;
      *(void *)(v0 + 2328) = v12 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v14(v11, v16, v13);
      if (v10 == 1)
      {
        *(void *)(v0 + 1768) = 0;
        *(_OWORD *)(v0 + 1736) = 0u;
        *(_OWORD *)(v0 + 1752) = 0u;
        *uint64_t v4 = 0u;
      }
      else
      {
        sub_20A8CF790();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain_n();
        uint64_t v17 = swift_dynamicCastClass();
        if (!v17)
        {
          swift_bridgeObjectRelease();
          uint64_t v17 = MEMORY[0x263F8EE78];
        }
        uint64_t v18 = *(void *)(v17 + 16);
        swift_release();
        if (v18 == v10 - 1)
        {
          uint64_t v19 = swift_dynamicCastClass();
          uint64_t v2 = v0 + 1432;
          if (!v19)
          {
            swift_bridgeObjectRelease();
            uint64_t v19 = MEMORY[0x263F8EE78];
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v19 = sub_20A75C918(v9, v16, 1, (2 * v10) | 1);
          uint64_t v2 = v0 + 1432;
        }
        swift_bridgeObjectRelease();
        sub_20A64AE20(v0 + 1632, v0 + 1728);
        *(void *)uint64_t v4 = v19;
      }
      sub_20A64AE7C(v0 + 1720, v2);
      uint64_t v20 = *(void *)(v0 + 1632);
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_20A8C3EC0();
      if (*(void *)(v20 + 16))
      {
        unint64_t v23 = sub_20A4D1B24(v21, v22);
        if (v24) {
          break;
        }
      }
      uint64_t v5 = *(void *)(v0 + 2312);
      uint64_t v6 = *(void *)(v0 + 2280);
      uint64_t v7 = *(void *)(v0 + 2272);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
      sub_20A64A924(v0 + 1624);
      uint64_t v1 = v0 + 1336;
      sub_20A64A9D4(v2, v0 + 1336);
      if (!*(void *)(v0 + 1336)) {
        goto LABEL_17;
      }
    }
    uint64_t v29 = *(void *)(v0 + 2312);
    uint64_t v30 = *(void *)(v0 + 2304);
    uint64_t v36 = *(void *)(v0 + 2288);
    uint64_t v31 = *(void *)(v0 + 2280);
    uint64_t v32 = *(void *)(v0 + 2272);
    uint64_t v37 = *(void *)(v0 + 2104);
    uint64_t v33 = *(void *)(*(void *)(v20 + 56) + 8 * v23);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v39(v30, v29, v32);
    uint64_t v34 = (v38 + 24) & ~v38;
    uint64_t v35 = swift_allocObject();
    *(void *)(v0 + 2336) = v35;
    *(void *)(v35 + 16) = v37;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v35 + v34, v30, v32);
    *(void *)(v35 + ((v34 + v36 + 7) & 0xFFFFFFFFFFFFFFF8)) = v33;
    swift_retain();
    swift_retain();
    sub_20A459CA4(0);
    sub_20A64C5D8(255, &qword_26AC811D8, MEMORY[0x263F7A980], MEMORY[0x263F8D488]);
    swift_asyncLet_begin();
    swift_retain_n();
    sub_20A459CA4(0);
    swift_asyncLet_begin();
    return MEMORY[0x270FA23E8](v0 + 656, v0 + 1864, sub_20A641204, v0 + 1296);
  }
  else
  {
LABEL_17:
    sub_20A64AA48(v1);
LABEL_19:
    uint64_t v25 = sub_20A8CC9B0();
    sub_20A642E24(&qword_26AC6B058, MEMORY[0x263F598B8]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x263F598A8], v25);
    swift_willThrow();
    sub_20A64AA48(v0 + 1432);
    sub_20A459CA4(0);
    sub_20A459CA4(0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v27 = *(uint64_t (**)(void))(v0 + 8);
    return v27();
  }
}

uint64_t sub_20A641204()
{
  v1[293] = v0;
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_20A6425DC, 0, 0);
  }
  else
  {
    v1[294] = v1[233];
    swift_bridgeObjectRetain();
    uint64_t v2 = v1[283];
    return MEMORY[0x270FA23E8](v1 + 2, v2, sub_20A6412BC, v1 + 198);
  }
}

uint64_t sub_20A6412BC()
{
  *(void *)(v1 + 2360) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_20A642828;
  }
  else
  {
    uint64_t v2 = sub_20A64133C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_20A64133C()
{
  uint64_t v1 = *(void *)(v0 + 2352);
  (*(void (**)(void, void, void))(*(void *)(v0 + 2248) + 16))(*(void *)(v0 + 2256), *(void *)(v0 + 2264), *(void *)(v0 + 2240));
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 2208);
    uint64_t v4 = *(void (**)(void, unint64_t, void))(v3 + 16);
    v3 += 16;
    unint64_t v5 = *(void *)(v0 + 2352)
       + ((*(unsigned __int8 *)(v3 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 64));
    uint64_t v57 = (uint64_t *)(v0 + 1816);
    uint64_t v58 = v4;
    v4(*(void *)(v0 + 2232), v5, *(void *)(v0 + 2200));
    uint64_t v6 = *(void *)(v3 + 56);
    swift_bridgeObjectRetain();
    unint64_t v7 = MEMORY[0x263F8EE78];
    while (1)
    {
      v58(*(void *)(v0 + 2216), v5, *(void *)(v0 + 2200));
      uint64_t v12 = sub_20A8C2DF0();
      uint64_t v13 = *(void *)(v12 + 16);
      int64_t v14 = *(void *)(v7 + 16);
      int64_t v15 = v14 + v13;
      if (__OFADD__(v14, v13)) {
        goto LABEL_40;
      }
      uint64_t v16 = v12;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v15 <= *(void *)(v7 + 24) >> 1)
      {
        if (!*(void *)(v16 + 16)) {
          goto LABEL_3;
        }
      }
      else
      {
        if (v14 <= v15) {
          int64_t v18 = v14 + v13;
        }
        else {
          int64_t v18 = v14;
        }
        unint64_t v7 = sub_20A46E40C(isUniquelyReferenced_nonNull_native, v18, 1, v7);
        if (!*(void *)(v16 + 16))
        {
LABEL_3:
          if (v13)
          {
            __break(1u);
LABEL_40:
            __break(1u);
LABEL_41:
            __break(1u);
LABEL_42:
            __break(1u);
            return sub_20A8CF590();
          }
          goto LABEL_4;
        }
      }
      uint64_t v19 = *(void *)(v7 + 16);
      uint64_t v20 = (*(void *)(v7 + 24) >> 1) - v19;
      uint64_t v21 = *(void *)(sub_20A8C4020() - 8);
      uint64_t v22 = *(void *)(v21 + 72);
      if (v20 < v13) {
        goto LABEL_41;
      }
      unint64_t v23 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      unint64_t v24 = v7 + v23 + v22 * v19;
      unint64_t v25 = v16 + v23;
      uint64_t v26 = v22 * v13;
      unint64_t v27 = v24 + v26;
      unint64_t v28 = v25 + v26;
      if (v25 < v27 && v24 < v28) {
        return sub_20A8CF590();
      }
      swift_arrayInitWithCopy();
      if (v13)
      {
        uint64_t v30 = *(void *)(v7 + 16);
        BOOL v31 = __OFADD__(v30, v13);
        uint64_t v32 = v30 + v13;
        if (v31) {
          goto LABEL_42;
        }
        *(void *)(v7 + 16) = v32;
      }
LABEL_4:
      uint64_t v8 = *(void *)(v0 + 2216);
      uint64_t v9 = *(void *)(v0 + 2208);
      uint64_t v10 = *(void *)(v0 + 2200);
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      *(void *)(v0 + 2368) = v11;
      *(void *)(v0 + 2376) = (v9 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v11(v8, v10);
      v5 += v6;
      if (!--v2)
      {
        swift_bridgeObjectRelease_n();
        sub_20A8C2DA0();
        swift_bridgeObjectRelease();
        uint64_t v33 = *(void *)(v0 + 1432);
        if (v33)
        {
          int64_t v34 = *(void *)(v33 + 16);
          uint64_t v35 = MEMORY[0x263F8EE78];
          if (v34)
          {
            uint64_t v36 = *(void *)(v0 + 2280);
            unint64_t v37 = (*(unsigned __int8 *)(v0 + 2408) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2408);
            *(void *)(v0 + 1816) = MEMORY[0x263F8EE78];
            swift_bridgeObjectRetain();
            sub_20A68C494(0, v34, 0);
            uint64_t v38 = v33 + v37;
            uint64_t v39 = *(void *)(v36 + 72);
            do
            {
              uint64_t v40 = *(void *)(v0 + 2296);
              uint64_t v41 = *(void *)(v0 + 2280);
              uint64_t v42 = *(void *)(v0 + 2272);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 2320))(v40, v38, v42);
              uint64_t v43 = sub_20A8C3EC0();
              uint64_t v45 = v44;
              (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
              uint64_t v35 = *(void *)(v0 + 1816);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_20A68C494(0, *(void *)(v35 + 16) + 1, 1);
                uint64_t v35 = *v57;
              }
              unint64_t v47 = *(void *)(v35 + 16);
              unint64_t v46 = *(void *)(v35 + 24);
              if (v47 >= v46 >> 1)
              {
                sub_20A68C494(v46 > 1, v47 + 1, 1);
                uint64_t v35 = *v57;
              }
              *(void *)(v35 + 16) = v47 + 1;
              uint64_t v48 = v35 + 16 * v47;
              *(void *)(v48 + 32) = v43;
              *(void *)(v48 + 40) = v45;
              v38 += v39;
              --v34;
            }
            while (v34);
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          uint64_t v35 = MEMORY[0x263F8EE78];
        }
        *(void *)(v0 + 2384) = v35;
        uint64_t v50 = (void *)swift_task_alloc();
        *(void *)(v0 + 2392) = v50;
        *uint64_t v50 = v0;
        v50[1] = sub_20A641848;
        uint64_t v51 = *(void *)(v0 + 2256);
        uint64_t v52 = *(void *)(v0 + 2224);
        uint64_t v53 = *(void *)(v0 + 2152);
        uint64_t v54 = *(void *)(v0 + 2056);
        uint64_t v55 = *(void *)(v0 + 1960);
        return sub_20A64417C(v53, v55, v52, v51, v54, v35, v0 + 1640);
      }
    }
  }
  (*(void (**)(void, void))(*(void *)(v0 + 2248) + 8))(*(void *)(v0 + 2256), *(void *)(v0 + 2240));
  swift_bridgeObjectRelease();
  uint64_t v49 = *(void *)(v0 + 2264);
  return MEMORY[0x270FA23D8](v0 + 16, v49, sub_20A641EE8, v0 + 2160);
}

uint64_t sub_20A641848()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 2400) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 2368))(*(void *)(v2 + 2224), *(void *)(v2 + 2200));
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v3 = sub_20A642A74;
  }
  else {
    uint64_t v3 = sub_20A6419D4;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_20A6419D4()
{
  sub_20A64A9D4(v0 + 1432, v0 + 1528);
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 2368);
  uint64_t v15 = *(void *)(v0 + 2256);
  uint64_t v2 = *(void *)(v0 + 2240);
  uint64_t v3 = *(void *)(v0 + 2232);
  uint64_t v4 = *(void *)(v0 + 2200);
  uint64_t v5 = *(void *)(v0 + 2152);
  uint64_t v6 = *(void *)(v0 + 1912);
  unint64_t v7 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 2248) + 8);
  if (*(void *)(v0 + 1528))
  {
    uint64_t v14 = v0 + 2064;
    long long v16 = *(_OWORD *)(v0 + 1528);
    long long v17 = *(_OWORD *)(v0 + 1544);
    long long v18 = *(_OWORD *)(v0 + 1560);
    uint64_t v19 = *(void *)(v0 + 1576);
    sub_20A63577C();
    uint64_t v9 = (uint64_t *)(v6 + *(int *)(v8 + 48));
    sub_20A64BF8C(v5, v6, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
    type metadata accessor for ForYouFeedGroup();
    swift_storeEnumTagMultiPayload();
    v9[3] = (uint64_t)&type metadata for StockForYouFeedGroupEmitterCursor;
    uint64_t v10 = swift_allocObject();
    *uint64_t v9 = v10;
    *(void *)(v10 + 64) = v19;
    *(_OWORD *)(v10 + 32) = v17;
    *(_OWORD *)(v10 + 48) = v18;
    *(_OWORD *)(v10 + 16) = v16;
    sub_20A64BEC4(v5, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
    v1(v3, v4);
    (*v7)(v15, v2);
    sub_20A5535B8(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = sub_20A641C34;
  }
  else
  {
    uint64_t v14 = v0 + 1968;
    v1(v3, v4);
    (*v7)(v15, v2);
    sub_20A64AA48(v0 + 1528);
    sub_20A64B7FC(v5, v6, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
    type metadata accessor for ForYouFeedGroup();
    swift_storeEnumTagMultiPayload();
    sub_20A5535B8(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = sub_20A641CEC;
  }
  uint64_t v12 = *(void *)(v0 + 2264);
  return MEMORY[0x270FA23D8](v0 + 16, v12, v11, v14);
}

uint64_t sub_20A641C34()
{
  return MEMORY[0x270FA2498](sub_20A641C50, 0, 0);
}

uint64_t sub_20A641C50()
{
  swift_release();
  return MEMORY[0x270FA23D8](v0 + 656, v0 + 1864, sub_20A641CD0, v0 + 2112);
}

uint64_t sub_20A641CD0()
{
  return MEMORY[0x270FA2498](sub_20A64C80C, 0, 0);
}

uint64_t sub_20A641CEC()
{
  return MEMORY[0x270FA2498](sub_20A641D08, 0, 0);
}

uint64_t sub_20A641D08()
{
  swift_release();
  return MEMORY[0x270FA23D8](v0 + 656, v0 + 1864, sub_20A641D88, v0 + 2016);
}

uint64_t sub_20A641D88()
{
  return MEMORY[0x270FA2498](sub_20A641DA4, 0, 0);
}

uint64_t sub_20A641DA4()
{
  (*(void (**)(void, void))(v0[285] + 8))(v0[289], v0[284]);
  sub_20A64A924((uint64_t)(v0 + 203));
  swift_release();
  sub_20A64AA48((uint64_t)(v0 + 179));
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_20A641EE8()
{
  return MEMORY[0x270FA2498](sub_20A641F04, 0, 0);
}

uint64_t sub_20A641F04()
{
  swift_release();
  return MEMORY[0x270FA23D8](v0 + 656, v0 + 1864, sub_20A641F84, v0 + 1920);
}

uint64_t sub_20A641F84()
{
  return MEMORY[0x270FA2498](sub_20A641FA0, 0, 0);
}

uint64_t sub_20A641FA0()
{
  uint64_t v1 = v0 + 1432;
  uint64_t v2 = (uint64_t *)(v0 + 1624);
  (*(void (**)(void, void))(*(void *)(v0 + 2280) + 8))(*(void *)(v0 + 2312), *(void *)(v0 + 2272));
  sub_20A64A924(v0 + 1624);
  swift_release();
  sub_20A64A9D4(v0 + 1432, v0 + 1336);
  if (*(void *)(v0 + 1336))
  {
    while (1)
    {
      long long v6 = *(_OWORD *)(v0 + 1352);
      *(_OWORD *)uint64_t v2 = *(_OWORD *)(v0 + 1336);
      *(_OWORD *)(v0 + 1640) = v6;
      *(_OWORD *)(v0 + 1656) = *(_OWORD *)(v0 + 1368);
      *(void *)(v0 + 1672) = *(void *)(v0 + 1384);
      uint64_t v7 = *v2;
      uint64_t v8 = *(void *)(*v2 + 16);
      if (!v8)
      {
        sub_20A64A924(v0 + 1624);
        goto LABEL_19;
      }
      uint64_t v9 = *(void *)(v0 + 2312);
      uint64_t v10 = *(void *)(v0 + 2280);
      uint64_t v11 = *(void *)(v0 + 2272);
      uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
      v10 += 16;
      int v13 = *(_DWORD *)(v10 + 64);
      *(_DWORD *)(v0 + 2408) = v13;
      uint64_t v37 = v13;
      uint64_t v38 = v12;
      uint64_t v14 = v7 + ((v13 + 32) & ~(unint64_t)v13);
      *(void *)(v0 + 2320) = v12;
      *(void *)(v0 + 2328) = v10 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v12(v9, v14, v11);
      if (v8 == 1)
      {
        uint64_t v15 = (uint64_t *)(v0 + 1720);
        *(void *)(v0 + 1768) = 0;
        *(_OWORD *)(v0 + 1736) = 0u;
        *(_OWORD *)(v0 + 1752) = 0u;
        *(_OWORD *)(v0 + 1720) = 0u;
      }
      else
      {
        sub_20A8CF790();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain_n();
        uint64_t v16 = swift_dynamicCastClass();
        if (!v16)
        {
          swift_bridgeObjectRelease();
          uint64_t v16 = MEMORY[0x263F8EE78];
        }
        uint64_t v17 = *(void *)(v16 + 16);
        swift_release();
        if (v17 == v8 - 1)
        {
          uint64_t v18 = swift_dynamicCastClass();
          uint64_t v1 = v0 + 1432;
          uint64_t v15 = (uint64_t *)(v0 + 1720);
          if (!v18)
          {
            swift_bridgeObjectRelease();
            uint64_t v18 = MEMORY[0x263F8EE78];
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v18 = sub_20A75C918(v7, v14, 1, (2 * v8) | 1);
          uint64_t v1 = v0 + 1432;
          uint64_t v15 = (uint64_t *)(v0 + 1720);
        }
        swift_bridgeObjectRelease();
        sub_20A64AE20(v0 + 1632, v0 + 1728);
        *uint64_t v15 = v18;
      }
      sub_20A64AE7C((uint64_t)v15, v1);
      uint64_t v19 = *(void *)(v0 + 1632);
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_20A8C3EC0();
      if (*(void *)(v19 + 16))
      {
        unint64_t v22 = sub_20A4D1B24(v20, v21);
        if (v23) {
          break;
        }
      }
      uint64_t v3 = *(void *)(v0 + 2312);
      uint64_t v4 = *(void *)(v0 + 2280);
      uint64_t v5 = *(void *)(v0 + 2272);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
      sub_20A64A924(v0 + 1624);
      sub_20A64A9D4(v1, v0 + 1336);
      if (!*(void *)(v0 + 1336)) {
        goto LABEL_17;
      }
    }
    uint64_t v28 = *(void *)(v0 + 2312);
    uint64_t v29 = *(void *)(v0 + 2304);
    uint64_t v35 = *(void *)(v0 + 2288);
    uint64_t v30 = *(void *)(v0 + 2280);
    uint64_t v31 = *(void *)(v0 + 2272);
    uint64_t v36 = *(void *)(v0 + 2104);
    uint64_t v32 = *(void *)(*(void *)(v19 + 56) + 8 * v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v38(v29, v28, v31);
    uint64_t v33 = (v37 + 24) & ~v37;
    uint64_t v34 = swift_allocObject();
    *(void *)(v0 + 2336) = v34;
    *(void *)(v34 + 16) = v36;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v34 + v33, v29, v31);
    *(void *)(v34 + ((v33 + v35 + 7) & 0xFFFFFFFFFFFFFFF8)) = v32;
    swift_retain();
    swift_retain();
    sub_20A459CA4((uint64_t)&unk_26763CC38);
    sub_20A64C5D8(255, &qword_26AC811D8, MEMORY[0x263F7A980], MEMORY[0x263F8D488]);
    swift_asyncLet_begin();
    swift_retain_n();
    sub_20A459CA4((uint64_t)&unk_26763CC48);
    swift_asyncLet_begin();
    return MEMORY[0x270FA23E8](v0 + 656, v0 + 1864, sub_20A641204, v0 + 1296);
  }
  else
  {
LABEL_17:
    sub_20A64AA48(v0 + 1336);
LABEL_19:
    uint64_t v24 = sub_20A8CC9B0();
    sub_20A642E24(&qword_26AC6B058, MEMORY[0x263F598B8]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x263F598A8], v24);
    swift_willThrow();
    sub_20A64AA48(v0 + 1432);
    sub_20A459CA4((uint64_t)&unk_26763CC38);
    sub_20A459CA4((uint64_t)&unk_26763CC48);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
    return v26();
  }
}

uint64_t sub_20A6425DC()
{
  return MEMORY[0x270FA23D8](v0 + 16, *(void *)(v0 + 2264), sub_20A6425FC, v0 + 1392);
}

uint64_t sub_20A6425FC()
{
  return MEMORY[0x270FA2498](sub_20A642618, 0, 0);
}

uint64_t sub_20A642618()
{
  swift_release();
  return MEMORY[0x270FA23D8](v0 + 656, v0 + 1864, sub_20A642698, v0 + 1488);
}

uint64_t sub_20A642698()
{
  return MEMORY[0x270FA2498](sub_20A6426B4, 0, 0);
}

uint64_t sub_20A6426B4()
{
  (*(void (**)(void, void))(v0[285] + 8))(v0[289], v0[284]);
  sub_20A64A924((uint64_t)(v0 + 203));
  swift_release();
  sub_20A64AA48((uint64_t)(v0 + 179));
  sub_20A459CA4((uint64_t)&unk_26763CC38);
  sub_20A459CA4((uint64_t)&unk_26763CC48);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_20A642828()
{
  return MEMORY[0x270FA23D8](v0 + 16, *(void *)(v0 + 2264), sub_20A642848, v0 + 1680);
}

uint64_t sub_20A642848()
{
  return MEMORY[0x270FA2498](sub_20A642864, 0, 0);
}

uint64_t sub_20A642864()
{
  swift_release();
  return MEMORY[0x270FA23D8](v0 + 656, v0 + 1864, sub_20A6428E4, v0 + 1776);
}

uint64_t sub_20A6428E4()
{
  return MEMORY[0x270FA2498](sub_20A642900, 0, 0);
}

uint64_t sub_20A642900()
{
  (*(void (**)(void, void))(v0[285] + 8))(v0[289], v0[284]);
  sub_20A64A924((uint64_t)(v0 + 203));
  swift_release();
  sub_20A64AA48((uint64_t)(v0 + 179));
  sub_20A459CA4((uint64_t)&unk_26763CC38);
  sub_20A459CA4((uint64_t)&unk_26763CC48);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_20A642A74()
{
  uint64_t v1 = *(void **)(v0 + 2400);
  uint64_t v2 = *(void *)(v0 + 2256);
  uint64_t v3 = *(void *)(v0 + 2248);
  uint64_t v4 = *(void *)(v0 + 2240);
  (*(void (**)(void, void))(v0 + 2368))(*(void *)(v0 + 2232), *(void *)(v0 + 2200));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);

  uint64_t v5 = *(void *)(v0 + 2264);
  return MEMORY[0x270FA23D8](v0 + 16, v5, sub_20A642B34, v0 + 1824);
}

uint64_t sub_20A642B34()
{
  return MEMORY[0x270FA2498](sub_20A642B50, 0, 0);
}

uint64_t sub_20A642B50()
{
  swift_release();
  return MEMORY[0x270FA23D8](v0 + 656, v0 + 1864, sub_20A641F84, v0 + 1872);
}

uint64_t sub_20A642BD0()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_config;
  sub_20A460F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_20A64BEC4(v0 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_knobs, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroupKnobs);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_headlineViewingHistory);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_newsFeedService);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_formatService);

  return swift_deallocClassInstance();
}

uint64_t sub_20A642CE4()
{
  return type metadata accessor for StockForYouFeedGroupEmitter();
}

uint64_t type metadata accessor for StockForYouFeedGroupEmitter()
{
  uint64_t result = qword_26AC77D70;
  if (!qword_26AC77D70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A642D38()
{
  sub_20A460F28();
  if (v0 <= 0x3F)
  {
    type metadata accessor for StockForYouFeedGroupKnobs();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_20A642E24(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A642E6C(uint64_t a1)
{
  sub_20A64C134(0, &qword_26AC82B10, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_20A4F0534, MEMORY[0x263F59758]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  long long v6 = (char *)&v11 - v5;
  if (qword_26AC6D3D0 != -1) {
    swift_once();
  }
  id v7 = (id)qword_26AC6D3C8;
  sub_20A8CEA00();
  sub_20A8C7D90();

  sub_20A553EC4();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v9 + v8, v6, v3);
  return sub_20A8C64E0();
}

uint64_t sub_20A643064(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_20A64C5D8(0, (unint64_t *)&qword_26AC69860, (uint64_t (*)(uint64_t))sub_20A5535B8, MEMORY[0x263F7D028]);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v3;
  swift_retain();
  swift_retain();
  return sub_20A8C64E0();
}

uint64_t sub_20A643118@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_config;
  sub_20A460F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
  type metadata accessor for ForYouFeedGroupConfig();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_20A6431A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_knobs;
  a1[3] = type metadata accessor for StockForYouFeedGroupKnobs();
  a1[4] = sub_20A642E24(&qword_26AC767A0, (void (*)(uint64_t))type metadata accessor for StockForYouFeedGroupKnobs);
  a1[5] = sub_20A642E24(&qword_26763CCC0, (void (*)(uint64_t))type metadata accessor for StockForYouFeedGroupKnobs);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_20A64BF8C(v3, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroupKnobs);
}

uint64_t sub_20A643278()
{
  return sub_20A8CC530();
}

uint64_t sub_20A6432B0@<X0>(uint64_t *a1@<X8>)
{
  sub_20A64C5D8(0, &qword_26AC800E8, (uint64_t (*)(uint64_t))sub_20A4D27BC, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D3DC0;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  sub_20A460F28();
  uint64_t v3 = sub_20A8CC530();
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v4;
  sub_20A4CFBE4(inited);
  sub_20A64C5D8(0, (unint64_t *)&unk_26AC69690, (uint64_t (*)(uint64_t))type metadata accessor for StockForYouFeedGroupEmitter, MEMORY[0x263F7CE78]);
  a1[3] = v5;
  a1[4] = sub_20A64C63C();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_20A8C5EF0();
}

uint64_t sub_20A6433EC()
{
  sub_20A642E24(&qword_26AC77D60, (void (*)(uint64_t))type metadata accessor for StockForYouFeedGroupEmitter);

  return sub_20A8C5EE0();
}

uint64_t sub_20A643458()
{
  return sub_20A642E24(&qword_26AC77D68, (void (*)(uint64_t))type metadata accessor for StockForYouFeedGroupEmitter);
}

uint64_t sub_20A6434A0()
{
  return sub_20A642E24(&qword_26AC77D58, (void (*)(uint64_t))type metadata accessor for StockForYouFeedGroupEmitter);
}

uint64_t sub_20A6434E8()
{
  return sub_20A642E24(&qword_26AC77D60, (void (*)(uint64_t))type metadata accessor for StockForYouFeedGroupEmitter);
}

uint64_t sub_20A643530()
{
  return sub_20A642E24(&qword_26AC82BA8, (void (*)(uint64_t))type metadata accessor for StockForYouFeedGroupEmitter);
}

uint64_t sub_20A643578()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A6435B8(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_20A490F70;
  *(_OWORD *)(v4 + 152) = v5;
  *(void *)(v4 + 144) = a1;
  return MEMORY[0x270FA2498](sub_20A63FAD4, 0, 0);
}

uint64_t sub_20A64366C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_20A64371C;
  return sub_20A64388C(a3, a4);
}

uint64_t sub_20A64371C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    long long v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 32) = a1;
    return MEMORY[0x270FA2498](sub_20A643868, 0, 0);
  }
}

uint64_t sub_20A643868()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A64388C(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  void v3[6] = v2;
  v3[4] = a1;
  uint64_t v4 = sub_20A8C3190();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  uint64_t v5 = sub_20A8C2800();
  v3[10] = v5;
  v3[11] = *(void *)(v5 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_20A6439C8, 0, 0);
}

uint64_t sub_20A6439C8()
{
  uint64_t v1 = v0[5];
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = v0[12];
    uint64_t v3 = v0[11];
    uint64_t v15 = v0[10];
    uint64_t v16 = v0[14];
    uint64_t v4 = v0[8];
    uint64_t v5 = v0[9];
    uint64_t v6 = v0[6];
    uint64_t v13 = v0[7];
    uint64_t v14 = v0[13];
    uint64_t v17 = v0[4];
    sub_20A8C27F0();
    sub_20A8C27F0();
    __swift_project_boxed_opaque_existential_1((void *)(v6 + 24), *(void *)(v6 + 48));
    sub_20A8C3AC0();
    sub_20A8C2FC0();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v13);
    sub_20A8C2720();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v0[15] = v7;
    v0[16] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v7(v2, v15);
    uint64_t v8 = (void *)swift_task_alloc();
    double v8[2] = v6;
    void v8[3] = v16;
    void v8[4] = v14;
    void v8[5] = v17;
    sub_20A44A6B0((void (*)(void *))sub_20A64C110, (uint64_t)v8, v1);
    swift_task_dealloc();
    __swift_project_boxed_opaque_existential_1((void *)(v6 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_newsFeedService), *(void *)(v6 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_newsFeedService + 24));
    v0[17] = sub_20A8C34D0();
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)swift_task_alloc();
    v0[18] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_20A643C54;
    return MEMORY[0x270F7A5E8](v0 + 3);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v11 = MEMORY[0x263F8EE78];
    return v10(v11);
  }
}

uint64_t sub_20A643C54()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_20A643E3C;
  }
  else {
    uint64_t v2 = sub_20A643D88;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_20A643D88()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[15];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[10];
  v1(v0[13], v3);
  v1(v2, v3);
  uint64_t v4 = v0[3];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_20A643E3C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[15];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[10];
  v1(v0[13], v3);
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_20A643EF8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_20A643F18, 0, 0);
}

uint64_t sub_20A643F18()
{
  swift_getObjectType();
  v0[4] = sub_20A8C3B00();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_20A643FDC;
  uint64_t v2 = v0[2];
  return MEMORY[0x270F7A5E8](v2);
}

uint64_t sub_20A643FDC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_20A644118, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_20A644118()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_20A64417C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[17] = a7;
  v8[18] = v7;
  v8[15] = a5;
  v8[16] = a6;
  v8[13] = a3;
  v8[14] = a4;
  v8[11] = a1;
  v8[12] = a2;
  v8[19] = *v7;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A64C5D8(0, &qword_26AC677B0, MEMORY[0x263F59840], MEMORY[0x263F8D8F0]);
  v8[20] = swift_task_alloc();
  sub_20A8CCC20();
  v8[21] = swift_task_alloc();
  v8[22] = swift_task_alloc();
  uint64_t v10 = sub_20A8CC470();
  v8[23] = v10;
  v8[24] = *(void *)(v10 - 8);
  v8[25] = swift_task_alloc();
  sub_20A64C5D8(0, &qword_26AC6B268, MEMORY[0x263F59CA0], v9);
  v8[26] = swift_task_alloc();
  sub_20A64C5D8(0, &qword_26AC6B2A0, MEMORY[0x263F59D38], v9);
  v8[27] = swift_task_alloc();
  sub_20A64C5D8(0, (unint64_t *)&qword_26AC6B038, (uint64_t (*)(uint64_t))sub_20A55361C, v9);
  v8[28] = swift_task_alloc();
  uint64_t v11 = sub_20A8CD660();
  v8[29] = v11;
  v8[30] = *(void *)(v11 - 8);
  v8[31] = swift_task_alloc();
  uint64_t v12 = sub_20A8CD440();
  v8[32] = v12;
  v8[33] = *(void *)(v12 - 8);
  v8[34] = swift_task_alloc();
  sub_20A64B1E4(0);
  v8[35] = swift_task_alloc();
  sub_20A64B294(0);
  v8[36] = swift_task_alloc();
  uint64_t v13 = sub_20A8CD300();
  v8[37] = v13;
  v8[38] = *(void *)(v13 - 8);
  v8[39] = swift_task_alloc();
  v8[40] = swift_task_alloc();
  uint64_t v14 = sub_20A8CD960();
  v8[41] = v14;
  v8[42] = *(void *)(v14 - 8);
  v8[43] = swift_task_alloc();
  uint64_t v15 = sub_20A8CD9A0();
  v8[44] = v15;
  v8[45] = *(void *)(v15 - 8);
  v8[46] = swift_task_alloc();
  v8[47] = swift_task_alloc();
  sub_20A64B2C8(0);
  v8[48] = swift_task_alloc();
  type metadata accessor for StockForYouFeedGroupConfigData();
  v8[49] = swift_task_alloc();
  uint64_t v16 = sub_20A8CD320();
  v8[50] = v16;
  v8[51] = *(void *)(v16 - 8);
  v8[52] = swift_task_alloc();
  v8[53] = swift_task_alloc();
  sub_20A64B2FC();
  v8[54] = v17;
  v8[55] = swift_task_alloc();
  uint64_t v18 = sub_20A8C4020();
  v8[56] = v18;
  v8[57] = *(void *)(v18 - 8);
  v8[58] = swift_task_alloc();
  v8[59] = swift_task_alloc();
  v8[60] = swift_task_alloc();
  v8[61] = swift_task_alloc();
  v8[62] = swift_task_alloc();
  v8[63] = swift_task_alloc();
  v8[64] = swift_task_alloc();
  v8[65] = swift_task_alloc();
  v8[66] = swift_task_alloc();
  v8[67] = swift_task_alloc();
  v8[68] = swift_task_alloc();
  v8[69] = swift_task_alloc();
  v8[70] = swift_task_alloc();
  v8[71] = swift_task_alloc();
  sub_20A64B360(0);
  v8[72] = swift_task_alloc();
  v8[73] = swift_task_alloc();
  v8[74] = swift_task_alloc();
  v8[75] = swift_task_alloc();
  v8[76] = swift_task_alloc();
  v8[77] = swift_task_alloc();
  v8[78] = swift_task_alloc();
  v8[79] = swift_task_alloc();
  v8[80] = swift_task_alloc();
  uint64_t v19 = sub_20A8C3F00();
  v8[81] = v19;
  v8[82] = *(void *)(v19 - 8);
  v8[83] = swift_task_alloc();
  uint64_t v20 = sub_20A8C2CE0();
  v8[84] = v20;
  v8[85] = *(void *)(v20 - 8);
  v8[86] = swift_task_alloc();
  uint64_t v21 = sub_20A8CCFE0();
  v8[87] = v21;
  v8[88] = *(void *)(v21 - 8);
  v8[89] = swift_task_alloc();
  uint64_t v22 = sub_20A8C3760();
  v8[90] = v22;
  v8[91] = *(void *)(v22 - 8);
  v8[92] = swift_task_alloc();
  uint64_t v23 = sub_20A8C3190();
  v8[93] = v23;
  v8[94] = *(void *)(v23 - 8);
  v8[95] = swift_task_alloc();
  v8[96] = swift_task_alloc();
  v8[97] = swift_task_alloc();
  uint64_t v24 = sub_20A8C2E00();
  v8[98] = v24;
  v8[99] = *(void *)(v24 - 8);
  v8[100] = swift_task_alloc();
  v8[101] = swift_task_alloc();
  v8[102] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_20A644B14, 0, 0);
}

uint64_t sub_20A644B14()
{
  uint64_t v339 = *(void *)(v0 + 808);
  uint64_t v344 = *(void *)(v0 + 800);
  uint64_t v381 = *(void *)(v0 + 792);
  uint64_t v357 = *(void *)(v0 + 784);
  uint64_t v348 = *(void *)(v0 + 768);
  uint64_t v380 = *(void *)(v0 + 752);
  uint64_t v351 = *(void *)(v0 + 744);
  uint64_t v335 = *(void *)(v0 + 712);
  uint64_t v336 = *(void *)(v0 + 704);
  uint64_t v365 = *(void *)(v0 + 672);
  uint64_t v359 = *(void *)(v0 + 688);
  uint64_t v362 = *(void *)(v0 + 664);
  uint64_t v416 = *(void *)(v0 + 656);
  uint64_t v419 = *(void *)(v0 + 680);
  uint64_t v374 = *(void *)(v0 + 648);
  uint64_t v377 = *(void *)(v0 + 696);
  v369 = *(char **)(v0 + 640);
  v342 = *(char **)(v0 + 632);
  uint64_t v345 = *(void *)(v0 + 624);
  uint64_t v387 = *(void *)(v0 + 456);
  uint64_t v347 = *(void *)(v0 + 448);
  uint64_t v1 = *(void **)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 16) = MEMORY[0x263F8EE78];
  v340 = v1;
  *(void *)(v0 + 24) = v3;
  *(void *)(v0 + 32) = v3;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_20A8C2DF0();
  sub_20A8C3790();
  swift_bridgeObjectRelease();
  sub_20A8C2DA0();
  swift_bridgeObjectRelease();
  uint64_t v353 = v2;
  uint64_t v4 = (void *)(v2 + 24);
  v355 = (void *)(v2 + 24);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 24), *(void *)(v2 + 48));
  sub_20A8C3AC0();
  v334 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_20A64C5D8(0, &qword_26AC7FE90, MEMORY[0x263F7ACC0], MEMORY[0x263F8E0F8]);
  uint64_t v393 = sub_20A8C3750();
  uint64_t v5 = *(void *)(v393 - 8);
  uint64_t v6 = v5;
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v337 = *(void *)(v5 + 72);
  uint64_t v8 = *(void *)(v5 + 72);
  uint64_t v384 = v8;
  uint64_t v338 = swift_allocObject();
  *(_OWORD *)(v338 + 16) = xmmword_20A8DCB40;
  uint64_t v9 = (void *)(v338 + v7);
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_20A75C810(v10);
  swift_bridgeObjectRelease();
  *uint64_t v9 = v11;
  v397 = *(void (**)(void))(v6 + 104);
  v407 = v9;
  ((void (*)(void *, void, uint64_t))v397)(v9, *MEMORY[0x263F7AC98], v393);
  uint64_t v12 = (void *)((char *)v9 + v8);
  sub_20A64B394();
  uint64_t v14 = v13;
  uint64_t v15 = (void *)((char *)v9 + v8 + *(int *)(v13 + 48));
  __swift_project_boxed_opaque_existential_1(v4, *(void *)(v353 + 48));
  sub_20A8C3AC0();
  uint64_t v16 = sub_20A8C30F0();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v380 + 8);
  *(void *)(v0 + 824) = v17;
  *(void *)(v0 + 832) = (v380 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v332 = v17;
  v17(v348, v351);
  *uint64_t v12 = v16;
  uint64_t v18 = *(void *)(v353 + 16);
  *uint64_t v15 = v18;
  uint64_t v19 = *MEMORY[0x263F7AAD8];
  uint64_t v20 = sub_20A8C3240();
  uint64_t v21 = *(void *)(v20 - 8);
  v349 = *(void (**)(void *, uint64_t, uint64_t))(v21 + 104);
  v349(v15, v19, v20);
  uint64_t v22 = *(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56);
  v21 += 56;
  v22(v15, 0, 1, v20);
  unsigned int v333 = *MEMORY[0x263F7ACB0];
  v397(v12);
  uint64_t v23 = (char *)v9 + 2 * v384;
  uint64_t v24 = &v23[*(int *)(v14 + 48)];
  *(void *)(v0 + 840) = OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_knobs;
  type metadata accessor for StockForYouFeedGroupKnobs();
  swift_unknownObjectRetain();
  sub_20A8CCB30();
  sub_20A8CCBF0();
  (*(void (**)(uint64_t, uint64_t))(v336 + 8))(v335, v377);
  v349(v24, *MEMORY[0x263F7AAF8], v20);
  v22(v24, 0, 1, v20);
  ((void (*)(char *, void, uint64_t))v397)(v23, v333, v393);
  uint64_t v25 = (void *)((char *)v407 + 3 * v384);
  uint64_t v26 = sub_20A8C3170();
  sub_20A8C3180();
  *uint64_t v25 = v26;
  v25[1] = v27;
  ((void (*)(uint64_t *, void, uint64_t))v397)(v25, *MEMORY[0x263F7ACA8], v393);
  sub_20A64C5D8(0, &qword_26AC7FE88, MEMORY[0x263F7AB30], v334);
  uint64_t v28 = *(void *)(v21 + 16);
  unint64_t v29 = (*(unsigned __int8 *)(v21 + 24) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 24);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_20A8D4540;
  unint64_t v31 = v30 + v29;
  v349((void *)v31, *MEMORY[0x263F7AAE8], v20);
  uint64_t v32 = (void *)(v31 + v28);
  sub_20A8C30D0();
  void *v32 = v33;
  v349(v32, *MEMORY[0x263F7AB28], v20);
  *(void *)((char *)v407 + 4 * v384) = v30;
  ((void (*)(char *, void, uint64_t))v397)((char *)v407 + 4 * v384, *MEMORY[0x263F7AC90], v393);
  uint64_t v34 = (char *)v407 + 5 * v384;
  v349(v34, *MEMORY[0x263F7AB10], v20);
  uint64_t v35 = *MEMORY[0x263F7ACB8];
  ((void (*)(char *, uint64_t, uint64_t))v397)(v34, v35, v393);
  v349((void *)((char *)v407 + 6 * v384), *MEMORY[0x263F7AAF0], v20);
  ((void (*)(char *, uint64_t, uint64_t))v397)((char *)v407 + 6 * v384, v35, v393);
  uint64_t v36 = (void *)((char *)v407 + v337 * 8 - v384);
  *uint64_t v36 = v18;
  sub_20A4342F4((uint64_t)v355, (uint64_t)(v36 + 1));
  v349(v36, *MEMORY[0x263F7AB08], v20);
  ((void (*)(void *, uint64_t, uint64_t))v397)(v36, v35, v393);
  swift_unknownObjectRetain();
  v407[v337] = sub_20A8C2F30();
  v349(&v407[v337], *MEMORY[0x263F7AAE0], v20);
  ((void (*)(void *, uint64_t, uint64_t))v397)(&v407[v337], v35, v393);
  sub_20A8C3740();
  sub_20A8C2DE0();
  sub_20A43F778();
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_20A8D5CB0;
  sub_20A642E24(&qword_26AC68DC8, MEMORY[0x263F7A980]);
  sub_20A8CE840();
  sub_20A8CE8A0();
  uint64_t v38 = sub_20A8CE890();
  uint64_t v39 = MEMORY[0x263F8D6C8];
  uint64_t v40 = MEMORY[0x263F8D750];
  *(void *)(v37 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v37 + 64) = v40;
  uint64_t v41 = v39;
  uint64_t v42 = v40;
  *(void *)(v37 + 32) = v38;
  sub_20A8CE840();
  sub_20A8CE8A0();
  uint64_t v43 = sub_20A8CE890();
  *(void *)(v37 + 96) = v41;
  *(void *)(v37 + 104) = v42;
  *(void *)(v37 + 72) = v43;
  sub_20A8C2DB0();
  sub_20A8C2CD0();
  v385 = *(void (**)(uint64_t, uint64_t))(v419 + 8);
  *(void *)(v420 + 848) = v385;
  *(void *)(v420 + 856) = (v419 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v385(v359, v365);
  uint64_t v44 = sub_20A8C3EC0();
  uint64_t v46 = v45;
  v382 = *(void (**)(uint64_t, uint64_t))(v416 + 8);
  v382(v362, v374);
  *(void *)(v37 + 136) = MEMORY[0x263F8D310];
  unint64_t v47 = sub_20A43F830();
  *(void *)(v37 + 144) = v47;
  *(void *)(v37 + 112) = v44;
  *(void *)(v37 + 120) = v46;
  sub_20A43F884();
  uint64_t v48 = (void *)sub_20A8CF180();
  sub_20A8CEA00();
  sub_20A8C7D90();

  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v355, *(void *)(v353 + 48));
  sub_20A8C3AC0();
  sub_20A64926C(v339, (void **)(v0 + 16), (void **)(v0 + 24), (void **)(v0 + 32), v369);
  sub_20A649CC4(v339, (uint64_t *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t *)(v0 + 32), v342);
  __swift_project_boxed_opaque_existential_1(v340, v340[3]);
  sub_20A8C2DF0();
  swift_bridgeObjectRetain();
  sub_20A8C37A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A8C2DA0();
  swift_bridgeObjectRelease();
  uint64_t v49 = *(void *)(v0 + 16);
  uint64_t v50 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v51 = sub_20A64B430(v344, v49, v50);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v381 + 8);
  *(void *)(v420 + 864) = v52;
  *(void *)(v420 + 872) = (v381 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v53 = v357;
  v358 = v52;
  v52(v344, v53);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_20A8D4540;
  uint64_t v55 = *(void *)(v51 + 16);
  *(void *)(v54 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v54 + 64) = MEMORY[0x263F8D750];
  *(void *)(v54 + 32) = v55;
  sub_20A8C2DB0();
  sub_20A8C2CD0();
  v385(v359, v365);
  uint64_t v56 = sub_20A8C3EC0();
  uint64_t v58 = v57;
  v382(v362, v374);
  *(void *)(v54 + 96) = MEMORY[0x263F8D310];
  *(void *)(v54 + 104) = v47;
  unint64_t v360 = v47;
  *(void *)(v54 + 72) = v56;
  *(void *)(v54 + 80) = v58;
  uint64_t v59 = (void *)sub_20A8CF180();
  sub_20A8CEA00();
  sub_20A8C7D90();

  swift_bridgeObjectRelease();
  *(void *)(v420 + 72) = MEMORY[0x263F8EE78];
  sub_20A64BF8C((uint64_t)v369, v345, (uint64_t (*)(void))sub_20A64B360);
  id v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v387 + 48);
  unsigned int v61 = v60(v345, 1, v347);
  uint64_t v62 = *(void *)(v420 + 624);
  uint64_t v366 = v51;
  v370 = v60;
  if (v61 == 1)
  {
    sub_20A64BEC4(v62, (uint64_t (*)(void))sub_20A64B360);
  }
  else
  {
    uint64_t v63 = *(void *)(v420 + 144);
    id v64 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v420 + 456) + 32);
    v64(*(void *)(v420 + 568), v62, *(void *)(v420 + 448));
    __swift_project_boxed_opaque_existential_1((void *)(v63 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_headlineViewingHistory), *(void *)(v63 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_headlineViewingHistory + 24));
    if ((sub_20A8C3A50() & 1) == 0)
    {
      v409 = v64;
      uint64_t v115 = *(void *)(v420 + 688);
      uint64_t v116 = *(void *)(v420 + 672);
      uint64_t v117 = *(void *)(v420 + 664);
      uint64_t v118 = *(void *)(v420 + 648);
      uint64_t v119 = *(void *)(v420 + 568);
      uint64_t v399 = *(void *)(v420 + 560);
      uint64_t v120 = *(void *)(v420 + 456);
      uint64_t v121 = *(void *)(v420 + 448);
      uint64_t v122 = swift_allocObject();
      *(_OWORD *)(v122 + 16) = xmmword_20A8D4540;
      sub_20A8C2DB0();
      sub_20A8C2CD0();
      v385(v115, v116);
      uint64_t v123 = sub_20A8C3EC0();
      uint64_t v125 = v124;
      uint64_t v126 = v117;
      uint64_t v83 = (void *)v420;
      v382(v126, v118);
      uint64_t v127 = MEMORY[0x263F8D310];
      *(void *)(v122 + 56) = MEMORY[0x263F8D310];
      *(void *)(v122 + 64) = v360;
      *(void *)(v122 + 32) = v123;
      *(void *)(v122 + 40) = v125;
      uint64_t v128 = sub_20A8C3FE0();
      *(void *)(v122 + 96) = v127;
      *(void *)(v122 + 104) = v360;
      if (v129) {
        uint64_t v130 = v128;
      }
      else {
        uint64_t v130 = 0;
      }
      unint64_t v131 = 0xE000000000000000;
      if (v129) {
        unint64_t v131 = v129;
      }
      *(void *)(v122 + 72) = v130;
      *(void *)(v122 + 80) = v131;
      long long v132 = (void *)sub_20A8CF180();
      sub_20A8CEA00();
      sub_20A8C7D90();

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 16))(v399, v119, v121);
      unint64_t v107 = *(void *)(v420 + 72);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v107 = sub_20A46E40C(0, *(void *)(v107 + 16) + 1, 1, v107);
      }
      unint64_t v134 = *(void *)(v107 + 16);
      unint64_t v133 = *(void *)(v107 + 24);
      uint64_t v110 = (unsigned char *)(v420 + 72);
      if (v134 >= v133 >> 1) {
        unint64_t v107 = sub_20A46E40C(v133 > 1, v134 + 1, 1, v107);
      }
      uint64_t v111 = *(void *)(v420 + 568);
      uint64_t v135 = *(void *)(v420 + 560);
      uint64_t v113 = *(void *)(v420 + 448);
      uint64_t v114 = *(void *)(v420 + 456);
      *(void *)(v107 + 16) = v134 + 1;
      v409(v107+ ((*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80))+ *(void *)(v114 + 72) * v134, v135, v113);
      goto LABEL_33;
    }
    (*(void (**)(void, void))(*(void *)(v420 + 456) + 8))(*(void *)(v420 + 568), *(void *)(v420 + 448));
    id v60 = v370;
  }
  uint64_t v65 = *(void *)(v420 + 616);
  uint64_t v66 = *(void *)(v420 + 448);
  sub_20A64BF8C(*(void *)(v420 + 632), v65, (uint64_t (*)(void))sub_20A64B360);
  if (v60(v65, 1, v66) != 1)
  {
    uint64_t v88 = *(void *)(v420 + 688);
    uint64_t v89 = *(void *)(v420 + 672);
    uint64_t v90 = *(void *)(v420 + 664);
    uint64_t v91 = *(void *)(v420 + 648);
    uint64_t v92 = *(void *)(v420 + 552);
    uint64_t v93 = *(void *)(v420 + 544);
    uint64_t v94 = *(void *)(v420 + 456);
    uint64_t v95 = *(void *)(v420 + 448);
    v398 = *(void (**)(uint64_t, void, uint64_t))(v94 + 32);
    v398(v92, *(void *)(v420 + 616), v95);
    uint64_t v96 = swift_allocObject();
    *(_OWORD *)(v96 + 16) = xmmword_20A8D4540;
    sub_20A8C2DB0();
    sub_20A8C2CD0();
    v385(v88, v89);
    uint64_t v97 = sub_20A8C3EC0();
    uint64_t v99 = v98;
    uint64_t v100 = v91;
    uint64_t v83 = (void *)v420;
    v382(v90, v100);
    uint64_t v101 = MEMORY[0x263F8D310];
    *(void *)(v96 + 56) = MEMORY[0x263F8D310];
    *(void *)(v96 + 64) = v360;
    *(void *)(v96 + 32) = v97;
    *(void *)(v96 + 40) = v99;
    uint64_t v102 = sub_20A8C3FE0();
    *(void *)(v96 + 96) = v101;
    *(void *)(v96 + 104) = v360;
    if (v103) {
      uint64_t v104 = v102;
    }
    else {
      uint64_t v104 = 0;
    }
    unint64_t v105 = 0xE000000000000000;
    if (v103) {
      unint64_t v105 = v103;
    }
    *(void *)(v96 + 72) = v104;
    *(void *)(v96 + 80) = v105;
    uint64_t v106 = (void *)sub_20A8CF180();
    sub_20A8CEA00();
    sub_20A8C7D90();

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 16))(v93, v92, v95);
    unint64_t v107 = *(void *)(v420 + 72);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v107 = sub_20A46E40C(0, *(void *)(v107 + 16) + 1, 1, v107);
    }
    unint64_t v109 = *(void *)(v107 + 16);
    unint64_t v108 = *(void *)(v107 + 24);
    uint64_t v110 = (unsigned char *)(v420 + 72);
    if (v109 >= v108 >> 1) {
      unint64_t v107 = sub_20A46E40C(v108 > 1, v109 + 1, 1, v107);
    }
    uint64_t v111 = *(void *)(v420 + 552);
    uint64_t v112 = *(void *)(v420 + 544);
    uint64_t v113 = *(void *)(v420 + 448);
    uint64_t v114 = *(void *)(v420 + 456);
    *(void *)(v107 + 16) = v109 + 1;
    v398(v107+ ((*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80))+ *(void *)(v114 + 72) * v109, v112, v113);
LABEL_33:
    v83[9] = v107;
    (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v111, v113);
    goto LABEL_67;
  }
  sub_20A64BEC4(*(void *)(v420 + 616), (uint64_t (*)(void))sub_20A64B360);
  uint64_t v67 = *(void *)(v51 + 16);
  if (v67)
  {
    uint64_t v68 = *(void *)(v420 + 456);
    uint64_t v69 = v51;
    uint64_t v70 = (void *)v420;
    uint64_t v72 = *(void (**)(uint64_t, unint64_t, uint64_t))(v68 + 16);
    v68 += 16;
    uint64_t v71 = v72;
    unint64_t v73 = v69 + ((*(unsigned __int8 *)(v68 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 64));
    v363 = (void *)(*(void *)(v420 + 144)
                    + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_headlineViewingHistory);
    uint64_t v74 = (void (**)(uint64_t, uint64_t))(v68 - 8);
    uint64_t v408 = *(void *)(v68 + 56);
    swift_bridgeObjectRetain();
    while (1)
    {
      unint64_t v76 = v70[66];
      uint64_t v77 = v70[65];
      uint64_t v78 = v70[56];
      v71(v76, v73, v78);
      char v79 = sub_20A8C3FA0();
      v71(v77, v76, v78);
      uint64_t v80 = v70[65];
      uint64_t v81 = v70[56];
      if (v79)
      {
        __swift_project_boxed_opaque_existential_1(v363, v363[3]);
        char v82 = sub_20A8C3A50();
        uint64_t v75 = *v74;
        (*v74)(v80, v81);
        if ((v82 & 1) == 0)
        {
          uint64_t v83 = (void *)v420;
          uint64_t v84 = *(void *)(v420 + 608);
          uint64_t v85 = *(void *)(v420 + 448);
          uint64_t v86 = *(void *)(v420 + 456);
          (*(void (**)(uint64_t, void, uint64_t))(v86 + 32))(v84, *(void *)(v420 + 528), v85);
          uint64_t v87 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v86 + 56);
          v87(v84, 0, 1, v85);
          goto LABEL_36;
        }
      }
      else
      {
        uint64_t v75 = *v74;
        (*v74)(v70[65], v70[56]);
      }
      uint64_t v70 = (void *)v420;
      v75(*(void *)(v420 + 528), *(void *)(v420 + 448));
      v73 += v408;
      if (!--v67) {
        goto LABEL_35;
      }
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v70 = (void *)v420;
LABEL_35:
  uint64_t v87 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v70[57] + 56);
  v87(v70[76], 1, 1, v70[56]);
  uint64_t v83 = v70;
LABEL_36:
  uint64_t v136 = v83[76];
  uint64_t v137 = v83[56];
  swift_bridgeObjectRelease();
  if (v370(v136, 1, v137) == 1)
  {
    sub_20A64BEC4(v83[76], (uint64_t (*)(void))sub_20A64B360);
    uint64_t v138 = *(void *)(v366 + 16);
    if (v138)
    {
      uint64_t v139 = v83[57];
      uint64_t v142 = *(void (**)(void, unint64_t, void))(v139 + 16);
      uint64_t v140 = v139 + 16;
      uint64_t v141 = v142;
      unint64_t v143 = v366 + ((*(unsigned __int8 *)(v140 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 64));
      uint64_t v144 = *(void *)(v140 + 56);
      swift_bridgeObjectRetain();
      while (1)
      {
        v141(v83[62], v143, v83[56]);
        if (sub_20A8C3FA0()) {
          break;
        }
        (*(void (**)(void, void))(v140 - 8))(v83[62], v83[56]);
        v143 += v144;
        if (!--v138)
        {
          uint64_t v145 = 1;
          goto LABEL_54;
        }
      }
      (*(void (**)(void, void, void))(v83[57] + 32))(v83[75], v83[62], v83[56]);
      uint64_t v145 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v145 = 1;
    }
LABEL_54:
    uint64_t v173 = v83[75];
    uint64_t v174 = v83[56];
    v87(v173, v145, 1, v174);
    swift_bridgeObjectRelease();
    uint64_t v175 = v370;
    if (v370(v173, 1, v174) == 1)
    {
      sub_20A64BEC4(v83[75], (uint64_t (*)(void))sub_20A64B360);
      uint64_t v110 = (unsigned char *)(v420 + 72);
      goto LABEL_68;
    }
    uint64_t v176 = v83[86];
    uint64_t v177 = v83[84];
    uint64_t v178 = v83[83];
    uint64_t v179 = *(void *)(v420 + 648);
    uint64_t v180 = *(void *)(v420 + 504);
    uint64_t v181 = *(void *)(v420 + 456);
    uint64_t v182 = *(void *)(v420 + 448);
    uint64_t v401 = *(void *)(v420 + 488);
    v411 = *(void (**)(uint64_t, void, uint64_t))(v181 + 32);
    v411(v180, *(void *)(v420 + 600), v182);
    uint64_t v183 = swift_allocObject();
    *(_OWORD *)(v183 + 16) = xmmword_20A8D4540;
    sub_20A8C2DB0();
    sub_20A8C2CD0();
    v385(v176, v177);
    uint64_t v184 = sub_20A8C3EC0();
    uint64_t v186 = v185;
    uint64_t v187 = v179;
    uint64_t v83 = (void *)v420;
    v382(v178, v187);
    uint64_t v188 = MEMORY[0x263F8D310];
    *(void *)(v183 + 56) = MEMORY[0x263F8D310];
    *(void *)(v183 + 64) = v360;
    *(void *)(v183 + 32) = v184;
    *(void *)(v183 + 40) = v186;
    uint64_t v189 = sub_20A8C3FE0();
    *(void *)(v183 + 96) = v188;
    *(void *)(v183 + 104) = v360;
    if (v190) {
      uint64_t v191 = v189;
    }
    else {
      uint64_t v191 = 0;
    }
    unint64_t v192 = 0xE000000000000000;
    if (v190) {
      unint64_t v192 = v190;
    }
    *(void *)(v183 + 72) = v191;
    *(void *)(v183 + 80) = v192;
    uint64_t v193 = (void *)sub_20A8CF180();
    sub_20A8CEA00();
    sub_20A8C7D90();

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v181 + 16))(v401, v180, v182);
    unint64_t v194 = *(void *)(v420 + 72);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v194 = sub_20A46E40C(0, *(void *)(v194 + 16) + 1, 1, v194);
    }
    unint64_t v196 = *(void *)(v194 + 16);
    unint64_t v195 = *(void *)(v194 + 24);
    uint64_t v110 = (unsigned char *)(v420 + 72);
    if (v196 >= v195 >> 1) {
      unint64_t v194 = sub_20A46E40C(v195 > 1, v196 + 1, 1, v194);
    }
    uint64_t v167 = *(void *)(v420 + 504);
    uint64_t v197 = *(void *)(v420 + 488);
    uint64_t v169 = *(void *)(v420 + 448);
    uint64_t v170 = *(void *)(v420 + 456);
    *(void *)(v194 + 16) = v196 + 1;
    v411(v194+ ((*(unsigned __int8 *)(v170 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v170 + 80))+ *(void *)(v170 + 72) * v196, v197, v169);
    *(void *)(v420 + 72) = v194;
    uint64_t v171 = swift_task_alloc();
    *(void *)(v171 + 16) = v167;
    uint64_t v172 = sub_20A64C7F0;
  }
  else
  {
    uint64_t v146 = v83[86];
    uint64_t v147 = v83[84];
    uint64_t v148 = v83[83];
    uint64_t v149 = *(void *)(v420 + 648);
    uint64_t v150 = *(void *)(v420 + 536);
    uint64_t v151 = *(void *)(v420 + 456);
    uint64_t v152 = *(void *)(v420 + 448);
    uint64_t v400 = *(void *)(v420 + 512);
    v410 = *(void (**)(uint64_t, void, uint64_t))(v151 + 32);
    v410(v150, *(void *)(v420 + 608), v152);
    uint64_t v153 = swift_allocObject();
    *(_OWORD *)(v153 + 16) = xmmword_20A8D4540;
    sub_20A8C2DB0();
    sub_20A8C2CD0();
    v385(v146, v147);
    uint64_t v154 = sub_20A8C3EC0();
    uint64_t v156 = v155;
    uint64_t v157 = v149;
    uint64_t v83 = (void *)v420;
    v382(v148, v157);
    uint64_t v158 = MEMORY[0x263F8D310];
    *(void *)(v153 + 56) = MEMORY[0x263F8D310];
    *(void *)(v153 + 64) = v360;
    *(void *)(v153 + 32) = v154;
    *(void *)(v153 + 40) = v156;
    uint64_t v159 = sub_20A8C3FE0();
    *(void *)(v153 + 96) = v158;
    *(void *)(v153 + 104) = v360;
    if (v160) {
      uint64_t v161 = v159;
    }
    else {
      uint64_t v161 = 0;
    }
    unint64_t v162 = 0xE000000000000000;
    if (v160) {
      unint64_t v162 = v160;
    }
    *(void *)(v153 + 72) = v161;
    *(void *)(v153 + 80) = v162;
    uint64_t v163 = (void *)sub_20A8CF180();
    sub_20A8CEA00();
    sub_20A8C7D90();

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v151 + 16))(v400, v150, v152);
    unint64_t v164 = *(void *)(v420 + 72);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v164 = sub_20A46E40C(0, *(void *)(v164 + 16) + 1, 1, v164);
    }
    uint64_t v110 = (unsigned char *)(v420 + 72);
    unint64_t v166 = *(void *)(v164 + 16);
    unint64_t v165 = *(void *)(v164 + 24);
    if (v166 >= v165 >> 1) {
      unint64_t v164 = sub_20A46E40C(v165 > 1, v166 + 1, 1, v164);
    }
    uint64_t v167 = *(void *)(v420 + 536);
    uint64_t v168 = *(void *)(v420 + 512);
    uint64_t v169 = *(void *)(v420 + 448);
    uint64_t v170 = *(void *)(v420 + 456);
    *(void *)(v164 + 16) = v166 + 1;
    v410(v164+ ((*(unsigned __int8 *)(v170 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v170 + 80))+ *(void *)(v170 + 72) * v166, v168, v169);
    *(void *)(v420 + 72) = v164;
    uint64_t v171 = swift_task_alloc();
    *(void *)(v171 + 16) = v167;
    uint64_t v172 = sub_20A64BEA4;
  }
  sub_20A5E04BC((uint64_t (*)(void))v172, v171, v366);
  uint64_t v366 = v198;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v170 + 8))(v167, v169);
LABEL_67:
  uint64_t v175 = v370;
LABEL_68:
  if (*(void *)(*(void *)v110 + 16))
  {
    (*(void (**)(void, unint64_t, void))(v83[57] + 16))(v83[74], *(void *)v110+ ((*(unsigned __int8 *)(v83[57] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83[57] + 80)), v83[56]);
    uint64_t v199 = 0;
  }
  else
  {
    uint64_t v199 = 1;
  }
  uint64_t v200 = v110 + 873;
  uint64_t v201 = v83[80];
  uint64_t v202 = v83[74];
  uint64_t v203 = v83[56];
  uint64_t v204 = v83[54];
  uint64_t v205 = v83[55];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83[57] + 56))(v202, v199, 1, v203);
  uint64_t v206 = v205 + *(int *)(v204 + 48);
  sub_20A64BF8C(v202, v205, (uint64_t (*)(void))sub_20A64B360);
  sub_20A64BF8C(v201, v206, (uint64_t (*)(void))sub_20A64B360);
  if (v175(v205, 1, v203) == 1)
  {
    uint64_t v207 = v83[56];
    sub_20A64BEC4(v83[74], (uint64_t (*)(void))sub_20A64B360);
    double v208 = (uint64_t *)(v420 + 72);
    if (v175(v206, 1, v207) == 1)
    {
      uint64_t v209 = v83[55];
LABEL_80:
      sub_20A64BEC4(v209, (uint64_t (*)(void))sub_20A64B360);
      goto LABEL_91;
    }
    goto LABEL_76;
  }
  uint64_t v210 = v83[56];
  sub_20A64BF8C(v83[55], v83[73], (uint64_t (*)(void))sub_20A64B360);
  unsigned int v211 = v175(v206, 1, v210);
  uint64_t v212 = v83[74];
  uint64_t v213 = v83[73];
  if (v211 == 1)
  {
    uint64_t v214 = v83[56];
    uint64_t v215 = v83[57];
    sub_20A64BEC4(v83[74], (uint64_t (*)(void))sub_20A64B360);
    (*(void (**)(uint64_t, uint64_t))(v215 + 8))(v213, v214);
    uint64_t v175 = v370;
    double v208 = (uint64_t *)(v420 + 72);
LABEL_76:
    sub_20A64BEC4(v83[55], (uint64_t (*)(void))sub_20A64B2FC);
    goto LABEL_78;
  }
  uint64_t v216 = v83[60];
  uint64_t v218 = v83[56];
  uint64_t v217 = v83[57];
  uint64_t v412 = v83[55];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v217 + 32))(v216, v206, v218);
  sub_20A642E24((unint64_t *)&unk_26AC69010, MEMORY[0x263F7AF50]);
  char v219 = sub_20A8CE210();
  CGFloat v220 = *(void (**)(uint64_t, uint64_t))(v217 + 8);
  v220(v216, v218);
  sub_20A64BEC4(v212, (uint64_t (*)(void))sub_20A64B360);
  v220(v213, v218);
  uint64_t v200 = v110 + 873;
  sub_20A64BEC4(v412, (uint64_t (*)(void))sub_20A64B360);
  uint64_t v175 = v370;
  double v208 = (uint64_t *)(v420 + 72);
  if (v219) {
    goto LABEL_91;
  }
LABEL_78:
  uint64_t v221 = v83[72];
  uint64_t v222 = v83[56];
  sub_20A64BF8C(v83[80], v221, (uint64_t (*)(void))sub_20A64B360);
  if (v175(v221, 1, v222) == 1)
  {
    uint64_t v209 = v83[72];
    goto LABEL_80;
  }
  uint64_t v223 = v83[86];
  uint64_t v224 = v83[84];
  uint64_t v225 = *(void *)(v420 + 664);
  uint64_t v226 = *(void *)(v420 + 648);
  uint64_t v227 = *(void *)(v420 + 472);
  uint64_t v388 = *(void *)(v420 + 464);
  uint64_t v228 = *(void *)(v420 + 456);
  uint64_t v229 = *(void *)(v420 + 448);
  v402 = *(void (**)(uint64_t, void, uint64_t))(v228 + 32);
  v402(v227, *(void *)(v420 + 576), v229);
  uint64_t v230 = swift_allocObject();
  *(_OWORD *)(v230 + 16) = xmmword_20A8D4540;
  sub_20A8C2DB0();
  sub_20A8C2CD0();
  v385(v223, v224);
  uint64_t v231 = sub_20A8C3EC0();
  uint64_t v233 = v232;
  uint64_t v234 = v225;
  uint64_t v83 = (void *)v420;
  v382(v234, v226);
  uint64_t v235 = MEMORY[0x263F8D310];
  *(void *)(v230 + 56) = MEMORY[0x263F8D310];
  *(void *)(v230 + 64) = v360;
  *(void *)(v230 + 32) = v231;
  *(void *)(v230 + 40) = v233;
  uint64_t v236 = sub_20A8C3FE0();
  *(void *)(v230 + 96) = v235;
  *(void *)(v230 + 104) = v360;
  if (v237) {
    uint64_t v238 = v236;
  }
  else {
    uint64_t v238 = 0;
  }
  unint64_t v239 = 0xE000000000000000;
  if (v237) {
    unint64_t v239 = v237;
  }
  *(void *)(v230 + 72) = v238;
  *(void *)(v230 + 80) = v239;
  uint64_t v240 = (void *)sub_20A8CF180();
  sub_20A8CEA00();
  sub_20A8C7D90();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v228 + 16))(v388, v227, v229);
  unint64_t v241 = *(void *)(v420 + 72);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v241 = sub_20A46E40C(0, *(void *)(v241 + 16) + 1, 1, v241);
  }
  unint64_t v243 = *(void *)(v241 + 16);
  unint64_t v242 = *(void *)(v241 + 24);
  double v208 = (uint64_t *)(v420 + 72);
  if (v243 >= v242 >> 1) {
    unint64_t v241 = sub_20A46E40C(v242 > 1, v243 + 1, 1, v241);
  }
  uint64_t v244 = *(void *)(v420 + 464);
  uint64_t v245 = *(void *)(v420 + 472);
  uint64_t v246 = *(void *)(v420 + 448);
  uint64_t v247 = *(void *)(v420 + 456);
  *(void *)(v241 + 16) = v243 + 1;
  v402(v241+ ((*(unsigned __int8 *)(v247 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v247 + 80))+ *(void *)(v247 + 72) * v243, v244, v246);
  *(void *)(v420 + 72) = v241;
  (*(void (**)(uint64_t, uint64_t))(v247 + 8))(v245, v246);
LABEL_91:
  sub_20A4ACED4(v366);
  sub_20A8C4120();
  sub_20A642E24(&qword_26AC681F0, (void (*)(uint64_t))type metadata accessor for StockForYouFeedGroupEmitter);
  sub_20A8C41C0();
  swift_release();
  if (*v200 == 1)
  {
    sub_20A8C4110();
    sub_20A8C41C0();
    swift_release();
    uint64_t v248 = v83[10];
  }
  else
  {
    uint64_t v249 = sub_20A8C2FF0();
    if (v249 >= 5) {
      uint64_t v248 = 5;
    }
    else {
      uint64_t v248 = v249;
    }
  }
  uint64_t v250 = *v208;
  uint64_t v251 = *(void *)(*v208 + 16);
  if (v248 < v251)
  {
    if (v248 < 0)
    {
      __break(1u);
    }
    else
    {
      sub_20A8CF790();
      swift_unknownObjectRetain_n();
      uint64_t v252 = swift_dynamicCastClass();
      if (!v252)
      {
        swift_bridgeObjectRelease();
        uint64_t v252 = MEMORY[0x263F8EE78];
      }
      uint64_t v253 = *(void *)(v252 + 16);
      swift_release();
      if (v253 == v248)
      {
        uint64_t v254 = swift_dynamicCastClass();
        if (!v254)
        {
          swift_bridgeObjectRelease();
          uint64_t v254 = MEMORY[0x263F8EE78];
        }
        goto LABEL_103;
      }
    }
    unint64_t v330 = (2 * v248) | 1;
    uint64_t v331 = v83[57];
    swift_bridgeObjectRelease();
    uint64_t v254 = sub_20A75C94C(v250, v250 + ((*(unsigned __int8 *)(v331 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v331 + 80)), 0, v330);
LABEL_103:
    swift_bridgeObjectRelease();
    *double v208 = v254;
    uint64_t v251 = *(void *)(v254 + 16);
    uint64_t v250 = v254;
  }
  if (v251 < sub_20A8C3000())
  {
    uint64_t v371 = v83[98];
    uint64_t v375 = v83[101];
    uint64_t v403 = v83[97];
    uint64_t v413 = v83[102];
    uint64_t v255 = v83[95];
    uint64_t v256 = v83[93];
    uint64_t v389 = v83[92];
    uint64_t v257 = v83[91];
    uint64_t v378 = v83[90];
    uint64_t v258 = v83[86];
    uint64_t v259 = *(void *)(v420 + 672);
    uint64_t v260 = *(void *)(v420 + 664);
    uint64_t v261 = *(void *)(v420 + 648);
    uint64_t v262 = *(void *)(v420 + 640);
    uint64_t v367 = *(void *)(v420 + 632);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v263 = swift_allocObject();
    *(_OWORD *)(v263 + 16) = xmmword_20A8D5CB0;
    sub_20A8C2DB0();
    sub_20A8C2CD0();
    v385(v258, v259);
    uint64_t v264 = sub_20A8C3EC0();
    uint64_t v266 = v265;
    v382(v260, v261);
    *(void *)(v263 + 56) = MEMORY[0x263F8D310];
    *(void *)(v263 + 64) = v360;
    *(void *)(v263 + 32) = v264;
    *(void *)(v263 + 40) = v266;
    uint64_t v267 = sub_20A8C3000();
    uint64_t v268 = MEMORY[0x263F8D6C8];
    *(void *)(v263 + 96) = MEMORY[0x263F8D6C8];
    uint64_t v269 = MEMORY[0x263F8D750];
    *(void *)(v263 + 104) = MEMORY[0x263F8D750];
    *(void *)(v263 + 72) = v267;
    uint64_t v270 = *(void *)(*(void *)(v420 + 72) + 16);
    *(void *)(v263 + 136) = v268;
    *(void *)(v263 + 144) = v269;
    *(void *)(v263 + 112) = v270;
    CGFloat v271 = (void *)sub_20A8CF180();
    sub_20A8CEA00();
    sub_20A8C7D90();

    swift_bridgeObjectRelease();
    sub_20A64BE50();
    swift_allocError();
    swift_willThrow();
    sub_20A64BEC4(v367, (uint64_t (*)(void))sub_20A64B360);
    sub_20A64BEC4(v262, (uint64_t (*)(void))sub_20A64B360);
    v332(v255, v256);
    v358(v375, v371);
    (*(void (**)(uint64_t, uint64_t))(v257 + 8))(v389, v378);
    v332(v403, v256);
    v358(v413, v371);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v319 = *(uint64_t (**)(void))(v420 + 8);
LABEL_119:
    return v319();
  }
  uint64_t v272 = v83[50];
  uint64_t v273 = v83[51];
  uint64_t v275 = v83[48];
  uint64_t v274 = v83[49];
  v83[110] = OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_config;
  sub_20A460F28();
  v83[111] = v276;
  sub_20A8CC550();
  sub_20A64B7FC(v274, v275, (uint64_t (*)(void))sub_20A64B2C8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v273 + 48))(v275, 1, v272) == 1)
  {
    uint64_t v376 = v83[98];
    uint64_t v379 = v83[101];
    uint64_t v394 = v83[97];
    uint64_t v404 = v83[102];
    uint64_t v277 = v83[95];
    uint64_t v278 = v83;
    uint64_t v279 = v83[93];
    uint64_t v280 = v278[91];
    uint64_t v383 = v278[90];
    uint64_t v281 = v278[86];
    uint64_t v282 = v278[84];
    uint64_t v368 = v277;
    uint64_t v372 = v278[83];
    uint64_t v386 = v278[92];
    uint64_t v390 = v278[82];
    uint64_t v361 = v278[79];
    uint64_t v364 = v278[80];
    uint64_t v283 = v278[48];
    uint64_t v284 = v278[24];
    uint64_t v414 = v278[23];
    uint64_t v417 = v278[81];
    uint64_t v285 = v278[11];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_20A64BEC4(v283, (uint64_t (*)(void))sub_20A64B2C8);
    sub_20A8C2DB0();
    sub_20A8C2CD0();
    v385(v281, v282);
    sub_20A64BEC4(v361, (uint64_t (*)(void))sub_20A64B360);
    sub_20A64BEC4(v364, (uint64_t (*)(void))sub_20A64B360);
    v332(v368, v279);
    v358(v379, v376);
    (*(void (**)(uint64_t, uint64_t))(v280 + 8))(v386, v383);
    v332(v394, v279);
    v358(v404, v376);
    uint64_t v286 = v278[9];
    CGRect v287 = (int *)type metadata accessor for StockForYouFeedGroup();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v284 + 56))(v285 + v287[7], 1, 1, v414);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v390 + 32))(v285, v372, v417);
    *(void *)(v285 + v287[5]) = v286;
    *(unsigned char *)(v285 + v287[6]) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v319 = (uint64_t (*)(void))v278[1];
    goto LABEL_119;
  }
  (*(void (**)(void, void, void))(v83[51] + 32))(v83[53], v83[48], v83[50]);
  int64_t v288 = *(void *)(v250 + 16);
  uint64_t v289 = MEMORY[0x263F8EE78];
  if (v288)
  {
    uint64_t v290 = v83[57];
    uint64_t v291 = v83[42];
    uint64_t v421 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_20A68CC1C(0, v288, 0);
    CGRect v292 = *(void (**)(uint64_t, unint64_t, uint64_t))(v290 + 16);
    v290 += 16;
    v405 = v292;
    unint64_t v293 = v250 + ((*(unsigned __int8 *)(v290 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v290 + 64));
    uint64_t v395 = *(void *)(v290 + 56);
    unsigned int v391 = *MEMORY[0x263F59DA0];
    CGRect v294 = (void (**)(uint64_t, uint64_t))(v290 - 8);
    uint64_t v295 = v421;
    do
    {
      uint64_t v296 = v83[60];
      uint64_t v297 = v83[56];
      CGRect v298 = v83;
      CGRect v299 = (uint64_t *)v83[43];
      uint64_t v300 = v298[41];
      v405(v296, v293, v297);
      *CGRect v299 = sub_20A8C3F80();
      (*(void (**)(uint64_t *, void, uint64_t))(v291 + 104))(v299, v391, v300);
      (*v294)(v296, v297);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68CC1C(0, *(void *)(v295 + 16) + 1, 1);
        uint64_t v295 = v421;
      }
      unint64_t v302 = *(void *)(v295 + 16);
      unint64_t v301 = *(void *)(v295 + 24);
      uint64_t v83 = (void *)v420;
      if (v302 >= v301 >> 1)
      {
        sub_20A68CC1C(v301 > 1, v302 + 1, 1);
        uint64_t v295 = v421;
      }
      uint64_t v303 = *(void *)(v420 + 344);
      uint64_t v304 = *(void *)(v420 + 328);
      *(void *)(v295 + 16) = v302 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v291 + 32))(v295+ ((*(unsigned __int8 *)(v291 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v291 + 80))+ *(void *)(v291 + 72) * v302, v303, v304);
      uint64_t v421 = v295;
      v293 += v395;
      --v288;
    }
    while (v288);
    swift_bridgeObjectRelease();
    uint64_t v289 = MEMORY[0x263F8EE78];
  }
  uint64_t v305 = v83[86];
  uint64_t v306 = v83[84];
  uint64_t v307 = *(void *)(v420 + 664);
  uint64_t v396 = v306;
  uint64_t v406 = *(void *)(v420 + 648);
  uint64_t v346 = *(void *)(v420 + 376);
  uint64_t v415 = *(void *)(v420 + 368);
  uint64_t v350 = *(void *)(v420 + 360);
  uint64_t v352 = *(void *)(v420 + 352);
  uint64_t v341 = *(void *)(v420 + 288);
  uint64_t v343 = *(void *)(v420 + 280);
  uint64_t v354 = *(void *)(v420 + 224);
  uint64_t v356 = *(void *)(v420 + 216);
  uint64_t v392 = *(void *)(v420 + 208);
  uint64_t v373 = *(void *)(v420 + 144);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A64AAE4(v289, (void (*)(void))sub_20A64C078);
  sub_20A64AAE4(v289, sub_20A64BFF4);
  sub_20A64AC00(v289);
  sub_20A8CD990();
  sub_20A8C2DB0();
  sub_20A8C2CD0();
  v385(v305, v396);
  sub_20A64B864(v307);
  v382(v307, v406);
  sub_20A64AAE4(v289, (void (*)(void))sub_20A64C078);
  sub_20A64AAE4(v289, sub_20A64BFF4);
  sub_20A64AC00(v289);
  sub_20A8CD990();
  __swift_project_boxed_opaque_existential_1((void *)(v373 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_formatService), *(void *)(v373 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_formatService + 24));
  sub_20A8C2DB0();
  sub_20A8C2CD0();
  v385(v305, v396);
  sub_20A8C3E20();
  v382(v307, v406);
  uint64_t v308 = sub_20A8CBFE0();
  v418 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v308 - 8) + 56);
  v418(v341, 1, 1, v308);
  sub_20A64B218(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v309 - 8) + 56))(v343, 1, 1, v309);
  sub_20A8CD2D0();
  swift_bridgeObjectRelease();
  sub_20A64BEC4(v343, (uint64_t (*)(void))sub_20A64B1E4);
  sub_20A64BEC4(v341, (uint64_t (*)(void))sub_20A64B294);
  sub_20A64C5D8(0, &qword_26AC80030, MEMORY[0x263F59DC0], MEMORY[0x263F8E0F8]);
  uint64_t v310 = *(void *)(v350 + 72);
  unint64_t v311 = (*(unsigned __int8 *)(v350 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v350 + 80);
  uint64_t v312 = swift_allocObject();
  *(_OWORD *)(v312 + 16) = xmmword_20A8D4540;
  unint64_t v313 = v312 + v311;
  v314 = *(void (**)(unint64_t, uint64_t, uint64_t))(v350 + 16);
  v314(v313, v346, v352);
  v314(v313 + v310, v415, v352);
  v418(v341, 1, 1, v308);
  sub_20A553748(v289);
  sub_20A553748(v289);
  sub_20A55387C(v289);
  sub_20A553894(v289);
  sub_20A5539C8(v289);
  sub_20A5539E0(v289);
  sub_20A8CD430();
  sub_20A55361C(0);
  *(void *)(v420 + 896) = v315;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v315 - 8) + 56))(v354, 1, 1, v315);
  uint64_t v316 = sub_20A8CD8D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v316 - 8) + 56))(v356, 1, 1, v316);
  *(unsigned char *)(v420 + 944) = 1;
  sub_20A64C134(0, (unint64_t *)&unk_26AC6B2B8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_20A4F0534, MEMORY[0x263F59D48]);
  swift_allocObject();
  swift_retain();
  sub_20A8CD8F0();
  uint64_t v317 = sub_20A8CD600();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v317 - 8) + 56))(v392, 1, 1, v317);
  uint64_t v318 = qword_26AC6CF90;
  (id)*MEMORY[0x263F592F0];
  if (v318 != -1) {
    swift_once();
  }
  (id)qword_26AC6CF88;
  sub_20A8CD650();
  *(void *)(v420 + 904) = sub_20A8CD4A0();
  uint64_t v322 = *(void *)(v420 + 408);
  uint64_t v321 = *(void *)(v420 + 416);
  uint64_t v323 = *(void *)(v420 + 400);
  uint64_t v325 = *(void *)(v420 + 264);
  uint64_t v324 = *(void *)(v420 + 272);
  uint64_t v326 = *(void *)(v420 + 256);
  (*(void (**)(void, void))(*(void *)(v420 + 240) + 8))(*(void *)(v420 + 248), *(void *)(v420 + 232));
  (*(void (**)(uint64_t, uint64_t))(v325 + 8))(v324, v326);
  v327 = *(void (**)(uint64_t, uint64_t))(v322 + 8);
  *(void *)(v420 + 912) = v327;
  *(void *)(v420 + 920) = (v322 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v327(v321, v323);
  v328 = (void *)swift_task_alloc();
  *(void *)(v420 + 928) = v328;
  void *v328 = v420;
  v328[1] = sub_20A64823C;
  uint64_t v329 = *(void *)(v420 + 320);
  return MEMORY[0x270F7A5E8](v329);
}

uint64_t sub_20A64823C()
{
  *(void *)(*(void *)v1 + 936) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_20A648A7C;
  }
  else {
    uint64_t v2 = sub_20A648370;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_20A648370()
{
  unint64_t v31 = (void (*)(uint64_t, uint64_t))v0[114];
  uint64_t v38 = (void (*)(uint64_t, uint64_t))v0[108];
  uint64_t v22 = (void (*)(uint64_t, uint64_t))v0[106];
  uint64_t v33 = (void (*)(uint64_t, uint64_t))v0[103];
  uint64_t v40 = v0[102];
  uint64_t v35 = v0[101];
  uint64_t v34 = v0[98];
  uint64_t v39 = v0[97];
  uint64_t v29 = v0[93];
  uint64_t v30 = v0[95];
  uint64_t v32 = v0[91];
  uint64_t v36 = v0[90];
  uint64_t v37 = v0[92];
  uint64_t v16 = v0[86];
  uint64_t v20 = v0[84];
  uint64_t v18 = v0[83];
  uint64_t v41 = v0[82];
  uint64_t v42 = v0[81];
  uint64_t v25 = v0[80];
  uint64_t v23 = v0[53];
  uint64_t v24 = v0[79];
  uint64_t v21 = v0[50];
  uint64_t v19 = v0[47];
  uint64_t v1 = v0[45];
  uint64_t v17 = v0[46];
  uint64_t v13 = v0[40];
  uint64_t v2 = v0[38];
  uint64_t v14 = v0[37];
  uint64_t v15 = v0[44];
  uint64_t v12 = v0[25];
  uint64_t v27 = v0[24];
  uint64_t v28 = v0[23];
  uint64_t v3 = v0[20];
  uint64_t v26 = v0[11];
  (*(void (**)(void))(v2 + 16))();
  sub_20A8CC540();
  sub_20A8CC540();
  sub_20A8CC8A0();
  sub_20A8CC8C0();
  uint64_t v4 = sub_20A8CC740();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  sub_20A8CC440();
  sub_20A8C2DB0();
  sub_20A8C2CD0();
  v22(v16, v20);
  uint64_t v5 = v0[9];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  swift_bridgeObjectRetain();
  v6(v13, v14);
  unint64_t v7 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  v7(v17, v15);
  v7(v19, v15);
  v31(v23, v21);
  sub_20A64BEC4(v24, (uint64_t (*)(void))sub_20A64B360);
  sub_20A64BEC4(v25, (uint64_t (*)(void))sub_20A64B360);
  v33(v30, v29);
  v38(v35, v34);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v37, v36);
  v33(v39, v29);
  v38(v40, v34);
  uint64_t v8 = (int *)type metadata accessor for StockForYouFeedGroup();
  uint64_t v9 = v26 + v8[7];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v9, v12, v28);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v9, 0, 1, v28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v26, v18, v42);
  *(void *)(v26 + v8[5]) = v5;
  *(unsigned char *)(v26 + v8[6]) = 0;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_20A648A7C()
{
  uint64_t v12 = (void (*)(uint64_t, uint64_t))v0[114];
  uint64_t v19 = (void (*)(uint64_t, uint64_t))v0[108];
  uint64_t v16 = v0[101];
  uint64_t v14 = (void (*)(uint64_t, uint64_t))v0[103];
  uint64_t v15 = v0[98];
  uint64_t v20 = v0[97];
  uint64_t v21 = v0[102];
  uint64_t v13 = v0[95];
  uint64_t v1 = v0[93];
  uint64_t v2 = v0[91];
  uint64_t v17 = v0[90];
  uint64_t v18 = v0[92];
  uint64_t v11 = v0[80];
  uint64_t v3 = v0[79];
  uint64_t v4 = v0[53];
  uint64_t v5 = v0[50];
  uint64_t v6 = v0[47];
  uint64_t v7 = v0[44];
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0[45] + 8);
  v8(v0[46], v7);
  v8(v6, v7);
  v12(v4, v5);
  sub_20A64BEC4(v3, (uint64_t (*)(void))sub_20A64B360);
  sub_20A64BEC4(v11, (uint64_t (*)(void))sub_20A64B360);
  v14(v13, v1);
  v19(v16, v15);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v18, v17);
  v14(v20, v1);
  v19(v21, v15);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_20A648F14@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v8 = sub_20A8C2CE0();
  uint64_t v33 = *(void *)(v8 - 8);
  uint64_t v34 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v26 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C2800();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v30 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v29 = (char *)&v25 - v14;
  uint64_t v15 = sub_20A8C3190();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1[1];
  uint64_t v28 = *a1;
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 24), *(void *)(a2 + 48));
  uint64_t v27 = v19;
  swift_bridgeObjectRetain();
  sub_20A8C3AC0();
  uint64_t v20 = sub_20A8C30C0();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (v20 < 0)
  {
    uint64_t result = sub_20A8CF510();
    __break(1u);
  }
  else
  {
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v21(v29, v31, v10);
    v21(v30, v32, v10);
    uint64_t v22 = sub_20A8C3F00();
    uint64_t v23 = v26;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v26, v35, v22);
    (*(void (**)(char *, void, uint64_t))(v33 + 104))(v23, *MEMORY[0x263F7A950], v34);
    return sub_20A8C2F10();
  }
  return result;
}

uint64_t sub_20A64926C@<X0>(uint64_t a1@<X2>, void **a2@<X3>, void **a3@<X4>, void **a4@<X5>, char *a5@<X8>)
{
  uint64_t v49 = a3;
  sub_20A64B360(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8C4020();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_20A8C30B0() & 1) == 0) {
    goto LABEL_4;
  }
  sub_20A649600(a1, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_20A64BEC4((uint64_t)v11, (uint64_t (*)(void))sub_20A64B360);
LABEL_4:
    uint64_t v16 = 1;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(a5, v16, 1, v12);
  }
  unint64_t v47 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v48 = v13 + 32;
  v47(v15, v11, v12);
  uint64_t v17 = sub_20A8C4000();
  uint64_t v19 = v18;
  uint64_t v20 = *a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v20;
  uint64_t v46 = a4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v20 = sub_20A46DEBC(0, v20[2] + 1, 1, v20);
    *a2 = v20;
  }
  unint64_t v23 = v20[2];
  unint64_t v22 = v20[3];
  if (v23 >= v22 >> 1)
  {
    uint64_t v20 = sub_20A46DEBC((void *)(v22 > 1), v23 + 1, 1, v20);
    *a2 = v20;
  }
  v20[2] = v23 + 1;
  uint64_t v24 = &v20[2 * v23];
  v24[4] = v17;
  void v24[5] = v19;
  uint64_t v25 = sub_20A8C4010();
  if (v26)
  {
    uint64_t v27 = v25;
    uint64_t v28 = v26;
    uint64_t v29 = v49;
    uint64_t v30 = *v49;
    char v31 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v29 = v30;
    if ((v31 & 1) == 0)
    {
      uint64_t v30 = sub_20A46DEBC(0, v30[2] + 1, 1, v30);
      *uint64_t v29 = v30;
    }
    unint64_t v33 = v30[2];
    unint64_t v32 = v30[3];
    if (v33 >= v32 >> 1)
    {
      uint64_t v30 = sub_20A46DEBC((void *)(v32 > 1), v33 + 1, 1, v30);
      *uint64_t v29 = v30;
    }
    v30[2] = v33 + 1;
    uint64_t v34 = &v30[2 * v33];
    v34[4] = v27;
    v34[5] = v28;
  }
  uint64_t v35 = sub_20A8C3FB0();
  if (v36)
  {
    uint64_t v37 = v35;
    uint64_t v38 = v36;
    uint64_t v39 = v46;
    uint64_t v40 = *v46;
    char v41 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v39 = v40;
    if ((v41 & 1) == 0)
    {
      uint64_t v40 = sub_20A46DEBC(0, v40[2] + 1, 1, v40);
      char *v46 = v40;
    }
    unint64_t v43 = v40[2];
    unint64_t v42 = v40[3];
    if (v43 >= v42 >> 1)
    {
      uint64_t v40 = sub_20A46DEBC((void *)(v42 > 1), v43 + 1, 1, v40);
      char *v46 = v40;
    }
    v40[2] = v43 + 1;
    uint64_t v44 = &v40[2 * v43];
    v44[4] = v37;
    v44[5] = v38;
  }
  v47(a5, v15, v12);
  uint64_t v16 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(a5, v16, 1, v12);
}

uint64_t sub_20A649600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v3 = sub_20A8C3F00();
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v54 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C2CE0();
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v52 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v50 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A64B360(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v58 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_20A8C3760();
  uint64_t v9 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8C33E0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_20A8C2E00();
  uint64_t v57 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v20 = MEMORY[0x270FA5388](v19);
  unint64_t v22 = (char *)&v49 - v21;
  (*(void (**)(char *, void, uint64_t, double))(v13 + 104))(v15, *MEMORY[0x263F7AB70], v12, v20);
  uint64_t v53 = a1;
  sub_20A8C2DC0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_20A64C5D8(0, &qword_26AC7FE90, MEMORY[0x263F7ACC0], MEMORY[0x263F8E0F8]);
  uint64_t v23 = sub_20A8C3750();
  uint64_t v24 = *(void *)(v23 - 8);
  unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v26 = swift_allocObject();
  long long v49 = xmmword_20A8D3DC0;
  *(_OWORD *)(v26 + 16) = xmmword_20A8D3DC0;
  unint64_t v27 = v26 + v25;
  uint64_t v28 = *MEMORY[0x263F7AB00];
  uint64_t v29 = sub_20A8C3240();
  uint64_t v30 = v28;
  uint64_t v31 = v16;
  uint64_t v32 = v57;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v27, v30, v29);
  (*(void (**)(unint64_t, void, uint64_t))(v24 + 104))(v27, *MEMORY[0x263F7ACB8], v23);
  sub_20A8C3740();
  sub_20A8C2DE0();
  unint64_t v33 = v11;
  uint64_t v34 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v33, v59);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v32 + 8);
  v35(v18, v31);
  uint64_t v59 = (uint64_t)v22;
  sub_20A684F34(v34);
  uint64_t v36 = sub_20A8C4020();
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v34, 1, v36) == 1)
  {
    sub_20A64BEC4(v34, (uint64_t (*)(void))sub_20A64B360);
    sub_20A43F778();
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = v49;
    uint64_t v39 = v50;
    sub_20A8C2DB0();
    uint64_t v40 = v54;
    sub_20A8C2CD0();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v39, v52);
    uint64_t v41 = sub_20A8C3EC0();
    uint64_t v43 = v42;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v40, v56);
    *(void *)(v38 + 56) = MEMORY[0x263F8D310];
    *(void *)(v38 + 64) = sub_20A43F830();
    *(void *)(v38 + 32) = v41;
    *(void *)(v38 + 40) = v43;
    sub_20A43F884();
    uint64_t v44 = (void *)sub_20A8CF180();
    sub_20A8CEA00();
    sub_20A8C7D90();
    swift_bridgeObjectRelease();

    v35((char *)v59, v31);
    uint64_t v45 = 1;
    uint64_t v46 = v60;
  }
  else
  {
    v35((char *)v59, v31);
    uint64_t v47 = v60;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v60, v34, v36);
    uint64_t v45 = 0;
    uint64_t v46 = v47;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v46, v45, 1, v36);
}

uint64_t sub_20A649CC4@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X3>, uint64_t *a3@<X4>, uint64_t *a4@<X5>, char *a5@<X8>)
{
  sub_20A64B360(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C4020();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v57 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_20A8C3120())
  {
    uint64_t v16 = a3;
    uint64_t v17 = *a2;
    uint64_t v18 = a4;
    uint64_t v54 = v16;
    uint64_t v19 = *v16;
    uint64_t v55 = v18;
    uint64_t v56 = a5;
    uint64_t v20 = *v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_20A8C3160();
    sub_20A64A0C0(a1, v17, v19, v20, (uint64_t)v12, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_20A64BEC4((uint64_t)v12, (uint64_t (*)(void))sub_20A64B360);
      uint64_t v22 = 1;
      a5 = v56;
    }
    else
    {
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      v23(v57, v12, v13);
      uint64_t v24 = sub_20A8C4000();
      uint64_t v26 = v25;
      unint64_t v27 = (void *)*a2;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a2 = (uint64_t)v27;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v27 = sub_20A46DEBC(0, v27[2] + 1, 1, v27);
        *a2 = (uint64_t)v27;
      }
      unint64_t v30 = v27[2];
      unint64_t v29 = v27[3];
      if (v30 >= v29 >> 1)
      {
        unint64_t v27 = sub_20A46DEBC((void *)(v29 > 1), v30 + 1, 1, v27);
        *a2 = (uint64_t)v27;
      }
      v27[2] = v30 + 1;
      uint64_t v31 = &v27[2 * v30];
      void v31[4] = v24;
      v31[5] = v26;
      uint64_t v32 = v57;
      uint64_t v33 = sub_20A8C4010();
      if (v34)
      {
        uint64_t v35 = v33;
        uint64_t v36 = v34;
        uint64_t v37 = v54;
        uint64_t v38 = (void *)*v54;
        char v39 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t *v37 = (uint64_t)v38;
        if ((v39 & 1) == 0)
        {
          uint64_t v38 = sub_20A46DEBC(0, v38[2] + 1, 1, v38);
          *uint64_t v54 = (uint64_t)v38;
        }
        unint64_t v41 = v38[2];
        unint64_t v40 = v38[3];
        if (v41 >= v40 >> 1)
        {
          uint64_t v38 = sub_20A46DEBC((void *)(v40 > 1), v41 + 1, 1, v38);
          *uint64_t v54 = (uint64_t)v38;
        }
        _OWORD v38[2] = v41 + 1;
        uint64_t v42 = &v38[2 * v41];
        v42[4] = v35;
        v42[5] = v36;
      }
      uint64_t v43 = sub_20A8C3FB0();
      if (v44)
      {
        uint64_t v45 = v43;
        uint64_t v46 = v44;
        uint64_t v47 = v55;
        uint64_t v48 = (void *)*v55;
        char v49 = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v47 = (uint64_t)v48;
        if ((v49 & 1) == 0)
        {
          uint64_t v48 = sub_20A46DEBC(0, v48[2] + 1, 1, v48);
          *uint64_t v55 = (uint64_t)v48;
        }
        unint64_t v51 = v48[2];
        unint64_t v50 = v48[3];
        if (v51 >= v50 >> 1)
        {
          uint64_t v48 = sub_20A46DEBC((void *)(v50 > 1), v51 + 1, 1, v48);
          *uint64_t v55 = (uint64_t)v48;
        }
        long long v48[2] = v51 + 1;
        uint64_t v52 = &v48[2 * v51];
        v52[4] = v45;
        v52[5] = v46;
      }
      a5 = v56;
      v23(v56, v32, v13);
      uint64_t v22 = 0;
    }
  }
  else
  {
    uint64_t v22 = 1;
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(a5, v22, 1, v13);
}

uint64_t sub_20A64A0C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  v62[1] = a4;
  uint64_t v71 = a3;
  v62[2] = a2;
  uint64_t v78 = a1;
  uint64_t v79 = a5;
  sub_20A64B360(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v68 = (char *)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_20A8C2E00();
  uint64_t v75 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  uint64_t v69 = (char *)v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v70 = (char *)v62 - v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v72 = (char *)v62 - v15;
  MEMORY[0x270FA5388](v16);
  unint64_t v73 = (char *)v62 - v17;
  uint64_t v76 = sub_20A8C3760();
  uint64_t v74 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v65 = (char *)v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_20A8C33E0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v81 = v19;
  uint64_t v82 = v20;
  MEMORY[0x270FA5388](v19);
  id v64 = (char *)v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v23 = MEMORY[0x270FA5388](v22);
  uint64_t v66 = (char *)v62 - v24;
  uint64_t v26 = *(void (**)(double))(v25 + 104);
  v62[4] = v25 + 104;
  uint64_t v63 = v26;
  v26(v23);
  sub_20A64C5D8(0, &qword_26AC7FE90, MEMORY[0x263F7ACC0], MEMORY[0x263F8E0F8]);
  uint64_t v27 = sub_20A8C3750();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void *)(v28 + 72);
  unint64_t v30 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = swift_allocObject();
  v62[3] = v31;
  *(_OWORD *)(v31 + 16) = xmmword_20A8E51F0;
  uint64_t v32 = (char *)(v31 + v30);
  *(void *)uint64_t v32 = a2;
  uint64_t v33 = *(void (**)(void))(v28 + 104);
  ((void (*)(char *, void, uint64_t))v33)(v32, *MEMORY[0x263F7AC98], v27);
  *(void *)&v32[v29] = a4;
  uint64_t v34 = *MEMORY[0x263F7AAE0];
  uint64_t v35 = sub_20A8C3240();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 104);
  uint64_t v38 = v36 + 104;
  v37(&v32[v29], v34, v35);
  v62[0] = v38;
  unsigned int v80 = *MEMORY[0x263F7ACB8];
  v33(&v32[v29]);
  *(double *)&v32[2 * v29] = a6;
  v37(&v32[2 * v29], *MEMORY[0x263F7AB20], v35);
  uint64_t v39 = v80;
  ((void (*)(char *, void, uint64_t))v33)(&v32[2 * v29], v80, v27);
  sub_20A4342F4(v67 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_headlineViewingHistory, (uint64_t)&v32[3 * v29]);
  v37(&v32[3 * v29], *MEMORY[0x263F7AB18], v35);
  ((void (*)(char *, uint64_t, uint64_t))v33)(&v32[3 * v29], v39, v27);
  uint64_t v40 = v29;
  v29 *= 4;
  v37(&v32[v29], *MEMORY[0x263F7AB00], v35);
  ((void (*)(char *, void, uint64_t))v33)(&v32[v29], v80, v27);
  uint64_t v41 = v29 + v40;
  uint64_t v42 = (uint64_t)v68;
  *(void *)&v32[v41] = v71;
  ((void (*)(void))v33)();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v43 = v65;
  sub_20A8C3740();
  uint64_t v44 = v64;
  uint64_t v45 = v81;
  ((void (*)(char *, void, uint64_t))v63)(v64, *MEMORY[0x263F7AB70], v81);
  uint64_t v46 = v69;
  sub_20A8C2DC0();
  uint64_t v47 = *(void (**)(char *, uint64_t))(v82 + 8);
  v82 += 8;
  v47(v44, v45);
  uint64_t v48 = v70;
  char v49 = v46;
  sub_20A8C2DE0();
  unint64_t v50 = *(void (**)(char *, uint64_t))(v75 + 8);
  unint64_t v51 = v49;
  uint64_t v52 = v77;
  v50(v51, v77);
  uint64_t v53 = v72;
  uint64_t v54 = v66;
  sub_20A8C2DC0();
  v50(v48, v52);
  uint64_t v55 = v73;
  sub_20A8C2DD0();
  v50(v53, v52);
  sub_20A684F34(v42);
  v50(v55, v52);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v43, v76);
  v47(v54, v81);
  uint64_t v56 = sub_20A8C4020();
  uint64_t v57 = *(void *)(v56 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v42, 1, v56) == 1)
  {
    sub_20A64BEC4(v42, (uint64_t (*)(void))sub_20A64B360);
    uint64_t v58 = 1;
    uint64_t v59 = v79;
  }
  else
  {
    uint64_t v60 = v79;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v79, v42, v56);
    uint64_t v58 = 0;
    uint64_t v59 = v60;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56))(v59, v58, 1, v56);
}

BOOL sub_20A64A890()
{
  return (sub_20A8CE210() & 1) == 0;
}

uint64_t sub_20A64A924(uint64_t a1)
{
  return a1;
}

uint64_t sub_20A64A978(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_20A64A9D4(uint64_t a1, uint64_t a2)
{
  sub_20A4BE14C(0, (unint64_t *)&unk_26AC684B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A64AA48(uint64_t a1)
{
  sub_20A4BE14C(0, (unint64_t *)&unk_26AC684B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_20A64AAB4(uint64_t a1)
{
  return sub_20A64AAE4(a1, (void (*)(void))sub_20A64C078);
}

unint64_t sub_20A64AACC(uint64_t a1)
{
  return sub_20A64AAE4(a1, sub_20A64BFF4);
}

unint64_t sub_20A64AAE4(uint64_t a1, void (*a2)(void))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  a2(0);
  uint64_t v3 = (void *)sub_20A8CF570();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_20A62F470(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A64AC00(uint64_t a1)
{
  sub_20A64BF24();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (void *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_20A64C014(0, &qword_26763CC68, MEMORY[0x263F59DE0]);
  uint64_t v7 = sub_20A8CF570();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  char v10 = (char *)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_20A64BF8C(v13, (uint64_t)v6, (uint64_t (*)(void))sub_20A64BF24);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_20A62F470(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = sub_20A8CD9F0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v10, v22);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    double v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20A64AE20(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_20A64AE7C(uint64_t a1, uint64_t a2)
{
  sub_20A4BE14C(0, (unint64_t *)&unk_26AC684B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A64AEF0()
{
  uint64_t v1 = sub_20A8C3F00();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A64AFD8(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_20A8C3F00() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_20A635D48;
  return sub_20A64366C(a1, v6, v7, v8);
}

uint64_t sub_20A64B0F0(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_20A635D48;
  return MEMORY[0x270FA2498](sub_20A643F18, 0, 0);
}

uint64_t sub_20A64B19C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  return swift_deallocObject();
}

void sub_20A64B1E4(uint64_t a1)
{
}

void sub_20A64B218(uint64_t a1)
{
}

uint64_t sub_20A64B260()
{
  return sub_20A642E24(&qword_26AC81300, MEMORY[0x263F59BE8]);
}

void sub_20A64B294(uint64_t a1)
{
}

void sub_20A64B2C8(uint64_t a1)
{
}

void sub_20A64B2FC()
{
  if (!qword_26AC69028)
  {
    sub_20A64B360(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC69028);
    }
  }
}

void sub_20A64B360(uint64_t a1)
{
}

void sub_20A64B394()
{
  if (!qword_26763CC58)
  {
    sub_20A64C5D8(255, &qword_26763CC60, MEMORY[0x263F7AB30], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763CC58);
    }
  }
}

uint64_t sub_20A64B430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a3;
  uint64_t v36 = a1;
  uint64_t v37 = sub_20A8C2E00();
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v31 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v30 = (char *)&v28 - v6;
  uint64_t v7 = sub_20A8C3760();
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_20A8C33E0();
  uint64_t v10 = *(void *)(v29 - 8);
  double v11 = MEMORY[0x270FA5388](v29);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, double))(v10 + 104))(v13, *MEMORY[0x263F7AB68], v11);
  sub_20A64C5D8(0, &qword_26AC7FE90, MEMORY[0x263F7ACC0], MEMORY[0x263F8E0F8]);
  uint64_t v14 = sub_20A8C3750();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_20A8D4540;
  unint64_t v19 = (void *)(v18 + v17);
  *unint64_t v19 = a2;
  uint64_t v20 = *(void (**)(void))(v15 + 104);
  ((void (*)(void *, void, uint64_t))v20)(v19, *MEMORY[0x263F7AC98], v14);
  *(void *)((char *)v19 + v16) = v32;
  v20();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A8C3740();
  uint64_t v21 = v31;
  sub_20A8C2DC0();
  uint64_t v22 = v30;
  sub_20A8C2DE0();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v35 + 8);
  BOOL v24 = v21;
  uint64_t v25 = v37;
  v23(v24, v37);
  uint64_t v26 = sub_20A8C2DF0();
  v23(v22, v25);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v34);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v29);
  return v26;
}

uint64_t sub_20A64B7FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_20A64B864(uint64_t a1)
{
  uint64_t v40 = sub_20A8CD220();
  uint64_t v2 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v38 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v35 - v5;
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_20A8C2530();
  uint64_t v45 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v42 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C2120();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_20A8CD480();
  MEMORY[0x270FA5388](v14 - 8);
  sub_20A64C5D8(0, &qword_26AC80020, MEMORY[0x263F59BA0], MEMORY[0x263F8E0F8]);
  uint64_t v15 = *(void *)(v2 + 72);
  uint64_t v39 = v2;
  unint64_t v16 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  uint64_t v36 = v15;
  unint64_t v17 = swift_allocObject();
  long long v43 = xmmword_20A8D3DC0;
  *(_OWORD *)(v17 + 16) = xmmword_20A8D3DC0;
  sub_20A8C3EF0();
  sub_20A8CD470();
  swift_bridgeObjectRelease();
  sub_20A8CD210();
  uint64_t v44 = a1;
  uint64_t v46 = sub_20A8C3EC0();
  unint64_t v47 = v18;
  sub_20A8C20E0();
  sub_20A48C5C0();
  sub_20A8CF230();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_bridgeObjectRelease();
  if (!v20) {
    goto LABEL_4;
  }
  uint64_t v46 = 0;
  unint64_t v47 = 0xE000000000000000;
  sub_20A8CF3C0();
  swift_bridgeObjectRelease();
  uint64_t v46 = 0x3F3A736B636F7473;
  unint64_t v47 = 0xEF3D6C6F626D7973;
  sub_20A8CE3D0();
  swift_bridgeObjectRelease();
  sub_20A8C2520();
  swift_bridgeObjectRelease();
  uint64_t v21 = v45;
  uint64_t v22 = v41;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v8, 1, v41) == 1)
  {
    sub_20A64BEC4((uint64_t)v8, (uint64_t (*)(void))sub_20A4845D0);
LABEL_4:
    sub_20A43F778();
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = v43;
    uint64_t v24 = sub_20A8C3EC0();
    uint64_t v26 = v25;
    *(void *)(v23 + 56) = MEMORY[0x263F8D310];
    *(void *)(v23 + 64) = sub_20A43F830();
    *(void *)(v23 + 32) = v24;
    *(void *)(v23 + 40) = v26;
    sub_20A43F884();
    uint64_t v27 = (void *)sub_20A8CF180();
    sub_20A8CEA00();
    sub_20A8C7D90();
    swift_bridgeObjectRelease();

    return v17;
  }
  (*(void (**)(char *, char *))(v21 + 32))(v42, v8);
  sub_20A8CD450();
  uint64_t v28 = v37;
  sub_20A8CD210();
  unint64_t v30 = v38;
  uint64_t v29 = v39;
  uint64_t v31 = v40;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v38, v28, v40);
  unint64_t v33 = *(void *)(v17 + 16);
  unint64_t v32 = *(void *)(v17 + 24);
  if (v33 >= v32 >> 1) {
    unint64_t v17 = sub_20A46E3C4(v32 > 1, v33 + 1, 1, v17);
  }
  *(void *)(v17 + 16) = v33 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v17 + v16 + v33 * v36, v30, v31);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v31);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v22);
  return v17;
}

unint64_t sub_20A64BE50()
{
  unint64_t result = qword_26AC77D48;
  if (!qword_26AC77D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC77D48);
  }
  return result;
}

BOOL sub_20A64BEA4()
{
  return sub_20A64A890();
}

uint64_t sub_20A64BEC4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A64BF24()
{
  if (!qword_26AC7F6A0)
  {
    sub_20A8CD9F0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC7F6A0);
    }
  }
}

uint64_t sub_20A64BF8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_20A64BFF4(uint64_t a1)
{
}

void sub_20A64C014(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF580();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_20A64C078()
{
  if (!qword_26763CC78)
  {
    sub_20A64C5D8(255, &qword_26763CC80, MEMORY[0x263F59BA0], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_20A8CF580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763CC78);
    }
  }
}

uint64_t sub_20A64C110@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A648F14(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

void sub_20A64C134(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_20A64C1B4()
{
  sub_20A64C134(0, &qword_26AC82B10, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_20A4F0534, MEMORY[0x263F59758]);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_20A64C288(uint64_t a1)
{
  sub_20A64C134(0, &qword_26AC82B10, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_20A4F0534, MEMORY[0x263F59758]);
  uint64_t v5 = v1
     + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_20A635D48;
  v6[193] = v5;
  v6[187] = a1;
  return MEMORY[0x270FA2498](sub_20A63EEE4, 0, 0);
}

uint64_t sub_20A64C3BC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_20A635D48;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_20A635D48;
  return MEMORY[0x270F7A5E8](a1);
}

uint64_t objectdestroy_45Tm()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A64C4F0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_20A635D48;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_20A490F70;
  return MEMORY[0x270F7A5E8](a1);
}

void sub_20A64C5D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_20A64C63C()
{
  unint64_t result = qword_26AC69688;
  if (!qword_26AC69688)
  {
    sub_20A64C5D8(255, (unint64_t *)&unk_26AC69690, (uint64_t (*)(uint64_t))type metadata accessor for StockForYouFeedGroupEmitter, MEMORY[0x263F7CE78]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC69688);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StockForYouFeedGroupEmitter.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A64C760);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockForYouFeedGroupEmitter.Errors()
{
  return &type metadata for StockForYouFeedGroupEmitter.Errors;
}

unint64_t sub_20A64C79C()
{
  unint64_t result = qword_26763CCC8;
  if (!qword_26763CCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763CCC8);
  }
  return result;
}

BOOL sub_20A64C7F0()
{
  return sub_20A64BEA4();
}

uint64_t *sub_20A64C810(uint64_t *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C2E80();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    long long v14 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)v4 + v13 + 24) = v14;
    (**(void (***)(void))(v14 - 8))();
    uint64_t v15 = a3[7];
    long long v16 = *(_OWORD *)((char *)a2 + v15 + 24);
    *(_OWORD *)((char *)v4 + v15 + 24) = v16;
    (**(void (***)(void))(v16 - 8))();
    uint64_t v17 = a3[8];
    long long v18 = *(_OWORD *)((char *)a2 + v17 + 24);
    *(_OWORD *)((char *)v4 + v17 + 24) = v18;
    (**(void (***)(void))(v18 - 8))();
    uint64_t v19 = a3[9];
    long long v20 = *(_OWORD *)((char *)a2 + v19 + 24);
    *(_OWORD *)((char *)v4 + v19 + 24) = v20;
    (**(void (***)(void))(v20 - 8))();
  }
  return v4;
}

uint64_t sub_20A64CA58(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_20A8C2E80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[6]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[7]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[8]);
  uint64_t v6 = a1 + a2[9];

  return __swift_destroy_boxed_opaque_existential_1(v6);
}

void *sub_20A64CB08(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C2E80();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  long long v13 = *(_OWORD *)((char *)a2 + v12 + 24);
  *(_OWORD *)((char *)a1 + v12 + 24) = v13;
  (**(void (***)(void))(v13 - 8))();
  uint64_t v14 = a3[7];
  long long v15 = *(_OWORD *)((char *)a2 + v14 + 24);
  *(_OWORD *)((char *)a1 + v14 + 24) = v15;
  (**(void (***)(void))(v15 - 8))();
  uint64_t v16 = a3[8];
  long long v17 = *(_OWORD *)((char *)a2 + v16 + 24);
  *(_OWORD *)((char *)a1 + v16 + 24) = v17;
  (**(void (***)(void))(v17 - 8))();
  uint64_t v18 = a3[9];
  long long v19 = *(_OWORD *)((char *)a2 + v18 + 24);
  *(_OWORD *)((char *)a1 + v18 + 24) = v19;
  (**(void (***)(void))(v19 - 8))();
  return a1;
}

void *sub_20A64CD00(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2E80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + a3[6]), (void *)((char *)a2 + a3[6]));
  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + a3[7]), (void *)((char *)a2 + a3[7]));
  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + a3[8]), (void *)((char *)a2 + a3[8]));
  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + a3[9]), (void *)((char *)a2 + a3[9]));
  return a1;
}

_OWORD *sub_20A64CDE4(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2E80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  long long v13 = (char *)a2 + v10;
  *((void *)v12 + 4) = *((void *)v13 + 4);
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  long long v15 = (char *)a1 + v11;
  uint64_t v16 = (char *)a2 + v11;
  *((void *)v15 + 4) = *((void *)v16 + 4);
  long long v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)long long v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  long long v20 = (char *)a1 + v18;
  uint64_t v21 = (char *)a2 + v18;
  long long v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)long long v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v22;
  *((void *)v20 + 4) = *((void *)v21 + 4);
  uint64_t v23 = (char *)a1 + v19;
  uint64_t v24 = (char *)a2 + v19;
  long long v25 = *(_OWORD *)v24;
  long long v26 = *((_OWORD *)v24 + 1);
  *((void *)v23 + 4) = *((void *)v24 + 4);
  *(_OWORD *)uint64_t v23 = v25;
  *((_OWORD *)v23 + 1) = v26;
  return a1;
}

void *sub_20A64CED8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C2E80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  long long v13 = (char *)a2 + v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v11);
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((void *)v12 + 4) = *((void *)v13 + 4);
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  long long v17 = (char *)a2 + v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v15);
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((void *)v16 + 4) = *((void *)v17 + 4);
  uint64_t v19 = a3[8];
  long long v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v19);
  long long v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)long long v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v22;
  *((void *)v20 + 4) = *((void *)v21 + 4);
  uint64_t v23 = a3[9];
  uint64_t v24 = (char *)a1 + v23;
  long long v25 = (char *)a2 + v23;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v23);
  long long v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v26;
  *((void *)v24 + 4) = *((void *)v25 + 4);
  return a1;
}

uint64_t sub_20A64CFFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A64D010);
}